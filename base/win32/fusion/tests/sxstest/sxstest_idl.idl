// Copyright (c) Microsoft Corporation
import "oaidl.idl";
import "ocidl.idl";
#include "fusionguids.h"
cpp_quote("#pragma warning(disable:4152) /* non standard extension */ ")
cpp_quote("#pragma warning(disable:4232) /* non standard extension */ ")
[
    object,
    uuid(IID_ISxsTest_FreeThreaded_midl),
    pointer_default(unique)
]
interface ISxsTest_FreeThreaded : IUnknown
{
};
[
    object,
    uuid(IID_ISxsTest_SingleThreaded_midl),
    pointer_default(unique)
]
interface ISxsTest_SingleThreaded : IUnknown
{
    HRESULT OutputDebugStringA([in]const char * s);
};
[
    object,
    uuid(IID_ISxsTest_SingleThreadedDual_midl),
    pointer_default(unique),
    dual,
    oleautomation
]
interface ISxsTest_SingleThreadedDual : IDispatch
{
    HRESULT OutputDebugStringA([in]const char * s);
};
[
    object,
    uuid(IID_ISxsTest_ApartmentThreaded_midl),
    pointer_default(unique)
]
interface ISxsTest_ApartmentThreaded : IUnknown
{
};
[
    object,
    uuid(IID_ISxsTest_BothThreaded_midl),
    pointer_default(unique)
]
interface ISxsTest_BothThreaded : IUnknown
{
};

[
    uuid(LIBID_SxsTest_Lib_midl)
]
library SxsTest_Lib
{
    importlib("stdole32.tlb");
    importlib("stdole2.tlb");

    [ uuid(CLSID_CSxsTest_FreeThreaded_midl) ]
    coclass CSxsTest_FreeThreaded
    {
        [default] interface ISxsTest_FreeThreaded;
    };

    [ uuid(CLSID_CSxsTest_SingleThreaded_midl) ]
    coclass CSxsTest_SingleThreaded
    {
        [default] interface ISxsTest_SingleThreaded;
    };

    [ uuid(CLSID_CSxsTest_SingleThreadedDual_midl) ]
    coclass CSxsTest_SingleThreadedDual
    {
        [default] interface ISxsTest_SingleThreadedDual;
    };


    [ uuid(CLSID_CSxsTest_ApartmentThreaded_midl) ]
    coclass CSxsTest_ApartmentThreaded
    {
        [default] interface ISxsTest_ApartmentThreaded;
    };

    [ uuid(CLSID_CSxsTest_BothThreaded_midl) ]
    coclass CSxsTest_BothThreaded
    {
        [default] interface ISxsTest_BothThreaded;
    };
};
