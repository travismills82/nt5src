/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  Microsoft Windows, Copyright (C) Microsoft Corporation, 2000 - 2001.

  File:    stdafx.h

  Content: Include file, generated by ATL, for standard system include files,
           or project specific include files that are used frequently,
           but are changed infrequently

  History: 11-15-99    dsie     created

------------------------------------------------------------------------------*/


#if !defined(AFX_STDAFX_H__DC6F3774_66B7_4578_91AD_7950EF7CAF8A__INCLUDED_)
#define AFX_STDAFX_H__DC6F3774_66B7_4578_91AD_7950EF7CAF8A__INCLUDED_

//
// Turn off:
//
// - Unreferenced formal parameter warning.
// - Assignment within conditional expression warning.
//
#pragma warning (disable: 4100)
#pragma warning (disable: 4706)

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#define STRICT
#ifndef _WIN32_WINNT
#define _WIN32_WINNT 0x0400
#endif
#define _ATL_APARTMENT_THREADED

// Extra fields in CERT_CHAIN_PARA.
#define CERT_CHAIN_PARA_HAS_EXTRA_FIELDS 1

#include <atlbase.h>

//You may derive a class from CComModule and use it if you want to override
//something, but do not change the name of _Module
extern CComModule _Module;
#include <atlcom.h>
#include <atlwin.h>
#include <atlctl.h>

//
// Global includes.
//
// Set warning level to 3 for MSVC vector class.
#pragma warning(push,3)
#include <vector>
#pragma warning(pop)
#include <map>
#include <activeds.h>
#include <cryptui.h>
#include <exdisp.h>
#include <mssip.h>
#include <servprov.h>
#include <shlguid.h>
#include <signer.h>
#include <softpub.h>
#include <unicode.h>
#include <wintrust.h>
#include <wincrypt.h>
#include <winscard.h>
#include <wininet.h>

//
// Global defines.
//
#define CAPICOM_VERSION                     ((DWORD) ((CAPICOM_MAJOR_VERSION << 16) | CAPICOM_MINOR_VERSION))
#define CAPICOM_ASN_ENCODING                (X509_ASN_ENCODING | PKCS_7_ASN_ENCODING)

#define ARRAYSIZE(x)                        (sizeof(x) / sizeof(x[0]))

#define szOID_CAPICOM                       "1.3.6.1.4.1.311.88"     // Reserved for CAPICOM.
#define szOID_CAPICOM_VERSION               "1.3.6.1.4.1.311.88.1"   // CAPICOM version
#define szOID_CAPICOM_ATTRIBUTE             "1.3.6.1.4.1.311.88.2"   // CAPICOM attribute
#define szOID_CAPICOM_DOCUMENT_NAME         "1.3.6.1.4.1.311.88.2.1" // Document type attribute
#define szOID_CAPICOM_DOCUMENT_DESCRIPTION  "1.3.6.1.4.1.311.88.2.2" // Document description attribute
#define szOID_CAPICOM_ENCRYPTED_DATA        "1.3.6.1.4.1.311.88.3"   // CAPICOM encrypted data message.
#define szOID_CAPICOM_ENCRYPTED_CONTENT     "1.3.6.1.4.1.311.88.3.1" // CAPICOM content of encrypted data.

#define CAPICOM_NO_PERSIST_CONTAINER_NAME   L"//Temporary Container Indicator//"

#ifndef SAFE_SUBTRACT_POINTERS
#define SAFE_SUBTRACT_POINTERS(__x__, __y__) ( DW_PtrDiffc(__x__, sizeof(*(__x__)), __y__, sizeof(*(__y__))) )

__inline DWORD
DW_PtrDiffc(
    IN void const *pb1,
    IN DWORD dwPtrEltSize1,
    IN void const *pb2,
    IN DWORD dwPtrEltSize2)
{
    // pb1 should be greater
    ATLASSERT((ULONG_PTR)pb1 >= (ULONG_PTR)pb2);

    // both should have same elt size
    ATLASSERT(dwPtrEltSize1 == dwPtrEltSize2);

    // assert that the result doesn't overflow 32-bits
    ATLASSERT((DWORD)((ULONG_PTR)pb1 - (ULONG_PTR)pb2) == (ULONG_PTR)((ULONG_PTR)pb1 - (ULONG_PTR)pb2));

    // return number of objects between these pointers
    return (DWORD) ( ((ULONG_PTR)pb1 - (ULONG_PTR)pb2) / dwPtrEltSize1 );
}
#endif SAFE_SUBTRACT_POINTERS

#pragma hdrstop

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_STDAFX_H__DC6F3774_66B7_4578_91AD_7950EF7CAF8A__INCLUDED)
