/*++

Copyright (c) 1997 Microsoft Corporation.
All rights reserved.

MODULE NAME:

    ism.idl

ABSTRACT:

    Service-to-ISM RPC interface definition for the Intersite Messaging (ISM)
    service.

DETAILS:

CREATED:

    97/11/26    Jeff Parham (jeffparh)

REVISION HISTORY:

--*/

[   uuid(68dcd486-669e-11d1-ab0c-00c04fc2dcd2), version(2.0),
    pointer_default(unique)
] interface ismapi
{

import "wtypes.idl";
import "ismapi.h";

// LPC endpoint for the ISM service.
cpp_quote("#define ISMSERV_LPC_ENDPOINT \"ISMSERV_LPC\"")

// Declared as [allocate(dont_free, all_nodes)] in ism.acf.
typedef ISM_MSG *                   PISM_MSG_df_an;
typedef ISM_CONNECTIVITY *          PISM_CONNECTIVITY_df_an;
typedef ISM_SERVER_LIST *           PISM_SERVER_LIST_df_an;
typedef ISM_SCHEDULE *              PISM_SCHEDULE_df_an;
typedef ISM_SITE_COST_INFO_ARRAY *  PISM_SITE_COST_INFO_ARRAY_df_an;


//==============================================================================
//
//  Function interface.
//

DWORD
IDL_ISMSend(
    [in]              handle_t                        hRpcBinding,
    [in, ref]         const ISM_MSG *                 pMsg,
    [in, ref, string] LPCWSTR                         pszServiceName,
    [in, ref, string] LPCWSTR                         pszTransportDN,
    [in, ref, string] LPCWSTR                         pszTransportAddress
    );

DWORD
IDL_ISMReceive(
    [in]              handle_t                        hRpcBinding,
    [in, ref, string] LPCWSTR                         pszServiceName,
    [in]              DWORD                           dwMsecToWait,
    [out, ref]        PISM_MSG_df_an *                ppMsg
    );

DWORD
IDL_ISMGetConnectivity(
    [in]              handle_t                        hRpcBinding,
    [in, ref, string] LPCWSTR                         pszTransportDN,
    [out, ref]        PISM_CONNECTIVITY_df_an *       ppConnectivity
    );

DWORD
IDL_ISMGetTransportServers(
    [in]              handle_t                        hRpcBinding,
    [in, ref, string] LPCWSTR                         pszTransportDN,
    [in, ref, string] LPCWSTR                         pszSiteDN,
    [out, ref]        PISM_SERVER_LIST_df_an *        ppServerList
    );

DWORD
IDL_ISMGetConnectionSchedule(
    [in]              handle_t                        hRpcBinding,
    [in, ref, string] LPCWSTR                         pszTransportDN,
    [in, ref, string] LPCWSTR                         pszSiteDN1,
    [in, ref, string] LPCWSTR                         pszSiteDN2,
    [out, ref]        PISM_SCHEDULE_df_an *           ppSchedule
    );

DWORD
IDL_ISMQuerySitesByCost(
    [in]                            handle_t                        hRpcBinding,
    [in, ref, string]               LPCWSTR                         pszTransportDN,
    [in, ref, string]               LPCWSTR                         pszFromSite,
    [in, range(1,10000)]            DWORD                           cToSites,
    [in, ref, string, size_is(cToSites)]
                                    LPCWSTR                         *rgszToSites,
    [in]                            DWORD                           dwFlags,
    [out, ref]                      PISM_SITE_COST_INFO_ARRAY_df_an *prgSiteInfo
    );

} // interface ismapi
