// Created by Microsoft (R) C/C++ Compiler Version 13.00.9176 (25ae14c0).
//
// d:\nt\windows\appcompat\appverifier\vsaddin\obj\i386\VCProjectEngine.tlh
//
// C++ source equivalent of Win32 type library 9f367018-33c6-11d3-8d52-00c04f8ecdb6
// compiler-generated file created 01/24/02 at 16:21:10 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace VCProjectEngineLibrary {

//
// Forward references and typedefs
//

struct __declspec(uuid("9f367018-33c6-11d3-8d52-00c04f8ecdb6"))
/* LIBID */ __VCProjectEngineLibrary;
struct __declspec(uuid("6b5125e9-aa7c-11d2-8d0f-00c04f8eea30"))
/* dual interface */ VCCLCompilerTool;
enum warningLevelOption;
enum debugOption;
enum compileAsManagedOptions;
enum optimizeOption;
enum inlineExpansionOption;
enum favorSizeOrSpeedOption;
enum ProcessorOptimizeOption;
enum preprocessOption;
enum basicRuntimeCheckOption;
enum runtimeLibraryOption;
enum structMemberAlignOption;
enum pchOption;
enum asmListingOption;
enum browseInfoOption;
enum callingConventionOption;
enum CompileAsOptions;
struct __declspec(uuid("bee77b68-f846-11d2-8b4e-00c04f7956c9"))
/* dual interface */ VCLinkerTool;
enum linkProgressOption;
enum linkIncrementalType;
enum subSystemOption;
enum addressAwarenessType;
enum termSvrAwarenessType;
enum optRefType;
enum optFoldingType;
enum optWin98Type;
enum machineTypeOption;
struct __declspec(uuid("bee77b6b-f846-11d2-8b4e-00c04f7956c9"))
/* dual interface */ VCLibrarianTool;
struct __declspec(uuid("0a35da51-aaad-11d2-8d0f-00c04f8eea30"))
/* dual interface */ VCCustomBuildTool;
struct __declspec(uuid("0ac5b928-f78e-11d2-8b4e-00c04f7956c9"))
/* dual interface */ VCMidlTool;
enum midlWarningLevelOption;
enum midlCharOption;
enum midlTargetEnvironment;
enum midlErrorCheckOption;
enum midlStructMemberAlignOption;
struct __declspec(uuid("9c22188a-f83a-11d2-8b4e-00c04f7956c9"))
/* dual interface */ VCResourceCompilerTool;
enum enumResourceLangID;
struct __declspec(uuid("5fe8c14a-3bda-11d3-b976-00c04f685d26"))
/* dual interface */ VCPreBuildEventTool;
struct __declspec(uuid("5fe8c14d-3bda-11d3-b976-00c04f685d26"))
/* dual interface */ VCPreLinkEventTool;
struct __declspec(uuid("5fe8c150-3bda-11d3-b976-00c04f685d26"))
/* dual interface */ VCPostBuildEventTool;
struct __declspec(uuid("bee77b72-f846-11d2-8b4e-00c04f7956c9"))
/* dual interface */ VCBscMakeTool;
struct __declspec(uuid("5ad57b85-609c-11d3-941f-00c04f68fb62"))
/* dual interface */ VCNMakeTool;
struct __declspec(uuid("0c9ed780-690d-4f0e-8377-9aedf15cf9fa"))
/* dual interface */ VCWebServiceProxyGeneratorTool;
enum genProxyLanguage;
struct __declspec(uuid("3c8d096c-9043-4b0d-b889-19d3938bb8da"))
/* dual interface */ VCWebDeploymentTool;
enum eAppProtectionOption;
struct __declspec(uuid("a54aae87-30c2-11d3-87bf-a04a4cc10000"))
/* dual interface */ VCDebugSettings;
enum RemoteDebuggerType;
enum TypeOfDebugger;
struct __declspec(uuid("a54aae9a-30c2-11d3-87bf-a04a4cc10000"))
/* dual interface */ IVCCollection;
struct __declspec(uuid("a54aae90-30c2-11d3-87bf-a04a4cc10000"))
/* dual interface */ VCPlatform;
struct __declspec(uuid("33f3d4a0-6763-4b88-b8c5-478446efb51e"))
/* dual interface */ VCProjectItem;
struct __declspec(uuid("625c6494-2c7e-11d3-87bf-a0494cc10000"))
/* dual interface */ VCProject;
enum enumFileFormat;
struct __declspec(uuid("625c6497-2c7e-11d3-87bf-a0494cc10000"))
/* dual interface */ VCFile;
struct __declspec(uuid("625c649a-2c7e-11d3-87bf-a0494cc10000"))
/* dual interface */ VCFilter;
struct __declspec(uuid("625c649d-2c7e-11d3-87bf-a0494cc10000"))
/* dual interface */ VCConfiguration;
enum ConfigurationTypes;
enum useOfMfc;
enum useOfATL;
enum charSet;
struct __declspec(uuid("cc7aebb9-a788-11d3-b99f-00c04f685d26"))
/* dual interface */ VCStyleSheet;
enum toolSetType;
struct __declspec(uuid("a54aae8a-30c2-11d3-87bf-a04a4cc10000"))
/* dual interface */ VCFileConfiguration;
struct __declspec(uuid("66dc6c13-d282-11d2-8d1a-00c04f8eea30"))
/* dual interface */ IVCProjectEngineEvents;
enum enumSccEvent;
struct __declspec(uuid("5f495f17-94d6-43d2-af66-490aa1e04a79"))
/* dispinterface */ _dispVCProjectEngineEvents;
struct __declspec(uuid("5f495f18-94d6-43d2-af66-490aa1e04a79"))
/* dual interface */ _VCProjectEngineEvents;
struct /* coclass */ VCProjectEngineEvents;
struct /* coclass */ VCProjectEngineObject;
struct __declspec(uuid("9f367026-33c6-11d3-8d52-00c04f8ecdb6"))
/* dual interface */ VCProjectEngine;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(VCCLCompilerTool, __uuidof(VCCLCompilerTool));
_COM_SMARTPTR_TYPEDEF(VCLinkerTool, __uuidof(VCLinkerTool));
_COM_SMARTPTR_TYPEDEF(VCLibrarianTool, __uuidof(VCLibrarianTool));
_COM_SMARTPTR_TYPEDEF(VCCustomBuildTool, __uuidof(VCCustomBuildTool));
_COM_SMARTPTR_TYPEDEF(VCMidlTool, __uuidof(VCMidlTool));
_COM_SMARTPTR_TYPEDEF(VCResourceCompilerTool, __uuidof(VCResourceCompilerTool));
_COM_SMARTPTR_TYPEDEF(VCPreBuildEventTool, __uuidof(VCPreBuildEventTool));
_COM_SMARTPTR_TYPEDEF(VCPreLinkEventTool, __uuidof(VCPreLinkEventTool));
_COM_SMARTPTR_TYPEDEF(VCPostBuildEventTool, __uuidof(VCPostBuildEventTool));
_COM_SMARTPTR_TYPEDEF(VCBscMakeTool, __uuidof(VCBscMakeTool));
_COM_SMARTPTR_TYPEDEF(VCNMakeTool, __uuidof(VCNMakeTool));
_COM_SMARTPTR_TYPEDEF(VCWebServiceProxyGeneratorTool, __uuidof(VCWebServiceProxyGeneratorTool));
_COM_SMARTPTR_TYPEDEF(VCWebDeploymentTool, __uuidof(VCWebDeploymentTool));
_COM_SMARTPTR_TYPEDEF(VCDebugSettings, __uuidof(VCDebugSettings));
_COM_SMARTPTR_TYPEDEF(IVCCollection, __uuidof(IVCCollection));
_COM_SMARTPTR_TYPEDEF(VCPlatform, __uuidof(VCPlatform));
_COM_SMARTPTR_TYPEDEF(VCProjectItem, __uuidof(VCProjectItem));
_COM_SMARTPTR_TYPEDEF(VCProject, __uuidof(VCProject));
_COM_SMARTPTR_TYPEDEF(VCFile, __uuidof(VCFile));
_COM_SMARTPTR_TYPEDEF(VCFilter, __uuidof(VCFilter));
_COM_SMARTPTR_TYPEDEF(VCConfiguration, __uuidof(VCConfiguration));
_COM_SMARTPTR_TYPEDEF(VCStyleSheet, __uuidof(VCStyleSheet));
_COM_SMARTPTR_TYPEDEF(VCFileConfiguration, __uuidof(VCFileConfiguration));
_COM_SMARTPTR_TYPEDEF(IVCProjectEngineEvents, __uuidof(IVCProjectEngineEvents));
_COM_SMARTPTR_TYPEDEF(_dispVCProjectEngineEvents, __uuidof(_dispVCProjectEngineEvents));
_COM_SMARTPTR_TYPEDEF(_VCProjectEngineEvents, __uuidof(_VCProjectEngineEvents));
_COM_SMARTPTR_TYPEDEF(VCProjectEngine, __uuidof(VCProjectEngine));

//
// Type library items
//

enum warningLevelOption
{
    warningLevel_0 = 0,
    warningLevel_1 = 1,
    warningLevel_2 = 2,
    warningLevel_3 = 3,
    warningLevel_4 = 4
};

enum debugOption
{
    debugDisabled = 0,
    debugOldStyleInfo = 1,
    debugLineInfoOnly = 2,
    debugEnabled = 3,
    debugEditAndContinue = 4
};

enum compileAsManagedOptions
{
    managedNotSet = 0,
    managedAssembly = 2
};

enum optimizeOption
{
    optimizeDisabled = 0,
    optimizeMinSpace = 1,
    optimizeMaxSpeed = 2,
    optimizeFull = 3,
    optimizeCustom = 4
};

enum inlineExpansionOption
{
    expandDisable = 0,
    expandOnlyInline = 1,
    expandAnySuitable = 2
};

enum favorSizeOrSpeedOption
{
    favorNone = 0,
    favorSpeed = 1,
    favorSize = 2
};

enum ProcessorOptimizeOption
{
    procOptimizeBlended = 0,
    procOptimizePentium = 1,
    procOptimizePentiumProAndAbove = 2
};

enum preprocessOption
{
    preprocessNo = 0,
    preprocessYes = 1,
    preprocessNoLineNumbers = 2
};

enum basicRuntimeCheckOption
{
    runtimeBasicCheckNone = 0,
    runtimeCheckStackFrame = 1,
    runtimeCheckUninitVariables = 2,
    runtimeBasicCheckAll = 3
};

enum runtimeLibraryOption
{
    rtMultiThreaded = 0,
    rtMultiThreadedDebug = 1,
    rtMultiThreadedDLL = 2,
    rtMultiThreadedDebugDLL = 3,
    rtSingleThreaded = 4,
    rtSingleThreadedDebug = 5
};

enum structMemberAlignOption
{
    alignNotSet = 0,
    alignSingleByte = 1,
    alignTwoBytes = 2,
    alignFourBytes = 3,
    alignEightBytes = 4,
    alignSixteenBytes = 5
};

enum pchOption
{
    pchNone = 0,
    pchCreateUsingSpecific = 1,
    pchGenerateAuto = 2,
    pchUseUsingSpecific = 3
};

enum asmListingOption
{
    asmListingNone = 0,
    asmListingAssemblyOnly = 1,
    asmListingAsmMachineSrc = 2,
    asmListingAsmMachine = 3,
    asmListingAsmSrc = 4
};

enum browseInfoOption
{
    brInfoNone = 0,
    brAllInfo = 1,
    brNoLocalSymbols = 2
};

enum callingConventionOption
{
    callConventionCDecl = 0,
    callConventionFastCall = 1,
    callConventionStdCall = 2
};

enum CompileAsOptions
{
    compileAsDefault = 0,
    compileAsC = 1,
    compileAsCPlusPlus = 2
};

struct __declspec(uuid("6b5125e9-aa7c-11d2-8d0f-00c04f8eea30"))
VCCLCompilerTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * Options ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR Options ) = 0;
      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_WarningLevel (
        /*[out,retval]*/ enum warningLevelOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_WarningLevel (
        /*[in]*/ enum warningLevelOption optSetting ) = 0;
      virtual HRESULT __stdcall get_WarnAsError (
        /*[out,retval]*/ VARIANT_BOOL * WarnAsError ) = 0;
      virtual HRESULT __stdcall put_WarnAsError (
        /*[in]*/ VARIANT_BOOL WarnAsError ) = 0;
      virtual HRESULT __stdcall get_SuppressStartupBanner (
        /*[out,retval]*/ VARIANT_BOOL * NoLogo ) = 0;
      virtual HRESULT __stdcall put_SuppressStartupBanner (
        /*[in]*/ VARIANT_BOOL NoLogo ) = 0;
      virtual HRESULT __stdcall get_Detect64BitPortabilityProblems (
        /*[out,retval]*/ VARIANT_BOOL * DetectPortabilityProblems ) = 0;
      virtual HRESULT __stdcall put_Detect64BitPortabilityProblems (
        /*[in]*/ VARIANT_BOOL DetectPortabilityProblems ) = 0;
      virtual HRESULT __stdcall get_DebugInformationFormat (
        /*[out,retval]*/ enum debugOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_DebugInformationFormat (
        /*[in]*/ enum debugOption optSetting ) = 0;
      virtual HRESULT __stdcall get_CompileAsManaged (
        /*[out,retval]*/ enum compileAsManagedOptions * optSetting ) = 0;
      virtual HRESULT __stdcall put_CompileAsManaged (
        /*[in]*/ enum compileAsManagedOptions optSetting ) = 0;
      virtual HRESULT __stdcall get_AdditionalIncludeDirectories (
        /*[out,retval]*/ BSTR * IncludePath ) = 0;
      virtual HRESULT __stdcall put_AdditionalIncludeDirectories (
        /*[in]*/ BSTR IncludePath ) = 0;
      virtual HRESULT __stdcall get_AdditionalUsingDirectories (
        /*[out,retval]*/ BSTR * IncludePath ) = 0;
      virtual HRESULT __stdcall put_AdditionalUsingDirectories (
        /*[in]*/ BSTR IncludePath ) = 0;
      virtual HRESULT __stdcall get_Optimization (
        /*[out,retval]*/ enum optimizeOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_Optimization (
        /*[in]*/ enum optimizeOption optSetting ) = 0;
      virtual HRESULT __stdcall get_GlobalOptimizations (
        /*[out,retval]*/ VARIANT_BOOL * globalOpt ) = 0;
      virtual HRESULT __stdcall put_GlobalOptimizations (
        /*[in]*/ VARIANT_BOOL globalOpt ) = 0;
      virtual HRESULT __stdcall get_InlineFunctionExpansion (
        /*[out,retval]*/ enum inlineExpansionOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_InlineFunctionExpansion (
        /*[in]*/ enum inlineExpansionOption optSetting ) = 0;
      virtual HRESULT __stdcall get_EnableIntrinsicFunctions (
        /*[out,retval]*/ VARIANT_BOOL * enableIntrinsic ) = 0;
      virtual HRESULT __stdcall put_EnableIntrinsicFunctions (
        /*[in]*/ VARIANT_BOOL enableIntrinsic ) = 0;
      virtual HRESULT __stdcall get_ImproveFloatingPointConsistency (
        /*[out,retval]*/ VARIANT_BOOL * improveFloat ) = 0;
      virtual HRESULT __stdcall put_ImproveFloatingPointConsistency (
        /*[in]*/ VARIANT_BOOL improveFloat ) = 0;
      virtual HRESULT __stdcall get_FavorSizeOrSpeed (
        /*[out,retval]*/ enum favorSizeOrSpeedOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_FavorSizeOrSpeed (
        /*[in]*/ enum favorSizeOrSpeedOption optSetting ) = 0;
      virtual HRESULT __stdcall get_OmitFramePointers (
        /*[out,retval]*/ VARIANT_BOOL * optSetting ) = 0;
      virtual HRESULT __stdcall put_OmitFramePointers (
        /*[in]*/ VARIANT_BOOL optSetting ) = 0;
      virtual HRESULT __stdcall get_EnableFiberSafeOptimizations (
        /*[out,retval]*/ VARIANT_BOOL * enable ) = 0;
      virtual HRESULT __stdcall put_EnableFiberSafeOptimizations (
        /*[in]*/ VARIANT_BOOL enable ) = 0;
      virtual HRESULT __stdcall get_WholeProgramOptimization (
        /*[out,retval]*/ VARIANT_BOOL * wholeProgOp ) = 0;
      virtual HRESULT __stdcall put_WholeProgramOptimization (
        /*[in]*/ VARIANT_BOOL wholeProgOp ) = 0;
      virtual HRESULT __stdcall get_OptimizeForProcessor (
        /*[out,retval]*/ enum ProcessorOptimizeOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_OptimizeForProcessor (
        /*[in]*/ enum ProcessorOptimizeOption optSetting ) = 0;
      virtual HRESULT __stdcall get_OptimizeForWindowsApplication (
        /*[out,retval]*/ VARIANT_BOOL * optSetting ) = 0;
      virtual HRESULT __stdcall put_OptimizeForWindowsApplication (
        /*[in]*/ VARIANT_BOOL optSetting ) = 0;
      virtual HRESULT __stdcall get_PreprocessorDefinitions (
        /*[out,retval]*/ BSTR * Defines ) = 0;
      virtual HRESULT __stdcall put_PreprocessorDefinitions (
        /*[in]*/ BSTR Defines ) = 0;
      virtual HRESULT __stdcall get_IgnoreStandardIncludePath (
        /*[out,retval]*/ VARIANT_BOOL * bIgnoreInclPath ) = 0;
      virtual HRESULT __stdcall put_IgnoreStandardIncludePath (
        /*[in]*/ VARIANT_BOOL bIgnoreInclPath ) = 0;
      virtual HRESULT __stdcall get_GeneratePreprocessedFile (
        /*[out,retval]*/ enum preprocessOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_GeneratePreprocessedFile (
        /*[in]*/ enum preprocessOption optSetting ) = 0;
      virtual HRESULT __stdcall get_KeepComments (
        /*[out,retval]*/ VARIANT_BOOL * bkeepComments ) = 0;
      virtual HRESULT __stdcall put_KeepComments (
        /*[in]*/ VARIANT_BOOL bkeepComments ) = 0;
      virtual HRESULT __stdcall get_StringPooling (
        /*[out,retval]*/ VARIANT_BOOL * optSetting ) = 0;
      virtual HRESULT __stdcall put_StringPooling (
        /*[in]*/ VARIANT_BOOL optSetting ) = 0;
      virtual HRESULT __stdcall get_MinimalRebuild (
        /*[out,retval]*/ VARIANT_BOOL * MinimalRebuild ) = 0;
      virtual HRESULT __stdcall put_MinimalRebuild (
        /*[in]*/ VARIANT_BOOL MinimalRebuild ) = 0;
      virtual HRESULT __stdcall get_ExceptionHandling (
        /*[out,retval]*/ VARIANT_BOOL * optSetting ) = 0;
      virtual HRESULT __stdcall put_ExceptionHandling (
        /*[in]*/ VARIANT_BOOL optSetting ) = 0;
      virtual HRESULT __stdcall get_BasicRuntimeChecks (
        /*[out,retval]*/ enum basicRuntimeCheckOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_BasicRuntimeChecks (
        /*[in]*/ enum basicRuntimeCheckOption optSetting ) = 0;
      virtual HRESULT __stdcall get_SmallerTypeCheck (
        /*[out,retval]*/ VARIANT_BOOL * smallerType ) = 0;
      virtual HRESULT __stdcall put_SmallerTypeCheck (
        /*[in]*/ VARIANT_BOOL smallerType ) = 0;
      virtual HRESULT __stdcall get_RuntimeLibrary (
        /*[out,retval]*/ enum runtimeLibraryOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_RuntimeLibrary (
        /*[in]*/ enum runtimeLibraryOption optSetting ) = 0;
      virtual HRESULT __stdcall get_StructMemberAlignment (
        /*[out,retval]*/ enum structMemberAlignOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_StructMemberAlignment (
        /*[in]*/ enum structMemberAlignOption optSetting ) = 0;
      virtual HRESULT __stdcall get_BufferSecurityCheck (
        /*[out,retval]*/ VARIANT_BOOL * Secure ) = 0;
      virtual HRESULT __stdcall put_BufferSecurityCheck (
        /*[in]*/ VARIANT_BOOL Secure ) = 0;
      virtual HRESULT __stdcall get_EnableFunctionLevelLinking (
        /*[out,retval]*/ VARIANT_BOOL * enable ) = 0;
      virtual HRESULT __stdcall put_EnableFunctionLevelLinking (
        /*[in]*/ VARIANT_BOOL enable ) = 0;
      virtual HRESULT __stdcall get_DisableLanguageExtensions (
        /*[out,retval]*/ VARIANT_BOOL * DisableExtensions ) = 0;
      virtual HRESULT __stdcall put_DisableLanguageExtensions (
        /*[in]*/ VARIANT_BOOL DisableExtensions ) = 0;
      virtual HRESULT __stdcall get_DefaultCharIsUnsigned (
        /*[out,retval]*/ VARIANT_BOOL * IsUnsigned ) = 0;
      virtual HRESULT __stdcall put_DefaultCharIsUnsigned (
        /*[in]*/ VARIANT_BOOL IsUnsigned ) = 0;
      virtual HRESULT __stdcall get_TreatWChar_tAsBuiltInType (
        /*[out,retval]*/ VARIANT_BOOL * BuiltInType ) = 0;
      virtual HRESULT __stdcall put_TreatWChar_tAsBuiltInType (
        /*[in]*/ VARIANT_BOOL BuiltInType ) = 0;
      virtual HRESULT __stdcall get_ForceConformanceInForLoopScope (
        /*[out,retval]*/ VARIANT_BOOL * conform ) = 0;
      virtual HRESULT __stdcall put_ForceConformanceInForLoopScope (
        /*[in]*/ VARIANT_BOOL conform ) = 0;
      virtual HRESULT __stdcall get_RuntimeTypeInfo (
        /*[out,retval]*/ VARIANT_BOOL * RTTI ) = 0;
      virtual HRESULT __stdcall put_RuntimeTypeInfo (
        /*[in]*/ VARIANT_BOOL RTTI ) = 0;
      virtual HRESULT __stdcall get_UsePrecompiledHeader (
        /*[out,retval]*/ enum pchOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_UsePrecompiledHeader (
        /*[in]*/ enum pchOption optSetting ) = 0;
      virtual HRESULT __stdcall get_PrecompiledHeaderThrough (
        /*[out,retval]*/ BSTR * File ) = 0;
      virtual HRESULT __stdcall put_PrecompiledHeaderThrough (
        /*[in]*/ BSTR File ) = 0;
      virtual HRESULT __stdcall get_PrecompiledHeaderFile (
        /*[out,retval]*/ BSTR * PCH ) = 0;
      virtual HRESULT __stdcall put_PrecompiledHeaderFile (
        /*[in]*/ BSTR PCH ) = 0;
      virtual HRESULT __stdcall get_ExpandAttributedSource (
        /*[out,retval]*/ VARIANT_BOOL * bExpandAttributedSource ) = 0;
      virtual HRESULT __stdcall put_ExpandAttributedSource (
        /*[in]*/ VARIANT_BOOL bExpandAttributedSource ) = 0;
      virtual HRESULT __stdcall get_AssemblerOutput (
        /*[out,retval]*/ enum asmListingOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_AssemblerOutput (
        /*[in]*/ enum asmListingOption optSetting ) = 0;
      virtual HRESULT __stdcall get_AssemblerListingLocation (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_AssemblerListingLocation (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ObjectFile (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ObjectFile (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ProgramDataBaseFileName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ProgramDataBaseFileName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_BrowseInformation (
        /*[out,retval]*/ enum browseInfoOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_BrowseInformation (
        /*[in]*/ enum browseInfoOption optSetting ) = 0;
      virtual HRESULT __stdcall get_BrowseInformationFile (
        /*[out,retval]*/ BSTR * File ) = 0;
      virtual HRESULT __stdcall put_BrowseInformationFile (
        /*[in]*/ BSTR File ) = 0;
      virtual HRESULT __stdcall get_CallingConvention (
        /*[out,retval]*/ enum callingConventionOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_CallingConvention (
        /*[in]*/ enum callingConventionOption optSetting ) = 0;
      virtual HRESULT __stdcall get_CompileAs (
        /*[out,retval]*/ enum CompileAsOptions * CompileAs ) = 0;
      virtual HRESULT __stdcall put_CompileAs (
        /*[in]*/ enum CompileAsOptions CompileAs ) = 0;
      virtual HRESULT __stdcall get_DisableSpecificWarnings (
        /*[out,retval]*/ BSTR * Warnings ) = 0;
      virtual HRESULT __stdcall put_DisableSpecificWarnings (
        /*[in]*/ BSTR Warnings ) = 0;
      virtual HRESULT __stdcall get_ForcedIncludeFiles (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ForcedIncludeFiles (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ForcedUsingFiles (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ForcedUsingFiles (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ShowIncludes (
        /*[out,retval]*/ VARIANT_BOOL * ShowInc ) = 0;
      virtual HRESULT __stdcall put_ShowIncludes (
        /*[in]*/ VARIANT_BOOL ShowInc ) = 0;
      virtual HRESULT __stdcall get_UndefinePreprocessorDefinitions (
        /*[out,retval]*/ BSTR * Undefines ) = 0;
      virtual HRESULT __stdcall put_UndefinePreprocessorDefinitions (
        /*[in]*/ BSTR Undefines ) = 0;
      virtual HRESULT __stdcall get_UndefineAllPreprocessorDefinitions (
        /*[out,retval]*/ VARIANT_BOOL * undefinePredefinedMacros ) = 0;
      virtual HRESULT __stdcall put_UndefineAllPreprocessorDefinitions (
        /*[in]*/ VARIANT_BOOL undefinePredefinedMacros ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_FullIncludePath (
        /*[out,retval]*/ BSTR * FullIncludePath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
      virtual HRESULT __stdcall get_CompileOnly (
        /*[out,retval]*/ VARIANT_BOOL * CompileOnly ) = 0;
      virtual HRESULT __stdcall put_CompileOnly (
        /*[in]*/ VARIANT_BOOL CompileOnly ) = 0;
};

enum linkProgressOption
{
    linkProgressNotSet = 0,
    linkProgressAll = 1,
    linkProgressLibs = 2
};

enum linkIncrementalType
{
    linkIncrementalDefault = 0,
    linkIncrementalNo = 1,
    linkIncrementalYes = 2
};

enum subSystemOption
{
    subSystemNotSet = 0,
    subSystemConsole = 1,
    subSystemWindows = 2
};

enum addressAwarenessType
{
    addrAwareDefault = 0,
    addrAwareNoLarge = 1,
    addrAwareLarge = 2
};

enum termSvrAwarenessType
{
    termSvrAwareDefault = 0,
    termSvrAwareNo = 1,
    termSvrAwareYes = 2
};

enum optRefType
{
    optReferencesDefault = 0,
    optNoReferences = 1,
    optReferences = 2
};

enum optFoldingType
{
    optFoldingDefault = 0,
    optNoFolding = 1,
    optFolding = 2
};

enum optWin98Type
{
    optWin98Default = 0,
    optWin98No = 1,
    optWin98Yes = 2
};

enum machineTypeOption
{
    machineNotSet = 0,
    machineX86 = 1
};

struct __declspec(uuid("bee77b68-f846-11d2-8b4e-00c04f7956c9"))
VCLinkerTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * Options ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR Options ) = 0;
      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_OutputFile (
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall put_OutputFile (
        /*[in]*/ BSTR Out ) = 0;
      virtual HRESULT __stdcall get_ShowProgress (
        /*[out,retval]*/ enum linkProgressOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_ShowProgress (
        /*[in]*/ enum linkProgressOption optSetting ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall put_Version (
        /*[in]*/ BSTR Version ) = 0;
      virtual HRESULT __stdcall get_LinkIncremental (
        /*[out,retval]*/ enum linkIncrementalType * optSetting ) = 0;
      virtual HRESULT __stdcall put_LinkIncremental (
        /*[in]*/ enum linkIncrementalType optSetting ) = 0;
      virtual HRESULT __stdcall get_SuppressStartupBanner (
        /*[out,retval]*/ VARIANT_BOOL * NoLogo ) = 0;
      virtual HRESULT __stdcall put_SuppressStartupBanner (
        /*[in]*/ VARIANT_BOOL NoLogo ) = 0;
      virtual HRESULT __stdcall get_IgnoreImportLibrary (
        /*[out,retval]*/ VARIANT_BOOL * IgnoreImportLib ) = 0;
      virtual HRESULT __stdcall put_IgnoreImportLibrary (
        /*[in]*/ VARIANT_BOOL IgnoreImportLib ) = 0;
      virtual HRESULT __stdcall get_RegisterOutput (
        /*[out,retval]*/ VARIANT_BOOL * doRegister ) = 0;
      virtual HRESULT __stdcall put_RegisterOutput (
        /*[in]*/ VARIANT_BOOL doRegister ) = 0;
      virtual HRESULT __stdcall get_AdditionalLibraryDirectories (
        /*[out,retval]*/ BSTR * LibPath ) = 0;
      virtual HRESULT __stdcall put_AdditionalLibraryDirectories (
        /*[in]*/ BSTR LibPath ) = 0;
      virtual HRESULT __stdcall get_LinkDLL (
        /*[out,retval]*/ VARIANT_BOOL * buildDLL ) = 0;
      virtual HRESULT __stdcall put_LinkDLL (
        /*[in]*/ VARIANT_BOOL buildDLL ) = 0;
      virtual HRESULT __stdcall get_AdditionalDependencies (
        /*[out,retval]*/ BSTR * Dependencies ) = 0;
      virtual HRESULT __stdcall put_AdditionalDependencies (
        /*[in]*/ BSTR Dependencies ) = 0;
      virtual HRESULT __stdcall get_IgnoreAllDefaultLibraries (
        /*[out,retval]*/ VARIANT_BOOL * NoDefaults ) = 0;
      virtual HRESULT __stdcall put_IgnoreAllDefaultLibraries (
        /*[in]*/ VARIANT_BOOL NoDefaults ) = 0;
      virtual HRESULT __stdcall get_IgnoreDefaultLibraryNames (
        /*[out,retval]*/ BSTR * Lib ) = 0;
      virtual HRESULT __stdcall put_IgnoreDefaultLibraryNames (
        /*[in]*/ BSTR Lib ) = 0;
      virtual HRESULT __stdcall get_ModuleDefinitionFile (
        /*[out,retval]*/ BSTR * DefFile ) = 0;
      virtual HRESULT __stdcall put_ModuleDefinitionFile (
        /*[in]*/ BSTR DefFile ) = 0;
      virtual HRESULT __stdcall get_AddModuleNamesToAssembly (
        /*[out,retval]*/ BSTR * moduleName ) = 0;
      virtual HRESULT __stdcall put_AddModuleNamesToAssembly (
        /*[in]*/ BSTR moduleName ) = 0;
      virtual HRESULT __stdcall get_EmbedManagedResourceFile (
        /*[out,retval]*/ BSTR * Res ) = 0;
      virtual HRESULT __stdcall put_EmbedManagedResourceFile (
        /*[in]*/ BSTR Res ) = 0;
      virtual HRESULT __stdcall get_ForceSymbolReferences (
        /*[out,retval]*/ BSTR * Symbol ) = 0;
      virtual HRESULT __stdcall put_ForceSymbolReferences (
        /*[in]*/ BSTR Symbol ) = 0;
      virtual HRESULT __stdcall get_DelayLoadDLLs (
        /*[out,retval]*/ BSTR * DLLName ) = 0;
      virtual HRESULT __stdcall put_DelayLoadDLLs (
        /*[in]*/ BSTR DLLName ) = 0;
      virtual HRESULT __stdcall get_MidlCommandFile (
        /*[out,retval]*/ BSTR * MidlCmdFile ) = 0;
      virtual HRESULT __stdcall put_MidlCommandFile (
        /*[in]*/ BSTR MidlCmdFile ) = 0;
      virtual HRESULT __stdcall get_IgnoreEmbeddedIDL (
        /*[out,retval]*/ VARIANT_BOOL * IgnoreIDL ) = 0;
      virtual HRESULT __stdcall put_IgnoreEmbeddedIDL (
        /*[in]*/ VARIANT_BOOL IgnoreIDL ) = 0;
      virtual HRESULT __stdcall get_MergedIDLBaseFileName (
        /*[out,retval]*/ BSTR * IDLFile ) = 0;
      virtual HRESULT __stdcall put_MergedIDLBaseFileName (
        /*[in]*/ BSTR IDLFile ) = 0;
      virtual HRESULT __stdcall get_TypeLibraryFile (
        /*[out,retval]*/ BSTR * TLBFile ) = 0;
      virtual HRESULT __stdcall put_TypeLibraryFile (
        /*[in]*/ BSTR TLBFile ) = 0;
      virtual HRESULT __stdcall get_TypeLibraryResourceID (
        /*[out,retval]*/ long * ResourceID ) = 0;
      virtual HRESULT __stdcall put_TypeLibraryResourceID (
        /*[in]*/ long ResourceID ) = 0;
      virtual HRESULT __stdcall get_GenerateDebugInformation (
        /*[out,retval]*/ VARIANT_BOOL * genDebug ) = 0;
      virtual HRESULT __stdcall put_GenerateDebugInformation (
        /*[in]*/ VARIANT_BOOL genDebug ) = 0;
      virtual HRESULT __stdcall get_ProgramDatabaseFile (
        /*[out,retval]*/ BSTR * File ) = 0;
      virtual HRESULT __stdcall put_ProgramDatabaseFile (
        /*[in]*/ BSTR File ) = 0;
      virtual HRESULT __stdcall get_StripPrivateSymbols (
        /*[out,retval]*/ BSTR * StrippedPDB ) = 0;
      virtual HRESULT __stdcall put_StripPrivateSymbols (
        /*[in]*/ BSTR StrippedPDB ) = 0;
      virtual HRESULT __stdcall get_GenerateMapFile (
        /*[out,retval]*/ VARIANT_BOOL * Map ) = 0;
      virtual HRESULT __stdcall put_GenerateMapFile (
        /*[in]*/ VARIANT_BOOL Map ) = 0;
      virtual HRESULT __stdcall get_MapFileName (
        /*[out,retval]*/ BSTR * MapFile ) = 0;
      virtual HRESULT __stdcall put_MapFileName (
        /*[in]*/ BSTR MapFile ) = 0;
      virtual HRESULT __stdcall get_MapExports (
        /*[out,retval]*/ VARIANT_BOOL * Exports ) = 0;
      virtual HRESULT __stdcall put_MapExports (
        /*[in]*/ VARIANT_BOOL Exports ) = 0;
      virtual HRESULT __stdcall get_MapLines (
        /*[out,retval]*/ VARIANT_BOOL * Lines ) = 0;
      virtual HRESULT __stdcall put_MapLines (
        /*[in]*/ VARIANT_BOOL Lines ) = 0;
      virtual HRESULT __stdcall get_SubSystem (
        /*[out,retval]*/ enum subSystemOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_SubSystem (
        /*[in]*/ enum subSystemOption optSetting ) = 0;
      virtual HRESULT __stdcall get_HeapReserveSize (
        /*[out,retval]*/ long * ReserveSize ) = 0;
      virtual HRESULT __stdcall put_HeapReserveSize (
        /*[in]*/ long ReserveSize ) = 0;
      virtual HRESULT __stdcall get_HeapCommitSize (
        /*[out,retval]*/ long * CommitSize ) = 0;
      virtual HRESULT __stdcall put_HeapCommitSize (
        /*[in]*/ long CommitSize ) = 0;
      virtual HRESULT __stdcall get_StackReserveSize (
        /*[out,retval]*/ long * ReserveSize ) = 0;
      virtual HRESULT __stdcall put_StackReserveSize (
        /*[in]*/ long ReserveSize ) = 0;
      virtual HRESULT __stdcall get_StackCommitSize (
        /*[out,retval]*/ long * CommitSize ) = 0;
      virtual HRESULT __stdcall put_StackCommitSize (
        /*[in]*/ long CommitSize ) = 0;
      virtual HRESULT __stdcall get_LargeAddressAware (
        /*[out,retval]*/ enum addressAwarenessType * optSetting ) = 0;
      virtual HRESULT __stdcall put_LargeAddressAware (
        /*[in]*/ enum addressAwarenessType optSetting ) = 0;
      virtual HRESULT __stdcall get_TerminalServerAware (
        /*[out,retval]*/ enum termSvrAwarenessType * optSetting ) = 0;
      virtual HRESULT __stdcall put_TerminalServerAware (
        /*[in]*/ enum termSvrAwarenessType optSetting ) = 0;
      virtual HRESULT __stdcall get_SwapRunFromCD (
        /*[out,retval]*/ VARIANT_BOOL * Run ) = 0;
      virtual HRESULT __stdcall put_SwapRunFromCD (
        /*[in]*/ VARIANT_BOOL Run ) = 0;
      virtual HRESULT __stdcall get_SwapRunFromNet (
        /*[out,retval]*/ VARIANT_BOOL * Run ) = 0;
      virtual HRESULT __stdcall put_SwapRunFromNet (
        /*[in]*/ VARIANT_BOOL Run ) = 0;
      virtual HRESULT __stdcall get_OptimizeReferences (
        /*[out,retval]*/ enum optRefType * optSetting ) = 0;
      virtual HRESULT __stdcall put_OptimizeReferences (
        /*[in]*/ enum optRefType optSetting ) = 0;
      virtual HRESULT __stdcall get_EnableCOMDATFolding (
        /*[out,retval]*/ enum optFoldingType * optSetting ) = 0;
      virtual HRESULT __stdcall put_EnableCOMDATFolding (
        /*[in]*/ enum optFoldingType optSetting ) = 0;
      virtual HRESULT __stdcall get_OptimizeForWindows98 (
        /*[out,retval]*/ enum optWin98Type * optSetting ) = 0;
      virtual HRESULT __stdcall put_OptimizeForWindows98 (
        /*[in]*/ enum optWin98Type optSetting ) = 0;
      virtual HRESULT __stdcall get_FunctionOrder (
        /*[out,retval]*/ BSTR * Order ) = 0;
      virtual HRESULT __stdcall put_FunctionOrder (
        /*[in]*/ BSTR Order ) = 0;
      virtual HRESULT __stdcall get_LinkTimeCodeGeneration (
        /*[out,retval]*/ VARIANT_BOOL * CodeGen ) = 0;
      virtual HRESULT __stdcall put_LinkTimeCodeGeneration (
        /*[in]*/ VARIANT_BOOL CodeGen ) = 0;
      virtual HRESULT __stdcall get_EntryPointSymbol (
        /*[out,retval]*/ BSTR * Entry ) = 0;
      virtual HRESULT __stdcall put_EntryPointSymbol (
        /*[in]*/ BSTR Entry ) = 0;
      virtual HRESULT __stdcall get_ResourceOnlyDLL (
        /*[out,retval]*/ VARIANT_BOOL * NoEntry ) = 0;
      virtual HRESULT __stdcall put_ResourceOnlyDLL (
        /*[in]*/ VARIANT_BOOL NoEntry ) = 0;
      virtual HRESULT __stdcall get_SetChecksum (
        /*[out,retval]*/ VARIANT_BOOL * Release ) = 0;
      virtual HRESULT __stdcall put_SetChecksum (
        /*[in]*/ VARIANT_BOOL Release ) = 0;
      virtual HRESULT __stdcall get_BaseAddress (
        /*[out,retval]*/ BSTR * Address ) = 0;
      virtual HRESULT __stdcall put_BaseAddress (
        /*[in]*/ BSTR Address ) = 0;
      virtual HRESULT __stdcall get_TurnOffAssemblyGeneration (
        /*[out,retval]*/ VARIANT_BOOL * noAssembly ) = 0;
      virtual HRESULT __stdcall put_TurnOffAssemblyGeneration (
        /*[in]*/ VARIANT_BOOL noAssembly ) = 0;
      virtual HRESULT __stdcall get_SupportUnloadOfDelayLoadedDLL (
        /*[out,retval]*/ VARIANT_BOOL * supportUnload ) = 0;
      virtual HRESULT __stdcall put_SupportUnloadOfDelayLoadedDLL (
        /*[in]*/ VARIANT_BOOL supportUnload ) = 0;
      virtual HRESULT __stdcall get_ImportLibrary (
        /*[out,retval]*/ BSTR * ImportLib ) = 0;
      virtual HRESULT __stdcall put_ImportLibrary (
        /*[in]*/ BSTR ImportLib ) = 0;
      virtual HRESULT __stdcall get_MergeSections (
        /*[out,retval]*/ BSTR * Merge ) = 0;
      virtual HRESULT __stdcall put_MergeSections (
        /*[in]*/ BSTR Merge ) = 0;
      virtual HRESULT __stdcall get_TargetMachine (
        /*[out,retval]*/ enum machineTypeOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_TargetMachine (
        /*[in]*/ enum machineTypeOption optSetting ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR PropName,
        /*[in]*/ long PropID,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("bee77b6b-f846-11d2-8b4e-00c04f7956c9"))
VCLibrarianTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * Options ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR Options ) = 0;
      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_OutputFile (
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall put_OutputFile (
        /*[in]*/ BSTR Out ) = 0;
      virtual HRESULT __stdcall get_AdditionalDependencies (
        /*[out,retval]*/ BSTR * Dependencies ) = 0;
      virtual HRESULT __stdcall put_AdditionalDependencies (
        /*[in]*/ BSTR Dependencies ) = 0;
      virtual HRESULT __stdcall get_AdditionalLibraryDirectories (
        /*[out,retval]*/ BSTR * LibPath ) = 0;
      virtual HRESULT __stdcall put_AdditionalLibraryDirectories (
        /*[in]*/ BSTR LibPath ) = 0;
      virtual HRESULT __stdcall get_SuppressStartupBanner (
        /*[out,retval]*/ VARIANT_BOOL * NoLogo ) = 0;
      virtual HRESULT __stdcall put_SuppressStartupBanner (
        /*[in]*/ VARIANT_BOOL NoLogo ) = 0;
      virtual HRESULT __stdcall get_ModuleDefinitionFile (
        /*[out,retval]*/ BSTR * DefFile ) = 0;
      virtual HRESULT __stdcall put_ModuleDefinitionFile (
        /*[in]*/ BSTR DefFile ) = 0;
      virtual HRESULT __stdcall get_IgnoreAllDefaultLibraries (
        /*[out,retval]*/ VARIANT_BOOL * NoDefault ) = 0;
      virtual HRESULT __stdcall put_IgnoreAllDefaultLibraries (
        /*[in]*/ VARIANT_BOOL NoDefault ) = 0;
      virtual HRESULT __stdcall get_IgnoreDefaultLibraryNames (
        /*[out,retval]*/ BSTR * Lib ) = 0;
      virtual HRESULT __stdcall put_IgnoreDefaultLibraryNames (
        /*[in]*/ BSTR Lib ) = 0;
      virtual HRESULT __stdcall get_ExportNamedFunctions (
        /*[out,retval]*/ BSTR * Symbols ) = 0;
      virtual HRESULT __stdcall put_ExportNamedFunctions (
        /*[in]*/ BSTR Symbols ) = 0;
      virtual HRESULT __stdcall get_ForceSymbolReferences (
        /*[out,retval]*/ BSTR * Symbol ) = 0;
      virtual HRESULT __stdcall put_ForceSymbolReferences (
        /*[in]*/ BSTR Symbol ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("0a35da51-aaad-11d2-8d0f-00c04f8eea30"))
VCCustomBuildTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_CommandLine (
        /*[out,retval]*/ BSTR * cmdLine ) = 0;
      virtual HRESULT __stdcall put_CommandLine (
        /*[in]*/ BSTR cmdLine ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Desc ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Desc ) = 0;
      virtual HRESULT __stdcall get_Outputs (
        /*[out,retval]*/ BSTR * Outputs ) = 0;
      virtual HRESULT __stdcall put_Outputs (
        /*[in]*/ BSTR Outputs ) = 0;
      virtual HRESULT __stdcall get_AdditionalDependencies (
        /*[out,retval]*/ BSTR * Dependencies ) = 0;
      virtual HRESULT __stdcall put_AdditionalDependencies (
        /*[in]*/ BSTR Dependencies ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum midlWarningLevelOption
{
    midlWarningLevel_0 = 0,
    midlWarningLevel_1 = 1,
    midlWarningLevel_2 = 2,
    midlWarningLevel_3 = 3,
    midlWarningLevel_4 = 4
};

enum midlCharOption
{
    midlCharUnsigned = 0,
    midlCharSigned = 1,
    midlCharAscii7 = 2
};

enum midlTargetEnvironment
{
    midlTargetNotSet = 0,
    midlTargetWin32 = 1,
    midlTargetWin64 = 2
};

enum midlErrorCheckOption
{
    midlEnableCustom = 0,
    midlDisableAll = 1,
    midlEnableAll = 2
};

enum midlStructMemberAlignOption
{
    midlAlignNotSet = 0,
    midlAlignSingleByte = 1,
    midlAlignTwoBytes = 2,
    midlAlignFourBytes = 3,
    midlAlignEightBytes = 4
};

struct __declspec(uuid("0ac5b928-f78e-11d2-8b4e-00c04f7956c9"))
VCMidlTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * Options ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR Options ) = 0;
      virtual HRESULT __stdcall get_PreprocessorDefinitions (
        /*[out,retval]*/ BSTR * Defines ) = 0;
      virtual HRESULT __stdcall put_PreprocessorDefinitions (
        /*[in]*/ BSTR Defines ) = 0;
      virtual HRESULT __stdcall get_AdditionalIncludeDirectories (
        /*[out,retval]*/ BSTR * IncludePath ) = 0;
      virtual HRESULT __stdcall put_AdditionalIncludeDirectories (
        /*[in]*/ BSTR IncludePath ) = 0;
      virtual HRESULT __stdcall get_IgnoreStandardIncludePath (
        /*[out,retval]*/ VARIANT_BOOL * Ignore ) = 0;
      virtual HRESULT __stdcall put_IgnoreStandardIncludePath (
        /*[in]*/ VARIANT_BOOL Ignore ) = 0;
      virtual HRESULT __stdcall get_MkTypLibCompatible (
        /*[out,retval]*/ VARIANT_BOOL * Compatible ) = 0;
      virtual HRESULT __stdcall put_MkTypLibCompatible (
        /*[in]*/ VARIANT_BOOL Compatible ) = 0;
      virtual HRESULT __stdcall get_WarningLevel (
        /*[out,retval]*/ enum midlWarningLevelOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_WarningLevel (
        /*[in]*/ enum midlWarningLevelOption optSetting ) = 0;
      virtual HRESULT __stdcall get_WarnAsError (
        /*[out,retval]*/ VARIANT_BOOL * WarnAsError ) = 0;
      virtual HRESULT __stdcall put_WarnAsError (
        /*[in]*/ VARIANT_BOOL WarnAsError ) = 0;
      virtual HRESULT __stdcall get_SuppressStartupBanner (
        /*[out,retval]*/ VARIANT_BOOL * NoLogo ) = 0;
      virtual HRESULT __stdcall put_SuppressStartupBanner (
        /*[in]*/ VARIANT_BOOL NoLogo ) = 0;
      virtual HRESULT __stdcall get_DefaultCharType (
        /*[out,retval]*/ enum midlCharOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_DefaultCharType (
        /*[in]*/ enum midlCharOption optSetting ) = 0;
      virtual HRESULT __stdcall get_TargetEnvironment (
        /*[out,retval]*/ enum midlTargetEnvironment * optSetting ) = 0;
      virtual HRESULT __stdcall put_TargetEnvironment (
        /*[in]*/ enum midlTargetEnvironment optSetting ) = 0;
      virtual HRESULT __stdcall get_GenerateStublessProxies (
        /*[out,retval]*/ VARIANT_BOOL * optSetting ) = 0;
      virtual HRESULT __stdcall put_GenerateStublessProxies (
        /*[in]*/ VARIANT_BOOL optSetting ) = 0;
      virtual HRESULT __stdcall get_OutputDirectory (
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall put_OutputDirectory (
        /*[in]*/ BSTR Out ) = 0;
      virtual HRESULT __stdcall get_HeaderFileName (
        /*[out,retval]*/ BSTR * HeaderFile ) = 0;
      virtual HRESULT __stdcall put_HeaderFileName (
        /*[in]*/ BSTR HeaderFile ) = 0;
      virtual HRESULT __stdcall get_DLLDataFileName (
        /*[out,retval]*/ BSTR * DLLData ) = 0;
      virtual HRESULT __stdcall put_DLLDataFileName (
        /*[in]*/ BSTR DLLData ) = 0;
      virtual HRESULT __stdcall get_InterfaceIdentifierFileName (
        /*[out,retval]*/ BSTR * IID ) = 0;
      virtual HRESULT __stdcall put_InterfaceIdentifierFileName (
        /*[in]*/ BSTR IID ) = 0;
      virtual HRESULT __stdcall get_ProxyFileName (
        /*[out,retval]*/ BSTR * ProxyFile ) = 0;
      virtual HRESULT __stdcall put_ProxyFileName (
        /*[in]*/ BSTR ProxyFile ) = 0;
      virtual HRESULT __stdcall get_GenerateTypeLibrary (
        /*[out,retval]*/ VARIANT_BOOL * optSetting ) = 0;
      virtual HRESULT __stdcall put_GenerateTypeLibrary (
        /*[in]*/ VARIANT_BOOL optSetting ) = 0;
      virtual HRESULT __stdcall get_TypeLibraryName (
        /*[out,retval]*/ BSTR * TLBFile ) = 0;
      virtual HRESULT __stdcall put_TypeLibraryName (
        /*[in]*/ BSTR TLBFile ) = 0;
      virtual HRESULT __stdcall get_EnableErrorChecks (
        /*[out,retval]*/ enum midlErrorCheckOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_EnableErrorChecks (
        /*[in]*/ enum midlErrorCheckOption optSetting ) = 0;
      virtual HRESULT __stdcall get_ErrorCheckAllocations (
        /*[out,retval]*/ VARIANT_BOOL * errorCheck ) = 0;
      virtual HRESULT __stdcall put_ErrorCheckAllocations (
        /*[in]*/ VARIANT_BOOL errorCheck ) = 0;
      virtual HRESULT __stdcall get_ErrorCheckBounds (
        /*[out,retval]*/ VARIANT_BOOL * errorCheck ) = 0;
      virtual HRESULT __stdcall put_ErrorCheckBounds (
        /*[in]*/ VARIANT_BOOL errorCheck ) = 0;
      virtual HRESULT __stdcall get_ErrorCheckEnumRange (
        /*[out,retval]*/ VARIANT_BOOL * errorCheck ) = 0;
      virtual HRESULT __stdcall put_ErrorCheckEnumRange (
        /*[in]*/ VARIANT_BOOL errorCheck ) = 0;
      virtual HRESULT __stdcall get_ErrorCheckRefPointers (
        /*[out,retval]*/ VARIANT_BOOL * errorCheck ) = 0;
      virtual HRESULT __stdcall put_ErrorCheckRefPointers (
        /*[in]*/ VARIANT_BOOL errorCheck ) = 0;
      virtual HRESULT __stdcall get_ErrorCheckStubData (
        /*[out,retval]*/ VARIANT_BOOL * errorCheck ) = 0;
      virtual HRESULT __stdcall put_ErrorCheckStubData (
        /*[in]*/ VARIANT_BOOL errorCheck ) = 0;
      virtual HRESULT __stdcall get_ValidateParameters (
        /*[out,retval]*/ VARIANT_BOOL * Validate ) = 0;
      virtual HRESULT __stdcall put_ValidateParameters (
        /*[in]*/ VARIANT_BOOL Validate ) = 0;
      virtual HRESULT __stdcall get_RedirectOutputAndErrors (
        /*[out,retval]*/ BSTR * Output ) = 0;
      virtual HRESULT __stdcall put_RedirectOutputAndErrors (
        /*[in]*/ BSTR Output ) = 0;
      virtual HRESULT __stdcall get_StructMemberAlignment (
        /*[out,retval]*/ enum midlStructMemberAlignOption * optSetting ) = 0;
      virtual HRESULT __stdcall put_StructMemberAlignment (
        /*[in]*/ enum midlStructMemberAlignOption optSetting ) = 0;
      virtual HRESULT __stdcall get_CPreprocessOptions (
        /*[out,retval]*/ BSTR * Opt ) = 0;
      virtual HRESULT __stdcall put_CPreprocessOptions (
        /*[in]*/ BSTR Opt ) = 0;
      virtual HRESULT __stdcall get_UndefinePreprocessorDefinitions (
        /*[out,retval]*/ BSTR * Undefines ) = 0;
      virtual HRESULT __stdcall put_UndefinePreprocessorDefinitions (
        /*[in]*/ BSTR Undefines ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_FullIncludePath (
        /*[out,retval]*/ BSTR * FullIncludePath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum enumResourceLangID
{
    rcUseDefault = 0,
    rcAfrikaans = 1078,
    rcAlbanian = 1052,
    rcArabicSaudi = 1025,
    rcArabicIraq = 2049,
    rcArabicEgypt = 3073,
    rcArabicLibya = 4097,
    rcArabicAlgeria = 5121,
    rcArabicMorocco = 6145,
    rcArabicTunisia = 7169,
    rcArabicOman = 8193,
    rcArabicYemen = 9217,
    rcArabicSyria = 10241,
    rcArabicJordan = 11265,
    rcArabicLebanon = 12289,
    rcArabicKuwait = 13313,
    rcArabicUnitedArabEmirates = 14337,
    rcArabicBahrain = 15361,
    rcArabicQatar = 16385,
    rcBasque = 1069,
    rcBulgarian = 1026,
    rcByelorussian = 1059,
    rcCatalan = 1027,
    rcChineseTaiwan = 1028,
    rcChinesePRC = 2052,
    rcChineseHongKong = 3076,
    rcChineseSingapore = 4100,
    rcCroatian = 1050,
    rcCzech = 1029,
    rcDanish = 1030,
    rcDutchStandard = 1043,
    rcDutchBelgium = 2067,
    rcEnglishUS = 1033,
    rcEnglishBritain = 2057,
    rcEnglishAustralia = 3081,
    rcEnglishCanada = 4105,
    rcEnglishNewZealand = 5129,
    rcEnglishIreland = 6153,
    rcEnglishSouthAfrica = 7177,
    rcEnglishJamaica = 8201,
    rcEnglishCarribean = 9225,
    rcEstonian = 1061,
    rcFarsi = 1065,
    rcFinnish = 1035,
    rcFrenchStandard = 1036,
    rcFrenchBelgium = 2060,
    rcFrenchCanada = 3084,
    rcFrenchSwitzerland = 4108,
    rcFrenchLuxembourg = 5132,
    rcGermanStandard = 1031,
    rcGermanSwitzerland = 2055,
    rcGermanAustria = 3079,
    rcGermanLuxembourg = 4103,
    rcGermanLichtenstein = 5127,
    rcGreek = 1032,
    rcHebrew = 1037,
    rcHungarian = 1038,
    rcIcelandic = 1039,
    rcIndonesian = 1057,
    rcItalianStandard = 1040,
    rcItalianSwitzerland = 2064,
    rcJapanese = 1041,
    rcKorean = 1042,
    rcKoreanJohab = 2066,
    rcLatvian = 1062,
    rcLithuanian = 1063,
    rcNorwegianBokmal = 1044,
    rcNorwegianNynorsk = 2068,
    rcPolish = 1045,
    rcPortugueseBrazilian = 1046,
    rcPortugueseStandard = 2070,
    rcRomanian = 1048,
    rcRussian = 1049,
    rcSlovak = 1051,
    rcSpanishTraditional = 1034,
    rcSpanishMexico = 2058,
    rcSpanishModern = 3082,
    rcSpanishGuatemala = 4106,
    rcSpanishCostaRica = 5130,
    rcSpanishPanama = 6154,
    rcSpanishDominicanRepublic = 7178,
    rcSpanishVenezuela = 8202,
    rcSpanishColombia = 9226,
    rcSpanishPeru = 10250,
    rcSpanishArgentina = 11274,
    rcSpanishEcuador = 12298,
    rcSpanishChile = 13322,
    rcSpanishUruguay = 14346,
    rcSpanishParaguay = 15370,
    rcSpanishBolivia = 16394,
    rcSwedish = 1053,
    rcThai = 1054,
    rcTurkish = 1055,
    rcUkrainian = 1058,
    rcSerbian = 2074,
    rcUrdu = 1056
};

struct __declspec(uuid("9c22188a-f83a-11d2-8b4e-00c04f7956c9"))
VCResourceCompilerTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * AdditionalOptions ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR AdditionalOptions ) = 0;
      virtual HRESULT __stdcall get_PreprocessorDefinitions (
        /*[out,retval]*/ BSTR * Defines ) = 0;
      virtual HRESULT __stdcall put_PreprocessorDefinitions (
        /*[in]*/ BSTR Defines ) = 0;
      virtual HRESULT __stdcall get_Culture (
        /*[out,retval]*/ enum enumResourceLangID * LangID ) = 0;
      virtual HRESULT __stdcall put_Culture (
        /*[in]*/ enum enumResourceLangID LangID ) = 0;
      virtual HRESULT __stdcall get_AdditionalIncludeDirectories (
        /*[out,retval]*/ BSTR * IncludePath ) = 0;
      virtual HRESULT __stdcall put_AdditionalIncludeDirectories (
        /*[in]*/ BSTR IncludePath ) = 0;
      virtual HRESULT __stdcall get_IgnoreStandardIncludePath (
        /*[out,retval]*/ VARIANT_BOOL * IgnoreInclPath ) = 0;
      virtual HRESULT __stdcall put_IgnoreStandardIncludePath (
        /*[in]*/ VARIANT_BOOL IgnoreInclPath ) = 0;
      virtual HRESULT __stdcall get_ShowProgress (
        /*[out,retval]*/ VARIANT_BOOL * ShowProgress ) = 0;
      virtual HRESULT __stdcall put_ShowProgress (
        /*[in]*/ VARIANT_BOOL ShowProgress ) = 0;
      virtual HRESULT __stdcall get_ResourceOutputFileName (
        /*[out,retval]*/ BSTR * ResFile ) = 0;
      virtual HRESULT __stdcall put_ResourceOutputFileName (
        /*[in]*/ BSTR ResFile ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_FullIncludePath (
        /*[out,retval]*/ BSTR * FullIncludePath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("5fe8c14a-3bda-11d3-b976-00c04f685d26"))
VCPreBuildEventTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_CommandLine (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CommandLine (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ExcludedFromBuild (
        /*[out,retval]*/ VARIANT_BOOL * bExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall put_ExcludedFromBuild (
        /*[in]*/ VARIANT_BOOL bExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("5fe8c14d-3bda-11d3-b976-00c04f685d26"))
VCPreLinkEventTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_CommandLine (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CommandLine (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ExcludedFromBuild (
        /*[out,retval]*/ VARIANT_BOOL * bExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall put_ExcludedFromBuild (
        /*[in]*/ VARIANT_BOOL bExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("5fe8c150-3bda-11d3-b976-00c04f685d26"))
VCPostBuildEventTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_CommandLine (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CommandLine (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ExcludedFromBuild (
        /*[out,retval]*/ VARIANT_BOOL * bExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall put_ExcludedFromBuild (
        /*[in]*/ VARIANT_BOOL bExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("bee77b72-f846-11d2-8b4e-00c04f7956c9"))
VCBscMakeTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * Options ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR Options ) = 0;
      virtual HRESULT __stdcall get_SuppressStartupBanner (
        /*[out,retval]*/ VARIANT_BOOL * NoLogo ) = 0;
      virtual HRESULT __stdcall put_SuppressStartupBanner (
        /*[in]*/ VARIANT_BOOL NoLogo ) = 0;
      virtual HRESULT __stdcall get_OutputFile (
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall put_OutputFile (
        /*[in]*/ BSTR Out ) = 0;
      virtual HRESULT __stdcall get_RunBSCMakeTool (
        /*[out,retval]*/ VARIANT_BOOL * Run ) = 0;
      virtual HRESULT __stdcall put_RunBSCMakeTool (
        /*[in]*/ VARIANT_BOOL Run ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("5ad57b85-609c-11d3-941f-00c04f68fb62"))
VCNMakeTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_BuildCommandLine (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_BuildCommandLine (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ReBuildCommandLine (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_ReBuildCommandLine (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_CleanCommandLine (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_CleanCommandLine (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_Output (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall put_Output (
        /*[in]*/ BSTR pVal ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * pVal ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum genProxyLanguage
{
    genProxyNative = 0,
    genProxyManaged = 1
};

struct __declspec(uuid("0c9ed780-690d-4f0e-8377-9aedf15cf9fa"))
VCWebServiceProxyGeneratorTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_Output (
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall put_Output (
        /*[in]*/ BSTR Out ) = 0;
      virtual HRESULT __stdcall get_SuppressStartupBanner (
        /*[out,retval]*/ VARIANT_BOOL * suppress ) = 0;
      virtual HRESULT __stdcall put_SuppressStartupBanner (
        /*[in]*/ VARIANT_BOOL suppress ) = 0;
      virtual HRESULT __stdcall get_GeneratedProxyLanguage (
        /*[out,retval]*/ enum genProxyLanguage * language ) = 0;
      virtual HRESULT __stdcall put_GeneratedProxyLanguage (
        /*[in]*/ enum genProxyLanguage language ) = 0;
      virtual HRESULT __stdcall get_AdditionalOptions (
        /*[out,retval]*/ BSTR * Options ) = 0;
      virtual HRESULT __stdcall put_AdditionalOptions (
        /*[in]*/ BSTR Options ) = 0;
      virtual HRESULT __stdcall get_URL (
        /*[out,retval]*/ BSTR * urlPath ) = 0;
      virtual HRESULT __stdcall put_URL (
        /*[in]*/ BSTR urlPath ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum eAppProtectionOption
{
    eAppProtectLow = 0,
    eAppProtectMedium = 1,
    eAppProtectHigh = 2
};

struct __declspec(uuid("3c8d096c-9043-4b0d-b889-19d3938bb8da"))
VCWebDeploymentTool : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ToolName (
        /*[out,retval]*/ BSTR * ToolName ) = 0;
      virtual HRESULT __stdcall get_ExcludedFromBuild (
        /*[out,retval]*/ VARIANT_BOOL * disableDeploy ) = 0;
      virtual HRESULT __stdcall put_ExcludedFromBuild (
        /*[in]*/ VARIANT_BOOL disableDeploy ) = 0;
      virtual HRESULT __stdcall get_RelativePath (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall put_RelativePath (
        /*[in]*/ BSTR dir ) = 0;
      virtual HRESULT __stdcall get_AdditionalFiles (
        /*[out,retval]*/ BSTR * files ) = 0;
      virtual HRESULT __stdcall put_AdditionalFiles (
        /*[in]*/ BSTR files ) = 0;
      virtual HRESULT __stdcall get_UnloadBeforeCopy (
        /*[out,retval]*/ VARIANT_BOOL * unloadFirst ) = 0;
      virtual HRESULT __stdcall put_UnloadBeforeCopy (
        /*[in]*/ VARIANT_BOOL unloadFirst ) = 0;
      virtual HRESULT __stdcall get_RegisterOutput (
        /*[out,retval]*/ VARIANT_BOOL * regDLL ) = 0;
      virtual HRESULT __stdcall put_RegisterOutput (
        /*[in]*/ VARIANT_BOOL regDLL ) = 0;
      virtual HRESULT __stdcall get_VirtualDirectoryName (
        /*[out,retval]*/ BSTR * virtRoot ) = 0;
      virtual HRESULT __stdcall put_VirtualDirectoryName (
        /*[in]*/ BSTR virtRoot ) = 0;
      virtual HRESULT __stdcall get_ApplicationMappings (
        /*[out,retval]*/ BSTR * mapping ) = 0;
      virtual HRESULT __stdcall put_ApplicationMappings (
        /*[in]*/ BSTR mapping ) = 0;
      virtual HRESULT __stdcall get_ApplicationProtection (
        /*[out,retval]*/ enum eAppProtectionOption * option ) = 0;
      virtual HRESULT __stdcall put_ApplicationProtection (
        /*[in]*/ enum eAppProtectionOption option ) = 0;
      virtual HRESULT __stdcall get_ToolPath (
        /*[out,retval]*/ BSTR * ToolPath ) = 0;
      virtual HRESULT __stdcall get_PropertyOption (
        /*[in]*/ BSTR Prop,
        /*[in]*/ long dispidProp,
        /*[out,retval]*/ BSTR * propVal ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum RemoteDebuggerType
{
    DbgLocal = 0,
    DbgRemote = 1,
    DbgRemoteTCPIP = 2
};

enum TypeOfDebugger
{
    DbgNativeOnly = 0,
    DbgManagedOnly = 1,
    DbgMixed = 2,
    DbgAuto = 3
};

struct __declspec(uuid("a54aae87-30c2-11d3-87bf-a04a4cc10000"))
VCDebugSettings : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Command (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_Command (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_CommandArguments (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_CommandArguments (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_WorkingDirectory (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_WorkingDirectory (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_Attach (
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall put_Attach (
        /*[in]*/ VARIANT_BOOL Val ) = 0;
      virtual HRESULT __stdcall get_Remote (
        /*[out,retval]*/ enum RemoteDebuggerType * Val ) = 0;
      virtual HRESULT __stdcall put_Remote (
        /*[in]*/ enum RemoteDebuggerType Val ) = 0;
      virtual HRESULT __stdcall get_RemoteMachine (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_RemoteMachine (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_DebuggerType (
        /*[out,retval]*/ enum TypeOfDebugger * Val ) = 0;
      virtual HRESULT __stdcall put_DebuggerType (
        /*[in]*/ enum TypeOfDebugger Val ) = 0;
      virtual HRESULT __stdcall get_RemoteCommand (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_RemoteCommand (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_HttpUrl (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_HttpUrl (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_PDBPath (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_PDBPath (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_SQLDebugging (
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall put_SQLDebugging (
        /*[in]*/ VARIANT_BOOL Val ) = 0;
};

struct __declspec(uuid("a54aae9a-30c2-11d3-87bf-a04a4cc10000"))
IVCCollection : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall _NewEnum (
        /*[out,retval]*/ IUnknown * * Enumerator ) = 0;
      virtual HRESULT __stdcall Item (
        VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Val ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("a54aae90-30c2-11d3-87bf-a04a4cc10000"))
VCPlatform : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ExecutableDirectories (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall put_ExecutableDirectories (
        /*[in]*/ BSTR dir ) = 0;
      virtual HRESULT __stdcall get_IncludeDirectories (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall put_IncludeDirectories (
        /*[in]*/ BSTR dir ) = 0;
      virtual HRESULT __stdcall get_ReferenceDirectories (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall put_ReferenceDirectories (
        /*[in]*/ BSTR dir ) = 0;
      virtual HRESULT __stdcall get_LibraryDirectories (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall put_LibraryDirectories (
        /*[in]*/ BSTR dir ) = 0;
      virtual HRESULT __stdcall get_SourceDirectories (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall put_SourceDirectories (
        /*[in]*/ BSTR dir ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * dir ) = 0;
      virtual HRESULT __stdcall get_Tools (
        /*[out,retval]*/ IDispatch * * dir ) = 0;
      virtual HRESULT __stdcall MatchName (
        /*[in]*/ BSTR NameToMatch,
        /*[in]*/ VARIANT_BOOL FullOnly,
        /*[out,retval]*/ VARIANT_BOOL * IsMatch ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ BSTR In,
        /*[out,retval]*/ BSTR * Out ) = 0;
};

struct __declspec(uuid("33f3d4a0-6763-4b88-b8c5-478446efb51e"))
VCProjectItem : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall MatchName (
        /*[in]*/ BSTR NameToMatch,
        /*[in]*/ VARIANT_BOOL FullOnly,
        /*[out,retval]*/ VARIANT_BOOL * IsMatch ) = 0;
      virtual HRESULT __stdcall get_Project (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall get_ItemName (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall get_Kind (
        /*[out,retval]*/ BSTR * Kind ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum enumFileFormat
{
    eANSI = 0,
    eUTF8 = 1,
    eUnicode = 2
};

struct __declspec(uuid("625c6494-2c7e-11d3-87bf-a0494cc10000"))
VCProject : VCProjectItem
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_ProjectDirectory (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall get_ProjectFile (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_ProjectFile (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_Platforms (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall AddPlatform (
        /*[in]*/ BSTR PlatformName ) = 0;
      virtual HRESULT __stdcall RemovePlatform (
        /*[in]*/ IDispatch * Platform ) = 0;
      virtual HRESULT __stdcall get_Configurations (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall AddConfiguration (
        BSTR ConfigurationName ) = 0;
      virtual HRESULT __stdcall RemoveConfiguration (
        IDispatch * Config ) = 0;
      virtual HRESULT __stdcall get_files (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall CanAddFile (
        /*[in]*/ BSTR File,
        /*[out,retval]*/ VARIANT_BOOL * canAdd ) = 0;
      virtual HRESULT __stdcall AddFile (
        BSTR bstrPath,
        /*[out,retval]*/ IDispatch * * Disp ) = 0;
      virtual HRESULT __stdcall RemoveFile (
        /*[in]*/ IDispatch * File ) = 0;
      virtual HRESULT __stdcall get_Filters (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall CanAddFilter (
        /*[in]*/ BSTR Filter,
        /*[out,retval]*/ VARIANT_BOOL * canAdd ) = 0;
      virtual HRESULT __stdcall AddFilter (
        BSTR bstrFilterName,
        /*[out,retval]*/ IDispatch * * Disp ) = 0;
      virtual HRESULT __stdcall RemoveFilter (
        /*[in]*/ IDispatch * Filter ) = 0;
      virtual HRESULT __stdcall get_Items (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall AddWebReference (
        /*[in]*/ BSTR URL,
        /*[out,retval]*/ IDispatch * * File ) = 0;
      virtual HRESULT __stdcall Save ( ) = 0;
      virtual HRESULT __stdcall get_IsDirty (
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall get_FileFormat (
        /*[out,retval]*/ enum enumFileFormat * FileType ) = 0;
      virtual HRESULT __stdcall put_FileFormat (
        /*[in]*/ enum enumFileFormat FileType ) = 0;
      virtual HRESULT __stdcall get_FileEncoding (
        /*[out,retval]*/ BSTR * encoding ) = 0;
      virtual HRESULT __stdcall put_FileEncoding (
        /*[in]*/ BSTR encoding ) = 0;
      virtual HRESULT __stdcall SaveProjectOptions (
        /*[in]*/ IUnknown * StreamUnk ) = 0;
      virtual HRESULT __stdcall LoadProjectOptions (
        /*[in]*/ IUnknown * StreamUnk ) = 0;
      virtual HRESULT __stdcall get_SccProjectName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_SccProjectName (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SccAuxPath (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_SccAuxPath (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SccLocalPath (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_SccLocalPath (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SccProvider (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_SccProvider (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Keyword (
        /*[out,retval]*/ BSTR * Keyword ) = 0;
      virtual HRESULT __stdcall put_Keyword (
        /*[in]*/ BSTR Keyword ) = 0;
      virtual HRESULT __stdcall put_OwnerKey (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_OwnerKey (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_ProjectGUID (
        /*[in]*/ BSTR guid ) = 0;
      virtual HRESULT __stdcall get_ProjectGUID (
        /*[out,retval]*/ BSTR * guid ) = 0;
};

struct __declspec(uuid("625c6497-2c7e-11d3-87bf-a0494cc10000"))
VCFile : VCProjectItem
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall Remove ( ) = 0;
      virtual HRESULT __stdcall get_RelativePath (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_RelativePath (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_FullPath (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall get_FileConfigurations (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall get_DeploymentContent (
        /*[out,retval]*/ VARIANT_BOOL * Val ) = 0;
      virtual HRESULT __stdcall put_DeploymentContent (
        /*[in]*/ VARIANT_BOOL Val ) = 0;
      virtual HRESULT __stdcall get_Extension (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ IDispatch * Parent ) = 0;
      virtual HRESULT __stdcall CanMove (
        /*[in]*/ IDispatch * Parent,
        /*[out,retval]*/ VARIANT_BOOL * CanMove ) = 0;
};

struct __declspec(uuid("625c649a-2c7e-11d3-87bf-a0494cc10000"))
VCFilter : VCProjectItem
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_UniqueIdentifier (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_UniqueIdentifier (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_CanonicalName (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall Remove ( ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Val ) = 0;
      virtual HRESULT __stdcall get_Filters (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall get_files (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall AddFilter (
        BSTR bstrName,
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall CanAddFilter (
        /*[in]*/ BSTR Filter,
        /*[out,retval]*/ VARIANT_BOOL * canAdd ) = 0;
      virtual HRESULT __stdcall AddFile (
        BSTR bstrPath,
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall CanAddFile (
        /*[in]*/ BSTR bstrFile,
        /*[out,retval]*/ VARIANT_BOOL * canAdd ) = 0;
      virtual HRESULT __stdcall RemoveFile (
        /*[in]*/ IDispatch * File ) = 0;
      virtual HRESULT __stdcall RemoveFilter (
        /*[in]*/ IDispatch * Filter ) = 0;
      virtual HRESULT __stdcall get_Items (
        /*[out,retval]*/ IDispatch * * Items ) = 0;
      virtual HRESULT __stdcall get_ParseFiles (
        /*[out,retval]*/ VARIANT_BOOL * Parse ) = 0;
      virtual HRESULT __stdcall put_ParseFiles (
        /*[in]*/ VARIANT_BOOL Parse ) = 0;
      virtual HRESULT __stdcall get_SourceControlFiles (
        /*[out,retval]*/ VARIANT_BOOL * SCC ) = 0;
      virtual HRESULT __stdcall put_SourceControlFiles (
        /*[in]*/ VARIANT_BOOL SCC ) = 0;
      virtual HRESULT __stdcall AddWebReference (
        /*[in]*/ BSTR bstrUrl,
        /*[out,retval]*/ IDispatch * * File ) = 0;
      virtual HRESULT __stdcall Move (
        /*[in]*/ IDispatch * Parent ) = 0;
      virtual HRESULT __stdcall CanMove (
        /*[in]*/ IDispatch * Parent,
        /*[out,retval]*/ VARIANT_BOOL * CanMove ) = 0;
};

enum ConfigurationTypes
{
    typeUnknown = 0,
    typeApplication = 1,
    typeDynamicLibrary = 2,
    typeStaticLibrary = 4,
    typeGeneric = 10
};

enum useOfMfc
{
    useMfcStdWin = 0,
    useMfcStatic = 1,
    useMfcDynamic = 2
};

enum useOfATL
{
    useATLNotSet = 0,
    useATLStatic = 1,
    useATLDynamic = 2
};

enum charSet
{
    charSetNotSet = 0,
    charSetUnicode = 1,
    charSetMBCS = 2
};

struct __declspec(uuid("625c649d-2c7e-11d3-87bf-a0494cc10000"))
VCConfiguration : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * cfgName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR cfgName ) = 0;
      virtual HRESULT __stdcall get_Platform (
        /*[out,retval]*/ IDispatch * * assocPlatform ) = 0;
      virtual HRESULT __stdcall get_OutputDirectory (
        /*[out,retval]*/ BSTR * outDir ) = 0;
      virtual HRESULT __stdcall put_OutputDirectory (
        /*[in]*/ BSTR outDir ) = 0;
      virtual HRESULT __stdcall get_IntermediateDirectory (
        /*[out,retval]*/ BSTR * intDir ) = 0;
      virtual HRESULT __stdcall put_IntermediateDirectory (
        /*[in]*/ BSTR intDir ) = 0;
      virtual HRESULT __stdcall Delete ( ) = 0;
      virtual HRESULT __stdcall Build ( ) = 0;
      virtual HRESULT __stdcall Rebuild ( ) = 0;
      virtual HRESULT __stdcall Clean ( ) = 0;
      virtual HRESULT __stdcall get_DebugSettings (
        /*[out,retval]*/ IDispatch * * DbgSettings ) = 0;
      virtual HRESULT __stdcall get_PrimaryOutput (
        /*[out,retval]*/ BSTR * primaryOut ) = 0;
      virtual HRESULT __stdcall get_ImportLibrary (
        /*[out,retval]*/ BSTR * ImportLib ) = 0;
      virtual HRESULT __stdcall get_ProgramDatabase (
        /*[out,retval]*/ BSTR * PDB ) = 0;
      virtual HRESULT __stdcall get_Project (
        /*[out,retval]*/ IDispatch * * proj ) = 0;
      virtual HRESULT __stdcall MatchName (
        /*[in]*/ BSTR NameToMatch,
        /*[in]*/ VARIANT_BOOL FullOnly,
        /*[out,retval]*/ VARIANT_BOOL * IsMatch ) = 0;
      virtual HRESULT __stdcall get_Tools (
        /*[out,retval]*/ IDispatch * * toolList ) = 0;
      virtual HRESULT __stdcall get_FileTools (
        /*[out,retval]*/ struct IVCCollection * * fileToolList ) = 0;
      virtual HRESULT __stdcall get_ConfigurationName (
        /*[out,retval]*/ BSTR * cfgName ) = 0;
      virtual HRESULT __stdcall put_ConfigurationName (
        /*[in]*/ BSTR cfgName ) = 0;
      virtual HRESULT __stdcall get_UpToDate (
        /*[out,retval]*/ VARIANT_BOOL * IsUpToDate ) = 0;
      virtual HRESULT __stdcall get_ConfigurationType (
        /*[out,retval]*/ enum ConfigurationTypes * ConfigType ) = 0;
      virtual HRESULT __stdcall put_ConfigurationType (
        /*[in]*/ enum ConfigurationTypes ConfigType ) = 0;
      virtual HRESULT __stdcall CopyTo (
        IDispatch * Config ) = 0;
      virtual HRESULT __stdcall get_AppliedStyleSheets (
        /*[out,retval]*/ BSTR * Styles ) = 0;
      virtual HRESULT __stdcall put_AppliedStyleSheets (
        /*[in]*/ BSTR Styles ) = 0;
      virtual HRESULT __stdcall get_BuildBrowserInformation (
        /*[out,retval]*/ VARIANT_BOOL * Bsc ) = 0;
      virtual HRESULT __stdcall put_BuildBrowserInformation (
        /*[in]*/ VARIANT_BOOL Bsc ) = 0;
      virtual HRESULT __stdcall get_useOfMfc (
        /*[out,retval]*/ enum useOfMfc * useMfc ) = 0;
      virtual HRESULT __stdcall put_useOfMfc (
        /*[in]*/ enum useOfMfc useMfc ) = 0;
      virtual HRESULT __stdcall get_useOfATL (
        /*[out,retval]*/ enum useOfATL * useATL ) = 0;
      virtual HRESULT __stdcall put_useOfATL (
        /*[in]*/ enum useOfATL useATL ) = 0;
      virtual HRESULT __stdcall get_ATLMinimizesCRunTimeLibraryUsage (
        /*[out,retval]*/ VARIANT_BOOL * UseCRT ) = 0;
      virtual HRESULT __stdcall put_ATLMinimizesCRunTimeLibraryUsage (
        /*[in]*/ VARIANT_BOOL UseCRT ) = 0;
      virtual HRESULT __stdcall get_CharacterSet (
        /*[out,retval]*/ enum charSet * optSetting ) = 0;
      virtual HRESULT __stdcall put_CharacterSet (
        /*[in]*/ enum charSet optSetting ) = 0;
      virtual HRESULT __stdcall get_ManagedExtensions (
        /*[out,retval]*/ VARIANT_BOOL * Managed ) = 0;
      virtual HRESULT __stdcall put_ManagedExtensions (
        /*[in]*/ VARIANT_BOOL Managed ) = 0;
      virtual HRESULT __stdcall get_DeleteExtensionsOnClean (
        /*[out,retval]*/ BSTR * ExtList ) = 0;
      virtual HRESULT __stdcall put_DeleteExtensionsOnClean (
        /*[in]*/ BSTR ExtList ) = 0;
      virtual HRESULT __stdcall get_WholeProgramOptimization (
        /*[out,retval]*/ VARIANT_BOOL * Optimize ) = 0;
      virtual HRESULT __stdcall put_WholeProgramOptimization (
        /*[in]*/ VARIANT_BOOL Optimize ) = 0;
      virtual HRESULT __stdcall get_RegisterOutput (
        /*[out,retval]*/ VARIANT_BOOL * doRegister ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ BSTR In,
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall get_StyleSheets (
        /*[out,retval]*/ IDispatch * * Styles ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum toolSetType
{
    toolSetUtility = 0,
    toolSetMakefile = 1,
    toolSetLinker = 2,
    toolSetLibrarian = 3,
    toolSetAll = 4
};

struct __declspec(uuid("cc7aebb9-a788-11d3-b99f-00c04f685d26"))
VCStyleSheet : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * styleName ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR styleName ) = 0;
      virtual HRESULT __stdcall get_Platform (
        /*[out,retval]*/ IDispatch * * assocPlatform ) = 0;
      virtual HRESULT __stdcall get_PlatformName (
        /*[out,retval]*/ BSTR * assocPlatformName ) = 0;
      virtual HRESULT __stdcall put_PlatformName (
        /*[in]*/ BSTR assocPlatformName ) = 0;
      virtual HRESULT __stdcall MatchName (
        /*[in]*/ BSTR NameToMatch,
        /*[in]*/ VARIANT_BOOL FullOnly,
        /*[out,retval]*/ VARIANT_BOOL * IsMatch ) = 0;
      virtual HRESULT __stdcall get_StyleSheetName (
        /*[out,retval]*/ BSTR * styleName ) = 0;
      virtual HRESULT __stdcall put_StyleSheetName (
        /*[in]*/ BSTR styleName ) = 0;
      virtual HRESULT __stdcall get_StyleSheetFile (
        /*[out,retval]*/ BSTR * File ) = 0;
      virtual HRESULT __stdcall put_StyleSheetFile (
        /*[in]*/ BSTR File ) = 0;
      virtual HRESULT __stdcall get_Tools (
        /*[out,retval]*/ IDispatch * * Tools ) = 0;
      virtual HRESULT __stdcall get_FileTools (
        /*[out,retval]*/ struct IVCCollection * * fileToolList ) = 0;
      virtual HRESULT __stdcall get_IsDirty (
        /*[out,retval]*/ VARIANT_BOOL * dirty ) = 0;
      virtual HRESULT __stdcall get_ToolSet (
        /*[out,retval]*/ enum toolSetType * ToolSetList ) = 0;
      virtual HRESULT __stdcall put_ToolSet (
        /*[in]*/ enum toolSetType ToolSetList ) = 0;
      virtual HRESULT __stdcall get_StyleSheets (
        /*[out,retval]*/ IDispatch * * Styles ) = 0;
      virtual HRESULT __stdcall get_IntermediateDirectory (
        /*[out,retval]*/ BSTR * intDir ) = 0;
      virtual HRESULT __stdcall put_IntermediateDirectory (
        /*[in]*/ BSTR intDir ) = 0;
      virtual HRESULT __stdcall get_OutputDirectory (
        /*[out,retval]*/ BSTR * outDir ) = 0;
      virtual HRESULT __stdcall put_OutputDirectory (
        /*[in]*/ BSTR outDir ) = 0;
      virtual HRESULT __stdcall get_AppliedStyleSheets (
        /*[out,retval]*/ BSTR * StyleNames ) = 0;
      virtual HRESULT __stdcall put_AppliedStyleSheets (
        /*[in]*/ BSTR StyleNames ) = 0;
      virtual HRESULT __stdcall get_BuildBrowserInformation (
        /*[out,retval]*/ VARIANT_BOOL * Bsc ) = 0;
      virtual HRESULT __stdcall put_BuildBrowserInformation (
        /*[in]*/ VARIANT_BOOL Bsc ) = 0;
      virtual HRESULT __stdcall get_useOfMfc (
        /*[out,retval]*/ enum useOfMfc * useMfc ) = 0;
      virtual HRESULT __stdcall put_useOfMfc (
        /*[in]*/ enum useOfMfc useMfc ) = 0;
      virtual HRESULT __stdcall get_useOfATL (
        /*[out,retval]*/ enum useOfATL * useATL ) = 0;
      virtual HRESULT __stdcall put_useOfATL (
        /*[in]*/ enum useOfATL useATL ) = 0;
      virtual HRESULT __stdcall get_ATLMinimizesCRunTimeLibraryUsage (
        /*[out,retval]*/ VARIANT_BOOL * UseCRT ) = 0;
      virtual HRESULT __stdcall put_ATLMinimizesCRunTimeLibraryUsage (
        /*[in]*/ VARIANT_BOOL UseCRT ) = 0;
      virtual HRESULT __stdcall get_CharacterSet (
        /*[out,retval]*/ enum charSet * optSetting ) = 0;
      virtual HRESULT __stdcall put_CharacterSet (
        /*[in]*/ enum charSet optSetting ) = 0;
      virtual HRESULT __stdcall get_ManagedExtensions (
        /*[out,retval]*/ VARIANT_BOOL * Managed ) = 0;
      virtual HRESULT __stdcall put_ManagedExtensions (
        /*[in]*/ VARIANT_BOOL Managed ) = 0;
      virtual HRESULT __stdcall get_DeleteExtensionsOnClean (
        /*[out,retval]*/ BSTR * ExtList ) = 0;
      virtual HRESULT __stdcall put_DeleteExtensionsOnClean (
        /*[in]*/ BSTR ExtList ) = 0;
      virtual HRESULT __stdcall get_WholeProgramOptimization (
        /*[out,retval]*/ VARIANT_BOOL * Optimize ) = 0;
      virtual HRESULT __stdcall put_WholeProgramOptimization (
        /*[in]*/ VARIANT_BOOL Optimize ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

struct __declspec(uuid("a54aae8a-30c2-11d3-87bf-a04a4cc10000"))
VCFileConfiguration : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Val ) = 0;
      virtual HRESULT __stdcall get_Tool (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall put_Tool (
        /*[in]*/ IDispatch * Val ) = 0;
      virtual HRESULT __stdcall get_ExcludedFromBuild (
        /*[out,retval]*/ VARIANT_BOOL * ExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall put_ExcludedFromBuild (
        /*[in]*/ VARIANT_BOOL ExcludedFromBuild ) = 0;
      virtual HRESULT __stdcall MatchName (
        /*[in]*/ BSTR bstrNameToMatch,
        /*[in]*/ VARIANT_BOOL FullOnly,
        /*[out,retval]*/ VARIANT_BOOL * Match ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall get_File (
        /*[out,retval]*/ IDispatch * * Val ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ BSTR bstrIn,
        /*[out,retval]*/ BSTR * Out ) = 0;
      virtual HRESULT __stdcall get_VCProjectEngine (
        /*[out,retval]*/ IDispatch * * ProjectEngine ) = 0;
};

enum enumSccEvent
{
    eProjectInScc = 0,
    ePreDirtyNotification = 1
};

struct __declspec(uuid("66dc6c13-d282-11d2-8d1a-00c04f8eea30"))
IVCProjectEngineEvents : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall ItemAdded (
        IDispatch * Item,
        IDispatch * ItemParent ) = 0;
      virtual HRESULT __stdcall ItemRemoved (
        IDispatch * Item,
        IDispatch * ItemParent ) = 0;
      virtual HRESULT __stdcall ItemRenamed (
        IDispatch * Item,
        IDispatch * ItemParent,
        BSTR OldName ) = 0;
      virtual HRESULT __stdcall ItemMoved (
        IDispatch * Item,
        IDispatch * NewParent,
        IDispatch * OldParent ) = 0;
      virtual HRESULT __stdcall ItemPropertyChange (
        IDispatch * Item,
        long dispid ) = 0;
      virtual HRESULT __stdcall SccEvent (
        IDispatch * Item,
        enum enumSccEvent event,
        /*[out,retval]*/ VARIANT_BOOL * Ret ) = 0;
      virtual HRESULT __stdcall ReportError (
        BSTR ErrMsg,
        HRESULT hr,
        BSTR HelpKeyword ) = 0;
      virtual HRESULT __stdcall ProjectBuildStarted (
        IDispatch * Cfg ) = 0;
      virtual HRESULT __stdcall ProjectBuildFinished (
        IDispatch * Cfg,
        long Warnings,
        long errors,
        VARIANT_BOOL Cancelled ) = 0;
};

struct __declspec(uuid("5f495f17-94d6-43d2-af66-490aa1e04a79"))
_dispVCProjectEngineEvents : IDispatch
{};

struct __declspec(uuid("5f495f18-94d6-43d2-af66-490aa1e04a79"))
_VCProjectEngineEvents : IDispatch
{};

struct __declspec(uuid("9b3bfea2-2039-4702-9f2f-0b0e8669154d"))
VCProjectEngineEvents;
    // [ default ] interface _VCProjectEngineEvents
    // [ default, source ] dispinterface _dispVCProjectEngineEvents

struct __declspec(uuid("9f367027-33c6-11d3-8d52-00c04f8ecdb6"))
VCProjectEngineObject;
    // [ default ] interface VCProjectEngine

struct __declspec(uuid("9f367026-33c6-11d3-8d52-00c04f8ecdb6"))
VCProjectEngine : IDispatch
{
    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BuildLogging (
        /*[out,retval]*/ VARIANT_BOOL * Log ) = 0;
      virtual HRESULT __stdcall put_BuildLogging (
        /*[in]*/ VARIANT_BOOL Log ) = 0;
      virtual HRESULT __stdcall get_BuildTiming (
        /*[out,retval]*/ VARIANT_BOOL * Time ) = 0;
      virtual HRESULT __stdcall put_BuildTiming (
        /*[in]*/ VARIANT_BOOL Time ) = 0;
      virtual HRESULT __stdcall get_PerformanceLogging (
        /*[out,retval]*/ VARIANT_BOOL * Time ) = 0;
      virtual HRESULT __stdcall put_PerformanceLogging (
        /*[in]*/ VARIANT_BOOL Time ) = 0;
      virtual HRESULT __stdcall IsSystemInclude (
        /*[in]*/ BSTR Include,
        /*[out,retval]*/ VARIANT_BOOL * IsSystem ) = 0;
      virtual HRESULT __stdcall get_Events (
        /*[out,retval]*/ IDispatch * * ProjectEngineEvents ) = 0;
      virtual HRESULT __stdcall get_Platforms (
        /*[out,retval]*/ IDispatch * * Platforms ) = 0;
      virtual HRESULT __stdcall get_Projects (
        /*[out,retval]*/ IDispatch * * Projects ) = 0;
      virtual HRESULT __stdcall CreateProject (
        /*[in]*/ BSTR projectName,
        /*[out,retval]*/ IDispatch * * Project ) = 0;
      virtual HRESULT __stdcall LoadProject (
        /*[in]*/ BSTR projectName,
        /*[out,retval]*/ IDispatch * * Project ) = 0;
      virtual HRESULT __stdcall RemoveProject (
        /*[in]*/ IDispatch * Project ) = 0;
      virtual HRESULT __stdcall get_StyleSheets (
        /*[out,retval]*/ IDispatch * * StyleSheets ) = 0;
      virtual HRESULT __stdcall LoadStyleSheet (
        /*[in]*/ BSTR bstrName,
        /*[out,retval]*/ IDispatch * * StyleSheet ) = 0;
      virtual HRESULT __stdcall CreateStyleSheet (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ IDispatch * * StyleSheet ) = 0;
      virtual HRESULT __stdcall RemoveStyleSheet (
        /*[in]*/ IDispatch * StyleSheet ) = 0;
      virtual HRESULT __stdcall Evaluate (
        /*[in]*/ BSTR In,
        /*[out,retval]*/ BSTR * Out ) = 0;
};

//
// Named GUID constants initializations
//

extern "C" const GUID __declspec(selectany) LIBID_VCProjectEngineLibrary =
    {0x9f367018,0x33c6,0x11d3,{0x8d,0x52,0x00,0xc0,0x4f,0x8e,0xcd,0xb6}};
extern "C" const GUID __declspec(selectany) IID_VCCLCompilerTool =
    {0x6b5125e9,0xaa7c,0x11d2,{0x8d,0x0f,0x00,0xc0,0x4f,0x8e,0xea,0x30}};
extern "C" const GUID __declspec(selectany) IID_VCLinkerTool =
    {0xbee77b68,0xf846,0x11d2,{0x8b,0x4e,0x00,0xc0,0x4f,0x79,0x56,0xc9}};
extern "C" const GUID __declspec(selectany) IID_VCLibrarianTool =
    {0xbee77b6b,0xf846,0x11d2,{0x8b,0x4e,0x00,0xc0,0x4f,0x79,0x56,0xc9}};
extern "C" const GUID __declspec(selectany) IID_VCCustomBuildTool =
    {0x0a35da51,0xaaad,0x11d2,{0x8d,0x0f,0x00,0xc0,0x4f,0x8e,0xea,0x30}};
extern "C" const GUID __declspec(selectany) IID_VCMidlTool =
    {0x0ac5b928,0xf78e,0x11d2,{0x8b,0x4e,0x00,0xc0,0x4f,0x79,0x56,0xc9}};
extern "C" const GUID __declspec(selectany) IID_VCResourceCompilerTool =
    {0x9c22188a,0xf83a,0x11d2,{0x8b,0x4e,0x00,0xc0,0x4f,0x79,0x56,0xc9}};
extern "C" const GUID __declspec(selectany) IID_VCPreBuildEventTool =
    {0x5fe8c14a,0x3bda,0x11d3,{0xb9,0x76,0x00,0xc0,0x4f,0x68,0x5d,0x26}};
extern "C" const GUID __declspec(selectany) IID_VCPreLinkEventTool =
    {0x5fe8c14d,0x3bda,0x11d3,{0xb9,0x76,0x00,0xc0,0x4f,0x68,0x5d,0x26}};
extern "C" const GUID __declspec(selectany) IID_VCPostBuildEventTool =
    {0x5fe8c150,0x3bda,0x11d3,{0xb9,0x76,0x00,0xc0,0x4f,0x68,0x5d,0x26}};
extern "C" const GUID __declspec(selectany) IID_VCBscMakeTool =
    {0xbee77b72,0xf846,0x11d2,{0x8b,0x4e,0x00,0xc0,0x4f,0x79,0x56,0xc9}};
extern "C" const GUID __declspec(selectany) IID_VCNMakeTool =
    {0x5ad57b85,0x609c,0x11d3,{0x94,0x1f,0x00,0xc0,0x4f,0x68,0xfb,0x62}};
extern "C" const GUID __declspec(selectany) IID_VCWebServiceProxyGeneratorTool =
    {0x0c9ed780,0x690d,0x4f0e,{0x83,0x77,0x9a,0xed,0xf1,0x5c,0xf9,0xfa}};
extern "C" const GUID __declspec(selectany) IID_VCWebDeploymentTool =
    {0x3c8d096c,0x9043,0x4b0d,{0xb8,0x89,0x19,0xd3,0x93,0x8b,0xb8,0xda}};
extern "C" const GUID __declspec(selectany) IID_VCDebugSettings =
    {0xa54aae87,0x30c2,0x11d3,{0x87,0xbf,0xa0,0x4a,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IVCCollection =
    {0xa54aae9a,0x30c2,0x11d3,{0x87,0xbf,0xa0,0x4a,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_VCPlatform =
    {0xa54aae90,0x30c2,0x11d3,{0x87,0xbf,0xa0,0x4a,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_VCProjectItem =
    {0x33f3d4a0,0x6763,0x4b88,{0xb8,0xc5,0x47,0x84,0x46,0xef,0xb5,0x1e}};
extern "C" const GUID __declspec(selectany) IID_VCProject =
    {0x625c6494,0x2c7e,0x11d3,{0x87,0xbf,0xa0,0x49,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_VCFile =
    {0x625c6497,0x2c7e,0x11d3,{0x87,0xbf,0xa0,0x49,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_VCFilter =
    {0x625c649a,0x2c7e,0x11d3,{0x87,0xbf,0xa0,0x49,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_VCConfiguration =
    {0x625c649d,0x2c7e,0x11d3,{0x87,0xbf,0xa0,0x49,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_VCStyleSheet =
    {0xcc7aebb9,0xa788,0x11d3,{0xb9,0x9f,0x00,0xc0,0x4f,0x68,0x5d,0x26}};
extern "C" const GUID __declspec(selectany) IID_VCFileConfiguration =
    {0xa54aae8a,0x30c2,0x11d3,{0x87,0xbf,0xa0,0x4a,0x4c,0xc1,0x00,0x00}};
extern "C" const GUID __declspec(selectany) IID_IVCProjectEngineEvents =
    {0x66dc6c13,0xd282,0x11d2,{0x8d,0x1a,0x00,0xc0,0x4f,0x8e,0xea,0x30}};
extern "C" const GUID __declspec(selectany) DIID__dispVCProjectEngineEvents =
    {0x5f495f17,0x94d6,0x43d2,{0xaf,0x66,0x49,0x0a,0xa1,0xe0,0x4a,0x79}};
extern "C" const GUID __declspec(selectany) IID__VCProjectEngineEvents =
    {0x5f495f18,0x94d6,0x43d2,{0xaf,0x66,0x49,0x0a,0xa1,0xe0,0x4a,0x79}};
extern "C" const GUID __declspec(selectany) CLSID_VCProjectEngineEvents =
    {0x9b3bfea2,0x2039,0x4702,{0x9f,0x2f,0x0b,0x0e,0x86,0x69,0x15,0x4d}};
extern "C" const GUID __declspec(selectany) CLSID_VCProjectEngineObject =
    {0x9f367027,0x33c6,0x11d3,{0x8d,0x52,0x00,0xc0,0x4f,0x8e,0xcd,0xb6}};
extern "C" const GUID __declspec(selectany) IID_VCProjectEngine =
    {0x9f367026,0x33c6,0x11d3,{0x8d,0x52,0x00,0xc0,0x4f,0x8e,0xcd,0xb6}};

} // namespace VCProjectEngineLibrary

#pragma pack(pop)
