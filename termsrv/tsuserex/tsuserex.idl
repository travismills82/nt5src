// tsuserex.idl : IDL source for tsexusrm.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (tsexusrm.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "mmc.idl";

[
    uuid(45413F04-DF86-11D1-AE27-00C04FA35813),
    version(1.0),
    helpstring("tsexusrm 1.0 Type Library")
]
library TSUSEREXLib
{
    importlib("stdole2.tlb");

    [
        uuid(0910dd01-df8c-11d1-ae27-00c04fa35813),
        helpstring("TSUserEx Interfaces")
    ]
    coclass TSUserExInterfaces
    {
        // actually we want to export IExtendPropertySheet2 interface
        // But doing so here we get error in mmc.h
        // hence just list unknown here.
        [default] interface IUnknown;
    };

#ifdef _RTM_
    [
        uuid(728041AB-CE1A-406C-90E1-A2FB08922E22),
        helpstring("TSCopy Class")
    ]
    coclass ExtCopyNoUI
    {
        [default] interface IUnknown;
    };
#endif

    [
        object,
        uuid(C4930E79-2989-4462-8A60-2FCF2F2955EF),
        dual,
        helpstring("IADsTSUserEx Interface"),
        pointer_default(unique)
    ]

    interface IADsTSUserEx : IDispatch
    {
        ////////////////////////////////////////////////////////////
        // Parameter: ProfilePath
        ////////////////////////////////////////////////////////////

        [propget, id(1)]
         HRESULT TerminalServicesProfilePath([out, retval] BSTR* pVal);
        [propput, id(1)]
         HRESULT TerminalServicesProfilePath([in] BSTR pNewVal);

        [propget, id(2)]
         HRESULT TerminalServicesHomeDirectory([out, retval] BSTR* pVal);
        [propput, id(2)]
         HRESULT TerminalServicesHomeDirectory([in] BSTR pNewVal);

        [propget, id(3)]
         HRESULT TerminalServicesHomeDrive([out, retval] BSTR* pVal);
        [propput, id(3)]
         HRESULT TerminalServicesHomeDrive([in] BSTR pNewVal);

        [propget, id(4)]
         HRESULT AllowLogon([out, retval] LONG* pVal);
        [propput, id(4)]
         HRESULT AllowLogon([in] LONG NewVal);

        [propget, id(5)]
         HRESULT EnableRemoteControl([out, retval] LONG* pVal);
        [propput, id(5)]
         HRESULT EnableRemoteControl([in] LONG NewVal);

        [propget, id(6)]
         HRESULT MaxDisconnectionTime([out, retval] LONG* pVal);
        [propput, id(6)]
         HRESULT MaxDisconnectionTime([in] LONG NewVal);

        [propget, id(7)]
         HRESULT MaxConnectionTime([out, retval] LONG* pVal);
        [propput, id(7)]
         HRESULT MaxConnectionTime([in] LONG NewVal);

        [propget, id(8)]
         HRESULT MaxIdleTime([out, retval] LONG* pVal);
        [propput, id(8)]
         HRESULT MaxIdleTime([in] LONG NewVal);

        [propget, id(9)]
         HRESULT ReconnectionAction([out, retval] LONG* pNewVal);
        [propput, id(9)]
         HRESULT ReconnectionAction([in] LONG NewVal);

        [propget, id(10)]
         HRESULT BrokenConnectionAction([out, retval] LONG* pNewVal);
        [propput, id(10)]
         HRESULT BrokenConnectionAction([in] LONG NewVal);

        [propget, id(11)]
         HRESULT ConnectClientDrivesAtLogon([out, retval] LONG* pNewVal);
        [propput, id(11)]
         HRESULT ConnectClientDrivesAtLogon([in] LONG NewVal);

        [propget, id(12)]
         HRESULT ConnectClientPrintersAtLogon([out, retval] LONG* pVal);
        [propput, id(12)]
         HRESULT ConnectClientPrintersAtLogon([in] LONG NewVal);

        [propget, id(13)]
         HRESULT DefaultToMainPrinter([out, retval] LONG* pVal);
        [propput, id(13)]
         HRESULT DefaultToMainPrinter([in] LONG NewVal);

        [propget, id(14)]
         HRESULT TerminalServicesWorkDirectory([out, retval] BSTR* pVal);
        [propput, id(14)]
         HRESULT TerminalServicesWorkDirectory([in] BSTR pNewVal);

        [propget, id(15)]
         HRESULT TerminalServicesInitialProgram([out, retval] BSTR* pVal);
        [propput, id(15)]
         HRESULT TerminalServicesInitialProgram([in] BSTR pNewVal);
    };

    [
        uuid(E2E9CAE6-1E7B-4B8E-BABD-E9BF6292AC29),
        helpstring("ADsTSUserEx Class")
    ]
    coclass ADsTSUserEx
    {
        [default] interface IADsTSUserEx;
    };
};
