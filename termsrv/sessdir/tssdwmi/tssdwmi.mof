//===================================================================
// TsSdWmi.MOF
// Copyright (C) 2001 Microsoft Corp.
// Generated by Microsoft WBEM Code Generation Engine
//
// TO DO: If this class is intended to be created in a namespace 
//        other than the default (root\default), you should add 
//        the #pragma namespace command here.  If these classes 
//        are going into your own namespace, consider creating 
//        the namespace here as well.  See CIMWIN32.MOF for an 
//        example of how to create a namespace.  Also, consider
//        combining this mof with the mof the defines the class
//        that this provider provides.
//
//===================================================================

#pragma autorecover
#pragma classflags("forceupdate")

Qualifier Description : ToSubClass Amended;
Qualifier Values : ToSubClass Amended;


#pragma namespace ("\\\\.\\Root\\cimv2")

#pragma deleteclass("Win32_SessionDirectoryCluster", NOFAIL)
#pragma deleteclass("Win32_SessionDirectoryServer", NOFAIL)
#pragma deleteclass("Win32_SessionDirectorySession", NOFAIL)

//*************************************************************
//***   Registers Framework Provider                        ***
//*************************************************************




//SessionDirectoryCluster
instance of __Win32Provider as $P
{
    Name = "Win32_WIN32_SESSIONDIRECTORYCLUSTER_Prov";
    ClsId = "{BF258E47-A172-498d-971A-DA30A3301E94}";
    HostingModel = "NetworkServiceHost";
};

instance of __InstanceProviderRegistration
{
    Provider = $P;
    SupportsGet = TRUE;
    //SupportsPut = TRUE;
    //SupportsDelete = TRUE;
    SupportsEnumeration = TRUE;
    QuerySupportLevels = {"WQL:UnarySelect"};
};

instance of __MethodProviderRegistration
{
   Provider = $P;
};

[dynamic, provider("Win32_WIN32_SESSIONDIRECTORYCLUSTER_Prov"), 
                   Description("The Win32_SessionDirectoryCluster class defines the query for  SessionDirectoryCluster. "
		 "This includes capabilities such as NumberOfServers.")]
class Win32_SessionDirectoryCluster
{      

      [key, read,
       Description ( "Name of the Session Directory Cluster machine whose properties are of interest.")       
      ]
    string ClusterName;
      
      [read,
       Description ( "Number of servers in the cluster")
      ]
    uint32 NumberOfServers;  
    
      [read,
       Description ( "Single session mode of the cluster")
      ]
    uint32 SingleSessionMode;          

    //  [Implemented,
     //   Description("Configures the number of sessions for the cluster machine.")
     // ]
    //uint32 SetNumberOfSessions([In] uint32 NumberOfSessions);     
};


// SessionDirectoryServer
instance of __Win32Provider as $P1
{
    Name = "Win32_WIN32_SESSIONDIRECTORYSERVER_Prov";
    ClsId = "{f99a3c50-74fa-460a-8d75-db8ef2e3651d}";
    HostingModel = "NetworkServiceHost";
};

instance of __InstanceProviderRegistration
{
    Provider = $P1;
    SupportsGet = TRUE;
    //SupportsPut = TRUE;
    //SupportsDelete = TRUE;
    SupportsEnumeration = TRUE;
    QuerySupportLevels = {"WQL:UnarySelect"};
};

instance of __MethodProviderRegistration
{
   Provider = $P1;
};

[dynamic, provider("Win32_WIN32_SESSIONDIRECTORYSERVER_Prov"), 
                   Description("The Win32_SessionDirectoryServer class defines the query for  SessionDirectoryServer. "
		 "This includes capabilities such as NumberOfSessions.")]
class Win32_SessionDirectoryServer
{      

      [key, read,
       Description ( "Name of the Session Directory Server machine whose properties are of interest.")       
      ]
    string ServerName;
      
      [read,
       Description ( "IP Address the Session Directory Server machine.")       
      ]
    string ServerIPAddress;
    
      [read,
       Description ( "Name of the Cluster the Session Directory Server machine belongs to.")       
      ]
    string ClusterName;
    
      [read,
       Description ( "Number of sessions in the server")
      ]
    uint32 NumberOfSessions;  
    
      [read,
       Description ( "Single session mode of the server")
      ]
    uint32 SingleSessionMode;          
};



// SessionDirectorySession
instance of __Win32Provider as $P2
{
    Name = "Win32_WIN32_SESSIONDIRECTORYSESSION_Prov";
    ClsId = "{b745b87b-cc4e-4361-8d29-221d936c259c}";
    HostingModel = "NetworkServiceHost";
};

instance of __InstanceProviderRegistration
{
    Provider = $P2;
    //SupportsGet = TRUE;
    //SupportsPut = TRUE;
    //SupportsDelete = TRUE;
    //SupportsEnumeration = TRUE;
    QuerySupportLevels = {"WQL:UnarySelect"};
};

instance of __MethodProviderRegistration
{
   Provider = $P2;
};

[dynamic, provider("Win32_WIN32_SESSIONDIRECTORYSESSION_Prov"), 
                   Description("The Win32_SessionDirectorySession class defines the query for  SessionDirectorySession. "
		 "This includes username, domainname ....")]
class Win32_SessionDirectorySession
{      

      [key, read,
       Description ( "Name of the Server the session is on.")       
      ]
    string ServerName;
      
      [key, read,
       Description ( "Session ID of this session.")       
      ]
    uint32 SessionID;
    
      [read,
       Description ( "UserName of the session.")       
      ]
    string UserName;
    
      [read,
       Description ( "DomainName of the session")
      ]
    string DomainName;  
    
      [read,
       Description ( "IP Address of the server the session is on")
      ]
    string ServerIPAddress;  
    
      [read,
       Description ( "TS Protocol of the session")
      ]
    uint32 TSProtocol;        
    
      [read,
       Description ( "Application type of the session")
      ]
    string ApplicationType;
    
      [read,
       Description ( "Resolution width of the session")
      ]
    uint32 ResolutionWidth;
    
      [read,
       Description ( "Resolution height of the session")
      ]
    uint32 ResolutionHeight;
    
      [read,
       Description ( "Color depth of the session")
      ]
    uint32 ColorDepth;
    
      [read,
       Description ( "Create time of the session")
      ]
    DateTime CreateTime;
    
      [read,
       Description ( "Disconnect time of the session (if applicable)")
      ]
    DateTime DisconnectTime;
    
      [read,
       Description ( "Session state of the session")
      ]
    uint32 SessionState;
};

