//
// uwrap2.h
//
// Phase2 Unicode wrappers for Win32 API
// (included after ATL headers are processed)
//
// Inlucde this header to redirect any W calls
// to wrappers that dynamically convert to ANSI
// and call the A versions on non-unicode platforms
//
// Unlike the shlwapi wrappers which create a DLL
// of wrapper functions, the ts uniwrappers work
// by redefining functions to call into our wrapped
// versions.
//
// Copyright(C) Microsoft Corporation 2000
// Author: Nadim Abdo (nadima)
//
//

#ifndef _uwrap2_h_
#define _uwrap2_h_
//Don't wrap on WIN64 as there is no Win9x (thankfully).
#if defined(UNICODE) && !defined(_WIN64)

//Group replacement wraps by module
//these were autogenerated by genwrap.pl

//Define this to avoid replacing, i.e just
//include the wrap function definitions.
//Need to do this in the implementation class.


// this is a hack around ATL problems:
// Wrap in two phases, second phase
// wrap is after including ATL headers
// that have member function names that conflict
// with win32 APIs.
//

#ifndef DONOT_REPLACE_WITH_WRAPPERS

#ifdef  GetClassInfo
#undef  GetClassInfo
#endif
#define GetClassInfo GetClassInfoWrapW

#ifdef  TranslateAccelerator
#undef  TranslateAccelerator
#endif
#define TranslateAccelerator TranslateAcceleratorWrapW

#ifdef  StrRetToStr
#undef  StrRetToStr
#endif
#define StrRetToStr  StrRetToStrWrapW


#endif //DONOT_REPLACE_WITH_WRAPPERS
#endif //defined(UNICODE) && !defined(_WIN64)
#endif //_uwrap2_h_
