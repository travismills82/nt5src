!IF 0

Copyright (c) Microsoft Corporation

Module Name:

sources.

!ENDIF

TERMSRV_ROOT = ..\..\..
TSHRCLNT_ROOT = ..\..

!include $(TERMSRV_ROOT)\common\newcommon.inc
!include $(TERMSRV_ROOT)\common\win32com.inc
!include $(TSHRCLNT_ROOT)\place32.inc

MAJORCOMP = TShrClnt
MINORCOMP = actx

TARGETNAME = mstscax
TARGETPATH = $(TSHRCLNT_ROOT)\lib\win32\$(_OBJ_DIR)
TARGETTYPE = DYNLINK

PASS0_HEADERDIR=$(O)
PASS0_SOURCEDIR=$(O)
MIDL_UUIDDIR=$(O)

DLLENTRY   = _DllMainCRTStartup
DLLDEF     = ..\actx.def
DLLBASE    = 0x6A600000

DELAYLOAD=RPCRT4.DLL
DLOAD_ERROR_HANDLER=DliHook

!if "$(FREEBUILD)"=="0"
C_DEFINES = \
    $(C_DEFINES) \
    -DCRTREPORT_DEBUG_HACK
!endif


C_DEFINES = $(C_DEFINES) -DDOMESTIC

TSACTIVEXCLIENT_LIB_DLL = \
    $(SDK_LIB_PATH)\uuid.lib \
    $(SDK_LIB_PATH)\ole32.lib \
    $(SDK_LIB_PATH)\oleaut32.lib

TARGETLIBS= \
    $(CLIENT_LIB_DLL) \
    $(CLIENT_LIB_EXE) \
    $(SDK_LIB_PATH)\ntdll.lib \
    $(DS_LIB_PATH)\randlib.lib \
    $(SDK_LIB_PATH)\wsock32.lib \
    $(SDK_LIB_PATH)\shlwapi.lib \
    $(SDK_LIB_PATH)\rpcrt4.lib \
    $(SDK_LIB_PATH)\comctl32.lib \
    $(TSHRCLNT_ROOT)\lib\win32\$(O)\core.lib \
    $(TSHRCLNT_ROOT)\lib\win32\$(O)\util.lib \
    $(TSHRCLNT_ROOT)\lib\win32\$(O)\rdpdr.lib \
    $(TERMSRV_ROOT)\lib\$(O)\debuglib.lib \
    $(TERMSRV_ROOT)\lib\$(O)\cryptlib.lib \
    $(TERMSRV_ROOT)\lib\$(O)\licstore.lib \
    $(TERMSRV_ROOT)\lib\$(O)\liclient.lib \
    $(TERMSRV_ROOT)\lib\$(O)\licecrtd.lib \
    $(TERMSRV_ROOT)\lib\$(O)\asn1.lib \
    $(TERMSRV_ROOT)\lib\$(O)\tssec.lib \
    $(TERMSRV_ROOT)\lib\$(O)\tscompru.lib \
    $(TERMSRV_ROOT)\lib\win32\$(O)\tsaxuuid.lib \
    $(DS_LIB_PATH)\rsa32.lib   \
    $(DS_LIB_PATH)\randlib.lib \
    $(BASEDIR)\public\sdk\lib\*\winspool.lib \
    $(BASEDIR)\public\sdk\lib\*\uuid.lib     \
    $(BASEDIR)\public\sdk\lib\*\comdlg32.lib \
    $(BASEDIR)\public\sdk\lib\*\ole32.lib    \
    $(BASEDIR)\public\sdk\lib\*\oleaut32.lib \

!IF $(386)
TARGETLIBS = \
    $(TARGETLIBS) \
    $(TSHRCLNT_ROOT)\lib\win32\$(O)\uilibux.lib \
    $(TERMSRV_ROOT)\lib\$(O)\uniwrap.lib \
!ELSE
TARGETLIBS = \
    $(TARGETLIBS) \
    $(TSHRCLNT_ROOT)\lib\win32\$(O)\uilibu.lib \
!ENDIF

!IFDEF SMART_SIZING
TARGETLIBS=$(TARGETLIBS) \
    $(SDK_LIB_PATH)\gdiplus.lib
!ENDIF

!IF "$(FREEBUILD)"=="0"
!IF $(386)
TARGETLIBS = \
    $(TARGETLIBS) \
    $(TERMSRV_ROOT)\lib\$(O)\tsctrcux.lib  \
!ELSE
TARGETLIBS = \
    $(TARGETLIBS) \
    $(TERMSRV_ROOT)\lib\$(O)\tsctrcu.lib  \
!ENDIF
!ENDIF


!if "$(BUILD_PRF)"=="1"
TARGETLIBS=$(TARGETLIBS) $(TSHRCLNT_ROOT)\lib\win32\obj\*\tscprf.lib
!endif

!include ..\actx.inc

INCLUDES=\
    $(INCLUDES); \
    $(TERMSRV_ROOT)\common\clientidl\tsax\$(O); \
    $(BASE_INC_PATH)


PASS0_HEADERDIR=$(O)
INCLUDES=$(INCLUDES);$(O)

USE_STATIC_ATL=1
ATL_VER=30

!IF 0
        Don't use msvcrt.dll untill we can resolve problems
        with it's availability on win95
        !IF "$(FREEBUILD)"!="0"
        USE_MSVCRT=1
        !ENDIF
!ENDIF



#
# Include (platform-specific) Unicode options
# Unicode is wrapped on x86 so it works on win9x
#

C_DEFINES=$(C_DEFINES) $(C_DEFS_UNICODE)

#
# Only use UNIWRAP on X86 as that is the only
# architecture that needs to run on 9x
#
!IF $(386)
C_DEFINES=$(C_DEFINES) -DUNIWRAP
!ENDIF
