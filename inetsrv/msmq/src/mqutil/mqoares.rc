//Microsoft Developer Studio generated resource script.
//
#include "mqoares.h"

#include "afxres.h"

/////////////////////////////////////////////////////////////////////////////
// English (U.S.) resources

#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
#ifdef _WIN32
LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US
#pragma code_page(1252)
#endif //_WIN32

#ifdef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// TEXTINCLUDE
//

1 TEXTINCLUDE DISCARDABLE 
BEGIN
    "mqoares.h\0"
END


3 TEXTINCLUDE DISCARDABLE 
BEGIN
    "\r\n"
END

#endif    // APSTUDIO_INVOKED



/////////////////////////////////////////////////////////////////////////////
//
// String Table
//

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_RELOPS              "Enumerates the relational operators for a query."
    IDS_MQTRANSACTION       "Enumerates the transaction options when sending or receiving a message."
    IDS_MQMSGCURSOR         "Enumerates the cursor operations when synchronously or asynchronously peeking at or retrieving a message."
    IDS_MQMSGCLASS          "Enumerates the classes for a message."
    IDS_MQMSGDELIVERY       "Enumerates the delivery modes for a message."
    IDS_MQMSGACKNOWLEDGEMENT 
                            "Enumerates the acknowledgement levels for a message."
    IDS_MQMSGJOURNAL        "Enumerates the journaling levels for a message."
    IDS_MQMSGTRACE          "Enumerates the tracing levels for a message."
    IDS_MQMSGSENDERIDTYPE   "Enumerates the sender identifier types for a message."
    IDS_MQMSGPRIVLEVEL      "Enumerates the privacy levels for a message."
    IDS_MQMSGAUTHLEVEL      "Enumerates the authentication levels for a message on sending."
    IDS_MQMSGIDSIZE         "Enumerates the identifier sizes for a message."
    IDS_MQMSGMAX            "Enumerates the maximum length for the message label."
    IDS_MQSHARE             "Enumerates the sharing modes for an open queue."
    IDS_MQACCESS            "Enumerates the access (send, peek, receive) modes for an open queue."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_MQJOURNAL           "Enumerates the journaling levels for a queue."
    IDS_MQTRANSACTIONAL     "Enumerates the transaction levels for a queue."
    IDS_MQAUTHENTICATE      "Enumerates the authentication levels for a queue."
    IDS_MQPRIVLEVEL         "Enumerates the privacy levels for a queue."
    IDS_MQPRIORITY          "Enumerates the minimum and maximum queue priorities."
    IDS_MQMAX               "Enumerates the maximum lengths for a queue label and path name."
    IDS_MQDEFAULT           "Enumerates the default values for message and queue properties."
    IDS_MQERROR             "Enumerates all Message Queuing errors."
    IDS_MQWARNING           "Enumerates all Message Queuing warnings."
    IDS_IMSMQQUERY          "Exposes a lookup method that is used to locate public queues."
    IDS_MSMQQUERY           "Provides a lookup method that is used to locate public queues."
    IDS_IMSMQMESSAGE        "Exposes properties that define the message and methods for sending it to a queue."
    IDS_MSMQMESSAGE         "Provides properties that define the message and methods for sending it to one or more queues."
    IDS_IMSMQQUEUE          "Exposes the properties of an open instance of a queue and methods for peeking at or retrieving messages in it."
    IDS_IMSMQEVENT          "Exposes events that are used for reading messages asynchronously."
    IDS_DMSMQEVENTEVENTS    "Event dispinterface that supports asynchronous message notifications."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_MSMQQUEUE           "Provides the properties of an open instance of a queue and methods for peeking at or retrieving messages in it."
    IDS_MSMQEVENT           "Provides events that are used for reading messages asynchronously."
    IDS_IMSMQQUEUEINFO      "Exposes properties that define a queue and methods for creating, opening, and deleting the queue and for updating and retrieving its stored properties."
    IDS_MSMQQUEUEINFO       "Provides the properties that define a queue and methods for creating, opening, and deleting the queue and for setting and retrieving its properties."
    IDS_IMSMQQUEUEINFOS     "Exposes methods for enumerating the elements of a collection of public queues returned by MSMQQuery.LookupQueue."
    IDS_MSMQQUEUEINFOS      "Provides methods for enumerating the elements of a collection of public queues returned by MSMQQuery.LookupQueue."
    IDS_IMSMQTRANSACTION    "Exposes properties that specify an underlying MS DTC external transaction object or internal transaction object and the standard ITransaction::Commit and Abort methods."
    IDS_MSMQTRANSACTION     "Provides properties that specify an underlying MS DTC external transaction object or internal transaction object and the standard ITransaction Commit and Abort methods."
    IDS_IMSMQCOORDINATEDTRANSACTIONDISPENSER 
                            "Exposes a method that initiates a new MS DTC external transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_MSMQCOORDINATEDTRANSACTIONDISPENSER 
                            "Provides a method that initiates a new MS DTC external transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_IMSMQTRANSACTIONDISPENSER 
                            "Exposes a method that initiates a new internal transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_MSMQTRANSACTIONDISPENSER 
                            "Provides a method that initiates a new internal transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_IMSMQAPPLICATION    "Exposes properties that return information about the Message Queuing service on a computer and methods that perform general configurational tasks."
    IDS_MSMQAPPLICATION     "Provides properties that return information about the Message Queuing service on a computer and methods that perform general configurational tasks."
    IDS_LookupQueue         "Returns a collection of public queues that match the specified search criteria."
    IDS_lClass              "Returns one of the the message classes defined by the MQMSGCLASS enumeration."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_lPrivLevel          "Sets/returns one of the privacy levels defined by the MQMSGPRIVLEVEL enumeration for the message."
    IDS_lAuthLevel          "Sets/returns one of the authentication levels defined by the MQMSGAUTHLEVEL enumeration for the message."
    IDS_isAuthenticated     "Returns a value indicating whether the message was authenticated (1) or not (0)."
    IDS_lDelivery           "Sets/returns one of the delivery modes defined by the MQMSGDELIVERY enumeration for the message."
    IDS_lTrace              "Sets/returns one of the tracing levels defined by the MQMSGTRACE enumeration for the message."
    IDS_lPriority           "Sets/returns a priority level between MQ_MIN_PRIORITY and MQ_MAX_PRIORITY for the message."
    IDS_lJournal            "Sets/returns one of the journaling levels defined by the MQMSGJOURNAL enumeration for the message."
    IDS_queueinfoResponse   "Sets/returns the response queue for the message."
    IDS_lAppSpecific        "Sets/returns application-specific information that can be used to filter the message."
    IDS_guidSrcMachine      "Returns the identifier of the computer where the message originated."
    IDS_lenBody             "Returns the length (in bytes) of the message body."
    IDS_body                "Sets/returns a Variant containing the message body in the form of any intrinsic type or a persistent object."
    IDS_queueinfoAdmin      "Sets/returns the administration queue for the message."
    IDS_id                  "Returns the MSMQ-generated identifier (array of bytes) of the message."
    IDS_idCorrelation       "Sets/returns the correlation identifier (array of bytes) of the message."
    IDS_lAck                "Sets/returns one of the acknowledgement levels defined by the MQMSGACKNOWLEDGEMENT enumeration for the message."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_strLabel            "Sets/returns the label of the message."
    IDS_lMaxTimeToReachQueue 
                            "Sets/returns the amount of time allowed to deliver the message to its destination queue."
    IDS_lMaxTimeToReceive   "Sets/returns the amount of time that the receiving application has to retreive the message from its destination queue."
    IDS_lHashAlg            "Sets/returns the hash algorithm that Message Queuing uses when authenticating the message."
    IDS_lEncryptAlg         "Sets/returns the encryption algorithm used to encrypt the message body of the private message."
    IDS_dateSentTime        "Returns a Variant (Date) indicating the date and time when the message was sent."
    IDS_dateArrivedTime     "Returns a Variant (Date) indicating the date and time when the message arrived at its destination queue."
    IDS_queueinfoDest       "Returns the original destination queue of the message, which is typically used when reading response messages, or messages in computer journals or dead-letter queues."
    IDS_binSenderCert       "Sets/returns an array of bytes containing the sender certificate in the message."
    IDS_binSenderId         "Sets/returns an array of bytes containing the sender's identifier in the message."
    IDS_lSenderIdType       "Sets/returns one of the types of sender identifiers defined by the MSMQSENDERIDTYPE enumeration for the message."
    IDS_Send                "Sends the message to the destination queue with the optional use of a transaction parameter."
    IDS_AttachCurrentSecurityContext 
                            "Retrieves the security context information needed to attach a certificate to the message."
    IDS_lAccess             "Returns one of the access modes defined by the MQACCESS enumeration for the queue."
    IDS_lShareMode          "Returns one of the share modes defined by the MQSHARE enumeration for the queue."
    IDS_queueinfo           "Returns the MSMQQueueInfo object that was used to open the queue."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_lHandle             "Returns the handle of the open instance of the queue, which can be used for directly calling Message Queuing APIs."
    IDS_isOpen              "Returns a value indicating whether the queue object is an open instance of the queue (1) or not (0)."
    IDS_Close               "Closes an open instance of the queue."
    IDS_Receive             "Retrieves the first message in the queue, removing the message from the queue."
    IDS_Peek                "Peeks at the first message in the queue."
    IDS_EnableNotification  "Starts event notification for asynchronously reading messages in the specified queue, firing an MSMQEvent_Arrived event when a message is found or arrives at the position specified by the optional Cursor parameter and firing an MSMQEvent_ArrivedError if an error is generated while the application waits for a message."
    IDS_Reset               "Returns the queue's cursor to the beginning of the queue."
    IDS_ReceiveCurrent      "Retrieves the message at the position pointed to by the cursor, removing the message from the queue."
    IDS_PeekNext            "Advances the cursor to the next message in the queue and peeks at the message at the cursor."
    IDS_PeekCurrent         "Peeks at the current message in the queue without advancing the cursor."
    IDS_guidQueue           "Returns the identifier of the public queue."
    IDS_guidServiceType     "Sets/returns an identifier indicating the type of service provided by the queue."
    IDS_MSMQQueueInfo_strLabel "Sets/returns the label of the queue."
    IDS_strPathName         "Sets/returns the path name (physical location) of the queue."
    IDS_strFormatName       "Sets the format name used to identify the queue or returns the format name generated by MSMQ when the queue was created or an application-specified format name."
    IDS_isTransactional     "Returns a value indicating whether the queue is transactional (1) or non-transactional (0)."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_MSMQQueueInfo_lPrivLevel 
                            "Sets/returns one of the privacy levels defined by the MQPRIVLEVEL enumeration for the queue."
    IDS_MSMQQueueInfo_lJournal 
                            "Sets/returns one of the journaling levels defined by the MQJOURNAL enumeration for the queue."
    IDS_lQuota              "Sets/returns the maximum size (in kilobytes) of the queue."
    IDS_lBasePriority       "Sets/returns the base priority for all messages sent to the public queue."
    IDS_dateCreateTime      "Returns a Variant (Date) indicating the date and time when the queue was created."
    IDS_dateModifyTime      "Returns a Variant (Date) indicating the date and time when the queue's properties were last modified."
    IDS_lAuthenticate       "Sets/returns one of the authentication levels defined by the MQAUTHENTICATE enumeration for the queue."
    IDS_lJournalQuota       "Sets/returns the maximum size (in kilobytes) of the queue journal."
    IDS_Create              "Creates a new queue with the path name set in PathName (required) and the values set by the optional IsWorldReadable (the default is False) and IsTransactional (the default is False) parameters."
    IDS_Delete              "Deletes the queue with the format name set in FormatName or the path name set in PathName."
    IDS_Open                "Opens the queue specified by the format name set in FormatName or by the path name set in PathName with the access and share modes specified, returning an MSMQQueue object."
    IDS_Refresh             "Refreshes the properties of the object with with the values stored in the directory service (for public queues) or the local computer (for private queues)."
    IDS_Update              "Updates the directory service or the local computer with the current values of the object's properties."
    IDS_MSMQQueueInfos_Reset 
                            "Returns the cursor to the start of the collection of queues returned by MSMQQuery.LookupQueue and returns the element at the cursor."
    IDS_MSMQQueueInfos_Next "Advances the cursor to the next element of the collection of queues returned by MSMQQuery.LookupQueue and returns the element at the cursor."
    IDS_lTransaction        "Returns the underlying transaction object created by the transaction dispenser."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_Commit              "Commits the Message Queuing internal transaction or MS DTC external transaction."
    IDS_Abort               "Aborts the Message Queuing internal transaction or MS DTC external transaction."
    IDS_BeginTransaction    "Initiates a new transaction and returns an MSMQ transaction object representing the new underlying transaction object created by the transaction dispenser."
    IDS_StrMachineIdOfMachineName 
                            "Returns the globally unique identifier (GUID) for a specified computer, which can be used to create a private format name for a private queue or a machine format name for the computer journal or a dead-letter queue."
    IDS_Arrived             "Fired when MSMQQueue.EnableNotification has been called and a message is found or arrives at the applicable position in the specified queue."
    IDS_ArrivedError        "Fired when MSMQQueue.EnableNotification has been called and an error is generated while the application waits for a message at the applicable position in the specified queue."
    IDS_IsWorldReadable     "Returns a value indicating whether everyone can read messages in the queue (1) or only the owner of the queue can read messages in it (0, the default)."
    IDS_MQCALG              "Enumerates the various hashing and encryption algorithms."
    IDS_IMSMQTRANSACTION2   "Exposes properties that specify an underlying MS DTC external transaction object or internal transaction object, an initialization method, and the standard ITransaction::Commit and Abort methods."
    IDS_InitNew             "Initializes an MSMQ transaction object to represent an existing underlying transaction object."
    IDS_IMSMQAPPLICATION2   "Exposes properties that return information about the Message Queuing service on a computer and methods that perform general configurational tasks."
    IDS_RegisterCertificate "Method used to register a user certificate in Active Directory."
    IDS_MQCERT_REGISTER     "Enumerates the flags that specify when an certificate is registered."
    IDS_MQCERT_REGISTER_ALWAYS "Register an internal or external certificate whenever MSMQApplication.RegisterCertificate is called."
    IDS_MQCERT_REGISTER_IF_NOT_EXIST 
                            "Register a new internal certificate only if none exists."
    IDS_IMSMQQUEUEINFO2     "Exposes properties that define a queue and methods for creating, opening, and deleting the queue and for updating and retrieving its stored properties."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_strPathNameDNS      "Returns the DNS path name of the queue."
    IDS_IMSMQMESSAGE2       "Exposes properties that define the message and methods for sending it to a queue."
    IDS_lSenderVersion      "Returns the the wire format used to send the message."
    IDS_binExtension        "Sets/returns additional application-defined information that is associated with the message."
    IDS_guidConnectorType   "Sets/returns a value indicating whether some message properties typically set by Message Queuing were generated and set by the sending application."
    IDS_queueinfoXactStatus "Sets/returns the transaction status queue on the source computer."
    IDS_binDestSymmKey      "Sets/returns the symmetric key used to encrypt messages."
    IDS_binSignature        "Sets/returns the specifies the MSMQ 1.0 signature or application-generated digital signature that is attached to the message."
    IDS_lAuthProvType       "Sets/returns the type of cryptographic service provider used to generate the digital signature attached to the message."
    IDS_strAuthProvName     "Sets/returns the name of the cryptographic provider used to generate the digital signature attached to the message."
    IDS_lMsgClass           "Returns one of the message classes defined by the MQMSGCLASS enumeration."
    IDS_IMSMQQUEUE2         "Exposes the properties of an open instance of a queue and methods for peeking at or retrieving messages in it."
    IDS_Receive_2           "Retrieves the first message in the queue, removing the message from the queue."
    IDS_Peek_2              "Peeks at the first message in the queue."
    IDS_ReceiveCurrent_2    "Retrieves the message at the position pointed to by the cursor, removing the message from the queue."
    IDS_PeekNext_2          "Advances the cursor to the next message in the queue and peeks at the message at the cursor."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_PeekCurrent_2       "Peeks at the current message in the queue without advancing the cursor."
    IDS_idXact              "Returns an identifier indicating which transaction sent the message."
    IDS_isFirstInXact       "Returns a value indicating whether the message was the first message sent in a transaction (1) or not (0)."
    IDS_isLastInXact        "Returns a value indicating whether the message was the last message sent in a transaction (1) or not (0)."
    IDS_IMSMQQUERY2         "Exposes a lookup method that is used to locate public queues."
    IDS_IMSMQQUEUEINFOS2    "Exposes methods for enumerating the elements of a collection of public queues returned by MSMQQuery.LookupQueue."
    IDS_IMSMQCOORDINATEDTRANSACTIONDISPENSER2
                            "Exposes a method that initiates a new MS DTC external transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_IMSMQTRANSACTIONDISPENSER2
                            "Exposes a method that initiates a new internal transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_StrMachineNameOfMachineId
                            "Returns the name of a computer specified by its globally unique identifier (GUID)."
    IDS_sMSMQVersionMajor   "Returns the major version number of Message Queuing running on the computer."
    IDS_sMSMQVersionMinor   "Returns the minor version number of Message Queuing running on the computer."
    IDS_sMSMQVersionBuild   "Returns the build version number of Message Queuing running on the computer."
    IDS_fIsDsEnabled        "Returns a Boolean indicating whether the Message Queuing service on the computer is configured to use Active Directory and is operating in domain or offline mode."
    IDS_IMSMQEVENT2         "Exposes events that are used for reading messages asynchronously."
    IDS_sReceivedAuthenticationLevel
                            "Returns one of the authentication levels defined by the MQMSGAUTHENTICATION enumeration for the message in the destination queue."
    IDS_MQMSGAUTHENTICATION "Enumerates the authentication levels of a delivered message."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_IMSMQTRANSACTION3   "Exposes properties that specify an underlying MS DTC external transaction object or internal transaction object and the standard ITransaction::Commit and Abort methods."
    IDS_varITransaction     "Returns the ITransaction interface on the underlying transaction object that is used by the MSMQTransaction object as a Variant (VT_UNKNOWN)."
    IDS_IMSMQCOORDINATEDTRANSACTIONDISPENSER3
                            "Exposes a method that initiates a new MS DTC external transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_IMSMQTRANSACTIONDISPENSER3
                            "Exposes a method that initiates a new internal transaction and returns an MSMQ transaction object representing the new underlying transaction object."
    IDS_IMSMQDESTINATION    "Exposes properties that specify one or more queues and methods that open and close a destination object representing the queue or queues for sending messages."
    IDS_DestOpen            "Opens the MSMQDestination object for sending messages to the queue or queues specified by the ADsPath, FormatName, or PathName property."
    IDS_fDestIsOpen         "Returns a Boolean indicating whether or not the MSMQDestination object is open for sending messages."
    IDS_strADsPath          "Sets/returns the ADs path to a distribution list, public queue, or queue alias object stored in Active Directory."
    IDS_strDestFormatName   "Sets/returns the format name of the queue or queues represented by the MSMQDestination object."
    IDS_MSMQDESTINATION     "Provides properties that specify one or more queues and methods that open and close the object for sending messages."
    IDS_destResponse        "Sets/returns an MSMQDestination object specifying one or more queues for returning response messages."
    IDS_destDestination     "Returns an MSMQDestination object specifying one or more queues to which the message was originally sent."
    IDS_strObjADsPath       "Sets/returns the ADs path to a public queue object stored in Active Directory."
    IDS_varHandle2          "Returns a Variant (VT_I8) specifying the handle of the open instance of the queue, which can be used for directly calling Message Queuing APIs."
    IDS_IMSMQQUERY3         "Exposes a lookup method that is used to locate public queues."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_IMSMQMESSAGE3       "Exposes properties that define the message and methods for sending it to a queue or to an MSMQDestination object representing one or more queues."
    IDS_IMSMQQUEUE3         "Exposes the properties of an open instance of a queue and methods for peeking at or retrieving messages in it."
    IDS_IMSMQEVENT3         "Exposes events that are used for reading messages asynchronously."
    IDS_IMSMQQUEUEINFO3     "Exposes properties that define a queue and methods for creating, opening, and deleting the queue and for updating and retrieving its stored properties."
    IDS_IMSMQQUEUEINFOS3    "Exposes methods for enumerating the elements of a collection of public queues returned by MSMQQuery.LookupQueue."
    IDS_IMSMQAPPLICATION3   "Exposes properties that return information about the Message Queuing service on a computer and methods that perform general configurational tasks."
    IDS_Send_3              "Sends the message to the queue or queues specified by an MSMQDestination object, an MSMQQueue object, or an IADs object that defines an MSMQ destination in Active Directory with the optional use of a transaction parameter."
    IDS_DestClose           "Closes the open MSMQDestination object."
    IDS_strDestPathName     "Sets/returns the path name of a public or private queue."
    IDS_varLookupId         "Returns a Variant containing a string representation of the 64-bit lookup indentifier of the message."
    IDS_ReceiveByLookupId   "Retrieves a message with a LookupId property that is equal to the specified lookup identifier, removing it from the queue, and has the optional parameters Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveNextByLookupId
                            "Retrieves the message following a message with a LookupId property that is equal to the specified lookup identifier, removing it from the queue, and has the optional parameters Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceivePreviousByLookupId
                            "Retrieves the message preceding a message with a LookupId property that is equal to the specified lookup identifier, removing it from the queue, and has the optional parameters Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveFirstByLookupId
                            "Retrieves the first message in the queue, removing it from the queue, and has the optional parameters Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_ReceiveLastByLookupId
                            "Retrieves the last message in the queue, removing it from the queue, and has the optional parameters Transaction (default set to MTS Transaction), WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekByLookupId      "Peeks at a message with a LookupId property that is equal to the specified lookup identifier and has the optional parameters WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_PeekNextByLookupId  "Peeks at the message following a message with a LookupId property that is equal to the specified lookup identifier and has the optional parameters WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekPreviousByLookupId
                            "Peeks at the message preceding a message with a LookupId property that is equal to the specified lookup identifier and has the optional parameters WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekFirstByLookupId "Peeks at the first message in the queue and has the optional parameters WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_PeekLastByLookupId  "Peeks at the last message in the queue and has the optional parameters WantDestinationQueue (default set to False), WantBody (default set to True), and WantConnectorType (default set to False)."
    IDS_isAuthenticated2    "Returns a Boolean indicating whether the message was authenticated (True) or not (False)."
    IDS_isFirstInXact2      "Returns a Boolean indicating whether the message was the first message sent in a transaction (True) or not (False)."
    IDS_isLastInXact2       "Returns a Boolean indicating whether the message was the last message sent in a transaction (True) or not (False)."
    IDS_isOpen2             "Returns a Boolean indicating whether the queue object is an open instance of the queue (True) or not (False)."
    IDS_isTransactional2    "Returns a Boolean indicating whether the queue is transactional (True) or non-transactional (False)."
    IDS_IsWorldReadable2    "Returns a Boolean indicating whether everyone can read messages in the queue (True) or only the owner of the queue can read messages in it (False, the default)."
    IDS_strMulticastAddress "Sets/returns the multicast address that is associated with the queue."
    IDS_AttachCurrentSecurityContext2
                            "Retrieves the security context information needed to attach a certificate to the message, caches the information in a security context buffer, and stores the handle to the security context buffer in the object."
    IDS_LookupQueue_3       "Returns a collection of public queues from Active Directory that match the specified search criteria."
    IDS_binSoapEnvelope     "Returns the SOAP envelope of an HTTP message."
    IDS_binCompoundMessage  "Returns an array of bytes containing the entire contents of an HTTP message, including the SOAP envelope and the SOAP attachments associated with it."
    IDS_binSoapHeader       "Sets additional application-generated header elements for inclusion in the SOAP envelope of an HTTP message."
    IDS_binSoapBody         "Sets application-generated SOAP body elements for inclusion in the SOAP envelope of an HTTP message."
    IDS_Purge               "Purges all messages in the queue."
    IDS_ActiveQueues        "Returns an array of format names of all active queues on the local computer."
    IDS_PrivateQueues       "Returns an array of path names of all private queues on the local computer."
    IDS_DirectoryServiceServer  "Returns the name of the directory service server."
    IDS_IsConnected         "Returns a Boolean indicating whether the queue manager on the computer has been disconnected from the network by MSMQApplication.Disconnect, by the equivalent API function call, or by taking Message Queuing offline in the user interface."
    IDS_Connect             "Connects the queue manager to the network and to the directory service server."
    IDS_Disconnect          "Disconnects the queue manager from the network and the directory service server."
    IDS_Tidy                "Cleans up empty message files on the local computer."
END
    
STRINGTABLE DISCARDABLE 
BEGIN
    IDS_IMSMQMANAGEMENT     "Exposes administrative properties that are common to both a destination queue and an outgoing queue."
    IDS_IMSMQQUEUEMANAGEMENT "Exposes administrative properties that are specific to a destination queue and a method for obtaining exactly-once-delivery information about transactional messages sent to the queue."
    IDS_IMSMQOUTGOINGQUEUEMANAGEMENT "Exposes administrative properties that are specific to an outgoing queue."
    IDS_ManagementInit      "Initializes the MSMQManagement object." 
    IDS_Machine             "Returns the name of the computer used to initialize the object." 
    IDS_MessageCount        "Returns the number of messages in the queue."
    IDS_Pause               "Pauses the transmission of messages from the outgoing queue."
    IDS_Resume              "Resumes the transmission of messages from the outgoing queue."
    IDS_EodResend           "Resends the pending sequence of transactional messages in the outgoing queue."
    IDS_QueueType           "Returns one of the types defined by the QUEUE_TYPE enumeration for the queue."
    IDS_IsLocal             "Returns a Boolean indicating whether the queue resides on the local computer (True) or on a remote computer (False)."
    IDS_ForeignStatus       "Returns one of the values defined by the FOREIGN_STATUS enumeration for the queue."
    IDS_BytesInQueue        "Returns the number of message bytes in the queue."
    IDS_State               "Returns one of the values defined by the QUEUE_STATE enumeration for the queue."
    IDS_NextHops            "Returns the address or an array of possible addresses for routing messages to the destination computer in the next hop."
    IDS_QUEUE_TYPE          "Enumerates the possible queue types."
    IDS_FOREIGN_STATUS      "Enumerates the possible foreign statuses."
    IDS_QUEUE_STATE         "Enumerates the possible queue states."
END

STRINGTABLE DISCARDABLE 
BEGIN
    IDS_EodGetSendInfo      "Returns a collection of named exactly-once-delivery (EOD) properties describing the current state of the outgoing queue." 
    IDS_EodGetReceiveInfo   "Returns an array of collections of exactly-once-delivery (EOD) properties with one collection for each computer sending transactional messages to the destination queue."
    IDS_BytesInJournal      "Returns the number of message bytes in the journal queue." 
    IDS_Item                "Returns the value of the specified element from the collection." 
    IDS_Count               "Returns the number of elements in the collection." 
    IDS_Collection          "Represents a collection of Variants and provides methods for accessing them through string keys."
    IDS_BytesInAllQueues    "Returns the number of message bytes currently stored in all queues on the computer."

END

#endif    // English (U.S.) resources
/////////////////////////////////////////////////////////////////////////////





