<docs>
	<doc for="FileWebRequest.ConnectionGroupName">
		<summary>
			<para>Gets or sets the name of the connection group for the
      request. This property is reserved for future use.</para>
		</summary>
		<value>
			<para> The name of the connection group for the request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.ConnectionGroupName"/> property
   is currently not used by the <see cref="System.Net.FileWebRequest"/>
   class. </para>
		</remarks>
	</doc><doc for="FileWebRequest.ContentType">
		<summary>
			<para>Gets or sets the content type of the data being sent. This property is reserved for future use.</para>
		</summary>
		<value>
			<para> The content type of the data being sent.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.ContentType"/> property contains the media type of
   the data being sent. This is typically the MIME encoding of the content. The
<see cref="System.Net.FileWebRequest.ContentType"/> property 
   is currently not used by the <see cref="System.Net.FileWebRequest"/>
   class.</para>
		</remarks>
	</doc><doc for="FileWebRequest.Credentials">
		<summary>
			<para>Gets or sets the credentials associated with this
      request. This property is reserved for future use.</para>
		</summary>
		<value>
			<para> An <see cref="System.Net.ICredentials"/> that contains the authentication credentials
   associated with this
   request. The default is <see langword="null"/> .</para>
		</value>
		<remarks>
			<para>Because the <see cref="System.Net.FileWebRequest"/> class does not authenticate requests
   for files from the local file system, it ignores the contents, if any, of the
<see cref="System.Net.FileWebRequest.Credentials"/> property. Authentication for <see cref="System.Net.FileWebRequest"/> is 
   handled by the access control lists for the file resource in the underlying file
   system.</para>
		</remarks>
	</doc><doc for="FileWebRequest.PreAuthenticate">
		<summary>
			<para>Gets or sets a value indicating whether to
      preauthenticate a request. This property is reserved for future use.</para>
		</summary>
		<value>
			<para><see langword="true"/> to preauthenticate; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.PreAuthenticate"/> property is currently not used by the <see cref="System.Net.FileWebRequest"/>
class.</para>
		</remarks>
	</doc><doc for="FileWebRequest.RequestUri">
		<summary>
			<para>Gets or sets the network proxy to use for this request.
      This property is reserved for future use.</para>
		</summary>
		<value>
			<para> An <see cref="System.Net.IWebProxy"/> that indicates the network proxy to use
   for this request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.Proxy"/>
property is currently not used by the <see cref="System.Net.FileWebRequest"/>class.</para>
		</remarks>
	</doc><doc for="FileWebRequest.FileWebRequest">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.FileWebRequest"/> class
   from the specified instances of the <see cref="System.Runtime.Serialization.SerializationInfo"/> and <see cref="System.Runtime.Serialization.StreamingContext"/> classes.</para>
		</summary>
		<param name="serializationInfo">A <see cref="System.Runtime.Serialization.SerializationInfo"/> instance that contains the information required to serialize the new <see cref="System.Net.FileWebRequest"/> instance.</param>
		<param name=" streamingContext">An instance of the <see cref="System.Runtime.Serialization.StreamingContext"/> class that contains the source of the serialized stream associated with the new <see cref="System.Net.FileWebRequest"/> instance.</param>
		<remarks>
			<para>This constructor implements the <see cref="System.Runtime.Serialization.ISerializable"/> interface for the
<see cref="System.Net.FileWebRequest"/> class.</para>
		</remarks>
		<seealso topic="cpconserialization"/>
	</doc><doc for="FileWebRequest.Headers">
		<summary>
			<para>Gets a collection of the name/value pairs associated with the
      request. This property is reserved for future use.</para>
		</summary>
		<value>
			<para> A <see cref="System.Net.WebHeaderCollection"/> that contains header name/value
   pairs associated with this request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.Headers"/>
property is currently not used by the <see cref="System.Net.FileWebRequest"/>
class.</para>
		</remarks>
	</doc><doc for="FileWebRequest.ISerializable.GetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="FileWebRequest.BeginGetRequestStream">
		<summary>
			<para>Begins an asynchronous request for a <see cref="System.IO.Stream"/> instance
   to use to write data.</para>
		</summary>
		<param name="callback">The <see cref="System.AsyncCallback"/> delegate.</param>
		<param name=" state">An object containing state information for this request.</param>
		<returns>
			<para> An <see cref="System.IAsyncResult"/>
that references the asynchronous request.</para>
		</returns>
		<exception cref="System.Net.ProtocolViolationException">The <see cref="System.Net.FileWebRequest.Method"/> property is <c>GET</c> and the application writes to the stream.</exception>
		<exception cref="System.InvalidOperationException">The stream is being used by a previous call to <see cref="System.Net.FileWebRequest.BeginGetRequestStream"/></exception>
		<exception cref="System.ApplicationException">No write stream is available.</exception>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.BeginGetRequestStream"/> method
   starts an asynchronous request for
   a stream used to send data to a file system resource. The callback method
   that implements the <see cref="System.AsyncCallback"/> delegate uses the <see cref="System.Net.FileWebRequest.EndGetRequestStream"/> method to return the request stream.</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.FileWebRequest.BeginGetRequestStream"/> to make an asynchronous request for a <see cref="System.IO.Stream"/> instance.</para>
			<codelink SampleID="FileWebRequest_ReqBeginEnd" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.FileWebRequest.GetRequestStream"/>
		<seealso cref="System.Net.FileWebRequest.EndGetRequestStream"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="FileWebRequest.EndGetRequestStream">
		<summary>
			<para>Ends an asynchronous request for a <see cref="System.IO.Stream"/> instance that the
   application uses to write data.</para>
		</summary>
		<param name="asyncResult">An <see cref="System.IAsyncResult"/> referencing the pending request for a stream.</param>
		<returns>
			<para>A <see cref="System.IO.Stream"/> instance that the application uses to write data.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="asyncResult"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.EndGetRequestStream"/> method completes an asynchronous stream request that
   was started by the <see cref="System.Net.FileWebRequest.BeginGetRequestStream"/>method.</para>
			<note type="note">
   To avoid timing issues with garbage
   collection, be sure to close the response stream by calling the <see cref="System.IO.Stream.Close"/> method
   on the stream returned by <see cref="System.Net.FileWebResponse.GetResponseStream"/> after calling <see cref="System.Net.FileWebRequest.EndGetResponse"/>.
</note>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.FileWebRequest.EndGetRequestStream"/> method to end the asynchronous request for a <see cref="System.IO.Stream"/> instance.</para>
			<codelink SampleID="FileWebRequest_ReqBeginEnd" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.FileWebRequest.GetRequestStream"/>
		<seealso cref="System.Net.FileWebRequest.BeginGetRequestStream"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="FileWebRequest.BeginGetResponse">
		<summary>
			<para>Begins an asynchronous request for a file system resource.</para>
		</summary>
		<param name="callback">The <see cref="System.AsyncCallback"/> delegate.</param>
		<param name="state">An object containing state information for this request.</param>
		<returns>
			<para> An <see cref="System.IAsyncResult"/> that references the asynchronous request.</para>
		</returns>
		<exception cref="InvalidOperationException">The stream is already in use by a previous call to <see cref="System.Net.FileWebRequest.BeginGetResponse"/> .</exception>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.BeginGetResponse"/> method starts an asynchronous request for
   a file system resource. The asynchronous callback method that implements the
<see cref="System.AsyncCallback"/> 
delegate uses the <see cref="System.Net.FileWebRequest.EndGetResponse"/> method to return the actual <see cref="System.Net.FileWebResponse"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.FileWebRequest.BeginGetResponse"/> method to asynchronously a file system resource.</para>
			<codelink SampleID="FileWebRequest_ResBeginEnd" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.FileWebRequest.GetResponse"/>
		<seealso cref="System.Net.FileWebRequest.EndGetResponse"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="FileWebRequest.EndGetResponse">
		<summary>
			<para>Ends an asynchronous request for a file system resource.</para>
		</summary>
		<param name="asyncResult">An <see cref="System.IAsyncResult"/> referencing the pending request for a response.</param>
		<returns>
			<para> A <see cref="System.Net.WebResponse"/> that contains the response from the file system
   resource.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="asyncResult"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.EndGetResponse"/> method completes an asynchronous
   request for a file system resource that was started with the <see cref="System.Net.FileWebRequest.BeginGetResponse"/>
   method.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.FileWebRequest.EndGetResponse"/> method to end an asynchronous request for a file 
   system resource.</para>
			<codelink SampleID="FileWebRequest_ResBeginEnd" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.FileWebRequest.GetResponse"/>
		<seealso cref="System.Net.FileWebRequest.BeginGetResponse"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="FileWebRequest.RequestUri1">
		<summary>
			<para>Gets the URI of the request.</para>
		</summary>
		<value>
			<para> A <see cref="System.Uri"/> containing the URI of the request.</para>
		</value>
		<example>
			<para>The following example uses the <see cref="System.Net.FileWebRequest.RequestUri"/> property to get the uri of the request.</para>
			<codelink SampleID="FileWebRequest_ContentLength" SnippetID="2"/>
		</example>
	</doc>
	<doc for="FileWebRequest">
		<summary>
			<para>Provides a file system implementation of the <see cref="System.Net.WebRequest"/> class.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest"/> class implements the <see cref="System.Net.WebRequest"/>
				<see langword="abstract"/> base
class for URIs that use the <c>file://</c>
scheme to request local files.</para>
			<para>Do not use the <see cref="M:System.Net.FileWebRequest.#ctor"/> constructor. Use the <see cref="System.Net.WebRequest.Create" qualify="true"/> method to initialize new instances
of the <see cref="System.Net.FileWebRequest"/> class. If the URI scheme
is <c>file://</c> , the <see cref="System.Net.WebRequest.Create"/>
method returns a <see cref="System.Net.FileWebRequest"/>
instance.</para>
			<para>The <see cref="System.Net.FileWebRequest.GetResponse"/> method makes a synchronous request
for the file specified in the <see cref="System.Net.FileWebRequest.RequestUri"/> property and returns a <see cref="System.Net.FileWebResponse"/>
instance containing the response. You can make an asynchronous request for the
file using the <see cref="System.Net.FileWebRequest.BeginGetResponse"/> and <see cref="System.Net.FileWebRequest.EndGetResponse"/>
methods.</para>
			<para>When you want to write data to a file, the <see cref="System.Net.FileWebRequest.GetRequestStream"/> method returns a <see cref="System.IO.Stream"/> instance to write to. The <see cref="System.Net.FileWebRequest.BeginGetRequestStream"/> and <see cref="System.Net.FileWebRequest.EndGetRequestStream"/>
methods provide asynchronous
access to the write data stream.</para>
			<para>The <see cref="System.Net.FileWebRequest"/> class relies on the <see cref="System.IO.File"/> class for error handling and code
access security.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Net.FileWebRequest" SnippetID="1"/>
		</example>
		<seealso cref="System.IO.File"/>
	</doc>
	<doc for="FileWebRequest.ContentLength">
		<summary>
			<para>Gets or sets the content length of the data being sent.</para>
		</summary>
		<value>
			<para>The number of bytes of request data being sent.</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.FileWebRequest.ContentLength"/>is less than 0. </exception>
		<example>
			<para>The following example sets the content length of the 
      data being sent. Refer to the complete
      example in the <see cref="System.Net.FileWebRequest"/> class.</para>
			<codelink SampleID="System.Net.FileWebRequest" SnippetID="4"/>
		</example>
	</doc>
	<doc for="FileWebRequest.Timeout">
		<summary>
			<para>Gets or sets the length of time until the request times out.</para>
		</summary>
		<value>
			<para>The time, in milliseconds, until the request times out,
      or the value <see cref="System.Threading.Timeout.Infinite" qualify="true"/> to indicate that the request does not time out.</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.FileWebRequest.Timeout"/>is set to less than 0.</exception>
		<example>
			<para>The following example sets the <see cref="System.Net.FileWebRequest.Timeout"/> property. Refer to the complete 
   example in the <see cref="System.Net.FileWebRequest"/> class.</para>
			<codelink SampleID="System.Net.FileWebRequest" SnippetID="3"/>
		</example>
	</doc>
	<doc for="FileWebRequest.GetRequestStream">
		<summary>
			<para>Returns a <see cref="System.IO.Stream"/> instance for writing data to the file system resource.</para>
		</summary>
		<returns>
			<para> A <see cref="System.IO.Stream"/> for writing data to the file
   system resource.</para>
		</returns>
		<exception cref="System.Net.WebException">The request times out.</exception>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.GetRequestStream"/> method returns a <see cref="System.IO.Stream"/> instance for writing data to the
   file system resource.</para>
			<para>The <see cref="System.Net.FileWebRequest.GetRequestStream"/> method provides synchronous access to the <see cref="System.IO.Stream"/>. For
asynchronous access, use the <see cref="System.Net.FileWebRequest.BeginGetRequestStream"/> and <see cref="System.Net.FileWebRequest.EndGetRequestStream"/> methods.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.FileWebRequest.GetRequestStream"/> method to obtain a stream instance used to write to the 
   file. Refer to the complete example in the <see cref="System.Net.FileWebRequest"/> class.</para>
			<codelink SampleID="System.Net.FileWebRequest" SnippetID="5"/>
		</example>
		<seealso cref="System.Net.FileWebRequest.BeginGetRequestStream"/>
	</doc>
	<doc for="FileWebRequest.Method">
		<summary>
			<para>Gets or sets the protocol method used for the request.
      This property is reserved for future use.</para>
		</summary>
		<value>
			<para> The protocol method to use in this request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.Method"/>
property is currently not used by the <see cref="System.Net.FileWebRequest"/>
class.</para>
		</remarks>
		<example>
			<para>The follolwing example sets the the protocol method used 
      for the request. Refer to the complete example in the <see cref="System.Net.FileWebRequest"/> class.</para>
			<codelink SampleID="System.Net.FileWebRequest" SnippetID="2"/>
		</example>
	</doc>
	<doc for="FileWebRequest.GetResponse">
		<summary>
			<para>Returns a response to a file system request.</para>
		</summary>
		<returns>
			<para> A <see cref="System.Net.WebResponse"/> that contains the response from the file system
   resource.</para>
		</returns>
		<exception cref="System.Net.WebException">The request timed out.</exception>
		<remarks>
			<para>The <see cref="System.Net.FileWebRequest.GetResponse"/> method returns a <see cref="System.Net.WebResponse"/> instance
   containing the response from the file system resource.</para>
			<para>The <see cref="System.Net.FileWebRequest.GetResponse"/> method provides synchronous access to the <see cref="System.Net.WebResponse"/>. For
asynchronous access, use the <see cref="System.Net.FileWebRequest.BeginGetResponse"/> and <see cref="System.Net.FileWebRequest.EndGetResponse"/> methods.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.FileWebRequest.GetResponse"/> method to return a file system request response.</para>
			<codelink SampleID="System.Net.FilewebRequest.GetResponse" SnippetID="1"/>
		</example>
	</doc>
</docs>
