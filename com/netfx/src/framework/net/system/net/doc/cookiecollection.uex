<docs>
	<doc for="CookieCollection.Dump">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CookieCollection.SyncRoot">
		<summary>
			<para>Gets an object that you can use to synchronize access to the
   <see cref="System.Net.CookieCollection"/>.</para>
		</summary>
		<value>
			<para>An object that you can use to synchronize access to the <see cref="System.Net.CookieCollection"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="SyncRoot"/> property returns
   an object that can be used to synchronize access to the <see cref="System.Net.CookieCollection"/>.</para>
		</remarks>
		<seealso cref="System.Collections.ICollection"/>
	</doc><doc for="CookieCollection">
		<summary>
			<para>Provides a collection container for instances of the <see cref="System.Net.Cookie"/> class.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Net.CookieCollection"/> class implements an
<see cref="System.Collections.ICollection"/> interface 
   to provide a general mechanism for handling collections of cookies. For example, this
   is useful in the case where an application is designed to store cookies for
   multiple servers.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
		<seealso cref="System.Collections.ICollection"/>
	</doc><doc for="CookieCollection.CopyTo">
		<summary>
			<para>Copies the elements of a <see cref="System.Net.CookieCollection"/> to an instance of the
<see cref="System.Array"/> class, starting at a particular index.</para>
		</summary>
		<param name="array">The target <see cref="System.Array"/> to which the <see cref="System.Net.CookieCollection"/> will be copied.</param>
		<param name="index">The zero-based index in the target <see cref="System.Array"/> where copying begins.</param>
		<remarks>
			<para>The <see cref="System.Array"/>
				<paramref name="array"/> must be one-dimensional
with zero-based indexing.</para>
		</remarks>
	</doc><doc for="CookieCollection.CookieCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="CookieCollection"/> class.</para>
		</summary>
		<remarks>
			<para>The following table shows initial property values for an instance of <see cref="System.Net.CookieCollection"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Default</description>
				</listheader>
				<item>
					<term> IsReadOnly</term>
					<description><see langword="true"/></description>
				</item>
				<item>
					<term> Count</term>
					<description>0</description>
				</item>
				<item>
					<term> IsSynchronized</term>
					<description><see langword="false"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieCollection.IsReadOnly">
		<summary>
			<para> Gets a value indicating whether a
   <see cref="System.Net.CookieCollection"/> is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if this is a read-only
<see cref="System.Net.CookieCollection"/>; otherwise, <see langword="false"/>. The default is 
<see langword="true"/>.</para>
		</value>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieCollection.Add">
		<overload>
			<para>Adds a <see cref="System.Net.Cookie"/> to a <see cref="System.Net.CookieCollection"/>.</para>
		</overload>
		<summary>
			<para>Adds a <see cref="System.Net.Cookie"/> to a
<see cref="System.Net.CookieCollection"/> .</para>
		</summary>
		<param name="cookie">The <see cref="System.Net.Cookie"/> to be added to a <see cref="System.Net.CookieCollection"/></param>
		<exception cref="System.ArgumentNullException"><paramref name="cookie"/> is null</exception>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieCollection.Count">
		<summary>
			<para>Gets the number of cookies contained in a
   <see cref="System.Net.CookieCollection"/> .</para>
		</summary>
		<value>
			<para>The number of cookies contained in a
   <see cref="System.Net.CookieCollection"/></para>
		</value>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieCollection.IsSynchronized">
		<summary>
			<para> Gets a value indicating whether access to
      a <see cref="System.Net.CookieCollection"/> is thread safe.</para>
		</summary>
		<value>
			<para><see langword="true"/> if access to the <see cref="System.Net.CookieCollection"/> is thread
   safe; otherwise, <see langword="false"/>. The default is
<see langword="false"/>. </para>
		</value>
	</doc><doc for="CookieCollection.Add1">
		<summary>
			<para>Adds the contents of a <see cref="System.Net.CookieCollection"/> to the current instance.</para>
		</summary>
		<param name="cookies">The <see cref="System.Net.CookieCollection"/> to be added .</param>
		<exception cref="System.ArgumentNullException"><paramref name="cookies"/> is null</exception>
		<remarks>
			<para>Each <see cref="System.Net.Cookie"/>
is read from the <see cref="System.Net.CookieCollection"/><paramref name="cookies"/> and added to the current instance.</para>
		</remarks>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieCollection.GetEnumerator">
		<summary>
			<para>Gets an enumerator that can iterate through a <see cref="System.Net.CookieCollection"/>
.</para>
		</summary>
		<returns>
			<para>An instance of an implemention of an <see cref="System.Collections.IEnumerator"/>
interface that can iterate through a <see cref="System.Net.CookieCollection"/> .</para>
		</returns>
		<remarks>
			<para>You should use an <see cref="System.Collections.IEnumerator"/> only to read data in the
   collection. Enumerators cannot be used to modify the underlying collection. The
   enumerator does not have exclusive access to the collection.</para>
			<para>When an enumerator is created, it takes a snapshot of
   the current state of the collection. If changes such as adding, modifying, or
   deleting elements are made to the collection, the snapshot gets out of sync and
   the enumerator throws an <see cref="System.InvalidOperationException"/>. Two enumerators created from the same
   collection at the same time can produce different snapshots of the collection.</para>
		</remarks>
	</doc><doc for="CookieCollection.this">
		<overload>
			<para>Gets a specific <see cref="System.Net.Cookie"/> from a <see cref="System.Net.CookieCollection"/> .</para>
		</overload>
		<summary>
			<para> Gets the <see cref="System.Net.Cookie"/> with a specific index from a <see cref="System.Net.CookieCollection"/>
.</para>
		</summary>
		<param name="index">The zero-based index of the <see cref="System.Net.Cookie"/> to be found.</param>
		<value>
			<para>A <see cref="System.Net.Cookie"/> with a specific index
   from a <see cref="System.Net.CookieCollection"/>
   .</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">index &lt; 0 or index &gt;= Count</exception>
		<remarks>
			<para>You can use this to iterate over the contents of a
   <see cref="System.Net.CookieCollection"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="CookieCollection_Item_2" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieCollection.this1">
		<summary>
			<para>Gets the <see cref="System.Net.Cookie"/> with a specific name from a <see cref="System.Net.CookieCollection"/>
.</para>
		</summary>
		<param name="name">The name of the <see cref="System.Net.Cookie"/> to be found.</param>
		<value>
			<para>The <see cref="System.Net.Cookie"/> with a specific name
   from a <see cref="System.Net.CookieCollection"/>
   .</para>
		</value>
		<exception cref="System.ArgumentNullException"><paramref name="name"/> is null.</exception>
		<remarks>
			<para>You can use this to iterate over the contents of a <see cref="System.Net.CookieCollection"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="CookieCollection_Item_1" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc></docs>
