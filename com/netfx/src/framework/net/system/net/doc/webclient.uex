<docs>
	<doc for="WebClient.Address">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="WebClient.ResponseHeaders">
		<summary>
			<para> Gets a collection of header name/value pairs
      associated with the response.</para>
		</summary>
		<value>
			<para> A <see cref="System.Net.WebHeaderCollection"/> containing header name/value
   pairs associated with this response.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.WebClient.ResponseHeaders"/> property contains a <see cref="System.Net.WebHeaderCollection"/>
instance containing header information the <see cref="System.Net.WebClient"/> receives from the Internet
resource. </para>
		</remarks>
		<example>
			<para>The following example downloads and displays the <see cref="System.Net.WebClient.ResponseHeaders"/> returned by a server.</para>
			<codelink SampleID="WebClient_BaseAddress_ResponseHeaders" SnippetID="2"/>
		</example>
	</doc>
	<doc for="WebClient.WebClient">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.WebClient"/> class.</para>
		</summary>
		<remarks>
			<para>The default constructor creates a new instance of the
   <see cref="System.Net.WebClient"/>
   class with each field set to <see langword="null"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Net.WebClient"/> instance and then uses
   it to download data from a server and display it on the system console, to
   download data from a server and write it to a file, and to upload
   form values to a server and receive the response.</para>
			<codelink SampleID="WebClient" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.BaseAddress">
		<summary>
			<para>Gets or sets the base URI for requests made by a <see cref="System.Net.WebClient"/> .</para>
		</summary>
		<value>
			<para> The base URI for requests made by a
   <see cref="System.Net.WebClient"/> .</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.WebClient.BaseAddress"/>is set to an invalid URI.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.BaseAddress"/> property contains a base URI that
   is combined with the relative address specified when calling an upload or
   download method.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is set, the URI specified when calling the
following methods must be a relative URI:</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Net.WebClient.DownloadData"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.DownloadFile"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.OpenRead"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.OpenWrite"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.UploadData"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.UploadFile"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.UploadValues"/></term>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example downloads data from an Internet server and displays it
      on the console. It assumes that the server's address (such as http://www.contoso.com) is in <c>hostUri</c> and that the path to the
   resource (such as  /default.htm) is in <c>uriSuffix</c>.</para>
			<codelink SampleID="WebClient_BaseAddress_ResponseHeaders" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.Credentials">
		<summary>
			<para>Gets or sets the network credentials used to
      authenticate the request with the Internet resource.</para>
		</summary>
		<value>
			<para> An <see cref="System.Net.ICredentials"/> containing the authentication credentials for the
   request. The default is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.WebClient.Credentials"/> property contains the
   authentication credentials required to access the Internet resource.</para>
		</remarks>
		<example>
			<para>The following example uses the user's system credentials
      to authenticate a request.</para>
			<codelink SampleID="WebClientAuthentication" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.NetworkCredential"/>
		<seealso cref="System.Net.CredentialCache"/>
		<seealso cref="System.Net.WebRequest.Credentials" qualify="true"/>
	</doc>
	<doc for="WebClient.Headers">
		<summary>
			<para>Gets or sets a collection of header name/value pairs
      associated with the request.</para>
		</summary>
		<value>
			<para> A <see cref="System.Net.WebHeaderCollection"/> containing header name/value
   pairs associated with this request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.WebClient.Headers"/> property contains a <see cref="System.Net.WebHeaderCollection"/> instance containing header informationthat the <see cref="System.Net.WebClient"/> sends to the Internet resource.
   This is an unrestricted collection of headers, so setting headers that are
   restricted by <see cref="System.Net.WebRequest"/> descendants such as <see cref="System.Net.HttpWebRequest"/> is
   allowed.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.WebClient.Headers"/> collection to set the HTTP
   Content-Type header to "application/x-www-form-urlencoded" to notify the server
   that form data is attached to the post.</para>
			<codelink SampleID="WebClient_UpLoadData_Headers" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.WebRequest.Headers" qualify="true"/>
		<seealso cref="System.Net.HttpWebRequest.Headers" qualify="true"/>
	</doc>
	<doc for="WebClient.QueryString">
		<summary>
			<para>Gets or sets a collection of query name/value pairs
      associated with the request.</para>
		</summary>
		<value>
			<para> A <see cref="System.Collections.Specialized.NameValueCollection"/> that contains query name/value
   pairs associated with the request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.WebClient.QueryString"/> property contains a <see cref="System.Collections.Specialized.NameValueCollection"/>
instance containing name/value pairs that are appended to
the URI as a query string. The contents of the <see cref="System.Net.WebClient.QueryString"/> property are preceded by a question mark (?),
and name/value pairs are separated from one another by an ampersand (&amp;).</para>
		</remarks>
		<example>
			<para>The following example takes user input from the command 
      line and builds a <see cref="System.Collections.Specialized.NameValueCollection"/> that is assigned to the <see cref="System.Net.WebClient.QueryString"/> property. It then downloads the response from the
      server to a local file.</para>
			<codelink SampleID="WebClient_QueryString" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.DownloadData">
		<summary>
			<para>Downloads data from a resource with the specified URI.</para>
		</summary>
		<param name="address">The URI to download data from.</param>
		<returns>
			<para> A byte array containing the data downloaded from the
      resource specified in the <paramref name="address"/> parameter.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/> and <paramref name="address "/> is invalid. </para>
			<para>-or-</para>
			<para>An error occurred while downloading data. </para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.DownloadData"/> method downloads the data from the URI
   specified by the <paramref name="address"/> parameter to a local byte array.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must be a relative URI that is combined
with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI of the requested data. If
the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it is
appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para> The following example requests data
      from a server and displays the data returned. It assumes that <c>remoteUri</c>contains
   a valid URI for the requested
   data. </para>
			<codelink SampleID="WebClient_DownloadData" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.OpenRead">
		<summary>
			<para>Opens a readable stream for the data downloaded from a resource with the specified URI.</para>
		</summary>
		<param name="address">The URI to download data from.</param>
		<returns>
			<para> A <see cref="System.IO.Stream"/> used to read data from
   a resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, <paramref name="address "/> is invalid.</para>
			<para>-or-</para>
			<para>An error occurred while downloading data.</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.OpenRead"/>
method creates a <see cref="System.IO.Stream"/> instance used
to access the data specified by the <paramref name="address"/>
parameter.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not <see langword="null"/>, it is appended to <paramref name="address"/>.</para>
			<note type="note">
   You must call <see cref="System.IO.Stream.Close" qualify="true"/> when
   finished with the <see cref="System.IO.Stream"/>
   
   to avoid running out of system resources.
</note>
		</remarks>
		<example>
			<para>The following example opens the resource identified by <c>uriString</c> and displays the results
   on the system console. Note that the <see cref="System.IO.Stream"/> returned by <see cref="System.Net.WebClient.OpenRead"/>
   is closed when the data has been read.</para>
			<codelink SampleID="WebClient_OpenRead" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.OpenWrite">
		<overload>
			<para>Opens a stream for writing data to a resource with the specified URI.</para>
		</overload>
		<summary>
			<para> Opens a stream for writing data to the specified resource.</para>
		</summary>
		<param name="address">The URI of the resource to receive the data.</param>
		<returns>
			<para> A <see cref="System.IO.Stream"/> used to write data to the resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- </para>
			<para>An error occurred while opening the stream.</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.OpenWrite"/> method returns a writable
   stream that is used to send data to a resource. The underlying request is
   made with the POST method.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example reads data from the command line
      and uses <see cref="System.Net.WebClient.OpenWrite"/> to obtain a stream for writing the data. Note that
      the <see cref="System.IO.Stream"/>
      returned by <see cref="System.Net.WebClient.OpenWrite"/>
      is closed after the data is sent.</para>
			<codelink SampleID="WebClient_OpenWrite2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.OpenWrite1">
		<summary>
			<para> Opens a stream for writing data to the specified resource with using the specified method.</para>
		</summary>
		<param name="address">The URI of the resource to receive the data.</param>
		<param name=" method">The method used to send the data to the resource.</param>
		<returns>
			<para> A <see cref="System.IO.Stream"/> used to write data to the resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- </para>
			<para>An error occurred while opening the stream.</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.OpenWrite"/> method returns a writable stream that
   is used to send data to a resource. The underlying request is made with
   the method specified in the <paramref name="method"/> parameter.</para>
			<para>If the <paramref name="method"/> parameter specifies a method that is not understood by
the server, the underlying protocol classes determine what occurs. Typically, a
<see cref="System.Net.WebException"/> 
is thrown with the <see cref="System.Net.WebException.Status"/> property set to indicate the error.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example reads data from the command line and uses <see cref="System.Net.WebClient.OpenWrite"/>
to obtain a stream used to write the data. Note that the <see cref="System.IO.Stream"/> returned by
<see cref="System.Net.WebClient.OpenWrite"/> is closed after the data is sent.</para>
			<codelink SampleID="WebClient_OpenWrite" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.UploadData">
		<overload>
			<para>Uploads a data buffer to a resource with the specified URI.</para>
		</overload>
		<summary>
			<para> Uploads a data buffer to a resource
      identified by a URI.</para>
		</summary>
		<param name="address">The URI of the resource to receive the data.</param>
		<param name=" data">The data buffer to send to the resource.</param>
		<returns>
			<para> An array of bytes containing the body of any response from the
      resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- </para>
			<para>An error occurred while opening the stream.</para>
			<para>-or- </para>
			<para>There was no response from the server hosting the resource.</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.UploadData"/>
method sends a data buffer to a resource.
The underlying request is made
using the POST method verb. </para>
			<para>The POST verb is defined by HTTP. If the underlying
   request does not use HTTP and POST is not understood by the server, the
   underlying protocol classes determine what occurs. Typically, a <see cref="System.Net.WebException"/> is
   thrown with the <see cref="System.Net.WebException.Status"/>
   property set to indicate the error. </para>
			<para>The <see cref="System.Net.WebClient.UploadData"/> method sends the content of <paramref name="data"/> to the
server without encoding it.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example converts a string entered from the console to a byte
      array and posts the array to the specified server using <see cref="System.Net.WebClient.UploadData"/>. Any response from the server is displayed to the
      console.</para>
			<codelink SampleID="WebClient_UpLoadData2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.UploadData1">
		<nodoc/>
		<summary>
			<para> Uploads a data buffer to the specified resource
      using the specified method.</para>
		</summary>
		<param name="address">The URI of the resource to receive the data.</param>
		<param name="method">The method verb used to send the data to the resource.</param>
		<param name=" data">The data buffer to send to the resource.</param>
		<returns>
			<para> An array of bytes containing the body of any response from the
      resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- data is <see langword="null."/>
			</para>
			<para>-or- An error occurred while opening the stream.</para>
			<para>-or- </para>
			<para>There was no response from the server hosting the resource.</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.UploadData"/>
method sends a data buffer to a resource using
the method verb specified in the <paramref name="method"/> parameter and returns any
response from the server. </para>
			<para>The <see cref="System.Net.WebClient.UploadData"/> method sends the content of <paramref name="data"/> to the
server without encoding it.</para>
			<para>If the <paramref name="method"/> parameter specifies a verb that is not understood by
the server, the underlying protocol classes determine what occurs. Typically, a
<see cref="System.Net.WebException"/> 
is thrown with the <see cref="System.Net.WebException.Status"/> property set to indicate the error.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example converts a string entered from the console into a byte
      array and posts the array to the specified server using <see cref="System.Net.WebClient.UploadData"/>. Any response from the server is displayed to the
      console.</para>
			<codelink SampleID="WebClient_UpLoadData_Headers" SnippetID="2"/>
		</example>
	</doc>
	<doc for="WebClient.DownloadFile">
		<summary>
			<para>Downloads data from a resource with the specified URI to a local file.</para>
		</summary>
		<param name="address">The URI to download data from.</param>
		<param name=" fileName">The name of the local file to receive the data.</param>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/> and <paramref name="address "/> is invalid.</para>
			<para>-or-</para>
			<para>
				<paramref name="filename"/> is <see langword="null"/>, or <see cref="System.String.Empty"/>.</para>
			<para>-or- </para>
			<para>An error occurred while downloading data.</para></exception>
		<exception cref="System.Security.SecurityException">The caller does not have permission to write to local file.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.DownloadFile"/> method downloads data from the URI specified by in the <paramref name="address"/> parameter to a local file.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example downloads a file from http://www.contoso.com to the local hard
      drive.</para>
			<codelink SampleID="WebClient_DownloadFile" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.UploadValues">
		<overload>
			<para>Uploads a name/value collection to a resource with the specified
      URI.</para>
		</overload>
		<summary>
			<para> Uploads the specified name/value collection to the specified resource
      identified by a URI.</para>
		</summary>
		<param name="address">The URI of the resource to receive the collection.</param>
		<param name="data">The <see cref="System.Collections.Specialized.NameValueCollection"/> to send to the resource.</param>
		<returns>
			<para> An array of bytes containing the body of any response from the
      resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- </para>
			<para><paramref name="data"/> is <see langword="null"/>.</para>
			<para>-or- </para>
			<para>There was no response from the server hosting the resource.</para>
			<para>-or- </para>
			<para>An error occured while opening the stream.</para>
			<para>-or-</para>
			<para>The <see langword="Content-type"/> header is not <see langword="null"/> or "application/x-www-form-urlencoded".</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.UploadValues"/> method sends a <see cref="System.Collections.Specialized.NameValueCollection"/> to an Internet server.
   The underlying request is made
   using the POST method verb. </para>
			<para>The POST verb is defined by HTTP. If the underlying request does not use HTTP
   and POST is not understood by the server, the underlying protocol classes
   determine what occurs. Typically, a <see cref="System.Net.WebException"/> is thrown with the <see cref="System.Net.WebException.Status"/>
   property set to indicate the error.</para>
			<para>If the Content-type header is <see langword="null"/> , the <see cref="System.Net.WebClient.UploadValues"/> method sets it
to "application/x-www-form-urlencoded".</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example gathers information from the user (name, age, and address)
      and posts the values to the server using <see cref="System.Net.WebClient.UploadValues"/>. Any response from the server is displayed on
      the console. </para>
			<codelink SampleID="WebClient_UploadValues" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.UploadValues1">
		<summary>
			<para> Uploads the specified name/value collection to the
      specified resource with the specified URI using the specified method.</para>
		</summary>
		<param name="address">The URI of the resource to receive the collection.</param>
		<param name="method">The method verb used to send the file to the resource.</param>
		<param name="data">The <see cref="System.Collections.Specialized.NameValueCollection"/> to send to the resource.</param>
		<returns>
			<para> An array of bytes containing the body of any response from the
      resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- </para>
			<para><paramref name="data"/> is <see langword="null"/>.</para>
			<para>-or- </para>
			<para>An error occurred while opening the stream.</para>
			<para>-or-</para>
			<para>There was no response from the server hosting the resource.</para>
			<para>-or-</para>
			<para>The <see langword="Content-type"/> header is not "application/x-www-form-urlencoded".</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.UploadValues"/> method sends a <see cref="System.Collections.Specialized.NameValueCollection"/> to a resource
   using
   the method verb specified in the <paramref name="method"/> parameter and returns any
   response from the server. </para>
			<para>If the Content-type header is <see langword="null"/> , the <see cref="System.Net.WebClient.UploadValues"/> method sets it to "application/x-www-form-urlencoded".</para>
			<para>If the <paramref name="method"/> parameter specifies a verb that is not understood by
the server, the underlying protocol classes determine what occurs. Typically, a
<see cref="System.Net.WebException"/> 
is thrown with the <see cref="System.Net.WebException.Status"/> property set
to indicate the error.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example gathers information from the user (name, age, and address)
      and posts the values to the server using <see cref="System.Net.WebClient.UploadValues"/>. Any response from the server is displayed on
      the console. </para>
			<codelink SampleID="WebClient_UploadValues2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.UploadFile">
		<overload>
			<para>Uploads a local file to a resource with the specified URI.</para>
		</overload>
		<summary>
			<para> Uploads the specified local file to a resource
      with the specified URI.</para>
		</summary>
		<param name="address">The URI of the resource to receive the file.</param>
		<param name="fileName">The file to send to the resource.</param>
		<returns>
			<para> An array of bytes containing the body of any response from the
      resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid. </para>
			<para>-or- </para>
			<para><paramref name="fileName"/> is <see langword="null"/>, <see cref="System.String.Empty"/> , or contains invalid character, or the specified path to the file does not exixts.</para>
			<para>-or- </para>
			<para>An error occurred while opening the stream.</para>
			<para>-or- </para>
			<para>There was no response from the server hosting the resource.</para>
			<para>-or-</para>
			<para>The <see langword="Content-type"/> header begins with "multipart".</para></exception>
		<exception cref="System.Security.SecurityException">Local file access has not been granted.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.UploadFile"/>
method sends a local file to a resource.
The underlying request is made
using the POST method verb. </para>
			<para>The POST verb is defined by HTTP. If the underlying request does not use HTTP
   and POST is not understood by the server, the underlying protocol classes
   determine what occurs. Typically, a <see cref="System.Net.WebException"/> is thrown with the <see cref="System.Net.WebException.Status"/>
   property set to indicate the error.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para> The following example uploads the specified file to the specified URI using
   <see cref="System.Net.WebClient.UploadFile"/>. Any response returned by the server is
      displayed on the console.</para>
			<codelink SampleID="WebClient_UpLoadFile" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient.UploadFile1">
		<summary>
			<para> Uploads the specified local file to the specified resource
      using the specified method.</para>
		</summary>
		<param name="address">The URI of the resource to receive the file.</param>
		<param name="method">The method verb used to send the file to the resource.</param>
		<param name="fileName">The file to send to the resource.</param>
		<returns>
			<para> An array of bytes containing the body of any response from the
      resource.</para>
		</returns>
		<exception cref="System.Net.WebException"><para>The URI formed by combining <see cref="System.Net.WebClient.BaseAddress"/>, and <paramref name="address"/> is invalid.</para>
			<para>-or- </para>
			<para><paramref name="fileName"/> is <see langword="null"/>, <see cref="System.String.Empty"/>, or contains invalid character, or the specified path to the file does not exixts.</para>
			<para>-or- </para>
			<para>An error occurred while opening the stream.</para>
			<para>-or- </para>
			<para>There was no response from the server hosting the resource.</para>
			<para>-or-</para>
			<para>The <see langword="Content-type"/> header begins with "multipart".</para></exception>
		<exception cref="System.Security.SecurityException">Local file access has not been granted</exception>
		<remarks>
			<para>The <see cref="System.Net.WebClient.UploadFile"/>
method sends a local file to a resource using
the method verb specified in the <paramref name="method"/> parameter and returns any
response from the server. </para>
			<para>If the <paramref name="method"/> parameter specifies a verb that is not understood by
the server, the underlying protocol classes determine what occurs. Typically, a
<see cref="System.Net.WebException"/> 
is thrown with the <see cref="System.Net.WebException.Status"/> property set to indicate the error.</para>
			<para>If the <see cref="System.Net.WebClient.BaseAddress"/> property is not empty, <paramref name="address"/> must
be a relative URI that is combined with <see cref="System.Net.WebClient.BaseAddress"/> to form the absolute URI
of the requested data. If the <see cref="System.Net.WebClient.QueryString"/> property is not empty, it
is appended to <paramref name="address"/>.</para>
		</remarks>
		<example>
			<para>The following example uploads the specified file to the specified URI using
   <see cref="System.Net.WebClient.UploadFile"/>. Any response returned by the server is
      displayed on the console.</para>
			<codelink SampleID="WebClient_UpLoadFile2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebClient">
		<summary>
			<para>Provides common methods for sending data to and receiving data from a
      resource identified by a URI. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Net.WebClient"/>
class provides common methods for
sending data to or receiving data from any local, intranet, or Internet resource identified by
a URI. </para>
			<para>The <see cref="System.Net.WebClient"/> class uses the <see cref="System.Net.WebRequest"/> class to provide access to Internet
resources. <see cref="System.Net.WebClient"/> instances can access data with any <see cref="System.Net.WebRequest"/> descendant
registered with the <see cref="System.Net.WebRequest.RegisterPrefix" qualify="true"/>
method. </para>
			<note type="note">
   By default, the .NET Framework
   supports URIs that begin with <c>http:</c>, <c>https:</c>,
and <c>file:</c> scheme
identifiers.
</note>
			<para>The <see cref="System.Net.WebClient"/> class provides four methods for uploading data to
a resource: </para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Net.WebClient.OpenWrite"/>
   returns a <see cref="System.IO.Stream"/> used to send data to
   the resource.</term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.UploadData"/> sends a byte array to the resource and 
      returns a byte array containing any response.</term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.UploadFile"/> sends a local file to the resource and 
      returns a byte array containing any response.</term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.UploadValues"/> sends a <see cref="System.Collections.Specialized.NameValueCollection"/> to the resource and returns a byte array containing
      any response.</term>
				</item>
			</list>
			<para>The <see cref="System.Net.WebClient"/> class also provides three methods for
downloading data from a resource:</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Net.WebClient.DownloadData"/> downloads data from a resource and 
      returns a byte array.</term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.DownloadFile"/> downloads data from a resource to a 
      local file.</term>
				</item>
				<item>
					<term>
						<see cref="System.Net.WebClient.OpenRead"/> returns the data from the resource as a
   <see cref="System.IO.Stream"/>.</term>
				</item>
			</list>
		</remarks>
		<permission cref="System.Net.WebPermission">to access the requested URI or any URI that the request is redirected to. Associated enumeration: <see cref="System.Net.NetworkAccess.Connect"/>.</permission>
		<seealso cref="System.Net.WebRequest"/>
		<seealso cref="System.Net.WebResponse"/>
		<seealso cref="System.Net.HttpWebRequest"/>
		<seealso cref="System.Net.HttpWebResponse"/>
	</doc>
</docs>
