<docs>
	<doc for="CredentialCache.DefaultCredentials1">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CredentialCache">
		<summary>
			<para>Provides storage for multiple credentials.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Net.CredentialCache"/> class stores credentials for multiple
   Internet resources. Applications that need to access multiple resources can
   store the credentials for those resources in a <see cref="System.Net.CredentialCache"/> instance that then provides the proper set of credentials
   to the Internet resource when required. When the
<see cref="System.Net.CredentialCache.GetCredential"/>
method is called, it compares the URI and authentication type provided
with those stored in the cache and returns the first set of credentials that
match.</para>
			<para>The <see cref="System.Net.CredentialCache.DefaultCredentials"/>
property contains the system
credentials
of
the
current security context. For client applications, these represent the
user
name, password, and domain of the user who is
currently logged in. For ASP.NET applications, the default credentials are
the
user credentials of the logged-in
user or the user being impersonated.</para>
		</remarks>
		<example>
			<para>The following example initializes a <see cref="System.Net.CredentialCache"/> with
   multiple security credentials and uses those credentials with a <see cref="System.Net.WebRequest"/>:</para>
			<codelink SampleID="Classic CredentialCache.Add Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.ICredentials"/>
		<seealso cref="System.Net.WebRequest.Credentials" qualify="true"/>
	</doc><doc for="CredentialCache.Add">
		<summary>
			<para>Adds a <see cref="System.Net.NetworkCredential"/>
instance to the credential cache.</para>
		</summary>
		<param name="uriPrefix">A <see cref="System.Uri"/> that specifies the URI prefix of the resources that the credential grants access to.</param>
		<param name="authType">The authentication scheme used by the resource named in <paramref name="uriPrefix"/> .</param>
		<param name="cred">The <see cref="System.Net.NetworkCredential"/> to add to the credential cache.</param>
		<exception cref="System.ArgumentNullException"><para><paramref name="uriPrefix"/> is <see langword="null"/>
			</para>
			<para>-or-</para>
			<para><paramref name="authType"/> is <see langword="null"/> .</para></exception>
		<exception cref="System.ArgumentException">The same credentials are added more than once.</exception>
		<remarks>
			<para>The <see cref="System.Net.CredentialCache.Add"/> method places a <see cref="System.Net.NetworkCredential"/>
instance into the <see cref="System.Net.CredentialCache"/> . The cache stores credentials in the order
in which they are added to it. When the <see cref="System.Net.CredentialCache.GetCredential"/> method
is
called, it returns the
proper matching <see cref="System.Net.NetworkCredential"/> instance.</para>
		</remarks>
		<example>
			<para>The following example initializes a <see cref="System.Net.CredentialCache"/> with multiple security credentials and uses those credentials with a <see cref="System.Net.WebRequest"/>:</para>
			<codelink SampleID="Classic CredentialCache.Add Example" SnippetID="1"/>
		</example>
	</doc><doc for="CredentialCache.Remove">
		<summary>
			<para>Deletes a <see cref="System.Net.NetworkCredential"/>
instance from the cache.</para>
		</summary>
		<param name="uriPrefix">A <see cref="System.Uri"/> that specifies the URI prefix of the resources that the credential is used for.</param>
		<param name="authType">The authentication scheme used by the host named in <paramref name="uriPrefix"/> .</param>
		<remarks>
			<para>The <see cref="System.Net.CredentialCache.Remove"/>
method removes the specified <see cref="System.Net.NetworkCredential"/>
instance from the <see cref="System.Net.CredentialCache"/>. Multiple calls to the
<see cref="System.Net.CredentialCache.Remove"/> method for the same
<see cref="System.Net.NetworkCredential"/> have no effect. </para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.CredentialCache.Remove"/> method to delete a <see cref="System.Net.NetworkCredential"/> 
instance from the cache.</para>
			<codelink SampleID="CredentialCache_Add_Remove" SnippetID="3"/>
		</example>
	</doc>
	<doc for="CredentialCache.GetCredential">
		<summary>
			<para>Returns the <see cref="System.Net.NetworkCredential"/>
instance associated with the specified URI and
authentication type.</para>
		</summary>
		<param name="uriPrefix">A <see cref="System.Uri"/> that specifies the URI prefix of the resources that the credential grants access to.</param>
		<param name="authType">The authentication scheme used by the resource named in <paramref name="uriPrefix"/> .</param>
		<returns>
			<para>A <see cref="System.Net.NetworkCredential"/> or, if there is no matching credential in
   the cache,
<see langword="null"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Net.CredentialCache.GetCredential"/> method searches the <see cref="System.Net.CredentialCache"/> and
   returns the <see cref="System.Net.NetworkCredential"/> instance for the
   specified URI and authorization type. If the <see cref="System.Net.CredentialCache"/>
   contains no matching <see cref="System.Net.NetworkCredential"/> instance, <see langword="null "/>is
   returned. </para>
			<para><see cref="System.Net.CredentialCache.GetCredential"/> uses the longest matching URI prefix in the cache to determine
which set of credentials to return for an authorization type. The following
table shows examples.</para>
			<list type="table">
				<listheader>
					<term>URI Prefix</term>
					<description>Matches</description>
				</listheader>
				<item>
					<term> http://www.contoso.com/portal/news.htm</term>
					<description>Requests for the specific Web page <c>news.htm</c>.</description>
				</item>
				<item>
					<term> http://www.contoso.com/portal/</term>
					<description>Requests for all content in the <c>portal</c> path, except the page <c>news.htm</c>.</description>
				</item>
				<item>
					<term> http://www.contoso.com/</term>
					<description>Requests for all resources at <c>www.contoso.com</c>, except
      those in the <c>portal</c>
   path.</description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.CredentialCache.GetCredential"/> method to return the <see cref="System.Net.NetworkCredential"/> instance associated with 
   the specified URI and authentication type.</para>
			<codelink SampleID="CredentialCache_GetCredential" SnippetID="1"/>
		</example>
	</doc>
	<doc for="CredentialCache.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can iterate through the
   <see cref="System.Net.CredentialCache"/> instance.</para>
		</summary>
		<returns>
			<para> An <see cref="System.Collections.IEnumerator"/>
for the <see cref="System.Net.CredentialCache"/> .</para>
		</returns>
		<example>
			<para>The following example uses the GetEnumerator method to 
      return an enumerator that can iterate through the
   <see cref="System.Net.CredentialCache"/> instance.</para>
			<codelink SampleID="CredentialCache_GetEnumerator" SnippetID="1"/>
		</example>
	</doc>
	<doc for="CredentialCache.DefaultCredentials">
		<summary>
			<para> Gets the system credentials
      of the application.</para>
		</summary>
		<value>
			<para>An <see cref="System.Net.ICredentials"/> that represents the system credentials of the application.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Net.CredentialCache.DefaultCredentials"/>
property applies only to NTLM, negotiate, and
Kerberos-based authentication.</para>
			<para><see cref="System.Net.CredentialCache.DefaultCredentials"/>
represents the system credentials for the current security context
in which the application is running. For a client-side application, these
are usually the Windows credentials (user name, password, and domain) of
the user running the application. For ASP.NET applications, the default credentials
are the user credentials of the logged-in user, or the user being impersonated.</para>
			<note type="note">
   The <see cref="System.Net.ICredentials"/>
   instance returned by <see cref="System.Net.CredentialCache.DefaultCredentials"/> cannot
   be used to view the user
   name, password, or domain of the current security context.
</note>
		</remarks>
		<permission cref="System.Security.Permissions.EnvironmentPermission">for reading the user's system credentials. Associated enumeration: <see cref="System.Security.Permissions.EnvironmentPermissionAccess"/></permission>
		<example>
			<para>The following example uses the <see cref="System.Net.CredentialCache.DefaultCredentials"/> method to get the system credentials of the 
   application.</para>
			<codelink SampleID="CredentialCache_DefaultCredentials" SnippetID="1"/>
		</example>
	</doc>
	<doc for="CredentialCache.CredentialCache">
		<summary>
			<para>Creates a new instance of the <see cref="System.Net.CredentialCache"/> class.</para>
		</summary>
		<remarks>
			<para>The constructor creates a <see cref="System.Net.CredentialCache"/> 
instance. </para>
		</remarks>
		<example>
			<para>The following example initializes a <see cref="System.Net.CredentialCache"/> with multiple security credentials and uses those credentials with a <see cref="System.Net.WebRequest"/>:</para>
			<codelink SampleID="Classic CredentialCache.Add Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
