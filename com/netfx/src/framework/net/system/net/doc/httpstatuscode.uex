<docs>
	<doc for="HttpStatusCode.Continue">
		<summary>
			<para>Equivalent to HTTP status 100. <see cref="System.Net.HttpStatusCode.Continue"/> indicates that the client may continue with its request.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.MultipleChoices">
		<summary>
			<para>Equivalent to HTTP status 300. <see cref="System.Net.HttpStatusCode.MultipleChoices"/> indicates that the requested information has 
    multiple representations. The default action is to treat this status as a
    redirect and follow the contents of the Location header associated with this response.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>, 
 <see cref="System.Net.HttpStatusCode.MultipleChoices"/> will cause an exception to be thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.MultipleChoices"/> is a synonym for <see cref="System.Net.HttpStatusCode.Ambiguous"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Ambiguous">
		<summary>
			<para>Equivalent to HTTP status 300. <see cref="System.Net.HttpStatusCode.Ambiguous"/> indicates that the requested information has 
    multiple representations. The default action is to treat this status as a
    redirect and follow the contents of the Location header associated with this
    response.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>, 
 <see cref="System.Net.HttpStatusCode.Ambiguous"/> will cause an 
 exception to be thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.Ambiguous"/> is a synonym for <see cref="System.Net.HttpStatusCode.MultipleChoices"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.SwitchingProtocols">
		<summary>
			<para>Equivalent to HTTP status 101. <see cref="System.Net.HttpStatusCode.SwitchingProtocols"/> indicates that the protocol version or protocol is being changed.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Created">
		<summary>
			<para>Equivalent to HTTP status 201. <see cref="System.Net.HttpStatusCode.Created"/> indicates that the request resulted in a new 
   resource created before the response was sent.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Accepted">
		<summary>
			<para>Equivalent to HTTP status 202. <see cref="System.Net.HttpStatusCode.Accepted"/> indicates that the request has been accepted for 
   further processing.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.NonAuthoritativeInformation">
		<summary>
			<para>Equivalent to HTTP status 203. <see cref="System.Net.HttpStatusCode.NonAuthoritativeInformation"/> indicates 
   that the returned metainformation is from a
   cached copy instead of the origin server and therefore may be incorrect.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.NoContent">
		<summary>
			<para>Equivalent to HTTP status 204. <see cref="System.Net.HttpStatusCode.NoContent"/> indicates that the request has been successfully 
   processed and that the response is intentionally blank.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.ResetContent">
		<summary>
			<para>Equivalent to HTTP status 205. <see cref="System.Net.HttpStatusCode.ResetContent"/> indicates that the client should reset (not reload) 
   the current resource.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.PartialContent">
		<summary>
			<para>Equivalent to HTTP status 206. <see cref="System.Net.HttpStatusCode.PartialContent"/> indicates that the response is a partial response as 
   requested by a GET request that includes a byte range.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.NotModified">
		<summary>
			<para>Equivalent to HTTP status 304. <see cref="System.Net.HttpStatusCode.NotModified"/> indicates 
   that the client's cached copy is up to date. The contents of the resource is not transferred.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.UseProxy">
		<summary>
			<para>Equivalent to HTTP status 305. <see cref="System.Net.HttpStatusCode.UseProxy"/> indicates that
   the request should use the proxy server at the URI specified in the Location header.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Unused">
		<summary>
			<para>Equivalent to HTTP status 306. <see cref="System.Net.HttpStatusCode.Unused"/> is a proposed extension to the HTTP/1.1 
   specification that is not fully specified.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.BadRequest">
		<summary>
			<para>Equivalent to HTTP status 400. <see cref="System.Net.HttpStatusCode.BadRequest"/> indicates that the request could not be understood 
   by the server. <see cref="System.Net.HttpStatusCode.BadRequest"/> is sent when no other error is applicable, or if the
   exact error is unknown or does not have its own error code.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.PaymentRequired">
		<summary>
			<para>Equivalent to HTTP status 402. <see cref="System.Net.HttpStatusCode.PaymentRequired"/> is reserved for future use.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Forbidden">
		<summary>
			<para>Equivalent to HTTP status 403. <see cref="System.Net.HttpStatusCode.Forbidden"/> indicates that the server refuses to fulfill the request.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.NotFound">
		<summary>
			<para>Equivalent to HTTP status 404. <see cref="System.Net.HttpStatusCode.NotFound"/> indicates that the requested resource does not exist 
   on the server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.MethodNotAllowed">
		<summary>
			<para>Equivalent to HTTP status 405. <see cref="System.Net.HttpStatusCode.MethodNotAllowed"/> indicates that the request method (POST or GET) is 
   not allowed on the requested resource.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.NotAcceptable">
		<summary>
			<para>Equivalent to HTTP status 406. <see cref="System.Net.HttpStatusCode.NotAcceptable"/> indicates that the client has indicated with Accept 
   headers that it will not accept any of the available representations of the resource.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.RequestTimeout">
		<summary>
			<para>Equivalent to HTTP status 408. <see cref="System.Net.HttpStatusCode.RequestTimeout"/> indicates that the client did not send a request 
   within the time the server was expecting the request.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Conflict">
		<summary>
			<para>Equivalent to HTTP status 409. <see cref="System.Net.HttpStatusCode.Conflict"/> indicates that the request could not be carried out 
   due to a conflict on the server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Gone">
		<summary>
			<para>Equivalent to HTTP status 410. <see cref="System.Net.HttpStatusCode.Gone"/> 
indicates that the requested resource is not longer available.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.LengthRequired">
		<summary>
			<para>Equivalent to HTTP status 411. <see cref="System.Net.HttpStatusCode.LengthRequired"/> indicates that the required Content-length header is missing.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.PreconditionFailed">
		<summary>
			<para>Equivalent to HTTP status 412. <see cref="System.Net.HttpStatusCode.PreconditionFailed"/> indicates that a condition set for this request 
   failed, and the request cannot be carried out. Conditions are set with
   conditional request headers such as If-Match, If-None-Match, or
   If-Unmodified-Since.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.RequestEntityTooLarge">
		<summary>
			<para>Equivalent to HTTP status 413. <see cref="System.Net.HttpStatusCode.RequestEntityTooLarge"/> indicates that the request is too large for the 
   server to process.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.RequestUriTooLong">
		<summary>
			<para>Equivalent to HTTP status 414. <see cref="System.Net.HttpStatusCode.RequestUriTooLong"/>indicates that the URI is too
   long.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.UnsupportedMediaType">
		<summary>
			<para>Equivalent to HTTP status 415. <see cref="System.Net.HttpStatusCode.UnsupportedMediaType"/> indicates that the request is an unsupported type.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.RequestedRangeNotSatisfiable">
		<summary>
			<para>Equivalent to HTTP status 416. <see cref="System.Net.HttpStatusCode.RequestedRangeNotSatisfiable"/> indicates that the range of data requested from the 
   resource cannot be returned, either because the beginning of the range is before
   the beginning of the resource, or
   the end of the range is after the end of the resource.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.InternalServerError">
		<summary>
			<para>Equivalent to HTTP status 500. <see cref="System.Net.HttpStatusCode.InternalServerError"/> indicates that a generic error has occurred on the server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.NotImplemented">
		<summary>
			<para>Equivalent to HTTP status 501. <see cref="System.Net.HttpStatusCode.NotImplemented"/> indicates the server does not support the requested function.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.BadGateway">
		<summary>
			<para>Equivalent to HTTP status 502. <see cref="System.Net.HttpStatusCode.BadGateway"/> indicates that an intermediate proxy server received 
   a bad response from another proxy or the origin server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.ServiceUnavailable">
		<summary>
			<para>Equivalent to HTTP status 503. <see cref="System.Net.HttpStatusCode.ServiceUnavailable"/> indicates that the server is temporarily 
   unavailable, usually due to high load or maintenance.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.GatewayTimeout">
		<summary>
			<para>Equivalent to HTTP status 504. <see cref="System.Net.HttpStatusCode.GatewayTimeout"/> indicates that an intermediate proxy server timed out while waiting for 
   a response from another proxy or the origin server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.HttpVersionNotSupported">
		<summary>
			<para>Equivalent to HTTP status 505. <see cref="System.Net.HttpStatusCode.HttpVersionNotSupported"/> indicates that the requested HTTP version is not 
   supported by the server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.ExpectationFailed">
		<summary>
			<para>Equivalent to HTTP status 417. <see cref="System.Net.HttpStatusCode.ExpectationFailed"/> indicates that an expectation given in an Expect 
   header could not be met by the server.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.SeeOther">
		<summary>
			<para>Equivalent to HTTP status 303. <see cref="System.Net.HttpStatusCode.SeeOther"/> automatically redirects the client to 
   the URI specified in the Location header as the result of a
   POST. The request to the resource specified by the Location header will be made
   with a GET.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>,
<see cref="System.Net.HttpStatusCode.SeeOther"/> will cause an exception to be thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.SeeOther"/> is a synonym for <see cref="System.Net.HttpStatusCode.RedirectMethod"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.RedirectMethod">
		<summary>
			<para>Equivalent to HTTP status 303. <see cref="System.Net.HttpStatusCode.RedirectMethod"/> automatically redirects the client to 
   the URI specified in the Location header as the result of a
   POST. The request to the resource specified by the Location header will be made
   with a GET.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>,
<see cref="System.Net.HttpStatusCode.RedirectMethod"/> will cause an exception to be thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.RedirectMethod"/> is a synonym for <see cref="System.Net.HttpStatusCode.SeeOther"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.OK">
		<summary>
			<para>Equivalent to HTTP status 200. <see cref="System.Net.HttpStatusCode.OK"/> indicates that the
   request succeeded and the requested information is in the response. This is the
   most common status code to receive.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Found">
		<summary>
			<para>Equivalent to HTTP status 302. <see cref="System.Net.HttpStatusCode.Found"/> indicates that the requested
   information is located at the URI specified in the Location header.
   The default action when this status is received is to
   follow the Location header associated with the response. When the original request
   method was POST, the redirected request will use the GET method.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>,
<see cref="System.Net.HttpStatusCode.Found"/> will cause an exception to be
thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.Found"/> is a synonym for <see cref="System.Net.HttpStatusCode.Redirect"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Redirect">
		<summary>
			<para>Equivalent to HTTP status 302. <see cref="System.Net.HttpStatusCode.Redirect"/> indicates that the requested
   information is located at the URI specified in the Location header. The default
   action when this status is received is to follow the Location header
   associated with the response. When the original request method was POST, the redirected
   request will use the GET method.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>,
<see cref="System.Net.HttpStatusCode.Redirect"/> will cause an exception to be
thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.Redirect"/> is a synonym for <see cref="System.Net.HttpStatusCode.Found"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.TemporaryRedirect">
		<summary>
			<para>Equivalent to HTTP status 307. <see cref="System.Net.HttpStatusCode.TemporaryRedirect"/> indicates
   that the request information is located at the URI specified in the Location
   header. The
   default action when this status is received
   is to follow the Location header associated with the response. When the original
   request method was POST, the redirected request will also use the POST method.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>,
<see cref="System.Net.HttpStatusCode.TemporaryRedirect"/> will cause an exception to be
thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.TemporaryRedirect"/> is a synonym for <see cref="System.Net.HttpStatusCode.RedirectKeepVerb"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.RedirectKeepVerb">
		<summary>
			<para>Equivalent to HTTP status 307. <see cref="System.Net.HttpStatusCode.RedirectKeepVerb"/> indicates that the request
   information is located at the URI specified in the Location header. The
   default action when this status is received
   is to follow the Location header associated with the response. When the original
   request method was POST, the redirected request will also use the POST method.</para>
			<para>If the <see cref="System.Net.HttpWebRequest.AllowAutoRedirect" qualify="true"/> property is <see langword="false"/>,
<see cref="System.Net.HttpStatusCode.RedirectKeepVerb"/> will cause an exception to be
thrown.</para>
			<para>
				<see cref="System.Net.HttpStatusCode.RedirectKeepVerb"/> is a synonym for <see cref="System.Net.HttpStatusCode.TemporaryRedirect"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Unauthorized">
		<summary>
			<para>Equivalent to HTTP status 401. <see cref="System.Net.HttpStatusCode.Unauthorized"/> indicates that the requested resource requires
   authentication. The WWW-Authenticate header contains the details of how to
   perform the authentication.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode">
		<summary>
			<para>Contains the values of status codes defined for HTTP.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Net.HttpStatusCode"/> enumeration contains the values of the status codes
   defined in RFC 2616 for HTTP 1.1. </para>
			<para>The status of an HTTP request is contained in the <see cref="System.Net.HttpWebResponse.StatusCode" qualify="true"/> property. </para>
		</remarks>
		<example>
			<para>The following example compares the status returned by an
   <see cref="System.Net.HttpWebResponse"/> with a member of the <see cref="System.Net.HttpStatusCode"/> class
      to determine the status of a response.</para>
			<codelink SampleID="Classic HttpStatusCode Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpStatusCode.ProxyAuthenticationRequired">
		<summary>
			<para>Equivalent to HTTP status 407. <see cref="System.Net.HttpStatusCode.ProxyAuthenticationRequired"/> indicates that the requested proxy requires
   authentication. The Proxy-authenticate header contains the details of how to
   perform the authentication.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.MovedPermanently">
		<summary>
			<para>Equivalent to HTTP status 301. <see cref="System.Net.HttpStatusCode.MovedPermanently"/> indicates that the requested information has been moved to the URI specified in the Location header. The default action when this status is received is to follow the Location header associated with the response.</para>
			<para><see cref="System.Net.HttpStatusCode.MovedPermanently"/> is a synonym for <see cref="System.Net.HttpStatusCode.Moved"/>.</para>
		</summary>
	</doc>
	<doc for="HttpStatusCode.Moved">
		<summary>
			<para> Equivalent to HTTP status 301. <see cref="System.Net.HttpStatusCode.Moved"/> indicates that the requested
   information has been moved to the URI specified in the Location header. The
   default action when this status is received is to follow the Location header
   associated with the response. When the original request method was POST, the redirected
   request will use the
   GET method.</para>
			<para><see cref="System.Net.HttpStatusCode.Moved"/> is a synonym for <see cref="System.Net.HttpStatusCode.MovedPermanently"/>.</para>
		</summary>
	</doc>
</docs>
