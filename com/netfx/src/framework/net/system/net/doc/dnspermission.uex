<docs>
	<doc for="DnsPermission.CheckDemand">
		<summary>
			<para>Checks the <see cref="System.Net.DnsPermission"/> against a permission demand.</para>
		</summary>
		<param name="demandedPermission">The permission demanded by the application.</param>
		<exception cref="System.Security.SecurityException">The permission demanded by the application is not available. </exception>
		<remarks>
			<para><see cref="System.Net.DnsPermission.CheckDemand"/>
 should never be called directly by an
 application. The method is implemented by all permission classes as the
 underlying test of a code access permission.</para>
		</remarks>
	</doc>
	<doc for="DnsPermission">
		<summary>
			<para>Controls rights to access Domain Name System (DNS) servers on the
      network.</para>
		</summary>
		<remarks>
			<para> The default permissions allow all local and Intranet zone
      applications to access DNS services, and no DNS permission for Internet zone applications.</para>
		</remarks>
		<seealso cref="System.Security.SecurityZone"/>
	</doc>
	<doc for="DnsPermissionAttribute">
		<summary>
			<para> Specifies permission to request
      information from Domain Name Servers.</para>
		</summary>
		<remarks>
			<para>The security information declared by <see cref="System.Net.DnsPermissionAttribute"/> is stored in the 
   metadata of the attribute target, which is the class to which the <see cref="System.Net.DnsPermissionAttribute"/>
   is
   applied. The system then accesses this information at run-time. The <see cref="System.Security.Permissions.SecurityAction"/> passed
   to the constructor determines the allowable DNS targets. </para>
			<para>These security attributes are used only for <see topic="cpcondeclarativesecurity"/> . For
<see topic="cpconimperativesecurity"/> 
, use the corresponding <see cref="System.Net.DnsPermission"/>
class. </para>
			<para>Security access is either fully restricted, or fully
   unrestricted. Set the <see cref="System.Security.Permissions.PermissionState.Unrestricted"/> property to
<see langword="true "/>to grant access, or <see langword="false"/> for no access. Set this property as a named 
   parameter.</para>
			<para>For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.DnsPermissionAttribute"/> to apply declarative
   security to a custom class.</para>
			<codelink SampleID="Classic DnsPermissionAttributeExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Security.Permissions.CodeAccessSecurityAttribute"/>
	</doc><doc for="DnsPermissionAttribute.CreatePermission">
		<summary>
			<para>Creates and returns a new instance of the <see cref="System.Net.DnsPermission"/> class.</para>
		</summary>
		<returns>
			<para> A <see cref="System.Net.DnsPermission"/> corresponding to the security declaration.</para>
		</returns>
		<remarks>
			<para>The <see langword="CreatePermission"/> method is called by the
   security system, not by application code.</para>
The security information described by <see cref="System.Net.DnsPermissionAttribute"/> is stored in the
metadata of the attribute target. which is the class to which <see cref="System.Net.DnsPermissionAttribute"/> is applied. The system then
accesses the information at run time and calls <see cref="System.Net.DnsPermissionAttribute.CreatePermission"/>. The system uses the returned <see cref="System.Security.IPermission"/>to
enforce the specified security requirements.
</remarks>
	</doc><doc for="DnsPermissionAttribute.DnsPermissionAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.DnsPermissionAttribute"/> class with the specified <see cref="System.Security.Permissions.SecurityAction"/> value.</para>
		</summary>
		<param name="action">One of the <see cref="System.Security.Permissions.SecurityAction"/> values.</param>
		<exception cref="System.ArgumentException">The <paramref name="action "/>parameter is not a valid <see cref="System.Security.Permissions.SecurityAction"/> .</exception>
		<remarks>
			<para>The <see cref="System.Security.Permissions.SecurityAction"/> value passed to this constructor
   specifies the allowable <see cref="System.Net.DnsPermissionAttribute"/>targets.
</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.DnsPermissionAttribute"/> to apply declarative security to a
   custom class.</para>
			<codelink SampleID="Classic DnsPermissionAttributeExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Security.Permissions.SecurityAction"/>
	</doc>
	<doc for="DnsPermission.Copy">
		<summary>
			<para> Creates an identical copy of the current
      permission instance.
      </para>
		</summary>
		<returns>
			<para> A new instance of the <see cref="System.Net.DnsPermission"/> class that is an identical copy of the current instance.
   </para>
		</returns>
		<remarks>
			<para>A copy of a <see cref="System.Net.DnsPermission"/> instance provides the same access to DNS servers as
   the original permission instance.</para>
		</remarks>
		<example>
			<para>The following example creates an identical copy of an 
      existing <see cref="System.Net.DnsPermission"/> instance.</para>
			<codelink SampleID="DnsPermission_Copy" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DnsPermission.IsUnrestricted">
		<summary>
			<para> Checks the overall permission state of the object.
      </para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Net.DnsPermission"/> instance was created
   with <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/>; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<example>
			<para>The following example uses the <see cref="System.Net.DnsPermission.IsUnrestricted"/> method to
   check the overall permission state of the object.</para>
			<codelink SampleID="DnsPermission_IsUnrestricted" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DnsPermission.Union">
		<summary>
			<para>Creates a permission instance that is the union of the
      current permission instance and the specified permission instance.</para>
		</summary>
		<param name="target">The <see cref="System.Net.DnsPermission"/> instance to combine with the current instance.</param>
		<returns>
			<para>A <see cref="System.Net.DnsPermission"/> instance that represents the union of
   the current <see cref="System.Net.DnsPermission"/> instance with the
   specified <see cref="System.Net.DnsPermission"/> instance. If
<paramref name="target"/> is <see langword="null"/> , 
   this method returns a copy of the current instance. If the
   current instance or <paramref name="target"/> is unrestricted, this method returns a <see cref="System.Net.DnsPermission"/>
   instance that is unrestricted; otherwise, it returns a <see cref="System.Net.DnsPermission"/>
   instance that is not unrestricted.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target "/>is neither a <see cref="System.Net.DnsPermission"/> nor <see langword="null"/> .</exception>
		<remarks>
			<para>The <see cref="System.Net.DnsPermission.Union"/> method returns a <see cref="System.Net.DnsPermission"/>
instance that allows the access defined by either the current <see cref="System.Net.DnsPermission"/>
instance or the specified <see cref="System.Net.DnsPermission"/> instance. Any demand that passes either permission
passes their union.</para>
		</remarks>
		<example>
			<para>The following example creates a permission instance that is the union of the
      current permission instance and the specified permission instance.</para>
			<codelink SampleID="dnspermission_union_intersect" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DnsPermission.IsSubsetOf">
		<summary>
			<para>Determines whether the current permission instance is a
      subset of the specified permission instance.</para>
		</summary>
		<param name="target">The second <see cref="System.Net.DnsPermission"/> instance to be tested for the subset relationship.</param>
		<returns>
			<para><see langword="false"/> if the current instance is 
   unrestricted and <paramref name="target"/> is either <see langword="null"/>
   or unrestricted, otherwise <see langword="true"/>.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target"/> is neither a <see cref="System.Net.DnsPermission"/> nor <see langword="null"/> .</exception>
		<remarks>
			<para>The current <see cref="System.Net.DnsPermission"/> instance is a subset of the specified <see cref="System.Net.DnsPermission"/>
instance if the current <see cref="System.Net.DnsPermission"/> instance specifies a set of operations that is
wholly contained by the specified <see cref="System.Net.DnsPermission"/> instance. </para>
			<para>If the <see cref="System.Net.DnsPermission.IsSubsetOf"/> method returns <see langword="true"/> , the current <see cref="System.Net.DnsPermission"/>
instance allows no more access to DNS servers than does the specified <see cref="System.Net.DnsPermission"/>
instance.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.DnsPermission.IsSubsetOf"/> method to determine whether the current permission
   instance is a subset of the specified permission instance.</para>
			<codelink SampleID="DnsPermission_IsSubsetOf" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DnsPermission.DnsPermission">
		<overload>
			<para>Creates a new instance of the <see cref="System.Net.DnsPermission"/>
class.</para>
		</overload>
		<summary>
			<para>Creates a new instance of the <see cref="System.Net.DnsPermission"/> class that either allows unrestricted DNS access or
   disallows DNS access.</para>
		</summary>
		<param name="state">One of the <see cref="System.Security.Permissions.PermissionState"/> values.</param>
		<exception cref="System.ArgumentException"><paramref name="state"/> is not a valid <see cref="System.Security.Permissions.PermissionState"/> value.</exception>
		<remarks>
			<para>If <paramref name="state"/> is <see cref="System.Security.Permissions.PermissionState.Unrestricted"/> the <see cref="System.Net.DnsPermission"/> instance passes all
   demands. If <paramref name="state"/>
   contains any other
   value, the <see cref="System.Net.DnsPermission"/> instance fails all demands.</para>
		</remarks>
		<example>
			<para>The following example creates an instance of the <see cref="System.Net.DnsPermission"/>class.</para>
			<codelink SampleID="DnsPermission_Constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DnsPermission.FromXml">
		<summary>
			<para>Reconstructs a <see cref="System.Net.DnsPermission"/> instance from an XML encoding.</para>
		</summary>
		<param name="securityElement">The XML encoding to use to reconstruct the <see cref="System.Net.DnsPermission"/> instance.</param>
		<exception cref="System.ArgumentNullException"><para><paramref name="securityElement "/>is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException"><paramref name="securityElement"/> is not a <see cref="System.Net.DnsPermission"/> element.</exception>
		<remarks>
			<para>The <see cref="System.Net.DnsPermission.FromXml"/> method reconstructs a <see cref="System.Net.DnsPermission"/>
instance from an XML encoding defined by <see cref="System.Security.SecurityElement"/>class.</para>
			<para>Use the <see cref="System.Net.DnsPermission.ToXml"/> method to XML-encode the <see cref="System.Net.DnsPermission"/>
instance, including state information.</para>
		</remarks>
		<example>
			<para>The following example reconstructs a <see cref="System.Net.DnsPermission"/> instance from an XML encoding.</para>
			<codelink SampleID="DnsPermission_FromXml" SnippetID="1"/>
		</example>
		<seealso cref="System.Security.SecurityElement"/>
	</doc>
	<doc for="DnsPermission.Intersect">
		<summary>
			<para>Creates a permission instance that is the intersection of
      the current permission instance and the specified permission instance.</para>
		</summary>
		<param name="target">The <see cref="System.Net.DnsPermission"/> instance to combine with the current instance.</param>
		<returns>
			<para>A <see cref="System.Net.DnsPermission"/> instance that represents the intersection of the current <see cref="System.Net.DnsPermission"/> instance with the specified <see cref="System.Net.DnsPermission"/> instance, or
<see langword="null"/> if the intersection is empty. If both 
   the current instance and <paramref name="target"/> are unrestricted, this method returns a new <see cref="System.Net.DnsPermission"/> instance that
   is unrestricted; otherwise, it returns <see langword="null"/>.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target "/>is neither a <see cref="System.Net.DnsPermission"/> nor <see langword="null"/> .<see langword=""/>
		</exception>
		<remarks>
			<para>The <see cref="System.Net.DnsPermission.Intersect"/> method returns a <see cref="System.Net.DnsPermission"/> instance that allows the access defined by both the current <see cref="System.Net.DnsPermission"/> instance and the specified <see cref="System.Net.DnsPermission"/> instance. Any demand must pass both permissions to pass their intersection.</para>
		</remarks>
		<example>
			<para>The following example creates a permission instance that is the intersection
      of the current permission instance and the specified permission instance.</para>
			<codelink SampleID="dnspermission_union_intersect" SnippetID="2"/>
		</example>
	</doc>
	<doc for="DnsPermission.ToXml">
		<summary>
			<para>Creates an XML encoding of a <see cref="System.Net.DnsPermission"/> instance and its current state. </para>
		</summary>
		<returns>
			<para>A <see cref="System.Security.SecurityElement"/> instance containing an XML-encoded representation of the security object, including state information.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Net.DnsPermission.ToXml"/> method creates a <see cref="System.Security.SecurityElement"/> instance to XML-encode a representation of the
<see cref="System.Net.DnsPermission"/> 
instance, including state information.</para>
			<para>Use <see cref="System.Net.DnsPermission.FromXml"/> method to restore the state information from a <see cref="System.Security.SecurityElement"/>
instance.</para>
		</remarks>
		<example>
			<para>The following example creates an XML encoding of a
   <see cref="System.Net.DnsPermission"/> instance.</para>
			<codelink SampleID="DnsPermission_Constructor" SnippetID="1"/>
		</example>
	</doc>
</docs>
