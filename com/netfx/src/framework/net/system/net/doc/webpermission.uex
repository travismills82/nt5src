<docs>
	<doc for="WebPermission.AddPermission">
		<overload>
			<para>Adds a new Web access permission.</para>
		</overload>
		<summary>
			<para>Adds a new instance of the <see cref="System.Net.WebPermission"/>
 class with the specified access rights for the specified Uniform Resource Identifier regular expression.</para>
		</summary>
		<param name="access">The access right to grant.</param>
		<param name="uriRegex">A regular expression describing the Uri to grant the access right to.</param>
		<exception cref="System.ArgumentNullException"><paramref name="uriRegex "/>is <see langword="null"/>.</exception>
	</doc>
	<doc for="WebPermission.CheckDemand">
		<summary>
			<para>Checks the WebPermission against a permission demand.</para>
		</summary>
		<param name="demandedPermission">The permission demanded by the application.</param>
		<exception cref="System.NotSupportedException">The <paramref name="demandedPermission "/>is for both Accept and Connect permissions.</exception>
		<exception cref="System.ArgumentException"><paramref name="demandedPermission "/>is empty.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="demandedPermission "/>is <see langword="null"/>.</exception>
	</doc>
	<doc for="WebPermission.Copy">
		<summary>
			<para> Creates a copy of a <see cref="System.Net.WebPermission"/> .
   </para>
		</summary>
		<returns>
			<para>A new instance of the <see cref="System.Net.WebPermission"/> class that has the same values as the original</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Security.IPermission"/> returned by this method represents the same 
   access to resources as the original <see cref="System.Net.WebPermission"/>
   . This method overrides <see cref="System.Security.CodeAccessPermission.Copy"/> and is implemented to support the <see cref="System.Security.IPermission"/>
   interface.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create a second instance of <see cref="System.Net.WebPermission"/> using
<see cref="System.Net.WebPermission.Copy"/>. This second instance is identical to the 
   first. </para>
			<codelink SampleID="WebPermission_Copy" SnippetID="2"/>
		</example>
	</doc><doc for="WebPermission.ToXml">
		<summary>
			<para>Creates an XML encoding of a <see cref="System.Net.WebPermission"/> and its current state.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Security.SecurityElement"/> containing an XML-encoded
   representation of the <see cref="System.Net.WebPermission"/> , including state information.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Net.WebPermission.FromXml"/> method to restore the state information from a
<see cref="System.Security.SecurityElement"/> .</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use <see cref="System.Net.WebPermission.ToXml"/>
to create a <see cref="System.Security.SecurityElement" qualify="true"/> and print its attributes to the console. </para>
			<codelink SampleID="WebPermission_FromToXml" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.WebPermission.FromXml"/>
	</doc><doc for="WebPermission.WebPermission2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Net.WebPermission"/>
class with the specified access
rights for the specified URI regular expression.</para>
		</summary>
		<param name="access"><para>A <see cref="System.Net.NetworkAccess"/> value indicating what kind of access to grant to the specified URI. <see cref="System.Net.NetworkAccess.Accept"/> indicates that the application is allowed to accept connections from the Internet on a local resource. <see cref="System.Net.NetworkAccess.Connect"/> indicates that the application is allowed to connect to specific Internet resources.</para></param>
		<param name=" uriRegex">A regular expression describing the URI to which acess is to be granted. </param>
		<remarks>
			<para>This constructor initializes a <see cref="System.Net.WebPermission"/> and grants its target permission to either make a
   remote host connection or to accept a remote host connection using the URI
   described by the <paramref name="uriRegex "/>parameter. </para>
			<note type="note">
   It is recommended to create
<paramref name="uriRegex "/>using the <see cref="System.Text.RegularExpressions.RegexOptions.IgnoreCase" qualify="true"/>, <see cref="System.Text.RegularExpressions.RegexOptions.Compiled" qualify="true"/>, and <see cref="System.Text.RegularExpressions.RegexOptions.Singleline" qualify="true"/> flags.
</note>
		</remarks>
		<example>
			<para>The following example creates a new instance of <see cref="System.Net.WebPermission"/> with
   connect rights for the specified <see cref="System.Text.RegularExpressions.Regex" qualify="true"/>.</para>
			<codelink SampleID="WebPermission_Constructor4" SnippetID="1"/>
		</example>
		<seealso cref="System.Text.RegularExpressions.Regex"/>
	</doc><doc for="WebPermission.ConnectList">
		<summary>
			<para>This property returns an enumeration of a
      single connect permissions held by this <see cref="System.Net.WebPermission"/>. The
      possible objects types contained in the returned enumeration are <see cref="System.String"/> and <see cref="System.Text.RegularExpressions.Regex" qualify="true"/>.</para>
		</summary>
		<value>
			<para> The <see cref="System.Collections.IEnumerator"/> interface containing
   connect permissions.</para>
		</value>
		<remarks>
			<para>This property gets a list of remote resources permitted by this <see cref="System.Net.WebPermission"/>
. The class to which you have applied <see cref="System.Net.WebPermission"/> only has permission
to connect with resources found in this list. </para>
			<note type="note">
   You can add URIs to
   this list using <see cref="System.Net.WebPermission.AddPermission"/>.
</note>
		</remarks>
		<example>
			<para>The following example prints the URL's in the <see cref="System.Net.WebPermission.ConnectList"/> to the console.</para>
			<codelink SampleID="WebPermission_AcceptConnectList" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.WebPermission.AddPermission"/>
	</doc><doc for="WebPermission.AddPermission1">
		<overload>
			<para>Adds the specified URI with the specified access
      rights to the current <see cref="System.Net.WebPermission"/>
      .</para>
		</overload>
		<summary>
			<para>Adds the specified URI string with the specified access
      rights to the current <see cref="System.Net.WebPermission"/>
      .</para>
		</summary>
		<param name="access">A <see cref="System.Net.NetworkAccess"/> specifying the access rights granted to the URI</param>
		<param name="uriString">A string describing the URI to which access rights are granted.</param>
		<exception cref="System.ArgumentNullException"><paramref name="uriString "/>is <see langword="null."/></exception>
		<remarks>
			<para> If you have specified <see cref="System.Security.Permissions.PermissionState.None"/> as the <see cref="System.Security.Permissions.PermissionState"/> , use <see cref="System.Net.WebPermission.AddPermission"/> to permit the use of <paramref name="uriString "/>in the
   target class. The way that <paramref name="uriString "/>can be used by the target
   class is specified by <paramref name="access."/> Specify <see cref="System.Net.NetworkAccess.Accept"/>
   as the access parameter to add the URI specified by the <paramref name="uriString
   "/>parameter to the list of URI accept strings, or specify <see cref="System.Net.NetworkAccess.Connect"/> as the access parameter to add the URI to the list
   of URI connect strings. </para>
			<note type="note">
   Calling <see cref="System.Net.WebPermission.AddPermission"/> on <see cref="System.Security.Permissions.PermissionState.Unrestricted"/>
				<see cref="System.Net.WebPermission"/> will have no effect, as
   permission is granted to all URI's.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to add access rights to particular URL
      strings.</para>
			<codelink SampleID="WebPermission_Intersect" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.NetworkAccess"/>
	</doc><doc for="WebPermission.FromXml">
		<summary>
			<para>Reconstructs a <see cref="System.Net.WebPermission"/> from
   an XML encoding. </para>
		</summary>
		<param name="securityElement"><para>The XML encoding from which to reconstruct the <see cref="System.Net.WebPermission"/> .</para></param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="securityElement "/>parameter is <see langword="null"/></para></exception>
		<exception cref="System.ArgumentException"><paramref name="securityElement "/>is not a permission element for this type.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebPermission.FromXml"/>
method reconstructs a <see cref="System.Net.WebPermission"/>
from an XML encoding defined by the <see cref="System.Security.SecurityElement"/>class.</para>
			<para>Use the <see cref="System.Net.WebPermission.ToXml"/>
method to XML-encode the <see cref="System.Net.WebPermission"/> , including state
information.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Security.SecurityElement" qualify="true"/>, populates its attributes, and uses <see cref="System.Net.WebPermission.FromXml"/> to transfer this information to an instance of
<see cref="System.Net.WebPermission"/> .</para>
			<codelink SampleID="WebPermission_FromToXml" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.WebPermission.ToXml"/>
	</doc><doc for="WebPermissionAttribute">
		<summary>
			<para> Specifies
      permission to access Internet resources. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para><see cref="System.Net.WebPermissionAttribute"/> allows
   you to declaratively specify
   which URI strings and regular expression strings your
   class can use. </para>
			<para>The security information specified in the <see cref="System.Net.WebPermissionAttribute"/> is stored in the 
metadata of the attribute target, which is the class to which <see cref="System.Net.WebPermissionAttribute"/>
is applied.
The system accesses this information at run time. The <see cref="System.Security.Permissions.SecurityAction" qualify="true"/> passed to the constructor determines the
allowable <see cref="System.Net.WebPermissionAttribute"/> targets. The system uses the <see cref="System.Net.WebPermission"/>
returned by the <see cref="System.Net.WebPermissionAttribute.CreatePermission"/> method to convert the security
information of the attribute target to a serializable form
stored in metadata. </para>
			<note type="note">
				<see cref="System.Net.WebPermissionAttribute"/> is used only for <see topic="cpcondeclarativesecurity"/> . For <see topic="cpconimperativesecurity"/> , use the corresponding <see cref="System.Net.WebPermission"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to apply <see cref="System.Net.WebPermissionAttribute"/> to a method.</para>
			<codelink SampleID="WebPermissionAttribute_AcceptConnect" SnippetID="1"/>
		</example>
	</doc><doc for="WebPermissionAttribute.ConnectPattern">
		<summary>
			<para>Gets or sets a regular expression pattern that describes
      the URI connection controlled by the current <see cref="System.Net.WebPermissionAttribute"/>
      .</para>
		</summary>
		<value>
			<para>A string containing a regular expression pattern that
      describes the URI connection controlled by this <see cref="System.Net.WebPermissionAttribute"/>
      .</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.WebPermissionAttribute.ConnectPattern"/>is not <see langword="null"/> when you attempt to set the value. If you wish to specify more than one connect URI, use an additional attribute declaration statement.</exception>
		<remarks>
			<para>When applying <see cref="System.Net.WebPermissionAttribute"/> to your class, this
   property specifies what regular expression connect string is accepted for
   use within your class. This property is write-once.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use <see cref="System.Net.WebPermissionAttribute"/> to specify an allowable <see cref="System.Net.WebPermissionAttribute.ConnectPattern"/>.</para>
			<codelink SampleID="WebPermissionAttribute_ConnectPattern" SnippetID="1"/>
		</example>
		<seealso topic="cpconregularexpressionslanguageelements"/>
	</doc><doc for="WebPermissionAttribute.Accept">
		<summary>
			<para>Gets or sets the URI string accepted by the current
   <see cref="System.Net.WebPermissionAttribute"/>.</para>
		</summary>
		<value>
			<para>A string containing the URI accepted by the current
   <see cref="System.Net.WebPermissionAttribute"/>
   .</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.WebPermissionAttribute.Accept"/>is not <see langword="null"/> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.</exception>
		<remarks>
			<para>When applying <see cref="System.Net.WebPermissionAttribute"/> to your class, this
   property specifies what URI string will be accepted for use within your class.
   This permission is applied when the security system calls <see cref="System.Net.WebPermissionAttribute.CreatePermission"/>
   
   . This property is write-once.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use <see cref="System.Net.WebPermissionAttribute"/> to specify an allowable <see cref="System.Net.WebPermissionAttribute.Accept"/> string.</para>
			<codelink SampleID="WebPermissionAttribute_Accept" SnippetID="1"/>
		</example>
		<seealso topic="cpconintroducingpluggableprotocols"/>
	</doc><doc for="WebPermissionAttribute.Connect">
		<summary>
			<para>Gets or sets the URI connection string controlled by the
      current <see cref="System.Net.WebPermissionAttribute"/> .</para>
		</summary>
		<value>
			<para>A string containing the URI connection controlled by the
      current <see cref="System.Net.WebPermissionAttribute"/>
      .</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.WebPermissionAttribute.Connect"/>is not <see langword="null"/> when you attempt to set the value. If you wish to specify more than one Connect URI, use an additional attribute declaration statement.</exception>
		<remarks>
			<para>When applying <see cref="System.Net.WebPermissionAttribute"/> to your class, this
   property specifies what URI connection is accepted for use within your class.
   This property is write-once.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use WebPermissionAttribute to specify an allowable <see cref="System.Net.WebPermissionAttribute.Connect"/> string. </para>
			<codelink SampleID="WebPermissionAttribute_Connect" SnippetID="1"/>
		</example>
		<seealso topic="cpconintroducingpluggableprotocols "/>
	</doc><doc for="WebPermissionAttribute.AcceptPattern">
		<summary>
			<para>Gets or sets a regular expression pattern that describes
      the URI accepted by the current <see cref="System.Net.WebPermissionAttribute"/>
      .</para>
		</summary>
		<value>
			<para>A string containing a regular expression pattern that
      describes the URI accepted by the current <see cref="System.Net.WebPermissionAttribute"/> . This
      string must be escaped according to the rules for encoding a <see cref="System.Text.RegularExpressions.Regex" qualify="true"/> constructor
      string.</para>
		</value>
		<exception cref="System.ArgumentException"><see cref="System.Net.WebPermissionAttribute.AcceptPattern"/>is not <see langword="null"/> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement.</exception>
		<remarks>
			<para>When applying <see cref="System.Net.WebPermissionAttribute"/> to your class, this property specifies what regular
   expression string will be accepted for use within your class. This property is
   write-once.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use <see cref="System.Net.WebPermissionAttribute"/> to specify an allowable <see cref="System.Net.WebPermissionAttribute.AcceptPattern"/>.</para>
			<codelink SampleID="WebPermissionAttribute_AcceptPattern" SnippetID="1"/>
		</example>
		<seealso topic="cpconregularexpressionslanguageelements"/>
	</doc><doc for="WebPermissionAttribute.CreatePermission">
		<summary>
			<para>Creates and returns a new instance of the <see cref="System.Net.WebPermission"/> class.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Net.WebPermission"/> corresponding to the security declaration.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Net.SocketPermissionAttribute.CreatePermission"/> method is called by the
   security system, not by application code.</para>
			<para>The security information described by <see cref="System.Net.WebPermissionAttribute"/> is stored in the 
metadata of the attribute target, which is the class to which <see cref="System.Net.WebPermissionAttribute"/>
is applied. The system accesses
the information at run time. The system uses the <see cref="System.Net.WebPermission"/>
returned by <see cref="System.Net.SocketPermissionAttribute.CreatePermission"/> to convert the security
information of the attribute target to a serializable form stored in
metadata.</para>
		</remarks>
	</doc><doc for="WebPermission.IsUnrestricted">
		<summary>
			<para>Checks the overall permission state of the <see cref="System.Net.WebPermission"/> .</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Net.WebPermission"/> was created with the
<see cref="System.Security.Permissions.PermissionState.Unrestricted"/>
				<see cref="System.Security.Permissions.PermissionState"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>If <see cref="System.Net.WebPermission"/> is <see cref="System.Security.Permissions.PermissionState.Unrestricted"/> , then the target class can
   use all URIs. Otherwise, specific permission must be given for any URI
   you want to use with the target class. </para>
			<note type="note">
   Use <see cref="System.Net.WebPermission.AddPermission"/> to add a URI and specify its permissions.
</note>
		</remarks>
		<seealso cref="System.Net.WebPermission.AddPermission"/>
	</doc><doc for="WebPermission.AcceptList">
		<summary>
			<para>This property returns an enumeration of a single accept
      permissions held by this <see cref="System.Net.WebPermission"/>. The possible objects types contained in the
      returned enumeration are <see cref="System.String"/> and <see cref="System.Text.RegularExpressions.Regex" qualify="true"/>.</para>
		</summary>
		<value>
			<para> The <see cref="System.Collections.IEnumerator"/> interface
   containing accept permissions.</para>
		</value>
		<remarks>
			<para>This property gets a list of local resources permitted by this <see cref="System.Net.WebPermission"/>
. The class to which you have applied <see cref="System.Net.WebPermission"/> only has
permission to receive an incoming connection to local resources found in this list. </para>
			<note type="note">
   You can add URIs to this
   list using <see cref="System.Net.WebPermission.AddPermission"/>.
</note>
		</remarks>
		<example>
			<para>The following example prints the URL's in the <see cref="System.Net.WebPermission.AcceptList"/> to the console.</para>
			<codelink SampleID="WebPermission_AcceptConnectList" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.WebPermission.AddPermission"/>
	</doc><doc for="WebPermission.AddPermission2">
		<summary>
			<para>Adds the specified URI with the specified access rights to the current <see cref="System.Net.WebPermission"/>
.</para>
		</summary>
		<param name="access">A NetworkAccess specifying the access rights granted to the URI.</param>
		<param name=" uriRegex">A regular expression describing the set of URI's to which access rights are granted. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="uriRegex"/> parameter is <see langword="null"/> .</exception>
		<remarks>
			<para>If you have specified <see cref="System.Security.Permissions.PermissionState.None"/> as the <see cref="System.Security.Permissions.PermissionState"/>
, use <see cref="System.Net.WebPermission.AddPermission"/> to allow the use of <paramref name="uriRegex
"/>in the target class. Specify <see cref="System.Net.NetworkAccess.Accept"/>
as the <paramref name="access "/>parameter to add the URI specified by the <paramref name="uriRegex "/>parameter
to the list of URI accept strings, or specify <see cref="System.Net.NetworkAccess.Connect"/> as the access parameter to add the URI to the list
of URI connect strings.</para>
			<note type="note">
   Calling <see cref="System.Net.WebPermission.AddPermission"/> on an <see cref="System.Security.Permissions.PermissionState.Unrestricted"/>
				<see cref="System.Net.WebPermission"/>
instance will have no effect as permission is granted to all URI's.
</note>
			<note type="note">
   It is recommended to create
<paramref name="uriRegex "/>using the <see cref="System.Text.RegularExpressions.RegexOptions.IgnoreCase" qualify="true"/>, <see cref="System.Text.RegularExpressions.RegexOptions.Compiled" qualify="true"/>, and <see cref="System.Text.RegularExpressions.RegexOptions.Singleline" qualify="true"/> flags.
   
</note>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.WebPermission.AddPermission"/> to give access rights for the
   specified URI.</para>
			<codelink SampleID="WebPermission_IsSubset" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.NetworkAccess"/>
	</doc>
	<doc for="WebPermissionAttribute.WebPermissionAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.WebPermissionAttribute"/> class with a value that
   specifies the security actions that can be performed on this class.</para>
		</summary>
		<param name="action"><para>One of the <see cref="System.Security.Permissions.SecurityAction"/> values.</para></param>
		<exception cref="System.ArgumentException"><paramref name="action"/> is not a valid <see cref="System.Security.Permissions.SecurityAction"/> value.</exception>
		<remarks>
			<para>The <see cref="System.Security.Permissions.SecurityAction"/> value passed to this constructor
   specifies the allowable security actions that can be performed on this
   class.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to apply <see cref="System.Net.WebPermissionAttribute"/> to a method.</para>
			<codelink SampleID="WebPermissionAttribute_Constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebPermission.WebPermission3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Net.WebPermission"/>
class with the
specified access rights for the specified URI.</para>
		</summary>
		<param name="access"><para>A NetworkAccess value indicating what kind of access to grant to the specified URI. <see cref="System.Net.NetworkAccess.Accept"/> indicates that the application is allowed to accept connections from the Internet on a local resource. <see cref="System.Net.NetworkAccess.Connect"/> indicates that the application is allowed to connect to specific Internet resources.</para></param>
		<param name=" uriString">A URI string to which access rights are granted. </param>
		<exception cref="System.ArgumentNullException"><paramref name="uriString"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>This constructor initializes a <see cref="System.Net.WebPermission"/> and grants its target permission to either make a
   remote host connection or to accept a remote host connection using the URI
   described by the <paramref name="uriString "/>parameter.</para>
		</remarks>
		<example>
			<para>The following example creates a new instance of <see cref="System.Net.WebPermission"/> with
   connect rights for the specified URI.</para>
			<codelink SampleID="WebPermission_Union" SnippetID="1"/>
		</example>
		<seealso cref="System.Text.RegularExpressions.Regex"/>
	</doc>
	<doc for="WebPermission.IsSubsetOf">
		<summary>
			<para>Determines whether the current <see cref="System.Net.WebPermission"/> is a subset of
   the specified object.</para>
		</summary>
		<param name="target">The <see cref="System.Net.WebPermission"/> to compare to the current <see cref="System.Net.WebPermission"/> .</param>
		<returns>
			<para><see langword="true "/>if the
   current instance is a subset of the <paramref name="target "/>parameter; otherwise,
<see langword="false"/> . If 
   the target is <see langword="null"/> , the
   method returns <see langword="true "/>for an empty current permission that is not unrestricted and
<see langword="false "/>otherwise.</para>
		</returns>
		<exception cref="System.ArgumentException">the target parameter is not an instance of <see cref="System.Net.WebPermission"/>.</exception>
		<exception cref="System.NotSupportedException">If the current instance contains a Regex-encoded right and there is not exactly same right found in the target instance.</exception>
		<remarks>
			<para>If the current <see cref="System.Net.WebPermission"/> specifies
   a set of associated resources that is wholly contained by the <paramref name="target
   "/>parameter, then the current <see cref="System.Net.WebPermission"/> is a subset of <paramref name="target"/>
   . This method overrides <see cref="System.Net.WebPermission.IsSubsetOf"/> and is implemented to support the <see cref="System.Security.IPermission"/>
   interface.</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.WebPermission.IsSubsetOf"/> to determine if the access rights
   found in one instance of <see cref="System.Net.WebPermission"/> are found in another instance of <see cref="System.Net.WebPermission"/>.</para>
			<codelink SampleID="WebPermission_IsSubset2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebPermission.Union">
		<summary>
			<para>Returns the logical union between two instances of the
   <see cref="System.Net.WebPermission"/> class.</para>
		</summary>
		<param name="target">The <see cref="System.Net.WebPermission"/> to combine with the current <see cref="System.Net.WebPermission"/> .</param>
		<returns>
			<para>A <see cref="System.Net.WebPermission"/> that represents the union of the current instance
   and the <paramref name="target "/>parameter. If either WebPermission is
<see cref="System.Security.Permissions.PermissionState.Unrestricted"/>, the method returns a <see cref="System.Net.WebPermission"/> 
that is <see cref="System.Security.Permissions.PermissionState.Unrestricted"/> . If the
target is <see langword="null"/>, returns a copy of current <see cref="System.Net.WebPermission"/> .</para>
		</returns>
		<exception cref="System.ArgumentException">target is not <see langword="null"/> or of type <see cref="System.Net.WebPermission"/>. </exception>
		<remarks>
			<para><see cref="System.Net.WebPermission.Union"/> returns a <see cref="System.Net.WebPermission"/> that contains all the
   permissions in both <paramref name="target "/>and the current instance. </para>
		</remarks>
		<example>
			<para>The following example takes the logical union of two <see cref="System.Net.WebPermission"/>
instances to create a third instance of <see cref="System.Net.WebPermission"/>. </para>
			<codelink SampleID="WebPermission_Union" SnippetID="2"/>
		</example>
		<seealso cref="System.Security.Permissions.PermissionState"/>
	</doc>
	<doc for="WebPermission.Intersect">
		<summary>
			<para>Returns the logical intersection of two <see cref="System.Net.WebPermission"/> instances.</para>
		</summary>
		<param name="target">The <see cref="System.Net.WebPermission"/> to compare with the current instance.</param>
		<returns>
			<para>A new <see cref="System.Net.WebPermission"/> that represents the intersection of the current
   instance and the <paramref name="target "/> parameter. If the intersection is empty,
   the method returns <see langword="null"/> .</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target "/>is not <see langword="null"/> or of type <see cref="System.Net.WebPermission"/></exception>
		<remarks>
			<para><see cref="System.Net.WebPermission.Intersect"/> returns a <see cref="System.Net.WebPermission"/> that contains those permissions that are common in both <paramref name="target "/>and the
   current instance. </para>
			<para>This method overrides <see cref="System.Security.CodeAccessPermission.Intersect"/> and is implemented to support the <see cref="System.Security.IPermission"/>
interface. </para>
		</remarks>
		<example>
			<para>The following example shows how to create an instance of
   <see cref="System.Net.WebPermission"/> using the logical intersection of two exisiting
   <see cref="System.Net.WebPermission"/>instances.</para>
			<codelink SampleID="WebPermission_Intersect" SnippetID="3"/>
		</example>
	</doc>
	<doc for="WebPermission.WebPermission1">
		<summary>
			<para> Creates a new instance of the <see cref="System.Net.WebPermission"/> class.
   </para>
		</summary>
		<remarks>
   Creates a new instance of the <see cref="System.Net.WebPermission"/> class. This constructor creates an empty permission
   that does not grant any rights.
</remarks>
		<seealso cref="System.Net.WebPermission.IsUnrestricted"/>
	</doc>
	<doc for="WebPermission.WebPermission">
		<overload>
			<para>Creates a new instance of the <see cref="System.Net.WebPermission"/>
class.</para>
		</overload>
		<summary>
			<para>Creates a new instance of the <see cref="System.Net.WebPermission"/>
class that passes all demands
or fails all demands.</para>
		</summary>
		<param name="state">A <see cref="System.Security.Permissions.PermissionState"/> value.</param>
		<remarks>
			<para>The value of the <paramref name="state "/>parameter is either <see cref="System.Security.Permissions.PermissionState.None" qualify="true"/> or <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/> , respectively
   yielding fully restricted or fully unrestricted access to all security
   variables. If you specify <see cref="System.Security.Permissions.PermissionState.None" qualify="true"/>, then you may give access to
   individual URI's using <see cref="System.Net.WebPermission.AddPermission"/>
   .</para>
		</remarks>
		<example>
			<para>The following example creates an instance of <see cref="System.Net.WebPermission"/> 
and gives access rights to specific URLs. </para>
			<codelink SampleID="WebPermission_Copy" SnippetID="1"/>
		</example>
		<seealso cref="System.Security.Permissions.PermissionState.Unrestricted"/>
	</doc>
	<doc for="WebPermission">
		<summary>
			<para> Controls rights to access HTTP Internet resources.</para>
		</summary>
		<remarks>
			<para><see cref="System.Net.WebPermission"/> provides a set of methods and properties to control access
   to Internet resources. You can use a <see cref="System.Net.WebPermission"/> to provide either restricted or unrestricted access
   to your resource, based on the <see cref="System.Security.Permissions.PermissionState"/> set when the <see cref="System.Net.WebPermission"/>
   is created. </para>
			<para>Create a <see cref="System.Net.WebPermission"/> instance by calling its constructor using one of the
following sets of parameters:</para>
			<list type="bullet"><item>
					<term>
      
      No parameters. The default <see cref="System.Security.Permissions.PermissionState"/> is
   <see cref="System.Security.Permissions.PermissionState.None"/>.</term>
				</item>
				<item>
					<term>
      
      A <see cref="System.Security.Permissions.PermissionState"/>. Specify
      either <see cref="System.Security.Permissions.PermissionState.Unrestricted"/>to allow any URI to be used in the
      target class, or <see cref="System.Security.Permissions.PermissionState.None"/> to allow access
      only to URIs you specify through the use of the <see cref="System.Net.WebPermission.AddPermission"/> method.</term>
				</item>
				<item>
					<term>
      
      A <see cref="System.Net.NetworkAccess"/> value and
      a URI string. The specified URI has permissions granted by the <see cref="System.Net.NetworkAccess"/> value.</term>
				</item>
				<item>
					<term>
      
      A <see cref="System.Net.NetworkAccess"/> specifier and URI regular expression.</term>
				</item>
			</list>
			<para>The <see cref="System.Net.WebPermission.ConnectList"/> and <see cref="System.Net.WebPermission.AcceptList"/> hold the URIs to which you have granted access
permission. To add a URI to either of these lists, use <see cref="System.Net.WebPermission.AddPermission"/>. If you pass <see cref="System.Net.NetworkAccess.Accept"/> as the <see cref="System.Net.NetworkAccess"/>
parameter, the URI will be added to the <see cref="System.Net.WebPermission.AcceptList"/>. <see cref="System.Net.WebPermission"/> will allow connections to your
target class with URIs matching the <see cref="System.Net.WebPermission.AcceptList"/>
. </para>
			<note type="caution">
   To <see cref="System.Security.CodeAccessPermission.Deny"/>access to an Internet resource you must
<see langword="Deny"/> access to all the possible paths to that 
   resource. A better approach is to allow access to the specific
   resource only. For more information on this subject refer to the <see topic="cpcondeny"/> topic.
</note>
			<note type="note">
   You only need to
<see langword="Deny"/> access using the resource canonical path. There is no need 
   to use all the path's syntactical variations.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to create a new instance of <see cref="System.Net.WebPermission"/> using a <see cref="System.Text.RegularExpressions.Regex"/>. Additional hosts are
   added to the connect and accept list of <see cref="System.Net.WebPermission"/>. Finally
   the connect and accept list are displayed to the console.</para>
			<codelink SampleID="WebPermission_Regex" SnippetID="1"/>
		</example>
		<seealso cref="System.Security.CodeAccessPermission"/>
		<seealso cref="System.Security.Permissions.PermissionState"/>
		<seealso cref="System.Net.NetworkAccess"/>
	</doc>
</docs>
