<docs>
	<doc for="CookieContainer.Default">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CookieContainer.Dump">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CookieContainer.CookieContainer1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.CookieContainer"/> class with a specified value for the number of
<see cref="System.Net.Cookie"/> instances the container can 
   hold. </para>
		</summary>
		<param name="capacity">The number of <see cref="System.Net.Cookie"/> instances the <see cref="System.Net.CookieContainer"/> can hold.</param>
		<exception cref="System.ArgumentException"><paramref name="capacity"/> is less than or equal to zero</exception>
		<remarks>
			<para><see cref="System.Net.CookieContainer.PerDomainCapacity"/> is
   initialized to 20, and <see cref="System.Net.CookieContainer.MaxCookieSize"/>
   is initialized to 4096.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.Add1">
		<summary>
			<para>Adds the contents of a <see cref="System.Net.CookieCollection"/> to the
<see cref="System.Net.CookieContainer"/>
. </para>
		</summary>
		<param name="cookies">The <see cref="System.Net.CookieCollection"/> to be added to the <see cref="System.Net.CookieContainer"/> .</param>
		<exception cref="System.ArgumentNullException"><paramref name="cookies"/> is <see langword="null"/>
		</exception>
		<remarks>
			<para>If the <see cref="System.Net.CookieContainer.Count"/> property equals the 
<see cref="System.Net.CookieContainer.Capacity"/> 
property, one or more <see cref="System.Net.Cookie"/> instances are
removed from the container before adding the contents of the <paramref name="cookies
"/>parameter. Enough <see cref="System.Net.Cookie"/> instances are removed
to make room for <paramref name="cookies"/> as follows: if there are expired instances they
are cleaned up. If not, or if more room is needed, then the least recently used
<see cref="System.Net.CookieCollection"/> is found and removed from the container. </para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer">
		<summary>
			<para>Provides a container for a collection of <see cref="System.Net.CookieCollection"/> objects.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Net.CookieContainer"/> is a data structure that provides storage for
   instances of the <see cref="System.Net.Cookie"/> class, and
   which is accessed in a database-like manner. The <see cref="System.Net.CookieContainer"/> has
   a capacity limit which is set when the container is created, or changed by a
   property. </para>
			<para>An instance of the <see cref="System.Net.Cookie"/> class is added to the container based on its 
originating URI. It is added to an internal <see cref="System.Net.CookieCollection"/> associated with the URI. A <see cref="System.Net.Cookie"/> is retrieved
from the container based on the URI as a <see cref="System.Net.CookieCollection"/>
, or as a string which can be used
to submit HTTP WebRequests. </para>
			<para>The <see cref="System.Net.CookieContainer"/> has three properties that govern the volume of the
content of the container: <see cref="System.Net.CookieContainer.Capacity"/>, <see cref="System.Net.CookieContainer.MaxCookieSize"/>, and <see cref="System.Net.CookieContainer.PerDomainCapacity"/>. These
values have the default settings of 300, 4096, and 20 respectively. When a
<see cref="System.Net.Cookie"/> is added to the container, these properties are
used to determine whether a <see cref="System.Net.Cookie"/> already contained in the <see cref="System.Net.CookieContainer"/>
should be discarded to make room for the new one. The <see cref="System.Net.CookieContainer"/> keeps track of each addition to ensure that neither the <see cref="System.Net.CookieContainer.Capacity"/> nor the <see cref="System.Net.CookieContainer.PerDomainCapacity"/> limits are exceeded. If one or both are exceeded, then <see cref="System.Net.Cookie"/> instances held by the
<see cref="System.Net.CookieContainer"/> are removed. First, any expired <see cref="System.Net.Cookie"/> is removed. If further capacity must be recaptured, then the least-recently-used <see cref="System.Net.CookieCollection"/> is
purged.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
		<seealso cref="System.Collections.ICollection"/>
	</doc><doc for="CookieContainer.CookieContainer">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Net.CookieContainer"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.CookieContainer"/> class.</para>
		</summary>
		<remarks>
			<para>The default constructor initializes all fields to their
      default values. <see cref="System.Net.CookieContainer.DefaultCookieLimit"/> is
      used to initialize <see cref="System.Net.CookieContainer.Capacity"/>, <see cref="System.Net.CookieContainer.DefaultCookieLengthLimit"/> is used for <see cref="System.Net.CookieContainer.MaxCookieSize"/>, and <see cref="System.Net.CookieContainer.DefaultPerDomainCookieLimit"/> is used for <see cref="System.Net.CookieContainer.PerDomainCapacity"/>.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.Add">
		<overload>
			<para>Adds a <see cref="System.Net.Cookie"/> to a <see cref="System.Net.CookieContainer"/>.</para>
		</overload>
		<summary>
			<para>Adds a <see cref="System.Net.Cookie"/> to a <see cref="System.Net.CookieContainer"/>. This method uses the domain from the <see cref="System.Net.Cookie"/> to determine
   which domain collection to associate the <see cref="System.Net.Cookie"/>
   with.</para>
		</summary>
		<param name="cookie">The <see cref="System.Net.Cookie"/> to be added to the <see cref="System.Net.CookieContainer"/> .</param>
		<exception cref="System.ArgumentNullException"><paramref name="cookie"/> is <see langword="null"/></exception>
		<exception cref="System.ArgumentException">domain for <paramref name="cookie"/> is <see langword="null"/></exception>
		<exception cref="System.Net.CookieException"><paramref name="cookie"/> is larger than <paramref name="maxCookieSize"/></exception>
		<remarks>
			<para>If the <see cref="System.Net.CookieContainer.Count"/> property equals or exceeds the
<see cref="System.Net.CookieContainer.Capacity"/> property,
   one or more <see cref="System.Net.Cookie"/> instances are removed
   from the container before adding the <paramref name="cookie "/>parameter. Enough <see cref="System.Net.Cookie"/> instances are removed to
   bring <see cref="System.Net.CookieContainer.Count"/> below <see cref="System.Net.CookieContainer.Capacity"/> as follows: if
   there are expired instances in given scope they are cleaned up. If not, then the least
   recently used <see cref="System.Net.CookieCollection"/> is found and removed from the
   container. </para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.Capacity">
		<summary>
			<para>Gets and sets the number of <see cref="System.Net.Cookie"/> instances a <see cref="System.Net.CookieContainer"/>
can hold.</para>
		</summary>
		<value>
			<para>The number of <see cref="System.Net.Cookie"/> instances a <see cref="System.Net.CookieContainer"/> can hold. This is a hard limit and
   cannot be exceeded by adding a <see cref="System.Net.Cookie"/>
   .</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="Capacity"/> is less than or equal to zero or (value is less than <see cref="System.Net.CookieContainer.PerDomainCapacity"/> and <see cref="System.Net.CookieContainer.PerDomainCapacity"/> is not equal to <see cref="System.Int32.MaxValue"/>).</exception>
		<remarks>
			<para>If <see cref="System.Net.CookieContainer.Count"/> equals or exceeds <see cref="System.Net.CookieContainer.Capacity"/> , one or more <see cref="System.Net.Cookie"/> instances are removed from the container. Enough
   instances are removed to bring <see cref="System.Net.CookieContainer.Count"/> below <see cref="System.Net.CookieContainer.Capacity"/> as
   follows: if there are expired <see cref="System.Net.Cookie"/> instances in scope they
   are cleaned up. If not, then the least recently used <see cref="System.Net.CookieCollection"/>
   is found and removed from the container. </para>
			<para><see cref="System.Net.CookieContainer.Capacity"/> must be greater than or equal to <see cref="System.Net.CookieContainer.PerDomainCapacity"/> . If you set
<see cref="System.Net.CookieContainer.PerDomainCapacity"/> and the 
current <see cref="System.Net.CookieContainer.Count"/>
of <see cref="System.Net.Cookie"/> instances is less
than the new value, the excess is removed from the container. Enough instances are removed to
bring <see cref="System.Net.CookieContainer.Count"/> below <see cref="System.Net.CookieContainer.Capacity"/>
as follows: if there are
expired <see cref="System.Net.Cookie"/> instances in scope they are cleaned up. If not, or if there are
still more than the new value
of <see cref="System.Net.CookieContainer.PerDomainCapacity"/>, then the least recently used
<see cref="System.Net.CookieCollection"/> 
is found and removed
from the container. </para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.Add3">
		<summary>
			<para>Adds the contents of a <see cref="System.Net.CookieCollection"/> to the
<see cref="System.Net.CookieContainer"/>
for a particular URI.</para>
		</summary>
		<param name="cookies">The <see cref="System.Net.CookieCollection"/> to be added to the <see cref="System.Net.CookieContainer"/> .</param>
		<param name="uri">The URI of the <see cref="System.Net.CookieCollection"/> to be added to the <see cref="System.Net.CookieContainer"/> .</param>
		<exception cref="System.ArgumentNullException"><paramref name="uri"/> is <see langword="null"/></exception>
		<exception cref="System.ArgumentNullException"><paramref name="cookies"/> is <see langword="null"/></exception>
		<remarks>
			<para>If you add a <see cref="System.Net.Cookie"/> instance for just one specific host, don't set the 
<see cref="System.Net.Cookie.Domain"/> property of the <see cref="System.Net.Cookie"/> instance. This is set 
   automatically, based on the URI. </para>
			<para>If your URI corresponds to your local domain and sends to all the hosts on 
   the local domain, set the <see cref="System.Net.Cookie"/>
				<see cref="System.Net.Cookie.Domain"/> property equal to ".local". Otherwise, make
   sure it matches the host name used in the URI. </para>
			<para>If <see cref="System.Net.CookieContainer.Count"/> equals <see cref="System.Net.CookieContainer.Capacity"/>, one or more <see cref="System.Net.Cookie"/> instances is removed from the container before
adding the <paramref name="cookie"/> parameter. Enough <see cref="System.Net.Cookie"/> instances are removed to bring <see cref="System.Net.CookieContainer.Count"/> below <see cref="System.Net.CookieContainer.Capacity"/>
as follows: if there are
expired instances in scope they are cleaned up. If not, then the least recently
used <see cref="System.Net.CookieCollection"/> is found and removed from the container. </para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.DefaultCookieLimit">
		<summary>
			<para>Represents the default maximum number of <see cref="System.Net.Cookie"/> instances the
<see cref="System.Net.CookieContainer"/> can hold. This field is constant.</para>
		</summary>
		<remarks>
			<para>The default maximum number of <see cref="System.Net.Cookie"/> instances is 300.</para>
		</remarks>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.DefaultCookieLengthLimit">
		<summary>
			<para>Represents the default maximum size, in bytes, of the <see cref="System.Net.Cookie"/> instances the <see cref="System.Net.CookieContainer"/>
can hold. This field is constant.</para>
		</summary>
		<remarks>
			<para>The default maximum <see cref="System.Net.Cookie"/> size is 4096.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.DefaultPerDomainCookieLimit">
		<summary>
			<para>Represents the default maximum number of <see cref="System.Net.Cookie"/> instances the <see cref="System.Net.CookieContainer"/> can reference per
   domain. This field is constant.</para>
		</summary>
		<remarks>
			<para>The default maximum number of <see cref="System.Net.Cookie"/> instances per domain is 20.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.MaxCookieSize">
		<summary>
			<para>Represents the maximum allowed length of a <see cref="System.Net.Cookie"/> .</para>
		</summary>
		<value>
			<para>The maximum allowed length, in bytes, of a <see cref="System.Net.Cookie"/> .</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="MaxCookieSize "/> is less than or equal to zero</exception>
		<remarks>
			<para>If the new value of <see cref="System.Net.CookieContainer.MaxCookieSize"/> is less than the current value, any
<see cref="System.Net.Cookie"/> with 
   length exceeding the new value will be truncated.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.CookieContainer2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.CookieContainer"/> class with specific
   properties.</para>
		</summary>
		<param name="capacity">The number of <see cref="System.Net.Cookie"/> instances the <see cref="System.Net.CookieContainer"/> can hold.</param>
		<param name="perDomainCapacity">The number of <see cref="System.Net.Cookie"/> instances per domain.</param>
		<param name="maxCookieSize">The maximum size in bytes for any single <see cref="System.Net.Cookie"/> in a <see cref="System.Net.CookieContainer"/> .</param>
		<exception cref="System.ArgumentException"><para><paramref name="perDomainCapacity"/> is not equal to <see cref="System.Int32.MaxValue"/>
			</para>
			<para>and </para>
			<para>
				<paramref name="(perDomainCapacity"/> is less than or equal to zero or <paramref name="perDomainCapacity"/> is greater than <paramref name=" capacity)"/>
			</para></exception>
		<exception cref="System.ArgumentException"><paramref name="maxCookieSize"/> is less than or equal to zero</exception>
		<remarks>
			<para>The parameters specify values for <see cref="System.Net.CookieContainer.Capacity"/> , <see cref="System.Net.CookieContainer.MaxCookieSize"/>, and <see cref="System.Net.CookieContainer.PerDomainCapacity"/>.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.Count">
		<summary>
			<para>Gets the number of <see cref="System.Net.Cookie"/> instances a <see cref="System.Net.CookieContainer"/>
currently holds.</para>
		</summary>
		<value>
			<para>The number of <see cref="System.Net.Cookie"/> instances a <see cref="System.Net.CookieContainer"/> currently holds. This is the total
   of <see cref="System.Net.Cookie"/> instances in
   all domains.</para>
		</value>
		<remarks>
			<para>The default value of this property is <see cref="System.Net.CookieContainer.DefaultCookieLimit"/>. If
<see cref="System.Net.CookieContainer.Count"/> equals or exceeds <see cref="System.Net.CookieContainer.Capacity"/> , one or more <see cref="System.Net.Cookie"/> instances are 
   removed from the container. Enough instances are removed to bring <see cref="System.Net.CookieContainer.Count"/> below <see cref="System.Net.CookieContainer.Capacity"/> as follows: if there are expired
<see cref="System.Net.Cookie"/> 
instances in scope they are cleaned up. If not, then the least recently used
<see cref="System.Net.CookieCollection"/> is found and removed from the container.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.SetCookies">
		<summary>
			<para>Adds <see cref="System.Net.Cookie"/> instances for one or more cookies from an HTTP cookie header
   to the <see cref="System.Net.CookieContainer"/> for a specific URI.</para>
		</summary>
		<param name="uri">The URI of the <see cref="System.Net.CookieCollection"/> .</param>
		<param name="cookieHeader">The contents of an HTTP set-cookie header as returned by a HTTP server, with <see cref="System.Net.Cookie"/> instances delimited by commas.</param>
		<exception cref="System.ArgumentNullException"><paramref name="uri"/> is <see langword="null"/></exception>
		<exception cref="System.ArgumentNullException"><paramref name="cookieHeader"/> is <see langword="null"/></exception>
		<remarks>
			<para><see cref="System.Net.CookieContainer.SetCookies"/> pulls all the HTTP cookies out of the HTTP cookie header,
   builds a <see cref="System.Net.Cookie"/> for each one, and then adds each <see cref="System.Net.Cookie"/> to the internal
<see cref="System.Net.CookieCollection"/> associated with the URI. The HTTP cookies in
   the <paramref name="cookieHeader"/> string must
   be delimited
   by commas.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.Add2">
		<summary>
			<para>Adds a <see cref="System.Net.Cookie"/> to
   the <see cref="System.Net.CookieContainer"/>for a particular URI.</para>
		</summary>
		<param name="cookie">The <see cref="System.Net.Cookie"/> to be added to the <see cref="System.Net.CookieContainer"/> .</param>
		<param name="uri">The URI of the <see cref="System.Net.Cookie"/> to be added to the <see cref="System.Net.CookieContainer"/> .</param>
		<exception cref="System.ArgumentNullException"><paramref name="uri"/> is <see langword="null"/></exception>
		<exception cref="System.ArgumentNullException"><paramref name="cookie"/> is <see langword="null"/></exception>
		<remarks>
			<para>If you add a <see cref="System.Net.Cookie"/> instance for just one specific host, don't set the
<see cref="System.Net.Cookie.Domain"/> 
property of the <see cref="System.Net.Cookie"/>
instance. This is set automatically, based on the URI. </para>
			<para>If your URI corresponds to your local domain and sends
   to all the hosts on the local domain, set the <see cref="System.Net.Cookie"/>
				<see cref="System.Net.Cookie.Domain"/> property equal to ".local".
   Otherwise, make sure it
   matches the host name used in the URI. </para>
			<para> If the <see cref="System.Net.Cookie"/>
				<see cref="System.Net.Cookie.Version"/> is 
Netscape, the <see cref="System.Net.Cookie.Path"/> property of the
<see cref="System.Net.Cookie"/> 
, if not set explicitly, is derived from the URI and is the
complete path from the URI, including the page name. </para>
			<para>If the <see cref="System.Net.CookieContainer.Count"/> property equals the
<see cref="System.Net.CookieContainer.Capacity"/> 
property, one or more <see cref="System.Net.Cookie"/> instances are
removed from the container before adding the <paramref name="cookie "/>parameter. Enough <see cref="System.Net.Cookie"/> instances are removed to
bring <see cref="System.Net.CookieContainer.Count"/> below <see cref="System.Net.CookieContainer.Capacity"/>
as follows: if there are expired instances in
scope they are cleaned up. If not, then the least recently used
<see cref="System.Net.CookieCollection"/> is found and removed from the container. </para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.GetCookieHeader">
		<summary>
			<para>Gets the HTTP cookie header containing the HTTP cookies 
      representing the <see cref="System.Net.Cookie"/> instances associated with a
      specific URI.</para>
		</summary>
		<param name="uri">The URI of the <see cref="System.Net.Cookie"/> instances desired.</param>
		<returns>
			<para>An HTTP cookie header, with strings representing <see cref="System.Net.Cookie"/> instances delimited by semicolons.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="uri"/> is <see langword="null"/></exception>
		<remarks>
			<para><see cref="System.Net.CookieContainer.GetCookieHeader"/> returns a string that holds the HTTP cookie header for the
<see cref="System.Net.Cookie"/> instances 
   specified by <paramref name="uri"/> .
   The HTTP header is built by adding a string representation of each <see cref="System.Net.Cookie"/> associated
   with <paramref name="uri"/> . Note the exact format
   of the string depends on the RFC the <see cref="System.Net.Cookie"/>conforms to. The strings
   for all the <see cref="System.Net.Cookie"/> instances associated with <paramref name="uri"/>
   are combined and delimited by semicolons.</para>
			<para> This string is not in the correct format for use as the
   second parameter of the <see cref="System.Net.CookieContainer.SetCookies"/>
   method. </para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.GetCookies">
		<summary>
			<para>Gets A <see cref="System.Net.CookieCollection"/> containing the <see cref="System.Net.Cookie"/> instances associated with a 
   specific URI.</para>
		</summary>
		<param name="uri">The URI of the <see cref="System.Net.Cookie"/> instances desired.</param>
		<returns>
			<para>A <see cref="System.Net.CookieCollection"/>
containing the <see cref="System.Net.Cookie"/> instances associated with a specific URI.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="uri"/> is <see langword="null"/></exception>
		<remarks>
			<para>A new instance of a <see cref="System.Net.CookieCollection"/> is created. Then the <see cref="System.Net.Cookie"/> instances in the internal collection associated with
   the specified URI are read out and added to the new <see cref="System.Net.CookieCollection"/>.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc><doc for="CookieContainer.PerDomainCapacity">
		<summary>
			<para>Gets and sets the number of <see cref="System.Net.Cookie"/> instances a <see cref="System.Net.CookieContainer"/> can hold per domain.</para>
		</summary>
		<value>
			<para>The number of <see cref="System.Net.Cookie"/> instances allowed per domain.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="PerDomainCapacity"/> is less than or equal to zero</para>
			<para>or </para>
			<para><paramref name="(PerDomainCapacity"/> is greater than the maximum allowable number of cookies instances, 300, and is not equal to <see cref="System.Int32.MaxValue"/> ) </para></exception>
		<remarks>
			<para>If the new <see cref="System.Net.CookieContainer.PerDomainCapacity"/> value is less than the current value, and if any of the domain
   collections contain more <see cref="System.Net.Cookie"/> instances than the new value, the
   collections are pruned to fit. This uses the same basic rules as described
   in the <see cref="System.Net.CookieContainer.Capacity"/>
   property.
   However, this does the clean-up only on the collection for this domain.</para>
		</remarks>
		<seealso cref="System.Net.Cookie"/>
		<seealso cref="System.Net.CookieCollection"/>
		<seealso cref="System.Net.CookieContainer"/>
		<seealso cref="System.Net.CookieException"/>
	</doc>
</docs>
