<docs>
	<doc for="WebRequest.WebRequest">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Net.WebRequest"/> class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Net.WebRequest"/>
class.</para>
		</summary>
		<remarks>
			<para> Use the <see cref="System.Net.WebRequest.Create"/> method to initialize new <see cref="System.Net.WebRequest"/> instances. Do not use 
   the constructor.</para>
		</remarks>
		<example>
			<para> The following example shows how to create a <see cref="System.Net.WebRequest"/>
instance by calling the <see cref="System.Net.WebRequest.Create"/> method on the <see cref="System.Net.WebRequest"/>class.</para>
			<codelink SampleID="Classic WebRequest.WebRequest Example" SnippetID="1"/>
		</example>
	</doc><doc for="WebRequest.ISerializable.GetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="WebRequest.ConnectionGroupName">
		<summary>
			<para>When overridden in a descendant class, gets or sets the name of the connection group for the request.</para>
		</summary>
		<value>
			<para> The name of the connection group for the request.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.ConnectionGroupName"/> property associates
   specific requests within an application to one or more connection pools.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>
   .
</note>
			<note type="inheritinfo">
   The <see cref="System.Net.WebRequest.ConnectionGroupName"/> property
   typically associates a group of requests that share a set of credentials with a
   connection to an Internet resource to avoid potential security failures.
</note>
		</remarks>
		<seealso cref="System.Net.HttpWebRequest.ConnectionGroupName" qualify="true"/>
		<seealso topic="cpconconnectiongrouping"/>
	</doc>
	<doc for="WebRequest.Timeout">
		<summary>
			<para> Gets or sets the length of time before the request times out.</para>
		</summary>
		<value>
			<para> The length of time, in milliseconds, until the request times
      out, or the value <see cref="System.Threading.Timeout.Infinite" qualify="true"/> to indicate that the request does not time out.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Timeout"/>
property indicates the length of time, in milliseconds, until the request times
out and throws a <see cref="System.Net.WebException"/>. The <see cref="System.Net.WebRequest.Timeout"/> property affects only synchronous
requests made with the <see cref="System.Net.WebRequest.GetResponse"/> method. To time out asynchronous
requests, use the <see cref="System.Net.WebRequest.Abort"/>
method.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
			<note type="inheritinfo">
Descendant
classes signal a timeout by throwing a <see cref="System.Net.WebException"/> with the <see cref="System.Net.WebException.Status"/>
field set to <see cref="System.Net.WebExceptionStatus.Timeout" qualify="true"/>. When <see cref="System.Net.WebRequest.Timeout"/> is set to <see cref="System.Threading.Timeout.Infinite" qualify="true"/>
the descendant class does not time out.</note>
		</remarks>
		<seealso cref="System.Net.HttpWebRequest.Timeout" qualify="true"/>
	</doc>
	<doc for="WebRequest.Abort">
		<summary>
			<para>Cancels an asynchronous request to an Internet resource.</para>
		</summary>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Abort"/> method cancels asynchronous requests to Internet
   resources started with the <see cref="System.Net.WebRequest.BeginGetResponse"/> method. </para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
	</doc>
	<doc for="WebRequest.GetResponse">
		<summary>
			<para>When overridden in a descendant class,
      returns a response
      to an Internet request.</para>
		</summary>
		<returns>
			<para> A <see cref="System.Net.WebResponse"/> containing the response to the Internet request.</para>
		</returns>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.GetResponse"/> method sends a request to an
   Internet resource and returns a <see cref="System.Net.WebResponse"/> instance. If
   the request has already been initiated by
   a call to <see cref="System.Net.WebRequest.GetRequestStream"/>, the <see cref="System.Net.WebRequest.GetResponse"/> method completes the
   request and returns any response. </para>
			<para>The <see cref="System.Net.WebRequest.GetResponse"/> method provides synchronous access to the <see cref="System.Net.WebResponse"/>. For
asynchronous access, use the <see cref="System.Net.WebRequest.BeginGetResponse"/> and <see cref="System.Net.WebRequest.EndGetResponse"/> methods.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Net.WebRequest.Timeout"/> 
property to 10000 milliseconds. If the timeout period expires before the
resource can be returned, a <see cref="System.Net.WebException"/> is thrown.</para>
			<codelink SampleID="WebRequest_Timeout" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.WebRequest.BeginGetResponse"/>
		<seealso cref="System.Net.WebResponse"/>
	</doc>
	<doc for="WebRequest.RequestUri">
		<summary>
			<para>When overridden in a descendant class, gets the URI
      of the Internet resource associated with
      the request.</para>
		</summary>
		<value>
			<para> A <see cref="System.Uri"/>
representing the resource associated with the request</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>When overridden in a descendant class, the <see cref="System.Net.WebRequest.RequestUri"/> property contains the <see cref="System.Uri"/> instance that <see cref="System.Net.WebRequest.Create"/>method uses to create the request.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
			<note type="inheritinfo">
				<see cref="System.Net.WebRequest.RequestUri"/>
must contain the original <see cref="System.Uri"/> instance passed to the <see cref="System.Net.WebRequest.Create"/>method. If the protocol is able to redirect the
request to a different URI to service the request, the descendant must provide a
property to contain the URI that actually services the request
</note>
		</remarks>
		<example>
			<para>The following example checks the <see cref="System.Net.WebRequest.RequestUri"/> property to determine the site originally 
   requested.</para>
			<codelink SampleID="WebRequest_RequestUri1" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.HttpWebRequest.RequestUri" qualify="true"/>
		<seealso cref="System.Net.HttpWebRequest.Address" qualify="true"/>
	</doc>
	<doc for="WebRequest.Credentials">
		<summary>
			<para>When overridden in a descendant class, gets or sets the network credentials used for
      authenticating the request with the Internet resource.</para>
		</summary>
		<value>
			<para> An <see cref="System.Net.ICredentials"/> containing the authentication credentials
   associated with the request. The default is <see langword="null"/> .</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Credentials"/> property contains the authentication
   credentials required to access the Internet resource.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example collects username and password 
      information from the user and creates a NetworkCredential with this information.
      The Credentials property is set with this NetworkCredential. When the request is made, credentials stored in this
      property are used to validate the requesters access. </para>
			<codelink SampleID="WebRequest_PreAuthenticate" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.NetworkCredential"/>
		<seealso cref="System.Net.CredentialCache"/>
		<seealso cref="System.Net.HttpWebRequest.Credentials" qualify="true"/>
	</doc>
	<doc for="WebRequest.Proxy">
		<summary>
			<para>When overridden in a descendant class, gets or sets the network proxy
      to use to access this Internet resource.</para>
		</summary>
		<value>
			<para> The <see cref="System.Net.IWebProxy"/> to use to access the Internet resource.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Proxy"/>
property identifies the network proxy that the
request uses to access the Internet resource. The request is made through the
proxy server rather than directly to the Internet resource.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example displays the current network proxy address and allows 
      the user to assign a new network proxy address and port number.</para>
			<codelink SampleID="WebRequest_Proxy" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.IWebProxy"/>
		<seealso cref="System.Net.WebProxy"/>
		<seealso cref="System.Net.HttpWebRequest.Proxy" qualify="true"/>
	</doc>
	<doc for="WebRequest.PreAuthenticate">
		<summary>
			<para>When overridden in a descendant class, indicates whether
      to preauthenticate the request.</para>
		</summary>
		<value>
			<para><see langword="true"/> to preauthenticate;
   otherwise, <see langword="false"/>.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.PreAuthenticate"/> property indicates whether to
   send authentication information with the initial request. When
<see cref="System.Net.WebRequest.PreAuthenticate"/> is <see langword="false"/>, the <see cref="System.Net.WebRequest"/> 
waits for an authentication challenge before sending
authentication information.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Net.WebRequest.PreAuthenticate"/> property to <see langword="true"/> so that the 
<see cref="System.Net.NetworkCredential"/> stored in the <see cref="System.Net.WebRequest.Credentials"/> property will be sent to along with the resource 
   request. </para>
			<codelink SampleID="WebRequest_PreAuthenticate" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.HttpWebRequest.PreAuthenticate" qualify="true"/>
	</doc>
	<doc for="WebRequest.Headers">
		<summary>
			<para>When overridden in a descendant class, gets
      or
      sets the collection of header name/value pairs associated with the
      request.</para>
		</summary>
		<value>
			<para> A <see cref="System.Net.WebHeaderCollection"/> containing the header name/value pairs
   associated with this request.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Headers"/> property contains a <see cref="System.Net.WebHeaderCollection"/> instance containing the
   header information to send to the Internet
   resource. </para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example displays the header name/value pairs associated with 
      this request. </para>
			<codelink SampleID="WebRequest_Headers" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.WebHeaderCollection"/>
		<seealso cref="System.Net.HttpWebRequest.Headers" qualify="true"/>
	</doc>
	<doc for="WebRequest.BeginGetResponse">
		<summary>
			<para>When overridden in a descendant class, begins an
      asynchronous request for an Internet resource.</para>
		</summary>
		<param name="callback">The <see cref="System.AsyncCallback"/> delegate.</param>
		<param name="state">An object containing state information for this asynchronous request.</param>
		<returns>
			<para> An <see cref="System.IAsyncResult"/> that references the asynchronous request. </para>
		</returns>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.BeginGetResponse"/> method starts an asynchronous request for a
   response. The callback method that implements the <see cref="System.AsyncCallback"/>
   delegate uses the <see cref="System.Net.WebRequest.EndGetResponse"/> method to return the <see cref="System.Net.WebResponse"/> from the Internet resource.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.WebRequest.BeginGetResponse"/> to asynchronously request the 
   target resource. When the resource has been obtained, the specified
   callback method will be executed.</para>
			<codelink SampleID="WebRequest_BeginGetResponse" SnippetID="2"/>
		</example>
		<seealso cref="System.Net.WebRequest.EndGetResponse"/>
		<seealso cref="System.Net.WebRequest.GetResponse"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="WebRequest.EndGetResponse">
		<summary>
			<para>When overridden in a descendant class, returns a <see cref="System.Net.WebResponse"/> .</para>
		</summary>
		<param name="asyncResult">An <see cref="System.IAsyncResult"/> that references a pending request for a response.</param>
		<returns>
			<para> A <see cref="System.Net.WebResponse"/> that contains a response to the Internet request.</para>
		</returns>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.EndGetResponse"/> method completes an asynchronous request for an Internet resource
   that was started with the <see cref="System.Net.WebRequest.BeginGetResponse"/> method. </para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example calls the <see cref="System.Net.WebRequest.EndGetResponse"/> to retrieve the target resource.</para>
			<codelink SampleID="WebRequest_BeginGetResponse" SnippetID="1"/>
		</example>
		<seealso cref="System.Net.WebRequest.BeginGetResponse"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="WebRequest.ContentType">
		<summary>
			<para>When
      overridden in a descendant class, gets
      or
      sets
      the content type of the request data being sent.</para>
		</summary>
		<value>
			<para> The content type of the request data.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.ContentType"/> property contains the media type of the request. This
   is typically the MIME encoding of the content.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Net.WebRequest.ContentType"/> property to the appropriate 
   media type. </para>
			<codelink SampleID="WebRequest_ContentType" SnippetID="4"/>
		</example>
		<seealso cref="System.Net.HttpWebRequest.ContentType" qualify="true"/>
	</doc>
	<doc for="WebRequest.ContentLength">
		<summary>
			<para>When overridden
      in a descendant class, gets or
      sets the
      content
      length of the request data being sent.</para>
		</summary>
		<value>
			<para>The number of bytes of request data being sent.</para>
		</value>
		<exception cref="System.NotSupportedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.ContentLength"/> property contains the number of bytes of data sent to the
   Internet resource by the <see cref="System.Net.WebRequest"/> instance. </para>
			<note type="note">
   The <see cref="System.Net.WebRequest"/> class is an <see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more information about default values and exceptions, see the documentation for the descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Net.WebRequest.ContentLength"/> property to the amount of bytes in the outgoing byte buffer. </para>
			<codelink SampleID="WebRequest_ContentType" SnippetID="4"/>
		</example>
		<seealso cref="System.Net.HttpWebRequest.ContentLength" qualify="true"/>
	</doc>
	<doc for="WebRequest.GetRequestStream">
		<summary>
			<para>When overridden in a descendant class,
      returns a <see cref="System.IO.Stream"/> for writing data to the Internet
      resource.</para>
		</summary>
		<returns>
			<para> A <see cref="System.IO.Stream"/> for writing data to the
   Internet resource.</para>
		</returns>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.GetRequestStream"/> method initiates a request to send data
   to the Internet resource and returns a <see cref="System.IO.Stream"/> instance for sending data to the
   Internet resource. </para>
			<para>The <see cref="System.Net.WebRequest.GetRequestStream"/> method provides synchronous access to the <see cref="System.IO.Stream"/>. For
asynchronous access, use the <see cref="System.Net.WebRequest.BeginGetRequestStream"/> and <see cref="System.Net.WebRequest.EndGetRequestStream"/> methods.</para>
			<note type="note">
   The <see cref="System.Net.WebRequest"/> class is an
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.WebRequest.GetRequestStream"/> method to obtain a stream and then writes data that 
   stream.</para>
			<codelink SampleID="WebRequest_ContentType" SnippetID="4"/>
		</example>
		<seealso topic="cpconusingstreamsonnetwork"/>
		<seealso cref="System.Net.WebRequest.BeginGetRequestStream"/>
	</doc>
	<doc for="WebRequest.BeginGetRequestStream">
		<summary>
			<para>When overridden in a descendant class, provides an asynchronous version of the <see cref="System.Net.WebRequest.GetRequestStream"/>
method.</para>
		</summary>
		<param name="callback">The <see cref="System.AsyncCallback"/> delegate.</param>
		<param name="state">An object containing state information for this asynchronous request.</param>
		<returns>
			<para> An <see cref="System.IAsyncResult"/> that references the asynchronous request.</para>
		</returns>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.BeginGetRequestStream"/> method starts
   an asynchronous
   request for a stream used to send data to an Internet resource. The callback
   method that implements the <see cref="System.AsyncCallback"/>
   delegate uses
   the <see cref="System.Net.WebRequest.EndGetRequestStream"/>
   method to return the request stream. </para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Net.WebRequest.BeginGetRequestStream"/> to asynchronously obtain the request stream.</para>
			<codelink SampleID="WebRequest_BeginGetRequest" SnippetID="3"/>
		</example>
		<seealso cref="System.Net.WebRequest.EndGetRequestStream"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="WebRequest.EndGetRequestStream">
		<summary>
			<para>When overridden in a descendant class, returns a <see cref="System.IO.Stream"/>
for writing data to the Internet resource.</para>
		</summary>
		<param name="asyncResult">An <see cref="System.IAsyncResult"/> that references a pending request for a stream.</param>
		<returns>
			<para> A <see cref="System.IO.Stream"/> to write data
   to.</para>
		</returns>
		<exception cref="System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.EndGetRequestStream"/>
method completes an asynchronous stream request that was started by the <see cref="System.Net.WebRequest.BeginGetRequestStream"/> method. </para>
			<note type="note">
   To avoid timing issues with
   garbage collection, be sure to close the response stream by calling the
<see cref="System.IO.Stream.Close"/>
method on the stream returned by <see cref="System.Net.WebResponse.GetResponseStream"/> after calling <see cref="System.Net.WebRequest.EndGetResponse"/>.
</note>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
		</remarks>
		<example>
			<para>The following example obtains and uses the request stream 
      by calling the <see cref="System.Net.WebRequest.EndGetRequestStream"/>. The <see cref="System.Net.WebRequest.EndGetRequestStream"/> method completes the asynchronous call to
   <see cref="System.Net.WebRequest.BeginGetRequestStream"/> . </para>
			<codelink SampleID="WebRequest_BeginGetRequest" SnippetID="3"/>
		</example>
		<seealso cref="System.Net.WebRequest.BeginGetRequestStream"/>
		<seealso topic="cpconmakingasynchronousrequests"/>
	</doc>
	<doc for="WebRequest.Method">
		<summary>
			<para> When overridden in a
      descendant
      class,
      gets or sets the protocol method to use in this
      request.</para>
		</summary>
		<value>
			<para> The protocol method to use in this request.</para>
		</value>
		<exception cref="System.NotSupportedException">If the property is not overridden in a descendant class, any attempt is made to get or set the property.</exception>
		<remarks>
			<para>When overridden in a descendant class, the <see cref="System.Net.WebRequest.Method"/> property
   contains the request method to use in this request.</para>
			<note type="note">
   The
<see cref="System.Net.WebRequest"/> class is an 
<see langword="abstract"/> class. The actual behavior of <see cref="System.Net.WebRequest"/> instances at run time is determined 
   by the descendant class returned by the <see cref="System.Net.WebRequest.Create" qualify="true"/> method. For more
   information about default values and exceptions, see the documentation for the
   descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.
</note>
			<note type="inheritinfo">
   The <see cref="System.Net.WebRequest.Method"/>
   property
   can contain any valid request method for the protocol implemented. The default
   value must provide a default request/response transaction that does not
   require protocol-specific properties to be set.
</note>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Net.WebRequest.Method"/> property to POST to indicate that 
   the request will post data to the target host.</para>
			<codelink SampleID="WebRequest_BeginGetRequest" SnippetID="3"/>
		</example>
		<seealso cref="System.Net.HttpWebRequest.Method" qualify="true"/>
	</doc>
	<doc for="WebRequest.RegisterPrefix">
		<summary>
			<para>Registers a <see cref="System.Net.WebRequest"/>
descendant for the specified URI.</para>
		</summary>
		<param name="prefix">The complete URI or URI prefix that the <see cref="System.Net.WebRequest"/> descendant services.</param>
		<param name="creator">The create method that the <see cref="System.Net.WebRequest"/> calls to create the <see cref="System.Net.WebRequest"/> descendant.</param>
		<returns>
			<para><see langword="true "/>if registration is successful; otherwise,
<see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>
				<paramref name="prefix"/> is <see langword="null"/></para>
			<para>-or-</para>
			<para>
				<paramref name="creator"/> is <see langword="null"/>.</para></exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.RegisterPrefix"/> method registers <see cref="System.Net.WebRequest"/>
descendants to service requests. <see cref="System.Net.WebRequest"/> descendants are typically registered to handle a
specific protocol, such HTTP or FTP, but can be registered to handle a request
to a specific
server or path on a server.</para>
			<para>Duplicate prefixes are not allowed. <see cref="System.Net.WebRequest.RegisterPrefix"/> returns <see langword="false "/>if an attempt is made to register a
duplicate prefix.</para>
			<note type="note">
   The <see cref="System.Net.HttpWebRequest"/>
   class is registered to service requests for HTTP and HTTPS schemes by
   default. Attempts to register a different <see cref="System.Net.WebRequest"/> descendant for these schemes will
   fail.
   
</note>
		</remarks>
	</doc>
	<doc for="WebRequest.WebRequest1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Net.WebRequest"/> class
   from the specified instances of the <see cref="System.Runtime.Serialization.SerializationInfo"/> and <see cref="System.Runtime.Serialization.StreamingContext"/>
   classes.</para>
		</summary>
		<param name="serializationInfo">A <see cref="System.Runtime.Serialization.SerializationInfo"/> that contains the information required to serialize the new <see cref="System.Net.WebRequest"/> instance.</param>
		<param name=" streamingContext">A <see cref="System.Runtime.Serialization.StreamingContext"/> that indicates the source of the serialized stream associated with the new <see cref="System.Net.WebRequest"/> instance.</param>
		<exception cref="System.NotSupportedException">Any attempt is made to access the constructor, when the constructor is not overridden in a descendant class.</exception>
		<remarks>
			<para>When implemented by a descendant class, this constructor
      implements the <see cref="System.Runtime.Serialization.ISerializable"/>
      interface for the <see cref="System.Net.WebRequest"/> descendant.</para>
			<para>Notice that an application must run in full trust mode when using 
      serialization.</para>
		</remarks>
		<seealso topic="cpconserialization"/>
	</doc>
	<doc for="WebRequest.CreateDefault">
		<summary>
			<para> Initializes a new <see cref="System.Net.WebRequest"/> instance for the specified URI scheme.</para>
		</summary>
		<param name="requestUri">A <see cref="Uri"/> containing the URI of the requested resource.</param>
		<returns>
			<para> A <see cref="System.Net.WebRequest"/> descendant for the specified URI scheme.</para>
		</returns>
		<exception cref="System.NotSupportedException">The request scheme specified in <paramref name="requestUri"/> is not registered.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="requestUri"/> is <see langword="null"/>.</exception>
		<exception cref="System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.CreateDefault"/> method returns a <see cref="System.Net.WebRequest"/>
descendant instance based on only the scheme portion of a URI.</para>
			<para> For example, when a URI beginning with <c>http://</c> is 
passed in <paramref name="requestUri"/>
, an <see cref="System.Net.HttpWebRequest"/> is returned by <see cref="System.Net.WebRequest.CreateDefault"/>. If a URI beginning with <c>file://</c> is passed instead, the
<see cref="System.Net.WebRequest.CreateDefault"/> method will return a <see cref="System.Net.FileWebRequest"/> 
.</para>
		</remarks>
	</doc>
	<doc for="WebRequest.Create">
		<overload>
			<para> Initializes a new <see cref="System.Net.WebRequest"/>
.</para>
		</overload>
		<summary>
			<para>Initializes a new <see cref="System.Net.WebRequest"/> instance for
   the specified URI scheme.</para>
		</summary>
		<param name="requestUriString">The URI that identifies the Internet resource.</param>
		<returns>
			<para> A <see cref="System.Net.WebRequest"/> descendant for the specific URI scheme.</para>
		</returns>
		<exception cref="System.NotSupportedException">The request scheme specified in <paramref name="requestUriString "/>has not been registered.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="requestUriString "/>is <see langword="null"/> .</exception>
		<exception cref="System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</exception>
		<exception cref="System.UriFormatException">The URI specified in <paramref name="requestUriString"/> is not a valid URI.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Create"/> method returns a descendant of the
<see cref="System.Net.WebRequest"/> 
class determined at run time as the closest registered match for
<paramref name="requestUri"/> . </para>
			<para>For example, when a URI beginning with <c>http://</c> is passed in <paramref name="requestUri"/>, an <see cref="System.Net.HttpWebRequest"/> is 
returned by <see cref="System.Net.WebRequest.Create"/>. If a URI beginning with <c>file://</c> is passed instead, the
<see cref="System.Net.WebRequest.Create"/> method will return a <see cref="System.Net.FileWebRequest"/> 
instance. </para>
			<para>The .NET Framework includes support for the <c>http://</c>, <c>https://</c>, and <c>file://</c>
URI schemes. Custom <see cref="System.Net.WebRequest"/> descendants to handle other requests are registered
with the <see cref="System.Net.WebRequest.RegisterPrefix"/>
method.</para>
			<para>The <see cref="System.Net.WebRequest.Create"/> method uses the
<paramref name="requestUriString "/>parameter to create a <see cref="System.Uri"/> instance that
it passes to the new <see cref="System.Net.WebRequest"/>.</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.WebRequest.Create"/> to
   instantiate an <see cref="System.Net.HttpWebRequest"/> instance. A string representing the target url
   is used as the constructor parameter.</para>
			<codelink SampleID="WebResponse_ResponseUri" SnippetID="1"/>
		</example>
		<seealso topic="cpconprogrammingpluggableprotocols"/>
	</doc>
	<doc for="WebRequest.Create1">
		<summary>
			<para>Initializes a new <see cref="System.Net.WebRequest"/> instance for the specified URI scheme.</para>
		</summary>
		<param name="requestUri">A <see cref="Uri"/> containing the URI of the requested resource.</param>
		<returns>
			<para> A <see cref="System.Net.WebRequest"/> descendant for the specified URI scheme.</para>
		</returns>
		<exception cref="System.NotSupportedException">The request scheme specified in <paramref name="requestUri "/> is not registered.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="requestUri "/>is <see langword="null"/> .</exception>
		<exception cref="System.Security.SecurityException">The caller does not have permission to connect to the requested URI or a URI that the request is redirected to.</exception>
		<remarks>
			<para>The <see cref="System.Net.WebRequest.Create"/>
method returns a descendant of the <see cref="System.Net.WebRequest"/> class determined at run time as the closest registered
match for <paramref name="requestUri"/> . </para>
			<para>For example, if you create a <see cref="System.Net.WebRequest"/> descendant, Handler1, to handle 
requests to <c>http://www.contoso.com/text/</c> and another named Handler2 to handle
requests to <c>http://www.contoso.com/code/</c>, you can use <see cref="System.Net.WebRequest.Create"/>
method to return the WebRequest descendant associated with either specified URI. </para>
			<para>To return a descendant of the <see cref="System.Net.WebRequest"/> class based on only the scheme 
portion of a URI, use the <see cref="System.Net.WebRequest.CreateDefault"/> method.</para>
			<para>The .NET Framework includes support for the <c>http://</c>, <c>https://</c>, and
<c>file://</c> 
URI schemes. Custom <see cref="System.Net.WebRequest"/> descendants to handle other requests are registered
with the <see cref="System.Net.WebRequest.RegisterPrefix"/> method.</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Net.WebRequest.Create"/> to instantiate an <see cref="System.Net.HttpWebRequest"/>
instance. A Uri representing the target url is used as the constructor
parameter.</para>
			<codelink SampleID="WebRequest_Create" SnippetID="1"/>
		</example>
	</doc>
	<doc for="WebRequest">
		<summary>
			<para>Makes a request to a Uniform Resource Identifier (URI). This
      is an <see langword="abstract "/>
      class.</para>
		</summary>
		<threadsafe>
			<para>An application must run in full trust mode when using serialization.</para>
		</threadsafe>
		<remarks>
			<para><see cref="System.Net.WebRequest"/> is the <see langword="abstract "/> base
   class for the .NET Framework's request/response model for accessing data from
   the Internet. An application that uses the request/response model can request
   data from the Internet in a protocol-agnostic manner, in which the application works with
   instances of the <see cref="System.Net.WebRequest"/>
   
   class while protocol-specific descendant
   classes carry out the details of
   the request.</para>
			<para> Requests are sent from an
   application to a particular URI, such as a Web page on a server. The URI
   determines the proper descendant class to create from a list of <see cref="System.Net.WebRequest"/>
   descendants registered for the application. <see cref="System.Net.WebRequest"/> descendants are typically
   registered to handle a specific protocol, such as HTTP or FTP, but can be
   registered to handle a request
   to a specific server or path on
   a server.</para>
			<para>The <see cref="System.Net.WebRequest"/> class throws a <see cref="System.Net.WebException"/> when errors occur while accessing
an Internet resource. The <see cref="System.Net.WebException.Status" qualify="true"/> property is one of the <see cref="System.Net.WebExceptionStatus"/>
values that indicates the source of the error. When <see cref="System.Net.WebException.Status" qualify="true"/> is <see cref="System.Net.WebExceptionStatus.ProtocolError" qualify="true"/>, the <see cref="System.Net.WebException.Response"/> property contains the <see cref="System.Net.WebResponse"/> received
from the Internet resource. </para>
			<para>Because the <see cref="System.Net.WebRequest"/> class is an <see langword="abstract"/> class, the actual behavior
of <see cref="System.Net.WebRequest"/> instances at run time is determined by the
descendant class returned by <see cref="System.Net.WebRequest.Create" qualify="true"/>
method. For more information about default values and exceptions, see the documentation
for the descendant classes, such as <see cref="System.Net.HttpWebRequest"/> and <see cref="System.Net.FileWebRequest"/>.</para>
			<note type="note">
   
   Use the <see cref="System.Net.WebRequest.Create"/> method to initialize new <see cref="System.Net.WebRequest"/>
   instances. Do not use the <see cref="System.Net.WebRequest"/>
   
   constructor.
</note>
			<note type="inheritinfo">
   When you inherit
   from <see cref="System.Net.WebRequest"/>, you must override the following members: <see cref="System.Net.WebRequest.Method"/>,
<see cref="System.Net.WebRequest.RequestUri"/>, <see cref="System.Net.WebRequest.Headers"/>, <see cref="System.Net.WebRequest.ContentLength"/>, <see cref="System.Net.WebRequest.ContentType"/>, <see cref="System.Net.WebRequest.Credentials"/>, <see cref="System.Net.WebRequest.PreAuthenticate"/>, <see cref="System.Net.WebRequest.GetRequestStream"/>, <see cref="System.Net.WebRequest.BeginGetRequestStream"/>, <see cref="System.Net.WebRequest.EndGetRequestStream"/>, <see cref="System.Net.WebRequest.GetResponse"/>, <see cref="System.Net.WebRequest.BeginGetResponse"/>, 
   and <see cref="System.Net.WebRequest.EndGetResponse"/>. In addition, you must provide an implementation
   of the <see cref="System.Net.IWebRequestCreate"/> interface, which defines
   the <see cref="System.Net.IWebRequestCreate.Create"/> method used
   when you call <see cref="System.Net.WebRequest.Create"/> . You must
   register the class that implements the <see cref="System.Net.IWebRequestCreate"/>
   interface, using the <see cref="System.Net.WebRequest.RegisterPrefix"/> method or the
   configuration
   file.
   
</note>
		</remarks>
		<permission cref="System.Net.WebPermission">to access the requested URI or any URI that the request is redirected to. Associated enumeration: <see cref="System.Net.NetworkAccess.Connect"/>.</permission>
		<example>
			<para>The following example shows how to create a <see cref="System.Net.WebRequest"/> instance and return the
   response.</para>
			<codelink SampleID="Classic WebRequest Example" SnippetID="1"/>
		</example>
		<seealso topic="cpconrequestingdata"/>
		<seealso topic="cpconprogrammingpluggableprotocols"/>
		<seealso cref="System.Net.HttpWebRequest"/>
		<seealso topic="cpconprogrammingpluggableprotocols"/>
	</doc>
</docs>
