<docs>
	<doc for="OracleBinary.ToString1">
		<summary>
			<para>
       Converts the <see cref="System.Data.OracleClient.OracleBinary"/> parameter to a string.
    </para>
		</summary>
		<param name="value">
    A <see cref="System.Data.OracleClient.OracleBinary"/>.
 </param>
		<returns>
			<para>
       A string containing the <see cref="System.Data.OracleClient.OracleBinary.Value"/> of the
    <see cref="System.Data.OracleClient.OracleBinary"/> . If the <see cref="System.Data.OracleClient.OracleBinary.Value"/> is null the 
       string will contain
       "null".
    </para>
		</returns>
	</doc>
	<doc for="OracleBinary.LT">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> objects to determine if the first is less 
   than the second.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object.</param>
		<param name="y">A <see langword="OracleBinary"/> object.</param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first
instance is less than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/> . If either instance
of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.OracleClient.OracleBinary.NE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.EQ"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GE"/>
	</doc><doc for="OracleBinary.GT">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> objects to determine if the first is 
   greater than the second.
   </para>
		</summary>
		<param name="x">A <see cref="System.Data.OracleClient.OracleBinary"/>. </param>
		<param name="y">A <see cref="System.Data.OracleClient.OracleBinary"/>. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is greater than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If either instance of <see cref="System.Data.OracleClient.OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the
<see cref="System.Data.OracleClient.OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.OracleClient.OracleBinary.NE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.EQ"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GE"/>
	</doc><doc for="OracleBinary.LE">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> objects to determine if the first is less than or equal to the second.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/>. </param>
		<param name="y">A <see langword="OracleBinary"/>. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is less than
or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If
either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.OracleClient.OracleBinary.NE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.EQ"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GE"/>
	</doc><doc for="OracleBinary.EQ">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> objects to determine if they are
   equal.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/>
that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two instances are equal
or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are not
equal. If either instance of <see langword="OracleBinary"/>
is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see langword="Null"/> .</para>
		</returns>
		<seealso cref="System.Data.OracleClient.OracleBinary.NE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GE"/>
	</doc><doc for="OracleBinary.NE">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> objects to determine if they 
   are equal.</para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .
   </para>
		</returns>
		<seealso cref="System.Data.OracleClient.OracleBinary.EQ"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GE"/>
	</doc><doc for="OracleBinary.GE">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> objects to determine if the first is 
   greater than or equal to the second.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is greater than
or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If
either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.OracleClient.OracleBinary.NE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.LE"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.GT"/>
		<seealso cref="System.Data.OracleClient.OracleBinary.EQ"/>
	</doc><doc for="OracleBinary.operatorbyte">
		<summary>
			<para> Gets the contents of the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property of the <see cref="System.Data.OracleClient.OracleBinary"/> 
parameter as an array of bytes.
</para>
		</summary>
		<param name="x">A <see cref="System.Data.OracleClient.OracleBinary"/>. </param>
		<returns>
			<para> An array of bytes.
      </para>
		</returns>
		<remarks>
			<para lang="VB">In Visual
      Basic, you can use the conversions defined by the class, but you cannot override
      them or create your own. If Option Strict is set, you must use the &lt;CType
      operator&gt; to convert the <see cref="System.Data.OracleClient.OracleBinary"/>
      to a binary object.
      </para>
		</remarks>
	</doc><doc for="OracleBinary.OracleBinary">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleBinary"/> structure.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of 
      the <see langword="OracleBinary"/> structure, setting the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property to the contents of the supplied byte array.
      </para>
		</summary>
		<param name="value">The byte array to be stored or retrieved. </param>
	</doc><doc for="OracleBinary.GetHashCode">
		<summary>
			<para>Returns the hash code for this <see cref="System.Data.OracleClient.OracleBinary"/> structure.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc><doc for="OracleBinary.ToString">
		<overload>
			<para> Converts a <see cref="System.Data.OracleClient.OracleBinary"/> to a string.
   </para>
		</overload>
		<summary>
			<para> Converts this <see cref="System.Data.OracleClient.OracleBinary"/> object to a string.
   </para>
		</summary>
		<returns>
			<para> A string containing the <see cref="System.Data.OracleClient.OracleBinary.Value"/> of the 
<see langword="OracleBinary"/> . If the <see langword="Value"/> is null the
   string will contain
   "null".
   </para>
		</returns>
	</doc><doc for="OracleBinary.operator==">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they are
   equal.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/>
that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two instances are equal
or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are not
equal. If either instance of <see langword="OracleBinary"/>
is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.operator&gt;">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if the first
   is greater than the second.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is greater than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If either instance
of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.operator&gt;=">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structues to determine if the first
   is greater than or equal to the second.
   </para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is greater than
or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If
either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.operatorOracleBinary1">
		<summary>
			<para> Converts a <see cref="System.Data.OracleClient.OracleGuid"/> structure to a <see cref="System.Data.OracleClient.OracleBinary"/> structure.</para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.ToOracleGuid"/>
		<param name="x">The <see langword="OracleGuid"/> structure to be converted. </param>
		<returns>
			<para> A <see langword="OracleBinary"/> structure.
   </para>
		</returns>
		<remarks>
			<para lang="VB">In Visual Basic, you can use the
      conversions defined by the class, but you cannot override them or create your
      own. If Option Strict is set, you must use the &lt;CType operator&gt; to convert
      the <see cref="System.Data.OracleClient.OracleGuid"/> to a <see cref="System.Data.OracleClient.OracleBinary"/>.
      </para>
		</remarks>
	</doc>
	<doc for="OracleBinary.ToOracleGuid">
		<summary>
			<para>Converts this instance of <see cref="System.Data.OracleClient.OracleBinary"/>
to <see cref="System.Data.OracleClient.OracleGuid"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="OracleGuid"/> structure.</para>
		</returns>
	</doc><doc for="OracleBinary.operator!=">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they
   are equal.</para>
		</summary>
		<param name="x">A <see langword="OracleBinary"/> object. </param>
		<param name="y">A <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
   the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .
   </para>
		</returns>
	</doc>
	<doc for="OracleBinary.CompareTo">
		<summary>
			<para>Compares this <see cref="System.Data.OracleClient.OracleBinary"/> object to the supplied object and
   returns an indication of their relative values.</para>
		</summary>
		<param name="obj">The object to be compared to this <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>A signed number indicating the relative values of
      this <see langword="OracleBinary"/>
      structure and the object.</para>
			<list type="table">
				<listheader>
					<term>Return Value</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>The value of this <see langword="OracleBinary"/>object is less than the
         object.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This <see langword="OracleBinary"/> object is the same as object.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description>
						<para>This <see langword="OracleBinary"/> object is greater than object.</para>
						<para>-or-</para>
						<para>The object is a null
      reference.</para></description>
				</item>
			</list>
		</returns>
	</doc>
	<doc for="OracleBinary.IOracleType.GetCLSObject"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OracleBinary.Equals1">
		<overload>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they are equal. </para>
		</overload>
		<summary>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine
   if they are equal.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two
   instances are equal or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are not
   equal. If either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.GreaterThan">
		<summary>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine
   if the first is greater than the second.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the first instance is
   greater than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If either
   instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.LessThan">
		<summary>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine
   if the first is less than the second.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the first
   instance is less than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/> . If either instance of
<see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the 
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.LessThanOrEqual">
		<summary>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/>
structures to determine if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the first
   instance is less than or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If either instance of
<see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the 
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.Null">
		<summary>
			<para> Represents a null value that can be assigned to
      the <see cref="System.Data.OracleClient.OracleBinary.Value"/>
      property of an <see cref="System.Data.OracleClient.OracleBinary"/> structure.
      </para>
		</summary>
		<remarks>
			<para><see langword="Null "/>functions as a constant for
   the <see langword="OracleBinary"/> structure.
   </para>
		</remarks>
		<seealso cref="System.Data.OracleClient.OracleBinary.IsNull"/>
	</doc>
	<doc for="OracleBinary.operatorOracleBinary">
		<summary>
			<para> Converts an array of bytes to an <see cref="System.Data.OracleClient.OracleBinary"/> structure.
   </para>
		</summary>
		<param name="b">The array of bytes to be converted. </param>
		<returns>
			<para> An <see langword="OracleBinary"/>
structure that represents the converted array of bytes.</para>
		</returns>
	</doc>
	<doc for="OracleBinary.Length">
		<summary>
			<para>Gets the length in bytes of the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property. This property is
   read-only.</para>
		</summary>
		<value>
			<para>The length of the binary data in
      the <see langword="Value"/> property.</para>
		</value>
		<remarks>
			<para>To avoid raising an OracleNullValueException, always check the <see cref="System.Data.OracleClient.OracleBinary.IsNull"/> property before reading the
<see langword="Length"/> property.</para>
		</remarks>
	</doc>
	<doc for="OracleBinary.Value">
		<summary>
			<para> Gets the value of the <see cref="System.Data.OracleClient.OracleBinary"/> structure. This property is read-only.</para>
		</summary>
		<value>
			<para>The value of the <see langword="OracleBinary"/> structure.</para>
		</value>
		<remarks>
			<para> To avoid raising an OracleNullValueException, always check the <see cref="System.Data.OracleClient.OracleBinary.IsNull"/> property before reading the
<see langword="Value"/> property.</para>
		</remarks>
	</doc>
	<doc for="OracleBinary.this">
		<summary>
			<para>Gets the single byte from the
   <see langword="Value"/> property located at the position indicated by the integer
      parameter, <paramref name="index"/>. If <paramref name="index"/> indicates a position beyond the end of the byte
      array, an exception is raised.</para>
		</summary>
		<param name="index">The position of the byte to be retrieved.</param>
		<value>
			<para>The byte located at the position indicated by the
      integer parameter.</para>
		</value>
		<remarks>
			<para> To avoid raising an OracleNullValueException, always check the <see cref="System.Data.OracleClient.OracleBinary.IsNull"/> property and the
<see langword="Length"/> property before reading <see langword="this"/>.</para>
		</remarks>
	</doc>
	<doc for="OracleBinary.GreaterThanOrEqual">
		<summary>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/>
structures to determine if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the first instance is
   greater than or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If either instance of
<see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the 
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.IsNull">
		<summary>
			<para> Gets a value indicating whether the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property of the <see cref="System.Data.OracleClient.OracleBinary"/> 
structure is null.</para>
		</summary>
		<value>
			<para><see langword="true"/>
if <see langword="Value"/> is null, otherwise
<see langword="false"/> .</para>
		</value>
	</doc>
	<doc for="OracleBinary.OracleBinary1">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleBinary"/> structure.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleBinary"/>
class with a binary object to store and boolean indicating
whether or not to create a new binary array.</para>
		</summary>
		<param name="isNull"><see langword="Boolean"/> indicating whether the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property of the <see cref="System.Data.OracleClient.OracleBinary"/> structure is null. </param>
		<remarks>
			<para>if <paramref name="isNull"/> is set to <see langword="true"/> , the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property is set to a 
   null value. If <paramref name="isNull"/> is set to
<see langword="false"/> , <see cref="System.Data.OracleClient.OracleBinary.Value"/> is set to new byte[0].</para>
		</remarks>
	</doc>
	<doc for="OracleBinary.OracleBinary2">
		<summary>
			<para> Initializes a new instance of
      the <see langword="OracleBinary"/> structure, setting the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property to the contents of the supplied byte array.
      </para>
		</summary>
		<param name="b">The byte array to be stored in the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property. </param>
	</doc>
	<doc for="OracleBinary.Concat">
		<summary>
			<para> Concatenates two <see cref="System.Data.OracleClient.OracleBinary"/>
structures to create a new <see langword="OracleBinary"/> structure.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see langword="OracleBinary"/> structure with the concatenated values of the <paramref name="x"/> and <paramref name="y"/> parameters.</para>
		</returns>
	</doc>
	<doc for="OracleBinary.NotEquals">
		<summary>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they are
   not equal.</para>
		</summary>
		<param name="x">An <see langword="OracleBinary"/> structure.</param>
		<param name=" y">An <see langword="OracleBinary"/> structure.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of the
<see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="OracleBinary.Equals">
		<overload>
			<para>Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they are 
   equal.</para>
		</overload>
		<summary>
			<para>Compares the supplied object parameter to
      the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property of the <see cref="System.Data.OracleClient.OracleBinary"/> object.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para><see langword="true "/>if object is
   an instance of <see cref="System.Data.OracleClient.OracleBinary"/> and the two are
   equal; otherwise <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="OracleBinary">
		<summary>
			<para> Represents a variable-length
      stream of binary data to be stored in or retrieved from a
      database.
      </para>
		</summary>
		<remarks>
			<para>To obtain an <see cref="System.Data.OracleClient.OracleBinary"/> object, call the <see cref="System.Data.OracleClient.OracleDataReader.GetOracleBinary"/> method.</para>
		</remarks>
	</doc>
	<doc for="OracleBinary.operator+">
		<summary>
			<para> Concatenates the two <see cref="System.Data.OracleClient.OracleBinary"/> parameters to create a
   new <see langword="OracleBinary"/> structure.
   </para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.Concat"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para>The concatenated values of the <paramref name="x"/> and <paramref name="y"/> parameters.</para>
		</returns>
		<remarks>
			<para><paramref name="x"/> will appear first in the
   resulting <see langword="OracleBinary"/> ,
   followed by <paramref name="y"/>.
   </para>
			<para lang="VB">In Visual Basic, you can use the
   operators defined by a class, but you cannot override them or create your
   own.
   </para>
		</remarks>
	</doc><doc for="OracleBinary.operatorEQ">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they are
   equal.
   </para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.Equals"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> An <see cref="System.Data.OracleClient.OracleBoolean"/>
that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two instances are equal
or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are not
equal. If either instance of <see langword="OracleBinary"/>
is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="OracleBinary.operatorGT">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if the first
   is greater than the second.
   </para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.GreaterThan"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is greater than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If either instance
of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="OracleBinary.operatorGE">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if the first
   is greater than or equal to the second.
   </para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.GreaterThanOrEqual"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is greater than
or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If
either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="OracleBinary.operatorLT">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if the first is less
   than the second.
   </para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.LessThan"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first
instance is less than the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/> . If either instance
of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="OracleBinary.operatorLE">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if the first is less
   than or equal to the second.
   </para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.LessThanOrEqual"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/>
if the first instance is less than
or equal to the second instance, otherwise <see cref="System.Data.OracleClient.OracleBoolean.False"/>. If
either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="OracleBinary.operatorNE">
		<summary>
			<para> Compares two <see cref="System.Data.OracleClient.OracleBinary"/> structures to determine if they
   are equal.</para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.NotEquals"/>
		<param name="x">An <see langword="OracleBinary"/> object. </param>
		<param name="y">An <see langword="OracleBinary"/> object. </param>
		<returns>
			<para> An <see cref="System.Data.OracleClient.OracleBoolean"/> that is <see cref="System.Data.OracleClient.OracleBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.OracleClient.OracleBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="OracleBinary"/> is null, the <see cref="System.Data.OracleClient.OracleBoolean.Value"/> of
   the <see langword="OracleBoolean"/> will be <see cref="System.Data.OracleClient.OracleBoolean.Null"/> .
   </para>
		</returns>
	</doc><doc for="OracleBinary.operatorBytearr">
		<summary>
			<para> Gets the contents of the <see cref="System.Data.OracleClient.OracleBinary.Value"/> property of the <see cref="System.Data.OracleClient.OracleBinary"/>
parameter as an array of bytes.</para>
		</summary>
		<altmember cref="System.Data.OracleClient.OracleBinary.Value"/>
		<param name="x">An <see cref="System.Data.OracleClient.OracleBinary"/>. </param>
		<returns>
			<para> An array of bytes.
      </para>
		</returns>
		<remarks>
			<para lang="VB">In Visual
      Basic, you can use the conversions defined by the class, but you cannot override
      them or create your own. If Option Strict is set, you must use the &lt;CType
      operator&gt; to convert the <see cref="System.Data.OracleClient.OracleBinary"/>
      to a binary object.
      </para>
		</remarks>
	</doc></docs>
