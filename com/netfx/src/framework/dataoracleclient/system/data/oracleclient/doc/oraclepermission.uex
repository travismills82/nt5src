<docs>
	<doc for="OraclePermissionAttribute">
		<summary>
			<para>Associates a security action with a custom security attribute.</para>
		</summary>
	</doc><doc for="OraclePermissionAttribute.CreatePermission">
		<summary>
			<para> Returns an <see cref="System.Data.OracleClient.OraclePermission"/> object that is configured
 according to the attribute properties.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OraclePermission"/> object.</para>
		</returns>
	</doc><doc for="OraclePermission.OraclePermission">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.OracleClient.OraclePermission"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.OracleClient.OraclePermission"/> class.</para>
		</summary>
		<remarks>
			<para>The base constructor initializes all fields to their default values.</para>
		</remarks>
	</doc><doc for="OraclePermissionAttribute.OraclePermissionAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.OracleClient.OraclePermissionAttribute"/> class with one 
   of the <see langword="SecurityAction"/>
   values.</para>
		</summary>
		<param name="action">One of the <see langword="System.Security.Permissions.SecurityAction"/> values representing an action that can be performed using declarative security.</param>
		<returns>
			<para>An <see cref="System.Data.OracleClient.OraclePermissionAttribute"/> object.</para>
		</returns>
	</doc>
	<doc for="OraclePermission.OraclePermission1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.OracleClient.OraclePermission"/> class with one of the 
<see langword="PermissionState"/>
values.</para>
		</summary>
		<param name="state">One of the <see langword="System.Security.Permissions.PermissionState"/> values.</param>
	</doc>
	<doc for="OraclePermission.CreateInstance">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OraclePermission.AddWithAllow">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OraclePermission.Copy">
		<summary>
			<para>Creates and returns an identical copy of the current permission object.</para>
		</summary>
		<returns>
			<para>A copy of the current permission object.</para>
		</returns>
		<remarks>
			<para>A copy of a permission object represents the same access
      to resources as the original permission object.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.Intersect">
		<summary>
			<para>Returns a new permission object representing the intersection of
      the current permission object and the specified permission object.</para>
		</summary>
		<param name="target">A permission object to intersect with the current permission object. It must be of the same type as the current permission object.</param>
		<returns>
			<para>A new permission object that represents the intersection
      of the current permission object and the specified permission object. This new
      permission object is a null reference (<see langword="Nothing"/> in Visual Basic) if the
      intersection is empty.</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="target"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic) and is not an instance of the same class as the current permission object.</exception>
		<remarks>
			<para>The intersection of two permissions is a permission that describes the set of
      operations they both describe in common. Only a demand that passes both original
      permissions will pass the intersection.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.IsSubsetOf">
		<summary>
			<para>Returns a value indicating whether the current permission object
      is a subset of the specified permission object.</para>
		</summary>
		<param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
		<returns>
			<para><see langword="True "/>if the
   current permission object is a
   subset of the specified permission object; otherwise <see langword="false"/> .</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="target"/> parameter is an object that is not of the same type as the current permission object.</exception>
		<remarks>
			<para>The current permission object is a subset of the specified permission object
      if the current permission object specifies a set of operations that is wholly
      contained by the specified permission object. For example, a permission that
      represents access to C:\example.txt is a subset of a permission that represents
      access to C:\. If this method returns <see langword="true"/>, the current permission object
      represents no more access to the protected resource than does the specified
      permission object.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.IsUnrestricted">
		<summary>
			<para>Returns a value indicating whether the permission can be
      represented as unrestricted without any knowledge of the permission semantics.</para>
		</summary>
		<returns>
			<para><see langword="True "/>if the permission can be represented as
   unrestricted.</para>
		</returns>
	</doc>
	<doc for="OraclePermission.FromXml">
		<summary>
			<para>Reconstructs a security object with a specified state
      from an XML encoding.</para>
		</summary>
		<param name="securityElement">The XML encoding to use to reconstruct the security object.</param>
		<remarks>
			<para>Custom code that extends security objects needs to implement the ToXml and
      <see langword="FromXml"/> methods to make the objects security-encodable.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.Clear">
		<summary>
			<para>Removes all permissions that were previous added using 
      the <see langword="Add"/> method.</para>
		</summary>
	</doc>
	<doc for="OraclePermission.Union">
		<summary>
			<para> Returns a new permission object that is the union of
      the current and specified permission objects.</para>
		</summary>
		<param name="target">A permission object to combine with the current permission object. It must be of the same type as the current permission object.</param>
		<returns>
			<para>A new permission object that represents the union of the
      current permission object and the specified permission object.</para>
		</returns>
		<exception cref="System.NotSupportedException">The <paramref name="other"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic). This method is only supported at this level when passed a null reference (<see langword="Nothing"/>).</exception>
		<remarks>
			<para>The result of a call to <see cref="System.Data.OracleClient.OraclePermission.Union"/> is a permission
   that represents all the operations represented by both the current permission
   object and the specified permission object. Any demand that passes either
   permission passes their union.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.ToXml">
		<summary>
			<para>Creates an XML encoding of the security object and its current state.</para>
		</summary>
		<returns>
			<para>An XML encoding of the security object, including any state information.</para>
		</returns>
		<remarks>
			<para>Custom code that extends security objects needs to
      implement the <see cref="System.Data.OracleClient.OraclePermission.ToXml"/> and
      <see cref="System.Data.OracleClient.OraclePermission.FromXml"/>
   methods to make the objects security-encodable.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.OraclePermission2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.OracleClient.OraclePermission"/> class.</para>
		</summary>
		<param name="state">One of the <see langword="System.Security.Permissions.PermissionState"/> values.</param>
		<param name=" allowBlankPassword">Indicates whether a blank password is allowed.</param>
		<remarks>
			<para>The <see cref="System.Security.Permissions.PermissionState"/> enumeration takes precedence over
   the <see cref="System.Data.OracleClient.OraclePermission.AllowBlankPassword"/> property. Therefore, if you
   set set <see cref="System.Data.OracleClient.OraclePermission.AllowBlankPassword"/> to <see langword="false"/>,
   you must also set <see cref="System.Security.Permissions.PermissionState"/> to <see langword="None"/> to prevent
   a user from making a connection using a blank password.</para>
		</remarks>
	</doc>
	<doc for="OraclePermission.AllowBlankPassword">
		<summary>
			<para>Gets a value indicating whether a blank password is allowed.</para>
		</summary>
		<value>
			<para><see langword="true"/> if a blank password is allowed; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Security.Permissions.PermissionState"/> enumeration takes precedence
   over the <see cref="System.Data.OracleClient.OraclePermission.AllowBlankPassword"/> property. Therefore,
   if you set <see cref="System.Data.OracleClient.OraclePermission.AllowBlankPassword"/> to
<see langword="false"/>, you must also set <see cref="System.Security.Permissions.PermissionState"/> to <see langword="None"/>
to prevent a user from making a connection using a blank password. </para>
		</remarks>
	</doc>
	<doc for="OraclePermission">
		<summary>
			<para> Enables the .NET
      Framework Data Provider for Oracle to ensure that a user has
      a security level adequate to access an Oracle database. This class cannot be inherited.
      
      </para>
		</summary>
		<remarks>
			<para>This class is intended for future use when the .NET
      Framework Data Provider for Oracle is enabled for partial trust scenarios. The provider currently requires FullTrust permission. For more information, see
      <see topic="cpconcodeaccesssecurityadonet"/>.</para>
		</remarks>
	</doc>
</docs>
