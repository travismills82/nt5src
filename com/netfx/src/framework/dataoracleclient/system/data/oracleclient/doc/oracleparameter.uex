<docs><doc for="OracleParameter.Finalize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="OracleParameter.ToString">
		<summary>
			<para>Gets a string containing the <see cref="System.Data.OracleClient.OracleParameter.ParameterName"/>.</para>
		</summary>
		<returns>
			<para>A string containing the <see cref="System.Data.OracleClient.OracleParameter.ParameterName"/>.</para>
		</returns>
	</doc><doc for="OracleParameter.OracleParameter">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/>
class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/>
class.</para>
		</summary>
		<remarks>
			<para>The base constructor initializes all fields to their default values.</para>
		</remarks>
		<example>
			<para> The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its
 properties.
 </para>
			<codelink SampleID="Classic WebData OracleParameter.OracleParameter" SnippetID="1"/>
		</example>
	</doc><doc for="OracleParameter.ICloneable.Clone">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OracleParameter.IsNullable">
		<summary>
			<para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
		</summary>
		<value>
			<para><see langword="true"/> if null values are accepted; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Null values are handled using the 
   <see langword="System.DBNull"/> class.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.IsNullable" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.SourceColumn">
		<summary>
			<para>Gets or sets the name of the source column mapped to the 
   <see langword="DataSet"/> 
   and used for loading or returning the <see cref="System.Data.OracleClient.OracleParameter.Value"/>.</para>
		</summary>
		<value>
			<para>The name of the source column mapped to the 
   <see langword="DataSet"/> . The default is an empty
      string ("").</para>
		</value>
		<remarks>
			<para>The link between the value of the <see cref="System.Data.OracleClient.OracleParameter"/> and the <see langword="DataTable"/> may be bidirectional depending on the value of the
<see cref="System.Data.OracleClient.OracleParameter.Direction"/> 
property.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.SourceColumn" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.OracleParameter1">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/> class. </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/>
class.
</para>
		</summary>
	</doc>
	<doc for="OracleParameter">
		<summary>
			<para>Represents a parameter to an <see cref="System.Data.OracleClient.OracleCommand"/> and optionally, its mapping to a
<see langword="DataColumn"/>. This class
   cannot be inherited.</para>
		</summary>
		<remarks>
			<para> Parameter
      names are not case-sensitive.</para>
		</remarks>
		<example>
			<para>The following example creates multiple instances of <see cref="System.Data.OracleClient.OracleParameter"/>
through the <see cref="System.Data.OracleClient.OracleParameterCollection"/> within the <see cref="System.Data.OracleClient.OracleDataAdapter"/>. These
parameters are used to select data from the database and place the data in
the <see langword="DataSet"/>
. This example assumes that a
<see cref="System.Data.DataSet"/>
and an <see cref="System.Data.OracleClient.OracleDataAdapter"/> have already been created with the appropriate
schema, commands, and connection.</para>
			<codelink SampleID="Classic WebData OracleParameter" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.ValueSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OracleParameter.ToString">
		<summary>
			<para>Gets a string containing the <see cref="System.Data.OracleClient.OracleParameter.ParameterName"/>.</para>
		</summary>
		<returns>
			<para>A string containing the <see cref="System.Data.OracleClient.OracleParameter.ParameterName"/>.</para>
		</returns>
	</doc>
	<doc for="OracleParameter.SourceVersion">
		<summary>
			<para>Gets or sets the 
   <see langword="System.Data.DataRowVersion"/> to use when loading <see cref="System.Data.OracleClient.OracleParameter.Value"/>.</para>
		</summary>
		<value>
			<para>One of the <see langword="System.Data.DataRowVersion"/> values. The default is
<see langword="Current"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The property was not set to one of the <see langword="DataRowVersion"/> values.</exception>
		<remarks>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.SourceVersion"/> is used by
<see cref="System.Data.OracleClient.OracleDataAdapter.UpdateCommand"/> during an <see cref="System.Data.Common.DbDataAdapter.Update"/> operation to 
   determine whether the parameter value is set to <see langword="Current"/> or
<see langword="Original"/>. This allows primary keys to be 
   updated. </para>
			<para>This property is set to the version of the
<see langword="DataRow"/> used by either the <see langword="Item"/> 
property (<see cref="System.Data.DataRow"/> indexer), or the
<see langword="GetChildRows"/> method of the <see langword="DataRow"/> 
object.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.SourceVersion" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.OracleParameter3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/> class with the parameter name and data
   type.
   </para>
		</summary>
		<param name="name"> The name of the parameter. </param>
		<param name="oracleType">One of the <see cref="System.Data.OracleClient.OracleType"/> values. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="oracleType"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData OracleParameter.OracleParameter1" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.Scale">
		<summary>
			<para> Gets the number of decimal places to
      which <see cref="System.Data.OracleClient.OracleParameter.Value"/>
      is resolved.</para>
		</summary>
		<value>
			<para>The number of decimal places to which <see cref="System.Data.OracleClient.OracleParameter.Value"/> is resolved. The 
   default is 0. Setting the <see cref="System.Data.OracleClient.OracleParameter.Scale"/>
   property has no
   effect.</para>
		</value>
		<remarks>
			<para>Setting the <see cref="System.Data.OracleClient.OracleParameter.Precision"/> or <see cref="System.Data.OracleClient.OracleParameter.Scale"/>
properties has no effect.</para>
		</remarks>
		<seealso cref="System.Data.OracleClient.OracleParameter.Precision"/>
		<seealso cref="System.Data.OracleClient.OracleParameter.Size"/>
	</doc>
	<doc for="OracleParameter.Offset">
		<summary>
			<para>Gets or sets the offset to the <see cref="System.Data.OracleClient.OracleParameter.Value"/> property.</para>
		</summary>
		<value>
			<para>The offset to the <see cref="System.Data.OracleClient.OracleParameter.Value"/>. The default is 0.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.Offset"/> property is used 
   for client-side chunking of binary and string data. For example, in order
   to insert 10MB of text into a column on a server, a user might
   execute 10 parameterized inserts of 1MB chunks, shifting the value of
<see cref="System.Data.OracleClient.OracleParameter.Offset"/> on each iteration by 
   1MB. </para>
			<para><see cref="System.Data.OracleClient.OracleParameter.Offset"/> specifies the 
number of bytes for binary types, and the number of characters for strings. The
count for strings does not include the terminating character.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its
   properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.Offset" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.Value">
		<summary>
			<para>Gets or sets the value of the parameter.</para>
		</summary>
		<value>
			<para>An <see cref="System.Object"/> that is the value
   of the parameter. The default value is null.</para>
		</value>
		<remarks>
			<para> For input parameters, the
      value is bound to the <see cref="System.Data.OracleClient.OracleCommand"/>
      that is sent to the server. For output and return-value parameters, the value is
      set on completion of the <see cref="System.Data.OracleClient.OracleCommand"/> and after the <see cref="System.Data.OracleClient.OracleDataReader"/> is closed.</para>
			<para>When sending a null parameter value to the server, the
      user must specify <see langword="DBNull"/>, not null. A null value in the
      system is an empty object that has no value. <see langword="DBNull "/>
      is used to represent null values.</para>
			<para> If the application specifies the database
      type, the bound value is converted to that type when the provider sends the
      data to the server. The provider attempts to convert any type of
      value if it supports the <see cref="System.IConvertible"/> interface. Conversion errors may
      result if the specified type is not compatible with the value.</para>
			<para> The <see cref="System.Data.OracleClient.OracleParameter.DbType"/>,
<see cref="System.Data.OracleClient.OracleParameter.OracleType"/>, and <see cref="System.Data.OracleClient.OracleParameter.Size"/> 
properties of a parameter can be inferred by setting <see cref="System.Data.OracleClient.OracleParameter.Value"/>.
Therefore, you are not required to specify them. However, they are
not exposed in <see cref="System.Data.OracleClient.OracleParameter"/>
property settings. For example, if the size of the parameter has been inferred,
<see cref="System.Data.OracleClient.OracleParameter.Size"/> does not contain 
inferred value after statement execution.</para>
			<para>The <see langword="InputOutput"/>, <see langword="Output"/>, and
<see langword="ReturnValue"/>
				<see cref="System.Data.ParameterDirection"/> values used by the <see cref="System.Data.OracleClient.OracleParameter.Value"/>
property will be .NET Framework data types, unless the input value was an Oracle
data type (for example, <see cref="System.Data.OracleClient.OracleNumber"/> or <see cref="System.Data.OracleClient.OracleString"/>). This does not apply
to <see langword="REF CURSOR"/>, <see langword="BFILE"/>, or <see langword="LOB"/>
data types.</para>
			<para> The <see cref="System.Data.OracleClient.OracleParameter.Value"/> property is overwritten by
the <see langword="Update"/> method.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.Value" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.OracleClient.OracleParameter.OracleType"/>
		<seealso cref="System.Data.OracleClient.OracleParameter.DbType"/>
	</doc>
	<doc for="OracleParameter.ParameterName">
		<summary>
			<para>Gets or sets the name of the <see cref="System.Data.OracleClient.OracleParameter"/>.</para>
		</summary>
		<value>
			<para>The name of the <see cref="System.Data.OracleClient.OracleParameter"/>. The default is an empty string ("").</para>
		</value>
		<remarks>
			<para> The .NET Framework Data Provider for Oracle does not support positional parameters that are marked with a question mark (?).
      </para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.DbType" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OracleParameter.DbType">
		<summary>
			<para> Gets or sets
      the <see langword="System.Data.DbType"/> of the
      parameter.</para>
		</summary>
		<value>
			<para>One of the <see langword="System.Data.DbType"/> values.
   The default is <see langword="DbType.AnsiString"/>.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="System.Data.DbType"/>.</exception>
		<remarks>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.OracleType"/> and <see cref="System.Data.OracleClient.OracleParameter.DbType"/> are linked. Therefore, setting
   the <see cref="System.Data.OracleClient.OracleParameter.DbType"/> changes the <see cref="System.Data.OracleClient.OracleParameter.OracleType"/> to a supporting <see cref="System.Data.OracleClient.OracleParameter.OracleType"/>.</para>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.DbType"/>, <see cref="System.Data.OracleClient.OracleParameter.OracleType"/>, and <see cref="System.Data.OracleClient.OracleParameter.Size"/> properties of a
parameter can be inferred by setting <see cref="System.Data.OracleClient.OracleParameter.Value"/>.
Therefore, you are not required to specify them. However, they are not exposed
in <see cref="System.Data.OracleClient.OracleParameter"/> property settings. For example, if the
size of the parameter has been inferred, <see cref="System.Data.OracleClient.OracleParameter.Size"/> does not contain
inferred value after statement execution. For <see langword="String"/> data types
the default is <see langword="DbType.AnsiString"/>. </para>
			<para>For a list of the supported data types, see the appropriate <see cref="System.Data.OracleClient.OracleParameter.OracleType"/>
member. For more information, see <see topic="cpconusingparameterswithdataadapters"/>.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.DbType" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.OracleClient.OracleType"/>
	</doc>
	<doc for="OracleParameter.OracleType">
		<summary>
			<para>Gets or sets the <see cref="System.Data.OracleClient.OracleType"/> of the parameter.</para>
		</summary>
		<value>
			<para>An <see cref="System.Data.OracleClient.OracleType"/> value that is the <see cref="System.Data.OracleClient.OracleType"/> of the parameter. The default
   is <see langword="OracleType.VarChar"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.OracleType"/> and <see cref="System.Data.OracleClient.OracleParameter.DbType"/> are linked. Therefore, setting
   the <see cref="System.Data.OracleClient.OracleParameter.DbType"/> changes the <see cref="System.Data.OracleClient.OracleParameter.OracleType"/> to a supporting <see cref="System.Data.OracleClient.OracleType"/>.</para>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.DbType"/>, <see cref="System.Data.OracleClient.OracleParameter.OracleType"/>, and <see cref="System.Data.OracleClient.OracleParameter.Size"/> properties of a
parameter can be inferred by setting <see cref="System.Data.OracleClient.OracleParameter.Value"/>.
Therefore, you are not required to specify them. However, they are not exposed
in <see cref="System.Data.OracleClient.OracleParameter"/> property settings. For example, if the
size of the parameter has been inferred, <see cref="System.Data.OracleClient.OracleParameter.Size"/> does not contain
inferred value after statement execution. For <see langword="String"/> data types
the default is <see langword="OracleType.VarChar"/>
. </para>
			<para>For a list of the supported data types, see the appropriate <see cref="System.Data.OracleClient.OracleType"/>
member. For more information, see <see topic="cpconusingparameterswithdataadapters"/>.</para>
		</remarks>
	</doc>
	<doc for="OracleParameter.OracleParameter4">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/> class with the
   parameter name, data type,
   and length.
   </para>
		</summary>
		<param name="name"> The name of the parameter. </param>
		<param name="oracleType">One of the <see cref="System.Data.OracleClient.OracleType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="oracleType"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData OracleParameter.OracleParameter2" SnippetID="1"/>
		</example>
	</doc><doc for="OracleParameter.OracleParameter5">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/> class with the parameter
   name, data type, length, and source column
   name.
   </para>
		</summary>
		<param name="name"> The name of the parameter. </param>
		<param name="oracleType">One of the <see cref="System.Data.OracleClient.OracleType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<param name="srcColumn">The name of the source column. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="oracleType"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData OracleParameter.OracleParameter3" SnippetID="1"/>
		</example>
	</doc><doc for="OracleParameter.OracleParameter6">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/> class
   with the parameter name, data type, length, source column name, parameter direction, numeric precision,
   and other
   properties.
   </para>
		</summary>
		<param name="name">The name of the parameter. </param>
		<param name="oracleType">One of the <see cref="System.Data.OracleClient.OracleType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<param name="direction">One of the <see langword="System.Data.ParameterDirection"/> values. </param>
		<param name="isNullable"><see langword="true"/> if the value of the field can be null; otherwise, <see langword="false"/>. </param>
		<param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="System.Data.OracleClient.OracleParameter.Value"/> is resolved. </param>
		<param name="scale">The total number of decimal places to which <see cref="System.Data.OracleClient.OracleParameter.Value"/> is resolved. </param>
		<param name="srcColumn">The name of the source column. </param>
		<param name="srcVersion">One of the <see langword="System.Data.DataRowVersion"/> values. </param>
		<param name="value">An <see cref="System.Object"/> that is the value of the <see cref="System.Data.OracleClient.OracleParameter"/>. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="oracleType"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and displays the <see cref="System.Data.OracleClient.OracleParameter.ParameterName"/>.
   </para>
			<codelink SampleID="Classic WebData OracleParameter.OracleParameter4" SnippetID="1"/>
		</example>
	</doc><doc for="OracleParameter.Direction">
		<summary>
			<para>Gets or sets a value indicating whether the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
		</summary>
		<value>
			<para>One of the
   <see langword="System.Data.ParameterDirection"/> values. The default is <see langword="Input"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The property was not set to one of the valid <see cref="System.Data.ParameterDirection"/> values.</exception>
		<remarks>
			<para>If the <see cref="System.Data.ParameterDirection"/> is <see langword="Output"/>, and execution of the
   associated <see cref="System.Data.OracleClient.OracleCommand"/> does not return a value, the
<see cref="System.Data.OracleClient.OracleParameter"/> will contain a 
   null value. Null values are handled using the <see langword="DBNull"/>
   class. </para>
			<see langword="Output"/>, 
<see langword="InputOut"/>, and <see langword="ReturnValue "/>parameters returned 
by calling <see cref="System.OracleClient.OracleCommand.ExecuteReader"/> cannot be accessed until you call
<see cref="System.OracleClient.OracleDataReader.Close"/> or <SpecialLocalizableItem kind="UIElement">Dispose</SpecialLocalizableItem> on the <see cref="System.Data.OracleClient.OracleDataReader"/> .
</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.DbType" SnippetID="1"/>
		</example>
	</doc><doc for="OracleParameter.Precision">
		<summary>
			<para> Gets the maximum number of digits used to
      represent the <see cref="System.Data.OracleClient.OracleParameter.Value"/>
      property.</para>
		</summary>
		<value>
			<para>The maximum number of digits used to represent the
   <see cref="System.Data.OracleClient.OracleParameter.Value"/> property. The default 
      value is 0, which indicates that the data provider sets the precision for
   <see cref="System.Data.OracleClient.OracleParameter.Value"/>. Setting the <see cref="System.Data.OracleClient.OracleParameter.Precision"/>
   property has no effect.</para>
		</value>
		<remarks>
			<para>Setting the <see cref="System.Data.OracleClient.OracleParameter.Precision"/> or <see cref="System.Data.OracleClient.OracleParameter.Scale"/>
properties has no effect.</para>
		</remarks>
		<seealso cref="System.Data.OracleClient.OracleParameter.Scale"/>
		<seealso cref="System.Data.OracleClient.OracleParameter.Size"/>
	</doc><doc for="OracleParameter.OracleParameter2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.OracleClient.OracleParameter"/> class with the parameter name and
   an <see cref="System.Data.OracleClient.OracleParameter"/>
   object.
   </para>
		</summary>
		<param name="name">The name of the parameter. </param>
		<param name="value">An <see cref="System.Data.OracleClient.OracleParameter"/> object. </param>
		<remarks>
			<para> Use caution when using this overload of the <see cref="System.Data.OracleClient.OracleParameter"/> constructor. Because this overload takes a <paramref name="value"/>
of type <see cref="System.Object"/>, you must
convert the integral value to an <see cref="System.Object"/> type when the value is zero, as the following C# example demonstrates. </para>
			<code>
Parameter = new OracleParameter("pname", Convert.ToInt32(0));
</code>
			<para>If you do not perform this conversion, the compiler will
   assume you are attempting to call the <see langword="OracleParameter "/>(<see langword="string"/>, <see langword="OracleType"/>) constructor overload.</para>
		</remarks>
	</doc><doc for="OracleParameter.Size">
		<summary>
			<para> Gets or sets
      the maximum size of the data within the column.</para>
		</summary>
		<value>
			<para> The maximum
      size of the data within the column. The default value
      is 0 (to be used when you do not
      want to specify the maximum size of the
      value).</para>
		</value>
		<remarks>
			<para> Setting <see cref="System.Data.OracleClient.OracleParameter.Size"/> affects only the input 
   value of a parameter. Return values and output parameters are not affected by this property.</para>
			<para> The <see cref="System.Data.OracleClient.OracleParameter.Size"/> property is used for 
binary and string types.</para>
			<para>For nonstring data types and ANSI string data, the <see cref="System.Data.OracleClient.OracleParameter.Size"/>
property refers to the number of bytes. For Unicode string data,
<see cref="System.Data.OracleClient.OracleParameter.Size"/> refers to the number 
of characters. The count for strings does not include the terminating
character.</para>
			<para>For variable-length data types, <see cref="System.Data.OracleClient.OracleParameter.Size"/> describes the maximum
amount of data to transmit to the server. For example, for a Unicode string
value, <see cref="System.Data.OracleClient.OracleParameter.Size"/> could be used to limit
the amount of data sent to the server to the first one hundred characters.</para>
			<para>For bidirectional and output parameters, and return
   values, you must set the value of <see cref="System.Data.OracleClient.OracleParameter.Size"/>. This is not required
   for input parameters, and if not explicitly set, the value of is
   inferred from the actual size of the specified parameter when a parameterized
   statement is executed.</para>
			<para>The <see cref="System.Data.OracleClient.OracleParameter.DbType"/>, <see cref="System.Data.OracleClient.OracleParameter.OracleType"/>, and <see cref="System.Data.OracleClient.OracleParameter.Size"/> properties of a
parameter can be inferred by setting <see cref="System.Data.OracleClient.OracleParameter.Value"/>.
Therefore, you are not required to specify them. However, they are not exposed
in <see cref="System.Data.OracleClient.OracleParameter"/> property settings. For example, if the
size of the parameter has been inferred, <see cref="System.Data.OracleClient.OracleParameter.Size"/> does not contain inferred value
after statement execution.</para>
			<para>For fixed-length data types, the
   value of <see cref="System.Data.OracleClient.OracleParameter.Size"/> is ignored. It can be
   retrieved for informational purposes, and returns the maximum amount of bytes
   the provider uses when transmitting the value of the parameter
   to the server.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.OracleClient.OracleParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OracleParameter.Size" SnippetID="1"/>
		</example>
	</doc></docs>
