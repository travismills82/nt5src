<docs>
	<doc for="ImageList.HandleCreated">
		<summary>
			<para> Gets a value indicating whether the underlying Win32 handle has been created.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the <see cref="System.Windows.Forms.ImageList.Handle"/> has been created; otherwise, 
 <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
	</doc>
	<doc for="ImageList.Images">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.ImageList.ImageCollection"/> for this image list.</para>
		</summary>
		<value>
			<para>The collection of images.</para>
		</value>
		<remarks>
			<para>If the image collection has not yet been created, it is created when you 
       retrieve this property.</para>
		</remarks>
	</doc>
	<doc for="ImageList.ImageStream">
		<summary>
			<para> Gets the handle to the <see cref="System.Windows.Forms.ImageListStreamer"/> associated with this image list.</para>
		</summary>
		<value>
			<para>
				<see langword="null "/> if the image list is empty; otherwise, a handle to the <see cref="System.Windows.Forms.ImageListStreamer"/> for this <see cref="System.Windows.Forms.ImageList"/> .</para>
		</value>
		<remarks>
			<para> The <see cref="System.Windows.Forms.ImageListStreamer"/> is the data portion of the image list.</para>
			<para>You can pass this handle to another instance of an 
 <see cref="System.Windows.Forms.ImageList"/> .</para>
		</remarks>
	</doc>
	<doc for="ImageList.TransparentColor">
		<summary>
			<para>Gets or sets the color to treat as transparent.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Drawing.Color"/> values. The default is 
 <see langword="Transparent"/>.</para>
		</value>
		<remarks>
			<para>The transparent color is not rendered when the image is 
       drawn.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
	</doc>
	<doc for="ImageList.CreateHandle">
		<summary>
     Creates the underlying HIMAGELIST handle, and sets up all the
     appropriate values with it.  Inheriting classes overriding this method
     should not forget to call base.createHandle();
 </summary>
	</doc>
	<doc for="ImageList.Finalize">
		<summary>
			<para>Make sure we clean up our handle</para>
		</summary>
	</doc>
	<doc for="ImageList.GetBitmap">
		<summary>
     Returns the image specified by the given index.  The bitmap returned is a
     copy of the original image.
 </summary>
		<param name="index">
     Image we wish to get as a Bitmap
 </param>
		<returns>
     Bitmap   a Bitmap object with the specified image in it.
 </returns>
	</doc>
	<doc for="ImageList.GetImageInfo">
		<summary>
		</summary>
	</doc>
	<doc for="ImageList.DebugOnly_GetMasterImage">
		<summary>
		</summary>
	</doc>
	<doc for="ImageList.DebugOnly_GetMasterMask">
		<summary>
		</summary>
	</doc>
	<doc for="ImageList.OnRecreateHandle">
		<summary>
     Called when the Handle property changes.
 </summary>
	</doc>
	<doc for="ImageList.PutImageInTempBitmap">
		<summary>
     Copies the image at the specified index into the temporary Bitmap object.
     The temporary Bitmap object is used for stuff that the Windows ImageList
     control doesn't support, such as stretching images or copying images from
     different image lists.  Since bitmap creation is expensive, the same instance
     of the temporary Bitmap is reused.
 </summary>
	</doc>
	<doc for="ImageList.RemoveImage">
		<summary>
     Remove the image specified by the given index.
 </summary>
	</doc>
	<doc for="ImageList.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="ImageList.ImageCollection.Count">
		<summary>
			<para>Gets the number of images currently in the list.</para>
		</summary>
		<value>
			<para>The number of images in the list. The default is zero. </para>
		</value>
		<remarks>
			<para>Counting the images forces the <see cref="System.Windows.Forms.ImageList.Handle"/> to be created.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ImageList.HandleCreated"/>
	</doc>
	<doc for="ImageList.ImageCollection.Empty">
		<summary>
			<para>Gets a value indicating whether the <see cref="System.Windows.Forms.ImageList"/> has any images.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if there are no images in the list; otherwise, 
 <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para> You can check this property without forcing the 
       creation of a <see cref="System.Windows.Forms.ImageList.Handle"/>.</para>
		</remarks>
	</doc>
	<doc for="ImageList.ImageCollection.Clear">
		<summary>
			<para>Removes all the images and masks from the <see cref="System.Windows.Forms.ImageList"/> .</para>
		</summary>
		<seealso cref="System.Windows.Forms.ImageList.ImageCollection.Remove"/>
	</doc>
	<doc for="ImageList.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by
      the <see cref="System.Windows.Forms.ImageList"/> .</para>
		</summary>
		<remarks>
			<para>Call <see cref="System.Windows.Forms.ImageList.Dispose"/> when you are finished using the
   <see cref="System.Windows.Forms.ImageList"/>. The <see cref="System.Windows.Forms.ImageList.Dispose"/> method leaves the
   <see cref="System.Windows.Forms.ImageList"/> in an unusable state. After calling <see cref="System.Windows.Forms.ImageList.Dispose"/>, you must release all references to
   the <see cref="System.Windows.Forms.ImageList"/> so the memory it was occupying can be reclaimed
   by garbage collection. </para>
			<note type="note">
   Always call <see cref="System.Windows.Forms.ImageList.Dispose"/> before you release your last
   reference to the <see cref="System.Windows.Forms.ImageList"/>. Otherwise, the resources the <see cref="System.Windows.Forms.ImageList"/> is
   using will not be freed until garbage collection calls the <see cref="System.Windows.Forms.ImageList"/>
   object's destructor.
   </note>
		</remarks>
	</doc>
	<doc for="ImageList.Draw">
		<overload>
			<para>Draws the indicated image.</para>
		</overload>
		<summary>
			<para>Draws the image indicated by the specified index on
      the specified <see cref="System.Drawing.Graphics"/>
      at the given location.</para>
		</summary>
		<param name="g">
			<see cref="System.Drawing.Graphics"/> object to draw into.</param>
		<param name="pt">The location defined by a <see cref="System.Drawing.Point"/> at which to draw the image.</param>
		<param name="index">Index of the image in the <see cref="System.Windows.Forms.ImageList"/> to draw.</param>
		<exception cref="T:System.ArgumentException">
			<para>The index is less than Zero.</para>
			<para>-or-</para>
			<para>The index is greater than or equal to the count of images in the image list.</para>
		</exception>
	</doc>
	<doc for="ImageList.ImageCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the list is read only.</para>
		</summary>
		<value>
			<para>Always <see langword="false"/>.</para>
		</value>
		<seealso cref="System.Collections.IList"/>
	</doc>
	<doc for="ImageList.ImageList">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ImageList"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ImageList"/> class with default values for <see cref="System.Windows.Forms.ImageList.ColorDepth"/>, <see cref="System.Windows.Forms.ImageList.ImageSize"/>, and <see cref="System.Windows.Forms.ImageList.TransparentColor"/> .</para>
		</summary>
		<remarks>
			<para>The following table shows initial property values for an instance of <see cref="System.Windows.Forms.ImageList"/>.</para>
			<list type="table">
				<listheader>
					<term>Item</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Windows.Forms.ImageList.ColorDepth"/>
					</term>
					<description>The default value is <see cref="System.Windows.Forms.ColorDepth.Depth4Bit"/>.</description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ImageList.ImageSize"/>
					</term>
					<description>The default is a <see cref="System.Drawing.Size"/> object with a height and width of 16 by 16.</description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ImageList.TransparentColor"/>
					</term>
					<description>The default value is <see cref="System.Drawing.Color.Transparent"/>.</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="ImageList.RecreateHandle">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.ImageList.Handle"/> is recreated.</para>
		</summary>
		<remarks>
			<para>You can use this event to do special processing when
      the <see cref="System.Windows.Forms.ImageList.Handle"/> is created by actions such as changing
      the <see cref="System.Windows.Forms.ImageList.ColorDepth"/> or <see cref="System.Windows.Forms.ImageList.ImageSize"/>
      . Special processing is recommended when you have supplied the handle
      for the list.</para>
			<para>When the handle is recreated, <see cref="System.Windows.Forms.ImageList"/> checks 
   to see if the handle
   was created internally or if it was supplied in the constructor. If the
   handle was created internally, it is destroyed and new one is created. If it
   was supplied in the constructor, the old one is not destroyed and a new
   one will be created. If a new one is created, you will need to explicitly
   free the handle.</para>
		</remarks>
	</doc>
	<doc for="ImageList.ImageCollection">
		<summary>
			<para>Encapsulates the collection of <see cref="System.Drawing.Image"/> objects
   in an <see cref="System.Windows.Forms.ImageList"/> .</para>
		</summary>
		<remarks>
			<para>This is used to manage the images in the <see cref="System.Windows.Forms.ImageList"/> programmatically,
   providing
   methods to add and remove image objects.</para>
		</remarks>
	</doc>
	<doc for="ImageList.ImageCollection.this">
		<summary>
			<para>Gets or sets an <see cref="System.Drawing.Image"/> in an existing <see cref="System.Windows.Forms.ImageList"/> .</para>
		</summary>
		<param name="index">The index of the image to get or set.</param>
		<value>
			<para>The image in the list specified by the
   <paramref name="index"/> .</para>
		</value>
		<exception cref="T:System.ArgumentOutOfRangeException">
			<para>The index is less than zero or greater than or equal to <see langword="Count"/> .</para>
		</exception>
		<exception cref="T:System.Exception">The attempt to replace the image failed.</exception>
		<exception cref="T:System.ArgumentNullException">
			<para>The image to be assigned is <see langword="null"/> or not a <see cref="System.Drawing.Bitmap"/>.</para>
		</exception>
	</doc>
	<doc for="ImageList.Draw1">
		<summary>
			<para>Draws the image indicated by the given index on
      the specified <see cref="System.Drawing.Graphics"/>
      at the specified location.</para>
		</summary>
		<param name="g"><see cref="System.Drawing.Graphics"/> object to draw into.</param>
		<param name="x">Horizontal position at which to draw the image.</param>
		<param name="y">Vertical position at which to draw the image.</param>
		<param name="index">Index of the image in the <see cref="System.Windows.Forms.ImageList"/> to draw.</param>
		<exception cref="T:System.ArgumentOutOfRangeException"><para>The index is less than zero.</para>
			<para>-or-</para>
			<para>The index is greater than or equal to the count of images in the image list.</para></exception>
	</doc><doc for="ImageList.Draw2">
		<summary>
			<para>Draw the image indicated by the given index using the location, size and
      raster op code specified. </para>
		</summary>
		<param name="g"><see cref="System.Drawing.Graphics"/> object to draw into.</param>
		<param name="x">Horizontal position at which to draw the image.</param>
		<param name="y">Vertical position at which to draw the image.</param>
		<param name="width">Width of destination image.</param>
		<param name="height">Height of destination image.</param>
		<param name="index">Index of the image in the <see cref="System.Windows.Forms.ImageList"/> to draw.</param>
		<exception cref="T:System.ArgumentOutOfRangeException">The index is less than zero. <para>-or-</para><para>The index is greater than or equal to the count of images in the image list.</para></exception>
		<remarks>
			<para>The image is stretched or compressed as necessary to fit the bounds
      provided.</para>
		</remarks>
	</doc><doc for="ImageList.ImageCollection.RemoveAt">
		<summary>
			<para> Removes an image from the list.</para>
		</summary>
		<param name="index">The index of the image to remove.</param>
		<exception cref="T:System.Exception">The attempt to remove the image failed.</exception>
		<exception cref="T:System.ArgumentOutOfRangeException"><para>The index value was less than zero.</para>
			<para>-or-</para>
			<para>The index value is greater than or equal to the <see cref="System.Windows.Forms.ImageList.ImageCollection.Count"/> of images.</para></exception>
		<seealso cref="System.Windows.Forms.ImageList.ImageCollection.Clear"/>
		<seealso cref="System.Windows.Forms.ImageList.ImageCollection.Remove"/>
	</doc><doc for="ImageCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageList.ImageCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can be used to iterate 
      through the item collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> object that represents the item 
   collection.</para>
		</returns>
	</doc><doc for="ImageList.ImageCollection.Add">
		<overload>
			<para>Adds the specified object to the <see cref="System.Windows.Forms.ImageList"/>.</para>
		</overload>
		<summary>
			<para>Adds the specified icon to the <see cref="System.Windows.Forms.ImageList"/> .</para>
		</summary>
		<param name="value">An <see cref="System.Drawing.Icon"/> to add to the list.</param>
		<exception cref="T:System.Exception">Image <see langword="Add"/> failed.</exception>
		<exception cref="T:System.ArgumentNullException">Image being added is <see langword="null"/>.</exception>
		<exception cref="T:System.ArgumentException">Image being added is not a <see cref="System.Drawing.Bitmap"/>.</exception>
		<remarks>
			<para>The <see cref="System.Drawing.Icon"/> is converted to a <see cref="System.Drawing.Bitmap"/> before
   it is added to the list.</para>
		</remarks>
	</doc><doc for="ImageList.ImageCollection.Add1">
		<summary>
			<para>Adds the specified image to the <see cref="System.Windows.Forms.ImageList"/> .</para>
		</summary>
		<param name="value">A <see cref="System.Drawing.Bitmap"/> of the image to add to the list.</param>
		<exception cref="T:System.Exception">Image <see langword="Add"/> failed.</exception>
		<exception cref="T:System.ArgumentNullException">Image being added is <see langword="null"/>.</exception>
		<exception cref="T:System.ArgumentException">Image being added is not a <see cref="System.Drawing.Bitmap"/>.</exception>
	</doc><doc for="ImageList.ImageCollection.Add2">
		<summary>
			<para>Adds the specified image to the <see cref="System.Windows.Forms.ImageList"/> , using the specified color to generate the mask. </para>
		</summary>
		<param name="value">A <see cref="System.Drawing.Bitmap"/> of the image to add to the list. </param>
		<param name="transparentColor">The <see cref="System.Drawing.Color"/> to mask this image.</param>
		<returns>
			<para>The index of the newly added image or -1 if the the image could not be
      added.</para>
		</returns>
		<exception cref="T:System.ArgumentNullException">Image being added is <see langword="null"/>.</exception>
		<exception cref="T:System.Exception">Image <see langword="Add"/> failed.</exception>
		<exception cref="T:System.ArgumentException">Image being added is not a <see cref="System.Drawing.Bitmap"/>.</exception>
	</doc><doc for="ImageList.ImageCollection.AddStrip">
		<summary>
			<para>Adds an image strip to the specified image to the
   <see cref="System.Windows.Forms.ImageList"/>
   .</para>
		</summary>
		<param name="value">A <see cref="System.Drawing.Bitmap"/> object with the image(s) to add.</param>
		<returns>
			<para>The index of the newly added image or -1 if the the image could not be
      added.</para>
		</returns>
		<exception cref="T:System.ArgumentException"><para>Image being added is <see langword="null"/>.</para>
			<para>-or-</para>
			<para>Image being added is not a <see cref="System.Drawing.Bitmap"/>.</para></exception>
		<exception cref="T:System.Exception"><para>Image <see langword="Add"/> failed.</para>
			<para>-or-</para>
			<para>The width of image strip being added is zero or the width is not equal to the existing image width.</para>
			<para>-or-</para>
			<para>The image strip height is not equal to existing image height.</para></exception>
		<remarks>
			<para>The number of images to add is inferred from the width of the given
      image.</para>
			<para>A strip is a single image that is treated as multiple images arranged
      side-by-side.</para>
		</remarks>
	</doc><doc for="ImageList.ImageCollection.Contains">
		<summary>
			<para>Not supported. The <see cref="M:System.Collections.IList.Contains" qualify="true"/> method indicates whether a specified object is contained
   in the list.</para>
		</summary>
		<param name="image">The <see cref="System.Drawing.Image"/> to find in the list.</param>
		<returns>
			<para><see langword="true"/> if the image 
   is found in the list; otherwise,
<see langword="false"/>.</para>
		</returns>
		<exception cref="T:System.NotSupportedException">This method is not supported.</exception>
		<remarks>
			<para>This implementation of <see cref="M:System.Collections.IList.Contains" qualify="true"/>
throws a <see cref="T:System.NotSupportedException"/> exception.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ImageList.ImageCollection.IndexOf"/>
	</doc><doc for="ImageList.ImageCollection.Remove">
		<summary>
			<para>Not supported. The <see cref="M:System.Collections.IList.Remove" qualify="true"/> method removes a specified object from the list.</para>
		</summary>
		<param name="image">The <see cref="System.Drawing.Image"/> to remove from the list. </param>
		<exception cref="T:System.NotSupportedException">This method is not supported.</exception>
		<remarks>
			<para>This implementation of <see cref="M:System.Collections.IList.Remove" qualify="true"/>
throws a <see cref="T:System.NotSupportedException"/> exception.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ImageList.ImageCollection.Clear"/>
		<seealso cref="System.Windows.Forms.ImageList.ImageCollection.RemoveAt"/>
	</doc><doc for="ImageList.ImageCollection.IndexOf">
		<summary>
			<para>Not supported. The <see cref="M:System.Collections.IList.IndexOf" qualify="true"/> method returns the index of a specified
   object in the list.</para>
		</summary>
		<param name="image">The <see cref="System.Drawing.Image"/> to find in the list.</param>
		<returns>
			<para>The index of the image in the list.</para>
		</returns>
		<exception cref="T:System.NotSupportedException">This method is not supported.</exception>
		<remarks>
			<para>This implementation of <see cref="M:System.Collections.IList.IndexOf" qualify="true"/>
throws a <see cref="T:System.NotSupportedException"/> exception.</para>
		</remarks>
	</doc><doc for="ImageList.ImageList1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Windows.Forms.ImageList"/> class, associating it with a container.
   </para>
		</summary>
		<param name="container">An object implementing <see cref="System.ComponentModel.IContainer"/> to associate with this instance of <see cref="System.Windows.Forms.ImageList"/>.</param>
		<remarks>
   This constructor adds the image list to the
   specified container.
</remarks>
	</doc><doc for="ImageCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ImageList.ImageSize">
		<summary>
			<para>Gets or sets the size of the images in the image list.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Size"/> that
   defines the height and width of the images in the list. The default height and
   width is 16 by 16. The maximum size is 256 by 256.</para>
		</value>
		<exception cref="T:System.ArgumentException"><para>The value assigned is equal to <see cref="System.Drawing.Size.IsEmpty"/>. </para>
			<para>-or-</para>
			<para>The value height or width is less than or equal to Zero.</para>
			<para>-or-</para>
			<para>The value height or width is greater than 256.</para></exception>
		<remarks>
			<para> When you set a new image size, the handle is
      recreated.</para>
		</remarks>
	</doc><doc for="ImageList.Handle">
		<summary>
			<para> Gets the handle of the image
      list object.</para>
		</summary>
		<value>
			<para>The handle for the image list. The default value is
   <see langword="null"/> .</para>
		</value>
		<remarks>
			<para> 
      This corresponds to a Win32 HIMAGELIST handle. The handle is not
      created until you need to use it. Getting the handle causes it to be created.</para>
		</remarks>
	</doc>
	<doc for="ImageList">
		<summary>
			<para> Provides methods to manage a collection of <see cref="System.Drawing.Image"/>
objects. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para><see cref="System.Windows.Forms.ImageList"/> is typically used by other controls, such as the <see cref="System.Windows.Forms.ListView"/>,
<see cref="System.Windows.Forms.TreeView"/>, or <see cref="System.Windows.Forms.ToolBar"/> . You can add bitmaps, icons, or
   meta files to the <see cref="System.Windows.Forms.ImageList"/> , and the other controls are able to use the
   images as they require. </para>
			<para><see cref="System.Windows.Forms.ImageList"/>uses a handle to manage the list of
images. The <see cref="System.Windows.Forms.ImageList.Handle"/> is not created until certain
operations, including getting the <see cref="System.Windows.Forms.ImageList.ImageCollection.Count"/>, getting the <see cref="System.Windows.Forms.ImageList.Handle"/>, and calling <see cref="System.Windows.Forms.ImageList.Draw"/>
are performed on the image list.</para>
		</remarks>
		<example>
			<para> The following
      code example shows selecting images, removing images and displaying
      images.</para>
			<codelink SampleID="Classic ImageList Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Bitmap"/>
		<seealso cref="System.Drawing.Icon"/>
		<seealso cref="System.Drawing.Imaging.Metafile"/>
	</doc>
	<doc for="ImageList.ColorDepth">
		<summary>
			<para>Gets the color depth of the image list.</para>
		</summary>
		<value>
			<para>The number of available colors for the image. In the .NET Framework version 1.0, the default is <see cref="System.Windows.Forms.ColorDepth.Depth4Bit"/>. In the .NET Framework version 
   1.1, the default is <see cref="System.Windows.Forms.ColorDepth.Depth8Bit"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Not a valid <see cref="System.Windows.Forms.ColorDepth"/> Enumeration value.</exception>
		<remarks>
			<para>When you set the color depth to a new value,
      the <see cref="System.Windows.Forms.ImageList.Handle"/>
      for the image list is recreated.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ColorDepth"/>
	</doc>
</docs>
