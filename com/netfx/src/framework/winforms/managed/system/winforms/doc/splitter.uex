<docs>
	<doc for="Splitter.Dock">
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.Horizontal">
		<summary>
     Determines if the splitter is horizontal.
 </summary>
	</doc>
	<doc for="Splitter.DrawSplitBar">
		<summary>
     Draws the splitter bar at the current location. Will automatically
     cleanup anyplace the splitter was drawn previously.
 </summary>
		<param name="mode">
     DRAW_START, DRAW_END, or DRAW_MOVE
 </param>
	</doc>
	<doc for="Splitter.CalcSplitLine">
		<summary>
     Calculates the bounding rect of the split line. minWeight refers
     to the minimum height or width of the splitline.
 </summary>
	</doc>
	<doc for="Splitter.CalcSplitSize">
		<summary>
     Calculates the current size of the splitter-target.
 </summary>
	</doc>
	<doc for="Splitter.CalcSplitBounds">
		<summary>
     Calculates the bounding criteria for the splitter.
 </summary>
	</doc>
	<doc for="Splitter.DrawSplitHelper">
		<summary>
     Draws the splitter line at the requested location. Should only be called
     by drawSpltBar.
 </summary>
		<param name="splitSize">
     location to draw the line
 </param>
		<seealso cref="DrawSplitBar"/>
	</doc>
	<doc for="Splitter.RaiseSplitterEvent">
		<summary>
     Raises a splitter event
 </summary>
		<param name="key">
     Object key of the event to fire
 </param>
		<param name="spevent">
     Event object to pass to the delegate
 </param>
	</doc>
	<doc for="Splitter.FindTarget">
		<summary>
     Finds the target of the splitter. The target of the splitter is the
     control that is "outside" or the splitter. For example, if the splitter
     is docked left, the target is the control that is just to the left
     of the splitter.
 </summary>
		<returns>
     Target of the splitter
 </returns>
	</doc>
	<doc for="Splitter.GetSplitSize">
		<summary>
     Calculates the split size based on the mouse position (x, y).
 </summary>
		<param name="x">
     Mouse position in parent client coordinates
 </param>
		<param name="y">
     Mouse position in parent client coordinates
 </param>
		<returns>
     splitter size
 </returns>
	</doc>
	<doc for="Splitter.OnKeyDown">
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.OnMouseDown">
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.OnMouseMove">
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.OnMouseUp">
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.PreFilterMessage">
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.SplitBegin">
		<summary>
     Begins the splitter moving.
 </summary>
		<param name="x">
     Mouse Position in parent client coordinates
 </param>
		<param name="y">
     Mouse Position in parent client coordinates
 </param>
	</doc>
	<doc for="Splitter.SplitEnd">
		<summary>
     Finishes the split movement.
 </summary>
		<param name="accept">
     if set to true then the splitter will be moved, else
     the original position will be restored.
 </param>
	</doc>
	<doc for="Splitter.ApplySplitPosition">
		<summary>
     Sets the split position to be the current split size. This is called
     by splitEdit
 </summary>
	</doc>
	<doc for="Splitter.SplitMove">
		<summary>
     Moves the splitter line to the splitSize for the mouse position
     (x, y).
 </summary>
	</doc>
	<doc for="Splitter.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="Splitter.SplitData">
		<summary>
     Return value holder...
 </summary>
	</doc>
	<doc for="Splitter.Text">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.Anchor"><nodoc/>
		<summary>
   The current value of the anchor property. The anchor property
   determines which edges of the control are anchored to the container's
   edges.
   </summary>
		<seealso cref="System.Windows.Forms.AnchorStyles"/>
	</doc><doc for="Splitter.AllowDrop"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Control.DefaultSize"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.ForeColor"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.BackgroundImage"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.Font"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.CreateParams"><nodoc/>
		<summary>
   Returns the parameters needed to create the handle.  Inheriting classes
   can override this to provide extra functionality.  They should not,
   however, forget to call base.getCreateParams() first to get the struct
   filled up with the basic info.
   </summary>
		<seealso cref="System.Windows.Forms.CreateParams"/>
	</doc><doc for="Splitter.TabStop"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.Enter"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.KeyUp">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.KeyDown"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.KeyPress"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.Leave"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.SetBoundsCore"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Splitter.OnSplitterMoving">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Splitter.SplitterMoving"/> event.</para>
		</summary>
		<param name="sevent">A <see cref="System.Windows.Forms.SplitterEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.Splitter.OnSplitterMoving"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.Splitter.OnSplitterMoving"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.Splitter.OnSplitterMoving"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.SplitterEventArgs"/>
		<seealso cref="System.Windows.Forms.SplitterEventHandler"/>
		<seealso cref="System.Windows.Forms.Splitter.SplitterMoving"/>
	</doc><doc for="Splitter.ResetCursor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.Control.Cursor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating 
      a designer for a <see cref="System.Windows.Forms.Splitter"/> control or creating your own control
      incorporating the <see cref="System.Windows.Forms.Splitter"/> class. You can use the <see cref="System.Windows.Forms.Splitter.ShouldSerializeCursor"/> method to determine whether the property
      value has changed from its default.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.Cursor"/>
		<seealso cref="System.Windows.Forms.Splitter.ShouldSerializeCursor"/>
	</doc><doc for="Splitter.ShouldSerializeCursor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.Control.Cursor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.Control.Cursor"/> property value has 
   changed from its default; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Windows.Forms.Control.Cursor"/>
		<seealso cref="System.Windows.Forms.Splitter.ResetCursor"/>
	</doc><doc for="Splitter.DefaultSize"><nodoc/>
		<summary>
			<para>Gets the default size of the control.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Size"/> object that represents the default size of the
   control. </para>
		</value>
		<seealso cref="T:System.Drawing.Size"/>
	</doc><doc for="Splitter.OnSplitterMoved">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Splitter.SplitterMoved"/> event.</para>
		</summary>
		<param name="sevent">A <see cref="System.Windows.Forms.SplitterEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
 information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.Splitter.OnSplitterMoved"/> method also allows derived 
 classes to handle the event without attaching a delegate. This is the preferred
 technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
 When overriding
<see cref="System.Windows.Forms.Splitter.OnSplitterMoved"/> in a derived class, be sure to 
 call the base class's <see cref="System.Windows.Forms.Splitter.OnSplitterMoved"/> method so that registered
 delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.SplitterEventArgs"/>
		<seealso cref="System.Windows.Forms.SplitterEventHandler"/>
		<seealso cref="System.Windows.Forms.Splitter.SplitterMoved"/>
	</doc>
	<doc for="Splitter.DefaultImeMode">
		<nodoc/>
		<nodoc/>
		<summary>
			<para>Gets the default Input Method Editor (IME) mode supported by this
      control.</para>
		</summary>
	</doc>
	<doc for="Splitter.ImeMode">
		<nodoc/>
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="Splitter.Splitter">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.Splitter"/> class.</para>
		</summary>
		<remarks>
			<para>By default, the <see cref="System.Windows.Forms.Splitter.MinSize"/> and <see cref="System.Windows.Forms.Splitter.MinExtra"/> properties are set to 25. The <see cref="System.Windows.Forms.Control.Dock"/> property is set to
<see langword="DockStyle.Left"/> by default.</para>
		</remarks>
		<example>
			<para>The following example uses a <see cref="System.Windows.Forms.Splitter"/>
control in combination with <see cref="System.Windows.Forms.TreeView"/> and <see cref="System.Windows.Forms.ListView"/> controls to create a window similar to Windows Explorer. To identify the <see cref="System.Windows.Forms.TreeView"/>
and <see cref="System.Windows.Forms.ListView"/> controls, nodes and items are added to
both controls. The example uses the <see cref="System.Windows.Forms.Splitter.MinExtra"/> and <see cref="System.Windows.Forms.Splitter.MinSize"/> properties of the <see cref="System.Windows.Forms.Splitter"/>
to prevent the <see cref="System.Windows.Forms.TreeView"/> or <see cref="System.Windows.Forms.ListView"/> control from being sized
too small or too large. This example assumes that the method created in this
example is defined within a <see cref="System.Windows.Forms.Form"/> and that the method is called from the
constructor of the <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Splitter Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Splitter.BorderStyle">
		<summary>
			<para>Gets or sets the style of border for the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BorderStyle"/> values. The default is
<see langword="BorderStyle.None"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value of the property is not one of the <see cref="System.Windows.Forms.BorderStyle"/> values.</exception>
		<remarks>
			<para>This property is typically used when the controls the <see cref="System.Windows.Forms.Splitter"/>
control is docked to are displayed with a specific border style and it is
desirable for the <see cref="System.Windows.Forms.Splitter"/> control to match their display style. For example,
if you have a <see cref="System.Windows.Forms.TreeView"/> and a <see cref="System.Windows.Forms.ListView"/> control that the <see cref="System.Windows.Forms.Splitter"/>
control will be docked to that you want to display without any borders, you can
set the <see cref="System.Windows.Forms.Splitter.BorderStyle"/> property to
<see langword="BorderStyle.None"/> .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.BorderStyle"/>
	</doc>
	<doc for="Splitter.MinExtra">
		<summary>
			<para>Gets or sets the minimum distance that must remain 
      between the splitter
      control and the edge of the opposite side of the container (or the closest control docked to that side). </para>
		</summary>
		<value>
			<para> The minimum distance, in pixels, between the <see cref="System.Windows.Forms.Splitter"/> control
   and the edge of the opposite side of the container (or the closest control docked to that side). The default is 25.</para>
		</value>
		<remarks>
			<para>For a horizontal <see cref="System.Windows.Forms.Splitter"/> 
control (a <see cref="System.Windows.Forms.Splitter"/> control docked to the top or bottom of a
container), the minimum height of the area of the container reserved for
undocked controls is this value minus the height of the <see cref="System.Windows.Forms.Splitter"/>control. For
a vertical <see cref="System.Windows.Forms.Splitter"/> control (a <see cref="System.Windows.Forms.Splitter"/> control
docked to the left or right of a container), the minimum width of the area of
the container reserved for undocked controls is this value minus the width of
the <see cref="System.Windows.Forms.Splitter"/>control. The user cannot move the splitter past
the limit specified by this property.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.Splitter.MinExtra"/> property is set to a
   negative value, the property value is reset to 0.
</note>
		</remarks>
		<example>
			<para>The following example uses a <see cref="System.Windows.Forms.Splitter"/>
control in combination with <see cref="System.Windows.Forms.TreeView"/> and <see cref="System.Windows.Forms.ListView"/> controls to create a window similar to Windows Explorer. To identify the <see cref="System.Windows.Forms.TreeView"/>
and <see cref="System.Windows.Forms.ListView"/> controls, nodes and items are added to
both controls. The example uses the <see cref="System.Windows.Forms.Splitter.MinExtra"/> and <see cref="System.Windows.Forms.Splitter.MinSize"/> properties of the <see cref="System.Windows.Forms.Splitter"/>
to prevent the <see cref="System.Windows.Forms.TreeView"/> or <see cref="System.Windows.Forms.ListView"/> control from being sized
too small or too large. This example assumes that the method created in this
example is defined within a <see cref="System.Windows.Forms.Form"/> and that the method is called from the
constructor of the <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Splitter Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Splitter.MinSize"/>
	</doc>
	<doc for="Splitter.MinSize">
		<summary>
			<para>Gets or sets the minimum distance that must remain 
      between the splitter control and the container edge that the control is docked to.</para>
		</summary>
		<value>
			<para> The minimum distance, in pixels,
      between the <see cref="System.Windows.Forms.Splitter"/> control and the
      container edge that the control is docked to. The default is 25.</para>
		</value>
		<remarks>
			<para>For a horizontal <see cref="System.Windows.Forms.Splitter"/> 
control (a <see cref="System.Windows.Forms.Splitter"/> control docked to the top or bottom of a container),
this value is the minimum height of the resizable control. For a vertical
<see cref="System.Windows.Forms.Splitter"/> 
control (a <see cref="System.Windows.Forms.Splitter"/> control docked to the left or right of a
container), this value is the minimum width of the resizable control. The user
cannot move the splitter past the limit specified by this property.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.Splitter.MinSize"/>
   property is set to a
   negative value, the property value is reset
   to 0.
</note>
		</remarks>
		<example>
			<para>The following example uses a <see cref="System.Windows.Forms.Splitter"/>
control in combination with <see cref="System.Windows.Forms.TreeView"/> and <see cref="System.Windows.Forms.ListView"/> controls to create a window similar to Windows Explorer. To identify the <see cref="System.Windows.Forms.TreeView"/>
and <see cref="System.Windows.Forms.ListView"/> controls, nodes and items are added to
both controls. The example uses the <see cref="System.Windows.Forms.Splitter.MinExtra"/> and <see cref="System.Windows.Forms.Splitter.MinSize"/> properties of the <see cref="System.Windows.Forms.Splitter"/>
to prevent the <see cref="System.Windows.Forms.TreeView"/> or <see cref="System.Windows.Forms.ListView"/> control from being sized
too small or too large. This example assumes that the method created in this
example is defined within a <see cref="System.Windows.Forms.Form"/> and that the method is called from the
constructor of the <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Splitter Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Splitter.MinExtra"/>
	</doc>
	<doc for="Splitter.SplitPosition">
		<summary>
			<para>Gets or sets the distance between the splitter control and the container
      edge that the control is docked to. </para>
		</summary>
		<value>
			<para>The distance, in pixels, between the
   <see cref="System.Windows.Forms.Splitter"/>
   control and the container edge that the control is docked to. If the
<see cref="System.Windows.Forms.Splitter"/> 
control is not bound to a control, the value is -1.</para>
		</value>
		<remarks>
			<para>For a horizontal <see cref="System.Windows.Forms.Splitter"/> control (a <see cref="System.Windows.Forms.Splitter"/> control docked to the top
   or bottom of a container), this value is the height of the resizable control.
   For a vertical <see cref="System.Windows.Forms.Splitter"/> control (a <see cref="System.Windows.Forms.Splitter"/> control docked
   to the left or right of a container), this value is the width of the resizable
   control. You can use the <see cref="System.Windows.Forms.Splitter.SplitPosition"/>
   property in an event handler for the <see cref="System.Windows.Forms.Splitter.SplitterMoved"/> or <see cref="System.Windows.Forms.Splitter.SplitterMoving"/> events to determine the size of the
   control that the <see cref="System.Windows.Forms.Splitter"/>
   control is docked to and limit its width to a specified maximum
   width (or height if a horizontally docked <see cref="System.Windows.Forms.Splitter"/>
   control).</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Splitter.SplitterMoved"/>
		<seealso cref="System.Windows.Forms.Splitter.SplitterMoving"/>
	</doc>
	<doc for="Splitter.SplitterMoving">
		<summary>
			<para>Occurs when the splitter control is in the process of moving.</para>
		</summary>
		<remarks>
			<para>You can create an event handler for the <see cref="System.Windows.Forms.Splitter.SplitterMoving"/> event to perform resize validation in your
   application. For example, if a <see cref="System.Windows.Forms.Splitter"/> control is docked to the edges of a
<see cref="System.Windows.Forms.TreeView"/> control and a <see cref="System.Windows.Forms.ListView"/> 
control, you can write code in the <see cref="System.Windows.Forms.Splitter.SplitterMoved"/> event to determine if
the minimum and/or maximum size for the <see cref="System.Windows.Forms.TreeView"/> and <see cref="System.Windows.Forms.ListView"/>
controls has been exceeded and restrict the resizing of the controls to their
minimum or maximum size.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Splitter.OnSplitterMoving"/>
		<seealso cref="System.Windows.Forms.SplitterEventArgs"/>
		<seealso cref="System.Windows.Forms.SplitterEventHandler"/>
		<seealso cref="System.Windows.Forms.Splitter.SplitterMoved"/>
	</doc>
	<doc for="Splitter.SplitterMoved">
		<summary>
			<para>Occurs when the splitter control is moved.</para>
		</summary>
		<remarks>
			<para>You can create an event handler for the <see cref="System.Windows.Forms.Splitter.SplitterMoved"/> event to perform resize validation in your
   application. For example, if a <see cref="System.Windows.Forms.Splitter"/> control is docked to the edges of a
<see cref="System.Windows.Forms.TreeView"/> control and a <see cref="System.Windows.Forms.ListView"/> 
control, you can write code in the <see cref="System.Windows.Forms.Splitter.SplitterMoved"/> event to determine if
the minimum and/or maximum size for the <see cref="System.Windows.Forms.TreeView"/> and <see cref="System.Windows.Forms.ListView"/>
controls has been exceeded and resize the controls to their minimum or maximum
size.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Splitter.OnSplitterMoved"/>
		<seealso cref="System.Windows.Forms.SplitterEventArgs"/>
		<seealso cref="System.Windows.Forms.SplitterEventHandler"/>
		<seealso cref="System.Windows.Forms.Splitter.SplitterMoving"/>
	</doc>
	<doc for="Splitter.ForeColorChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Splitter.BackgroundImageChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Splitter.FontChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Splitter.ImeModeChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Splitter.TabStopChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Splitter.TextChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Splitter">
		<summary>
			<para> Represents a splitter control that allows the user to resize docked
      controls.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.Splitter"/> control enables you to resize controls
   that are docked to the edges of the <see cref="System.Windows.Forms.Splitter"/> control at run
   time. When the user passes the mouse pointer over the <see cref="System.Windows.Forms.Splitter"/> control, the cursor changes to indicate
   that the controls docked to the <see cref="System.Windows.Forms.Splitter"/>
   control can be resized. The <see cref="System.Windows.Forms.Splitter"/> control
   enables the user to resize the docked control that is immediately before it in
   the docking order. Therefore, to enable the user to resize a docked control,
   dock the control you want the user to be able to resize to an edge of a
   container, and then dock a splitter to the same side of that container. For
   example, to create a window similar to Windows Explorer, add a <see cref="System.Windows.Forms.TreeView"/>
   control to a form and set its <see cref="System.Windows.Forms.Control.Dock"/> property to
<see langword="DockStyle.Left"/>. Add a <see cref="System.Windows.Forms.Splitter"/> control to the form and 
   set its <see cref="System.Windows.Forms.Control.Dock"/>property to <see langword="DockStyle.Left"/> as well. To complete
   the form layout, add a <see cref="System.Windows.Forms.ListView"/> control and set its
<see cref="System.Windows.Forms.Control.Dock"/> 
property to <see langword="DockStyle.Fill"/> to have the <see cref="System.Windows.Forms.ListView"/> occupy
the remaining space on the form. At run time, the user can then resize the
width of the <see cref="System.Windows.Forms.TreeView"/> control (as well as the <see cref="System.Windows.Forms.ListView"/>
control) by moving the <see cref="System.Windows.Forms.Splitter"/> control.</para>
			<para>To ensure that the <see cref="System.Windows.Forms.Splitter"/> control does not resize
controls docked to a size that is too small to be useful to the user, you use
the <see cref="System.Windows.Forms.Splitter.MinExtra"/> and <see cref="System.Windows.Forms.Splitter.MinSize"/> properties. The <see cref="System.Windows.Forms.Splitter.MinExtra"/> and <see cref="System.Windows.Forms.Splitter.MinSize"/> properties determine the minimum size
that controls docked to the left and right (or top and bottom if a horizontal
<see cref="System.Windows.Forms.Splitter"/> control) can 
be sized to. If the other controls on your form that the <see cref="System.Windows.Forms.Splitter"/>
control is docked to display a specific style of border, you can use the <see cref="System.Windows.Forms.Splitter.BorderStyle"/> property to match the border style of the
controls that are docked to it.</para>
			<para>You might find it desirable to set a maximum size limit on controls that the
<see cref="System.Windows.Forms.Splitter"/> control is docked to. The <see cref="System.Windows.Forms.Splitter.SplitterMoved"/> and <see cref="System.Windows.Forms.Splitter.SplitterMoving"/> events enable you to determine when the 
   user is resizing a docked control. You can use the <see cref="System.Windows.Forms.Splitter.SplitPosition"/> property in an event handler for the
<see cref="System.Windows.Forms.Splitter.SplitterMoved"/> or 
<see cref="System.Windows.Forms.Splitter.SplitterMoving"/> 
events to determine the size of the control that the <see cref="System.Windows.Forms.Splitter"/> control is docked to and set the <see cref="System.Windows.Forms.Splitter.SplitPosition"/> property to a different value to limit the
docked control's width to a specified maximum width (or height if a horizontally
aligned <see cref="System.Windows.Forms.Splitter"/> control).</para>
			<note type="note">
   Resizing a control using the <see cref="System.Windows.Forms.Splitter"/> control
   can only be done using the mouse. It is not possible to access the <see cref="System.Windows.Forms.Splitter"/> control
   
   using the keyboard.
   
</note>
		</remarks>
		<example>
			<para>The following example uses a <see cref="System.Windows.Forms.Splitter"/>
control in combination with <see cref="System.Windows.Forms.TreeView"/> and <see cref="System.Windows.Forms.ListView"/> controls to create a window similar to Windows Explorer. To identify the <see cref="System.Windows.Forms.TreeView"/>
and <see cref="System.Windows.Forms.ListView"/> controls, nodes and items are added to
both controls. The example uses the <see cref="System.Windows.Forms.Splitter.MinExtra"/> and <see cref="System.Windows.Forms.Splitter.MinSize"/> properties of the <see cref="System.Windows.Forms.Splitter"/>
to prevent the <see cref="System.Windows.Forms.TreeView"/> or <see cref="System.Windows.Forms.ListView"/> control from being sized
too small or too large. This example assumes that the method created in this
example is defined within a <see cref="System.Windows.Forms.Form"/> and that the method is called from the
constructor of the <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Splitter Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView"/>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc>
</docs>
