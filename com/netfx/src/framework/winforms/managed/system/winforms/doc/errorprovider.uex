<docs>
	<doc for="ErrorProvider.ErrorProvider1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ErrorProvider"/>
class attached to a container.</para>
		</summary>
		<param name="parentControl">The container of the control to monitor for errors.</param>
		<remarks>
   The <see cref="System.Windows.Forms.Control"/> specified by <see cref="System.Windows.Forms.ErrorProvider.ContainerControl"/> is the container object for
   the data-bound controls to associate the error provider with.
</remarks>
	</doc>
	<doc for="ErrorProvider.ShouldPersistContainerControl">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.ErrorProvider.ContainerControl"/> property 
    should be persisted.</para>
		</summary>
		<returns>
			<para>Always <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="ErrorProvider.DefaultIcon">
		<summary>
     Demand load and cache the default icon.
 </summary>
	</doc>
	<doc for="ErrorProvider.Region">
		<summary>
     Create the icon region on demand.
 </summary>
	</doc>
	<doc for="ErrorProvider.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by the <see cref="System.Windows.Forms.ErrorProvider"/>.</para>
		</summary>
		<remarks>
			<para>Call <see cref="System.Windows.Forms.ErrorProvider.Dispose"/> when you are finished using the
   <see cref="System.Windows.Forms.ErrorProvider"/>. The <see cref="System.Windows.Forms.ErrorProvider.Dispose"/> method leaves
   the <see cref="System.Windows.Forms.ErrorProvider"/> in an unusable state. After calling <see cref="System.Windows.Forms.ErrorProvider.Dispose"/>, you must release all references
   to the <see cref="System.Windows.Forms.ErrorProvider"/> so the memory it was occupying can be reclaimed
   by garbage collection. </para>
			<note type="note">
   Always call <see cref="System.Windows.Forms.ErrorProvider.Dispose"/> before you release your last
   reference to the <see cref="System.Windows.Forms.ErrorProvider"/>. Otherwise, the resources the <see cref="System.Windows.Forms.ErrorProvider"/>
   is using will not be freed until garbage collection calls the <see cref="System.Windows.Forms.ErrorProvider"/>
   object's destructor.
   </note>
		</remarks>
	</doc>
	<doc for="ErrorProvider.DisposeRegion">
		<summary>
     Helper to dispose the cached icon region.
 </summary>
	</doc>
	<doc for="ErrorProvider.EnsureControlItem">
		<summary>
     Helper to make sure we have allocated a control item for this control.
 </summary>
	</doc>
	<doc for="ErrorProvider.EnsureErrorWindow">
		<summary>
     Helper to make sure we have allocated an error window for this control.
 </summary>
	</doc>
	<doc for="ErrorProvider.GetError">
		<summary>
			<para>Returns the current error description string for the 
      specified control.</para>
		</summary>
		<param name="control">The item to get the error description string for.</param>
		<returns>
			<para>The error description string for the specified 
      control.</para>
		</returns>
		<seealso cref="System.Windows.Forms.ErrorProvider.SetError"/>
	</doc>
	<doc for="ErrorProvider.ErrorWindow">
		<summary>
     There is one ErrorWindow for each control parent.  It is parented to the
     control parent.  The window's region is made up of the regions from icons
     of all child icons.  The window's size is the enclosing rectangle for all
     the regions.  A tooltip window is created as a child of this window.  The
     rectangle associated with each error icon being displayed is added as a
     tool to the tooltip window.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.ErrorWindow">
		<summary>
     Construct an error window for this provider and control parent.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.Add">
		<summary>
     This is called when a control would like to show an error icon.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.Dispose">
		<summary>
     Called to get rid of any resources the Object may have.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.EnsureCreated">
		<summary>
     Make sure the error window is created, and the tooltip window is created.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.EnsureDestroyed">
		<summary>
     Destroy the timer, toolwindow, and the error window itself.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.OnPaint">
		<summary>
     This is called when the error window needs to paint.  We paint each icon at it's
     correct location.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.OnTimer">
		<summary>
     This is called when an error icon is flashing, and the view needs to be updatd.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.Remove">
		<summary>
     This is called when a control no longer needs to display an error icon.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.StartBlinking">
		<summary>
     Start the blinking process.  The timer will fire until there are no more
     icons that need to blink.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.Update">
		<summary>
     Move and size the error window, compute and set the window region,
     set the tooltip rectangles and descriptions.  This basically brings
     the error window up to date with the internal data structures.
 </summary>
	</doc>
	<doc for="ErrorProvider.ErrorWindow.WndProc">
		<summary>
     Called when the error window gets a windows message.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem">
		<summary>
     There is one ControlItem for each control that the ErrorProvider is
     is tracking state for.  It contains the values of all the extender
     properties.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.ControlItem">
		<summary>
     Construct the item with it's associated control, provider, and
     a unique ID.  The ID is used for the tooltip ID.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.Control">
		<summary>
     Return the control being extended.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.Id">
		<summary>
     Returns the unique ID for this control.  The ID used as the tooltip ID.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.BlinkPhase">
		<summary>
     Returns or set the phase of blinking that this control is currently
     in.   If zero, the control is not blinking.  If odd, then the control
     is blinking, but invisible.  If even, the control is blinking and
     currently visible.  Each time the blink timer fires, this value is
     reduced by one (until zero), thus causing the error icon to appear
     or disappear.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.IconPadding">
		<summary>
     Returns or sets the icon padding for the control.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.Error">
		<summary>
     Returns or sets the error description string for the control.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.IconAlignment">
		<summary>
     Returns or sets the location of the error icon for the control.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.GetIconBounds">
		<summary>
     Returns the location of the icon in the same coordinate system as
     the control being extended.  The size passed in is the size of
     the icon.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.UpdateWindow">
		<summary>
     If this control's error icon has been added to the error
     window, then update the window state because some property
     has changed.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.StartBlinking">
		<summary>
     If this control's error icon has been added to the error
     window, then start blinking the error window.  The blink
     count
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.AddToWindow">
		<summary>
     Add this control's error icon to the error window.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.RemoveFromWindow">
		<summary>
     Remove this control's error icon from the error window.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.OnBoundsChanged">
		<summary>
     This is called when a property on the control is changed.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.OnCreateHandle">
		<summary>
     This is called when the control's handle is created.
 </summary>
	</doc>
	<doc for="ErrorProvider.ControlItem.OnDestroyHandle">
		<summary>
     This is called when the control's handle is destroyed.
 </summary>
	</doc>
	<doc for="ErrorProvider.IconRegion">
		<summary>
     This represents the HRGN of icon.  The region is calculate from the icon's mask.
 </summary>
	</doc>
	<doc for="ErrorProvider.IconRegion.IconRegion">
		<summary>
     Constructor that takes an Icon and extracts it's 16x16 version.
 </summary>
	</doc>
	<doc for="ErrorProvider.IconRegion.IconHandle">
		<summary>
     Returns the handle of the icon.
 </summary>
	</doc>
	<doc for="ErrorProvider.IconRegion.Region">
		<summary>
     Returns the handle of the region.
 </summary>
	</doc>
	<doc for="ErrorProvider.IconRegion.Size">
		<summary>
     Return the size of the icon.
 </summary>
	</doc>
	<doc for="ErrorProvider.IconRegion.Dispose">
		<summary>
     Release any resources held by this Object.
 </summary>
	</doc>
	<doc for="ErrorProvider.ContainerControl">
		<summary>
			<para>Gets or sets a value indicating the parent control for
      this <see cref="System.Windows.Forms.ErrorProvider"/> .</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.ContainerControl"/> that contains the controls
   that the <see cref="System.Windows.Forms.ErrorProvider"/>
   is attached to.</para>
		</value>
		<remarks>
			<para> Typically, this is the <see cref="System.Windows.Forms.Form"/> the data-bound controls reside on.</para>
		</remarks>
	</doc>
	<doc for="ErrorProvider.ShouldPersistDataSource">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if
   the <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> is not <see langword="null"/> ;
   otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="ErrorProvider.ShouldPersistDataMember">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
   from its default; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="ErrorProvider.UpdateBinding">
		<summary>
			<para>Provides a method to update the bindings of the <see cref="System.Windows.Forms.ErrorProvider.DataSource"/>, <see cref="System.Windows.Forms.ErrorProvider.DataMember"/>, and the error text.</para>
		</summary>
		<remarks>
			<para>Typically, you call this method after you have called
   <see cref="System.Windows.Forms.ErrorProvider.BindToDataAndErrors"/>.</para>
		</remarks>
	</doc>
	<doc for="ErrorProvider.CanExtend">
		<summary>
			<para>Gets a value indicating whether a control can be extended.</para>
		</summary>
		<param name="extendee">The control to be extended.</param>
		<returns>
			<para>
				<see langword="true"/> if the control can be extended; otherwise,
<see langword="false"/>.</para>
			<para>This property will be <see langword="true"/> if the object is a <see cref="System.Windows.Forms.Control"/> and is not a <see cref="System.Windows.Forms.Form"/> or
<see cref="System.Windows.Forms.ToolBar"/>.</para>
		</returns>
		<remarks>
			<para>Typically, you will use <see cref="System.Windows.Forms.ErrorProvider.CanExtend"/> to determine whether you can attach
   an <see cref="System.Windows.Forms.ErrorProvider"/> to the specified control.</para>
		</remarks>
	</doc>
	<doc for="ErrorProvider.Site">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ErrorProvider.public override ISite Site {">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ErrorProvider.ErrorProvider">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ErrorProvider"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ErrorProvider"/> class and initializes the default settings
   for <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/>, <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/>, and the <see cref="System.Windows.Forms.ErrorProvider.Icon"/> .</para>
		</summary>
		<remarks>
			<para>The following table shows initial property values for an instance of <see cref="System.Windows.Forms.ErrorProvider"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Windows.Forms.ErrorProvider.Icon"/></term>
					<description> An 
         icon that consists of an exclamation point in a circle with a red
         background. </description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/></term>
					<description> 250</description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/></term>
					<description><see cref="System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError"/></description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="ErrorProvider.Icon">
		<summary>
			<para>Gets or sets the <see cref="System.Drawing.Icon"/> that
   is displayed next to a control when
   an error description string has been set for the control.</para>
		</summary>
		<value>
			<para>An <see cref="System.Drawing.Icon"/> 
that signals an error has occurred. The default icon consists of an
exclamation point in a circle with a red background.</para>
		</value>
		<exception cref="T:System.ArgumentNullException">The assigned value of the <see cref="System.Drawing.Icon"/> is <see langword="null"/> .</exception>
		<remarks>
			<para> For best results, using an icon of the
      size 16 by 16 pixels. If the specified icon is not 16 by 16, it is resized to
      16 by 16.</para>
		</remarks>
		<seealso cref="System.Drawing.Icon"/>
	</doc>
	<doc for="ErrorProvider.GetIconAlignment">
		<summary>
			<para>Gets a value indicating where the error icon should be placed in relation to the control.</para>
		</summary>
		<param name="control">The control to get the icon location for.</param>
		<returns>
			<para>One of the <see cref="System.Windows.Forms.ErrorIconAlignment"/> values. The default icon alignment is 
<see cref="System.Windows.Forms.ErrorIconAlignment.MiddleRight"/> .</para>
		</returns>
		<seealso cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/>
		<seealso cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/>
	</doc>
	<doc for="ErrorProvider.GetIconPadding">
		<summary>
			<para>Returns the amount of extra space to leave next to the error icon.</para>
		</summary>
		<param name="control">The control to get the padding for.</param>
		<returns>
			<para> The number of pixels to leave between the icon and the control. Many icons normally have extra space around their
      central images, so the padding value is only necessary if additional space
      is necessary. Padding values can be positive or negative. Negative values
      cause the icon to overlap the edge of the control. The default icon padding is 0.</para>
		</returns>
		<seealso cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/>
	</doc>
	<doc for="ErrorProvider.BindToDataAndErrors">
		<summary>
			<para> Provides a method to set both the <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/>
at run time.</para>
		</summary>
		<param name="newDataSource">A data set based on the <see cref="System.Collections.IList"/> interface to be monitored for errors. Typically, this is a <see cref="System.Data.DataSet"/> to be monitored for errors.</param>
		<param name=" newDataMember">A collection within the <paramref name="newDataSource"/> to monitor for errors. Typically, this will be a <see cref="System.Data.DataTable"/>.</param>
		<remarks>
			<para>To avoid conflicts at run time that can occur when
      changing <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/>
      , you should use <see cref="System.Windows.Forms.ErrorProvider.BindToDataAndErrors"/> instead of setting <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/>
      individually.</para>
		</remarks>
	</doc>
	<doc for="ErrorProvider.DataSource">
		<summary>
			<para>Gets or sets the data set the <see cref="System.Windows.Forms.ErrorProvider"/> monitors.</para>
		</summary>
		<value>
			<para>A data set based on the <see cref="System.Collections.IList"/> interface to be monitored
   for errors. Typically, this is a <see cref="System.Data.DataSet"/> to be monitored for errors.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> is a <see cref="System.Data.DataSet"/> containing tables with the fields that you can
   attach to a control and that you want to monitor for errors. <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> can be set to any collection
   that implements <see cref="System.Collections.IList"/>.</para>
			<para>To avoid conflicts at run time that can occur when changing <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> , you should use <see cref="System.Windows.Forms.ErrorProvider.BindToDataAndErrors"/> instead of setting <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> individually.</para>
		</remarks>
		<example>
			<para>The following example shows how to use the <see cref="System.Windows.Forms.ErrorProvider"/> with a <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> to indicate a data error to the 
   user.</para>
			<codelink SampleID="Classic ErrorProvider Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ErrorProvider.DataMember"/>
		<seealso cref="System.Collections.IList"/>
	</doc>
	<doc for="ErrorProvider.DataMember">
		<summary>
			<para>Gets or sets the data table to monitor.</para>
		</summary>
		<value>
			<para>The string that represents a data table within
      the data set specified by the <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> to be monitored.
      Typically, this will be a <see cref="System.Data.DataTable"/> .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> is a navigation string based on <see cref="System.Windows.Forms.ErrorProvider.DataSource"/>.</para>
			<para>To avoid conflicts at run time that can occur when changing <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> , you should use <see cref="System.Windows.Forms.ErrorProvider.BindToDataAndErrors"/> instead of setting <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> individually.</para>
		</remarks>
		<example>
			<para>The following example shows how to use the <see cref="System.Windows.Forms.ErrorProvider"/> with a <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> to indicate a data error to the 
   user.</para>
			<codelink SampleID="Classic ErrorProvider Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ErrorProvider.BlinkRate">
		<summary>
			<para> Gets or sets the rate at which the error icon flashes.</para>
		</summary>
		<value>
			<para> The rate at which the error icon should flash. The rate is expressed in milliseconds. The default is 250 milliseconds.</para>
		</value>
		<exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
		<remarks>
			<para> The error icon flashes at the specified rate. A
      value of zero sets <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> to <see cref="System.Windows.Forms.ErrorBlinkStyle.NeverBlink"/> . </para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see cref="System.Windows.Forms.ErrorProvider"/> class to notify the user of a data entry
   error. The example creates a <see cref="System.Windows.Forms.Form"/> that contains a <see cref="System.Windows.Forms.TextBox"/>
   control, a <see cref="System.Windows.Forms.NumericUpDown"/> control, and a <see cref="System.Windows.Forms.ComboBox"/>
   control, each validating its content, and an <see cref="System.Windows.Forms.ErrorProvider"/> for each control. The example sets error
   icon options using the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> and <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> properties and the <see cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/> and <see cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/> methods. The <see cref="System.Windows.Forms.ErrorProvider.SetError"/> method is called with or without
   appropriate error text during a control's <see cref="System.Windows.Forms.Control.Validated"/>
   event, depending upon the content in the control.</para>
			<codelink SampleID="System.Windows.Forms.ErrorProvider" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/>
	</doc>
	<doc for="ErrorProvider">
		<summary>
			<para>Provides a user interface for indicating that a control on a
      form has an error associated with it. </para>
		</summary>
		<remarks>
			<para><see cref="System.Windows.Forms.ErrorProvider"/> presents a simple mechanism for
   indicating to the end user that a control on a form has an error associated with it. If
   an error description string is specified for the control, an icon appears
   next to the control. The icon flashes in the manner specified by <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/>, at the rate specified by <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/>
   
   . When the mouse hovers over the icon, a ToolTip appears
   showing the error description string.</para>
			<para> Typically, you use <see cref="System.Windows.Forms.ErrorProvider"/> in association with data-bound controls.
When using <see cref="System.Windows.Forms.ErrorProvider"/>
with data-bound controls, you
must specify the <see cref="System.Windows.Forms.ErrorProvider.ContainerControl"/>, either
in the constructor or by setting the <see cref="System.Windows.Forms.ErrorProvider.ContainerControl"/> property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see cref="System.Windows.Forms.ErrorProvider"/> class to notify the user of a data entry
   error. The example creates a <see cref="System.Windows.Forms.Form"/> that contains a <see cref="System.Windows.Forms.TextBox"/>
   control, a <see cref="System.Windows.Forms.NumericUpDown"/> control, and a <see cref="System.Windows.Forms.ComboBox"/>
   control, each validating its content, and an <see cref="System.Windows.Forms.ErrorProvider"/> for each control. The example sets error
   icon options using the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> and <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> properties and the <see cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/> and <see cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/> methods. The <see cref="System.Windows.Forms.ErrorProvider.SetError"/> method is called with or without
   appropriate error text during a control’s <see cref="System.Windows.Forms.Control.Validated"/>
   event, depending upon the content in the control.</para>
			<codelink SampleID="System.Windows.Forms.ErrorProvider" SnippetID="1"/>
			<para>The following example shows how to use the <see cref="System.Windows.Forms.ErrorProvider"/> with a <see cref="System.Windows.Forms.ErrorProvider.DataSource"/> and <see cref="System.Windows.Forms.ErrorProvider.DataMember"/> to indicate a data error to the 
user.</para>
			<codelink SampleID="Classic ErrorProvider Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ErrorProvider.BlinkStyle">
		<summary>
			<para> Gets or sets a value indicating when the error icon flashes.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ErrorBlinkStyle"/> values. The default is <see cref="System.Windows.Forms.ErrorBlinkStyle.BlinkIfDifferentError"/> .</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Windows.Forms.ErrorBlinkStyle"/> values.</exception>
		<remarks>
			<para>The error icon flashes in the manner specified by
      the assigned <see cref="System.Windows.Forms.ErrorBlinkStyle"/> when an error
      occurs. Setting the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> to zero sets
      the <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> to <see cref="System.Windows.Forms.ErrorBlinkStyle.NeverBlink"/> .</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see cref="System.Windows.Forms.ErrorProvider"/> class to notify the user of a data entry
   error. The example creates a <see cref="System.Windows.Forms.Form"/> that contains a <see cref="System.Windows.Forms.TextBox"/>
   control, a <see cref="System.Windows.Forms.NumericUpDown"/> control, and a <see cref="System.Windows.Forms.ComboBox"/>
   control, each validating its content, and an <see cref="System.Windows.Forms.ErrorProvider"/> for each control. The example sets error
   icon options using the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> and <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> properties and the <see cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/> and <see cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/> methods. The <see cref="System.Windows.Forms.ErrorProvider.SetError"/> method is called with or without
   appropriate error text during a control's <see cref="System.Windows.Forms.Control.Validated"/>
   event, depending upon the content in the control.</para>
			<codelink SampleID="System.Windows.Forms.ErrorProvider" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ErrorBlinkStyle"/>
		<seealso cref="System.Windows.Forms.ErrorProvider.BlinkRate"/>
	</doc>
	<doc for="ErrorProvider.SetError">
		<summary>
			<para>Sets the error description string for the specified control.</para>
		</summary>
		<param name="control">The control to set the error description string for.</param>
		<param name="value">The error description string.</param>
		<remarks>
			<para> If the string length is greater than zero, then the error icon is
      displayed, and the ToolTip for the error icon is the error description text. If the
      string length is zero, the error icon is hidden.</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see cref="System.Windows.Forms.ErrorProvider"/> class to notify the user of a data entry
   error. The example creates a <see cref="System.Windows.Forms.Form"/> that contains a <see cref="System.Windows.Forms.TextBox"/>
   control, a <see cref="System.Windows.Forms.NumericUpDown"/> control, and a <see cref="System.Windows.Forms.ComboBox"/>
   control, each validating its content, and an <see cref="System.Windows.Forms.ErrorProvider"/> for each control. The example sets error
   icon options using the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> and <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> properties and the <see cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/> and <see cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/> methods. The <see cref="System.Windows.Forms.ErrorProvider.SetError"/> method is called with or without
   appropriate error text during a control's <see cref="System.Windows.Forms.Control.Validated"/>
   event, depending upon the content in the control.</para>
			<codelink SampleID="System.Windows.Forms.ErrorProvider" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ErrorProvider.GetError"/>
	</doc>
	<doc for="ErrorProvider.SetIconAlignment">
		<summary>
			<para>Sets the location where the error icon should be placed in relation to the control.</para>
		</summary>
		<param name="control">The control to set the icon location for.</param>
		<param name="value">One of the <see cref="System.Windows.Forms.ErrorIconAlignment"/> values.</param>
		<remarks>
			<para>The final placement of the icon is modified by the icon
      padding values.</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see cref="System.Windows.Forms.ErrorProvider"/> class to notify the user of a data entry
   error. The example creates a <see cref="System.Windows.Forms.Form"/> that contains a <see cref="System.Windows.Forms.TextBox"/>
   control, a <see cref="System.Windows.Forms.NumericUpDown"/> control, and a <see cref="System.Windows.Forms.ComboBox"/>
   control, each validating its content, and an <see cref="System.Windows.Forms.ErrorProvider"/> for each control. The example sets error
   icon options using the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> and <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> properties and the <see cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/> and <see cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/> methods. The <see cref="System.Windows.Forms.ErrorProvider.SetError"/> method is called with or without
   appropriate error text during a control's <see cref="System.Windows.Forms.Control.Validated"/>
   event, depending upon the content in the control.</para>
			<codelink SampleID="System.Windows.Forms.ErrorProvider" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ErrorProvider.GetIconAlignment"/>
		<seealso cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/>
	</doc>
	<doc for="ErrorProvider.SetIconPadding">
		<summary>
			<para>Sets the amount of extra space to leave between the specified control and the error icon.</para>
		</summary>
		<param name="control">The <paramref name="control"/> to set the padding for.</param>
		<param name="padding">The number of pixels to add between the icon and the <paramref name="control"/> .</param>
		<remarks>
			<para> Many icons normally have extra space around their central images,
      so the padding value is only necessary when additional space is necessary. Padding
      values can be positive or negative. Negative values cause the icon
      to overlap the edge of the control.</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see cref="System.Windows.Forms.ErrorProvider"/> class to notify the user of a data entry
   error. The example creates a <see cref="System.Windows.Forms.Form"/> that contains a <see cref="System.Windows.Forms.TextBox"/>
   control, a <see cref="System.Windows.Forms.NumericUpDown"/> control, and a <see cref="System.Windows.Forms.ComboBox"/>
   control, each validating its content, and an <see cref="System.Windows.Forms.ErrorProvider"/> for each control. The example sets error
   icon options using the <see cref="System.Windows.Forms.ErrorProvider.BlinkRate"/> and <see cref="System.Windows.Forms.ErrorProvider.BlinkStyle"/> properties and the <see cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/> and <see cref="System.Windows.Forms.ErrorProvider.SetIconPadding"/> methods. The <see cref="System.Windows.Forms.ErrorProvider.SetError"/> method is called with or without
   appropriate error text during a control's <see cref="System.Windows.Forms.Control.Validated"/>
   event, depending upon the content in the control.</para>
			<codelink SampleID="System.Windows.Forms.ErrorProvider" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ErrorProvider.GetIconPadding"/>
		<seealso cref="System.Windows.Forms.ErrorProvider.SetIconAlignment"/>
	</doc>
</docs>
