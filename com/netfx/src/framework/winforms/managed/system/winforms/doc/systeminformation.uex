<docs>
	<doc for="SystemInformation.MouseWheelScrollLines">
		<summary>
			<para>
       Gets the number of lines to scroll when the mouse wheel is rotated.
    </para>
		</summary>
		<value>
			<para>
       The number of lines to scroll.
    </para>
		</value>
		<remarks>
			<para>
       Use this property to determine how many lines
       to increase or decrease in a control that has a scroll bar.
    </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.BorderSize">
		<summary>
			<para> Gets the width and
      height, in pixels, of a window border.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies the width and
   height of a window border in pixels.
   </para>
		</value>
		<remarks>
			<para> The <see cref="System.Windows.Forms.SystemInformation.BorderSize"/> property is the non-three-dimensional counterpart
   of the <see cref="System.Windows.Forms.SystemInformation.Border3DSize"/> property. Use this property
   when creating a control that has a border to determine the proper sizing of the
   border.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.Border3DSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.CaptionHeight">
		<summary>
			<para> Gets the height, in pixels, of the normal caption area of a window.
      </para>
		</summary>
		<value>
			<para> The height of the normal caption area of a window in pixels.
      </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.CaptionHeight"/> to determine the size of the standard
   window caption. You can also perform special display operations or add a caption
   button to the caption of a window.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.CursorSize">
		<summary>
			<para> Gets the dimensions, in pixels, of a cursor.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies the dimensions of
   a cursor in pixels.
   </para>
		</value>
		<remarks>
			<para> The system cannot create cursors of other sizes.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.DragFullWindows">
		<summary>
			<para> Gets a value indicating whether the user has enabled full window drag.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the user has enabled full
   window drag; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> When this property is <see langword="true"/>
, the contents of windows are displayed when moving and sizing.
</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.FixedFrameBorderSize">
		<summary>
			<para> Gets the thickness, in pixels, of the border for a window that has a caption
      and is not resizable.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the size, in pixels, of a fixed sized window border.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.FrameBorderSize">
		<summary>
			<para> Gets the thickness, in pixels, of the border for a window that can be resized.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the thickness,
   in pixels, of the border for a window that can be resized.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.HighContrast">
		<summary>
			<para> Gets a value indicating whether the user has selected to run in high-contrast
      mode.
      </para>
		</summary>
		<value>
			<para><see langword="true "/> if the user has enabled
   high-contrast mode; otherwise, <see langword="false"/>.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.HorizontalScrollBarHeight">
		<summary>
			<para> Gets the height, in pixels, of the horizontal scroll bar.
      </para>
		</summary>
		<value>
			<para> The height,
      in pixels, of a horizontal scroll bar.
      </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarArrowWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarArrowHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight"/>
	</doc><doc for="SystemInformation.HorizontalScrollBarArrowWidth">
		<summary>
			<para> Gets the width, in pixels, of the arrow bitmap on the horizontal scroll bar.
      </para>
		</summary>
		<value>
			<para> The width, in pixels, of a horizontal scroll bar arrow.
      </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarArrowHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight"/>
	</doc><doc for="SystemInformation.HorizontalScrollBarThumbWidth">
		<summary>
			<para>Gets the width, in pixels, of the scroll box in a horizontal scroll bar.</para>
		</summary>
		<value>
			<para>The width, in pixels, of the scroll box in a horizontal scroll bar.</para>
		</value>
		<remarks>
			<para>Use <see cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth"/> to determine the width of the scroll box used
   to indicate scroll bar position and to drag the scroll bar to a new position.
   The scroll box is also called the thumb.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarArrowWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarArrowHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.IconSize">
		<summary>
			<para> Gets the default dimensions, in pixels, of an icon.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies the default dimensions of
   an icon in pixels.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.IconSize"/> 
to determine the Windows default icon size. This property determines
whether the size of icons displayed in your applications are consistent with
icons displayed in Windows.
</para>
			<para> 
   The icon size returned by this property represents the icon
   size for large icons.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
		<seealso cref="System.Windows.Forms.SystemInformation.IconSize"/>
	</doc><doc for="SystemInformation.MenuCheckSize">
		<summary>
			<para> Gets the dimensions,
      in pixels, of the default size of a menu check mark.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that 
   specifies
   the default size
   of a menu check mark in pixels.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.MenuCheckSize"/> to determine the size of the image used by
   Windows to display a check mark next to a selected menu item.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.MenuHeight">
		<summary>
			<para> Gets the height of one line of a menu in pixels.
      </para>
		</summary>
		<value>
			<para> The height of one line of a menu in pixels.
      </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.MenuHeight"/> to determine the height that is currently
   defined by Windows for a menu bar.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.MidEastEnabled">
		<summary>
			<para> Gets a value indicating
      whether the operating system is enabled for Hebrew and Arabic languages.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the operating system is enabled for
   Hebrew or Arabic; otherwise, <see langword="false"/>.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.MinimizedWindowSize">
		<summary>
			<para> Gets the dimensions, in pixels, of a normal minimized window.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies
   the dimensions of a normal minimized window.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.MouseButtons">
		<summary>
			<para> Gets the number of buttons on the mouse.
      </para>
		</summary>
		<value>
			<para> The number of buttons on the mouse,
      or zero if no mouse is installed.
      </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.MouseButtons"/> to determine the number 
   of mouse buttons that your application can support. You can also
   use <see cref="System.Windows.Forms.SystemInformation.MouseButtons"/>
   
   to provide additional functionality if more than two
   buttons are available.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.MousePresent"/>
		<seealso cref="System.Windows.Forms.SystemInformation.MouseButtonsSwapped"/>
	</doc><doc for="SystemInformation.PrimaryMonitorSize">
		<summary>
			<para> Gets the dimensions, in pixels, of the primary display monitor.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies the dimensions of the primary monitor in pixels.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.PrimaryMonitorMaximizedWindowSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.ShowSounds">
		<summary>
			<para> Gets a value indicating whether the user requires an application to present information
      in visual form in situations when it would present the
      information in audible form.
      </para>
		</summary>
		<value>
			<para><see langword="true "/> if the application can visually
   show audible output; <see langword="false "/>
   if the application can freely use audio.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.ShowSounds"/> to determine whether the application can
   play sounds and other audio outputs or whether the audio needs to be visually
   shown. This property can help provide accessibility to your application.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.SmallIconSize">
		<summary>
			<para> Gets
      the recommended dimensions, in pixels, of a small icon.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the dimensions
   of a small icon in pixels.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.SmallIconSize"/> to determine the size of small icons in
   Windows. Small icons typically appear in window captions and in the Small Icon
   view in Windows Explorer.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.ToolWindowCaptionButtonSize">
		<summary>
			<para> Gets the
      dimensions, in pixels, of small caption buttons.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the dimensions
   of small caption buttons in pixels.
   </para>
		</value>
		<remarks>
			<para> Small captions are used in floating tool windows. Use
   <see cref="System.Windows.Forms.SystemInformation.ToolWindowCaptionButtonSize"/> to get the dimensions of the
      buttons placed in the caption of a tool window. You can use this property when
      adding your own custom
      buttons to the caption in a tool window.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.ToolWindowCaptionHeight">
		<summary>
			<para> Gets the height, in
      pixels, of a small caption.
      </para>
		</summary>
		<value>
			<para> The height
      of a small caption in pixels.
      </para>
		</value>
		<remarks>
			<para> Small captions are used in floating tool windows. Use
   <see cref="System.Windows.Forms.SystemInformation.ToolWindowCaptionHeight"/> to determine the height of a
      tool window caption in Windows. This property can assist in
      manipulating the caption area of a tool window.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.ToolWindowCaptionButtonSize"/>
	</doc><doc for="SystemInformation.VerticalScrollBarThumbHeight">
		<summary>
			<para>Gets the height, in pixels, of the scroll box in a vertical scroll bar.</para>
		</summary>
		<value>
			<para>The height of the scroll box
      in a vertical scroll bar in pixels.</para>
		</value>
		<remarks>
			<para>Use <see cref="System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight"/> to determine the height of the box used to
   indicate scroll bar position and to drag the scroll bar to a new position. The
   scroll box is also called the thumb.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarArrowWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarArrowHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarWidth"/>
	</doc><doc for="SystemInformation.VerticalScrollBarArrowHeight">
		<summary>
			<para> Gets the height, in pixels, of the arrow bitmap on the vertical scroll bar.
      </para>
		</summary>
		<value>
			<para> The height of a vertical scroll bar arrow.
      </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarArrowWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight"/>
	</doc><doc for="SystemInformation.VerticalScrollBarWidth">
		<summary>
			<para> Gets the width, in pixels, of the vertical scroll bar.
      </para>
		</summary>
		<value>
			<para> The width of a vertical scroll bar in pixels.
      </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarArrowWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarArrowHeight"/>
		<seealso cref="System.Windows.Forms.SystemInformation.HorizontalScrollBarThumbWidth"/>
		<seealso cref="System.Windows.Forms.SystemInformation.VerticalScrollBarThumbHeight"/>
	</doc><doc for="SystemInformation.WorkingArea">
		<summary>
			<para> Gets the size, in pixels, of the working area.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Rectangle"/> that represents
   the size of the working area in pixels.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.WorkingArea"/> to determine the bounds
   of the screen that can be used by applications. The working area is the portion
   of the screen not hidden by the operating system tray and other top-level windows
   that are docked to the Windows desktop.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Rectangle"/>
	</doc><doc for="SystemInformation.GetFolderPath">
		<summary>
			<para> Gets the path to a specific folder.</para>
		</summary>
		<param name="folder">A <see cref="System.Windows.Forms.SpecialFolder"/> that specifies the folder whose path you want to retrieve.</param>
		<returns>
			<para>A path for the specified folder.</para>
		</returns>
		<remarks>
			<para>Special folders are common locations, defined by Windows, that store various types of data. When calling this method, use the constants in the <see cref="System.Windows.Forms.SpecialFolder"/> enumeration to determine the folder to retrieve. The table below lists some of the more frequently accessed folders.</para>
			<list type="table">
				<listheader>
					<term>To find the path for</term>
					<description>Pass this as the parameter</description>
				</listheader>
				<item>
					<term> MyDocuments folder</term>
					<description><see langword="SpecialFolder.Personal"/></description>
				</item>
				<item>
					<term> Application data that is shared among all users</term>
					<description><see langword="SpecialFolder.CommonApplicationData"/></description>
				</item>
				<item>
					<term> Application data specific to the roaming user</term>
					<description><see langword="SpecialFolder.ApplicationData"/></description>
				</item>
				<item>
					<term> Application data specific to a local, non-roaming user</term>
					<description><see langword="SpecialFolder.LocalApplicationData "/></description>
				</item>
			</list>
			<note type="note">
   A roaming user works on more than one computer in a network. A roaming user's profile is kept on a server on the network and is loaded onto a system when the user logs on.
   
</note>
		</remarks>
		<permission cref="System.Security.Permissions.FileIOPermission">for reading and writing files. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Read" qualify="true"/></permission>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SpecialFolder"/>
	</doc><doc for="SystemInformation.ArrangeStartingPosition">
		<summary>
			<para>Gets flags specifying how the operating system arranges minimized windows.</para>
		</summary>
		<value>
			<para>An <see cref="System.Windows.Forms.ArrangeStartingPosition"/> that is
   a Boolean combination of <see cref="System.Windows.Forms.ArrangeStartingPosition"/> and <see cref="System.Windows.Forms.ArrangeDirection"/> values of the
   operating
   system.</para>
		</value>
		<remarks>
			<para>The value is a combination of one starting position value and one direction
      value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.ArrangeStartingPosition"/>
		<seealso cref="System.Windows.Forms.ArrangeStartingPosition"/>
		<seealso cref="System.Windows.Forms.ArrangeDirection"/>
		<seealso cref="System.Windows.Forms.SystemInformation.ArrangeDirection" qualify="true"/>
	</doc><doc for="SystemInformation.Border3DSize">
		<summary>
			<para> Gets the dimensions, in pixels, of a three-dimensional (3-D)
      border.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the
   dimensions of a 3-D border in pixels.
   </para>
		</value>
		<remarks>
			<para><see cref="System.Windows.Forms.SystemInformation.Border3DSize"/> is the three-dimensional counterpart of the <see cref="System.Windows.Forms.SystemInformation.BorderSize"/>.
   Use this property when creating a control that has a 3-D border to
   determine the proper sizing of the border.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.BorderSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.DoubleClickSize">
		<summary>
			<para> Gets the dimensions, in pixels, of
      the area within which the user must click for the operating system to consider
      the two clicks a double-click.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the dimensions, in pixels, of the area within which the user
   must click for the operating system to consider the two clicks a double-click.
   </para>
		</value>
		<remarks>
			<para>The rectangle is centered around the first click.</para>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.DoubleClickSize"/> to determine the height and width of
   the rectangle that Windows uses to determine whether the second click in a
   double-click sequence is in a valid location. The second click must occur within this
   rectangle for the operating system to consider the two clicks to be a double-click.
   The two clicks must also occur within a
   specified time range. See <see cref="System.Windows.Forms.SystemInformation.DoubleClickTime"/>.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.DoubleClickTime"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.DoubleClickTime">
		<summary>
			<para> Gets the maximum number of milliseconds allowed between mouse clicks for a double-click to be
      valid.
      </para>
		</summary>
		<value>
			<para> The maximum number of milliseconds
      allowed between mouse clicks for a double-click to be valid.
      </para>
		</value>
		<remarks>
			<para> A double-click is a series of two clicks of the mouse button, the
      second occurring within a specified length of time after the first. The
      double-click time is the maximum number of milliseconds that can occur between
      the first and second click of a double-click. For a double-click to be
      registered, it must also be within the same region. To determine this region,
      use <see cref="System.Windows.Forms.SystemInformation.DoubleClickSize"/>.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.DoubleClickSize"/>
	</doc><doc for="SystemInformation.DragSize">
		<summary>
			<para> Gets the dimensions, in pixels, of the rectangle that a drag operation must
      extend to be considered a drag operation. The rectangle is centered on a drag
      point.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that 
   specifies the rectangle, in pixels, that a drag operation must extend to be considered a drag operation.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.DragSize"/> to determine the size of the rectangle that Windows uses
   as a boundary before starting a drag operation. This rectangle allows
   limited movement before a drag operation begins, enabling the user to click and release
   the mouse button easily without unintentionally starting a drag operation.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.IconSpacingSize">
		<summary>
			<para> 
      Gets the dimensions, in pixels, of the grid
      used to arrange icons in a large-icon view.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> 
that specifies the dimensions, in pixels, of the grid used to arrange
icons in a large-icon view.
</para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.IconSpacingSize"/> to determine
   the grid that each icon fits into when you arrange them. This value is
   always greater than or equal to <see cref="System.Windows.Forms.SystemInformation.IconSize"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.IconSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.KanjiWindowHeight">
		<summary>
			<para> Gets
      the height, in pixels, of the Kanji window at the bottom
      of the screen for double-byte character set (DBCS) versions of Windows.
      </para>
		</summary>
		<value>
			<para> The height
      of the Kanji window in pixels.
      </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.KanjiWindowHeight"/> to determine
   the height of the Kanji window on operating systems that support DBCS.
   To determine whether the operating system supports DBCS, use the <see cref="System.Windows.Forms.SystemInformation.DbcsEnabled"/> property.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.DbcsEnabled"/>
	</doc><doc for="SystemInformation.MaxWindowTrackSize">
		<summary>
			<para> Gets the default maximum dimensions, in pixels, of a
      window that has a caption and sizing borders.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that 
   specifies the
   maximum size to which a window can be sized.
   </para>
		</value>
		<remarks>
			<para> The value returned by <see cref="System.Windows.Forms.SystemInformation.MaxWindowTrackSize"/>
refers to dimensions of the entire desktop. The user cannot drag the window
frame to a size larger than these dimensions. A <see cref="System.Windows.Forms.Form"/> can override this value by
overriding the <see cref="System.Windows.Forms.Form.MaximumSize"/>
property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.Form"/>
		<seealso cref="System.Windows.Forms.Form.MaximumSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.MinimizedWindowSpacingSize">
		<summary>
			<para> Gets the
      dimensions, in pixels,
      of the grid into which minimized windows are placed.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the grid into which minimized windows are placed.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.MinimizedWindowSpacingSize"/> to
   determine the rectangle to which a minimized window is sized when arranged. The value of this
   property is always greater than or equal to the value of the <see cref="System.Windows.Forms.SystemInformation.MinimumWindowSize"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.MinimumWindowSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.MinimumWindowSize">
		<summary>
			<para> Gets the minimum allowable dimensions, in pixels, of a window.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies
   the minimum allowable dimensions of a window in pixels.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.MinimumWindowSize"/> to determine the dimensions specified by
   Windows as the minimum size for a window. You can use this property to limit
   the resizing of the windows of your application to a size larger than the
   dimension returned by this property.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.MinWindowTrackSize">
		<summary>
			<para> Gets the default minimum tracking dimensions, in
      pixels, of the operating system for a window.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies default
   minimum tracking dimensions
   of the operating system for a window, in pixels.
   </para>
		</value>
		<remarks>
			<para> The user cannot drag the window frame to a size smaller
      than these dimensions. A Form can override these values by overriding
      the <see cref="System.Windows.Forms.Form.MinimumSize"/>.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.Form.MinimumSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.MouseWheelPresent">
		<summary>
			<para> Gets a value indicating whether a mouse with a
      mouse wheel is installed.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if a mouse with a mouse wheel is
   installed; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> Use this property to determine whether to process code that requires a mouse
      wheel.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.NativeMouseWheelSupport"/>
		<seealso cref="System.Windows.Forms.SystemInformation.MouseWheelScrollLines"/>
	</doc><doc for="SystemInformation.NativeMouseWheelSupport">
		<summary>
			<para> Gets a value indicating whether the operating system natively
      supports a mouse wheel.
      </para>
		</summary>
		<value>
			<para><see langword="true "/> if the operating system natively
   supports a mouse wheel; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> Mouse wheel operations that occur through a
   <see cref="System.Windows.Forms.Control"/> object
      work even if the operating system does not natively support the wheel.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.PenWindows">
		<summary>
			<para> Gets a value indicating whether the Microsoft Windows for Pen Computing
      extensions are installed.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the 
   Windows for Pen Computing extensions are
   installed; <see langword="false "/>if Windows for Pen Computing extensions are not installed.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.PrimaryMonitorMaximizedWindowSize">
		<summary>
			<para> Gets the default dimensions, in pixels, of a maximized window on the
      primary monitor.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that specifies
   the dimensions of a maximized window on the primary monitor.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.RightAlignedMenus">
		<summary>
			<para> Gets a value indicating whether drop-down menus are right-aligned
      with the corresponding menu-bar item.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if drop-down menus are
   right-aligned with the corresponding menu-bar item; <see langword="false "/>
   if the menus are left-aligned.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.DbcsEnabled">
		<summary>
			<para> Gets a value indicating whether the operating system is capable of handling double-byte character
      set (DBCS) characters.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the operating system supports
   DBCS; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.DbcsEnabled"/> to
   determine whether the operating system on which your application is running supports DBCS. Although
   an operating system can support DBCS, this does not mean that the user runs a culture that uses
   DBCS.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.CaptionButtonSize">
		<summary>
			<para> Gets the dimensions, in pixels, of a caption bar or title bar
      button.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/> that
   specifies the dimensions
   of a caption bar button in pixels.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.CaptionButtonSize"/> to get the dimensions of a
   button in the caption bar of window, to place additional caption buttons in the
   caption of a window, and to ensure the button is properly sized.
   </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.Size"/>
	</doc><doc for="SystemInformation.DebugOS">
		<summary>
			<para>Gets a value indicating whether the debugging version of USER.EXE is
      installed.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the debugging version of
   USER.EXE is installed; otherwise, <see langword="false"/>.
   </para>
		</value>
		<permission cref="System.Security.Permissions.EnvironmentPermission">to get the value of this property. Associated enumeration: <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/></permission>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.Secure">
		<summary>
			<para> Gets a value indicating whether security is present on this operating system.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if security is present; otherwise,
<see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para><see cref="System.Windows.Forms.SystemInformation.Secure"/> allows you to determine whether a Security
   Manager is available from the operating system. Windows NT and Windows 2000 provide
   a Security Manager to determine access to the operating system registry and to
   the file system. Windows 98 does not provide a Security Manager.
   </para>
		</remarks>
		<permission cref="System.Security.Permissions.EnvironmentPermission">to get the value of this property. Associated enumeration: <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/></permission>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc><doc for="SystemInformation.MenuButtonSize">
		<summary>
			<para> Gets the dimensions, in pixels, of menu bar buttons.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Size"/>
that specifies the
dimensions, in pixels, of menu-bar buttons.</para>
		</value>
		<remarks>
			<para> Use this property to determine the size of a menu button, such
      as the child window close buttons used in a multiple-document-interface application.
      The dimensions of a menu button can be similar to the dimensions returned for
      caption buttons using <see cref="System.Windows.Forms.SystemInformation.ToolWindowCaptionButtonSize"/>.
      </para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.ToolWindowCaptionButtonSize"/>
		<seealso cref="System.Drawing.Size"/>
	</doc>
	<doc for="SystemInformation">
		<summary>
			<para>Provides information about the operating system.</para>
		</summary>
		<remarks>
			<para><see cref="System.Windows.Forms.SystemInformation"/> provides <see langword="static "/>methods and
   properties that can be used to get information such as Windows display element
   sizes, operating system settings, network availability, and the capabilities of
   hardware installed on the system. This class cannot be instantiated.</para>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SystemInformation.ArrangeDirection">
		<summary>
			<para> Gets flags specifying how the operating system arranges minimized windows.
      </para>
		</summary>
		<value>
			<para> An <see cref="System.Windows.Forms.ArrangeDirection"/> that is
   a Boolean combination of <see cref="System.Windows.Forms.ArrangeStartingPosition"/> and <see cref="System.Windows.Forms.ArrangeDirection"/> values of the
   operating system.
   </para>
		</value>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.ArrangeDirection"/>
		<seealso cref="System.Windows.Forms.ArrangeStartingPosition"/>
		<seealso cref="System.Windows.Forms.ArrangeDirection"/>
		<seealso cref="System.Windows.Forms.SystemInformation.ArrangeStartingPosition" qualify="true"/>
	</doc>
	<doc for="SystemInformation.BootMode">
		<summary>
			<para>Gets a value that specifies how the system was started.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BootMode"/>
values that specifies how the system was started.</para>
		</value>
		<remarks>
			<para>Use <see cref="System.Windows.Forms.SystemInformation.BootMode"/> to determine how the
   user started the system. For applications running on Windows
   98, you can use this property to determine whether the
   operating system is in fail-safe mode. Your application uses this information to
   operate appropriately when it accesses system services and hardware.</para>
			<para> The value returned can be one of the following values:</para>
			<list type="bullet"><item>
					<term>
						<see langword="Normal"/>: The
   computer started in the standard mode.</term>
				</item>
				<item>
					<term>
						<see langword="FailSafe"/>: The
   computer started with only the basic files and drivers.</term>
				</item>
				<item>
					<term>
						<see langword="FailSafeWithNetwork"/>
: The computer started
with the basic files, drivers, and services and drivers necessary to start
networking.</term>
				</item>
			</list>
			<note type="note">
   Fail-safe boot (also called SafeBoot)
   bypasses the user's startup files.
   
</note>
		</remarks>
		<permission cref="System.Security.Permissions.EnvironmentPermission">to get the value of this property. Associated enumeration: <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/></permission>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.BootMode"/>
	</doc>
	<doc for="SystemInformation.ComputerName">
		<summary>
			<para> Gets the computer name of the current system.
      </para>
		</summary>
		<value>
			<para> The name of this computer.
      </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.ComputerName"/> to determine the name of the computer as it is
   displayed to other users on a network. This name is established at system
   startup, when it is initialized from the registry.
   </para>
		</remarks>
		<permission cref="System.Security.Permissions.EnvironmentPermission">to get the value of this property. Associated enumeration: <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/></permission>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.MenuFont">
		<summary>
			<para> Gets the operating system font for menus.
      </para>
		</summary>
		<value>
			<para> The operating system <see cref="System.Drawing.Font"/> for menus.
   </para>
		</value>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.MonitorCount">
		<summary>
			<para> Gets the number of display monitors on the desktop.
      </para>
		</summary>
		<value>
			<para> The number of monitors that make up the desktop.
      </para>
		</value>
		<remarks>
			<para> This property returns a value greater than one only if multiple monitors are currently
      connected to the operating system.
      </para>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.MonitorsSameDisplayFormat"/>
	</doc>
	<doc for="SystemInformation.MonitorsSameDisplayFormat">
		<summary>
			<para> Gets a value indicating whether all the display monitors have the
      same color format.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if all monitors have the same
   color format; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.MonitorsSameDisplayFormat"/> to
   determine whether all monitors currently connected to the system have the same
   color format. For example, the RGB values can be encoded with a different number of
   bits, or those bits can be located in different places in a pixel's color
   value.
   </para>
			<note type="note">
   Two displays can have the same bit
   depth but different color formats.
   
</note>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.MonitorCount"/>
	</doc>
	<doc for="SystemInformation.MouseButtonsSwapped">
		<summary>
			<para>       Gets a value indicating whether the functions of the left and right mouse
      buttons have been swapped.
      </para>
		</summary>
		<value>
			<para>
				<see langword="true "/>if the functions of the left and
   right mouse buttons are swapped; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para>       Use <see cref="System.Windows.Forms.SystemInformation.MouseButtonsSwapped"/> to
   determine whether the left and
   right mouse buttons have opposite usage. This property determines how the
   system responds to mouse button clicks and other mouse button events.
   </para>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.MousePresent">
		<summary>
			<para> Gets a value indicating whether a mouse is installed.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if a mouse is installed;
   otherwise, <see langword="false"/>.
   </para>
		</value>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.Network">
		<summary>
			<para> Gets a value indicating whether this computer is connected to a network.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if a network connection is present;
   otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.Network"/> to determine whether a network is available
   before performing network-oriented operations.
   </para>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.UserDomainName">
		<summary>
			<para>Gets the name of the user domain.</para>
		</summary>
		<value>
			<para>The name of the user domain. If a local user account
      exists with the same name as the user name, this property gets the computer name.</para>
		</value>
		<permission cref="System.Security.Permissions.EnvironmentPermission">to get the value of this property. Associated enumeration: <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/></permission>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Windows.Forms.SystemInformation.UserName"/>
		<seealso cref="System.Windows.Forms.SystemInformation.ComputerName"/>
	</doc>
	<doc for="SystemInformation.UserName">
		<summary>
			<para> Gets the user name for the current thread (the name of the user currently
      logged on to the operating system).</para>
		</summary>
		<value>
			<para>The name of the user currently logged on to the operating system.</para>
		</value>
		<permission cref="System.Security.Permissions.EnvironmentPermission">to get the value of this property. Associated enumeration: <see cref="System.Security.Permissions.PermissionState.Unrestricted" qualify="true"/></permission>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SystemInformation.VirtualScreen">
		<summary>
			<para> Gets the
      bounds of the virtual screen.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Rectangle"/> that specifies
   the bounding rectangle of the entire virtual screen.
   </para>
		</value>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SystemInformation.VirtualScreen"/> to determine the bounds of the entire
   desktop on a multi-monitor system. You can then determine the maximum visual
   space available on a system that has multiple monitors installed.
   </para>
			<note type="note">
   The left and top coordinates of the
   rectangle can be nonzero or negative.
   
</note>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
	</doc>
	<doc for="SystemInformation.UserInteractive">
		<summary>
			<para> Gets a value indicating whether the current process is running in
      user-interactive mode.
      </para>
		</summary>
		<value>
			<para><see langword="true"/> if the current process is running in user-interactive
   mode; otherwise, <see langword="false"/>.
   </para>
		</value>
		<remarks>
			<para> This property is <see langword="false "/>only when
   running as a service process or from inside a Web application. When <see cref="System.Windows.Forms.SystemInformation.UserInteractive"/> is <see langword="false"/>
   , do not display any modal
   dialogs or message boxes, as there is no GUI for the user to interact with.
   </para>
		</remarks>
		<example>
			<para> The following example demonstrates reading system
      information via the <see cref="System.Windows.Forms.SystemInformation"/> class and adds the information to a
      <see cref="System.Windows.Forms.ListBox"/> on the form.</para>
			<codelink SampleID="System.Windows.Forms.SystemInformation" SnippetID="1"/>
		</example>
	</doc>
</docs>
