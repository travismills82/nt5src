<docs>
	<doc for="LinkArea.LinkAreaConverter.CanConvertFrom"><nodoc/>
		<summary>
   Determines if this converter can convert an object in the given source
   type to the native type of the converter.
   </summary>
		<param name="context">
   A formatter context.  This object can be used to extract additional information
   about the environment this converter is being invoked from.  This may be null,
   so you should always check.  Also, properties on the context object may also
   return null.
   </param>
		<param name="sourceType">
   The type you wish to convert from.
   </param>
		<returns>
   True if this object can perform the conversion.
   </returns>
	</doc><doc for="LinkArea.LinkAreaConverter.CanConvertTo"><nodoc/>
		<summary>
			<para>Gets a value indicating whether this converter can
      convert an object to the given destination type using the context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="destinationType">A <see cref="System.Type"/> that represents the type you wish to convert to.</param>
		<returns>
			<para><see langword="true "/>if this converter can perform the conversion; otherwise,
   <see langword="false"/>. </para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
   <see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
			<note type="inheritinfo">
   Override this method to provide your own conversion requirements.
   </note>
		</remarks>
		<seealso cref="System.ComponentModel.ITypeDescriptorContext"/>
	</doc><doc for="LinkArea.LinkAreaConverter.ConvertFrom"><nodoc/>
		<summary>
   Converts the given object to the converter's native type.
   </summary>
		<param name="context">
   A formatter context.  This object can be used to extract additional information
   about the environment this converter is being invoked from.  This may be null,
   so you should always check.  Also, properties on the context object may also
   return null.
   </param>
		<param name="culture">
   An optional culture info.  If not supplied the current culture is assumed.
   </param>
		<param name="value">
   The object to convert.
   </param>
		<returns>
   The converted object.  This will throw an excetpion if the converson
   could not be performed.
   </returns>
	</doc><doc for="LinkArea.LinkAreaConverter.ConvertTo"><nodoc/>
		<summary>
   Converts the given object to another type.  The most common types to convert
   are to and from a string object.  The default implementation will make a call
   to ToString on the object if the object is valid and if the destination
   type is string.  If this cannot convert to the desitnation type, this will
   throw a NotSupportedException.
   </summary>
		<param name="context">
   A formatter context.  This object can be used to extract additional information
   about the environment this converter is being invoked from.  This may be null,
   so you should always check.  Also, properties on the context object may also
   return null.
   </param>
		<param name="culture">
   An optional culture info.  If not supplied the current culture is assumed.
   </param>
		<param name="value">
   The object to convert.
   </param>
		<param name="destinationType">
   The type to convert the object to.
   </param>
		<returns>
   The converted object.
   </returns>
	</doc><doc for="LinkArea.LinkAreaConverter.CreateInstance"><nodoc/>
		<summary>
   Creates an instance of this type given a set of property values
   for the object.  This is useful for objects that are immutable, but still
   want to provide changable properties.
   </summary>
		<param name="context">
   A type descriptor through which additional context may be provided.
   </param>
		<param name="propertyValues">
   A dictionary of new property values.  The dictionary contains a series
   of name-value pairs, one for each property returned from GetProperties.
   </param>
		<returns>
   The newly created object, or null if the object could not be created.
   The default implementation returns null.
   </returns>
	</doc><doc for="LinkArea.LinkAreaConverter.GetCreateInstanceSupported"><nodoc/>
		<summary>
   Determines if changing a value on this object should require a call to
   CreateInstance to create a new value.
   </summary>
		<param name="context">
   A type descriptor through which additional context may be provided.
   </param>
		<returns>
   Returns true if CreateInstance should be called when a change is
   made to one or more properties of this object.
   </returns>
	</doc><doc for="LinkArea.LinkAreaConverter.GetProperties"><nodoc/>
		<summary>
   Retrieves the set of properties for this type.  By default, a type has
   does not return any properties.  An easy implementation of this method
   can just call TypeDescriptor.GetProperties for the correct data type.
   </summary>
		<param name="context">
   A type descriptor through which additional context may be provided.
   </param>
		<param name="value">
   The value of the object to get the properties for.
   </param>
		<param name="attributes">
		</param>
		<returns>
   The set of properties that should be exposed for this data type.  If no
   properties should be exposed, thsi may return null.  The default
   implementation always returns null.
   </returns>
	</doc><doc for="LinkArea.LinkAreaConverter.GetPropertiesSupported">
		<nodoc/>
		<summary>
			<para>Determines if this object supports properties. By default, this
      is false.</para>
		</summary>
		<param name="context">A type descriptor through which additional context may be provided. </param>
		<returns>
			<para>Returns true if GetProperties should be called to find
      the properties of this object.</para>
		</returns>
	</doc><doc for="LinkArea.LinkArea">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.LinkArea"/> class.</para>
		</summary>
		<param name="start">The zero-based starting location of the link area within the text of the <see cref="System.Windows.Forms.LinkLabel"/>.</param>
		<param name=" length">The number of characters, after the starting character, to include in the link area.</param>
	</doc><doc for="LinkArea.Equals"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="LinkArea.GetHashCode"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="LinkArea.Start">
		<summary>
			<para>Gets or sets the starting location of the link area within
      the text of the <see cref="System.Windows.Forms.LinkLabel"/>.</para>
		</summary>
		<value>
			<para>The location within the text of the <see cref="System.Windows.Forms.LinkLabel"/> control where the link
   starts.</para>
		</value>
		<remarks>
			<para>To specify text from the <see cref="System.Windows.Forms.LinkLabel"/> to display as a link, set the <see cref="System.Windows.Forms.LinkArea.Start"/> property to the location in the text to
   start creating the link. After the <see cref="System.Windows.Forms.LinkArea.Start"/> property is set, set the
   value of the <see cref="System.Windows.Forms.LinkArea.Length"/> property to the number of characters,
   including the character position specified in the <see cref="System.Windows.Forms.LinkArea.Start"/> property, that you want to make the
   link text. For example, if you want to make the first word of the text "The
   quick brown fox" a link, you set the <see cref="System.Windows.Forms.LinkArea.Start"/> property to zero (0) and
   the <see cref="System.Windows.Forms.LinkArea.Length"/> property to three (3).</para>
		</remarks>
		<seealso cref="System.Windows.Forms.LinkArea.Length"/>
	</doc><doc for="LinkArea.Length">
		<summary>
			<para>Gets or sets the number of characters in the link area.</para>
		</summary>
		<value>
			<para>The number of characters, including spaces, in the link area.</para>
		</value>
		<remarks>
			<para>To specify text from the <see cref="System.Windows.Forms.LinkLabel"/> to display as a link, set the <see cref="System.Windows.Forms.LinkArea.Start"/> property to the location in the text to
   start creating the link. After the <see cref="System.Windows.Forms.LinkArea.Start"/> property is set, set the
   value of the <see cref="System.Windows.Forms.LinkArea.Length"/> property to the number of characters,
   including the character position specified in the <see cref="System.Windows.Forms.LinkArea.Start"/> property, that you want to make the
   link text. For example, if you want to make the first word of the text "The
   quick brown fox" a link, you set the <see cref="System.Windows.Forms.LinkArea.Start"/> property to zero (0) and
   the <see cref="System.Windows.Forms.LinkArea.Length"/> property to three (3).</para>
		</remarks>
		<seealso cref="System.Windows.Forms.LinkArea.Start"/>
	</doc><doc for="LinkArea.IsEmpty">
		<summary>
			<para>Gets a value indicating whether the <see cref="System.Windows.Forms.LinkArea"/> is empty.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the specified start and length
   return an empty link area; otherwise, <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>You can use this property to determine whether a valid link area has been
      specified in this object instead of evaluating the values of the <see cref="System.Windows.Forms.LinkArea.Length"/> and <see cref="System.Windows.Forms.LinkArea.Start"/> properties.</para>
		</remarks>
	</doc><doc for="LinkArea.LinkAreaConverter">
		<summary>
			<para>Provides a type converter to convert <see cref="System.Windows.Forms.LinkArea.LinkAreaConverter"/> objects to and from various other
 representations.</para>
		</summary>
		<remarks>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
			<note type="note">
 You should never create an instance of a
<see cref="System.Windows.Forms.LinkArea.LinkAreaConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
 in the <see cref="System.ComponentModel.TypeConverter"/> base class.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.LinkArea"/>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="LinkArea">
		<summary>
			<para>Represents an area within a <see cref="System.Windows.Forms.LinkLabel"/>
control that represents a hyperlink within the control.</para>
		</summary>
		<remarks>
			<para>There are two ways to add a hyperlink to the text of a
      <see cref="System.Windows.Forms.LinkLabel"/>
   control. You can access the <see cref="System.Windows.Forms.LinkLabel.LinkCollection.Add"/> method of the <see cref="System.Windows.Forms.LinkLabel.LinkCollection"/> class through the <see cref="System.Windows.Forms.LinkLabel.Links"/> property of the <see cref="System.Windows.Forms.LinkLabel"/>
   to add multiple hyperlinks to the control's text. If you only need to add a
   single hyperlink to the text of the control, you can use the <see cref="System.Windows.Forms.LinkLabel.LinkArea"/> property of the <see cref="System.Windows.Forms.LinkLabel"/>.
   This property accepts a <see cref="System.Windows.Forms.LinkArea"/> object that defines the location of the
   hyperlink within the control's text. When a hyperlink is specified using the
<see cref="System.Windows.Forms.LinkArea"/> property, the link area is then added to
   the <see cref="System.Windows.Forms.LinkLabel.LinkCollection"/> in the same manner as adding the link
   using the <see cref="System.Windows.Forms.LinkLabel.LinkCollection.Add"/> method of the <see cref="System.Windows.Forms.LinkLabel.LinkCollection"/>
   .</para>
			<para>The <see cref="System.Windows.Forms.LinkArea.Length"/> property specifies the
number of characters within the text of the <see cref="System.Windows.Forms.LinkLabel"/> to include in the link
area. The <see cref="System.Windows.Forms.LinkArea.Start"/> property specifies the first character in
the control text to include in the hyperlink. If you want to determine whether a
specific <see cref="System.Windows.Forms.LinkArea"/> object is empty, you can use the <see cref="System.Windows.Forms.LinkArea.IsEmpty"/> property instead of checking the values of
the <see cref="System.Windows.Forms.LinkArea.Start"/> and <see cref="System.Windows.Forms.LinkArea.Length"/>
properties.</para>
		</remarks>
		<example>
			<para> The following example demonstrates using the <see cref="System.Windows.Forms.LinkLabel"/>
class, with multiple <see cref="System.Windows.Forms.LinkArea"/> sections defined, to display a label on a
form. The example demonstrates setting the <see cref="System.Windows.Forms.Label.AutoSize"/>, <see cref="System.Windows.Forms.LinkLabel.LinkBehavior"/>, <see cref="System.Windows.Forms.LinkLabel.DisabledLinkColor"/>, <see cref="System.Windows.Forms.LinkLabel.LinkColor"/>, and <see cref="System.Windows.Forms.LinkLabel.VisitedLinkColor"/> properties to customize the look of the
<see cref="System.Windows.Forms.LinkLabel"/>. The first <see cref="System.Windows.Forms.LinkArea"/> 
is specified using the <see cref="System.Windows.Forms.LinkLabel.LinkArea" qualify="true"/> property. Additional
links are added to the <see cref="System.Windows.Forms.LinkLabel"/> using the <see cref="System.Windows.Forms.LinkLabel.LinkCollection.Add" qualify="true"/> method. The example handles the <see cref="System.Windows.Forms.LinkLabel.LinkClicked"/> event by starting the Web browser for
hyperlinks, and displaying a <see cref="System.Windows.Forms.MessageBox"/> for other links.</para>
			<codelink SampleID="System.Windows.Forms.LinkLabel" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.LinkLabel.LinkArea"/>
		<seealso cref="System.Windows.Forms.LinkLabel"/>
		<seealso cref="System.Windows.Forms.LinkLabel.LinkCollection"/>
	</doc>
</docs>
