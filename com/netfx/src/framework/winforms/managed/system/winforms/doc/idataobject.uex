<docs>
	<doc for="IDataObject.GetData2">
		<summary>
			<para>Retrieves the data associated with the specified class
      type format.</para>
		</summary>
		<param name="format"><para>A <see cref="System.Type"/> representing the format of the data to retrieve. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<returns>
			<para>The data associated with the specified format, or <see langword="null"/>.</para>
		</returns>
		<remarks>
			<para>If this method cannot find data in the specified format,
      it attempts to convert the data to the format. If the data cannot be converted
      to the specified format, this method returns <see langword="null"/>. </para>
			<para>To determine whether data is associated with, or can be converted to, a
      format, call <see cref="System.Windows.Forms.IDataObject.GetDataPresent"/> before calling <see cref="System.Windows.Forms.IDataObject.GetData"/>. Call <see cref="System.Windows.Forms.IDataObject.GetFormats"/> for a list of valid formats for the
      data stored in this instance.</para>
			<note type="note">
      Data can be converted to another
      format if it was stored specifying that conversion is allowed, and if the
      requested format is compatible with the stored format. For example, data stored
      as Unicode can be converted to text.
      
   </note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetData"/> method. The method is used to retrieve the data stored 
   in <c>myObject</c>, which is associated with a specific type,
<c>myType</c>. The type of the 
retrieved data is
displayed in a message box. The example assumes that you have already
created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>.</para>
			<codelink SampleID="GetData2" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetFormats" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetData">
		<overload>
			<para>Retrieves the data associated with the specified data format.</para>
		</overload>
		<summary>
			<para>Retrieves the data associated with the specified data
      format, using a Boolean to determine whether to convert the data to the
      format. </para>
		</summary>
		<param name="format"><para>The format of the data to retrieve. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<param name="autoConvert"><para><see langword="true"/> to convert the data to the specified format; otherwise, <see langword="false"/>.</para></param>
		<returns>
			<para>The data associated with the specified format, or <see langword="null"/>.</para>
		</returns>
		<remarks>
			<para>If the <paramref name="autoConvert "/>parameter is <see langword="true"/> and this method cannot find data in the
   specified format, it attempts to convert the data to the format. If the data
   cannot be converted to the specified format, or if the data was stored with the
<paramref name="autoConvert "/>parameter set to <see langword="false"/>, this
   method returns <see langword="null"/>.</para>
			<para>If the <paramref name="autoConvert "/>parameter is <see langword="false"/>, this method returns data in
the specified format, or <see langword="null "/>if no data in this format
can be found.</para>
			<para>To determine whether data is associated with, or can be converted to, a
   format, call <see cref="System.Windows.Forms.IDataObject.GetDataPresent"/> before calling <see cref="System.Windows.Forms.IDataObject.GetData"/>. Call <see cref="System.Windows.Forms.IDataObject.GetFormats"/> for a list of valid formats for the
   data stored in this instance.</para>
			<note type="note">
   Data can be converted to another format if it was stored specifying that conversion is allowed, and if the
   requested format is compatible with the stored format. For example, data stored
   as Unicode can be converted to text.
   
</note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetData"/> method. The example retrieves the data stored in a 
<see langword="DataObject"/>, using the <paramref name="autoConvert"/> parameter to specify 
   whether or not to convert the data format. First, <c>myDataObject</c> is created with text data. Then the
example tries twice to retrieve the data. In the first trial, it specifies its
format as a string and sets the <paramref name="autoConvert"/> parameter to
<see langword="false"/>. This trial fails, and the result is displayed in a 
message box labeled "Message #1." In the second trial, the example retrieves the
same data with the <paramref name="autoConvert"/> parameter set to <see langword="true"/>.
This trial succeeds, and the result is displayed in a message box labeled
"Message #2." The example assumes that you have created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c> 
. </para>
			<codelink SampleID="GetData3" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetFormats" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetData1">
		<summary>
			<para>Retrieves the data associated with the specified data format.</para>
		</summary>
		<param name="format"><para> The format of the data to retrieve. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<returns>
			<para>The data associated with the specified format, or <see langword="null"/>.</para>
		</returns>
		<remarks>
			<para>If this method cannot find data in the specified format,
      it attempts to convert the data to the format. If the data cannot be converted
      to the specified format, this method returns <see langword="null"/>.</para>
			<para>To determine whether data is associated with, or can be
      converted to, a format, call <see cref="System.Windows.Forms.IDataObject.GetDataPresent"/> before calling <see cref="System.Windows.Forms.IDataObject.GetData"/>. Call <see cref="System.Windows.Forms.IDataObject.GetFormats"/> for a list of valid formats for the
      data stored in this instance.</para>
			<note type="note">
      Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is
      compatible with the stored format. For example, data stored as Unicode can be converted to text.
      
   </note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject,"/> to demonstrate the use of the 
<see langword="GetData"/> method. The method is used to retrieve the data stored 
   in <c>myDataObject</c>, which is associated with the
<see langword="Text"/> 
format. The example assumes that you have already
created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c> and a <see cref="System.Windows.Forms.TextBox"/> named <c>textBox1</c>.</para>
			<codelink SampleID="GetData1" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetFormats" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>
	</doc>
	<doc for="IDataObject">
		<summary>
			<para>Provides a format-independent mechanism for transferring
      data.</para>
		</summary>
		<remarks>
			<para>The <see langword="IDataObject"/> interface is used by the <see cref="System.Windows.Forms.Clipboard"/>
class and in drag-and-drop operations.</para>
			<para>When implemented in a class, the <see cref="System.Windows.Forms.IDataObject"/> methods allow the user to store data
in multiple formats in an instance of the class. Storing data in more than
one format increases the chance that a target application, whose format
requirements you might not know, can retrieve the stored data. To
store data in an instance of <see cref="System.Windows.Forms.IDataObject"/>, call
the <see cref="System.Windows.Forms.IDataObject.SetData"/>
method and specify the data
format in the <paramref name="format"/> parameter. Set
the <paramref name="autoConvert"/> parameter to <see langword="false"/> if you do not want stored data to be
converted to another format when it is retrieved. Invoke <see cref="System.Windows.Forms.IDataObject.SetData"/> multiple times on one instance of <see cref="System.Windows.Forms.IDataObject"/>
to store data in more than one format.</para>
			<para> You retrieve stored data from an <see cref="System.Windows.Forms.IDataObject"/> by calling
the <see cref="System.Windows.Forms.IDataObject.GetData"/> method and specifying
the data format in the <paramref name="format"/> parameter. Set the <paramref name="autoConvert"/> parameter to <see langword="false"/> to retrieve only data that was stored in the
specified format. To convert the stored data to the specified format, set <paramref name="autoConvert"/> to
<see langword="true"/>, or do not use <paramref name="autoConvert"/>.</para>
			<para>To determine the
   formats of the data stored in an <see cref="System.Windows.Forms.IDataObject"/>, use the
   following <see cref="System.Windows.Forms.IDataObject"/>
   methods.</para>
			<list type="bullet"><item>
					<term>
      Call
      the <see cref="System.Windows.Forms.IDataObject.GetFormats"/> method to retrieve an array of all
      the formats in which the data is available. Set the <paramref name="autoConvert"/> parameter
      to <see langword="false"/> to get only the formats in
      which the data is stored. To get all the formats in which the data is available,
      set <paramref name="autoConvert"/> to
   <see langword="true"/>, or do not use this parameter.</term>
				</item>
				<item>
					<term>
      Call
      the <see cref="System.Windows.Forms.IDataObject.GetDataPresent"/> method to
      determine whether stored data
      is available in a certain format. If you do not
      want stored data to be converted to the specified format, set the
   <paramref name="autoConvert"/> parameter to <see langword="false"/>.</term>
				</item>
			</list>
			<para>See the
<see cref="System.Windows.Forms.DataObject"/> class for an implementation of this interface. See
   the <see cref="System.Windows.Forms.DataFormats"/> class for the
   predefined <see cref="System.Windows.Forms.Clipboard"/> data formats.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataObject"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
	</doc>
	<doc for="IDataObject.SetData">
		<overload>
			<para>Stores the specified data and its associated format in this
      instance.</para>
		</overload>
		<summary>
			<para>Stores the specified data and its associated format in this
      instance, using a Boolean value to specify whether the data can be converted
      to another format.</para>
		</summary>
		<param name="format"><para>The format associated with the data. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<param name="autoConvert"><para><see langword="true"/> to allow the data to be converted to another format; otherwise, <see langword="false"/>. </para></param>
		<param name="data">The data to store.</param>
		<remarks>
			<para>If you do not know the format of the target application, you can store data
      in multiple formats using this method.</para>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="SetData"/> method. First, it creates a data object (<c>myDataObject</c>) and stores a 
<see langword="UnicodeText"/> string in it, with the <paramref name="autoConvert"/> 
parameter set to <see langword="false"/> . Then it retrieves
the format(s) associated with the data stored in the object and displays the result
in a message box. The only format associated with the data is the
<see langword="UnicodeText"/> format. This example assumes that you have created 
a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>.</para>
			<codelink SampleID="SetData4" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>
	</doc>
	<doc for="IDataObject.SetData1">
		<summary>
			<para>Stores the specified data and its associated format in this
      instance.</para>
		</summary>
		<param name="format"><para>The format associated with the data. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<param name="data">The data to store.</param>
		<remarks>
			<para>If you do not know the format of the target application, you can store data
      in multiple formats using this method.</para>
			<para>Data stored using this method can be converted to a compatible format when it
      is retrieved.</para>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="SetData"/> method. First, it creates a data object (<c>myDataObject</c>) and stores a string in 
the object specifying the <see langword="UnicodeText"/> format. Then it retrieves
that data stored in the object specifying the <see langword="Text"/>
format, so that the data is converted to the <see langword="Text"/> format. The
result is displayed in a message box. This example assumes that you have created
a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>.</para>
			<codelink SampleID="SetData2" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>
	</doc>
	<doc for="IDataObject.SetData2">
		<summary>
			<para>Stores the specified data and its associated class type in this
      instance.</para>
		</summary>
		<param name="format"><para>A <see cref="System.Type"/> representing the format associated with the data. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<param name="data">The data to store.</param>
		<remarks>
			<para>If you do not know the format of the target application, you can store data
      in multiple formats using this method.</para>
			<para>Data stored using this method can be converted to a compatible format when it
      is retrieved.</para>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="SetData"/> method. First, it creates a component (<c>myComponent</c>) and stores it in a data 
object (<c>myDataObject</c>), using
<c>myType</c> to specify the data 
format. Then it checks whether the data of the specified type is stored in the
object, and displays the result in a message box. The example assumes that you
have created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>.</para>
			<codelink SampleID="SetData3" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
	</doc>
	<doc for="IDataObject.SetData3">
		<summary>
			<para>Stores the specified data in this instance, using the class of the
      data for the format.</para>
		</summary>
		<param name="data">The data to store.</param>
		<remarks>
			<para> 
      The format is derived from the data class.</para>
			<para>Data stored using this method can be converted to a compatible format when it
      is retrieved.</para>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="SetData"/> method. First, it creates a component (<c>myComponent</c>) and stores it in a data 
object (<c>myDataObject</c>). Then
it checks whether the specified data is stored in the data object, and displays
the result in a message box. The example assumes that you have created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c>.</para>
			<codelink SampleID="SetData1" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.SetData" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetDataPresent">
		<overload>
			<para>Determines whether data stored
      in this instance is associated with the specified
      format.</para>
		</overload>
		<summary>
			<para>Determines whether data stored in this instance is associated with
      the specified format, using a Boolean value to determine whether to
      convert the data to the format.</para>
		</summary>
		<param name="format"><para>The format for which to check. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<param name="autoConvert"><para><see langword="true"/> to determine whether data stored in this instance can be converted to the specified format; <see langword="false"/> to check whether the data is in the specified format. </para></param>
		<returns>
			<para><see langword="true "/>if the data is in, or can be converted to, the
   specified format; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>Call this method to determine whether a format exists in this <see cref="System.Windows.Forms.DataObject"/>
before calling <see cref="System.Windows.Forms.IDataObject.GetData"/>. Call <see cref="System.Windows.Forms.IDataObject.GetFormats"/> for the formats that are available
in this instance.</para>
			<para>This method returns <see langword="true "/>when:</para>
			<list type="bullet"><item>
					<term>
      
      The <paramref name="autoConvert"/>
      parameter is <see langword="true "/>and the data is in a format that
      can be converted to the appropriate format.</term>
				</item>
				<item>
					<term>
      
      The <paramref name="autoConvert"/>
      parameter is <see langword="false "/>and the data is in the appropriate format.</term>
				</item>
			</list>
			<para>This method returns <see langword="false "/>when:</para>
			<list type="bullet"><item>
					<term>
      
      The <paramref name="autoConvert"/>
      parameter is <see langword="true"/> and this method cannot find data in the
      specified format, and it cannot convert data to the specified format, or the
      data was stored with <paramref name="autoConvert"/>
      set to
   <see langword="false"/>.</term>
				</item>
				<item>
					<term>
      
      The <paramref name="autoConvert"/>
      parameter is <see langword="false"/>, and data does not exist in this instance
      in the specified format.</term>
				</item>
			</list>
			<note type="note">
   Data can be converted to another
   format if it was stored specifying that conversion is allowed, and if the
   requested format is compatible with the stored format. For example, data stored
   as Unicode can be converted to text.
   
</note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetDataPresent"/> method. First, it creates a data object (<c>myDataObject</c>) using a string and the 
<see langword="Text"/> format. Then it queries the object for data associated with 
the <see langword="Text"/>
format, with the
<paramref name="autoConvert"/> parameter set to <see langword="false"/> . This trial fails, and the result is 
displayed in a message box labeled "Message #1." In the second trial, it sets the
<paramref name="autoConvert"/> parameter to <see langword="true"/> . This trial succeeds, and the result is 
displayed in a message box labeled "Message #2." The example assumes that you have created
a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>
.</para>
			<codelink SampleID="GetDataPresent3" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetFormats" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetDataPresent1">
		<summary>
			<para>Determines whether data stored in this instance is associated with, or can be
      converted to, the specified format.</para>
		</summary>
		<param name="format"><para>The format for which to check. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<returns>
			<para><see langword="true"/> if data stored in this
   instance is associated with, or can be converted to, the specified format;
   otherwise <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>Call this method to determine whether a format exists in this <see cref="System.Windows.Forms.DataObject"/>
before calling <see cref="System.Windows.Forms.IDataObject.GetData"/>. Call <see cref="System.Windows.Forms.IDataObject.GetFormats"/> for the formats that are available
in this instance.</para>
			<note type="note">
   Data can be converted to another
   format if it was stored specifying that conversion is allowed, and if the
   requested format is compatible with the stored format. For example, data stored
   as Unicode can be converted to text.
   
</note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetDataPresent"/> method. First, it creates a data 
   object using a string and the <see langword="Text"/> format. Then it verifies
   that the data is present in the <see langword="Text"/>
   format and displays the results in a message box. The example assumes that you
   have created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>
.</para>
			<codelink SampleID="GetDataPresent1" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetDataPresent2">
		<summary>
			<para>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</para>
		</summary>
		<param name="format"><para>A <see cref="System.Type"/> representing the format for which to check. See <see cref="System.Windows.Forms.DataFormats"/> for predefined formats. </para></param>
		<returns>
			<para><see langword="true"/> if data stored in this instance is associated
   with, or can be converted to, the
   specified format; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>Call this method to determine whether a format exists in this <see cref="System.Windows.Forms.DataObject"/>
before calling <see cref="System.Windows.Forms.IDataObject.GetData"/>. Call <see cref="System.Windows.Forms.IDataObject.GetFormats"/> for the formats that are available
in this instance.</para>
			<note type="note">
   Data can be converted to another
   format if it was stored specifying that conversion is allowed, and if the
   requested format is compatible with the stored format. For example, data stored
   as Unicode can be converted to text.
   
</note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetDataPresent"/> method. First, it creates a component (<c>myComponent</c>) and stores it in a 
data object (<c>myDataObject</c>
). Then it checks whether the specified data is stored in <c>myDataObject</c>. If the test evaluates
<see langword="true"/>, it displays the result in a message box and displays the data 
type in a text box. This example assumes that you have already created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c> and a <see cref="System.Windows.Forms.TextBox"/>named <c>textBox1</c> 
.</para>
			<codelink SampleID="GetDataPresent2" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.IDataObject.SetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.IDataObject.GetData" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetDataPresent" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetFormats">
		<overload>
			<para>Returns a list of all formats that data stored in this instance is associated
      with or can be converted to.</para>
		</overload>
		<summary>
			<para>Gets a list of all formats that data stored in this instance is
      associated with or can be converted to, using a Boolean value to determine whether to
      retrieve all formats that the data can be converted to or only native data
      formats.</para>
		</summary>
		<param name="autoConvert"><para><see langword="true"/> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false"/> to retrieve only native data formats. </para></param>
		<returns>
			<para>An array of the names that represents a list of all formats that are
      supported by the data stored in this object.</para>
		</returns>
		<remarks>
			<para>Call this method to get the supported data formats before calling the <see cref="System.Windows.Forms.IDataObject.GetData"/> method. See 
   the <see cref="System.Windows.Forms.DataFormats"/> class
   for the predefined formats.</para>
			<note type="note">
   Data can be converted to another
   format if it was stored specifying that conversion is allowed, and if the
   requested format is compatible with the stored format. For example, data stored
   as Unicode can be converted to text.
   
</note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetFormats"/> method. First, it creates a data object (<c>myDataObject</c>) using a string and 
the <see langword="UnicodeText"/> format. Then it makes two queries to get the
formats associated with the data. In the first query, it sets the
<paramref name="autoConvert"/> parameter to <see langword="false"/>: in this case, only the 
native format of the data is returned. In the second query, it sets the
<paramref name="autoConvert"/> parameter to <see langword="true"/> , so that it 
gets the list of formats, including the formats that the data can be converted to.
In each case, the resulting list is displayed in a message box. This example
assumes that you have created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>.</para>
			<codelink SampleID="GetFormats2" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetData" qualify="true"/>
	</doc>
	<doc for="IDataObject.GetFormats1">
		<summary>
			<para>Returns a list of all formats that data stored in this instance is associated
      with or can be converted to.</para>
		</summary>
		<returns>
			<para>An array of the names that represents a list of all formats that are
      supported by the data stored in this object.</para>
		</returns>
		<remarks>
			<para>Call this method to get the supported data formats before calling the <see cref="System.Windows.Forms.IDataObject.GetData"/> method. See 
   the <see cref="System.Windows.Forms.DataFormats"/> class
   for the predefined formats.</para>
			<note type="note">
   Data can be converted to another
   format if it was stored specifying that conversion is allowed, and if the
   requested format is compatible with the stored format. For example, data stored
   as Unicode can be converted to text.
   
</note>
			<para>For an implementation of this method, see <see cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>.</para>
		</remarks>
		<example>
			<para> This example uses the <see cref="System.Windows.Forms.DataObject"/> class, which implements
<see langword="IDataObject"/>, to demonstrate the use of the 
<see langword="GetFormats"/> method. First, it creates a data object (<c>myDataObject</c>) using a string and 
the <see langword="Text"/> format. Then it retrieves all the data formats and data
conversion formats in the data object, and displays the resulting list in a
message box. This example assumes that you have created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c> 
.</para>
			<codelink SampleID="GetFormats1" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataObject.GetFormats" qualify="true"/>
		<seealso cref="System.Windows.Forms.DataObject.GetData" qualify="true"/>
	</doc>
</docs>
