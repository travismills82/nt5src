<docs>
	<doc for="MouseEventArgs.button">
		<summary>
     Which button generated this event [if applicable]
 </summary>
	</doc>
	<doc for="MouseEventArgs.clicks">
		<summary>
     If the user has clicked the mouse more than once, this contains the
     count of clicks so far.
 </summary>
	</doc>
	<doc for="MouseEventArgs.x">
		<summary>
     The x portion of the coordinate where this event occurred.
 </summary>
	</doc>
	<doc for="MouseEventArgs.y">
		<summary>
     The y portion of the coordinate where this event occurred.
 </summary>
	</doc>
	<doc for="MouseEventArgs.MouseEventArgs">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.MouseEventArgs"/> class.</para>
		</summary>
		<param name="button">One of the <see cref="System.Windows.Forms.MouseButtons"/> values indicating which mouse button was pressed.</param>
		<param name="clicks">The number of times a mouse button was pressed.</param>
		<param name="x">The x-coordinate of a mouse click, in pixels.</param>
		<param name="y">The y-coordinate of a mouse click, in pixels.</param>
		<param name="delta">A signed count of the number of detents the wheel has rotated.</param>
		<seealso cref="System.Windows.Forms.MouseButtons"/>
		<seealso cref="System.Windows.Forms.MouseEventArgs.Delta"/>
	</doc>
	<doc for="MouseEventArgs">
		<summary>
			<para>Provides data for the <see langword="MouseUp"/>,
<see langword="MouseDown"/>, and <see langword="MouseMove "/>
events.</para>
		</summary>
		<remarks>
			<para>The <see langword="MouseDown "/>event
   occurs when the user presses the mouse button while the pointer
   is over a control. The <see langword="MouseUp"/> event occurs when the user releases the mouse
   button while the pointer remains over the control. The <see langword="MouseMove "/>
   event occurs when the user moves the mouse pointer over a control. A
<see langword="MouseEventArgs"/> specifies which mouse button is 
   pressed,
   how many times the mouse button was pressed and released, the coordinates of the
   mouse, and the amount the mouse wheel moved.</para>
			<para>These three events exist for the <see cref="System.Windows.Forms.Control"/>, <see cref="System.Windows.Forms.AxHost"/>, and <see cref="System.Windows.Forms.NotifyIcon"/> classes.</para>
			<para>For information about the event model, see <see topic="cpconEventsDelegates"/>.</para>
		</remarks>
		<example>
			<para> The following example demonstrates using different mouse
      events to draw the path of the mouse on a <see cref="System.Windows.Forms.Panel"/>. A line segment is added
      to the <see cref="System.Drawing.Drawing2D.GraphicsPath"/> for each <see cref="System.Windows.Forms.Control.MouseMove"/> and <see cref="System.Windows.Forms.Control.MouseDown"/> events that occur. To update the graphics,
      the <see cref="System.Windows.Forms.Control.Invalidate"/> method is called for the <see cref="System.Windows.Forms.Panel"/> on
      each <see langword="MouseDown"/> and <see langword="MouseUp"/> event. In addition,
      the graphic path is scrolled up or down when the <see cref="System.Windows.Forms.Control.MouseWheel"/> event occurs. Additional mouse events,
      like <see cref="System.Windows.Forms.Control.MouseHover"/>, are identified on screen as well. Also
      displayed on the screen is additional information about the mouse from
      the <see cref="System.Windows.Forms.SystemInformation"/> class.
      </para>
			<codelink SampleID="System.Windows.Forms.MouseEvent" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Control.OnMouseDown"/>
		<seealso cref="System.Windows.Forms.Control.MouseDown"/>
		<seealso cref="System.Windows.Forms.Control.OnMouseUp"/>
		<seealso cref="System.Windows.Forms.Control.MouseUp"/>
		<seealso cref="System.Windows.Forms.Control.OnMouseMove"/>
		<seealso cref="System.Windows.Forms.Control.MouseMove"/>
		<seealso cref="System.Windows.Forms.NotifyIcon.MouseDown"/>
		<seealso cref="System.Windows.Forms.NotifyIcon.MouseUp"/>
		<seealso cref="System.Windows.Forms.NotifyIcon.MouseMove"/>
	</doc>
	<doc for="MouseEventArgs.Button">
		<summary>
			<para> Gets which mouse button was pressed.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.MouseButtons"/>
values.</para>
		</value>
		<example>
			<para> The following example demonstrates using different mouse
      events to draw the path of the mouse on a <see cref="System.Windows.Forms.Panel"/>. A line segment is added
      to the <see cref="System.Drawing.Drawing2D.GraphicsPath"/> for each <see cref="System.Windows.Forms.Control.MouseMove"/> and <see cref="System.Windows.Forms.Control.MouseDown"/> events that occur. To update the graphics,
      the <see cref="System.Windows.Forms.Control.Invalidate"/> method is called for the <see cref="System.Windows.Forms.Panel"/> on
      each <see langword="MouseDown"/> and <see langword="MouseUp"/> event. In addition,
      the graphic path is scrolled up or down when the <see cref="System.Windows.Forms.Control.MouseWheel"/> event occurs. Additional mouse events,
      like <see cref="System.Windows.Forms.Control.MouseHover"/>, are identified on screen as well. Also
      displayed on the screen is additional information about the mouse from
      the <see cref="System.Windows.Forms.SystemInformation"/> class.
      </para>
			<codelink SampleID="System.Windows.Forms.MouseEvent" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MouseButtons"/>
	</doc>
	<doc for="MouseEventArgs.Clicks">
		<summary>
			<para> Gets the
      number of times the mouse
      button was pressed and released.</para>
		</summary>
		<value>
			<para>The number
      of times the mouse button was
      pressed and released.</para>
		</value>
		<example>
			<para> The following example demonstrates using different mouse
      events to draw the path of the mouse on a <see cref="System.Windows.Forms.Panel"/>. A line segment is added
      to the <see cref="System.Drawing.Drawing2D.GraphicsPath"/> for each <see cref="System.Windows.Forms.Control.MouseMove"/> and <see cref="System.Windows.Forms.Control.MouseDown"/> events that occur. To update the graphics,
      the <see cref="System.Windows.Forms.Control.Invalidate"/> method is called for the <see cref="System.Windows.Forms.Panel"/> on
      each <see langword="MouseDown"/> and <see langword="MouseUp"/> event. In addition,
      the graphic path is scrolled up or down when the <see cref="System.Windows.Forms.Control.MouseWheel"/> event occurs. Additional mouse events,
      like <see cref="System.Windows.Forms.Control.MouseHover"/>, are identified on screen as well. Also
      displayed on the screen is additional information about the mouse from
      the <see cref="System.Windows.Forms.SystemInformation"/> class.
      </para>
			<codelink SampleID="System.Windows.Forms.MouseEvent" SnippetID="1"/>
		</example>
	</doc>
	<doc for="MouseEventArgs.Delta">
		<summary>
			<para> Gets a signed count of the number of
      detents
      the mouse wheel has rotated. A detent is one notch of the mouse wheel.</para>
		</summary>
		<value>
			<para>A signed count of the number of detents the mouse wheel
      has rotated.</para>
		</value>
		<remarks>
			<para> The mouse wheel combines the features of a wheel and a
      mouse button. The wheel has discrete, evenly-spaced notches. When you rotate the
      wheel, a wheel message is sent as each notch is encountered. One wheel notch, a detent, is defined by the windows constant WHEEL_DELTA, which is
      120. A positive value indicates that the wheel was rotated forward, away
      from the user; a negative value indicates that the wheel was
      rotated backward, toward the user.</para>
			<para> Currently, a value of 120 is the standard for one detent. If
      higher resolution mice are introduced, the definition of WHEEL_DATA might become smaller.
      Most applications should check for a positive or negative value rather than an
      aggregate total.</para>
		</remarks>
		<example>
			<para> The following example demonstrates using different mouse
      events to draw the path of the mouse on a <see cref="System.Windows.Forms.Panel"/>. A line segment is added
      to the <see cref="System.Drawing.Drawing2D.GraphicsPath"/> for each <see cref="System.Windows.Forms.Control.MouseMove"/> and <see cref="System.Windows.Forms.Control.MouseDown"/> events that occur. To update the graphics,
      the <see cref="System.Windows.Forms.Control.Invalidate"/> method is called for the <see cref="System.Windows.Forms.Panel"/> on
      each <see langword="MouseDown"/> and <see langword="MouseUp"/> event. In addition,
      the graphic path is scrolled up or down when the <see cref="System.Windows.Forms.Control.MouseWheel"/> event occurs. Additional mouse events,
      like <see cref="System.Windows.Forms.Control.MouseHover"/>, are identified on screen as well. Also
      displayed on the screen is additional information about the mouse from
      the <see cref="System.Windows.Forms.SystemInformation"/> class.
      </para>
			<codelink SampleID="System.Windows.Forms.MouseEvent" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MouseEventArgs.X"/>
		<seealso cref="System.Windows.Forms.MouseEventArgs.Y"/>
	</doc>
	<doc for="MouseEventArgs.X">
		<summary>
			<para> Gets
      the x-coordinate of the mouse.</para>
		</summary>
		<value>
			<para>The x-coordinate of the mouse, in pixels.</para>
		</value>
		<remarks>
			<para> The mouse coordinates are based on the client area of the form.</para>
		</remarks>
		<example>
			<para> The following example demonstrates using different mouse
      events to draw the path of the mouse on a <see cref="System.Windows.Forms.Panel"/>. A line segment is added
      to the <see cref="System.Drawing.Drawing2D.GraphicsPath"/> for each <see cref="System.Windows.Forms.Control.MouseMove"/> and <see cref="System.Windows.Forms.Control.MouseDown"/> events that occur. To update the graphics,
      the <see cref="System.Windows.Forms.Control.Invalidate"/> method is called for the <see cref="System.Windows.Forms.Panel"/> on
      each <see langword="MouseDown"/> and <see langword="MouseUp"/> event. In addition,
      the graphic path is scrolled up or down when the <see cref="System.Windows.Forms.Control.MouseWheel"/> event occurs. Additional mouse events,
      like <see cref="System.Windows.Forms.Control.MouseHover"/>, are identified on screen as well. Also
      displayed on the screen is additional information about the mouse from
      the <see cref="System.Windows.Forms.SystemInformation"/> class.
      </para>
			<codelink SampleID="System.Windows.Forms.MouseEvent" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MouseEventArgs.Y"/>
		<seealso cref="System.Windows.Forms.MouseEventArgs.Delta"/>
	</doc>
	<doc for="MouseEventArgs.Y">
		<summary>
			<para> Gets the y-coordinate of the mouse.</para>
		</summary>
		<value>
			<para>The y-coordinate of the mouse, in pixels.</para>
		</value>
		<remarks>
			<para> The mouse coordinates are based on the client area of the form.</para>
		</remarks>
		<example>
			<para> The following example demonstrates using different mouse
      events to draw the path of the mouse on a <see cref="System.Windows.Forms.Panel"/>. A line segment is added
      to the <see cref="System.Drawing.Drawing2D.GraphicsPath"/> for each <see cref="System.Windows.Forms.Control.MouseMove"/> and <see cref="System.Windows.Forms.Control.MouseDown"/> events that occur. To update the graphics,
      the <see cref="System.Windows.Forms.Control.Invalidate"/> method is called for the <see cref="System.Windows.Forms.Panel"/> on
      each <see langword="MouseDown"/> and <see langword="MouseUp"/> event. In addition,
      the graphic path is scrolled up or down when the <see cref="System.Windows.Forms.Control.MouseWheel"/> event occurs. Additional mouse events,
      like <see cref="System.Windows.Forms.Control.MouseHover"/>, are identified on screen as well. Also
      displayed on the screen is additional information about the mouse from
      the <see cref="System.Windows.Forms.SystemInformation"/> class.
      </para>
			<codelink SampleID="System.Windows.Forms.MouseEvent" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MouseEventArgs.X"/>
		<seealso cref="System.Windows.Forms.MouseEventArgs.Delta"/>
	</doc>
</docs>
