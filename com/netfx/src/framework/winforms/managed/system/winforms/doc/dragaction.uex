<docs>
	<doc for="DragAction.Continue">
		<summary>
			<para>
       The operation will continue.
    </para>
		</summary>
	</doc>
	<doc for="DragAction.Drop">
		<summary>
			<para>
       The operation will stop with a drop.
    </para>
		</summary>
	</doc>
	<doc for="DragAction.Cancel">
		<summary>
			<para>
       The operation is canceled with no
       drop message.
       
    </para>
		</summary>
	</doc>
	<doc for="DragAction">
		<summary>
			<para>       Specifies how and if a drag-and-drop operation should continue.
      </para>
		</summary>
		<remarks>
			<para>       This enumeration is used by <see cref="System.Windows.Forms.QueryContinueDragEventArgs"/>.
   </para>
		</remarks>
		<example>
			<para>The following example demonstrates a drag-and-drop
      operation between two <see cref="System.Windows.Forms.ListBox"/> controls. The example calls
      the <see cref="System.Windows.Forms.Control.DoDragDrop"/> method when the drag action starts. The
      drag action starts if the mouse has moved more than <see cref="System.Windows.Forms.SystemInformation.DragSize" qualify="true"/> from
      the mouse location during the <see cref="System.Windows.Forms.Control.MouseDown"/> event.
      The <see cref="System.Windows.Forms.ListBox.IndexFromPoint"/> method is used to determine the index of
      the item to drag during the <see langword="MouseDown"/> event.</para>
			<para> The example also demonstrates using custom cursors for the drag-and-drop operation.
      The example assumes that two cursor files, <c>3dwarro.cur</c> and <c>3dwno.cur</c>, exist in the application
   directory, for the custom drag and no-drop cursors, respectively. The custom
   cursors will be used if the <c>UseCustomCursorsCheck</c>
				<see cref="System.Windows.Forms.CheckBox"/> is checked. The custom
cursors are set in the <see cref="System.Windows.Forms.Control.GiveFeedback"/> event
handler. </para>
			<para>The keyboard state is evaluated in the <see cref="System.Windows.Forms.Control.DragOver"/> event handler for the right
<see langword="ListBox"/>, to determine what the drag operation will be based 
upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the
<see langword="ListBox"/> where the drop would occur is also determined during 
the <see langword="DragOver"/> event. If the data to drop is not a
<see langword="String"/>, then the <see cref="System.Windows.Forms.DragEventArgs.Effect" qualify="true"/> is set to <see cref="System.Windows.Forms.DragDropEffects.None" qualify="true"/>. Finally, the status of the drop is 
displayed in the <c>DropLocationLabel</c>
				<see cref="System.Windows.Forms.Label"/>. </para>
			<para>The data to drop for the right <see langword="ListBox"/> is determined in
the <see cref="System.Windows.Forms.Control.DragDrop"/> event handler and the
<see langword="String"/> value is added at the appropriate place in the 
<see langword="ListBox"/>. If the drag operation moves outside the bounds of the 
form, then the drag-and-drop operation is canceled in the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event handler. </para>
			<para>This code excerpt demonstrates using the <see cref="System.Windows.Forms.DragAction"/> enumeration. See the <see cref="System.Windows.Forms.Control.DoDragDrop"/> method for the complete code example.</para>
			<codelink SampleID="System.Windows.Forms.Control.DoDragDrop" SnippetID="6"/>
		</example>
	</doc>
</docs>
