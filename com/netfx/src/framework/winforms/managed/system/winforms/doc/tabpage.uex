<docs>
	<doc for="TabPage.GetTCITEM">
		<summary>
		</summary>
	</doc>
	<doc for="TabPage.SetBoundsCore">
		<summary>
     overrides main setting of our bounds so that we can control our size and that of our
     TabPages...
 </summary>
	</doc>
	<doc for="TabPage.UpdateParent">
		<summary>
		</summary>
	</doc>
	<doc for="TabPage.TabPageControlCollection.TabPageControlCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabPage.TabPageControlCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.TabPage"/> that contains this collection of controls.</param>
	</doc>
	<doc for="TabPage.TabPageControlCollection">
		<summary>
			<para> Contains the collection of controls that the
   <see cref="System.Windows.Forms.TabPage"/> uses.</para>
		</summary>
	</doc><doc for="TabPage.ShouldSerializeLocation">
		<summary>
			<para>Determines if the <see cref="System.Windows.Forms.Control.Location"/> property needs to be persisted by 
   the Windows Forms Designer as part of the form definition.</para>
		</summary>
		<returns>
			<para>This method always returns
   <see langword="false"/>.</para>
		</returns>
	</doc><doc for="TabPage.CreateControlsInstance">
		<nodoc/>
		<summary>
			<para>Constructs the new instance of the Controls collection objects. Subclasses
      should not call base.CreateControlsInstance. Our version creates a control
      collection that does not support</para>
		</summary>
	</doc><doc for="TabPage.TabPageControlCollection.Add">
		<summary>
			<para>Adds a control to the collection.</para>
		</summary>
		<param name="value">The control to add.</param>
		<exception cref="T:System.ArgumentException">The specified control is a <see cref="System.Windows.Forms.TabPage"/> .</exception>
		<remarks>
			<para>The specified control is added to the end of the
      collection. If the control is already a child of another control, it is removed
      from the other control.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/>. This example uses the <see cref="System.Windows.Forms.TabPage.TabPageControlCollection.Add"/> method to add
a single control, <c>button1</c>, to
the <c>tabPage1</c>.
Notice the <see cref="P:System.Windows.Forms.Control.Controls"/> property is used to get
the <c>tabPage1</c>
controls collection to add controls to the collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="TabPageControlCollection.Add" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabPage">
		<summary>
			<para>Represents a single tab page in a <see cref="System.Windows.Forms.TabControl"/>.</para>
		</summary>
		<remarks>
			<para>For more information about how this control responds to
      the <see cref="System.Windows.Forms.Control.Focus"/> and <see cref="System.Windows.Forms.Control.Select"/> methods, see the
      following <see cref="System.Windows.Forms.Control"/> members: <see cref="System.Windows.Forms.Control.CanFocus"/>, <see cref="System.Windows.Forms.Control.CanSelect"/>, <see cref="System.Windows.Forms.Control.Focused"/>, <see cref="System.Windows.Forms.Control.ContainsFocus"/>, <see cref="System.Windows.Forms.Control.Focus"/>, <see cref="System.Windows.Forms.Control.Select"/>
      .</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/> with one <see cref="System.Windows.Forms.TabPage"/>
.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPage" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc>
	<doc for="TabPage.TabPage">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabPage"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabPage"/> class.</para>
		</summary>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . The <see cref="M:System.Windows.Forms.TabPage.#ctor"/>
constructor instantiates <c>tabPage1</c>
.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPage_constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabPage.ImageIndex">
		<summary>
			<para>Gets or sets the index to the image displayed on this tab.</para>
		</summary>
		<value>
			<para> The zero-based index to the image in the <see cref="System.Windows.Forms.TabControl.ImageList" qualify="true"/> that appears on the tab. The default is -1,
   which signifies no image.</para>
		</value>
		<exception cref="T:System.ArgumentException">The <see cref="System.Windows.Forms.TabPage.ImageIndex"/> value is less than -1.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TabPage.ImageIndex"/> points to an image in the 
   associated <see cref="System.Windows.Forms.TabControl.ImageList"/> of the <see cref="System.Windows.Forms.TabControl"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . This example uses the <see cref="P:System.Windows.Forms.TabPage.ImageIndex"/> property to specify which
image from <c>myImages</c>
displays on the tab of <c>tabPage1</c>
.</para>
			<para>Use the <see cref="N:System.Drawing"/>, <see cref="N:System.ComponentModel"/>, <see cref="N:System.Windows.Forms"/>, and <see cref="N:System.Resources"/> namespace
for this example.</para>
			<codelink SampleID="TabPage.ImageIndex" SnippetID="1"/>
		</example>
		<seealso cref="P:System.Windows.Forms.TabControl.ImageList"/>
	</doc>
	<doc for="TabPage.TabPage1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabPage"/> class, specifies the text
   for the tab.</para>
		</summary>
		<param name="text">The text for the tab.</param>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TabPage.Text"/> property is set to the value of the
<paramref name="text"/> parameter.</para>
		</remarks>
		<example>
			<para>This example creates a <see cref="System.Windows.Forms.TabControl"/>
with a <see cref="System.Windows.Forms.TabPage"/> . The <see cref="M:System.Windows.Forms.TabPage.#ctor"/> constructor accepts the <c>myTabPage</c>
string as <see cref="System.Windows.Forms.TabPage.Text"/> for <c>tabPage1</c> .</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPage_withText" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabPage.Text">
		<summary>
			<para>Gets or sets the text to display on the tab.</para>
		</summary>
		<value>
			<para>The text to display on the tab.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/> with one <see cref="System.Windows.Forms.TabPage"/>
. The <see cref="System.Windows.Forms.TabPage.Text"/> property sets the tab page
text to <c>myTabPage</c>.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabText" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabPage.ToolTipText">
		<summary>
			<para> Gets or sets the ToolTip text for this tab.</para>
		</summary>
		<value>
			<para> The ToolTip text for this tab.</para>
		</value>
		<remarks>
			<para>This tab page belongs to a <see cref="System.Windows.Forms.TabControl"/>
. The ToolTip text appears when the user moves the mouse over the tab -
if the <see cref="System.Windows.Forms.TabControl.ShowToolTips"/> property of the <see cref="System.Windows.Forms.TabControl"/>
is <see langword="true"/>. For more information on ToolTips, see the <see cref="System.Windows.Forms.ToolTip"/>class.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/> with two <see cref="System.Windows.Forms.TabPage"/> objects. The <see cref="System.Windows.Forms.TabControl"/> is set to allow ToolTips, and the
   tab pages are assigned ToolTip text. </para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="ToolTipText" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl"/>
		<seealso cref="System.Windows.Forms.ToolTip"/>
	</doc>
	<doc for="TabPage.GetTabPageOfComponent">
		<summary>
			<para>Retrieves the tab page that contains the specified object.</para>
		</summary>
		<param name="comp">The object to look for.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.TabPage"/> that
   contains the specified object, or <see langword="null"/> if the object cannot be found.</para>
		</returns>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with two <see cref="System.Windows.Forms.TabPage"/> objects, each containing
one <see cref="System.Windows.Forms.Button"/> component. The parameter <c>button2</c> is passed to
the <see cref="System.Windows.Forms.TabPage.GetTabPageOfComponent"/> method, which retrieves
the <see cref="System.Windows.Forms.TabPage"/> containing <c>button2</c>. To verify that the correct tab page is
retrieved, the <see cref="System.Windows.Forms.TabControl.SelectedIndex"/> property sets the <see cref="System.Windows.Forms.TabPage"/>
containing <c>button2</c> to the currently-selected tab
page.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="GetTabPageOfComponent" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabPage.ToString">
		<summary>
			<para>Returns a string containing the value of the <see cref="System.Windows.Forms.TabPage.Text"/> property.</para>
		</summary>
		<returns>
			<para>A string containing the value of the <see cref="System.Windows.Forms.TabPage.Text"/> property.</para>
		</returns>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with a <see cref="System.Windows.Forms.TabPage"/> object. The <see cref="System.Windows.Forms.TabPage.ToString"/> method creates a
string that includes the <see cref="System.Windows.Forms.TabPage.Text"/> value for <c>tabPage1</c> and returns it to
the <c>tabPage1</c>
				<see cref="System.Windows.Forms.TabPage.ToolTipText"/> property.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="TabPage.ToString" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabPage.Anchor">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the way that the tab page anchors to the edges of its container.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.AnchorStyles"/> values, or a combination of those values. The default is the bitwise OR
   combination of <see langword="Top"/> and <see langword="Left"/>.</para>
		</value>
		<remarks>
			<para>When a tab page is anchored to an edge of a tab control, the distance between the tab page and the specified edge
      remains constant when the tab control resizes. For example, if a tab
      page is anchored to the right edge of its tab control, the distance between
      the right edge of the tab page and the right edge of the tab
      control remains constant when the tab control resizes. A tab page can
      be anchored to any combination of edges. If the tab page is anchored
      to opposite edges of its container (for example, the top and bottom), it
      resizes when the tab control resizes. If a tab page has its <see cref="System.Windows.Forms.Control.Anchor"/> property set to
   <see langword="AnchorStyle.None"/>, the tab page moves half of the
      distance that the tab control is resized. For example, if a <see cref="System.Windows.Forms.TabPage"/>
      has its <see cref="System.Windows.Forms.TabPage.Anchor"/> property set to
   <see langword="AnchorStyle.None"/> and the <see cref="System.Windows.Forms.TabControl"/>
   that
   the tab page is located
   on is resized by 20 pixels in either direction, the button will be
   moved 10 pixels in both directions.</para>
		</remarks>
	</doc>
	<doc for="TabPage.Dock">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the position and manner in which the tab page is docked. </para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.DockStyle"/> values. The default is
<see langword="None"/>.</para>
		</value>
		<remarks>
			<para>When a control is docked to an edge of it's container, it will always be positioned
      flush against that edge when the container is resized. If more than
      one control is docked to an edge, the controls will not be placed on top of each
      other.</para>
			<para>If <see langword="Left "/>or <see langword="Right "/>is selected, the left and right
   edges of the control are resized to the same size as the containing
   control's edge. Likewise, if <see langword="Top "/>or <see langword="Bottom "/>is selected, the top and bottom edges of
   the control are resized to the same size as the containing control's edge.
   If <see langword="Fill "/>
   is selected, all sides of the
   control are resized to the same size as the containing control's edges.</para>
		</remarks>
	</doc>
	<doc for="TabPage.DockChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabPage.Enabled">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the tab is enabled.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the tab is enabled; otherwise,
<see langword="false"/>. The default is
<see langword="true"/>.</para>
		</value>
	</doc>
	<doc for="TabPage.EnabledChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabPage.TabIndex">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>The index of this tab page into the <see cref="System.Windows.Forms.TabControl"/> object's tab-page collection.</para>
		</summary>
		<value>
			<para>The index of this
      tab in the collection.</para>
		</value>
		<remarks>
			<para>You can access the tab-page collection through the <see cref="System.Windows.Forms.TabControl.TabPages"/> property of the <see cref="System.Windows.Forms.TabControl"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc>
	<doc for="TabPage.TabIndexChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabPage.TabStop">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the focus moves
      to this tab page when the user presses the TAB key.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the focus moves to this tab page when
   the user presses the TAB key; otherwise, <see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
	</doc>
	<doc for="TabPage.TabStopChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabPage.Visible">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the tab is visible.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the tab is visible; otherwise,
<see langword="false"/>. The default is
<see langword="true"/>.</para>
		</value>
	</doc>
	<doc for="TabPage.VisibleChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
</docs>
