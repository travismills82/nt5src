<docs>
	<doc for="DataGrid.ShouldPersistAlternatingBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.ResetAlternatingBackColor"/>
	</doc>
	<doc for="DataGrid.BackBrush">
		<summary>
			<para>
       Gets a value
       indicating whether the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> property should be
       persisted.
    </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
       default; otherwise, <see langword="false"/>.
    </para>
		</returns>
		<remarks>
			<para>
       You typically use this method only if you are either creating a designer for
       the <see cref="System.Windows.Forms.DataGrid"/>, or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. 
    </para>
		</remarks>
	</doc>
	<doc for="DataGrid.BorderStyle">
		<summary>
			<para>Gets or sets
       the grid's border style.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BorderStyle"/> enumeration values. The default is
 <see langword="FixedSingle"/>.</para>
		</value>
		<example>
			<para>The following example sets the style of the grid's border.</para>
			<codelink SampleID="Classic DataGrid.BorderStyle Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.BorderStyleChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.BorderStyle"/> has changed.</para>
		</summary>
		<remarks>
			<para>Possible values include <see langword="None"/>, <see langword="FixedSingle"/>, 
    and <see langword="Fixed3D"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ResetCaptionBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.CaptionBackColor"/> property to its default 
    value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldPersistCaptionBackColor"/> method to determine whether the property value 
       has changed from its default.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ResetCaptionForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.CaptionForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldPersistCaptionForeColor"/> method to determine whether the property value 
       has changed from its default.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ShouldSerializeCaptionFont">
		<summary>
			<para>
       Gets a value indicating whether the
       caption's font is persisted.
    </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the caption's font is
       persisted; otherwise, <see langword="false"/> .
    </para>
		</returns>
		<remarks>
			<para>
       You typically use this method only if you are either creating a designer for
       the <see cref="System.Windows.Forms.DataGrid"/>, or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. 
    </para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionFont"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionText"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionForeColor"/>
	</doc>
	<doc for="DataGrid.ResetCaptionFont">
		<summary>
			<para>
       Resets the <see cref="System.Windows.Forms.DataGrid.CaptionFont"/> property to its default value.
    </para>
		</summary>
		<remarks>
			<para>
       You typically use this method only if you are either creating a designer for
       the <see cref="System.Windows.Forms.DataGrid"/>, or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. 
    </para>
		</remarks>
		<example>
			<para>
       The following example resets the font of the grid's caption.
    </para>
			<codelink SampleID="Classic DataGrid.ResetCaptionFont Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionFont"/>
		<seealso cref="System.Windows.Forms.DataGrid.ShouldPersistCaptionFont"/>
	</doc>
	<doc for="DataGrid.ShouldPersistSelectionBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.SelectionBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating
       the <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.SelectionBackColor"/>
	</doc>
	<doc for="DataGrid.ShouldPersistSelectionForeColor">
		<summary>
			<para>Indicates whether the <see cref="T:System.Drawing.DataGrid.SelectionForeColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="DataGrid.ShouldSerializeBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.BackColor"/> property should be 
    persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
    default; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method only if you are either creating a designer for 
       the <see cref="System.Windows.Forms.DataGrid"/>, or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. </para>
		</remarks>
	</doc>
	<doc for="DataGrid.CreateDataGridRows">
		<summary>
      Given a cursor, this will Create the right DataGridRows
 </summary>
	</doc>
	<doc for="DataGrid.SetDataGridRows">
		<summary>
      Sets the array of DataGridRow objects used for
      all row-related logic in the DataGrid.
 </summary>
	</doc>
	<doc for="DataGrid.ShouldPersistGridLineColor">
		<summary>
			<para>
       Indicates whether the <see cref="System.Windows.Forms.DataGrid.ShouldPersistGridLineColor"/> property should be
       persisted.
    </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
       default; otherwise, <see langword="false"/>.
    </para>
		</returns>
		<remarks>
			<para>
       You typically use this method only if you are either creating a designer for
       the <see cref="System.Windows.Forms.DataGrid"/>, or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. 
    </para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.GridLineColor"/>
	</doc>
	<doc for="DataGrid.GridLineBrush">
		<summary>
			<para>
       Gets or sets the brush of the grid lines.
    </para>
		</summary>
		<value>
			<para>
       A <see cref="System.Drawing.Color"/>
       which represents the color of the grid lines.
    </para>
		</value>
		<remarks>
			<code lang="VB">
 Private Sub SetLineStyle(ByRef myGrid As DataGrid, ByVal style As DataGridLineStyle)
    myGrid.GridLineStyle = style
 End SUb
    </code>
		</remarks>
	</doc>
	<doc for="DataGrid.GridLineStyle">
		<summary>
			<para>
       Gets or sets the line style of the grid.
    </para>
		</summary>
		<value>
			<para>
       One of the <see cref="System.Windows.Forms.DataGridLineStyle"/> values. The
       default is <see langword="Solid"/>.
    </para>
		</value>
		<example>
			<para>
       The following example changes the <see cref="System.Windows.Forms.DataGrid.GridLineStyle"/>
       property to show no lines.
    </para>
			<codelink SampleID="Classic DataGrid.GridLineStyle Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.GridLineColor"/>
	</doc>
	<doc for="DataGrid.ShouldPersistHeaderBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.HeaderBackColor"/> property should be 
    persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ShouldPersistHeaderFont">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.HeaderFont"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
    default; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the 
    <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the 
    <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ShouldPersistHeaderForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.HeaderForeColor"/> property should be 
    persisted.</para>
		</summary>
		<returns>
			<see langword="true"/> if the property value 
    has changed from its default; otherwise, <see langword="false"/>.
 </returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.HorizScrollBar">
		<summary>
			<para>Gets the horizontal scrollbar for the grid.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.ScrollBar"/> for the grid.</para>
		</value>
		<seealso cref="System.Windows.Forms.DataGrid.VertScrollBar"/>
	</doc>
	<doc for="DataGrid.LedgerStyle">
		<summary>
			<para>
       Retrieves a value indicating whether odd and even
       rows are painted using a different background color.
    </para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if alternating rows are painted 
       with a different background color; otherwise; <see langword="false"/>.
    </para>
		</value>
	</doc>
	<doc for="DataGrid.ShouldPersistLinkColor">
		<summary>
			<para>
       Indicates whether the <see cref="System.Windows.Forms.DataGrid.LinkColor"/> property should be persisted.
    </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
       default; otherwise, <see langword="false"/>.
    </para>
		</returns>
		<remarks>
			<para>
       You typically use this method only if you are either creating a designer for
       the <see cref="System.Windows.Forms.DataGrid"/>, or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. 
    </para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.LinkColor"/>
	</doc>
	<doc for="DataGrid.ResetParentRowsBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.ParentRowsBackColor"/> property to its default 
    value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldPersistParentRowsBackColor"/> method to determine whether the property value 
       has changed from its default.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ResetParentRowsForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.ParentRowsForeColor"/> property to its default 
    value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGrid"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldPersistParentRowsForeColor"/> method to determine whether the property value 
       has changed from its default.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ShouldPersistPreferredRowHeight">
		<summary>
    Indicates whether the <see cref="System.Windows.Forms.DataGrid.PreferredRowHeight"/> property should be persisted.
 </summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating
       the <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.ParentRowsVisible">
		<summary>
			<para>
       Gets or sets a value indicating whether the parent rows of a table are
       visible.
    </para>
		</summary>
		<value>
			<para>
				<see langword="true "/>if the parent rows are visible; otherwise, 
    <see langword="false"/>. The 
       default is <see langword="true"/>.
    </para>
		</value>
		<example>
			<para>The following example toggles the <see cref="System.Windows.Forms.DataGrid.ParentRowsVisible"/> property.</para>
			<codelink SampleID="Classic DataGrid.ParentRowsVisible Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.VertScrollBar">
		<summary>
			<para>
       Gets the vertical scroll bar of the control.
    </para>
		</summary>
		<value>
			<para>
       The grid's vertical <see cref="System.Windows.Forms.ScrollBar"/>.
    </para>
		</value>
		<seealso cref="System.Windows.Forms.DataGrid.HorizScrollBar"/>
	</doc>
	<doc for="DataGrid.WireDataSource">
		<summary>
      DataSource events are handled
 </summary>
	</doc>
	<doc for="DataGrid.DataSource_PositionChanged">
		<summary>
			<para>
       Fired by the DataSource when row position moves.
    </para>
		</summary>
	</doc>
	<doc for="DataGrid.OnBorderStyleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.BorderStyleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnCaptionVisibleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.CaptionVisibleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnCurrentCellChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.CurrentCellChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnCurrentCellChange">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.CurrentCellChange"/>
 event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When overriding
    <see cref="System.Windows.Forms.DataGrid.OnCurrentCellChange"/> in a derived class, be sure to call 
       the base class's <see cref="System.Windows.Forms.DataGrid.OnCurrentCellChange"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnAutoSizeChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.AutoSizeChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.AutoSizeChanged">
		<summary>
			<para>Occurs when the AutoSize has changed.</para>
		</summary>
	</doc>
	<doc for="DataGrid.OnParentRowsVisibleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.ParentRowsVisibleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnNodeClick">
		<summary>
			<para>
       Raises the <see cref="System.Windows.Forms.DataGrid.ColumnResize"/> event.
    </para>
		</summary>
		<param name="e">
    An <see cref="System.EventArgs"/> that contains the event data.
 </param>
		<remarks>
			<para>
       Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.
    </para>
			<para>
				<see langword="Notes to Inheritors "/>When overriding <see cref="System.Windows.Forms.DataGrid.OnColumnResize"/> in a derived class, be sure to 
       call the base class's <see cref="System.Windows.Forms.DataGrid.OnColumnResize"/> method.
    </para>
		</remarks>
	</doc>
	<doc for="DataGrid.GridHScrolled">
		<summary>
			<para>
       Listens
       for the horizontal scrollbar's scroll
       event.
    </para>
		</summary>
		<param name="sender">
    An <see cref="System.Object"/> that contains data about the control.
 </param>
		<param name="se">
    A <see cref="System.Windows.Forms.ScrollEventArgs"/> that contains the event data.
 </param>
	</doc>
	<doc for="DataGrid.GridVScrolled">
		<summary>
			<para>
       Listens
       for the vertical scrollbar's scroll event.
    </para>
		</summary>
		<param name="sender">
    An <see cref="System.Object"/> that contains data about the control.
 </param>
		<param name="se">
    A <see cref="System.Windows.Forms.ScrollEventArgs"/> that contains the event data.
 </param>
	</doc>
	<doc for="DataGrid.OnMouseLeave">
		<summary>
			<para>Creates the <see cref="System.Windows.Forms.Control.MouseLeave"/>
 event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains data about the <see cref="System.Windows.Forms.Control.OnMouseLeave"/> event.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.DataGrid.OnMouseLeave"/> in a derived class, be sure to call
       the base class's <see cref="System.Windows.Forms.DataGrid.OnMouseLeave"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnMouseMove">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.MouseMove"/>
 event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains data about the <see cref="System.Windows.Forms.Control.OnMouseMove"/> event.</param>
		<remarks>
			<para>Raising an event invokes the event handler
       through a delegate. For an overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When
       overriding <see cref="System.Windows.Forms.DataGrid.OnMouseMove"/> in a derived class, be sure to call
       the base class's <see cref="System.Windows.Forms.DataGrid.OnMouseMove"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnMouseUp">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.MouseUp"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains data about the <see cref="System.Windows.Forms.Control.OnMouseUp"/> event.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.DataGrid.OnMouseUp"/> in a derived class, be sure to call
       the base class's <see cref="System.Windows.Forms.DataGrid.OnMouseUp"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnMouseWheel">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.MouseWheel"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains data about the <see cref="System.Windows.Forms.Control.OnMouseUp"/> event.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.DataGrid.OnMouseWheel"/> in a derived class, be sure to call
       the base class's <see cref="System.Windows.Forms.DataGrid.OnMouseWheel"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnPaint">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.Paint"/> event.</para>
		</summary>
		<param name="pe">A <see cref="System.Windows.Forms.PaintEventArgs"/> which contains data about the event.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.DataGrid.OnPaint"/> in a derived class, be sure to call
       the base class's <see cref="System.Windows.Forms.DataGrid.OnPaint"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnResize">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.Resize"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.DataGrid.OnResize"/> in a derived class, be sure to call
       the base class's <see cref="System.Windows.Forms.DataGrid.OnResize"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataGrid.CurrentCellChange">
		<summary>
			<para>Occurs when the selected cell changes.</para>
		</summary>
		<example>
			<para>The following example prints the current row and column number using the
    <see cref="System.Windows.Forms.DataGrid.CurrentCell"/> property to return a <see cref="System.Windows.Forms.DataGridCell"/>.</para>
			<codelink SampleID="Classic DataGrid.CurrentCellChange Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CurrentCell"/>
		<seealso cref="System.Windows.Forms.DataGridCell"/>
	</doc>
	<doc for="DataGrid.RowHeaderClick">
		<summary>
			<para>Occurs when a row header is clicked.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.NodeClick">
		<summary>
			<para>
       Adds an event handler for the <see cref="System.Windows.Forms.DataGrid.OnNodeClick"/>
       event.
    </para>
		</summary>
		<param name="handler">
    Handler to notify when the <see cref="System.Windows.Forms.DataGrid.OnNodeClick"/> event occurs.
 </param>
	</doc>
	<doc for="DataGrid.ClearRegionCache">
		<summary>
      The DataGrid caches an array of rectangular areas
      which represent the area which scrolls left to right.
      This method is invoked whenever the DataGrid's
      scrollable regions change in such a way as to require
      a re-recalculation.
 </summary>
	</doc>
	<doc for="DataGrid.ColAutoResize">
		<summary>
      Determines the best fit size for the given column.
 </summary>
	</doc>
	<doc for="DataGrid.ColumnHeaderClicked">
		<summary>
      Fires the ColumnHeaderClicked event and handles column
      sorting.
 </summary>
	</doc>
	<doc for="DataGrid.CommitEdit">
		<summary>
      Attempts to commit editing if a cell is being edited.
      Return true if successfully commited editing.
      Return false if editing can not be completed and the gird must
      remain in our current Edit state.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeColumnDelta">
		<summary>
      Computes the number of pixels to scroll to scroll from one
      column to another.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeDeltaRows">
		<summary>
      Figure out how many rows we need to scroll down
      to move targetRow into visibility.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeFirstVisibleRow">
		<summary>
      Given the a logical vertical offset, figure out
      which row number should be the first fully visible
      row on or after the offset.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeLayout">
		<summary>
      Constructs an updated Layout object.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeRowDelta">
		<summary>
      Computes the number of pixels to scroll to scroll from one
      row to another.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeVisibleColumns">
		<summary>
      Updates the internal variables with the number of columns visible
      inside the Grid's client rectangle.
 </summary>
		<remarks>
      This should not be called when the grid is unbound.
 </remarks>
	</doc>
	<doc for="DataGrid.ComputeFirstVisibleColumn">
		<summary>
      Determines which column is the first visible given
      the object's horizontalOffset.
 </summary>
	</doc>
	<doc for="DataGrid.ComputeVisibleRows">
		<summary>
      Updates the internal variables with the number of rows visible
      in a given DataGrid Layout.
 </summary>
		<remarks>
      This should not be called when the grid is unbound.
 </remarks>
	</doc>
	<doc for="DataGrid.CreateChildState">
		<summary>
      Creates a DataGridState representing the child table retrieved
      from the passed DataRelation.
 </summary>
	</doc>
	<doc for="DataGrid.CreateInitialLayoutState">
		<summary>
      Constructs a Layout object containing the state
      for a newly constructed DataGrid.
 </summary>
	</doc>
	<doc for="DataGrid.CreateScrollableRegion">
		<summary>
      The DataGrid caches an array of rectangular areas
      which represent the area which scrolls left to right.
      This method is invoked whenever the DataGrid needs
      this scrollable region.
 </summary>
	</doc>
	<doc for="DataGrid.DrawColSplitBar">
		<summary>
      Draws an XOR region to give UI feedback for Column Resizing.
      This looks just like the Splitter control's UI when resizing.
 </summary>
	</doc>
	<doc for="DataGrid.DrawRowSplitBar">
		<summary>
      Draws an XOR region to give UI feedback for Row Resizing.
      This looks just like the Splitter control's UI when resizing.
 </summary>
	</doc>
	<doc for="DataGrid.DrawSplitBar">
		<summary>
      Draws an XOR region to give UI feedback for Column/Row Resizing.
      This looks just like the Splitter control's UI when resizing.
 </summary>
	</doc>
	<doc for="DataGrid.Edit">
		<summary>
      Begin in-place editing of a cell.  Any editing is commited
      before the new edit takes place.

      This will always edit the currentCell
      If you want to edit another cell than the current one, just reset CurrentCell
 </summary>
	</doc>
	<doc for="DataGrid.EndEdit1">
		<summary>
      Ends any editing in progress by attempting to commit and then
      aborting if not possible.
 </summary>
	</doc>
	<doc for="DataGrid.Expand">
		<summary>
			<para>
       Displays child relations, if any exist, for all rows or a
       specific row.
    </para>
		</summary>
		<param name="row">
    The number of the row to expand. If set to -1, all rows are expanded.
 </param>
		<example>
			<codelink SampleID="Classic DataGrid.Expand Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.Expand"/>
	</doc>
	<doc for="DataGrid.GetColFromX">
		<summary>
      Given a x coordinate, returns the column it is over.
 </summary>
	</doc>
	<doc for="DataGrid.GetColBeg">
		<summary>
      Returns the coordinate of the left edge of the given column
      Bi-Di: if the grid has the RightToLeft property set to RightToLeft.Yes, this will
      return what appears as the right edge of the column
 </summary>
	</doc>
	<doc for="DataGrid.GetColEnd">
		<summary>
      Returns the coordinate of the right edge of the given column
      Bi-Di: if the grid has the RightToLeft property set to RightToLeft.Yes, this will
      return what appears as the left edge of the column
 </summary>
	</doc>
	<doc for="DataGrid.GetExpandableRows">
		<summary>
      Not all rows in the DataGrid are expandable,
      this computes which ones are and returns an array
      of references to them.
 </summary>
	</doc>
	<doc for="DataGrid.GetRowFromY">
		<summary>
      Returns the row number underneath the given y coordinate.
 </summary>
	</doc>
	<doc for="DataGrid.GetRowRect">
		<summary>
      Determines where on the control's ClientRectangle a given row is
      painting to.
 </summary>
		<returns>A Rectangle where a given row paints to relative to the
           top-left of the control.  A null reference is returned
           if the row is not visible.
 </returns>
	</doc>
	<doc for="DataGrid.GetRowTop">
		<summary>
      Returns the coordinate of the top edge of the given row
 </summary>
	</doc>
	<doc for="DataGrid.GetRowBottom">
		<summary>
      Returns the coordinate of the bottom edge of the given row
 </summary>
	</doc>
	<doc for="DataGrid.EnsureBound">
		<summary>
      This method is called on methods that need the grid
      to be bound to a DataTable to work.
 </summary>
	</doc>
	<doc for="DataGrid.GetCurrentCellBounds">
		<summary>
			<para>Gets a <see cref="T:System.Drawing.Rectangle"/>
 that specifies the four corners of the selected cell.</para>
		</summary>
		<returns>
			<para>A <see cref="T:System.Drawing.Rectangle"/> that defines the current cell's corners.</para>
		</returns>
		<example>
			<para>The following example gets the <see cref="System.Drawing.Rectangle"/> of
    the selected cell.</para>
			<codelink SampleID="Classic DataGrid.GetCurrentCellBounds Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.GetCellBounds"/>
	</doc>
	<doc for="DataGrid.GetCellBounds1">
		<summary>
			<para>Gets the <see cref="T:System.Drawing.Rectangle"/> of the cell specified by <see cref="System.Windows.Forms.DataGridCell"/>.</para>
		</summary>
		<param name="dgc">The <see cref="System.Windows.Forms.DataGridCell"/> to look up.</param>
		<returns>
			<para>A <see cref="T:System.Drawing.Rectangle"/> that defines the current cell's corners.</para>
		</returns>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.GetCellBounds"/> method to return a <see cref="T:System.Drawing.Rectangle"/> of a
    specified cell.</para>
			<codelink SampleID="Classic DataGrid.GetCellBounds1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.GetCurrentCellBounds"/>
	</doc>
	<doc for="DataGrid.InitializeColumnWidths">
		<summary>
      Initializes the values for column widths in the table.
 </summary>
		<remarks>
      If the preferredColumnWidth is set to AutoColumnSize, we
      examine several rows in the dataSet and determine the
      best fit from the size of the data in the column.
      Otherwise, all column widths are set to preferredColumnWidth.
 </remarks>
	</doc>
	<doc for="DataGrid.InvalidateInside">
		<summary>
      Invalidates the scrollable area of the DataGrid.
 </summary>
	</doc>
	<doc for="DataGrid.InvalidateCaption">
		<summary>
      Invalidates the caption area of the DataGrid.
 </summary>
	</doc>
	<doc for="DataGrid.InvalidateCaptionRect">
		<summary>
      Invalidates a rectangle normalized to the caption's
      visual bounds.
 </summary>
	</doc>
	<doc for="DataGrid.InvalidateColumn">
		<summary>
      Invalidates the display region of a given DataGridColumn.
 </summary>
	</doc>
	<doc for="DataGrid.InvalidateParentRows">
		<summary>
      Invalidates the parent rows area of the DataGrid
 </summary>
	</doc>
	<doc for="DataGrid.InvalidateParentRowsRect">
		<summary>
      Invalidates a rectangle normalized to the parent
      rows area's visual bounds.
 </summary>
	</doc>
	<doc for="DataGrid.InvalidateRow">
		<summary>
      Invalidate the painting region for the row specified.
 </summary>
	</doc>
	<doc for="DataGrid.IsExpanded">
		<summary>
			<para>Gets a value that indicates whether a specified row's node is expanded or collapsed.</para>
		</summary>
		<param name="rowNumber">The number of the row in question.</param>
		<returns>
			<para>
				<see langword="true "/>if the node is expanded; otherwise, 
 <see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following example tests each row in the grid, and prints the row number of expanded
       rows.</para>
			<codelink SampleID="Classic DataGrid.IsExpanded Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.Collapse"/>
	</doc>
	<doc for="DataGrid.LayoutScrollBars">
		<summary>
      Determines if Scrollbars should be visible,
      updates their bounds and the bounds of all
      other regions in the DataGrid's Layout.
 </summary>
	</doc>
	<doc for="DataGrid.NavigateBack">
		<summary>
			<para>Navigates back to the table previously displayed in the grid.</para>
		</summary>
		<remarks>
			<para>If the grid has no parent rows, no change occurs.</para>
		</remarks>
		<example>
			<codelink SampleID="Classic DataGrid.NavigateBack Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.NormalizeToRow">
		<summary>
      Given a coordinate in the control this method returns
      the equivalent point for a row.
 </summary>
	</doc>
	<doc for="DataGrid.PaintColumnHeaders">
		<summary>
      Paints column headers.
 </summary>
	</doc>
	<doc for="DataGrid.PaintBorder">
		<summary>
      Paints a border around the bouding rectangle given
 </summary>
	</doc>
	<doc for="DataGrid.PaintGrid">
		<summary>
      Paints the grid in the bounding rectangle given.
      This includes the column headers and each visible row.
 </summary>
	</doc>
	<doc for="DataGrid.PaintRows">
		<summary>
      Paints the visible rows on the grid.
 </summary>
	</doc>
	<doc for="DataGrid.ProcessKeyPreview">
		<summary>
			<para>Previews a keyboard message and returns a value indicating if the key was
       consumed.</para>
		</summary>
		<param name="m">A <see cref="System.Windows.Forms.Message"/> that contains data about the event. The parameter is passed by reference.</param>
		<returns>
			<para>
				<see langword="true"/>, if the key was consumed; 
    otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>This method is called by a child control when the child 
       control receives a keyboard message. The child control calls this method before
       generating any keyboard events for the message. If this method returns
    <see langword="true"/> 
    , the child control
    considers the message consumed and does not generate any keyboard events.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.MagnifyingGlassButtonClick">
		<summary>
			<para>Occurs when the down button is clicked.</para>
		</summary>
	</doc>
	<doc for="DataGrid.ResetSelection">
		<summary>
      Turns off selection for all rows that are selected.
 </summary>
	</doc>
	<doc for="DataGrid.ResetUIState">
		<summary>
      Re-initializes all UI related state.
 </summary>
	</doc>
	<doc for="DataGrid.ScrollDown">
		<summary>
      Scrolls the datagrid down an arbritrary number of rows.
 </summary>
	</doc>
	<doc for="DataGrid.ScrollRight">
		<summary>
      Scrolls the datagrid right an arbritrary number of columns.
 </summary>
	</doc>
	<doc for="DataGrid.ScrollTo">
		<summary>
      Scrolls a given row and column pair into visibility.
 </summary>
	</doc>
	<doc for="DataGrid.SetDataGridTable">
		<summary>
      Sets the current GridTable for the DataGrid.
      This GridTable is the table which is currently
      being displayed on the grid.
 </summary>
	</doc>
	<doc for="DataGrid.SetParentRowsVisibility">
		<summary>
      Scrolls the data area down to make room for the parent rows
      and lays out the different regions of the DataGrid.
 </summary>
	</doc>
	<doc for="DataGrid.SetRowExpansionState">
		<summary>
      Sets whether a row is expanded or not.
 </summary>
		<param name="row"> Determines which row becomes expanded.
                    If -1, all rows are expanded.
 </param>
		<param name="expanded">
		</param>
	</doc>
	<doc for="DataGrid.SubObjectsSiteChange">
		<param name="site">
		</param>
	</doc>
	<doc for="DataGrid.UpdateListManager">
		<summary>
      Asks the cursor to update.
 </summary>
	</doc>
	<doc for="DataGrid.DataGridAccessibleObject">
		<summary>
     The accessible object class for a DataGrid. The child accessible objects
     are accessible objects corresponding to the property grid entries.
 </summary>
	</doc>
	<doc for="DataGrid.DataGridAccessibleObject.DataGridAccessibleObject">
		<summary>
     Construct a PropertyGridViewAccessibleObject
 </summary>
	</doc>
	<doc for="DataGrid.Policy">
		<summary>
      Holds policy information for what the grid can and cannot do.
 </summary>
	</doc>
	<doc for="DataGrid.RegionCracker">
		<summary>
      Since we don't have a nice managed interfact to GetRegionData(),
      I wrote this piece to do it.
 </summary>
	</doc>
	<doc for="DataGrid.ShouldPersistLinkHoverColor">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.public enum HitTestType {">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.None = 0x00000000,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.Cell = 0x00000001,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.ColumnHeader = 0x00000002,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.RowHeader = 0x00000004,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.ColumnResize = 0x00000008,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.RowResize = 0x00000010,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.Caption = 0x00000020,">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.ParentRows = 0x00000040">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.None">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.Cell">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.ColumnHeader">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.RowHeader">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.ColumnResize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.RowResize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.Caption">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HitTestType.ParentRows">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.HitTestType.None">
		<summary>
			<para>The background area, visible when the control contains no table, 
       few rows, or when a table
       is scrolled to its bottom.</para>
		</summary>
	</doc>
	<doc for="DataGrid.HitTestType.ColumnResize">
		<summary>
			<para>The column border, which is the line between 
       column headers. It can be dragged to resize a column's width.</para>
		</summary>
	</doc>
	<doc for="DataGrid.HitTestType.RowResize">
		<summary>
			<para>The row border, which is the line between grid row 
       headers. It can be dragged to resize a row's height.</para>
		</summary>
	</doc>
	<doc for="DataGrid.HitTestInfo.GetHashCode">
		<summary>
			<para>Gets the hash code for the <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> instance.</para>
		</summary>
		<returns>
			<para>The hash code for this instance.</para>
		</returns>
		<remarks>
			<para>This method overrides <see cref="System.Object.GetHashCode"/>.</para>
		</remarks>
		<example>
			<para>The following example prints the hash code of the <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.GetHashCode Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc>
	<doc for="DataGrid.HitTestInfo.Equals">
		<summary>
			<para>Indicates whether two objects are identical.</para>
		</summary>
		<param name="value">The second object to compare, typed as <see cref="System.Object"/>.</param>
		<returns>
			<para>
				<see langword="true "/>if the objects are equal;
   otherwise, <see langword="false"/> .</para>
		</returns>
		<example>
			<para>The following example tests whether the user is clicking an area of the grid that
      is not valid.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.Nowhere Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestInfo.Nowhere"/>
	</doc>
	<doc for="DataGrid.ShouldSerializeLinkColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.LinkColor"/> property should be persisted. </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
   default; otherwise, <see langword="false"/>. </para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the 
   <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating 
      the <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGrid.OnParentRowsLabelStyleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.ParentRowsLabelStyleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnParentRowsLabelStyleChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnReadOnlyChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.ReadOnlyChanged"/> event</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnReadOnlyChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnReadOnlyChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnReadOnlyChanged"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnBackColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.BackColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnBackColorChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnBackColorChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnBackColorChanged"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnBindingContextChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.BindingContextChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnBindingContextChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnBindingContextChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnBindingContextChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnDataSourceChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.DataSourceChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnDataSourceChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnDataSourceChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnDataSourceChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnDownButtonClicked">
		<summary>
			<para> Listens for
      the caption's down button clicked event.
      </para>
		</summary>
		<param name="sender">An <see cref="System.Object"/> that contains data about the control. </param>
		<param name="e">An <see cref="System.EventArgs"/> that contains data about the event. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnDownButtonClicked"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnDownButtonClicked"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnDownButtonClicked"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnForeColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.ForeColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnForeColorChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnForeColorChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnForeColorChanged"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnFontChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.FontChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnFontChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnFontChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnFontChanged"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnHandleCreated">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.CreateHandle"/>
event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnHandleCreated"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnHandleCreated"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnHandleCreated"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnHandleDestroyed">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.DestroyHandle"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> containing the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnHandleDestroyed"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnHandleDestroyed"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnHandleDestroyed"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnLeave">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.Leave"/>
event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnLeave"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnLeave"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnLeave"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnKeyDown">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.KeyDown"/>
event.</para>
		</summary>
		<param name="ke">A <see cref="System.Windows.Forms.KeyEventArgs"/> that provides data about the <see cref="System.Windows.Forms.Control.OnKeyDown"/> event.</param>
		<remarks>
			<para>
			</para>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnKeyDown"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnKeyDown"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnKeyDown"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnKeyPress">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.KeyPress"/> event.</para>
		</summary>
		<param name="kpe">A <see cref="System.Windows.Forms.KeyPressEventArgs"/> that contains data about the <see cref="System.Windows.Forms.Control.OnKeyPress"/> event</param>
		<remarks>
			<para>
			</para>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnKeyPress"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnKeyPress"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnKeyPress"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGrid.OnFlatModeChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.FlatModeChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnBackgroundColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.BackgroundColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnAllowNavigationChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.AllowNavigationChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.CaptionFont">
		<summary>
			<para> Gets or sets the font of the grid's caption.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Font"/>
that represents the caption's font.</para>
		</value>
		<remarks>
			<para> A <see cref="System.Drawing.Font"/>
encapsulates a Windows font and provides the methods for manipulating that font.</para>
		</remarks>
		<example>
			<para> The following example sets the caption's font using a
   <see cref="System.Drawing.Font"/>
   object.
   </para>
			<codelink SampleID="Classic DataGrid.CaptionFont Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionForeColor"/>
	</doc>
	<doc for="DataGrid.LinkHoverColor">
		<summary>
			<para> Gets
      or sets the color a link changes to when
      the mouse pointer moves over it.
      </para>
		</summary>
		<value>
   A <see cref="System.Drawing.Color"/> that
   represents the color of a link when the mouse pointer moves over it. The default
   is <see cref="System.Drawing.SystemColors.HotTrack"/>.
</value>
		<example>
			<para> The following example sets the <see cref="System.Windows.Forms.DataGrid.LinkHoverColor"/>.
   </para>
			<codelink SampleID="Classic DataGrid.LinkHoverColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.LinkColor"/>
	</doc>
	<doc for="DataGrid.GetCellBounds">
		<overload>
			<para>Gets the <see cref="System.Drawing.Rectangle"/> that specifies the four corners of a
   cell.</para>
		</overload>
		<summary>
			<para>Gets the <see cref="System.Drawing.Rectangle"/> of the cell specified by row and column number.</para>
		</summary>
		<param name="row">The number of the cell's row.</param>
		<param name="col">The number of the cell's column.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that defines the current cell's corners.</para>
		</returns>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.GetCellBounds"/> method to return a <see cref="T:System.Drawing.Rectangle"/> of a
   specified cell.</para>
			<codelink SampleID="Classic DataGrid.GetCellBounds Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.GetCurrentCellBounds"/>
		<seealso cref="System.Windows.Forms.DataGrid.CurrentCell"/>
	</doc>
	<doc for="DataGrid.CancelEditing">
		<summary>
			<para>Cancels the current edit operation and rolls back all changes.</para>
		</summary>
	</doc>
	<doc for="DataGrid.DefaultSize">
		<summary>
			<para>Gets the default size of the control.</para>
		</summary>
		<value>
			<para>The default size of the control.</para>
		</value>
	</doc>
	<doc for="DataGrid.GridLineColor">
		<summary>
			<para>Gets or sets the color of the grid lines.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that 
   represents the color of the grid lines. The default is the system color for
   controls (<see cref="System.Drawing.SystemColors.Control"/>
   ).</para>
		</value>
		<exception cref="System.ArgumentException">The value is not set.</exception>
		<remarks>
			<para>No grid line is displayed if the <see cref="System.Windows.Forms.DataGrid.GridLineStyle"/> property is set to
<see langword="DataGridLineStyle.None"/> . </para>
		</remarks>
		<example>
			<para>The following example sets the color of the grid's lines using a value passed
      to the method.</para>
			<codelink SampleID="Classic DataGrid.GridLineColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.GridLineStyle"/>
	</doc>
	<doc for="DataGrid.HeaderBackColor">
		<summary>
			<para> Gets or
      sets the background color of all row and column headers.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Color"/> that 
   represents the background color of row and column headers. The default is the
   system color for controls, <see cref="System.Drawing.SystemColors.Control"/>.
   </para>
		</value>
		<exception cref="System.ArgumentNullException">While trying to set the property, a <see langword="Color.Empty"/>was passed. </exception>
		<example>
			<para> The following example sets the background color of column headers using a
      value passed to the method.
      </para>
			<codelink SampleID="Classic DataGrid.HeaderBackColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.FlatMode"/>
	</doc>
	<doc for="DataGrid.ParentRowsBackColor">
		<summary>
			<para> Gets or sets the background color of parent rows.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Color"/> that 
   represents the color of parent rows. The default is the <see cref="System.Drawing.SystemColors.Control"/>color.
   </para>
		</value>
		<example>
			<para> The following example sets the <see cref="System.Windows.Forms.DataGrid.ParentRowsBackColor"/>
property to a new
color.</para>
			<codelink SampleID="Classic DataGrid.ParentRowsBackColor Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.ParentRowsForeColor">
		<summary>
			<para> Gets or sets the foreground color of parent rows.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Color"/> that 
   represents the foreground color of parent rows. The default is the <see cref="System.Drawing.SystemColors.WindowText"/>color.
   </para>
		</value>
		<example>
			<para> The following example sets the <see cref="System.Windows.Forms.DataGrid.ParentRowsForeColor"/> property to a new color.
   </para>
			<codelink SampleID="Classic DataGrid.ParentRowsForeColor Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.OnShowParentDetailsButtonClicked">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.ShowParentDetailsButtonClick"/> event.</para>
		</summary>
		<param name="sender">The source of the event.</param>
		<param name=" e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.FirstVisibleColumn">
		<summary>
			<para>Gets the index of the first visible column in a grid.</para>
		</summary>
		<value>
			<para>The index of a <see cref="System.Windows.Forms.DataGridColumnStyle"/>.</para>
		</value>
		<remarks>
			<para>A column is considered visible even
      if it is partially concealed.</para>
			<para>If
      a particular column is not visible, set the <see cref="System.Windows.Forms.DataGrid.CurrentCell"/> property to the cell that should
      be visible.</para>
		</remarks>
		<example>
			<para>The following example scrolls the grid if the first visible column is greater
      than five.</para>
			<codelink SampleID="Classic DataGrid.FirstVisibleColumn Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CurrentCell"/>
	</doc>
	<doc for="DataGrid.RowHeadersVisible">
		<summary>
			<para>Gets or sets a value that specifies whether row
      headers are visible.</para>
		</summary>
		<value>
			<para>
				<see langword="true "/>if row headers are visible;
   otherwise, <see langword="false"/> .</para>
		</value>
		<seealso cref="System.Windows.Forms.DataGrid.ParentRowsVisible"/>
		<seealso cref="System.Windows.Forms.DataGrid.RowHeaderWidth"/>
		<seealso cref="System.Windows.Forms.DataGrid.VisibleRowCount"/>
		<seealso cref="System.Windows.Forms.DataGrid.VisibleColumnCount"/>
	</doc>
	<doc for="DataGrid.this">
		<overload>
			<para>Gets or sets the value of a specified cell.</para>
		</overload>
		<summary>
			<para>Gets or sets the value of the cell at
      the specified the row and column.</para>
		</summary>
		<param name="rowIndex">The zero-based index of the row containing the value.</param>
		<param name="columnIndex">The zero-based index of the column containing the value.</param>
		<value>
			<para>The value, typed as <see cref="T:System.object"/>, of the cell.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">
			<para>While getting or setting, the <paramref name="rowIndex"/> is out of range.</para>
			<para>While getting or setting, the <paramref name="columnIndex"/> is out of range.</para>
		</exception>
		<remarks>
			<para>Setting this property changes the position of the
   <see cref="System.Data.DataView"/>
   to
   the specified row.</para>
		</remarks>
		<example>
			<para>The
      following example prints the value contained by the cell at
      the specified row and index.</para>
			<codelink SampleID="Classic DataGrid.this Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.BackgroundImage"><nodoc/>
		<summary>
			<para>Gets or sets the background image for the control.</para>
		</summary>
		<value>
			<para>An <see cref="T:System.Drawing.Image"/> that is displayed in the background.</para>
		</value>
		<example>
			<para>The following example sets the BackGroundImage to a new
      bitmap.</para>
			<codelink SampleID="Classic DataGrid.BackgroundImage Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.Cursor">
		<nodoc/>
		<summary>
			<para>Gets or sets the cursor for the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.Cursor"/> for the control.</para>
		</value>
		<example>
			<para>The following example draws the cursor at the selected cell.</para>
			<codelink SampleID="Classic DataGrid.Cursor Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.OnEnter">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.Enter"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc><doc for="DataGrid.AutoColumnSize">
		<summary>
			<para>Specifies that the grid automatically
      sizes columns to the maximum width of the first ten rows. This
      field is constant.</para>
		</summary>
		<remarks>
			<para>Set <see cref="System.Windows.Forms.DataGrid.PreferredColumnWidth"/> to <see cref="System.Windows.Forms.DataGrid.AutoColumnSize"/> to automatically size grid
   columns.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.AutoColumnSize"/> constant to set
   the <see cref="System.Windows.Forms.DataGrid.PreferredColumnWidth"/> property.</para>
			<codelink SampleID="Classic DataGrid.AutoColumnSize Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.PreferredColumnWidth"/>
	</doc><doc for="DataGrid.ShouldSerializeForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.ForeColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed from its default; 
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGrid"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.CreateGridColumn">
		<overload>
			<para>Creates a new <see cref="System.Windows.Forms.DataGridColumnStyle"/> that is added to the control.</para>
		</overload>
		<summary>
			<para>Creates a <see cref="System.Windows.Forms.DataGridColumnStyle"/> using the specified
<see cref="T:System.ComponentModel.PropertyDescriptor"/>.</para>
		</summary>
		<param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to use for creating the grid column style.</param>
		<param name=" isDefault"><see langword="true"/> to set the column style as the default; otherwise, <see langword="false"/>.</param>
		<returns>
			<para>The new <see cref="System.Windows.Forms.DataGridColumnStyle"/> .</para>
		</returns>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle"/>
		<seealso cref="System.Windows.Forms.GridColumnStylesCollection"/>
	</doc><doc for="DataGrid.CurrentCell">
		<summary>
			<para>Gets or sets which cell has the focus. Not available at design time.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.DataGridCell"/> with the focus.</para>
		</value>
		<remarks>
			<para>Setting the <see cref="System.Windows.Forms.DataGrid.CurrentCell"/> property will cause the grid to scroll and show the
   cell if it is not already visible.</para>
		</remarks>
		<example>
			<para>The following examples show how to set and get the
      current cell.</para>
			<codelink SampleID="Classic DataGrid.CurrentCell Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridCell"/>
		<seealso cref="System.Windows.Forms.DataGrid.FirstVisibleColumn"/>
	</doc><doc for="DataGrid.ParentRowsLabelStyle">
		<summary>
			<para>Gets or sets the way parent row labels are displayed.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.DataGridParentRowsLabelStyle"/> values.
   The default is <see langword="Both"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The enumator was not valid.</exception>
		<example>
			<para>The following example sets cycles through the possible values for the <see cref="System.Windows.Forms.DataGrid.ParentRowsLabelStyle"/> property.</para>
			<codelink SampleID="Classic DataGrid.ParentRowsLabelStyle Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.AllowNavigation"/>
		<seealso cref="System.Windows.Forms.DataGrid.ParentRowsForeColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.ParentRowsBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.ParentRowsVisible"/>
	</doc><doc for="DataGrid.OnLayout">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.Layout"/> event that
   repositions controls
   and updates scroll bars.</para>
		</summary>
		<param name="levent">A <see cref="System.Windows.Forms.LayoutEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.OnLayout"/> method also allows derived
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGrid.OnLayout"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.DataGrid.OnLayout"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc><doc for="DataGrid.CreateGridColumn1">
		<summary>
			<para>Creates a new <see cref="System.Windows.Forms.DataGridColumnStyle"/> with the specified <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</para>
		</summary>
		<param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to use for creating the grid column style. </param>
		<returns>
			<para>The new <see cref="System.Windows.Forms.DataGridColumnStyle"/> .</para>
		</returns>
	</doc><doc for="DataGrid.ProcessDialogKey">
		<summary>
			<para> Gets or sets a value that indicates whether a key should be processed
      further.
      </para>
		</summary>
		<param name="keyData">A <see cref="System.Windows.Forms.Keys"/> that contains data about the pressed key. </param>
		<returns>
			<para><see langword="true"/>, the key should be processed; otherwise,
<see langword="false"/>.
   </para>
		</returns>
		<remarks>
			<para> The method overrides the <see cref="System.Windows.Forms.Control.ProcessDialogKey"/>
method to implement keyboard
navigation of the grid.</para>
		</remarks>
	</doc><doc for="DataGrid.ProcessGridKey">
		<summary>
			<para> Processes keys for grid navigation.
      </para>
		</summary>
		<param name="ke">A <see cref="System.Windows.Forms.KeyEventArgs"/> that contains data about the key up or key down event. </param>
		<returns>
			<para><see langword="true"/>, if the key was processed;
   otherwise <see langword="false"/> .
   </para>
		</returns>
	</doc><doc for="DataGrid.DataGrid">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
class.</para>
		</summary>
		<remarks>
			<para>To populate a newly created <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control, set the <see cref="System.Windows.Forms.DataGrid.DataSource"/> property to a valid source, such as a
<see cref="System.Data.DataView"/>, <see cref="System.Data.DataSet"/>, or <see cref="System.Data.DataViewManager"/>
.</para>
		</remarks>
		<example>
			<para>The following example creates a new <see cref="System.Windows.Forms.DataGrid" qualify="true"/> and uses the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method to set the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/>
properties.</para>
			<codelink SampleID="Classic DataGrid.DataGrid Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Windows.Forms.DataGrid.DataMember"/>
		<seealso cref="System.Data.DataView"/>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Windows.Forms.GridTableStylesCollection"/>
	</doc><doc for="DataGrid.ShouldSerializeAlternatingBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.CaptionBackColor">
		<summary>
			<para> Gets or sets the background color of the caption area.
 </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Color"/> that
 represents the caption's background color. The default is <see cref="System.Drawing.SystemColors.ActiveCaption"/>
 color.
 </para>
		</value>
		<example>
			<para> The following example sets the <see cref="System.Windows.Forms.DataGrid.CaptionBackColor"/> property of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.
 </para>
			<codelink SampleID="Classic DataGrid.CaptionBackColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionFont"/>
	</doc><doc for="DataGrid.ShouldSerializeCaptionBackColor">
		<summary>
			<para> Gets a value
 indicating whether the <see cref="System.Windows.Forms.DataGrid.CaptionBackColor"/> property should be
 persisted.
 </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its
 default; otherwise, <see langword="false"/>.
 </para>
		</returns>
		<remarks>
			<para> You typically use this method only if you are either creating a designer for
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, or creating your own control incorporating the
 <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.
 </para>
		</remarks>
	</doc><doc for="DataGrid.CaptionForeColor">
		<summary>
			<para> Gets
 or sets the foreground color
 of the caption area.
 </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Color"/> that
 represents the foreground color of the caption area. The default is <see cref="System.Drawing.SystemColors.ActiveCaptionText"/>
 .</para>
		</value>
		<example>
			<para> The following example sets the <see cref="System.Windows.Forms.DataGrid.CaptionForeColor"/> property of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.</para>
			<codelink SampleID="Classic DataGrid.CaptionForeColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionFont"/>
	</doc><doc for="DataGrid.ShouldSerializeCaptionForeColor">
		<summary>
			<para> Gets a value
 indicating whether the <see cref="System.Windows.Forms.DataGrid.CaptionForeColor"/> property should be
 persisted.
 </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its
 default; otherwise, <see langword="false"/>.
 </para>
		</returns>
		<remarks>
			<para> You typically use this method only if you are either creating a designer for
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, or creating your own control incorporating the
 <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.
 </para>
		</remarks>
	</doc><doc for="DataGrid.CaptionText">
		<summary>
			<para> Gets or sets the text of the grid's window caption.
 </para>
		</summary>
		<value>
			<para> A string to be displayed as the grid's window caption.
 The default is an empty string ("").
 </para>
		</value>
		<example>
			<para> The following example sets the caption of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.
 </para>
			<codelink SampleID="Classic DataGrid.CaptionText Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionVisible"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionFont"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionBackColor"/>
	</doc><doc for="DataGrid.ShouldSerializeSelectionBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.SelectionBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.ShouldSerializeSelectionForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.SelectionForeColor"/> property should be
 persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.DataMember">
		<summary>
			<para>Gets or sets the specific list in a <see cref="System.Windows.Forms.DataGrid.DataSource"/> for which the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control
displays a grid.</para>
		</summary>
		<value>
			<para> A list in a <see cref="System.Windows.Forms.DataGrid.DataSource"/>. The default is an empty string
 ("").</para>
		</value>
		<remarks>
			<para> If a <see cref="System.Windows.Forms.DataGrid.DataSource"/> contains multiple sources of
 data, you should set the <see cref="System.Windows.Forms.DataGrid.DataMember"/>
 to one of the sources. For example, if the <see cref="System.Windows.Forms.DataGrid.DataSource"/> is a <see cref="System.Data.DataSet"/> or <see cref="System.Data.DataViewManager"/> that contains three tables named Customers, Orders, and
 OrderDetails, you must specify one of the tables to bind to. If the <see cref="System.Data.DataSet"/> or <see cref="System.Data.DataViewManager"/> contains
 only one <see cref="System.Data.DataTable"/>, you should set the <see cref="System.Windows.Forms.DataGrid.DataMember"/> to the <see cref="System.Data.DataTable.TableName"/>
 of that <see cref="System.Data.DataTable"/>
 
 .</para>
			<para>If the <see cref="System.Windows.Forms.DataGrid.DataSource"/> is set to a <see cref="System.Data.DataSet"/> that contains <see cref="System.Data.DataRelation"/> objects, parent tables will appear with a
plus sign (+) in each row header. Clicking the plus sign causes a node to
appear that contains links to child tables. For example, if a <see cref="System.Data.DataSet"/> contains
two <see cref="System.Data.DataTable"/> objects named Customers and Orders, setting
the <see cref="System.Windows.Forms.DataGrid.DataMember"/> to the Customers table causes the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> to display
a parent table with a plus sign visible on each row header. If the
<see cref="System.Windows.Forms.DataGrid.DataMember"/> is set to Orders, however, the row headers
will be blank.</para>
			<para>If the <see cref="System.Windows.Forms.DataGrid.DataSource"/> is a <see cref="System.Data.DataTable"/>,
<see cref="System.Data.DataView"/>, collection, or array, setting the <see cref="System.Windows.Forms.DataGrid.DataMember"/>
property throws an exception.</para>
			<note type="note">
 At run time, you must use the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method to reset the <see cref="System.Windows.Forms.DataGrid.DataSource"/> property. However, the <see cref="System.Windows.Forms.DataGrid.DataMember"/> property
 alone can be reset at any time to a valid table name.
 
</note>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/>
properties of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
			<codelink SampleID="Classic DataGrid.DataMember Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.DataSource"/>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataViewManager"/>
		<seealso cref="System.Windows.Forms.DataGrid.SetDataBinding"/>
	</doc><doc for="DataGrid.ListManager">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.CurrencyManager"/> for this <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.CurrencyManager"/> for this <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
		</value>
	</doc><doc for="DataGrid.ShouldSerializeGridLineColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.GridLineColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.ShouldSerializeHeaderBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.HeaderBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.ShouldSerializeBackgroundColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/> property should be
 persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed from its default;
 otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a
 designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
 <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.ShouldSerializeHeaderFont">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.HeaderFont"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.ShouldSerializeHeaderForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.HeaderForeColor"/> property should be
 persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.LinkColor">
		<summary>
			<para>Gets or sets the color of the text that you can click to
 navigate to a child table. </para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that
 represents the color of text that is clicked to navigate to a child table. The
 default is <see cref="System.Drawing.SystemColors.HotTrack"/>. </para>
		</value>
		<remarks>
			<para> You typically use this method only if you are either creating a designer for
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, or creating your own control incorporating the
 <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.
 </para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.LinkColor"/>
	</doc><doc for="DataGrid.ShouldSerializeLinkHoverColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.LinkHoverColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed
 from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.ResetLinkHoverColor"/>
	</doc><doc for="DataGrid.ShouldSerializeParentRowsBackColor">
		<summary>
			<para> Indicates whether the <see cref="System.Windows.Forms.DataGrid.ParentRowsBackColor"/> property should be
 persisted.
 </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its
 default; otherwise, <see langword="false"/>.
 </para>
		</returns>
		<remarks>
			<para> You typically use this method only if you are either creating a designer for
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, or creating your own control incorporating the
 <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.
 </para>
		</remarks>
	</doc><doc for="DataGrid.ShouldSerializeParentRowsForeColor">
		<summary>
			<para> Indicates whether the <see cref="System.Windows.Forms.DataGrid.ParentRowsForeColor"/> property should be
 persisted.
 </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its
 default; otherwise, <see langword="false"/>.
 </para>
		</returns>
		<remarks>
			<para> You typically use this method only if you are either creating a designer for
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, or creating your own control incorporating the
 <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.
 </para>
		</remarks>
	</doc><doc for="DataGrid.PreferredRowHeight">
		<summary>
			<para> Gets or sets the preferred row height for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.
 </para>
		</summary>
		<value>
			<para> The
 height of a row.
 </para>
		</value>
		<remarks>
			<para>Set this property before resetting the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/> properties (either separately, or through
 the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method), or the property will have no
 effect.</para>
		</remarks>
		<example>
			<para> The following example first sets a new font, and sets the
 <see cref="System.Windows.Forms.DataGrid.PreferredRowHeight"/>
 to the same height as the new font.
 </para>
			<codelink SampleID="Classic DataGrid.PreferredRowHeight Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.GetPreferredHeight"/>
		<seealso cref="System.Windows.Forms.DataGrid.PreferredColumnWidth"/>
	</doc><doc for="DataGrid.ShouldSerializePreferredRowHeight">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGrid.PreferredRowHeight"/> property should be
 persisted.</para>
		</summary>
		<returns>
			<see langword="true"/> if the property
 value has changed from its default; otherwise, <see langword="false"/>.
</returns>
		<remarks>
			<para>You typically use this method if you are either creating
 a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="DataGrid.ReadOnly">
		<summary>
			<para>Gets or sets a value indicating whether the grid
 is in read-only mode.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the grid is in read-only mode; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>In read-only
 mode, the grid
 can be scrolled, nodes can be expanded or collapsed, and so on,
 However, no additions, edits, or deletes can take place.</para>
			<para>The <see cref="System.Windows.Forms.DataGridColumnStyle"/> also has a <see cref="System.Windows.Forms.DataGridColumnStyle.ReadOnly"/> property that can be set to true to prevent
 data from being edited, on a column-by-column basis.</para>
			<para>The <see cref="System.Windows.Forms.DataGrid.ReadOnly"/> can be set to true if you want to prohibit the
user from editing the data directly in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> . For example, you might want
to let users to see all columns in a table, but allow them to edit specific
fields only through <see cref="System.Windows.Forms.TextBox"/> controls on a different form.</para>
		</remarks>
		<example>
			<para>The following example toggles the <see cref="System.Windows.Forms.DataGrid.ReadOnly"/> property.</para>
			<codelink SampleID="Classic DataGrid.ReadOnly Example" SnippetID="1"/>
		</example>
		<seealso cref="P:System.Data.DataColumn.ReadOnly" qualify="true"/>
	</doc><doc for="DataGrid.Text">
		<nodoc/>
		<summary>
			<para> Gets or sets text associated with the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.
 </para>
		</summary>
		<value>
			<para> Text associated with the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.
 </para>
		</value>
		<example>
			<para>The following example sets and returns the <see cref="System.Windows.Forms.DataGrid.Text"/>
associated with the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
			<codelink SampleID="classic datagrid.rowheadersvisible example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.VisibleRowCount">
		<summary>
			<para>Gets the number of rows visible.</para>
		</summary>
		<value>
			<para> The number of rows visible in the viewport. The
 viewport is the rectangular area through which the grid is visible. The
 viewport's size depends on the size of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
 control; if you allow users to
 resize the control, the viewport will also be affected.</para>
		</value>
		<remarks>
			<para>The number of visible rows can be changed at run time if
 the user is allowed to resize the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
 control.</para>
		</remarks>
		<example>
			<para>The following example returns the number of rows visible in a <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.</para>
			<codelink SampleID="Classic DataGrid.VisibleRowCount Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGrid.VisibleColumnCount"/>
	</doc><doc for="DataGrid.OnPaintBackground">
		<summary>
			<para> Overrides <see cref="System.Windows.Forms.Control.OnPaintBackground" qualify="true"/>
to prevent painting the background of the
<see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
		</summary>
		<param name="ebe">A <see cref="System.Windows.Forms.PaintEventArgs"/> that contains information about the control to paint.</param>
		<remarks>
			<para>Because the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> is a complex control, this override is
 implemented to have no action. Therefore, calling this method will have no
 effect.</para>
		</remarks>
	</doc><doc for="DataGrid.Collapse">
		<summary>
			<para> Collapses child relations, if any exist for all rows, or for a
 specified row.
 </para>
		</summary>
		<param name="row"> The number of the row to collapse. If set to -1, all rows are collapsed. </param>
		<remarks>
			<para> Use the <see cref="System.Windows.Forms.DataGrid.IsExpanded"/>
method to determine if a row is
expanded.</para>
		</remarks>
		<example>
			<para> The following example collapses all rows in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.</para>
			<codelink SampleID="Classic DataGrid.Collapse Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.IsExpanded"/>
	</doc><doc for="DataGrid.CreateAccessibilityInstance">
		<summary>
			<para> Constructs a new instance of the accessibility
 object for this control.</para>
		</summary>
		<returns>
			<para>The <see cref="System.Windows.Forms.Control.ControlAccessibleObject"/> for this control.</para>
		</returns>
		<remarks>
			<para>Derived classes should not call the base class's <see cref="System.Windows.Forms.Control.CreateAccessibilityInstance"/> method.</para>
			<para>The only properties of the <see cref="System.Windows.Forms.AccessibleObject"/> that should be set are:</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.AccessibleObject.Role"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.AccessibleObject.Description"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.AccessibleObject.Name"/></term>
				</item>
			</list>
			<para>All other properties are handled by the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> itself.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.AccessibleObject"/>
	</doc><doc for="DataGrid.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used
 by the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</summary>
		<param name="disposing"></param>
		<remarks>
			<para> Call <see cref="System.Windows.Forms.DataGrid.Dispose"/> when you are finished using the
<see cref="System.Windows.Forms.DataGrid" qualify="true"/>. The <see cref="System.Windows.Forms.DataGrid.Dispose"/> method leaves the
<see cref="System.Windows.Forms.DataGrid" qualify="true"/> in an unuseable state. After calling <see cref="System.Windows.Forms.DataGrid.Dispose"/>, you must release all references to
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> so the memory it was occupying can be reclaimed
 by garbage collection.
 </para>
		</remarks>
		<example>
			<para> The following example uses the <see cref="System.Windows.Forms.DataGrid.Dispose"/>
method to free
resources.</para>
			<codelink SampleID="Classic DataGrid.Dispose Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.ColumnStartedEditing">
		<overload>
			<para>Informs the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control that the user has begun editing a
 column.</para>
		</overload>
		<summary>
			<para>Informs the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control when the user begins to edit the
 column at the specified location.</para>
		</summary>
		<param name="bounds">The <see cref="System.Drawing.Rectangle"/> that defines the location of the edited column.</param>
		<remarks>
			<para>When called, the <see cref="System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing"/>
method allows the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control to show a pencil in the row
header.</para>
		</remarks>
	</doc><doc for="DataGrid.ColumnStartedEditing1">
		<summary>
			<para>Informs the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control when the user begins to edit a column using the specified
 control.</para>
		</summary>
		<param name="editingControl">The <see cref="System.Windows.Forms.Control"/> used to edit the column.</param>
		<remarks>
			<para>When called, the <see cref="System.Windows.Forms.IDataGridColumnStyleEditingNotificationService.ColumnStartedEditing"/>
method allows the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control to show a pencil in the row
header.</para>
		</remarks>
	</doc><doc for="DataGrid.HitTest">
		<overload>
			<para>Gets information about the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control at a specified point on the screen.</para>
		</overload>
		<summary>
			<para>Gets information, such as row and column number of a
 clicked point on
 the grid,
 using the x
 and y coordinate passed to the method.</para>
		</summary>
		<param name="x">The horizontal position of the coordinate.</param>
		<param name="y">The vertical position of the coordinate.</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
that contains information about the clicked part of the
grid.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>, in conjunction with the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control, is used to determine which part of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control the user has
clicked. The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> contains
both the row, column and part of the grid that was clicked. Additionally, the
<see cref="System.Windows.Forms.DataGrid.HitTestInfo.Type"/>
property returns a <see cref="System.Windows.Forms.DataGrid.HitTestType"/> enumeration. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.HitTest"/> method takes an
<see langword="x"/> and <see langword="y"/> argument
supplied by the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control's <see cref="System.Windows.Forms.Control.DragDrop"/>, <see cref="System.Windows.Forms.Control.DragEnter"/>, <see cref="System.Windows.Forms.Control.DragOver"/>, <see cref="System.Windows.Forms.Control.MouseDown"/>,
<see cref="System.Windows.Forms.Control.MouseMove"/>, <see cref="System.Windows.Forms.Control.MouseUp"/> and <see cref="System.Windows.Forms.Control.MouseWheel"/> events.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.HitTest"/>
method in an
event that occurs when the user clicks in the grid.</para>
			<codelink SampleID="Classic DataGrid.HitTest Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Control.MouseDown"/>
	</doc><doc for="DataGrid.HitTest1">
		<summary>
			<para>Gets information, such as row and column number of a
 clicked point on the grid, about the grid using a specific <see cref="T:System.Drawing.Point"/>.</para>
		</summary>
		<param name="position">A <see cref="T:System.Drawing.Point"/> that represents single x,y coordinate.</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
that contains specific information about the grid.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>, in conjunction with the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control, is used to determine which part of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control the user has
clicked. The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> contains
both the row, column and part of the grid that was clicked. Additionally, the
<see cref="System.Windows.Forms.DataGrid.HitTestInfo.Type"/>
property returns a <see cref="System.Windows.Forms.DataGrid.HitTestType"/> enumeration. </para>
			<para>The <see cref="System.Windows.Forms.DataGrid.HitTest"/> method takes an
<see langword="x"/> and <see langword="y"/> argument supplied by the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control's <see cref="System.Windows.Forms.Control.DragDrop"/>, <see cref="System.Windows.Forms.Control.DragEnter"/>, <see cref="System.Windows.Forms.Control.DragOver"/>, <see cref="System.Windows.Forms.Control.MouseDown"/>, 
<see cref="System.Windows.Forms.Control.MouseMove"/>, <see cref="System.Windows.Forms.Control.MouseUp"/> and <see cref="System.Windows.Forms.Control.MouseWheel"/> events.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.HitTest"/>
method in occurs when a user clicks on a grid.</para>
			<codelink SampleID="Classic DataGrid.HitTest1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Control.MouseDown"/>
	</doc><doc for="DataGrid.NavigateTo">
		<overload>
			<para> Navigates to a specific table that displays in
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
 control.
 </para>
		</overload>
		<summary>
			<para> Navigates to the table specified by row and relation
 name.
 </para>
		</summary>
		<param name="rowNumber">
 The number of the row to navigate to.
 </param>
		<param name="relationName">
 The name of the child relation to navigate to.
 </param>
		<example>
			<para> The following
 example navigates to the specified row number, in the table specified by child relationship name.
 </para>
			<codelink SampleID="Classic DataGrid.NavigateTo Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.NavigateBack"/>
	</doc><doc for="DataGrid.HitTestInfo.Column">
		<summary>
			<para>Gets the number of the column the user has clicked.</para>
		</summary>
		<value>
			<para>The number of the column.</para>
		</value>
		<remarks>
			<para> If the coordinate is not a cell, the property returns -1. </para>
		</remarks>
		<example>
			<para> The following example prints the numbers of the clicked row and
 column by calling the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method from within the <see cref="System.Windows.Forms.Control.MouseDown"/> event of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control. This
 returns a <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
 object.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.Column Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc><doc for="DataGrid.HitTestInfo.Row">
		<summary>
			<para>Gets the number of the
 row the user has clicked.</para>
		</summary>
		<value>
			<para>The number of the clicked row.</para>
		</value>
		<remarks>
			<para>If the coordinate is not a cell, the property returns
 -1. If the coordinate is a <see cref="System.Windows.Forms.DataGrid.HitTestType.RowHeader"/>, the property returns the
 row number of the header, but the <see cref="System.Windows.Forms.DataGrid.HitTestInfo.Column"/>
 property will return -1.</para>
		</remarks>
		<example>
			<para> The following example prints the number of the clicked row and
 column by calling the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method from within the <see cref="System.Windows.Forms.Control.MouseDown"/> event of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control. This
 returns a <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
 object.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.Row Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc><doc for="DataGrid.HitTestInfo.Type">
		<summary>
			<para>Gets the part of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control, other than the row or column, that was
 clicked.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.DataGrid.HitTestType"/> enumerations.</para>
		</value>
		<example>
			<para> The following example prints the clicked part of the grid by
 calling the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method from
 within the <see cref="System.Windows.Forms.Control.MouseDown"/> event of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control. This returns
 a <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> object.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.Type Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc><doc for="DataGrid.HitTestInfo.ToString">
		<summary>
			<para>Gets the type, row number, and column number.</para>
		</summary>
		<returns>
			<para>The type, row number, and column number.</para>
		</returns>
		<example>
			<para>The following example prints the type, row number, and column number when
 the user clicks the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.ToString Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc><doc for="DataGrid.HitTestType.Cell">
		<summary>
			<para>A cell in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.</para>
		</summary>
	</doc><doc for="DataGrid.HitTestType.ColumnHeader">
		<summary>
			<para>A column header in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.</para>
		</summary>
	</doc><doc for="DataGrid.HitTestType.RowHeader">
		<summary>
			<para>A row header in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.</para>
		</summary>
	</doc><doc for="DataGrid.HitTestType.Caption">
		<summary>
			<para> The caption of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control.
</para>
		</summary>
	</doc><doc for="DataGrid.HitTestType.ParentRows">
		<summary>
			<para>The parent row section of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control. The parent row displays information
 from or about the parent table of the currently displayed child table, such as
 the name of the parent table, column names and values of the parent
 record.</para>
		</summary>
	</doc><doc for="DataGrid.Site">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataGrid.TableStyles">
		<summary>
			<para>Gets the collection of <see cref="System.Windows.Forms.DataGridTableStyle"/> objects for the grid.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.GridTableStylesCollection"/> that represents
 the collection of <see cref="System.Windows.Forms.DataGridTableStyle"/>
 objects.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Windows.Forms.GridTableStylesCollection"/> to create customized views of each table
 displayed by the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control. </para>
			<para>By default, the collection returned by <see cref="System.Windows.Forms.DataGrid.TableStyles"/> property does not contain any <see cref="System.Windows.Forms.DataGridTableStyle"/> objects. To create a set of customized
views:</para>
			<list type="number"><item>
					<term>
 Create a <see cref="System.Windows.Forms.DataGridTableStyle"/> object.</term>
				</item>
				<item>
					<term>
 Set the grid table object's <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> to a <see cref="System.Data.DataTable"/> object's <see cref="System.Data.DataTable.TableName"/>.</term>
				</item>
				<item>
					<term>
 Add <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects, one for each grid column you
 want to show, to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/> returned by the <see cref="System.Windows.Forms.DataGridTableStyle.GridColumnStyles"/> property.</term>
				</item>
				<item>
					<term>
 Set the <see cref="System.Windows.Forms.DataGridColumnStyle.MappingName"/> of each <see cref="System.Windows.Forms.DataGridColumnStyle"/> object to the <see cref="System.Data.DataColumn.ColumnName"/> of a <see cref="System.Data.DataColumn"/>.</term>
				</item>
				<item>
					<term>
 Add the <see cref="System.Windows.Forms.DataGridTableStyle"/> object to the collection returned by
 <see cref="System.Windows.Forms.DataGrid.TableStyles"/> property.</term>
				</item>
			</list>
			<note type="caution">
 Always create <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects and add them to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/> before adding <see cref="System.Windows.Forms.DataGridTableStyle"/> objects to the <see cref="System.Windows.Forms.GridTableStylesCollection"/>. When you add an empty <see cref="System.Windows.Forms.DataGridTableStyle"/> to the collection, <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects are automatically generated for
 you. Consequently, an exception will be thrown if you try to add new <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects with duplicate <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> values to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/>.
</note>
		</remarks>
		<example>
			<para>The following example creates one <see cref="System.Windows.Forms.DataGridTableStyle"/> for each <see cref="System.Data.DataTable"/> found in a <see cref="System.Data.DataSet"/>, and sets
 the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the <see cref="System.Windows.Forms.DataGridTableStyle"/> object to the <see cref="System.Data.DataTable.TableName"/>
 of the <see cref="System.Data.DataTable"/>. The <see cref="System.Windows.Forms.DataGridTableStyle"/> object is then
 added to the <see cref="System.Windows.Forms.GridTableStylesCollection"/> returned by the <see cref="System.Windows.Forms.DataGrid.TableStyles"/> property. The example also prints the
<see cref="System.Windows.Forms.DataGridColumnStyle.MappingName"/> of each <see cref="System.Windows.Forms.DataGridColumnStyle"/> in the <see cref="System.Windows.Forms.GridColumnStylesCollection"/> returned by the <see cref="System.Windows.Forms.DataGridTableStyle.GridColumnStyles"/> property of each <see cref="System.Windows.Forms.DataGridTableStyle"/> in the <see cref="System.Windows.Forms.GridTableStylesCollection"/> .</para>
			<codelink SampleID="Classic DataGrid.TableStyles Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle"/>
		<seealso cref="System.Windows.Forms.GridTableStylesCollection"/>
	</doc><doc for="DataGrid.ProcessTabKey">
		<summary>
			<para> Gets a value indicating whether the Tab key should be processed.
      </para>
		</summary>
		<param name="keyData">A <see cref="System.Windows.Forms.Keys"/> that contains data about which the pressed key. </param>
		<returns>
			<para><see langword="true "/>if the Tab key should be processed; otherwise,
<see langword="false"/>.
   </para>
		</returns>
		<permission cref="System.Security.Permissions.UIPermission">for drawing UI. Associated enumeration: <see cref="System.Security.Permissions.UIPermissionWindow.AllWindows" qualify="true"/>.</permission>
	</doc><doc for="DataGrid.this1">
		<summary>
			<para>Gets or sets the value of a specified <see cref="System.Windows.Forms.DataGridCell"/> .</para>
		</summary>
		<param name="cell">A <see cref="System.Windows.Forms.DataGridCell"/> that represents a cell in the grid.</param>
		<value>
			<para>The value, typed as <see cref="T:System.object"/>, of the cell.</para>
		</value>
		<remarks>
			<para>Setting this property changes the position of the <see cref="System.Data.DataView"/> to the
   specified row.</para>
		</remarks>
		<example>
			<para>The following example sets and gets the value of a cell
      by declaring a <see cref="System.Windows.Forms.DataGridCell"/> variable, setting its <see cref="System.Windows.Forms.DataGridCell.RowNumber"/> and <see cref="System.Windows.Forms.DataGridCell.ColumnNumber"/> values, then first changing, then
      returning, the value of the given cell.</para>
			<codelink SampleID="Classic DataGrid.this1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CurrentCell"/>
		<seealso cref="System.Windows.Forms.DataGridCell"/>
	</doc><doc for="DataGrid.PreferredColumnWidth">
		<summary>
			<para> Gets
      or sets the default width of the grid columns in
      pixels.
      </para>
		</summary>
		<value>
			<para> The default
      width (in pixels) of columns in the grid.
      </para>
		</value>
		<exception cref="System.ArgumentException">The property value is less than 0.</exception>
		<remarks>
			<para>Set this property before resetting the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/> properties (either separately, or through
   the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method), or the property will have no
   effect.</para>
			<para>The property cannot be set to a value less than 0.</para>
		</remarks>
		<example>
			<para> The following example sets the
      default column widths to a value passed to the method.
      </para>
			<codelink SampleID="Classic DataGrid.PreferredColumnWidth Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.GetPreferredSize"/>
		<seealso cref="System.Windows.Forms.DataGrid.PreferredRowHeight"/>
	</doc><doc for="DataGrid.AllowSorting">
		<summary>
			<para>Gets or sets a value indicating whether the grid can be resorted by clicking on
      a column header.</para>
		</summary>
		<value>
			<para><see langword="true"/> if columns can be sorted;
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>If sorting is allowed, clicking on a column header will sort the table data 
      by that column.</para>
			<para>You can also sort using an expression for a <see cref="T:System.Data.DataColumn"/>. See <see cref="P:System.Data.DataColumn.Expression"/> for
   details on creating a sort expression.</para>
			<para>If the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> is bound to a <see cref="System.Data.DataView"/>, you can set a custom sort for
the table using the <see cref="System.Data.DataView"/> class's <see cref="P:System.Data.DataView.Sort"/> property. Similarly, if the
<see cref="System.Windows.Forms.DataGrid" qualify="true"/> is bound to a <see cref="System.Data.DataViewManager"/>,
each table in the <see cref="System.Data.DataViewManager"/> can have a custom sort by setting the <see cref="System.Data.DataViewManager.DataViewSettings"/> class's
<see cref="System.Data.DataViewSetting.Sort"/>
property.</para>
		</remarks>
		<example>
			<para>The following example toggles the <see cref="System.Windows.Forms.DataGrid.AllowSorting"/>
property.</para>
			<codelink SampleID="Classic DataGrid.AllowSorting Example" SnippetID="1"/>
		</example>
		<seealso cref="P:System.Data.DataColumn.Expression"/>
		<seealso cref="System.Data.DataView.Sort" qualify="true"/>
		<seealso cref="System.Data.DataViewSetting.Sort" qualify="true"/>
	</doc><doc for="DataGrid.CurrentRowIndex">
		<summary>
			<para>Gets or sets index of the selected row.</para>
		</summary>
		<value>
			<para>The zero-based index of the selected row.</para>
		</value>
		<exception cref="System.Exception">There is no <see cref="System.Windows.Forms.CurrencyManager"/>.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid.CurrentRowIndex"/> property allows you to iterate through
   a parent table's rows even if you are viewing the child table rows. For example,
   if you are viewing a child table, incrementing the <see cref="System.Windows.Forms.DataGrid.CurrentRowIndex"/> will cause the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> to display the next set of records in the
   child table that are linked to the parent table.</para>
			<para>If the user is viewing a parent table, or a table with no child relations, 
   then the property returns the zero-based index of the current row.</para>
		</remarks>
		<example>
			<para>The following example returns the <see cref="System.Windows.Forms.DataGrid.CurrentRowIndex"/> .</para>
			<codelink SampleID="Classic DataGrid.CurrentRowIndex Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.CurrencyManager"/>
	</doc><doc for="DataGrid.ColumnHeadersVisible">
		<summary>
			<para> Gets or sets a value indicating whether the column headers a table are
      visible.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the column headers are visible; otherwise,
<see langword="false"/>. The
   default is <see langword="true"/>.</para>
		</value>
		<example>
			<para> The following example toggles the <see cref="System.Windows.Forms.DataGrid.ColumnHeadersVisible"/> property.
   </para>
			<codelink SampleID="Classic DataGrid.ColumnHeadersVisible Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle"/>
		<seealso cref="System.Windows.Forms.GridColumnStylesCollection"/>
		<seealso cref="System.Windows.Forms.DataGrid.RowHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGrid.VisibleColumnCount"/>
		<seealso cref="System.Windows.Forms.DataGrid.VisibleRowCount"/>
	</doc><doc for="DataGrid.HeaderFont">
		<summary>
			<para>Gets or sets the font used for column headers.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Font"/> object that represents the header text.</para>
		</value>
		<remarks>
			<para>You typically use this method only if you are either creating a designer for
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. </para>
		</remarks>
	</doc><doc for="DataGrid.VisibleColumnCount">
		<summary>
			<para>Gets the number of visible columns.</para>
		</summary>
		<value>
			<para> The number of columns visible in the viewport. The
      viewport is the rectangular area through which the grid is visible. The
      viewport's size depends on the size of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control; if you allow users
      to
      resize the control, the
      viewport will also be affected.</para>
		</value>
		<remarks>
			<para>The number of visible columns can
      change depending on their width. For example, if a default width for all columns
      is set, but a new column's width is set twice as large, the number of visible
      columns can be reduced by at least one.</para>
		</remarks>
		<example>
			<para>The following example returns the number of visible columns.</para>
			<codelink SampleID="Classic DataGrid.VisibleColumnCount Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.FirstVisibleColumn"/>
		<seealso cref="System.Windows.Forms.DataGrid.VisibleRowCount"/>
	</doc><doc for="DataGrid.GetOutputTextDelimiter">
		<internalonly/>
		<summary>
			<para>Will return the string that will be used as a delimiter between columns
      when copying rows contents to the Clipboard.
      At the moment, return "\t"</para>
		</summary>
		<remarks>
			<para>The return from this method will be used to delimitate the text 
      when the user copies one or more two rows to the Clipboard. The delimitation
      between rows is “\r\n”</para>
		</remarks>
	</doc><doc for="DataGrid.DataSourceChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.DataSource"/> property value has changed.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid.DataSourceChanged"/> event occurs when the <see cref="System.Windows.Forms.DataGrid.DataMember"/> value changes, or when the <see cref="System.Windows.Forms.BindingContext"/> of the <see cref="System.Windows.Forms.DataGrid"/> changes.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="Classic DataGrid.DataSourceChanged Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.SetDataBinding"/>
		<seealso cref="System.Windows.Forms.DataGrid.DataSource"/>
		<seealso cref="System.Windows.Forms.DataGrid.DataMember"/>
	</doc><doc for="DataGrid.FlatMode">
		<summary>
			<para> Gets or sets a value indicating whether the grid displays in flat mode.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the grid is displayed flat; otherwise,
<see langword="false"/>. The
   default is <see langword="false"/>.
   </para>
		</value>
		<example>
			<para> The following example examines the <see cref="System.Windows.Forms.DataGrid.FlatMode"/> property and notifies the user of 
   its status.
   </para>
			<codelink SampleID="MyDataGridClass_FlatMode_ReadOnly" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.HeaderForeColor">
		<summary>
			<para> Gets or sets the foreground color of headers.
      </para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Color"/> that 
   represents the foreground color of
   the grid's column headers,
   including the column header text and the plus/minus glyphs. The default is
<see cref="System.Drawing.SystemColors.ControlText"/>color.
   </para>
		</value>
		<example>
			<para> The
      following example sets
      the foreground color of the grid's column headers.
      </para>
			<codelink SampleID="Classic DataGrid.HeaderForeColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.FlatMode"/>
		<seealso cref="System.Windows.Forms.DataGrid.HeaderBackColor"/>
	</doc><doc for="DataGrid.BackgroundColor">
		<summary>
			<para>Gets or sets the color of the non-row area of the grid.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that
   represents the color of the grid's background. The default is the <see cref="System.Drawing.SystemColors.AppWorkspace"/> color.</para>
		</value>
		<remarks>
			<para> The <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/> determines the color of the nonrow
   area of the grid, which is only visible when no table is displayed by
   the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
   , or if the grid is scrolled to the
   bottom, or if only a few rows are contained in the grid.</para>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Windows.Forms.DataGrid.BackColor"/>, and <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/> properties.</para>
			<codelink SampleID="Classic DataGrid.BackgroundColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.BackColor"/>
	</doc><doc for="DataGrid.BeginEdit">
		<summary>
			<para>Attempts to
      put the grid into a state where editing is
      allowed.</para>
		</summary>
		<param name="gridColumn">A <see cref="System.Windows.Forms.DataGridColumnStyle"/> to edit.</param>
		<param name="rowNumber">The number of the row to edit.</param>
		<returns>
			<para><see langword="true "/>if the method is successful; otherwise,
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The grid will deny edit requests if the user already
      started typing into a cell. In that case, the <see cref="System.Windows.Forms.DataGrid.BeginEdit"/> method will return
   <see langword="false"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.BeginEdit"/>
method to test
if editing is possible before editing a specified column and row.</para>
			<codelink SampleID="Classic DataGrid.BeginEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.EndEdit"/>
	</doc>
	<doc for="DataGrid.EndEdit">
		<summary>
			<para>Requests an end to an edit operation taking place on the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
   control.</para>
		</summary>
		<param name="gridColumn">The <see cref="System.Windows.Forms.DataGridColumnStyle"/> to cease editing.</param>
		<param name="rowNumber">The number of the row to cease editing.</param>
		<param name="shouldAbort">Set to <see langword="true"/> if the current operation should be stopped.</param>
		<returns>
			<para><see langword="true "/>if the editing operation ceases; otherwise,
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid.EndEdit"/> method returns 
<see langword="false"/> if the user is not
   editing (typing into) a cell.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.BeginEdit"/> and <see cref="System.Windows.Forms.DataGrid.EndEdit"/> methods to edit a value in a grid displayed by
   the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
			<codelink SampleID="Classic DataGrid.EndEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.BeginEdit"/>
	</doc>
	<doc for="DataGrid.ResetLinkHoverColor">
		<nodoc/>
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.LinkHoverColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeLinkHoverColor"/>
      method to determine whether the property
      value has changed from its default.</para>
		</remarks>
	</doc><doc for="DataGrid.EndInit">
		<summary>
			<para>Ends the initialization of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> that is used on a form or
   used by another component. The initialization occurs at run time.</para>
		</summary>
		<remarks>
			<para> The Visual Studio .NET design environment uses this
      method to end the initialization of a component that is used on a form or used
      by another component. The <see cref="System.Windows.Forms.DataGrid.BeginInit"/> method starts the
      initialization. Using the <see cref="System.Windows.Forms.DataGrid.BeginInit"/> and <see cref="System.Windows.Forms.DataGrid.EndInit"/> methods prevents the control from being used
      before it is fully initialized.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.BeginInit"/>
	</doc><doc for="DataGrid.BeginInit">
		<summary>
			<para>Begins the initialization of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> that
   is used on a form or used by another component. The initialization occurs at run time.</para>
		</summary>
		<remarks>
			<para> The Visual Studio .NET design environment uses this
      method to start the initialization of a component that is used on a form or used
      by another component. The <see cref="System.Windows.Forms.DataGrid.EndInit"/> method ends the
      initialization. Using the <see cref="System.Windows.Forms.DataGrid.BeginInit"/> and <see cref="System.Windows.Forms.DataGrid.EndInit"/> methods prevents the control from being
      used before it is fully initialized. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.EndInit"/>
	</doc><doc for="DataGrid.ResetAlternatingBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> property to its default color.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
      <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeAlternatingBackColor"/> method to determine whether the property
      value has changed from its default.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.BackColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
      <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
   .</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ForeColor">
		<summary>
			<para>Gets or sets the foreground color (typically the color of the text) property
      of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that
   represents the foreground color. The default is <see cref="System.Drawing.SystemBrushes.WindowText"/> color.</para>
		</value>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.ForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
   .</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.BackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.CaptionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.ForeColor"/>
		<seealso cref="System.Windows.Forms.DataGrid.ResetAlternatingBackColor"/>
	</doc><doc for="DataGrid.SelectionBackColor">
		<summary>
			<para> Gets or sets the background color of selected rows.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/>
that
represents the background color of selected rows. The default is the <see cref="System.Drawing.SystemBrushes.ActiveCaption"/>
color.</para>
		</value>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
      <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetSelectionBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.SelectionBackColor"/> property to
   its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeSelectionBackColor"/>
      method to determine whether the property value
      has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.SelectionForeColor">
		<summary>
			<para>Gets or set the foreground color of selected rows.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/>
representing the foreground color of selected rows. The default is the <see cref="System.Drawing.SystemBrushes.ActiveCaptionText"/>
color.</para>
		</value>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetSelectionForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.SelectionForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
      <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeSelectionForeColor"/>
      method to determine whether the property value
      has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetGridLineColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.GridLineColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
      <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeGridLineColor"/>
      method to determine whether the property value has
      changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetLinkColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.LinkColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
      .</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ColorMembers" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.FlatModeChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.FlatMode"/> has changed.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGrid.FlatMode"/>
		<example>
			<codelink SampleID="MyDataGridClass_FlatMode_ReadOnly" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ReadOnlyChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.ReadOnly"/> property value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="MyDataGridClass_FlatMode_ReadOnly" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.ReadOnly"/>
	</doc><doc for="DataGrid.CaptionVisibleChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.CaptionVisible"/> property has changed.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_CaptionVisibleChanged" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.CurrentCellChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.CurrentCell"/> property has changed.</para>
		</summary>
		<remarks>
			<para>To determine the current cell, use the <see cref="System.Windows.Forms.DataGrid.CurrentCell"/> property.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_CaptionVisibleChanged" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.ResetHeaderBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.HeaderBackColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeHeaderBackColor"/>
   method to determine whether the property
   value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="MyDataGridClass_ResetHeaderBackColor" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.ResetHeaderFont">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.HeaderFont"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeHeaderFont"/> method to determine whether the property value
      has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="MyDataGridClass_ResetHeaderBackColor" SnippetID="3"/>
		</example>
	</doc><doc for="DataGrid.ResetHeaderForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGrid.HeaderForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. You can use the <see cref="System.Windows.Forms.DataGrid.ShouldSerializeHeaderForeColor"/> method to determine whether the property value
      has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="MyDataGridClass_ResetHeaderBackColor" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.RowHeaderWidth">
		<summary>
			<para> Gets or sets the width of row headers.
      </para>
		</summary>
		<value>
			<para> The width of row headers in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>. The default is 50.
   </para>
		</value>
		<example>
			<codelink SampleID="MyDataGridClass_ResetHeaderBackColor" SnippetID="6"/>
		</example>
	</doc><doc for="DataGrid.Scroll">
		<summary>
			<para> Occurs when the user scrolls the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.
   </para>
		</summary>
		<example>
			<codelink SampleID="DataGrid_CaptionVisibleChanged" SnippetID="3"/>
		</example>
	</doc><doc for="DataGrid.Select">
		<overload>
			<para>Selects a specified row.</para>
		</overload>
		<summary>
			<para>Selects a specified row.</para>
		</summary>
		<param name="row">The index of the row to select.</param>
		<example>
			<codelink SampleID="MyDataGridClass_ResetHeaderBackColor" SnippetID="4"/>
		</example>
	</doc><doc for="DataGrid.BackgroundColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/> has changed. </para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example changes thes <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/> property value from yellow to red and
   raises the <see cref="System.Windows.Forms.DataGrid.BackgroundColorChanged"/> event.</para>
			<codelink SampleID="DataGrid_BackgroundColorChanged" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.AllowNavigationChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.AllowNavigation"/> property has changed.</para>
		</summary>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.DataGrid.AllowNavigation"/> property is set to <see langword="false"/>,
   then no links to child tables are shown.</para>
For more information about handling events, see <see topic="cpconEventsOverview"/>.
</remarks>
		<example>
			<para>The following example resets the <see cref="System.Windows.Forms.DataGrid.AllowNavigation"/> property and raises the <see cref="System.Windows.Forms.DataGrid.AllowNavigationChanged"/> event.</para>
			<codelink SampleID="DataGrid_AllowNavigationChanged" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.Navigate">
		<summary>
			<para>Occurs when the user navigates to a new table.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Windows.Forms.DataGrid.Navigate"/> event to reset individual column properties, such as Width,
   as appropriate to the table.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>
.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_AllowNavigationChanged" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.BackButtonClick">
		<summary>
			<para>Occurs when the <see langword="Back "/> button on a child table is clicked.</para>
		</summary>
		<remarks>
			<para>The <see langword="Back"/> button becomes visible when a child table is displayed. Clicking the
   button will cause the grid to display the parent table.</para>
		</remarks>
		<example>
			<para>The following example adds an event handler for the
   <see cref="System.Windows.Forms.DataGrid.BackButtonClick"/> event. </para>
			<codelink SampleID="DataGrid_BackgroundColorChanged" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.AllowNavigation"/>
	</doc><doc for="DataGrid.ParentRowsLabelStyleChanged">
		<summary>
			<para>Occurs when the label style of the parent row is changed.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ParentRowsLabelStyleChanged" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.ParentRowsVisibleChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGrid.ParentRowsVisible"/> property value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGrid_ParentRowsLabelStyleChanged" SnippetID="2"/>
		</example>
	</doc><doc for="DataGrid.UnSelect">
		<summary>
			<para>Unselects a specified row.</para>
		</summary>
		<param name="row">The index of the row to deselect.</param>
		<example>
			<codelink SampleID="DataGrid_UnSelect" SnippetID="1"/>
		</example>
	</doc><doc for="DataGrid.ShowParentDetailsButtonClick">
		<summary>
			<para>Occurs when the ShowParentDetails button is clicked.</para>
		</summary>
		<example>
			<codelink SampleID="DataGrid_ShowParentDetailsButtonClick" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.IsSelected">
		<summary>
			<para> Gets a value indicating whether a
      specified row is selected.
      </para>
		</summary>
		<param name="row">The number of the row you are interested in. </param>
		<returns>
			<para><see langword="true"/> if the row is
   selected; otherwise, <see langword="false"/> .
   </para>
		</returns>
		<example>
			<codelink SampleID="MyDataGridClass_ResetHeaderBackColor" SnippetID="5"/>
		</example>
	</doc>
	<doc for="DataGrid.CursorChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.BackgroundImageChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.TextChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGrid.AllowNavigation">
		<summary>
			<para>Gets or sets a value indicating whether navigation is allowed.</para>
		</summary>
		<value>
			<para><see langword="true"/> if navigation is allowed; otherwise,
<see langword="false"/>. The default 
   is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If this property is set to <see langword="false"/>,
   links to child tables are not shown.</para>
		</remarks>
		<example>
			<para>The following example toggles the <see cref="System.Windows.Forms.DataGrid.AllowNavigation"/> property between the
<see langword="true"/> and <see langword="false"/>
.</para>
			<codelink SampleID="DataGrid_AllowNavigationChanged" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.HitTestInfo">
		<summary>
			<para> Contains
      information about a part of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> at a
      specified coordinate. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> class, in conjunction with the <see cref="System.Windows.Forms.DataGrid.HitTest"/> 
method of the <see cref="System.Windows.Forms.DataGrid"/> control, is used to determine which part
of a <see cref="System.Windows.Forms.DataGrid"/> control the user has
clicked. The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> class contains the row, column, and part
of the grid that was clicked. See the <see cref="System.Windows.Forms.DataGrid.HitTestType"/>
enumeration returned by the
<see cref="System.Windows.Forms.DataGrid.HitTestInfo.Type"/> property for a complete
list of grid
parts. </para>
			<para>To return a <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> , invoke the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method from the <see cref="System.Windows.Forms.Control.MouseDown"/> event 
of <see cref="System.Windows.Forms.DataGrid"/>
control. Pass the <paramref name="x"/> and <paramref name="y"/> properties of
the <see cref="System.Windows.Forms.MouseEventArgs"/> to the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method in a <see cref="System.Windows.Forms.Control.MouseDown"/> event to return the <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
object. The row, column, and part of the grid are then printed.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.CurrentCell"/>
		<seealso cref="System.Windows.Forms.DataGrid.GetCellBounds"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
	</doc>
	<doc for="DataGrid.HitTestType">
		<summary>
			<para>Specifies the part of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control the user has clicked.</para>
		</summary>
		<remarks>
			<para>Use the members of this enumeration to determine which
      part of the grid has been clicked. The <see cref="System.Windows.Forms.DataGrid.HitTestInfo.Type"/> property of a <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> returns a <see cref="System.Windows.Forms.DataGrid.HitTestType"/>. The <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> is created by invoking the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method of a <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
      control.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method in a <see cref="System.Windows.Forms.Control.MouseDown"/> event to return the <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
. The row, column, and part of the grid are then printed.</para>
			<codelink SampleID="Classic DataGrid.HitTestType Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestInfo"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc>
	<doc for="DataGrid.HitTestInfo.Nowhere">
		<summary>
			<para> Indicates that a coordinate corresponds to part of the
   <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control that 
      is not
      functioning.</para>
		</summary>
		<remarks>
			<para>Other parts of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>, such as the <see cref="System.Windows.Forms.DataGrid.HitTestType.Caption"/> , can return useful
   information. If the part of the grid has no function (such as the gray area
   behind a sparsely populated grid table), the <see cref="System.Windows.Forms.DataGrid.HitTestInfo.Nowhere"/> field is returned.</para>
		</remarks>
		<example>
			<para> The following example tests whether the user is clicking an area of
      the grid that is not valid.</para>
			<codelink SampleID="Classic DataGrid.HitTestInfo.Nowhere Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestInfo.Equals"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTestType"/>
		<seealso cref="System.Windows.Forms.DataGrid.HitTest"/>
	</doc>
	<doc for="DataGrid.DataSource">
		<summary>
			<para>Gets or sets the data source that the grid is displaying data for.</para>
		</summary>
		<value>
			<para>An object that functions as
      a data source.</para>
		</value>
		<remarks>
			<para> At run time, use the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method to set the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/> properties.</para>
			<para>The following data sources are valid:</para>
			<list type="bullet"><item>
					<term>
      
      A <see cref="System.Data.DataTable"/></term>
				</item>
				<item>
					<term>
      
      A <see cref="System.Data.DataView"/></term>
				</item>
				<item>
					<term>
      
      A <see cref="System.Data.DataSet"/></term>
				</item>
				<item>
					<term>
      
      A <see cref="System.Data.DataViewManager"/></term>
				</item>
				<item>
					<term>
      
      Any component that implements the <see cref="System.ComponentModel.IListSource"/> interface</term>
				</item>
				<item>
					<term>
      
      Any component that implements the <see cref="T:System.Collections.IList"/>
      interface</term>
				</item>
			</list>
			<para>See the <see cref="System.Windows.Forms.Binding"/>
class overview for more
information on data sources.</para>
			<para>If the <see cref="System.Windows.Forms.DataGrid.DataSource"/> reference contains more than
one table, you must set the <see cref="System.Windows.Forms.DataGrid.DataMember"/> property a
string that specifies the table to bind to. For example, if the <see cref="System.Windows.Forms.DataGrid.DataSource"/> is a <see cref="System.Data.DataSet"/> or <see cref="System.Data.DataViewManager"/> that contains
three tables named Customers, Orders, and OrderDetails, you must specify the
table to bind to.</para>
			<para>Setting the <see cref="System.Windows.Forms.DataGrid.DataSource"/> to an object that does not implement
the <see cref="System.Collections.IList"/> interface or an <see cref="System.ComponentModel.IListSource"/> will cause the grid to throw an
exception.</para>
			<para>You can create a grid that allows users to edit data but prevents them from
   adding new rows by using a <see cref="T:System.Data.DataView"/> as the data source and setting the <see cref="M:System.Data.DataView.AddNew"/>
   property to <see langword="false"/>.</para>
			<para>To bind the <see cref="System.Windows.Forms.DataGrid"/> to a strongly typed array of objects, the
object must contain public properties. To create a <see cref="System.Windows.Forms.DataGridTableStyle"/> that displays such an array, set the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property to 
<paramref name="classname[]"/> where <paramref name="classname"/> is replaced by the class name. Also 
note that the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property is
case-sensitive. See the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property for an
example.</para>
			<para>You can also bind the <see cref="System.Windows.Forms.DataGrid"/> to an <see cref="System.Collections.ArrayList"/>. A feature of the <see cref="System.Collections.ArrayList"/> is
that it can contain objects of multiple types, but the <see cref="System.Windows.Forms.DataGrid"/>
can only bind to such a list when all items in the list are of the same type as
the first item. This means that all objects must either be of the same type, or
they must inherit from the same class as the first item in the list. For
example, if the first item in a list is a <see cref="System.Windows.Forms.Control"/>, the second item could be
a <see cref="System.Windows.Forms.TextBox"/> (which inherits from <see cref="System.Windows.Forms.Control"/>).
If, on the other hand, the first item is a <see cref="System.Windows.Forms.TextBox"/>, the second object cannot
be a <see cref="System.Windows.Forms.Control"/>. Further, the <see cref="System.Collections.ArrayList"/>
must have items in it when it is bound. An empty <see cref="System.Collections.ArrayList"/>
will result in an empty grid. When binding to an <see cref="System.Collections.ArrayList"/>,
set the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the <see cref="System.Windows.Forms.DataGridTableStyle"/> to "ArrayList" (the type name).</para>
		</remarks>
		<example>
			<para>The following example shows how to set the <see cref="System.Windows.Forms.DataGrid.DataSource"/>, and when needed, the <see cref="System.Windows.Forms.DataGrid.DataMember"/>
, to bind a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> to both a
<see cref="System.Data.DataView"/>and a <see cref="System.Data.DataSet"/>. The example also shows how to return data sources from
the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>.</para>
			<codelink SampleID="Classic DataGrid.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.DataMember"/>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataViewManager"/>
		<seealso cref="System.Data.DataView"/>
	</doc>
	<doc for="DataGrid.SetDataBinding">
		<summary>
			<para>Sets the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/> properties at run time.</para>
		</summary>
		<param name="dataSource">The data source for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</param>
		<param name=" dataMember">The <see cref="System.Windows.Forms.DataGrid.DataMember"/> string that specifies the table to bind to within the object returned by the <see cref="System.Windows.Forms.DataGrid.DataSource"/> property.</param>
		<exception cref="System.ArgumentException">One or more of the arguments are invalid.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="dataSource "/> argument is <see langword="null"/>.</exception>
		<remarks>
			<para>You must use the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method at run time to reset
   the <see cref="System.Windows.Forms.DataGrid.DataSource"/> property. </para>
			<para>See the <see cref="System.Windows.Forms.DataGrid.DataSource"/> property for more details about setting a
valid data source.</para>
			<para>You can create a grid that allows users to edit data
   but prevents them from adding new rows by using a <see cref="T:System.Data.DataView"/> as the data source and setting the <see cref="M:System.Data.DataView.AddNew"/>
   property to <see langword="false"/>. When the <see cref="System.Windows.Forms.DataGrid.DataSource"/> is a <see cref="T:System.Data.DataView"/> or <see cref="T:System.Data.DataTable"/>, set the
<see cref="System.Windows.Forms.DataGrid.DataMember"/> to an empty string (""). </para>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/> to a <see cref="System.Data.DataSet"/>, and a <see cref="T:System.Data.DataTable"/> in the <see cref="System.Data.DataSet"/>, respectively.</para>
			<codelink SampleID="Classic DataGrid.SetDataBinding Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.DataMember"/>
		<seealso cref="System.Windows.Forms.DataGrid.DataSource"/>
		<seealso cref="T:System.Data.DataSet"/>
		<seealso cref="T:System.Data.DataView"/>
	</doc>
	<doc for="DataGrid.AlternatingBackColor">
		<summary>
			<para> Gets or sets the background color of odd-numbered rows of the grid. </para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that
   represents the alternating background color. The default is the system color for
   windows (<see cref="System.Drawing.SystemColors.Window"/> ).</para>
		</value>
		<remarks>
			<para>By default, both the <see cref="System.Windows.Forms.DataGrid.BackColor"/> and the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> properties are set to the same color.
   Setting the <see cref="System.Windows.Forms.DataGrid.BackColor"/> property affects only even-numbered rows,
   while setting the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> affects only odd-numbered
   rows. </para>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/>
to a <see cref="System.Drawing.Color"/>
value.</para>
			<codelink SampleID="Classic DataGrid.AlternatingBackColor Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.BackColor">
		<summary>
			<para> Gets or sets the background color of even-numbered rows of the grid.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/>
that represents the color of rows in the grid. The default is the system color
for windows (<see cref="System.Drawing.SystemColors.Window"/> ).</para>
		</value>
		<remarks>
			<para>Whereas the <see cref="System.Windows.Forms.DataGrid.BackColor"/> property determines the color of rows
   in the grid, the <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/> determines the color of the nonrow area, which
   is only visible when the grid is scrolled to the bottom, or if only a few rows
   are contained in the grid.</para>
			<para>By default, both the <see cref="System.Windows.Forms.DataGrid.BackColor"/> and the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> properties are set to the same color.
Setting the <see cref="System.Windows.Forms.DataGrid.BackColor"/> property affects only even-numbered rows,
while setting the <see cref="System.Windows.Forms.DataGrid.AlternatingBackColor"/> affects only odd-numbered
rows. </para>
		</remarks>
		<example>
			<para>The following example sets both the <see cref="System.Windows.Forms.DataGrid.BackColor"/> and <see cref="System.Windows.Forms.DataGrid.BackgroundColor"/>
properties to different values.</para>
			<codelink SampleID="Classic DataGrid.BackColor Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.BackgroundColor"/>
	</doc>
	<doc for="DataGrid.OnNavigate">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.Navigate"/>
event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.NavigateEventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnRowHeaderClick">
		<summary>
			<para>Raises the <see cref="E:System.Windows.Forms.DataGrid.RowHeaderClick"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<permission cref="System.Security.Permissions.UIPermission">You must have the <see cref="System.Security.Permissions.UIPermission"/> for safe subwindows to set this property.</permission>
	</doc>
	<doc for="DataGrid.OnScroll">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGrid.Scroll"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
	</doc>
	<doc for="DataGrid.OnBackButtonClicked">
		<summary>
			<para> Listens
      for the caption's back button clicked event.
      </para>
		</summary>
		<param name="sender">An <see cref="System.Object"/> that contains data about the control. </param>
		<param name="e">An <see cref="System.EventArgs"/> that contains data about the event. </param>
	</doc>
	<doc for="DataGrid">
		<summary>
			<para>Displays ADO.NET data in a scrollable grid.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid" qualify="true"/> displays Web-like links to child tables. You
   can click on a link to navigate to the child table. When a child table is
   displayed, a back button appears in the caption that can be clicked to navigate
   back to the parent table. The data from the parent rows is displayed below the
   caption and above the column headers. You can hide the parent row information by
   clicking the button to the right of the back button. </para>
			<para>To display a table in the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> at run time, use the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/> method to set the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/>
properties
to a valid data source. The following data sources are
valid:</para>
			<list type="bullet"><item>
					<term>
      A <see cref="System.Data.DataTable"/></term>
				</item>
				<item>
					<term>
      A <see cref="T:System.Data.DataView"/></term>
				</item>
				<item>
					<term>
      A <see cref="T:System.Data.DataSet"/></term>
				</item>
				<item>
					<term>
      A <see cref="System.Data.DataViewManager"/></term>
				</item>
				<item>
					<term>
      A single dimension array</term>
				</item>
				<item>
					<term>
      Any component that implements the <see cref="System.ComponentModel.IListSource"/> interface</term>
				</item>
				<item>
					<term>
      Any component that implements the <see cref="T:System.Collections.IList"/> interface</term>
				</item>
			</list>
			<para>For more information about the <see cref="System.Data.DataSet"/> class, see
<see topic="cpconCreatingUsingDataSets"/>. </para>
			<para>You can create a grid that allows users to edit data
   but prevents them from adding new rows by using a <see cref="T:System.Data.DataView"/> as the data source and setting the <see cref="M:System.Data.DataView.AddNew"/>
   property to <see langword="false"/>. </para>
			<para>Data sources are further managed by <see cref="System.Windows.Forms.BindingManagerBase"/>
objects. For each table in a data source, a <see cref="System.Windows.Forms.BindingManagerBase"/> can be returned from the
form's <see cref="System.Windows.Forms.BindingContext"/>. For example, you can determine the number of
rows contained by a data source by returning the associated <see cref="System.Windows.Forms.BindingManagerBase"/> object's <see cref="System.Windows.Forms.BindingManagerBase.Count"/> property. </para>
			<para> To validate data, use the underlying objects that represent
   data and their events. For example, if the data comes from a <see cref="System.Data.DataTable"/> in a
<see cref="System.Data.DataSet"/>, 
   use the <see cref="System.Data.DataTable.ColumnChanging"/> and <see cref="System.Data.DataTable.RowChanging"/>
   events. </para>
			<note type="note">
   Because the number of columns can be
   customized (by adding or deleting members of the <see cref="System.Windows.Forms.GridColumnStylesCollection"/>) and the rows can be sorted by column,
   the <see cref="System.Windows.Forms.DataGridCell.RowNumber"/> and <see cref="System.Windows.Forms.DataGridCell.ColumnNumber"/> property values cannot be guaranteed to
   correspond to <see cref="System.Data.DataRow"/> and <see cref="System.Data.DataColumn"/> indexes in a <see cref="System.Data.DataTable"/>.
   Therefore you should avoid using those properties in the <see cref="System.Windows.Forms.Control.Validating"/> event to validate data.
</note>
			<para>To determine which cell is selected, use the <see cref="System.Windows.Forms.DataGrid.CurrentCell"/>
property. Change the value of any cell by using the
<see cref="System.Windows.Forms.DataGrid.this"/> property, which can take either the row and column
indexes of the cell, or a single <see cref="System.Windows.Forms.DataGridCell"/>. Monitor the <see cref="System.Windows.Forms.DataGrid.CurrentCellChanged"/> event to
detect when the user selects another cell. </para>
			<para>To determine which part of the control the user clicked, use the <see cref="System.Windows.Forms.DataGrid.HitTest"/> method in the <see cref="System.Windows.Forms.Control.MouseDown"/> event. The <see cref="System.Windows.Forms.DataGrid.HitTest"/> method returns a <see cref="System.Windows.Forms.DataGrid.HitTestInfo"/> object, which contains the row and column of a
clicked area. </para>
			<para>To manage the appearance of the control at run time, several properties for
   setting the color and caption attributes are available, including the <see cref="System.Windows.Forms.DataGrid.CaptionForeColor"/>, <see cref="System.Windows.Forms.DataGrid.CaptionBackColor"/>, <see cref="System.Windows.Forms.DataGrid.CaptionFont"/>
   , and
   so on. </para>
			<para>The appearance of the displayed grid (or grids) can be further modified by creating
<see cref="System.Windows.Forms.DataGridTableStyle"/> objects and 
   adding them to the <see cref="System.Windows.Forms.GridTableStylesCollection"/>, which is accessed through the <see cref="System.Windows.Forms.DataGrid.TableStyles"/> property. For example, if the <see cref="System.Windows.Forms.DataGrid.DataSource"/> is set to a <see cref="System.Data.DataSet"/> containing three <see cref="System.Data.DataTable"/> objects,
   you can add three <see cref="System.Windows.Forms.DataGridTableStyle"/> objects to the collection, one for each
   table. To synchronize each <see cref="System.Windows.Forms.DataGridTableStyle"/> object with a <see cref="System.Data.DataTable"/>, set the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the <see cref="System.Windows.Forms.DataGridTableStyle"/> to the <see cref="System.Data.DataTable.TableName"/> 
of the <see cref="System.Data.DataTable"/> . For more information
about binding to an array of objects, see the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName" qualify="true"/> property. </para>
			<para>To create a customized view of a table, create an instance
   of a <see cref="System.Windows.Forms.DataGridTextBoxColumn"/> or <see cref="System.Windows.Forms.DataGridBoolColumn"/> class and add
   the object to the <see cref="System.Windows.Forms.GridTableStylesCollection"/> accessed through the
<see cref="System.Windows.Forms.DataGrid.TableStyles"/> property. Both classes inherit from 
<see cref="System.Windows.Forms.DataGridColumnStyle"/>. For each column style, set the <see cref="System.Windows.Forms.DataGridColumnStyle.MappingName"/> to the <see cref="System.Data.DataColumn.ColumnName"/> of a column that you want to show in the grid. To
   hide a column, set its <see cref="System.Windows.Forms.DataGridColumnStyle.MappingName"/> to something other than a
   valid <see cref="System.Data.DataColumn.ColumnName"/>
   . </para>
			<para>To format the text of a column, set the <see cref="System.Windows.Forms.DataGridTextBoxColumn.Format"/> property of the <see cref="System.Windows.Forms.DataGridTextBoxColumn"/> to one of the values found in <see topic="cpconDateTimeFormatStrings"/> or
<see topic="cpconStandardNumericFormatStrings"/>. </para>
			<para>To bind the <see cref="System.Windows.Forms.DataGrid"/> to a strongly typed array of objects, the
object must contain public properties. To create a <see cref="System.Windows.Forms.DataGridTableStyle"/> that displays such an array, set the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName" qualify="true"/> property to <paramref name="classname[]"/> where 
<paramref name="classname"/> is replaced by the class name. Also note that 
the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property is case-sensitive. See the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property for an example.</para>
			<para>You can also bind the <see cref="System.Windows.Forms.DataGrid"/> to an <see cref="System.Collections.ArrayList"/>. A feature of the <see cref="System.Collections.ArrayList"/> is
that it can contain objects of multiple types, but the <see cref="System.Windows.Forms.DataGrid"/>
can only bind to such a list when all items in the list are of the same type as
the first item. This means that all objects must either be of the same type, or
they must inherit from the same class as the first item in the list. For
example, if the first item in a list is a <see cref="System.Windows.Forms.Control"/>, the second item could be
a <see cref="System.Windows.Forms.TextBox"/> (which inherits from <see cref="System.Windows.Forms.Control"/>).
If, on the other hand, the first item is a <see cref="System.Windows.Forms.TextBox"/>, the second object cannot
be a <see cref="System.Windows.Forms.Control"/>. Further, the <see cref="System.Collections.ArrayList"/>
must have items in it when it is bound. An empty <see cref="System.Collections.ArrayList"/>
will result in an empty grid. When binding to an <see cref="System.Collections.ArrayList"/>,
set the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the <see cref="System.Windows.Forms.DataGridTableStyle"/> to "ArrayList" (the type name).</para>
			<para> For each <see cref="System.Windows.Forms.DataGridTableStyle"/> , you can set
color and caption attributes that override the settings for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control. However, if those properties are not set, the settings
for the control are used by default. The following properties can be overridden
by <see cref="System.Windows.Forms.DataGridTableStyle"/>
properties: </para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.AllowSorting"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.ForeColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.GridLineColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.GridLineStyle"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.ReadOnly"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/></term>
				</item>
			</list>
			<para>To customize the appearance of individual columns, add
<see cref="System.Windows.Forms.DataGridColumnStyle"/> objects to the 
<see cref="System.Windows.Forms.GridColumnStylesCollection"/>, which is 
   accessed through the <see cref="System.Windows.Forms.DataGridTableStyle.GridColumnStyles"/> property of each <see cref="System.Windows.Forms.DataGridTableStyle"/>. To synchronize each <see cref="System.Windows.Forms.DataGridColumnStyle"/> with a <see cref="System.Data.DataColumn"/> in the <see cref="System.Data.DataTable"/>, set the
<see cref="System.Windows.Forms.DataGridColumnStyle.MappingName"/> to the <see cref="System.Data.DataColumn.ColumnName"/> of a <see cref="System.Data.DataColumn"/>. When constructing a <see cref="System.Windows.Forms.DataGridColumnStyle"/> , you can also set a formatting 
   string that specifies how the column displays data. For example, you can specify
   that the column use a short-date format to display dates contained in the table. </para>
			<note type="caution">
   Always create <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects and add them to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/> before adding <see cref="System.Windows.Forms.DataGridTableStyle"/> objects to the <see cref="System.Windows.Forms.GridTableStylesCollection"/>. When you add an empty <see cref="System.Windows.Forms.DataGridTableStyle"/> to the collection, <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects are automatically generated for
   you. Consequently, an exception will be thrown if you try to add new <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects with duplicate <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> values to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/>.
</note>
		</remarks>
		<example>
			<para>The following example creates a Windows form, a <see cref="T:System.Data.DataSet"/>
containing two <see cref="System.Data.DataTable"/> objects, and a <see cref="T:System.Data.DataRelation"/> that relates the two
tables. To display the data, a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control is
then bound to the <see cref="System.Data.DataSet"/> through
the <see cref="System.Windows.Forms.DataGrid.SetDataBinding"/>
method. A button on the form changes the appearance of the grid by
creating two <see cref="System.Windows.Forms.DataGridTableStyle"/> objects and setting the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of each object to a <see cref="System.Data.DataTable.TableName"/> of one
of the <see cref="System.Data.DataTable"/> objects. The example also contains code in the
<see cref="System.Windows.Forms.Control.MouseUp"/> event that uses the <see cref="System.Windows.Forms.DataGrid.HitTest"/> 
method to print the column, row, and part of the grid that has been clicked.</para>
			<codelink SampleID="Classic DataGrid Example" SnippetID="1"/>
		</example>
		<seealso topic="cpconAccessingDataWithADONET"/>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataView"/>
		<seealso cref="T:System.Data.DataTable"/>
		<seealso cref="T:System.Data.DataRow"/>
	</doc>
	<doc for="DataGrid.CaptionVisible">
		<summary>
			<para>Gets or sets a value that indicates
      whether the grid's caption is visible.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the caption is visible;
   otherwise, <see langword="false"/>. The
   default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If <see cref="System.Windows.Forms.DataGrid.CaptionVisible"/> is
<see langword="false"/> , the <SpecialLocalizableItem kind="UIElement">Back</SpecialLocalizableItem> 
button, <SpecialLocalizableItem kind="UIElement">ParentRow</SpecialLocalizableItem> button, and
caption will not be seen. Because navigation is limited, links to child tables
will also not be visible and <see cref="System.Windows.Forms.DataGrid.AllowNavigation"/> will be set to <see langword="None."/></para>
		</remarks>
		<example>
			<para>The following example toggles the <see cref="System.Windows.Forms.DataGrid.CaptionVisible"/> property.</para>
			<codelink SampleID="Classic DataGrid.CaptionVisible Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGrid.OnMouseDown">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.MouseDown"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains data about the <see cref="System.Windows.Forms.Control.OnMouseDown"/> event.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For an
      overview, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="inheritinfo">
      When overriding <see cref="System.Windows.Forms.DataGrid.OnMouseDown"/> in a derived class, be sure to call
      the base class's <see cref="System.Windows.Forms.DataGrid.OnMouseDown"/> method.
      
   </note>
		</remarks>
		<example>
			<codelink SampleID="DataGrid.OnMouseDown" SnippetID="1"/>
		</example>
	</doc>
</docs>
