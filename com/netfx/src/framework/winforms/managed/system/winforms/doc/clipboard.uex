<docs>
	<doc for="Clipboard.GetDataObject">
		<summary>
			<para>Retrieves the data that is currently on the system
      clipboard.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Windows.Forms.IDataObject"/> that represents the data currently on the clipboard, or <see langword="null"/> if there is no data on the clipboard.</para>
		</returns>
		<exception cref="System.Runtime.InteropServices.ExternalException"><para>Data could not be retrieved from the clipboard.</para></exception>
		<exception cref="System.Threading.ThreadStateException">The <see cref="System.Threading.Thread.ApartmentState"/> property of the application is not set to <see cref="System.Threading.ApartmentState.STA" qualify="true"/>.</exception>
		<remarks>
			<para>Because the data type of the object returned from the clipboard can
      vary, this method returns the data in an <see cref="System.Windows.Forms.IDataObject"/>. Then you can use methods of
      the <see cref="System.Windows.Forms.IDataObject"/> interface to extract the data in its proper
      data type.</para>
		</remarks>
		<permission cref="System.Security.Permissions.UIPermission">for access to the system clipboard. Associated enumeration: <see cref="System.Security.Permissions.UIPermissionClipboard.AllClipboard" qualify="true"/></permission>
		<example>
			<para>The following example uses <see cref="System.Windows.Forms.Clipboard"/> methods to place data on and retrieve it from
   the system clipboard. This code assumes <c>button1</c>, <c>button2</c>, <c>textBox1</c>, and <c>textBox2</c>
have been placed on the form.</para>
			<para>The <c>button1_Click</c> method calls <see cref="System.Windows.Forms.Clipboard.SetDataObject"/> to take selected text from the text
box and place it on the system Clipboard.</para>
			<para>The <c>button2_Click</c> method calls <see cref="System.Windows.Forms.Clipboard.GetDataObject"/> to retrieve data from the system
clipboard. The code uses <see cref="System.Windows.Forms.IDataObject"/> and <see cref="System.Windows.Forms.DataFormats"/> to extract the data
returned. The data is displayed in <c>textBox2</c>
.</para>
			<codelink SampleID="Classic Clipboard Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataObject"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.Clipboard.SetDataObject"/>
		<seealso cref="System.Windows.Forms.IDataObject"/>
	</doc>
	<doc for="Clipboard">
		<summary>
			<para>Provides methods to place data on and retrieve data from the system clipboard. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>For a list of predefined formats to use with the
   <see cref="System.Windows.Forms.Clipboard"/> class, see
      the <see cref="System.Windows.Forms.DataFormats"/> class.</para>
			<para>Call <see cref="System.Windows.Forms.Clipboard.SetDataObject"/> to put data on the clipboard. To
   place a persistent copy of the data on the clipboard, set the <paramref name="copy"/> parameter to
<see langword="true"/>.</para>
			<note type="note">
   Place data on the clipboard in
   multiple formats to maximize the possibility that a target application, whose format requirements you might
   not know, can successfully retrieve the data.
   
</note>
			<para>Call <see cref="System.Windows.Forms.Clipboard.GetDataObject"/> to retrieve data from the clipboard.
The data is returned as an object
that implements the <see cref="System.Windows.Forms.IDataObject"/>
interface. Use the methods specified by <see cref="System.Windows.Forms.IDataObject"/> and fields
in <see cref="System.Windows.Forms.DataFormats"/> to extract the data
from the object. If you do not know the format of the data you
retrieved, call the <see cref="System.Windows.Forms.IDataObject.GetFormats"/> method of the <see cref="System.Windows.Forms.IDataObject"/> interface
to get a list of all formats that data is stored in.
Then call the
<see cref="System.Windows.Forms.IDataObject.GetData"/> method of the <see cref="System.Windows.Forms.IDataObject"/>
interface, and specify a format that your
application can use.</para>
			<note type="note">
   All Windows applications share the system
   clipboard,
   so the contents are subject to change when
   you switch to another application.
   
</note>
			<note type="note">
   
   A class must be serializable for it to be put on the clipboard. See
    <see topic="cpovrserializingobjects"/> for more information on serialization.
</note>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Windows.Forms.Clipboard"/> methods to place data on and retrieve it from
   the system clipboard. This code assumes <c>button1</c>, <c>button2</c>, <c>textBox1</c>, and <c>textBox2</c> have
been created and placed on the form.</para>
			<para>The <c>button1_Click</c> method calls <see cref="System.Windows.Forms.Clipboard.SetDataObject"/> to take selected text from the text
box and place it on the system clipboard.</para>
			<para>The <c>button2_Click</c> method calls <see cref="System.Windows.Forms.Clipboard.GetDataObject"/> to retrieve data from the system
clipboard.
The code uses <see cref="System.Windows.Forms.IDataObject"/> and <see cref="System.Windows.Forms.DataFormats"/> to extract the data
returned and displays the data in <c>textBox2</c>
.</para>
			<codelink SampleID="Classic Clipboard Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataObject"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.IDataObject"/>
	</doc>
	<doc for="Clipboard.SetDataObject">
		<overload>
			<para>Places data on the system clipboard.</para>
		</overload>
		<summary>
			<para>Places nonpersistent data on the system clipboard.</para>
		</summary>
		<param name="data">The data to place on the clipboard.</param>
		<exception cref="System.Runtime.InteropServices.ExternalException">Data could not be placed on the clipboard.</exception>
		<exception cref="System.Threading.ThreadStateException">The <see cref="System.Threading.Thread.ApartmentState"/> property of the application is not set to <see cref="System.Threading.ApartmentState.STA" qualify="true"/>.</exception>
		<exception cref="System.ArgumentNullException">The value of <paramref name="data"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>Data will be deleted from system clipboard
      when the application exits.</para>
			<note type="note">
   
   A class must be serializable for it to be put on the clipboard. See
    <see topic="cpovrserializingobjects"/> for more information on serialization.
</note>
		</remarks>
		<permission cref="System.Security.Permissions.UIPermission">for access to the system clipboard. Associated enumeration: <see cref="System.Security.Permissions.UIPermissionClipboard.AllClipboard" qualify="true"/></permission>
		<example>
			<para>The following example uses <see cref="System.Windows.Forms.Clipboard.SetDataObject"/> to place nonpersistent text data onto
   the system clipboard. In the <c>button1_Click</c>
method, the selected text is copied from <c>textBox1</c>
and pasted on the clipboard. In the <c>button2_Click</c> method, the information is
retrieved from the clipboard and
displayed in <c>textBox2</c>. This
code assumes <c>button1</c>, <c>button2</c>, <c>textBox1</c>, and <c>textBox2</c>
have been created and placed on a form.</para>
			<codelink SampleID="Classic Clipboard Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataObject"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.IDataObject"/>
		<seealso cref="System.Windows.Forms.Clipboard.GetDataObject"/>
	</doc>
	<doc for="Clipboard.SetDataObject1">
		<summary>
			<para>Places data on the system clipboard and specifies whether the data
      should remain on the clipboard
      after the application exits.</para>
		</summary>
		<param name="data">The data to place on the clipboard.</param>
		<param name="copy"><see langword="true"/> if you want data to remain on the clipboard after this application exits; otherwise, <see langword="false"/>.</param>
		<exception cref="System.Runtime.InteropServices.ExternalException">Data could not be placed on the clipboard.</exception>
		<exception cref="System.Threading.ThreadStateException">The <see cref="System.Threading.Thread.ApartmentState"/> property of the application is not set to <see cref="System.Threading.ApartmentState.STA" qualify="true"/>.</exception>
		<exception cref="System.ArgumentNullException">The value of <paramref name="data"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>If the <paramref name="copy"/> parameter is <see langword="false"/>, the data will be deleted from system
   clipboard when the application
   exits.</para>
			<note type="note">
   
   A class must be serializable for it to be put on the clipboard. See
<see topic="cpovrserializingobjects"/> for more information on serialization.
</note>
		</remarks>
		<permission cref="System.Security.Permissions.UIPermission">for access to the system clipboard. Associated enumeration: <see cref="System.Security.Permissions.UIPermissionClipboard.AllClipboard" qualify="true"/></permission>
		<example>
			<para>The following method is run in an application. It places a persistent copy of the
      selected text data in the text box on
      the system clipboard. This code assumes
      <c>button1</c>, <c>textBox1</c>, and <c>textBox2</c>
      have been created and placed on
      a form.</para>
			<codelink SampleID="Classic Clipboard.SetDataObject1 Example" SnippetID="1"/>
			<para>In a different application, the following method 
retrieves the text from the system clipboard and pastes the text into <c>textBox2</c>. This code
 assumes <c>button2</c>
 and <c>textBox2</c>
 have been created and placed on a
 form.</para>
			<codelink SampleID="Classic Clipboard.SetDataObject1 Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataObject"/>
		<seealso cref="System.Windows.Forms.DataFormats"/>
		<seealso cref="System.Windows.Forms.IDataObject"/>
		<seealso cref="System.Windows.Forms.Clipboard.GetDataObject"/>
	</doc>
</docs>
