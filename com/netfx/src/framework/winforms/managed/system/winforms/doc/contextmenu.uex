<docs>
	<doc for="ContextMenu.ShouldSerializeRightToLeft">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.ContextMenu.RightToLeft"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed
   from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.ContextMenu"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.ContextMenu"/>.</para>
		</remarks>
	</doc>
	<doc for="ContextMenu.ContextMenu">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ContextMenu"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ContextMenu"/> class with no menu items specified.</para>
		</summary>
		<remarks>
			<para>Once you have used this version of the constructor, you can add menu items to the <see cref="System.Windows.Forms.ContextMenu"/> by using the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method of the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> class. You can access the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> through the <see cref="System.Windows.Forms.Menu.MenuItems"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection"/>
	</doc><doc for="ContextMenu.OnPopup">
		<nodoc/>
		<summary>
			<para>Raises the Popup event</para>
		</summary>
		<param name="e">An EventArgs that contains the event data.</param>
	</doc>
	<doc for="ContextMenu">
		<summary>
			<para> Represents a shortcut menu.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ContextMenu"/> class represents shortcut menus that can be displayed when the user clicks the right mouse button over a control or area of the form. Shortcut menus are typically used to combine different menu items from a <see cref="System.Windows.Forms.MainMenu"/> of a form that are useful for the user given the context of the application. For example, you can use a shortcut menu assigned to a <see cref="System.Windows.Forms.TextBox"/> control to provide menu items for changing the font of the text, finding text within the control, or Clipboard features for copying and pasting text. You can also display new <see cref="System.Windows.Forms.MenuItem"/> objects in a
   shortcut menu that are not located within a <see cref="System.Windows.Forms.MainMenu"/> to provide situation specific commands that are not appropriate for the <see cref="System.Windows.Forms.MainMenu"/> to display.</para>
			<para>Typically, a shortcut menu is displayed when a user clicks the right mouse button over a control or the form itself. Visible controls and <see cref="System.Windows.Forms.Form"/> have a <see cref="System.Windows.Forms.Control.ContextMenu"/> property that binds the <see cref="System.Windows.Forms.ContextMenu"/> class to the
control that displays the shortcut menu. More than one control can use a <see cref="System.Windows.Forms.ContextMenu"/>. You can use the <see cref="System.Windows.Forms.ContextMenu.SourceControl"/>
property to determine which control last displayed the shortcut menu in order to perform tasks specific to the control or to modify the shortcut menu displayed for the control.</para>
			<para>You might want to know when the shortcut menu is being displayed in order to set check marks, disable items, and perform other menu tasks before the menu is displayed to the user. You can handle the <see cref="System.Windows.Forms.ContextMenu.Popup"/> event to determine when the shortcut menu is being displayed.</para>
			<note type="note">
   In order to reuse <see cref="System.Windows.Forms.MenuItem"/> objects that are displayed in a <see cref="System.Windows.Forms.MainMenu"/> for use in a <see cref="System.Windows.Forms.ContextMenu"/>, you must create a copy of the menu using the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/> class. You can also merge menu items and their submenu items into a single <see cref="System.Windows.Forms.MenuItem"/> object using the <see cref="System.Windows.Forms.MenuItem.MergeMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/> class.
   
</note>
		</remarks>
		<example>
			<para>The following example creates an event handler for the <see cref="System.Windows.Forms.ContextMenu.Popup"/> event of the <see cref="System.Windows.Forms.ContextMenu"/>. The code in the event
   handler determines which of two controls a <see cref="System.Windows.Forms.PictureBox"/> named <c>pictureBox1</c> and a <see cref="System.Windows.Forms.TextBox"/> named
<c>textBox1</c> is the control
displaying the shortcut menu. Depending on which control caused the <see cref="System.Windows.Forms.ContextMenu"/> to
display its shortcut menu, the control adds the appropriate <see cref="System.Windows.Forms.MenuItem"/>
objects to the <see cref="System.Windows.Forms.ContextMenu"/>. This example assumes that you have an
instance of the <see cref="System.Windows.Forms.ContextMenu"/> class, named <c>contextMenu1</c>, defined within the form. This
example also assumes that you have a <see cref="System.Windows.Forms.TextBox"/> and <see cref="System.Windows.Forms.PictureBox"/>
added to a form and that the <see cref="System.Windows.Forms.Control.ContextMenu"/> property of these
controls is set to <c>contextMenu1</c>.</para>
			<codelink SampleID="Classic ContextMenu Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu"/>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.MainMenu"/>
	</doc>
	<doc for="ContextMenu.ContextMenu1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ContextMenu"/>
class with a specified set of <see cref="System.Windows.Forms.MenuItem"/> objects.</para>
		</summary>
		<param name="menuItems">An array of <see cref="System.Windows.Forms.MenuItem"/> objects that represent the menu items to add to the shortcut menu.</param>
		<remarks>
			<para>You can use this version of the constructor to create a <see cref="System.Windows.Forms.ContextMenu"/> that has its menu items specified at the time it is created. Once you have used this version of the constructor, you can add additional menu items to the <see cref="System.Windows.Forms.ContextMenu"/> by using the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method of the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> class. You can
   access the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> through the <see cref="System.Windows.Forms.Menu.MenuItems"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.MenuItem"/>
	</doc>
	<doc for="ContextMenu.SourceControl">
		<summary>
			<para> Gets the control that is displaying the shortcut menu.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.Control"/> that represents the control that is displaying the shortcut menu. If no control has displayed the shortcut menu, the property returns <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>This property enables you to determine which control currently displays the
      shortcut menu defined in the <see cref="System.Windows.Forms.ContextMenu"/>. If the shortcut menu is not currently
      displayed, you can use this property to determine which control last displayed
      the shortcut menu. You can use this property in the <see cref="System.Windows.Forms.ContextMenu.Popup"/> event to ensure that the control displays
      the proper menu items. You can also use this property to pass a reference to the
      control to a method that performs the tasks associated with a menu command
      displayed in the shortcut menu. Since the <see cref="System.Windows.Forms.Form"/> class inherits from
   <see cref="System.Windows.Forms.Control"/>, you can also use this property if the
   <see cref="System.Windows.Forms.ContextMenu"/> is associated with a form.</para>
		</remarks>
		<example>
			<para>The following example creates an event handler for the <see cref="System.Windows.Forms.ContextMenu.Popup"/> event of the <see cref="System.Windows.Forms.ContextMenu"/>. The code in the event handler determines which of two controls a <see cref="System.Windows.Forms.PictureBox"/> named <c>pictureBox1</c> and a <see cref="System.Windows.Forms.TextBox"/> named <c>textBox1</c> is the control displaying the shortcut menu. Depending on which control caused the <see cref="System.Windows.Forms.ContextMenu"/> to display its shortcut menu, the control adds the appropriate <see cref="System.Windows.Forms.MenuItem"/> objects to the <see cref="System.Windows.Forms.ContextMenu"/>. This example assumes that you have an instance of the <see cref="System.Windows.Forms.ContextMenu"/> class, named <c>contextMenu1</c>, defined within the form. This example also assumes that you have a <see cref="System.Windows.Forms.TextBox"/> and <see cref="System.Windows.Forms.PictureBox"/> added to a form and that the <see cref="System.Windows.Forms.Control.ContextMenu"/> property of these controls is set to <c>contextMenu1</c>.</para>
			<codelink SampleID="Classic ContextMenu Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ContextMenu.Popup">
		<summary>
			<para>Occurs before the shortcut menu is displayed.</para>
		</summary>
		<remarks>
			<para>You can use this event to initialize the <see cref="System.Windows.Forms.MenuItem"/> objects before they are displayed. For example, if you use a <see cref="System.Windows.Forms.ContextMenu"/> for three <see cref="System.Windows.Forms.TextBox"/> controls and you want to disable certain menu items in the <see cref="System.Windows.Forms.ContextMenu"/> depending on which <see cref="System.Windows.Forms.TextBox"/> is displaying the shortcut menu, you can create an event handler for this event. You could use the <see cref="System.Windows.Forms.ContextMenu.SourceControl"/> property to determine which <see cref="System.Windows.Forms.TextBox"/> is about to display the <see cref="System.Windows.Forms.ContextMenu"/> and disable the appropriate <see cref="System.Windows.Forms.MenuItem"/> objects.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example creates an event handler for the <see cref="System.Windows.Forms.ContextMenu.Popup"/> event of the <see cref="System.Windows.Forms.ContextMenu"/>. The code in the event handler determines which of two controls a <see cref="System.Windows.Forms.PictureBox"/> named <c>pictureBox1</c> and a <see cref="System.Windows.Forms.TextBox"/> named <c>textBox1</c> is the control displaying the shortcut menu. Depending on which control caused the <see cref="System.Windows.Forms.ContextMenu"/> to display its shortcut menu, the control adds the appropriate <see cref="System.Windows.Forms.MenuItem"/> objects to the <see cref="System.Windows.Forms.ContextMenu"/>. This example assumes that you have an instance of the <see cref="System.Windows.Forms.ContextMenu"/> class, named <c>contextMenu1</c>, defined within the form. This example also assumes that you have a <see cref="System.Windows.Forms.TextBox"/> and <see cref="System.Windows.Forms.PictureBox"/> added to a form and that the <see cref="System.Windows.Forms.Control.ContextMenu"/> property of these controls is set to <c>contextMenu1</c>.</para>
			<codelink SampleID="Classic ContextMenu Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ContextMenu.RightToLeft">
		<summary>
			<para> Gets or sets a value indicating whether text displayed by the control is displayed from right to left.</para>
		</summary>
		<value>
			<para> One of the <see cref="System.Windows.Forms.RightToLeft"/> values.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value assigned to the property is not a valid member of the <see cref="System.Windows.Forms.RightToLeft"/> enumeration.</exception>
		<remarks>
			<para>This property allows your menus to support languages that
      are written from right to left. When this property is set to
   <see langword="RightToLeft.Yes"/> , the menu item text is displayed from right to left instead of the default left to right method. </para>
			<note type="note">
      For more information about
      how enabling right-to-left alignment effects Windows Forms controls, see the <see cref="System.Windows.Forms.Control.RightToLeft"/> property.
      
   </note>
		</remarks>
	</doc>
	<doc for="ContextMenu.Show">
		<summary>
			<para>Displays the shortcut menu at the specified position.</para>
		</summary>
		<param name="control">A <see cref="System.Windows.Forms.Control"/> object that specifies the control with which this shortcut menu is associated.</param>
		<param name="pos">A <see cref="System.Drawing.Point"/> object that specifies the coordinates at which to display the menu. These coordinates are specified relative to the client coordinates of the control specified in the <paramref name="control"/> parameter.</param>
		<remarks>
			<para>Typically, a <see cref="System.Windows.Forms.ContextMenu"/> is displayed when the user clicks the right mouse button on a control or area of the form that the <see cref="System.Windows.Forms.ContextMenu"/> is bound to. You can use this method to manually display the shortcut menu at a specific location and bind it with a specific control. This method does not return until the menu is dismissed.</para>
		</remarks>
	</doc>
</docs>
