<docs>
	<doc for="FlatStyle.Flat">
		<summary>
			<para>
       The control appears flat.
    </para>
		</summary>
	</doc>
	<doc for="FlatStyle.Popup">
		<summary>
			<para>
       A control appears flat until the mouse pointer
       moves over
       it, at which point it appears three-dimensional.
    </para>
		</summary>
	</doc>
	<doc for="FlatStyle.Standard">
		<summary>
			<para>
       The control appears three-dimensional.
    </para>
		</summary>
	</doc>
	<doc for="FlatStyle.System">
		<summary>
			<para> The appearance of the control is determined by the 
      user's operating system.</para>
		</summary>
	</doc><doc for="FlatStyle">
		<summary>
			<para> Specifies the appearance of a control.</para>
		</summary>
		<remarks>
			<para>This enumeration is used by members such as <see cref="P:System.Windows.Forms.ButtonBase.FlatStyle" qualify="true"/>, <see cref="P:System.Windows.Forms.GroupBox.FlatStyle" qualify="true"/>, and <see cref="P:System.Windows.Forms.Label.FlatStyle" qualify="true"/>.</para>
			<para>In the case of the <see cref="F:System.Windows.Forms.FlatStyle.Popup"/> style button, this enumeration
controls some behavior as well as appearance. The <see cref="F:System.Windows.Forms.FlatStyle.Popup"/> style control initially
appears <see cref="F:System.Windows.Forms.FlatStyle.Flat"/> until the mouse pointer moves over it. When the
mouse pointer moves over the <see cref="F:System.Windows.Forms.FlatStyle.Popup"/> control, it appears as a
<see cref="F:System.Windows.Forms.FlatStyle.Standard"/> style
control until the mouse pointer is moved off of
it again.</para>
			<para>If the <see cref="F:System.Windows.Forms.FlatStyle.System"/> style is used, the appearance
of the control is determined by the user's operating system and the following
property values will be ignored: <see cref="P:System.Windows.Forms.Control.BackgroundImage" qualify="true"/>,
<see langword="ImageAlign"/>, <see langword="Image"/>, <see langword="ImageIndex"/>, 
<see langword="ImageList"/>, and <see langword="TextAlign"/>. In addition, the <see cref="P:System.Windows.Forms.Control.BackColor" qualify="true"/> property will 
be ignored for button controls. If supported, users
can change the appearance of controls by adjusting the appearance settings of
their operating
system. </para>
			<note type="note">
   When the <see cref="P:System.Windows.Forms.ButtonBase.FlatStyle"/> property of the <see cref="T:System.Windows.Forms.RadioButton"/> and <see cref="T:System.Windows.Forms.CheckBox"/> classes is set
   to <see cref="F:System.Windows.Forms.FlatStyle.System" qualify="true"/>, the
   control is drawn by the user's operating system and the check alignment is based
   upon the <see langword="CheckAlign"/> and <see cref="P:System.Windows.Forms.ButtonBase.TextAlign" qualify="true"/> property values. The <see langword="CheckAlign"/> property value is not
   changed, but the appearance of the control can be affected. The check box
   is horizontally aligned with either the left or right edge of the control (a left
   or center alignment appears left aligned, right remains unchanged), and vertically aligned the
   same as the descriptive text. For example, if you have a <see cref="T:System.Windows.Forms.CheckBox"/> control with a <see langword="CheckAlign"/> property value of <see cref="F:System.Drawing.ContentAlignment.MiddleCenter" qualify="true"/> and a <see cref="P:System.Windows.Forms.ButtonBase.TextAlign"/> property value of <see cref="F:System.Drawing.ContentAlignment.TopRight" qualify="true"/>, and the <see cref="P:System.Windows.Forms.ButtonBase.FlatStyle"/>
   property value is set to <see cref="F:System.Windows.Forms.FlatStyle.System" qualify="true"/>, the check box alignment will
   appear to be <see cref="F:System.Drawing.ContentAlignment.TopLeft" qualify="true"/> while the text alignment
   remains unchanged.
</note>
			<note type="caution">
   Setting the
<see langword="FlatStyle"/> property to <see cref="F:System.Windows.Forms.FlatStyle.System" qualify="true"/> is not advisable if you need to display an 
   image on a control, display an image as a control's background, or perform
   precise text alignment.
</note>
		</remarks>
		<platnote platform="WinXP"><para>To make your Windows Forms application support Windows XP visual styles, be sure to set the <see langword="FlatStyle"/> property to <see cref="F:System.Windows.Forms.FlatStyle.System" qualify="true"/> and include a manifest with your executable. A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file. For an example of a manifest, see the Example section. For more information about using the visual styles available in Windows XP, see the Using Windows XP Visual Styles in the User Interface Design and Development section of the MSDN Library. </para>
		</platnote>
		<example>
			<para>The following is an example of a manifest to allow your application
      to support the visual styles available in Windows XP. The manifest can be added to your application as a resource or as a
      stand-alone text file. The manifest file resides in the same directory as
      the executable file, and the name of the text file must be the complete name
      of the executable file with an additional file name extension of .manifest. For example, the
      manifest file for MyApp.exe would be MyApp.exe.manifest. This
      example assumes that the <see langword="FlatStyle"/> properties of the controls in your
      application are set to <see cref="F:System.Windows.Forms.FlatStyle.System" qualify="true"/>.</para>
			<code>
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0"&gt;
&lt;assemblyIdentity
    version="1.0.0.0"
    processorArchitecture="X86"
    name="CompanyName.ProductName.YourApplication"
    type="win32"
/&gt;
&lt;description&gt;Your application description here.&lt;/description&gt;
&lt;dependency&gt;
    &lt;dependentAssembly&gt;
        &lt;assemblyIdentity
            type="win32"
            name="Microsoft.Windows.Common-Controls"
            version="6.0.0.0"
            processorArchitecture="X86"
            publicKeyToken="6595b64144ccf1df"
            language="*"
        /&gt;
    &lt;/dependentAssembly&gt;
&lt;/dependency&gt;
&lt;/assembly&gt;
   </code>
		</example>
		<seealso cref="M:System.Windows.Forms.Control.OnMouseEnter"/>
		<seealso cref="M:System.Windows.Forms.Control.OnMouseLeave"/>
	</doc>
</docs>
