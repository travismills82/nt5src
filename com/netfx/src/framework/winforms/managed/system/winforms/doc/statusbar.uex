<docs>
	<doc for="StatusBar.Site">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ArePanelsRealized">
		<summary>
     Tells whether the panels have been realized.
 </summary>
	</doc>
	<doc for="StatusBar.DirtyLayout">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ApplyPanelWidths">
		<summary>
     Makes the panel according to the sizes in the panel list.
 </summary>
	</doc>
	<doc for="StatusBar.CreateHandle">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ForcePanelUpdate">
		<summary>
     Forces the panels to be updated, location, repainting, etc.
 </summary>
	</doc>
	<doc for="StatusBar.EnumChildren">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.RealizePanels">
		<summary>
     This function sets up all the panel on the status bar according to
     the internal this.panels List.
 </summary>
	</doc>
	<doc for="StatusBar.RemoveAllPanelsWithoutUpdate">
		<summary>
     Remove the internal list of panels without updating the control.
 </summary>
	</doc>
	<doc for="StatusBar.SetPanelContentsWidths">
		<summary>
     Sets the widths of any panels that have the
     StatusBarPanelAutoSize.CONTENTS property set.
 </summary>
		<param name="newPanels">
     Indiacates whether the panels have actually
     been created within the statusbar
 </param>
	</doc>
	<doc for="StatusBar.LayoutPanels">
		<summary>
     Sizes the the panels appropriately.  It looks at the SPRING AutoSize
     property.
 </summary>
		<returns>
     true if resizing tool place
 </returns>
	</doc>
	<doc for="StatusBar.WmDrawItem">
		<summary>
     Processes messages for ownerdraw panels.
 </summary>
	</doc>
	<doc for="StatusBar.WmNotifyNMClick">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ControlToolTip">
		<summary>
     This is a tooltip control that provides tips for a single
     control. Each "tool" region is defined by a rectangle and
     the string that should be displayed. This implementation
     is based on System.Windows.Forms.ToolTip, but this control
     is lighter weight and provides less functionality... however
     this control binds to rectangular regions, instead of
     full controls.
 </summary>
	</doc>
	<doc for="StatusBar.ControlToolTip.Tool">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ControlToolTip.Tool.rect">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ControlToolTip.Tool.text">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ControlToolTip.GetMinTOOLINFO">
		<summary>
     Returns a new instance of the TOOLINFO_T structure with the minimum
     required data to uniquely identify a region. This is used primarily
     for delete operations. NOTE: This cannot force the creation of a handle.
 </summary>
		<param name="tool">
		</param>
		<returns>
     TOOLINFO_T structure that represents region.
		</returns>
		<seealso cref="GetTOOLINFO"/>
	</doc>
	<doc for="StatusBar.ControlToolTip.GetTOOLINFO">
		<summary>
     Returns a detailed TOOLINFO_T structure that represents the specified
     region. NOTE: This may force the creation of a handle.
 </summary>
		<param name="tool">
		</param>
		<returns>
     TOOLINFO_T that represents the specified region.
		</returns>
		<seealso cref="GetMinTOOLINFO"/>
	</doc>
	<doc for="StatusBar.ControlToolTip.Finalize">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.ControlToolTip.ToolTipNativeWindow">
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.BackColor">
		<nodoc/>
		<summary>
			<para> The background color of this control. This is an ambient property and will
      always return a non-null value.
      </para>
		</summary>
		<seealso cref="System.Drawing.Color"/>
	</doc><doc for="StatusBar.ControlToolTip.CreateParams"><nodoc/>
		<summary>
   Returns the createParams to create the window.
   </summary>
		<returns>
   CreateParams
   </returns>
	</doc><doc for="StatusBar.ControlToolTip.Handle"><nodoc/>
		<summary>
		</summary>
	</doc><doc for="StatusBar.ControlToolTip.WndProc"><nodoc/>
		<summary>
   WNDPROC
   </summary>
	</doc><doc for="StatusBar.CreateParams">
		<nodoc/>
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.CreateParams"/> object used to create the handle for this
   control.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.CreateParams"/> object used to create the handle for this control.</para>
		</value>
		<seealso cref="System.Windows.Forms.CreateParams"/>
	</doc><doc for="StatusBar.WndProc"><nodoc/>
		<summary>
			<para>       Base wndProc. All messages are sent to wndProc after getting filtered through
      the preProcessMessage function. Inheriting controls should call base.wndProc
      for any messages that they don't handle.
      </para>
		</summary>
	</doc><doc for="StatusBar.OnMouseUp">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StatusBar.ForeColor"><nodoc/>
		<summary>
			<para>       Gets or sets
      the forecolor for the control.
      </para>
		</summary>
		<value>
			<para>       A <see cref="System.Drawing.Color"/> that represents the forecolor of the control.
   The default is <see langword="Empty"/>.
   </para>
		</value>
		<seealso cref="System.Drawing.Color"/>
	</doc><doc for="StatusBar.OnLayout">
		<nodoc/>
		<summary>
			<para> Raises the Layout event.
      </para>
		</summary>
		<param name="levent">A LayoutEventArgs that contains the event data. </param>
		<remarks>
			<para> Raising an event invokes the event handler
      through a delegate. For more information, see
   <see topic="cpconProvidingEventFunctionality"/>.
      .
      </para>
			<note type="inheritinfo">
      When overriding <see cref="System.Windows.Forms.StatusBar.OnLayout"/> in a derived class, be sure to call
      the base class's <see cref="System.Windows.Forms.Control.OnLayout"/>
      method.
      
   </note>
		</remarks>
	</doc><doc for="StatusBar.ToString">
		<nodoc/>
		<summary>
			<para> Returns a string representation for this control.
      </para>
		</summary>
		<returns>
			<para> String
      </para>
		</returns>
	</doc><doc for="StatusBar.BackgroundImage"><nodoc/>
		<summary>
			<para>       Gets or sets the image rendered on the background of the
      <see cref="System.Windows.Forms.StatusBar"/>
   control.
   </para>
		</summary>
		<value>
			<para>       An <see cref="System.Drawing.Image"/> that
   represents the background image of the control. The default is
   <see langword="null"/>.
   </para>
		</value>
		<seealso cref="System.Drawing.Image"/>
	</doc><doc for="StatusBar.DefaultSize"><nodoc/>
		<summary>
			<para>Gets the default size of the control.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Size"/> object that represents the size of the control.</para>
		</value>
	</doc><doc for="StatusBar.Dock"><nodoc/>
		<summary>
			<para>       Gets or sets the docking behavior of the <see cref="System.Windows.Forms.StatusBar"/> control.
   </para>
		</summary>
		<value>
			<para>       One of the <see cref="System.Windows.Forms.DockStyle"/> values. The default is <see langword="Bottom"/>.
   </para>
		</value>
		<seealso cref="System.Windows.Forms.DockStyle"/>
	</doc><doc for="StatusBar.Font"><nodoc/>
		<summary>
			<para>       Gets or sets the font the <see cref="System.Windows.Forms.StatusBar"/>
control will use to display
information.
</para>
		</summary>
		<value>
			<para>       The <see cref="System.Drawing.Font"/> of the
   text. The default is the font
   of the container, unless you override it.
   </para>
		</value>
		<seealso cref="System.Drawing.Font"/>
	</doc><doc for="StatusBar.Text"><nodoc/>
		<summary>
			<para> Gets or sets the status bar text.
      </para>
		</summary>
		<value>
			<para>The status bar text.</para>
		</value>
	</doc><doc for="StatusBar.OnHandleCreated"><nodoc/>
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.HandleCreated"/>
event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler
      through a delegate. For more information, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<note type="note">
      When overriding <see cref="System.Windows.Forms.StatusBar.OnHandleCreated"/> in a derived class, be sure to call the base
      class's <see cref="System.Windows.Forms.Control.OnHandleCreated"/>- method.
      </note>
		</remarks>
	</doc><doc for="StatusBar.OnHandleDestroyed"><nodoc/>
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.HandleDestroyed"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler
      through a delegate. For more information, see
      <see topic="cpconProvidingEventFunctionality"/>.
      .</para>
			<note type="inheritinfo">
      When overriding <see cref="System.Windows.Forms.StatusBar.OnHandleDestroyed"/> in a derived class, be sure to call the base
      class's <see cref="System.Windows.Forms.Control.OnHandleDestroyed"/>
      method.
      </note>
		</remarks>
	</doc><doc for="StatusBar.OnMouseDown"><nodoc/>
		<summary>
			<para>       Raises the <see cref="System.Windows.Forms.StatusBar.OnMouseDown"/> event.
   </para>
		</summary>
		<param name="e">
   A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains the event data.
   </param>
		<remarks>
			<para>       Raising an event invokes the event handler
      through a delegate. For more information, see
      <see topic="cpconProvidingEventFunctionality"/>.
      .
      </para>
			<note type="inheritinfo">
      When overriding <see cref="System.Windows.Forms.StatusBar.OnMouseDown"/> in a derived class, be sure to call
      the base class's <see cref="System.Windows.Forms.Control.OnMouseDown"/>
      method.
      </note>
		</remarks>
	</doc><doc for="StatusBar.OnResize">
		<nodoc/>
		<summary>
			<para> Raises the <see cref="System.Windows.Forms.StatusBar.OnResize"/>
event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data. </param>
		<remarks>
			<para> Raising an event invokes the event handler through a delegate. For an
      overview, see <see topic="cpconProvidingEventFunctionality"/>.
      </para>
			<note type="inheritinfo">
      When overriding <see cref="System.Windows.Forms.StatusBar.OnResize"/> in a derived class, be sure to call
      the base class's <see cref="System.Windows.Forms.Control.OnResize"/>
      method.
      
   </note>
		</remarks>
	</doc><doc for="StatusBar.ControlToolTip.CreateHandle"><nodoc/>
		<summary>
   Creates the handle for the control.
   </summary>
	</doc><doc for="StatusBar.ControlToolTip.DestroyHandle"><nodoc/>
		<summary>
			<para>Destroys the handle for this control.</para>
		</summary>
	</doc><doc for="StatusBar.TabStop">
		<nodoc/>
		<summary>
			<para> Gets or sets a value indicating whether the user will be able to tab to the
   <see cref="System.Windows.Forms.StatusBar"/> .
      </para>
		</summary>
		<value>
			<para><see langword="true"/> if the tab
   key moves focus to the <see cref="System.Windows.Forms.StatusBar"/> ; otherwise
<see langword="false"/>. The default is
<see langword="false"/>.
   </para>
		</value>
	</doc><doc for="StatusBar.StatusBar">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.StatusBar"/> class. </para>
		</summary>
		<remarks>
			<para> The default <see cref="System.Windows.Forms.StatusBar"/> has no panels.
   </para>
			<para> When you create an instance of <see cref="System.Windows.Forms.StatusBar"/>, the following read/write properties
are set to initial values.</para>
			<list type="table">
				<listheader>
					<term> Property</term>
					<description> Initial Value</description>
				</listheader>
				<item>
					<term><see cref="System.Windows.Forms.Control.Dock"/></term>
					<description><see langword="DockStyle.Bottom "/></description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.StatusBar.ShowPanels"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.StatusBar.SizingGrip"/></term>
					<description><see langword="true"/></description>
				</item>
			</list>
			<para> You can change the value for any of these properties through a separate call
   to the property.
   </para>
		</remarks>
	</doc><doc for="StatusBar.StatusBarPanelCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para> The number of <see cref="System.Windows.Forms.StatusBarPanel"/> objects in the collection.
   </para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of panels in the <see cref="System.Windows.Forms.StatusBar"/>. 
   You can then use this value when you are looping through the values of the
   collection and you need to provide a number of iterations to perform the
   loop.</para>
		</remarks>
	</doc><doc for="StatusBar.StatusBarPanelCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether this collection is
      read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if this collection is read-only; 
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>This property is always <see langword="false"/> for this collection.</para>
		</remarks>
	</doc><doc for="StatusBar.StatusBarPanelCollection.Clear">
		<summary>
			<para> Removes all items from the collection.
      </para>
		</summary>
		<remarks>
			<para>When you remove panels from the collection, all information about the deleted 
      panels is lost. To remove a single panel from the <see cref="System.Windows.Forms.StatusBar"/>,
      use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove"/> or <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt"/>
	</doc><doc for="StatusBar.StatusBarPanelCollection.Contains">
		<summary>
			<para>Determines whether the specified panel is located within the collection.</para>
		</summary>
		<param name="panel">The <see cref="System.Windows.Forms.StatusBarPanel"/> to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the panel is located within the 
   collection; otherwise, <see langword="false"/>
   .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains"/> method enables you to determine 
   whether a panel is a member of the collection. Once you know that the item is
   located within the collection, you can use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf"/> method to determine where the
   panel is located within the collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf"/>
	</doc><doc for="StatusBar.StatusBarPanelCollection.GetEnumerator">
		<summary>
			<para> Returns an enumerator to use to iterate through the item collection.
      </para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> object that represents the item collection.</para>
		</returns>
	</doc><doc for="StatusBar.StatusBarPanelCollection.IndexOf">
		<summary>
			<para>Returns the index within the collection of the specified 
      panel.</para>
		</summary>
		<param name="panel">The <see cref="System.Windows.Forms.StatusBarPanel"/> object to locate in the collection.</param>
		<returns>
			<para>The zero-based index where the panel is located within the collection; 
      otherwise, negative one (-1).</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf"/> method enables you to determine 
   where a panel is located within the collection. To determine whether an item is
   located within the collection before calling this method, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains"/>method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains"/>
	</doc><doc for="StatusBar.StatusBarPanelCollection.StatusBarPanelCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class.</para>
		</summary>
		<param name="owner"><para>The <see cref="System.Windows.Forms.StatusBar"/> control that contains this collection. </para></param>
		<remarks>
			<para>You cannot create an instance of this class without associating it with a 
   <see cref="System.Windows.Forms.StatusBar"/> control.</para>
		</remarks>
	</doc><doc for="Tool.rect"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Tool.text;"><nodoc/>
		<summary>
			<para>Gets or sets the ToolTip text.</para>
		</summary>
	</doc><doc for="StatusBar.ControlToolTip.ControlToolTip"><nodoc/>
		<summary>
		</summary>
		<param name="parent">Parent control. </param>
	</doc><doc for="StatusBar.ControlToolTip.SetTool">
		<nodoc/>
		<summary>
			<para>Sets the tool for the specified key. Keep in mind
      that as soon as setTool is called, the handle for
      the ControlToolTip is created, and the handle for
      the parent control is also created. If the parent
      handle is recreated in the future, all tools must
      be re-added. The old tool for the specified key
      will be removed. Passing null in for the
      tool parameter will result in the tool
      region being removed.</para>
		</summary>
		<param name="key">Unique key to identify the tool with. </param>
		<param name="tool">Tool to add to the tooltip. </param>
	</doc><doc for="StatusBar.ControlToolTip.GetTool"><nodoc/>
		<summary>
   Returns the tool associated with the specified key,
   or null if there is no area.
   </summary>
	</doc><doc for="StatusBar.OnPanelClick">
		<summary>
			<para> Raises the <see cref="System.Windows.Forms.StatusBar.OnPanelClick"/> event.
 </para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.StatusBarPanelClickEventArgs"/> that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
 information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.StatusBar.OnPanelClick"/> method also allows derived
 classes to handle the event without attaching a delegate. This is the preferred
 technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
 When overriding
<see cref="System.Windows.Forms.StatusBar.OnPanelClick"/> in a derived class, be sure to 
 call the base class's <see cref="System.Windows.Forms.StatusBar.OnPanelClick"/> method so that registered
 delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.PanelClick"/>
		<seealso cref="System.Windows.Forms.StatusBarPanelClickEventArgs"/>
	</doc><doc for="StatusBar.StatusBarPanelCollection.Add">
		<overload>
			<para>Adds a <see cref="System.Windows.Forms.StatusBarPanel"/> to the collection.</para>
		</overload>
		<summary>
			<para> Adds a <see cref="System.Windows.Forms.StatusBarPanel"/> with the specified text to the collection.
 </para>
		</summary>
		<param name="text">The text for the <see cref="System.Windows.Forms.StatusBarPanel"/> that is being added. </param>
		<returns>
			<para>A <see cref="System.Windows.Forms.StatusBarPanel"/> that represents the panel that was added
 to the collection.</para>
		</returns>
		<remarks>
			<para>You can add panels to a <see cref="System.Windows.Forms.StatusBar"/> control to display more than one type of 
 information. This version of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/>
 method creates a new <see cref="System.Windows.Forms.StatusBarPanel"/> object with the text
 specified in the <paramref name="text"/> parameter
 and adds it to collection. The order in which panels are located in the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> represents the order that panels are
 displayed within the <see cref="System.Windows.Forms.StatusBar"/> control. Panels are displayed
 from left to right starting with the first panel in the collection. The
<see cref="System.Windows.Forms.Control.RightToLeft"/> property of the <see cref="System.Windows.Forms.StatusBar"/> 
control does not change the order in which panels are displayed in the <see cref="System.Windows.Forms.StatusBar"/> . To insert a
panel at a
specific position in the collection, use the
<see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>method. To add a set of panels to
the collection in a single operation, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/>
method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>
	</doc><doc for="Tool">
		<nodoc/>
		<summary>
			<para>Represents a ToolTip object to use with StatusBarPanel objects.</para>
		</summary>
	</doc>
	<doc for="StatusBar.ControlToolTip.Dispose">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="StatusBar.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by
 the <see cref="System.Windows.Forms.StatusBar"/> .</para>
		</summary>
		<remarks>
			<para>This method is called by the public <see langword="Dispose()"/> method and the 
<see cref="System.Object.Finalize"/> 
method. <see langword="Dispose()"/> invokes the protected
<see langword="Dispose(Boolean)"/> method with the <paramref name="disposing"/> parameter 
set to <see langword="true"/>. <see cref="System.Object.Finalize"/> invokes <see langword="Dispose"/> with
<paramref name="disposing"/> set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is <see langword="true"/>, this method 
releases all resources held by any managed objects that this <see cref="System.Windows.Forms.StatusBar"/>
references. This method invokes the <see langword="Dispose()"/> method of each
referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called multiple times by other objects. When 
 overriding <see langword="Dispose(Boolean)"/>, be careful not to reference
 objects that have been previously disposed of in an earlier call to
<see langword="Dispose"/>. For more information about how to implement 
<see langword="Dispose(Boolean)"/>, see <see topic="cpconImplementingDisposeMethod"/>.
</note>
			<para>For more information about <see langword="Dispose"/> and <see cref="System.Object.Finalize"/>, see 
<see topic="cpconCleaningUpUnmanagedResources "/> and <see topic="cpconOverridingFinalizeMethod "/>.</para>
		</remarks>
	</doc>
	<doc for="StatusBar.PanelClick">
		<summary>
			<para> Occurs when a <see cref="System.Windows.Forms.StatusBarPanel"/> object on a <see cref="System.Windows.Forms.StatusBar"/> control is clicked.
 </para>
		</summary>
		<remarks>
			<para>You can use this event to perform tasks when a panel within a <see cref="System.Windows.Forms.StatusBar"/> control is
 clicked. The data provided to the event through the <see cref="System.Windows.Forms.StatusBarPanelClickEventArgs"/>
 object passed as a parameter to the event handler enables you to determine the
<see cref="System.Windows.Forms.StatusBarPanel"/> object that was clicked by the user 
 in order to perform tasks on the selected panel.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.OnPanelClick"/>
		<seealso cref="System.Windows.Forms.StatusBarPanelClickEventArgs"/>
		<seealso cref="System.Windows.Forms.StatusBarPanelClickEventHandler"/>
	</doc>
	<doc for="StatusBarPanelCollection.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBarPanelCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection.this">
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.StatusBarPanel"/> at the specified index.</para>
		</summary>
		<param name="index">The index of the panel in the collection to get or set.</param>
		<value>
			<para>A <see cref="System.Windows.Forms.StatusBarPanel"/> representing the panel located at the specified index within the
   collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count"/> property of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class.</exception>
		<exception cref="System.ArgumentNullException">The <see cref="System.Windows.Forms.StatusBarPanel"/> assigned to the collection was null.</exception>
		<remarks>
			<para>You can use this method to obtain the <see cref="System.Windows.Forms.StatusBarPanel"/>stored at a specific
   location within the collection. To determine the index of a specific panel within
   the collection, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection.AddRange">
		<summary>
			<para>Adds an array of <see cref="System.Windows.Forms.StatusBarPanel"/>
objects to the collection.</para>
		</summary>
		<param name="panels">An array of <see cref="System.Windows.Forms.StatusBarPanel"/> objects to add.</param>
		<exception cref="System.ArgumentNullException">The array of <see cref="System.Windows.Forms.StatusBarPanel"/> objects being added to the collection was null.</exception>
		<remarks>
			<para>You can add panels to a <see cref="System.Windows.Forms.StatusBar"/> control to display more than one type of
   information. The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/> method adds an
   array of <see cref="System.Windows.Forms.StatusBarPanel"/> objects specified in the <paramref name="panels
   "/>parameter to the
   collection. All existing panels in the collection are removed from the
   collection before inserting new panels. The order in which panels are located in
   the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> represents the order that panels are
   displayed within the <see cref="System.Windows.Forms.StatusBar"/> control. Panels are displayed
   from left to right starting with the first panel in the collection. The
<see cref="System.Windows.Forms.Control.RightToLeft"/> property of the <see cref="System.Windows.Forms.StatusBar"/> 
control does not change the order in which panels are displayed in the <see cref="System.Windows.Forms.StatusBar"/>
. To add a single <see cref="System.Windows.Forms.StatusBarPanel"/> object to the collection, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method.
To insert a panel at a specific position in the <see cref="System.Windows.Forms.StatusBar"/> control (and in this
collection), use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>method. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection.Insert">
		<summary>
			<para> Inserts the specified <see cref="System.Windows.Forms.StatusBarPanel"/> into the collection at the specified index.
   </para>
		</summary>
		<param name="index">The zero-based index location where the panel is inserted. </param>
		<param name="value">A <see cref="System.Windows.Forms.StatusBarPanel"/> representing the panel to insert. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="value"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException">The <paramref name="value"/> parameter's parent is not <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than the value of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count"/> property of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class. </exception>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The <see cref="System.Windows.Forms.StatusBarPanel.AutoSize"/> property of the <paramref name="value"/> parameter's panel is not a valid <see cref="System.Windows.Forms.StatusBarPanelAutoSize"/> value. </exception>
		<remarks>
			<para>You can add panels to a <see cref="System.Windows.Forms.StatusBar"/> control to display more than one type of
   information. The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>method enables you to create a new <see cref="System.Windows.Forms.StatusBarPanel"/> object and insert it at a specific
   location within the collection. The order in which panels are located in the
<see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> represents the order that panels 
   are displayed within the <see cref="System.Windows.Forms.StatusBar"/> control. Panels are displayed from left to
   right starting with the first panel in the collection. The <see cref="System.Windows.Forms.Control.RightToLeft"/> property of the <see cref="System.Windows.Forms.StatusBar"/>
   control does not change the order in which panels are displayed in the <see cref="System.Windows.Forms.StatusBar"/>.
   To add a panel to the end of the collection, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method. To add a set of panels
   to the collection in a single operation, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/>
   method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/>
	</doc>
	<doc for="StatusBarPanelCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBar.SizingGrip">
		<summary>
			<para> Gets or sets a value indicating whether a sizing 
      grip is displayed in the lower-right corner of
      the control.
      </para>
		</summary>
		<value>
			<para><see langword="true"/> if a sizing
   grip is displayed; otherwise,
<see langword="false"/>. The default is
<see langword="true"/>.
   </para>
		</value>
		<remarks>
			<para>You can use this property to display a sizing grip to
      provide an indication to the user when a form is resizable. If the <see cref="System.Windows.Forms.Form.FormBorderStyle"/> property of your <see cref="System.Windows.Forms.Form"/> is set to a
      border style that is not resizable, such as
   <see langword="FormBorderStyle.Fixed3D"/> or
   <see langword="FormBorderStyle.Dialog"/>, you should set the <see cref="System.Windows.Forms.StatusBar.SizingGrip"/> property to <see langword="false"/> to
      prevent the user from thinking that the form can be resized.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Form.FormBorderStyle" qualify="true"/>
		<seealso cref="System.Windows.Forms.FormBorderStyle"/>
	</doc>
	<doc for="StatusBar.ImeMode">
		<nodoc/>
		<summary>
			<para>Gets or sets the Input Method Editor (IME) mode supported by this control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ImeMode"/>
values.</para>
		</value>
	</doc><doc for="StatusBar.DefaultImeMode">
		<nodoc/>
		<summary>
			<para>Gets the default Input Method Editor (IME) mode supported by this control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ImeMode"/> values.</para>
		</value>
		<remarks>
			<para>As implemented in the <see cref="System.Windows.Forms.StatusBar"/> class, this property always returns the
<see cref="System.Windows.Forms.ImeMode.Disable" qualify="true"/> value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ImeMode"/>
	</doc>
	<doc for="StatusBar">
		<summary>
			<para> Represents a Windows status bar control.
      </para>
		</summary>
		<remarks>
			<para>Typically a <see cref="System.Windows.Forms.StatusBar"/> control consists of <see cref="System.Windows.Forms.StatusBarPanel"/> objects, each of which displays
   text and/or an icon. You can also provide owner-drawn panels to provide custom
   panels such as a progress bar or a series of images that displays the state
   of your application. A <see cref="System.Windows.Forms.StatusBar"/> control typically displays information
   about an object being viewed on a <see cref="System.Windows.Forms.Form"/>, the object's components, or contextual
   information that relates to that object's operation within your application.</para>
			<para>The <see cref="System.Windows.Forms.StatusBar"/> control provides properties that enable
you to customize the appearance of the control. If the <see cref="System.Windows.Forms.StatusBar"/>
is displayed on
a form that can be resized, you can use the <see cref="System.Windows.Forms.StatusBar.SizingGrip"/> property to display a sizing grip
in the lower-right corner of the form to indicate to users that the form can
be resized. The <see cref="System.Windows.Forms.StatusBar.ShowPanels"/> property enables you to display panels
within your <see cref="System.Windows.Forms.StatusBar"/> or to display only the value of the
<see cref="System.Windows.Forms.Control.Text"/> property of the control.</para>
			<para> The default <see cref="System.Windows.Forms.StatusBar"/> has no panels.
To add panels to a <see cref="System.Windows.Forms.StatusBar"/> you can use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class that is accessible through the
<see cref="System.Windows.Forms.StatusBar.Panels"/> property of the control. You can also use 
the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> object provided through the <see cref="System.Windows.Forms.StatusBar.Panels"/> property to remove panels from the control
and access a specific <see cref="System.Windows.Forms.StatusBarPanel"/> object to manipulate the panel.</para>
			<para>If you want to determine when a <see cref="System.Windows.Forms.StatusBarPanel"/>object within a
<see cref="System.Windows.Forms.StatusBar"/> control is clicked, you can create an 
event handler for the <see cref="System.Windows.Forms.StatusBar.PanelClick"/> event. To perform
owner-draw operations on a panel, you can create an event handler for the <see cref="System.Windows.Forms.StatusBar.DrawItem"/> event. The event data passed to the event
handler provides information on the panel to draw and a <see cref="System.Drawing.Graphics"/> object
to use to perform drawing tasks.</para>
			<para> When you create an instance of <see cref="System.Windows.Forms.StatusBar"/>, the read/write properties are set to
initial values. For a list of these values, see the <see cref="M:System.Windows.Forms.StatusBar.#ctor"/> constructor.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.StatusBar"/>
control on a form and adds two <see cref="System.Windows.Forms.StatusBarPanel"/> objects. One of the
<see cref="System.Windows.Forms.StatusBarPanel"/> objects, named <c>panel1</c>, 
displays status text for an
application. The second <see cref="System.Windows.Forms.StatusBarPanel"/> object, named <c>panel2</c>, displays the current
date and uses the <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/> property of the <see cref="System.Windows.Forms.StatusBarPanel"/> class to display the current time. The
example uses the <see cref="System.Windows.Forms.StatusBar.ShowPanels"/> property to ensure that the panels are displayed instead
of a standard panel, and it uses and the <see cref="System.Windows.Forms.StatusBar.Panels"/> property to access the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> to add the panels to the <see cref="System.Windows.Forms.StatusBar"/>.
The example also uses the <see cref="System.Windows.Forms.StatusBarPanel.AutoSize"/>, <see cref="System.Windows.Forms.StatusBarPanel.BorderStyle"/>, <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/>, and <see cref="System.Windows.Forms.StatusBarPanel.Text"/> properties to initialize
the <see cref="System.Windows.Forms.StatusBarPanel"/> objects. This example assumes that the
method defined in the example is defined and called from the constructor of
a <see cref="System.Windows.Forms.Form"/>. </para>
			<codelink SampleID="StatusBar and StatusBarPanel Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
		<seealso cref="System.Drawing.Graphics"/>
	</doc>
	<doc for="StatusBar.Panels">
		<summary>
			<para> Gets the collection of <see cref="System.Windows.Forms.StatusBar"/>
panels contained within the
control.</para>
		</summary>
		<value>
			<para> A <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> containing the <see cref="System.Windows.Forms.StatusBarPanel"/> objects of the <see cref="System.Windows.Forms.StatusBar"/> control.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.StatusBar"/> control
   can display a number of panels to provide information to the user
   of your application. For example, a panel could display the current time or the progress
   of a file download. Each panel displayed by the <see cref="System.Windows.Forms.StatusBar"/>
   control is an instance of the <see cref="System.Windows.Forms.StatusBarPanel"/> class. The <see cref="System.Windows.Forms.StatusBar.Panels"/>property enables you to obtain a reference to the collection of
<see cref="System.Windows.Forms.StatusBarPanel"/> 
objects
that are currently stored in the <see cref="System.Windows.Forms.StatusBar"/> control. With this
reference, you can add panels, remove panels, access a specific panel within the
collection, and obtain a count of the panels in the <see cref="System.Windows.Forms.StatusBar"/>
control. For more information on the tasks that can be performed with the panel
collection, see the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class reference
topics.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.StatusBar"/>
control on a form and adds two <see cref="System.Windows.Forms.StatusBarPanel"/> objects. One of the
<see cref="System.Windows.Forms.StatusBarPanel"/> objects, named <c>panel1</c>, displays status text for an 
application. The second <see cref="System.Windows.Forms.StatusBarPanel"/> object, named <c>panel2</c>, displays the current
date and uses the <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/> property of the <see cref="System.Windows.Forms.StatusBarPanel"/> class to display the current time. The
example uses the <see cref="System.Windows.Forms.StatusBar.ShowPanels"/> property to ensure that the panels are displayed instead
of a standard panel, and it uses and the <see cref="System.Windows.Forms.StatusBar.Panels"/> property to access the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> to add the panels to the <see cref="System.Windows.Forms.StatusBar"/>.
The example also uses the <see cref="System.Windows.Forms.StatusBarPanel.AutoSize"/>, <see cref="System.Windows.Forms.StatusBarPanel.BorderStyle"/>, <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/>, and <see cref="System.Windows.Forms.StatusBarPanel.Text"/> properties to initialize
the <see cref="System.Windows.Forms.StatusBarPanel"/> objects. This example assumes that the
method defined in the example is defined and called from the constructor of
a <see cref="System.Windows.Forms.Form"/>. </para>
			<codelink SampleID="StatusBar and StatusBarPanel Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
	</doc>
	<doc for="StatusBar.ShowPanels">
		<summary>
			<para> Gets or sets a value indicating whether any panels that
      have been added to the control are displayed.
      </para>
		</summary>
		<value>
			<para><see langword="true"/> if panels are displayed;
   otherwise, <see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>By default, the <see cref="System.Windows.Forms.StatusBar"/> control displays the value of its <see cref="System.Windows.Forms.Control.Text"/> property without any panels. When
   ShowPanels is set to <see langword="true"/>, any <see cref="System.Windows.Forms.StatusBarPanel"/> objects specified in the <see cref="System.Windows.Forms.StatusBar"/> control are
   displayed. No panels are initially created when you create an instance of
   the <see cref="System.Windows.Forms.StatusBar"/>
   class. You can add panels to a <see cref="System.Windows.Forms.StatusBar"/> control by using the
<see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class. This collection class can 
   be accessed through the <see cref="System.Windows.Forms.StatusBar.Panels"/> property of <see cref="System.Windows.Forms.StatusBar"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.StatusBar"/>
control on a form and adds two <see cref="System.Windows.Forms.StatusBarPanel"/> objects. One of the
<see cref="System.Windows.Forms.StatusBarPanel"/> objects, named <c>panel1</c>, displays status text for an 
application. The second <see cref="System.Windows.Forms.StatusBarPanel"/> object, named <c>panel2</c>, displays the current
date and uses the <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/> property of the <see cref="System.Windows.Forms.StatusBarPanel"/> class to display the current time. The
example uses the <see cref="System.Windows.Forms.StatusBar.ShowPanels"/> property to ensure that the panels are displayed instead
of a standard panel, and it uses and the <see cref="System.Windows.Forms.StatusBar.Panels"/> property to access the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> to add the panels to the <see cref="System.Windows.Forms.StatusBar"/>.
The example also uses the <see cref="System.Windows.Forms.StatusBarPanel.AutoSize"/>, <see cref="System.Windows.Forms.StatusBarPanel.BorderStyle"/>, <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/>, and <see cref="System.Windows.Forms.StatusBarPanel.Text"/> properties to initialize
the <see cref="System.Windows.Forms.StatusBarPanel"/> objects. This example assumes that the
method defined in the example is defined and called from the constructor of
a <see cref="System.Windows.Forms.Form"/>. </para>
			<codelink SampleID="StatusBar and StatusBarPanel Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection">
		<summary>
			<para>Represents the collection of panels in a <see cref="System.Windows.Forms.StatusBar"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class stores the panels
   displayed in the <see cref="System.Windows.Forms.StatusBar"/>. Each object in the collection is an
   instance of the StatusBarPanel class which defines the display characteristics
   and behaviors of a panel displayed in a <see cref="System.Windows.Forms.StatusBar"/>.</para>
			<para>There are a number of ways to add panels to the collection. The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method provides the ability to
add a single panel to the collection. To add a number of panels to the
collection, you create an array of <see cref="System.Windows.Forms.StatusBarPanel"/> objects and assign it to
the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/> method. If you want to insert a
panel at a specific location within the collection, you can use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/> method. To remove panels, you
can use either the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove"/> method or the
<see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt"/> method if you know where the 
panel is located within the collection. The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear"/> method enables you to remove all
panels from the collection instead of using the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove"/> method to remove a single panel
at a time.</para>
			<para>In addition to methods and properties for adding and removing panels, the
<see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> also provides methods to find panels 
   within the collection. The <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains"/> method enables you to determine
   whether a panel is a member of the collection. Once you know that the panel is
   located within the collection, you can use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf"/> method to determine where the
   panel is located within the collection. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.StatusBar"/>
control on a form and adds two <see cref="System.Windows.Forms.StatusBarPanel"/> objects. One of the
<see cref="System.Windows.Forms.StatusBarPanel"/> objects, named <c>panel1</c>, displays status text for an 
application. The second <see cref="System.Windows.Forms.StatusBarPanel"/> object, named <c>panel2</c>, displays the current
date and uses the <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/> property of the <see cref="System.Windows.Forms.StatusBarPanel"/> class to display the current time. The
example uses the <see cref="System.Windows.Forms.StatusBar.ShowPanels"/> property to ensure that the panels are displayed instead
of a standard panel, and it uses and the <see cref="System.Windows.Forms.StatusBar.Panels"/> property to access the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> to add the panels to the <see cref="System.Windows.Forms.StatusBar"/>.
The example also uses the <see cref="System.Windows.Forms.StatusBarPanel.AutoSize"/>, <see cref="System.Windows.Forms.StatusBarPanel.BorderStyle"/>, <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/>, and <see cref="System.Windows.Forms.StatusBarPanel.Text"/> properties to initialize
the <see cref="System.Windows.Forms.StatusBarPanel"/> objects. This example assumes that the
method defined in the example is defined and called from the constructor of
a <see cref="System.Windows.Forms.Form"/>. </para>
			<codelink SampleID="StatusBar and StatusBarPanel Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection.Add1">
		<summary>
			<para> Adds a <see cref="System.Windows.Forms.StatusBarPanel"/> to the collection.
   </para>
		</summary>
		<param name="value">A <see cref="System.Windows.Forms.StatusBarPanel"/> that represents the panel to add to the collection. </param>
		<returns>
			<para>The zero-based index of the item in the collection.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <see cref="System.Windows.Forms.StatusBarPanel"/> being added to the collection was null.</exception>
		<exception cref="System.ArgumentException">The parent of the <see cref="System.Windows.Forms.StatusBarPanel"/> specified in the <paramref name="value"/> parameter is not null.</exception>
		<remarks>
			<para>You can add panels to a <see cref="System.Windows.Forms.StatusBar"/> control to display more
   than one type of information. This version of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method adds
   the <see cref="System.Windows.Forms.StatusBarPanel"/> object specified in the <paramref name="value"/> parameter to the collection.
   The order in which panels are located in the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> represents the order that panels are
   displayed within the <see cref="System.Windows.Forms.StatusBar"/> control. Panels are displayed
   from left to right starting with the first panel in the collection. The
<see cref="System.Windows.Forms.Control.RightToLeft"/> property of the <see cref="System.Windows.Forms.StatusBar"/> 
control does not change the order in which panels are displayed in the <see cref="System.Windows.Forms.StatusBar"/>.
To insert a panel at a
specific
position in the collection, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>method.
To add a set of panels to the collection in a single operation, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/> method.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.StatusBar"/>
control on a form and adds two <see cref="System.Windows.Forms.StatusBarPanel"/> objects. One of the
<see cref="System.Windows.Forms.StatusBarPanel"/> objects, named <c>panel1</c>, displays status text for an 
application. The second <see cref="System.Windows.Forms.StatusBarPanel"/> object, named <c>panel2</c>, displays the current
date and uses the <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/> property of the <see cref="System.Windows.Forms.StatusBarPanel"/> class to display the current time. The
example uses the <see cref="System.Windows.Forms.StatusBar.ShowPanels"/> property to ensure that the panels are displayed instead
of a standard panel, and it uses and the <see cref="System.Windows.Forms.StatusBar.Panels"/> property to access the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add"/> method of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> to add the panels to the <see cref="System.Windows.Forms.StatusBar"/>.
The example also uses the <see cref="System.Windows.Forms.StatusBarPanel.AutoSize"/>, <see cref="System.Windows.Forms.StatusBarPanel.BorderStyle"/>, <see cref="System.Windows.Forms.StatusBarPanel.ToolTipText"/>, and <see cref="System.Windows.Forms.StatusBarPanel.Text"/> properties to initialize
the <see cref="System.Windows.Forms.StatusBarPanel"/> objects. This example assumes that the
method defined in the example is defined and called from the constructor of
a <see cref="System.Windows.Forms.Form"/>. </para>
			<codelink SampleID="StatusBar and StatusBarPanel Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBarPanel"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert"/>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection.Remove">
		<summary>
			<para> Removes the specified <see cref="System.Windows.Forms.StatusBarPanel"/> from the collection.
   </para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.StatusBarPanel"/> representing the panel to remove from the collection. </param>
		<exception cref="System.ArgumentNullException">The <see cref="System.Windows.Forms.StatusBarPanel"/> assigned to the <paramref name="value"/> parameter is null.</exception>
		<remarks>
			<para>When you remove a panel from the list, the indexes change for subsequent
      items in the collection. All information about the removed panel is deleted. You
      can use this method to remove a specific panel from the <see cref="System.Windows.Forms.StatusBar"/>
      by specifying the actual <see cref="System.Windows.Forms.StatusBarPanel"/> to remove from the collection. To specify
      the index of the panel to remove instead of the panel itself, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt"/> method. To remove all panels
      from the collection, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear"/>
	</doc>
	<doc for="StatusBar.StatusBarPanelCollection.RemoveAt">
		<summary>
			<para> Removes the <see cref="System.Windows.Forms.StatusBarPanel"/> located at the specified index within the collection.
   </para>
		</summary>
		<param name="index">The zero-based index of the item to remove. </param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count"/> property of the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection"/> class.</exception>
		<remarks>
			<para>When you remove a panel from the collection, the indexes change for
      subsequent panels in the collection. All information about the removed panel is
      deleted. You can use this method to remove a specific panel from the list by
      specifying the index of the panel to remove from the collection. To specify the
      panel to remove instead of the index to the panel, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove"/> method. To remove all panels
      from the <see cref="System.Windows.Forms.StatusBar"/> control, use the <see cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove"/>
		<seealso cref="System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear"/>
	</doc>
	<doc for="StatusBar.OnPaint">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBar.BackColorChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBar.BackgroundImageChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DateTimePicker.StatusBar">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBar.ImeModeChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="StatusBar.OnDrawItem">
		<summary>
			<para> Raises the <see cref="System.Windows.Forms.StatusBar.OnDrawItem"/>
event.</para>
		</summary>
		<param name="sbdievent">A <see cref="System.Windows.Forms.StatusBarDrawItemEventArgs"/> that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.StatusBar.OnDrawItem"/> method also allows derived
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.StatusBar.OnDrawItem"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.StatusBar.OnDrawItem"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to create an 
      owner-drawn <see cref="System.Windows.Forms.StatusBarPanel"/> that displays a custom background and the
      current date. This example assumes that you have connected the <see cref="System.Windows.Forms.StatusBar.DrawItem"/> event of a <see cref="System.Windows.Forms.StatusBar"/>
      control to the event handler defined in the example.</para>
			<codelink SampleID="StatusBar.DrawItem" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBar.DrawItem"/>
		<seealso cref="System.Windows.Forms.StatusBarDrawItemEventArgs"/>
	</doc>
	<doc for="StatusBar.DrawItem">
		<summary>
			<para> Occurs when a visual aspect of an owner-drawn status bar
      control changes.
      </para>
		</summary>
		<remarks>
			<para>You can use this event to perform drawing operations in an owner-drawn
   <see cref="System.Windows.Forms.StatusBar"/> control. For example, if you display an
      owner-drawn <see cref="System.Windows.Forms.StatusBarPanel"/> that displays a progress bar, you
      can use this event to perform the drawing of the progress bar on the panel. The
      data provided to the event through the <see cref="System.Windows.Forms.StatusBarDrawItemEventArgs"/> object passed as a parameter to the event
      handler enables you to determine the panel that needs to be drawn and the
   <see cref="System.Drawing.Graphics"/> to use to
      draw to the panel. This event is only raised when the <see cref="System.Windows.Forms.StatusBarPanel.Style" qualify="true"/> property of a <see cref="System.Windows.Forms.StatusBarPanel"/> in a <see cref="System.Windows.Forms.StatusBar"/>
      control is set to <see cref="System.Windows.Forms.StatusBarPanelStyle.OwnerDraw"/>
      .</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create an owner-drawn <see cref="System.Windows.Forms.StatusBarPanel"/> that displays a custom background and the current date. This example assumes that you have connected the <see cref="System.Windows.Forms.StatusBar.DrawItem"/> event of a <see cref="System.Windows.Forms.StatusBar"/> control to the event handler defined in the example.</para>
			<codelink SampleID="StatusBar.DrawItem" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.StatusBar.OnDrawItem"/>
		<seealso cref="System.Windows.Forms.StatusBarDrawItemEventArgs"/>
		<seealso cref="System.Windows.Forms.StatusBarDrawItemEventHandler"/>
	</doc>
</docs>
