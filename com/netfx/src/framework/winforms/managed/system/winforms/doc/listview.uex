<docs>
	<doc for="ListView.Dispose">
		<nodoc/>
		<summary>
			<para> Disposes of the component.</para>
		</summary>
		<remarks>
			<para>Call dispose when the component is no longer needed. This method removes the
      component from its container (if the component has a site) and triggers the
      dispose event.</para>
		</remarks>
	</doc><doc for="ListView.OnEnabledChanged"><nodoc/>
		<summary>
			<para>Raises the EnabledChanged event.</para>
		</summary>
		<param name="e">The EventArgs that contains the event data.</param>
	</doc><doc for="ListView.OnFontChanged"><nodoc/>
		<summary>
			<para>Raises the FontChanged event.</para>
		</summary>
		<param name="e">The EventArgs that contains the event data.</param>
	</doc><doc for="ListView.BackColor"><nodoc/>
		<summary>
			<para> Gets or sets the background color.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Color"/> of the background.</para>
		</value>
	</doc>
	<doc for="ListView.DefaultSize"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListView.ForeColor"><nodoc/>
		<summary>
			<para>Gets or sets the foreground color.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Color"/> that is the foreground color.</para>
		</value>
	</doc>
	<doc for="ListView.IsInputKey">
		<nodoc/>
		<summary>
			<para>Handles special input keys, such as pgup, pgdown, home, end, and so on.</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.Clear">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.IList.RemoveAt">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedIndexCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.Clear">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckedListViewItemCollection.IList.RemoveAt">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.Clear">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedIndexCollection.IList.RemoveAt">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.RemoveAt">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SelectedListViewItemCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ColumnHeaderCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListViewItemCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListView.OnSystemColorsChanged"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListView.OnItemActivate">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.ListView.ItemActivate"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnItemActivate"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnItemActivate"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnItemActivate"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ItemActivate"/>
		<seealso cref="System.EventArgs"/>
	</doc><doc for="ListView.OnItemDrag">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.ListView.ItemDrag"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.Windows.Forms.ItemDragEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnItemDrag"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnItemDrag"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnItemDrag"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ItemDrag"/>
		<seealso cref="System.Windows.Forms.ItemDragEventArgs"/>
	</doc><doc for="ListView.OnSelectedIndexChanged">
		<summary>
			<para> Raises the <see cref="System.Windows.Forms.ListView.SelectedIndexChanged"/>

event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/>that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnSelectedIndexChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnSelectedIndexChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnSelectedIndexChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndexChanged"/>
		<seealso cref="System.EventArgs"/>
	</doc><doc for="ListView.CheckedIndices">
		<summary>
			<para> Gets the indexes of the currently checked items in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> that 
   contains the indexes of the currently checked items. If no items are currently
   checked, an empty <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>
   is returned.</para>
		</value>
		<remarks>
			<para>This property is only useful when the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property of the <see cref="System.Windows.Forms.ListView"/>
control is set to <see langword="true"/>. The <see cref="System.Windows.Forms.ListView.CheckedIndices"/>property returns a collection containing the index positions in
the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of all items that are checked in the
control. For more information on how to manipulate the items in the
collection, see <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> .</para>
			<para>If you want to obtain a collection of the items that are checked in the
<see cref="System.Windows.Forms.ListView"/> control, instead of the 
   index positions of the items that are checked, use the <see cref="System.Windows.Forms.ListView.CheckedItems"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>
		<seealso cref="System.Windows.Forms.ListView.CheckedItems"/>
	</doc><doc for="ListView.OnBeforeLabelEdit">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.ListView.BeforeLabelEdit"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.LabelEditEventArgs"/> that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnBeforeLabelEdit"/> method also allows derived
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnBeforeLabelEdit"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnBeforeLabelEdit"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.BeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.LabelEditEventArgs"/>
	</doc><doc for="ListView.Clear">
		<summary>
			<para>Removes all items and columns from the control.</para>
		</summary>
		<remarks>
			<para>You can use this method to remove all items and columns 
      from the <see cref="System.Windows.Forms.ListView"/>
      control without having to call the individual <see langword="Clear "/>methods from
      the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> and <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/>
      classes.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Clear" qualify="true"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Clear" qualify="true"/>
	</doc><doc for="ListView.GetItemRect">
		<overload>
			<para>Retrieves the bounding rectangle for an item within the control.</para>
		</overload>
		<summary>
			<para>Retrieves the bounding rectangle for a specific item within the list view control.</para>
		</summary>
		<param name="index">The zero-based index of the item within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/>whose bounding rectangle you want to return. </param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that
   represents the bounding rectangle of the specified <see cref="System.Windows.Forms.ListViewItem"/>. </para>
		</returns>
		<remarks>
			<para>The bounding rectangle returned by this version of the <see cref="System.Windows.Forms.ListView.GetItemRect"/>
method represents the entire item, including the icon, item text, and
subitem text. To specify a specific portion of the item's bounding rectangle,
use the other version of the <see cref="System.Windows.Forms.ListView.GetItemRect"/>
method.</para>
		</remarks>
		<seealso cref="System.Drawing.Rectangle"/>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc><doc for="ListView.OnItemCheck">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.ListView.ItemCheck"/>
event.</para>
		</summary>
		<param name="ice">An <see cref="System.Windows.Forms.ItemCheckEventArgs"/> that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnItemCheck"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnItemCheck"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnItemCheck"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ItemCheck"/>
		<seealso cref="System.Windows.Forms.ItemCheckEventArgs"/>
	</doc><doc for="ListView.CheckedIndexCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para>The number of items in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of 
      checked items in the <see cref="System.Windows.Forms.ListView"/>. You can then use this value when looping
      through the values of the collection and you need to provide a number of
      iterations to perform the loop.</para>
		</remarks>
	</doc><doc for="CheckedListViewItemCollection.ICollection.IsSynchronized">
		<internalonly/>
		<summary>
		</summary>
	</doc><doc for="CheckedListViewItemCollection.CopyTo">
		<summary>
			<para>Copies the entire collection into an existing array at a specified location within the array.</para>
		</summary>
		<param name="dest">An <see cref="System.Array"/> representing the array to copy the contents of the collection to.</param>
		<param name="index">The location within the destination array to copy the items from the collection to.</param>
		<remarks>
			<para>You can use this method to combine the checked items 
      from multiple collections into a single array.</para>
		</remarks>
	</doc><doc for="ListView.CheckedListViewItemCollection.GetEnumerator">
		<summary>
   Returns an enumerator that can be used to iterate
   through the checked item collection.
</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> object that represents the checked item collection.</para>
		</returns>
	</doc><doc for="ListView.CheckedListViewItemCollection.IndexOf">
		<summary>
			<para>Returns the index within the collection of the specified item.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to locate in the collection.</param>
		<returns>
			<para>The zero-based index of the item in the collection; 
      otherwise, -1.</para>
		</returns>
		<remarks>
			<para>Once you know that an item is located within the collection (using the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains"/> method), you can use the 
<see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf"/> method to determine where 
   a specific item within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> for the <see cref="System.Windows.Forms.ListView"/> is stored within the
<see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains"/>
	</doc><doc for="ListView.SelectedListViewItemCollection.CopyTo">
		<summary>
			<para>Copies the entire collection into an existing array at a
      specified location within the array.</para>
		</summary>
		<param name="dest">An <see cref="System.Array"/> representing the array to copy the contents of the collection to.</param>
		<param name="index">The location within the destination array to copy the items from the collection to.</param>
		<remarks>
			<para>You can use this method to combine the selected items from multiple
      collections into a single array.</para>
		</remarks>
	</doc><doc for="ListView.ListViewItemCollection.IsReadOnly">
		<summary>
			<para> Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the collection is read-only;
   otherwise, <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>This property is always <see langword="false "/>for this
   collection. </para>
		</remarks>
	</doc><doc for="ListView.ListViewItemCollection.CopyTo">
		<summary>
			<para>Copies the entire collection into an existing array at a
      specified location within the array.</para>
		</summary>
		<param name="dest">An <see cref="System.Array"/> representing the array to copy the contents of the collection to.</param>
		<param name="index">The location within the destination array to copy the items from the collection to.</param>
		<remarks>
			<para>You can use this method to combine the selected items from multiple
      collections into a single array.</para>
		</remarks>
	</doc><doc for="ListView.ListViewItemCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para>The number of items in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of
      items in the <see cref="System.Windows.Forms.ListView"/>. You can
      then use this value when you are looping through the values of the collection
      and you need to provide a number of iterations to perform the loop. </para>
		</remarks>
	</doc><doc for="ListView.ColumnHeaderCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para>The number of items in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of columns that are 
      displayed in the <see cref="System.Windows.Forms.ListView"/> when the <see cref="System.Windows.Forms.ListView.View"/> property is set
      to <see langword="View.Details"/>. You can then use this value when you
      are looping through the values of the collection and you need to provide a
      number of iterations to perform the loop. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.View"/>
	</doc><doc for="ListView.ColumnHeaderCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the collection is read-only; otherwise, 
<see langword="false"/> .</para>
		</value>
		<remarks>
			<para>This property is always <see langword="false "/>for this collection.</para>
		</remarks>
	</doc><doc for="ListView.ColumnHeaderCollection.Clear">
		<summary>
			<para>Removes all column headers from the collection.</para>
		</summary>
		<remarks>
			<para>When you remove column headers from the collection, all 
      information about the deleted column headers is lost. To remove a single column
      header from the collection use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Remove"/> or <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt"/>method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Remove"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt"/>
	</doc><doc for="ListView.ListView">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView"/> class.</para>
		</summary>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
	</doc><doc for="ListView">
		<summary>
			<para>Represents a Windows list view control, which displays a collection of
      items that can be displayed using one of four different views.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView"/>
control allows you to display a list
of items with item text and, optionally, an icon to identify the type
of item. For example, the Windows Explorer list of files is similar in appearance to a <see cref="System.Windows.Forms.ListView"/>
control. It displays a list of the files and folders currently selected in the
tree. Each file and folder displays an icon associated with it to help identify
the type of file or folder. The <see cref="System.Windows.Forms.ListViewItem"/> class represents an item
within a <see cref="System.Windows.Forms.ListView"/> control. The
items that are displayed in the list can be shown in one of four different views.
Items can be displayed as large icons, as small icons, or as small icons in a vertical
list. Items can also have subitems which contain information that is related
to the parent item. The fourth view style, details view, allows you to display
the item and its subitems in a grid with column headers that identify the information
being displayed in a subitem. <see cref="System.Windows.Forms.ListView"/> supports
single or multiple selection. The multiple selection feature lets the user select from a list of items in a
way similar to a <see cref="System.Windows.Forms.ListBox"/> control. Additionally, the user can
activate selected items to perform a task. For example, you could use a
<see cref="System.Windows.Forms.ListView"/> control to display a list of 
files that the application can then open and utilize. The user can select the files
to open and then double-click them to activate the items and open the files in the
application. The <see cref="System.Windows.Forms.ListView"/> can also display check boxes, using the
<see cref="System.Windows.Forms.ListView.CheckBoxes"/> property, to 
allow the user to check the items that they want to perform an action
on. You can use the <see cref="System.Windows.Forms.ListView"/> control in a variety of
ways. The control can be used to display information from an application, a database, or a
text file. The <see cref="System.Windows.Forms.ListView"/>
can also be
used to obtain information from the user, such as selecting a set of files to
process. </para>
			<para><see cref="System.Windows.Forms.ListView"/> 
provides a large number of properties that provide flexibility in appearance and
behavior. The <see cref="System.Windows.Forms.ListView.View"/> property allows you to change the way in
which items are displayed. The <see cref="System.Windows.Forms.ListView.LargeImageList"/>, <see cref="System.Windows.Forms.ListView.SmallImageList"/>, and <see cref="System.Windows.Forms.ListView.StateImageList"/> properties allow you to specify
the <see cref="System.Windows.Forms.ImageList"/> objects that contain the images displayed
for items and, in the case of the <see cref="System.Windows.Forms.ListView.StateImageList"/>, the check boxes that are
displayed when the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property is set to <see langword="true"/>.
To determine which items are checked, you can use the <see cref="System.Windows.Forms.ListView.CheckedItems"/>
property to access the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> collection. The <see cref="System.Windows.Forms.ListView.Columns"/> property allows access to the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/>,
which stores the column headers that are
displayed when the <see cref="System.Windows.Forms.ListView.View"/> property of the control is set to
<see langword="View.Details"/>. Items are added and removed from the 
<see cref="System.Windows.Forms.ListView"/> through the <see cref="System.Windows.Forms.ListView.Items"/> property. The <see cref="System.Windows.Forms.ListView.Items"/> property allows you to access the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the control, which provides 
methods for manipulating the items in the control. If you want to allow the user
to edit the text of an item, you can use the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property. When your control contains a
large number of items, it is often easier for the user to see them in a sorted
list. You can use the <see cref="System.Windows.Forms.ListView.Sorting"/>
property to sort the items
alphabetically. </para>
			<para>Many of the properties of the <see cref="System.Windows.Forms.ListView"/>
control are used when the <see cref="System.Windows.Forms.ListView.View"/> property of the control is set to
<see langword="View.Details"/>. The <see cref="System.Windows.Forms.ListView.AllowColumnReorder"/> property allows the user of your 
<see cref="System.Windows.Forms.ListView"/> control to reconfigure the order of 
columns at run time. The <see cref="System.Windows.Forms.ListView.FullRowSelect"/> property allows an item and its subitems
to be selected instead of just the item. To display grid lines in the
details view to identify the boundaries of items and subitems in the <see cref="System.Windows.Forms.ListView"/>,
you can use the <see cref="System.Windows.Forms.ListView.GridLines"/> property. The <see cref="System.Windows.Forms.ListView.HeaderStyle"/>
property allows you to specify the type of column headers to
display. </para>
			<para>In addition to the many properties that are available for
   a <see cref="System.Windows.Forms.ListView"/> control, there are methods and events that
   your application can use to provide additional capabilities to the <see cref="System.Windows.Forms.ListView"/>.
   The <see cref="System.Windows.Forms.ListView.BeginUpdate"/> and <see cref="System.Windows.Forms.ListView.EndUpdate"/> methods allow you to add many items to a
<see cref="System.Windows.Forms.ListView"/> without displaying the repainting of 
   the control each time an item is added, improving performance. If your <see cref="System.Windows.Forms.ListView"/>
   control is displaying items and subitems, you may want
   to provide functionality when the user right-clicks a subitem. To determine the item whose
   subitem is being clicked, you can use the <see cref="System.Windows.Forms.ListView.GetItemAt"/>
   method. When performing validation of the items after the user has edited them,
   you may want to display a specific item to the user to change. The <see cref="System.Windows.Forms.ListView.EnsureVisible"/>
   
   method
   can be called to ensure that the specific item is in the visible area of the
   control. </para>
			<para>If the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property set to
<see langword="true"/>, you can perform tasks such as validating the text 
being edited before and after the text changed by creating an event handler
for the <see cref="System.Windows.Forms.ListView.BeforeLabelEdit"/> and <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/>
events. To perform tasks such as opening a file
or displaying a dialog box to edit an item displayed in a <see cref="System.Windows.Forms.ListView"/>,
you can create an event handler for the <see cref="System.Windows.Forms.ListView.ItemActivate"/> event. If you allow the user to sort the
items in a <see cref="System.Windows.Forms.ListView"/> when they click a column header, you
can create an event handler for the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event to perform the
sorting. When the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property is set to <see langword="true"/>,
you can determine when a change in an item's check state has occurred by handling
the <see cref="System.Windows.Forms.ListView.ItemCheck"/>
event. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/>
control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The
example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details
view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code
example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/>
objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the
following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and
call the method created in the example from the constructor
or another method on the form. The example also assumes that images named
<c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in 
the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
		<seealso cref="System.Windows.Forms.ImageList"/>
	</doc>
	<doc for="ListView.Alignment">
		<summary>
			<para> Gets or sets the alignment of items
      in the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ListViewAlignment"/> values. The default is
<see langword="ListViewAlignment.Top"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is not one of the <see cref="System.Windows.Forms.ListViewAlignment"/> values.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.Alignment"/> property only affects alignment when
   the <see cref="System.Windows.Forms.ListView.View"/>
   property is set to <see langword="View.LargeIcon"/> or
<see langword="View.SmallIcon"/>.</para>
			<note type="note">
   This property has no effect with
   the <see cref="System.Windows.Forms.ListView.View"/> property is set
   to <see langword="View.List"/>.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewAlignment"/>
	</doc>
	<doc for="ListView.AllowColumnReorder">
		<summary>
			<para> Gets or sets a value indicating whether
      the user can drag column headers to reorder columns in the control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if
   drag-and-drop column reordering is allowed; otherwise, <see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>Setting the value of the <see cref="System.Windows.Forms.ListView.AllowColumnReorder"/> property has no effect unless the <see cref="System.Windows.Forms.ListView.View"/> property is set to <see cref="System.Windows.Forms.View.Details"/> . You
   can use this property to allow users to reposition columns in the control at run
   time. When the <see cref="System.Windows.Forms.ListView.AllowColumnReorder"/> property is set to
<see langword="true"/> , users can position the columns in the control to 
   display the item and its subitems in a way that meets their needs within your
   application.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.View"/>
		<seealso cref="System.Windows.Forms.View"/>
	</doc>
	<doc for="ListView.AutoArrange">
		<summary>
			<para> Gets or sets whether icons are automatically kept arranged.</para>
		</summary>
		<value>
			<para><see langword="true"/> if icons are automatically kept arranged and snapped to
   the grid; otherwise, <see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.AutoArrange"/> property only arranges
   items in the <see cref="System.Windows.Forms.ListView"/> control when the <see cref="System.Windows.Forms.ListView.View"/>
   property is set to <see langword="View.LargeIcon"/> or
<see langword="View.SmallIcon"/> . To change the alignment of items 
   in the <see cref="System.Windows.Forms.ListView"/> control, use the <see cref="System.Windows.Forms.ListView.Alignment"/>
   property. You can use <see cref="System.Windows.Forms.ListView.AutoArrange"/> to
   ensure that all items in your <see cref="System.Windows.Forms.ListView"/> control
   are automatically arranged to avoid overlapping
   at run time.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.Alignment"/>
	</doc>
	<doc for="ListView.BorderStyle">
		<summary>
			<para>Gets or sets the border style of the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BorderStyle"/> values. The default is
<see langword="BorderStyle.Fixed3D"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is not one of the <see cref="System.Windows.Forms.BorderStyle"/> values.</exception>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.ListView.BorderStyle"/> property to change the border style of the
<see cref="System.Windows.Forms.ListView"/> control to match the border 
   style settings of other controls on the form. For example, if none of the other controls on
   your form displays a border, you can set the <see cref="System.Windows.Forms.ListView.BorderStyle"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control to <see langword="BorderStyle.None"/> to match the other controls.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.BorderStyle"/>
	</doc>
	<doc for="ListView.CheckBoxes">
		<summary>
			<para> Gets or sets a value indicating whether a check box appears next to each item in the control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if a check box
   appears next to each item in the <see cref="System.Windows.Forms.ListView"/> control;
   otherwise, <see langword="false"/>. The default is
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property allows you to display
   a check box next to each item in the list. This enables your
   application to display a list of items (and subitems if the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.Details"/> ) that the user can select by clicking the check 
   box. The <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property offers a way to
   select multiple items in the <see cref="System.Windows.Forms.ListView"/>
   control without using the CTRL key. Depending on your
   application, using check boxes to select items rather than the
   standard multiple selection method may be easier for the user. Even if the
<see cref="System.Windows.Forms.ListView.MultiSelect"/> property of the <see cref="System.Windows.Forms.ListView"/> control is set to false, you can still display checkboxes and provide
   multiple selection capabilities to the user. This feature can be useful if you do not want
   multiple items to be selected yet still want to allow the user to choose
   multiple items from the list to perform an operation within your
   application. </para>
			<para> To determine when an item has been checked,
   create an event handler for the <see cref="System.Windows.Forms.ListView.ItemCheck"/> event. To get all the items that
   are checked in the <see cref="System.Windows.Forms.ListView"/>
   , use the <see cref="System.Windows.Forms.ListView.CheckedItems"/> property to access the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> for the control. To get the indexes
   of all items that are checked in the <see cref="System.Windows.Forms.ListView"/>, use the <see cref="System.Windows.Forms.ListView.CheckedIndices"/>
   property.</para>
			<para>If an <see cref="System.Windows.Forms.ImageList"/>is specified in the <see cref="System.Windows.Forms.ListView.StateImageList"/> property, the images at index
positions 0 and 1 in the <see cref="System.Windows.Forms.ImageList"/> are
displayed instead of the check box. The image at
index position 0 is displayed instead of the unchecked check box, and the image
at index position 1 is displayed instead of the checked check box.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.StateImageList"/>
		<seealso cref="System.Windows.Forms.ListView.View"/>
		<seealso cref="System.Windows.Forms.ListView.MultiSelect"/>
	</doc>
	<doc for="ListView.CheckedItems">
		<summary>
			<para> Gets the currently checked items in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> that
   contains the currently checked items. If no items are currently checked, an
   empty <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> is
   returned.</para>
		</value>
		<remarks>
			<para>This property is only useful when the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property of the
<see cref="System.Windows.Forms.ListView"/> control is set to <see langword="true"/>. The <see cref="System.Windows.Forms.ListView.CheckedItems"/> property returns a collection containing 
   all items that are checked in the control. For more information on how to
   manipulate the items in the collection, see <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> .</para>
			<para>If you want to obtain a collection of the index
   positions within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the items that are checked in the
<see cref="System.Windows.Forms.ListView"/> control, instead of the items that are 
   checked, use the <see cref="System.Windows.Forms.ListView.CheckedIndices"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/>
		<seealso cref="System.Windows.Forms.ListView.CheckedIndices"/>
	</doc>
	<doc for="ListView.Columns">
		<summary>
			<para>Gets the collection of all column headers that
      appear in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> that 
   represents the column headers that appear when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.Details"/> 
.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.Columns"/> property returns a collection containing
   the <see cref="System.Windows.Forms.ColumnHeader"/> objects that are displayed in the <see cref="System.Windows.Forms.ListView"/>
   control. <see cref="System.Windows.Forms.ColumnHeader"/> objects define the columns that are
   displayed in the <see cref="System.Windows.Forms.ListView"/> control when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.Details"/>. Each column is used to display subitem 
   information for each item in the <see cref="System.Windows.Forms.ListView"/>. For more information on
   how to manipulate the items in the collection, see <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/>.</para>
			<note type="note">
   If your <see cref="System.Windows.Forms.ListView"/>
   control does not have any column headers specified and you set the <see cref="System.Windows.Forms.ListView.View"/> property to <see langword="View.Details"/>,
   the <see cref="System.Windows.Forms.ListView"/> control will not display any items.
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/>
		<seealso cref="System.Windows.Forms.ColumnHeader"/>
	</doc>
	<doc for="ListView.FocusedItem">
		<summary>
			<para> Gets the
      item in the control that currently has focus.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem"/> that represents
   the item that has focus. If no item has the focus in the <see cref="System.Windows.Forms.ListView"/>
   control, <see langword="null"/>
   is returned.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.FocusedItem"/> property returns the
<see cref="System.Windows.Forms.ListViewItem"/> representing the item that is 
   currently displaying the focus reticle for the <see cref="System.Windows.Forms.ListView"/> control. Because a
<see cref="System.Windows.Forms.ListView"/> control has no directly editable areas other 
   than the items it displays, when the <see cref="System.Windows.Forms.ListView"/> control has focus, an
   item within the <see cref="System.Windows.Forms.ListView"/> displays the focus reticle around its item
   text. Typically, the last selected item in the <see cref="System.Windows.Forms.ListView"/> control is the focused
   item. Although an item may be the one displaying the focus reticle, it may not
   actually be a selected item in the <see cref="System.Windows.Forms.ListView"/> .
   Use the <see cref="System.Windows.Forms.ListView.SelectedItems"/> or <see cref="System.Windows.Forms.ListView.SelectedIndices"/> properties to obtain the selected item(s)
   in the <see cref="System.Windows.Forms.ListView"/> control, the
<see cref="System.Windows.Forms.ListView.FocusedItem"/> 
property is not necessarily selected. You can use the <see cref="System.Windows.Forms.ListView.FocusedItem"/> property to determine which item was
last clicked in the <see cref="System.Windows.Forms.ListView"/> control, regardless of selection state.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListView.FullRowSelect">
		<summary>
			<para> 
      Gets or sets a value
      indicating whether clicking an item selects all its subitems.</para>
		</summary>
		<value>
			<para><see langword="true"/> if clicking an item selects the 
   item and all its subitems; <see langword="false"/> if clicking an item selects
   only the item itself. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.FullRowSelect"/> property has no effect
   unless the <see cref="System.Windows.Forms.ListView.View"/>property of the <see cref="System.Windows.Forms.ListView"/>
   control is set to <see langword="View.Details"/> . The <see cref="System.Windows.Forms.ListView.FullRowSelect"/> property is typically used when a <see cref="System.Windows.Forms.ListView"/>
   displays items with many subitems and it is important to be able to see selected
   items when the item text is not visible due to horizontal scrolling of the
   control's contents.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.View"/>
		<seealso cref="System.Windows.Forms.View.Details" qualify="true"/>
	</doc>
	<doc for="ListView.GridLines">
		<summary>
			<para> Gets or sets a value indicating whether grid
      lines appear between the rows and columns
      containing the items and subitems in the control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if grid lines are drawn around items and subitems;
   otherwise, <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.GridLines"/> property has no effect unless the <see cref="System.Windows.Forms.ListView.View"/>property of the <see cref="System.Windows.Forms.ListView"/>
control is set to <see langword="View.Details"/>. The <see cref="System.Windows.Forms.ListView.GridLines"/> property allows you to display
lines to identify the rows and columns that are displayed in the <see cref="System.Windows.Forms.ListView"/>
control
when it displays items and their subitems. The grid lines that
are displayed do not provide the ability to resize rows and columns as an
application such as Microsoft Excel does. Only columns can be resized, if
column headers are displayed, by moving the mouse pointer to the right side
of the column to resize and then clicking and dragging until the column is
the size you want. The grid lines feature is used to provide the user of the
control with visible boundaries around items and subitems.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.View"/>
	</doc>
	<doc for="ListView.HeaderStyle">
		<summary>
			<para> Gets or sets the column header style.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ColumnHeaderStyle"/> values. The
   default is <see langword="ColumnHeaderStyle.Clickable"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is not one of the <see cref="System.Windows.Forms.ColumnHeaderStyle"/> values.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.HeaderStyle"/> property allows you to
   specify the type of column headers to display when the <see cref="System.Windows.Forms.ListView.View"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control is set to<see langword=" View.Details"/>
   and the <see cref="System.Windows.Forms.ListView"/> control has <see cref="System.Windows.Forms.ColumnHeader"/> objects specified in the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/>.
<see cref="System.Windows.Forms.ColumnHeader"/> 
objects define the columns that are displayed in the <see cref="System.Windows.Forms.ListView"/>
control. Each column is used to display subitem information for each item in the
<see cref="System.Windows.Forms.ListView"/>. The <see cref="System.Windows.Forms.ListView.HeaderStyle"/> property allows 
you to specify whether the column headers will function as clickable
buttons. If the <see cref="System.Windows.Forms.ListView.HeaderStyle"/> property is set to
<see langword="ColumnHeaderStyle.Button"/> , column headers 
act like buttons that users can click to carry out an action, such as
sorting the items in the <see cref="System.Windows.Forms.ListView"/> control using the items in the
clicked column as a key. The <see cref="System.Windows.Forms.ListView.HeaderStyle"/>property can also be
set to <see langword="ColumnHeaderStyle.None"/>
to hide all columns headers.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ColumnHeaderStyle"/>
		<seealso cref="System.Windows.Forms.ListView.View"/>
		<seealso cref="System.Windows.Forms.View"/>
	</doc>
	<doc for="ListView.HideSelection">
		<summary>
			<para> Gets or sets a value indicating whether the selected
      item in the control remains highlighted when the control loses
      focus.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the 
   selected item does not appear highlighted when
   the control loses focus; <see langword="false "/>if the selected item still appears
   highlighted when the control loses focus. The
   default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>When this property is set to <see langword="false"/>, selected items in the
<see cref="System.Windows.Forms.ListView"/> control remain highlighted in a different 
   color than the current selection color specified by the operating system
   when the <see cref="System.Windows.Forms.ListView"/> control loses focus. You
   can use this property to keep items that are selected by the user visible when the
   user clicks a different control on the form or moves to a different window.</para>
		</remarks>
	</doc>
	<doc for="ListView.HoverSelection">
		<summary>
			<para>Gets or sets a value indicating whether an item is
      automatically selected when the mouse pointer remains over the item for a few seconds.</para>
		</summary>
		<value>
			<para><see langword="true"/> if an item is automatically selected when
   the mouse pointer hovers over it; otherwise, <see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>When this property is set to <see langword="true"/>, the 
   user can point to an item in the <see cref="System.Windows.Forms.ListView"/> control to select the
   item. Multiple items can be selected (when the <see cref="System.Windows.Forms.ListView.MultiSelect"/> property is set to true) by holding down
   the CTRL key while pointing to each item. You can use this feature to provide an
   easier method for the user of your application to select items in the <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.Items">
		<summary>
			<para>Gets a collection containing all items in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> 
that contains all the items in the <see cref="System.Windows.Forms.ListView"/> control.</para>
		</value>
		<remarks>
			<para>Using the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> returned by this property, you can add 
   items, remove items, and obtain a count of items. For more information on the
   tasks that can be performed with the items in the collection, see
   the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class reference topics.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection"/>
	</doc>
	<doc for="ListView.LabelEdit">
		<summary>
			<para>Gets or sets a value indicating whether the user can
      edit the labels of items in the control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if
   the user
   can edit the labels of items at run time; otherwise,
<see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property is set to <see langword="true"/>
, the user is able to modify the text of an item by clicking the item text
to select it and then clicking the item text again to put the label text into
edit mode. The user can then modify or replace the item's text label. You can
use the <see cref="System.Windows.Forms.ListView.BeforeLabelEdit"/> and <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> events to perform tasks before and after
the user edits an item's text. The text of subitems cannot be modified if this
property is set to <see langword="true"/> . To change the text
of subitems, you can display a dialog box to users when they double-click a subitem in the
control.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.ListView.Activation"/> property is set
   to <see langword="ItemActivation.OneClick"/> or
<see langword="ItemActivation.TwoClick"/>, label editing will not be allowed
   regardless of the value of the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property.
   
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.BeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.ListView.AfterLabelEdit"/>
	</doc>
	<doc for="ListView.LabelWrap">
		<summary>
			<para>Gets or sets a value indicating whether item labels wrap when items are displayed in the control as icons.</para>
		</summary>
		<value>
			<para><see langword="true"/> if
   item labels wrap when items are displayed
   as icons; otherwise, <see langword="false"/>. The
   default is <see langword="true"/> .</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.ListView.LabelWrap"/> property is set to <see langword="true"/>, the item text is wrapped to the next line of
   text if needed. If the text is longer than two lines of text, the text is
   shortened. If the user selects the item, all the item text is displayed. If the
<see cref="System.Windows.Forms.ListView.LabelWrap"/> property is set to
<see langword="false"/>, all item text is displayed on a single line. 
   The entire item text is displayed when the <see cref="System.Windows.Forms.ListView.LabelWrap"/> is set to <see langword="false"/> . This
   property is only used when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.LargeIcon"/> or <see langword="View.SmallIcon"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.View"/>
	</doc>
	<doc for="ListView.LargeImageList">
		<summary>
			<para> Gets or sets the <see cref="System.Windows.Forms.ImageList"/> to use when displaying items as large
   icons in the control.</para>
		</summary>
		<value>
			<para>An <see cref="System.Windows.Forms.ImageList"/> that
   contains the icons to use when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.LargeIcon"/>. The default is <see langword="null"/> .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.LargeImageList"/> property allows you to specify an <see cref="System.Windows.Forms.ImageList"/>
object that contains icons to use when displaying items with large icons
(when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.LargeIcon"/>). The <see cref="System.Windows.Forms.ListView"/> control can accept any 
graphics format that the <see cref="System.Windows.Forms.ImageList"/> control supports when displaying icons.
The <see cref="System.Windows.Forms.ListView"/> control is not limited to .ico
files. Once an <see cref="System.Windows.Forms.ImageList"/> is assigned to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property, you can set the <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property of each <see cref="System.Windows.Forms.ListViewItem"/> in the <see cref="System.Windows.Forms.ListView"/> control to the
index position of the appropriate image in the <see cref="System.Windows.Forms.ImageList"/>
.</para>
			<para>Because only one index can be specified for the <see cref="System.Windows.Forms.ListViewItem.ImageIndex" qualify="true"/> property, the <see cref="System.Windows.Forms.ImageList"/>
objects specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties should have the same index
positions for the images to display. For example, if the <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property of a <see cref="System.Windows.Forms.ListViewItem"/> is set to 0, the images to use for
both small and large icons should be at the same index position in the <see cref="System.Windows.Forms.ImageList"/>
objects specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties.</para>
			<para>To set the <see cref="System.Windows.Forms.ImageList"/> to use when displaying items with small
icons (all view modes other than <see langword="View.LargeIcon"/>), use the
<see cref="System.Windows.Forms.ListView.SmallImageList"/> property. If you want to use images to 
display item state, use the <see cref="System.Windows.Forms.ListView.StateImageList"/> property.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Windows.Forms.ListView.SmallImageList"/>
		<seealso cref="System.Windows.Forms.ListView.StateImageList"/>
	</doc>
	<doc for="ListView.MultiSelect">
		<summary>
			<para>Gets or sets a value indicating whether multiple items can be selected.</para>
		</summary>
		<value>
			<para><see langword="true"/> if multiple 
   items in the control can be selected at one time; otherwise,
<see langword="false"/>. 
   The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.ListView.MultiSelect"/> property is set to <see langword="true"/>,
   multiple items can be selected in the <see cref="System.Windows.Forms.ListView"/>
   control. To select multiple items, the user must hold down the CTRL
   key while clicking the items to select. Consecutive items can be selected by clicking the
   first item to select and then, while holding down the SHIFT key, clicking the last
   item to select. You can use the multiselection feature to select multiple items in
   the <see cref="System.Windows.Forms.ListView"/> control and perform an operation on all
   the items selected. For example, the user could select multiple items and then
   right-click a selected item to display a shortcut menu that displays a set of tasks
   that can be performed on the selected items. </para>
			<para>To determine which items are selected in the <see cref="System.Windows.Forms.ListView"/> control, use the <see cref="System.Windows.Forms.ListView.SelectedItems"/> property. The <see cref="System.Windows.Forms.ListView.SelectedItems"/> property allows you to access the
<see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> that contains a list of the
selected items. If you want the index positions in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> instead of the items, you can use the <see cref="System.Windows.Forms.ListView.SelectedIndices"/> property to access the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>.</para>
			<para>If you do not want to allow multiple selections in the <see cref="System.Windows.Forms.ListView"/>, yet still
want to offer the user a way for multiple items to be chosen, you can display
check boxes by setting the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property to
<see langword="true"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedItems"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndices"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>
		<seealso cref="System.Windows.Forms.ListView.CheckBoxes"/>
	</doc>
	<doc for="ListView.Scrollable">
		<summary>
			<para> Gets
      or sets a value indicating whether a scroll bar is added to the control when there is not enough room to display all items.</para>
		</summary>
		<value>
			<para><see langword="true"/> if scroll
   bars are added to the control when necessary to allow the user
   to see all the items; otherwise,
<see langword="false"/>. The default is 
<see langword="true"/>.</para>
		</value>
		<remarks>
			<para>When this property is set to <see langword="true"/>, the
<see cref="System.Windows.Forms.ListView"/> displays a vertical scrollbar to use when 
   the number of items exceeds the size of the client area of the control. You can
   use this property to ensure that the user can access all items that are
   available in the <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedIndices">
		<summary>
			<para>Gets the indexes of the selected items in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> that
   contains the indexes of the selected items. If no items are currently selected,
   an empty <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> is
   returned.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.ListView.MultiSelect"/> property is set to
<see langword="true"/> , this property returns a collection containing the 
   indexes of all items that are selected in the <see cref="System.Windows.Forms.ListView"/>. For a single-selection
<see cref="System.Windows.Forms.ListView"/>, this property returns a collection 
   containing a single element containing the index of the only selected item in
   the <see cref="System.Windows.Forms.ListView"/>. For more
   information on the tasks that can be performed with the items in the collection,
   see <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>.</para>
			<para>If you want to obtain a collection of the items that are selected in the
<see cref="System.Windows.Forms.ListView"/> control, 
   instead of the index positions of the items that are selected, use the <see cref="System.Windows.Forms.ListView.SelectedItems"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedItems"/>
	</doc>
	<doc for="ListView.SelectedItems">
		<summary>
			<para>Gets the items that are selected in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> that 
   contains the items that are selected in the control. If no items are currently
   selected, an empty <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> is
   returned.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.ListView.MultiSelect"/> property is set to
<see langword="true"/> , this property returns a collection 
   containing the items that are selected in the <see cref="System.Windows.Forms.ListView"/>. For a single-selection
<see cref="System.Windows.Forms.ListView"/> 
, this property returns a collection containing the only selected item in
the <see cref="System.Windows.Forms.ListView"/>. For more information on the tasks that
can be performed with the items in the collection, see <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>.</para>
			<para>If you want to obtain a collection of the index positions within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the items that are selected in
the <see cref="System.Windows.Forms.ListView"/> control, instead of the items that are
selected, use the <see cref="System.Windows.Forms.ListView.SelectedIndices"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndices"/>
	</doc>
	<doc for="ListView.SmallImageList">
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.ImageList"/> to use when displaying items as small icons in the control.</para>
		</summary>
		<value>
			<para>An <see cref="System.Windows.Forms.ImageList"/> that contains the icons to use when the <see cref="System.Windows.Forms.ListView.View"/> property is set to <see langword="View.SmallIcon"/>. The default is <see langword="null"/> .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.SmallImageList"/> property allows you to specify an <see cref="System.Windows.Forms.ImageList"/>
object that contains icons to use when displaying items with small icons
(when the <see cref="System.Windows.Forms.ListView.View"/> property is set to any value other than
<see langword="View.LargeIcon"/>). The <see cref="System.Windows.Forms.ListView"/> control can accept any 
graphics format that the <see cref="System.Windows.Forms.ImageList"/> control supports when displaying icons.
The <see cref="System.Windows.Forms.ListView"/> control is not limited to
.ico files. Once an <see cref="System.Windows.Forms.ImageList"/> is assigned to the <see cref="System.Windows.Forms.ListView.SmallImageList"/> property, you can set the <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property of each <see cref="System.Windows.Forms.ListViewItem"/> in the <see cref="System.Windows.Forms.ListView"/> control to the
index position of the appropriate image in the <see cref="System.Windows.Forms.ImageList"/> . </para>
			<para>Because only one index can be specified for the <see cref="System.Windows.Forms.ListViewItem.ImageIndex" qualify="true"/> property, the <see cref="System.Windows.Forms.ImageList"/>
objects specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties should have the same index
positions for the images to display. For example, if the <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property of a <see cref="System.Windows.Forms.ListViewItem"/> is set to 0, the images to use for
both small and large icons should be at the same index position in the <see cref="System.Windows.Forms.ImageList"/>
objects specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties.</para>
			<para>To set the <see cref="System.Windows.Forms.ImageList"/> to use when displaying items with large
icons (when the <see cref="System.Windows.Forms.ListView.View"/>
property is set to <see langword="View.LargeIcon"/>), use the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property. If you want to use images to
display item state, use the <see cref="System.Windows.Forms.ListView.StateImageList"/> property.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView"/>
		<seealso cref="System.Windows.Forms.ListView.LargeImageList"/>
		<seealso cref="System.Windows.Forms.ListView.StateImageList"/>
	</doc>
	<doc for="ListView.Sorting">
		<summary>
			<para>Gets or sets the sort order for items in the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.SortOrder"/> values. The default is
<see langword="SortOrder.None"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is not one of the <see cref="System.Windows.Forms.SortOrder"/> values.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.Sorting"/> property allows you to specify whether or
   not items are sorted in the <see cref="System.Windows.Forms.ListView"/> control. By default, no sorting is
   performed. When the <see cref="System.Windows.Forms.ListView.Sorting"/> property is set to
<see langword="SortOrder.Ascending"/> or <see langword="SortOrder.Descending"/>, 
   the items in the <see cref="System.Windows.Forms.ListView"/> are sorted automatically in ascending
   alphabetical order (when the property is set to
<see langword="SortOrder.Ascending"/>) or descending alphabetical order (when the 
   property is set to <see langword="SortOrder.Descending"/>). You can use this
   property to automatically sort items that are displayed in your <see cref="System.Windows.Forms.ListView"/>
   control to make it easier for users to find items when a large number of items
   are available.</para>
			<para>If you want to perform your own item sorting instead of using the <see cref="System.Windows.Forms.ListView.Sorting"/> property, use the <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property in combination with the <see cref="System.Windows.Forms.ListView.Sort"/> method.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.SortOrder"/>
	</doc>
	<doc for="ListView.StateImageList">
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.ImageList"/> 
associated with application-defined states in the control.</para>
		</summary>
		<value>
			<para>An <see cref="System.Windows.Forms.ImageList"/>
that contains a set of state images that can be used to indicate an
application-defined state of an item. The default is
<see langword="null"/> .</para>
		</value>
		<remarks>
			<para> The <see cref="System.Windows.Forms.ListView.StateImageList"/> property allows you to
   specify an <see cref="System.Windows.Forms.ImageList"/> that contains images to use
   to represent an application-specific state of an item in a <see cref="System.Windows.Forms.ListView"/>
   control. State images are displayed to the left of an icon for the item. You can
   use state images, such as checked and unchecked check boxes, to indicate
   application-defined item states. State images are visible in all views of the
<see cref="System.Windows.Forms.ListView"/>
control. </para>
			<para>If an <see cref="System.Windows.Forms.ImageList"/>is specified in the <see cref="System.Windows.Forms.ListView.StateImageList"/> property and the <see cref="System.Windows.Forms.ListView.CheckBoxes"/>
property is set to <see langword="true"/> , the
images at index positions 0 and 1 in the <see cref="System.Windows.Forms.ImageList"/> are displayed instead
of the check box. The image at index position 0 is displayed instead of
the unchecked check box, and the image at index position 1 is displayed instead of
the checked check box.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Windows.Forms.ListView.LargeImageList"/>
		<seealso cref="System.Windows.Forms.ListView.SmallImageList"/>
		<seealso cref="System.Windows.Forms.ListView.CheckBoxes"/>
	</doc>
	<doc for="ListView.View">
		<summary>
			<para>Gets or sets how items are displayed in the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.View"/> values. The default is
<see langword="View.LargeIcon"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is not one of the <see cref="System.Windows.Forms.View"/> values.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.View"/> property allows you to specify the type of
   display the <see cref="System.Windows.Forms.ListView"/>
   control uses to display items. You can set the <see cref="System.Windows.Forms.ListView.View"/>
   property to display each item with large or small icons or display items in
   a vertical list. The richest option is the details view, which allows you to
   view not only the items but any subitems specified for each item. Each item
   is displayed in a grid, with each item listed vertically and the subitems
   for each item displayed in a column, with column headers. The details
   view is a perfect way to display database information to a user.</para>
			<para>Most of the properties in the <see cref="System.Windows.Forms.ListView"/> control affect how the
different views behave or are displayed. Some properties that affect the views
of the items are only useful when the <see cref="System.Windows.Forms.ListView.View"/> property is set to a
specific value, while others are useful in all views. For example, properties
such as <see cref="System.Windows.Forms.ListView.GridLines"/> and <see cref="System.Windows.Forms.ListView.FullRowSelect"/> are only useful when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.Details"/>, while the <see cref="System.Windows.Forms.ListView.MultiSelect"/> and <see cref="System.Windows.Forms.ListView.CheckBoxes"/> properties are useful in all views.</para>
			<para>You can use the <see cref="System.Windows.Forms.ListView.View"/> property to provide different views of
data in your application, or to lock a specific view to utilize that view's
benefits. For example, the <see cref="System.Windows.Forms.ListView.View"/> property is often set to
<see langword="View.Details"/> because the details view provides a number of viewing 
options not available in the other views.</para>
			<note type="note">
   If your <see cref="System.Windows.Forms.ListView"/>
   control does not have any column headers specified and you set the <see cref="System.Windows.Forms.ListView.View"/> property to <see langword="View.Details"/>,
   the <see cref="System.Windows.Forms.ListView"/> control will not display any items.
   
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.View"/>
	</doc>
	<doc for="ListView.ArrangeIcons1">
		<summary>
			<para> Arranges items in the control when they are displayed as
      icons based on the value of the <see cref="System.Windows.Forms.ListView.Alignment"/>
      property.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ArrangeIcons"/> method is only useful when the
<see cref="System.Windows.Forms.ListView.View"/> property is set to 
<see langword="View.LargeIcon"/> or <see langword="View.SmallIcon"/>. Calling this version of the <see cref="System.Windows.Forms.ListView.ArrangeIcons"/>method 
   arranges the items using the
   default alignment setting (<see langword="ListViewAlignment.Default"/>). To cause the items to
   be aligned based on a value that is different than that of the
<see cref="System.Windows.Forms.ListView.Alignment"/> property, use the other version 
   of the <see cref="System.Windows.Forms.ListView.ArrangeIcons"/>
   method. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.Alignment"/>
	</doc>
	<doc for="ListView.ArrangeIcons">
		<overload>
			<para> Arranges items in the control when they are displayed as icons.</para>
		</overload>
		<summary>
			<para> Arranges items in the control when they are displayed as icons
      with a specified alignment setting.</para>
		</summary>
		<param name="value">One of the <see cref="System.Windows.Forms.ListViewAlignment"/> values. </param>
		<exception cref="System.ArgumentException">The value specified in the <paramref name="value"/> parameter is not a member of the <see cref="System.Windows.Forms.ListViewAlignment"/> enumeration. </exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ArrangeIcons"/> method is only useful
   when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.LargeIcon"/> or <see langword="View.SmallIcon"/>. This version 
   of the <see cref="System.Windows.Forms.ListView.ArrangeIcons"/> method arranges the icons in the <see cref="System.Windows.Forms.ListView"/>
   based on the <see cref="System.Windows.Forms.ListViewAlignment"/>value specified in the <paramref name="value"/>
   parameter. Calling this method does not change the value of the <see cref="System.Windows.Forms.ListView.Alignment"/> property of the control. This method
   is used to arrange icons on the control using a different value than that of the <see cref="System.Windows.Forms.ListView.Alignment"/> property. To cause the items to be aligned
   based on the value of the <see cref="System.Windows.Forms.ListView.Alignment"/> property, use the other
   version of the <see cref="System.Windows.Forms.ListView.ArrangeIcons"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewAlignment"/>
		<seealso cref="System.Windows.Forms.ListView.Alignment"/>
	</doc>
	<doc for="ListView.BeginUpdate">
		<summary>
			<para> 
      Prevents the control from drawing until the
   <see cref="System.Windows.Forms.ListView.EndUpdate"/> method
      is called.</para>
		</summary>
		<remarks>
			<para>The preferred way to add multiple items to a <see cref="System.Windows.Forms.ListView"/> is
   to use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method of the
<see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> 
(accessed through the <see cref="System.Windows.Forms.ListView.Items"/> property of the <see cref="System.Windows.Forms.ListView"/>).
This enables you to add an array of items to the list in a single operation.
However, if you want to add items one at a time using the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class, you can use the <see cref="System.Windows.Forms.ListView.BeginUpdate"/> method to prevent the control from
repainting the <see cref="System.Windows.Forms.ListView"/> each time an item is added.
Once you have completed the task of adding items to the control, call the
<see cref="System.Windows.Forms.ListView.EndUpdate"/> method to enable the <see cref="System.Windows.Forms.ListView"/> 
to repaint. This way of adding items can prevent flickered drawing of the
<see cref="System.Windows.Forms.ListView"/> when a large number of items are being 
added to the control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.EndUpdate"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange" qualify="true"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Add" qualify="true"/>
	</doc>
	<doc for="ListView.EndUpdate">
		<summary>
			<para>Resumes drawing of the list view control after drawing
      is suspended by the <see cref="System.Windows.Forms.ListView.BeginUpdate"/> method.</para>
		</summary>
		<remarks>
			<para>The preferred way to add multiple items to a <see cref="System.Windows.Forms.ListView"/> is to use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> 
(accessed through the <see cref="System.Windows.Forms.ListView.Items"/> property of the <see cref="System.Windows.Forms.ListView"/>). This enables you to add an array of items to the list in a single operation. However, if you want to add items one at a time using the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class, you can use the <see cref="System.Windows.Forms.ListView.BeginUpdate"/> method to prevent the control from repainting the <see cref="System.Windows.Forms.ListView"/> each time an item is added. Once you have completed the task of adding items to the control, call the <see cref="System.Windows.Forms.ListView.EndUpdate"/> method to enable the <see cref="System.Windows.Forms.ListView"/> to repaint. This way of adding items can prevent flickered drawing of the <see cref="System.Windows.Forms.ListView"/> when a large number of items are being added to the control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.BeginUpdate"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange" qualify="true"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Add" qualify="true"/>
	</doc>
	<doc for="ListView.EnsureVisible">
		<summary>
			<para> Ensures that the specified item is visible within the control,
      scrolling the contents of the control if necessary.</para>
		</summary>
		<param name="index">The zero-based index of the item to scroll into view.</param>
		<remarks>
			<para>You can use this method to ensure that a specific item
      is visible within the <see cref="System.Windows.Forms.ListView"/> control. When
      performing validation on the items in a <see cref="System.Windows.Forms.ListView"/> , you can call the
   <see cref="System.Windows.Forms.ListView.EnsureVisible"/> method to ensure that an item
      that failed validation is displayed in the <see cref="System.Windows.Forms.ListView"/> control to allow the user to perform
      changes on the item. If the item that you want to ensure is visible is located
      above the viewable region of the <see cref="System.Windows.Forms.ListView"/>
      control,
      calling the <see cref="System.Windows.Forms.ListView.EnsureVisible"/> method will scroll the contents of the
      control until it is the first item in the viewable area of the control. If the
      item is below the viewable region of the <see cref="System.Windows.Forms.ListView"/> control, calling the
   <see cref="System.Windows.Forms.ListView.EnsureVisible"/> method will scroll the contents of the
   <see cref="System.Windows.Forms.ListView"/> control until the item is the
      last item in the viewable area of the control.</para>
			<para>To determine if an item is located at the top of the
      display area of a <see cref="System.Windows.Forms.ListView"/> control, use the
   <see cref="System.Windows.Forms.ListView.TopItem"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.TopItem"/>
	</doc>
	<doc for="ListView.GetItemAt">
		<summary>
			<para>Retrieves the item at the
      specified location.</para>
		</summary>
		<param name="x">The x-coordinate of the location to search for an item (expressed in client coordinates). </param>
		<param name="y">The y-coordinate of the location to search for an item (expressed in client coordinates). </param>
		<returns>
			<para>A <see cref="System.Windows.Forms.ListViewItem"/> that represents the item at the specified position.
   If there is no item at the specified location, the method returns
<see langword="null"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.GetItemAt"/>method enables you to determine which item
   is located at a specific location within the client region of the <see cref="System.Windows.Forms.ListView"/>
   control. You can use this method when the user clicks or right-clicks a
   subitem (when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.Details"/>) and you want to determine which item owns the 
   subitem that was clicked based on the mouse coordinates at the time the user
   clicked the mouse.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListView.GetItemRect1">
		<summary>
			<para>Retrieves the specified portion of the bounding rectangle for a specific item within the list view control.</para>
		</summary>
		<param name="index">The zero-based index of the item within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> whose bounding rectangle you want to return. </param>
		<param name="portion">One of the <see cref="System.Windows.Forms.ItemBoundsPortion"/> values that represents a portion of the <see cref="System.Windows.Forms.ListViewItem"/> for which to retrieve the bounding rectangle. </param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the bounding rectangle for the specified portion of the specified <see cref="System.Windows.Forms.ListViewItem"/>. </para>
		</returns>
		<remarks>
			<para>The bounding rectangle returned by this version of the <see cref="System.Windows.Forms.ListView.GetItemRect"/>
method represents only the section of the item specified in the <paramref name="portion"/>
parameter. To return the
bounding rectangle of the entire item, use the other version of
the <see cref="System.Windows.Forms.ListView.GetItemRect"/> method.</para>
		</remarks>
		<seealso cref="System.Drawing.Rectangle"/>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
		<seealso cref="System.Windows.Forms.ItemBoundsPortion"/>
	</doc>
	<doc for="ListView.UpdateExtendedStyles">
		<summary>
			<para>Updates the extended styles applied to the list view control.</para>
		</summary>
		<remarks>
			<para> You can use the <see cref="System.Windows.Forms.ListView.UpdateExtendedStyles"/> method in your derived class to override
   the extended styles used by the <see cref="System.Windows.Forms.ListView"/> control. If you override
   this method, you should ensure that the extended styles that are set by the
   properties on the <see cref="System.Windows.Forms.ListView"/> control are utilized in your derived
   version of the
   control.
   </para>
			<para> The following are the properties that apply an extended
   style to the <see cref="System.Windows.Forms.ListView"/>
   control.
   </para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.Activation"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.HoverSelection"/></term>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.Activation"/>
		<seealso cref="System.Windows.Forms.ListView.AllowColumnReorder"/>
		<seealso cref="System.Windows.Forms.ListView.CheckBoxes"/>
		<seealso cref="System.Windows.Forms.ListView.FullRowSelect"/>
		<seealso cref="System.Windows.Forms.ListView.GridLines"/>
		<seealso cref="System.Windows.Forms.ListView.HoverSelection"/>
	</doc>
	<doc for="ListView.BeforeLabelEdit">
		<summary>
			<para> Occurs when the user starts editing the label of an item.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.BeforeLabelEdit"/> event occurs
   when the user begins modifying the text for an item. If the event handler cancels
   this event, the user cannot edit the text. You can use this event to prevent
   the user from editing specific items in the <see cref="System.Windows.Forms.ListView"/> control. If the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control is set to <see langword="false"/>, the <see cref="System.Windows.Forms.ListView.BeforeLabelEdit"/>
   
   event is not raised; all user attempts to edit item
   labels are automatically rejected.</para>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.OnBeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.ListView.AfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.LabelEditEventHandler"/>
	</doc>
	<doc for="ListView.ItemActivate">
		<summary>
			<para>Occurs when an item is activated.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ItemActivate"/> event occurs when the user activates one
   or more items in the <see cref="System.Windows.Forms.ListView"/> control. The user can activate an item
   with either a single-click or double-click, depending on the value of the
<see cref="System.Windows.Forms.ListView.Activation"/>property, or with the keyboard. From 
   within the event handler for the <see cref="System.Windows.Forms.ListView.ItemActivate"/> event, you can reference
   the <see cref="System.Windows.Forms.ListView.SelectedItems"/> or <see cref="System.Windows.Forms.ListView.SelectedIndices"/> properties to access the
   collection of items selected in the <see cref="System.Windows.Forms.ListView"/> to determine which items are being
   activated.</para>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.OnItemActivate"/>
		<seealso cref="System.EventHandler"/>
		<seealso cref="System.Windows.Forms.ListView.Activation"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedItems"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndices"/>
	</doc>
	<doc for="ListView.ItemDrag">
		<summary>
			<para>Occurs when the user begins dragging an item.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ItemDrag"/> event occurs when the user begins dragging
   an item. Typically the event handler for the <see cref="System.Windows.Forms.ListView.ItemDrag"/> event performs the task of
   dragging by calling the <see cref="System.Windows.Forms.Control.DoDragDrop" qualify="true"/> method. You can use this event to perform
   the tasks necessary to drag items into and out of your application's <see cref="System.Windows.Forms.ListView"/>
   control.</para>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.OnItemDrag"/>
		<seealso cref="System.Windows.Forms.ItemDragEventHandler"/>
	</doc>
	<doc for="ListView.SelectedIndexChanged">
		<summary>
			<para> Occurs when the index of the selected item in the
      list view control changes.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.SelectedIndexChanged"/> event occurs in single selection
<see cref="System.Windows.Forms.ListView"/>controls, whenever there is a change to the index position 
   of the selected item. In a multiple selection <see cref="System.Windows.Forms.ListView"/> control, this event occurs
   whenever an item is removed or added to the list of selected items. To
   determine which items are selected in the <see cref="System.Windows.Forms.ListView"/> control, use the <see cref="System.Windows.Forms.ListView.SelectedItems"/> property to access the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>. You can create an event handler
   for this event to perform tasks whenever there is a change to the selected items
   in the <see cref="System.Windows.Forms.ListView"/> control. </para>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.OnSelectedIndexChanged"/>
		<seealso cref="System.EventHandler"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndices"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedItems"/>
	</doc>
	<doc for="ListView.CheckedIndexCollection">
		<summary>
			<para>Represents the collection containing the indexes to the
      checked items in a list view control.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> stores the indexes to the checked
   items in a <see cref="System.Windows.Forms.ListView"/> control. Items can only be checked if the
<see cref="System.Windows.Forms.ListView.CheckBoxes"/> 
property of the <see cref="System.Windows.Forms.ListView"/> control is set to
<see langword="true"/> . The indexes stored in the
<see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> are index positions within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> . The <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores all items displayed in the 
<see cref="System.Windows.Forms.ListView"/> control.</para>
			<para>The following table is an example of how the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores the items of the <see cref="System.Windows.Forms.ListView"/>
as well as their checked states in an example <see cref="System.Windows.Forms.ListView"/>
control.</para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Item</description>
					<description>Checked state in the ListView</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>Item1</description>
					<description>Unchecked</description>
				</item>
				<item>
					<term> 1</term>
					<description>Item2</description>
					<description>Checked</description>
				</item>
				<item>
					<term> 2</term>
					<description>Item3</description>
					<description>Unchecked</description>
				</item>
				<item>
					<term> 3</term>
					<description>Item4</description>
					<description>Checked</description>
				</item>
				<item>
					<term> 4</term>
					<description>Item5</description>
					<description>Checked</description>
				</item>
			</list>
			<para>Based on the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> example in the previous table, the
following table demonstrates how the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> would appear. </para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Index of checked item in
         ListViewItemCollection</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>1</description>
				</item>
				<item>
					<term> 1</term>
					<description>3</description>
				</item>
				<item>
					<term> 2</term>
					<description>4</description>
				</item>
			</list>
You can use the properties and methods of this class
to perform a variety of tasks with the collection. The <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.Contains"/> method enables you to determine whether an
index position from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is one of the indexes
stored in the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>. Once you know that the
item is in the collection, you can use the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf"/> method to determine the position of the
index in the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>.
</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection"/>
	</doc>
	<doc for="ListView.CheckedIndexCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the collection is read-only;
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>This property is always <see langword="true"/> for this 
   collection. The items in the collection can only be modified by the <see cref="System.Windows.Forms.ListView"/>
   control.</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedIndexCollection.this">
		<summary>
			<para>Gets the index value at the specified index within the collection.</para>
		</summary>
		<param name="index">The index of the item in the collection to retrieve. </param>
		<value>
			<para>The index value from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> that is stored at the specified location.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.Count"/> property of <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> .</exception>
		<remarks>
			<para>This indexer enables you to get a specific index from the
   <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>. The index stored in the collection is an
      index into the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the <see cref="System.Windows.Forms.ListView"/>
      that represents a checked item in the <see cref="System.Windows.Forms.ListView"/>.</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedIndexCollection.Contains">
		<summary>
			<para> Determines whether the specified index is located in the collection.</para>
		</summary>
		<param name="checkedIndex">The index to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the specified index from the
<see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> for the <see cref="System.Windows.Forms.ListView"/> is an item in the 
   collection; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.Contains"/> method enables you to determine whether an 
   index position from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is one of the checked
   indexes stored in the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>. Once you know that an
   item is in the checked index collection, you can use the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf"/> method to determine the position of the
   index in the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf"/>
	</doc>
	<doc for="ListView.CheckedIndexCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can be used to iterate through the
      checked index collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> that represents the checked index collection.</para>
		</returns>
	</doc>
	<doc for="ListView.CheckedIndexCollection.IndexOf">
		<summary>
			<para>Returns the index within the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection" qualify="true"/> of the specified index from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the list view control.</para>
		</summary>
		<param name="checkedIndex">The zero-based index from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> to locate in the collection.</param>
		<returns>
			<para>The zero-based index in the collection where the 
      specified index of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is located within the
   <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>. If the index is not located in the 
      collection, the return value is negative one (-1).</para>
		</returns>
		<remarks>
			<para>Once you know that an item is in the checked index 
      collection (using the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.Contains"/> method), you can use the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection.IndexOf"/> method to determine the position of the
      index in the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.CheckedIndexCollection.Contains"/>
	</doc>
	<doc for="ListView.CheckedIndexCollection.CheckedIndexCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView.CheckedIndexCollection"/> class.</para>
		</summary>
		<param name="owner">A <see cref="System.Windows.Forms.ListView"/> control that owns the collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without
      associating it with a <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedListViewItemCollection">
		<summary>
			<para>Represents the collection of checked items in a list 
      view control.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> stores the checked items in a
<see cref="System.Windows.Forms.ListView"/> control. Items can only be checked if the 
<see cref="System.Windows.Forms.ListView.CheckBoxes"/> 
property of the <see cref="System.Windows.Forms.ListView"/> control
is set to <see langword="true"/> . The
items stored in the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> are items contained in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> . The <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class stores all items displayed in the
<see cref="System.Windows.Forms.ListView"/> control.</para>
			<para>The following table is an example of how the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores the items of the <see cref="System.Windows.Forms.ListView"/>
as well as their selection states in an example <see cref="System.Windows.Forms.ListView"/>
control.</para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Item</description>
					<description>Checked state in the ListView</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>Iem1</description>
					<description>Unchecked</description>
				</item>
				<item>
					<term> 1</term>
					<description>Item2</description>
					<description>Checked</description>
				</item>
				<item>
					<term> 2</term>
					<description>Item3</description>
					<description>Unchecked</description>
				</item>
				<item>
					<term> 3</term>
					<description>Item4</description>
					<description>Checked</description>
				</item>
				<item>
					<term> 4</term>
					<description>Item5</description>
					<description>Checked</description>
				</item>
			</list>
			<para>Based on the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> example in the previous table, the
following table demonstrates how the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> would appear. </para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Checked Item In
         ListViewItemCollection</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>Item2</description>
				</item>
				<item>
					<term> 1</term>
					<description>Item4</description>
				</item>
				<item>
					<term> 2</term>
					<description>Item5</description>
				</item>
			</list>
			<para>You can use the properties and methods of this class to
   perform a variety of tasks with the collection. The <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains"/> method enables you to determine whether an
   item from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class is a member of the
<see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> . Once you know that the item is 
   in the collection, you can use the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf"/> method
   to determine the position of
   the item in the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> . </para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedListViewItemCollection.CheckedListViewItemCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.ListView"/> control that owns the collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without 
      associating it with a <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedListViewItemCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para>The number of items in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of
      checked items in the <see cref="System.Windows.Forms.ListView"/> control. You can then use this value when
      looping through the values of the collection and you need to provide a number of
      iterations to perform the loop.</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedListViewItemCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the collection is read-only;
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>This property is always <see langword="true"/> for this 
   collection. The items in the collection can only be modified by the <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedListViewItemCollection.this">
		<summary>
			<para>Gets the item at the specified index within the collection.</para>
		</summary>
		<param name="index">The index of the item in the collection to retrieve.</param>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem"/> representing
   the item located at the specified index within the collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.Count"/> property of <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> .</exception>
		<remarks>
			<para>This indexer enables you to get a specific item from the
   <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/>. The item stored in this collection is an
      item in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the <see cref="System.Windows.Forms.ListView"/>
      that represents a checked item in the <see cref="System.Windows.Forms.ListView"/> .</para>
		</remarks>
	</doc>
	<doc for="ListView.CheckedListViewItemCollection.Contains">
		<summary>
			<para>Determines whether the specified item is located in the collection.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the specified item is located
   in the collection; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.Contains"/> method enables you to determine
   whether an item from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is a
   one of the checked items stored in the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/>. Once you know that an item is in the
   checked item collection, you can use the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf" qualify="true"/>
   method to determine the position of the item in the <see cref="System.Windows.Forms.ListView.CheckedListViewItemCollection"/> .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.CheckedListViewItemCollection.IndexOf"/>
	</doc>
	<doc for="ListView.SelectedIndexCollection.SelectedIndexCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> class.</para>
		</summary>
		<param name="owner">A <see cref="System.Windows.Forms.ListView"/> control that owns the collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without associating it with a <see cref="System.Windows.Forms.ListView"/>
control.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedIndexCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para>The number of items in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of selected items in the
   <see cref="System.Windows.Forms.ListView"/>. You
      can then use this value when looping through the values of the collection and
      you need to provide a number of iterations to perform the loop. If the
   <see cref="System.Windows.Forms.ListView.MultiSelect"/> property of the <see cref="System.Windows.Forms.ListView"/>is set to <see langword="false"/> , this property
      returns a value of either zero (0) or one (1) depending on whether an
      item is selected.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedIndexCollection.IsReadOnly">
		<summary>
			<para> Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the collection is read-only;
   otherwise, <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>This property is always <see langword="true "/>for this collection. The items in the collection can only be modified
   by the <see cref="System.Windows.Forms.ListView"/>
   control. </para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedIndexCollection.this">
		<summary>
			<para> Gets the index value at the specified index within the collection.</para>
		</summary>
		<param name="index">The index of the item in the collection to retrieve. </param>
		<value>
			<para>The index value from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> that is stored at the specified location.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> .</exception>
		<remarks>
			<para>This indexer enables you to get a specific selected index from the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>. The index stored in the collection is an
   index into the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the <see cref="System.Windows.Forms.ListView"/> that represents a
   selected item in the <see cref="System.Windows.Forms.ListView"/>.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedIndexCollection.Contains">
		<summary>
			<para>Determines whether the specified index is located in the collection.</para>
		</summary>
		<param name="selectedIndex">The index to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the specified index from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> for the <see cref="System.Windows.Forms.ListView"/>is an item in the
   collection; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.SelectedIndexCollection.Contains"/> method enables you to determine whether an
   index position from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is one of the
   selected indexes stored in <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>. Once
   you know that an item is in the selected index collection, you can use the
<see cref="System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf"/> method to determine the position of the 
   index in the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>
   .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf"/>
	</doc>
	<doc for="SelectedIndexCollection.CopyTo">
		<summary>
			<para>Copies the entire collection into an existing array at a
      specified location within the array.</para>
		</summary>
		<param name="dest">An <see cref="System.Array"/> representing the array to copy the contents of the collection to.The destination array.</param>
		<param name="index">The location within the destination array to copy the items from the collection to.</param>
		<remarks>
			<para>You can use this method to combine the selected indexes from multiple collections into
      a single array.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedIndexCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can be used to iterate through the selected index collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> that represents the selected
   indexes collection.</para>
		</returns>
	</doc>
	<doc for="ListView.SelectedIndexCollection.IndexOf">
		<summary>
   Returns the index within the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> of the specified index from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the
   list view control.
</summary>
		<param name="selectedIndex">The zero-based index from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> to locate in the collection.</param>
		<returns>
			<para>The zero-based index in the collection where the 
      specified index of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is located within the
   <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>. If the index is not located in the 
      collection, the return value
      is negative one (-1).</para>
		</returns>
		<remarks>
			<para>Once you know that an item is in the selected index 
      collection (using the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection.Contains"/> method), you can use the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf"/> method to determine the position of the
      index in the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndexCollection.Contains"/>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection">
		<summary>
			<para>Represents the collection of selected items in a list 
      view control.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> stores the selected items in a <see cref="System.Windows.Forms.ListView"/> 
control. The items stored in the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> are items contained in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> . The <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores all items displayed in the <see cref="System.Windows.Forms.ListView"/>.</para>
			<para>The following table is an example of how the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores the items of the <see cref="System.Windows.Forms.ListView"/> as well as their selection states in an example <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Item</description>
					<description>Selection state in the ListView</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>Item1</description>
					<description>Unselected</description>
				</item>
				<item>
					<term> 1</term>
					<description>Item2</description>
					<description>Selected</description>
				</item>
				<item>
					<term> 2</term>
					<description>Item3</description>
					<description>Unselected</description>
				</item>
				<item>
					<term> 3</term>
					<description>Item4</description>
					<description>Selected</description>
				</item>
				<item>
					<term> 4</term>
					<description>Item5</description>
					<description>Selected</description>
				</item>
			</list>
			<para>Based on the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> example in the previous table, the
following table demonstrates how the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> would appear. </para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Selected item in the
         ListViewItemCollection</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>Item2</description>
				</item>
				<item>
					<term> 1</term>
					<description>Item4</description>
				</item>
				<item>
					<term> 2</term>
					<description>Item5</description>
				</item>
			</list>
			<para>You can use the properties and methods of this class to 
   perform a variety of tasks with the collection. The <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.Contains"/> method enables you to determine whether an
   item from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class is a member of the
<see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>. Once you know that the item is in the 
   collection, you can use the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.IndexOf"/> method to determine the position of the
   item in the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> . </para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.SelectedListViewItemCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.ListView"/> control that owns the collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without 
      associating it with a <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.Count">
		<summary>
			<para>Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para>The number of items in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of selected items in the
   <see cref="System.Windows.Forms.ListView"/> control. You
      can then use this value when looping through the values of the collection and
      you need to provide a number of iterations to perform the loop. Unless the
   <see cref="System.Windows.Forms.ListView.MultiSelect"/> property of the <see cref="System.Windows.Forms.ListView"/>is set to <see langword="true"/> , this property always
      returns a value of zero (0) or one (1) depending on whether you have
      a selected item.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the collection is read-only; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>This property is always <see langword="true"/> for this collection. The items in the 
   collection can only be modified by the <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.this">
		<summary>
			<para>Gets the item at the specified index within the collection.</para>
		</summary>
		<param name="index">The index of the item in the collection to retrieve. </param>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem"/> representing the item located at the specified index within the
   collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> .</exception>
		<remarks>
			<para>This indexer enables you to get a specific item from the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>. The item stored in the collection is an
   item in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the <see cref="System.Windows.Forms.ListView"/>
   that represents a selected item in the <see cref="System.Windows.Forms.ListView"/>.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.Clear">
		<summary>
			<para> Removes all items from the collection.</para>
		</summary>
		<remarks>
			<para>This method allows you to clear all selections from the <see cref="System.Windows.Forms.ListView"/>
control.</para>
		</remarks>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.Contains">
		<summary>
			<para>Determines whether the specified item is located in the collection.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the specified item is located in the collection;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.Contains"/> method enables you to determine whether an 
   item from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class is one of the
   selected items stored in the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>. Once you know that the item is in the
   selected item collection, you can use the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.IndexOf"/> method to determine the position of the
   item in the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>
   .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.IndexOf"/>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can be used to iterate
      through the selected item collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> that represents the collection of selected
   items.</para>
		</returns>
	</doc>
	<doc for="ListView.SelectedListViewItemCollection.IndexOf">
		<summary>
			<para>Returns the index within the collection of the specified item.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to locate in the collection.</param>
		<returns>
			<para>The zero-based index of the item in the collection. If 
      the item is not located in the collection, the return value is negative one (-1).</para>
		</returns>
		<remarks>
			<para>Once you know that an item is in the selected item 
      collection (using the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.Contains"/> method), you can use the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.IndexOf"/> method to determine the position of the
      item in the <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedListViewItemCollection.Contains"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.ColumnHeaderCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.ListView"/> control that owns this collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without
      associating it with a <see cref="System.Windows.Forms.ListView"/>
      control.</para>
		</remarks>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.this">
		<summary>
			<para>Gets or sets the column header at the specified index within the collection.</para>
		</summary>
		<param name="index">The index of the column header in the collection to get or set. </param>
		<value>
			<para>A <see cref="System.Windows.Forms.ColumnHeader"/> representing the column header located at
   the specified index within the collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> .</exception>
		<remarks>
			<para>You can use this method to obtain the <see cref="System.Windows.Forms.ColumnHeader"/> stored at a specific location in the
   collection. To determine the index of a specific column header in the
   collection, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf"/>
   method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.Add">
		<overload>
			<para>Adds a column header to the collection.</para>
		</overload>
		<summary>
			<para> Adds a column header to the collection with specified text, width, and alignment settings.</para>
		</summary>
		<param name="str">The text to display in the column header. </param>
		<param name="width">The initial width of the column header. Set to -1 to autosize the column header to the size of the largest subitem text in the column or -2 to autosize the column header to the size of the text of the column header. </param>
		<param name="textAlign">One of the <see cref="System.Windows.Forms.HorizontalAlignment"/> values. </param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ColumnHeader"/> that
   was created and added to the collection.</para>
		</returns>
		<remarks>
			<para>You can use this version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method to create a new <see cref="System.Windows.Forms.ColumnHeader"/> to add to the collection. The text of the
   new <see cref="System.Windows.Forms.ColumnHeader"/> added to the control is based on the
<paramref name="text"/> parameter. This version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method also allows 
   you to specify the width of the column and the alignment of text in the
   column header. If you have an existing <see cref="System.Windows.Forms.ColumnHeader"/> that you want to add
   to the collection, use the version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method that accepts a <see cref="System.Windows.Forms.ColumnHeader"/> as its parameter.</para>
			<para> When column headers are added, they are added to
   the end of the collection. To insert a column header into the
   collection at a specific position, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method. To add a set of column
   headers to the collection in a single operation, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/> method. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.AddRange">
		<summary>
			<para>Adds an array of column headers to the collection.</para>
		</summary>
		<param name="values">An array of <see cref="System.Windows.Forms.ColumnHeader"/> objects to add to the collection.</param>
		<remarks>
			<para>This method removes all existing column headers from
      the collection before inserting new items. You can use this method to reuse
      the column headers used in a different <see cref="System.Windows.Forms.ListView"/> control. If you want to
      add a single <see cref="System.Windows.Forms.ColumnHeader"/> , use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method. You can also use the
   <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method if you want to add a
      single <see cref="System.Windows.Forms.ColumnHeader"/> at a specific position in the
      collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ColumnHeader"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.Contains">
		<summary>
			<para>Determines whether the specified column header is
      located in the collection.</para>
		</summary>
		<param name="value">A <see cref="System.Windows.Forms.ColumnHeader"/> representing the column header to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the column header is contained in the collection;
   otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Contains"/> method enables you to determine whether a 
<see cref="System.Windows.Forms.ColumnHeader"/> is a member of the collection. Once you 
   know that the column header is in the collection, you can use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf"/> method to determine the position
   of the column header in the collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.IndexOf">
		<summary>
			<para>Returns the index within the collection of the specified column header.</para>
		</summary>
		<param name="value">A <see cref="System.Windows.Forms.ColumnHeader"/> representing the column header to locate in the collection.</param>
		<returns>
			<para>The zero-based index of the column header's location in the collection. If 
      the column header is not located in the collection, the return value is negative
      one (-1).</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf"/> method enables you to determine the 
   position of a column header in the collection. To determine whether a column
   header is contained in the collection before calling this method, use the
<see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Contains"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Contains"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator to use to iterate through the
      column header collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> that represents the column header collection.</para>
		</returns>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.Insert">
		<overload>
			<para>Inserts a column header into the collection at the specified index.</para>
		</overload>
		<summary>
			<para>Inserts an existing column header into the collection at the specified index.</para>
		</summary>
		<param name="index">The zero-based index location where the column header is inserted.</param>
		<param name=" value">The <see cref="System.Windows.Forms.ColumnHeader"/> to insert into the collection.</param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> .</exception>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method enables you to insert an
   existing <see cref="System.Windows.Forms.ColumnHeader"/> at a specific position in the
<see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/>
. </para>
			<para> 
   If you
   want to create a new <see cref="System.Windows.Forms.ColumnHeader"/> and insert it at a specific
   position in the collection, use the other version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method. To
   add a column header without specifying a specific position in the collection, use
   the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method. If you want to add an
   array of column headers to the collection, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/>
   method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.Insert1">
		<summary>
			<para>Creates a new column header and inserts it into the collection at the specified index.</para>
		</summary>
		<param name="index">The zero-based index location where the column header is inserted.</param>
		<param name=" str">The text to display in the column header.</param>
		<param name=" width">The initial width of the column header. Set to -1 to autosize the column header to the size of the largest subitem text in the column or -2 to autosize the column header to the size of the text of the column header.</param>
		<param name=" textAlign">One of the <see cref="System.Windows.Forms.HorizontalAlignment"/> values.</param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> .</exception>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method 
   enables you to create a new <see cref="System.Windows.Forms.ColumnHeader"/>
   with specific column header
   text, width, and text alignment setting and insert it at a specific position in the
<see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/>. You can use this method if you want 
   to insert a new column header into an existing collection of column headers. If
   you want to use an existing <see cref="System.Windows.Forms.ColumnHeader"/> object and insert it at a specific
   position in the collection, use the other version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method. To
   add a column header without specifying a specific position in the collection, use
   the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method. If you want to add an
   array of column headers to the collection, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/>
   method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.RemoveAt">
		<summary>
			<para>Removes the column header at the specified index
      within the collection.</para>
		</summary>
		<param name="index">The zero-based index of the column header to remove.</param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> .</exception>
		<remarks>
			<para>When you remove a column header from the collection, the
      indexes change for subsequent column headers in the collection. All information
      about the removed column header is deleted. You can use this method to remove a
      specific column header from the collection by specifying the index of the column
      header to remove from the collection. To specify the column header to remove
      instead of the index to the column header, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Remove"/> method. To remove all column
      headers from the collection, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Clear"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Remove"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Clear"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.Remove">
		<summary>
			<para>Removes the specified column header from the collection.</para>
		</summary>
		<param name="column">A <see cref="System.Windows.Forms.ColumnHeader"/> representing the column header to remove from the collection.</param>
		<remarks>
			<para>When you remove a column header from the collection, the
      indexes change for subsequent column headers in the collection. All information
      about the removed column header is deleted. You can use this method to remove a
      specific column header from the collection by specifying the actual <see cref="System.Windows.Forms.ColumnHeader"/> to remove. To
      specify the index of the column header to remove instead of the column header
      itself, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt"/> method. To
      remove all column headers from the collection, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Clear"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Clear"/>
	</doc>
	<doc for="ListView.ListViewItemCollection">
		<summary>
			<para> Represents the collection of items in a <see cref="System.Windows.Forms.ListView"/> control.
   </para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores the
   items displayed in the <see cref="System.Windows.Forms.ListView"/>
   control. There
   are two other collections defined within the <see cref="System.Windows.Forms.ListView"/> class that enable you to determine
   what items are selected within this collection. The <see cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/> class provides properties and methods
   for determining what items are selected in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/>, while the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> class enables you to determine what indexes
   within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> are
   selected. In addition to selection collection classes there are also two classes
   that enable you to determine what items are checked (when the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control is set to <see langword="true"/>) within this collection.</para>
			<para>There are a number of ways to add items to the
   collection. The <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/>
   method adds a single item to the collection. To add a number of items to
   the collection, you create an array of items and pass it to the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method. If you
   want to insert an item at a specific location in the collection, you can
   use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>
   method. To
   remove items, you can use either the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/> method or the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt"/> method if you know where the item is
   located in the collection. The <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Clear"/> method enables you to remove all items
   from the collection instead of using the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/> method to remove a single item at a
   time.</para>
			<para>In addition to methods and properties for adding and
   removing items, the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> also provides methods to find
   items in the collection. The <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Contains"/> method enables you to determine
   whether an item is a member of the collection. Once you know that the item is located
   in the collection, you can use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.IndexOf"/> method to
   determine where the item is located in the
   collection. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedListViewItemCollection"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.ListViewItemCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.ListView"/> that owns the collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without associating it with a
   <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
	</doc>
	<doc for="ListView.ListViewItemCollection.this">
		<summary>
			<para> Gets or sets the item at the specified index within the collection.</para>
		</summary>
		<param name="displayIndex">The index of the item in the collection to get or set. </param>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem"/> representing the item located at the specified index within the
   collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> .</exception>
		<remarks>
			<para>You can use this method to obtain the <see cref="System.Windows.Forms.ListViewItem"/> stored at a specific location in
   the collection. To determine the index of a specific item in the collection,
   use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.IndexOf"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.IndexOf"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Add2">
		<summary>
			<para>Adds an existing <see cref="System.Windows.Forms.ListViewItem"/>
object
to the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.ListViewItem"/> to add to the collection. </param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/> that was added
   to the collection.</para>
		</returns>
		<remarks>
			<para>You can use this version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method
   to add an existing <see cref="System.Windows.Forms.ListViewItem"/> to
   the collection. This version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method is typically used to reuse
   items from other <see cref="System.Windows.Forms.ListView"/> controls or if the <see cref="System.Windows.Forms.ListViewItem"/> was created manually before
   adding it to the collection. If you want to create a new <see cref="System.Windows.Forms.ListViewItem"/> instead of using an existing item, use the
   other versions of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method.</para>
			<para>If the <see cref="System.Windows.Forms.ListView.Sorting"/> property of the <see cref="System.Windows.Forms.ListView"/> is set to <see langword="true"/>, the item is inserted into the list alphabetically. Otherwise, the item is inserted at the end of the list. To insert an item into the <see cref="System.Windows.Forms.ListView"/> at a specific position, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>method. To add a set of items to the control in a single operation, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method. If you want to use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method to add a large number of items to the control, use the <see cref="System.Windows.Forms.ListView.BeginUpdate"/> and <see cref="System.Windows.Forms.ListView.EndUpdate"/> methods to prevent the <see cref="System.Windows.Forms.ListView"/> from repainting until all items are added. When adding items to a <see cref="System.Windows.Forms.ListView"/>, it is more efficient to sort the items first and then add new items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListView.Sorting"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Add">
		<overload>
			<para>Adds an item to the collection of items.</para>
		</overload>
		<summary>
			<para> Adds an item to the collection
      with the specified text.</para>
		</summary>
		<param name="text">The text to display for the item. </param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/>
that was added to the collection.</para>
		</returns>
		<remarks>
			<para>You can use this version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method to
   create a new <see cref="System.Windows.Forms.ListViewItem"/> to add
   to the <see cref="System.Windows.Forms.ListView"/> control. The text of the new <see cref="System.Windows.Forms.ListViewItem"/> added to the control is based on
   the <paramref name="text"/>
   parameter. If you want to specify an image for the item, use the
   version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method
   that
   accepts an image index as a parameter. If you have an existing <see cref="System.Windows.Forms.ListViewItem"/> that you want to add to the collection,
   use the version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method that accepts a <see cref="System.Windows.Forms.ListViewItem"/>
   as its parameter.</para>
			<para>If the <see cref="System.Windows.Forms.ListView.Sorting"/> property of the <see cref="System.Windows.Forms.ListView"/>
is set to <see langword="true"/>, the item is inserted into the list
alphabetically. Otherwise, the item is inserted at the end of the list. To
insert an item into the <see cref="System.Windows.Forms.ListView"/> at a specific position, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>method. To add a set of items to
the control in a single operation, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method. If you want to use the
<see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method to add a large number of 
items to the control, use the <see cref="System.Windows.Forms.ListView.BeginUpdate"/> and <see cref="System.Windows.Forms.ListView.EndUpdate"/> methods to prevent the <see cref="System.Windows.Forms.ListView"/>
from repainting until all items are
added. When adding items to a <see cref="System.Windows.Forms.ListView"/>, it
is more efficient to sort the items first and then add new items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListView.Sorting"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Add1">
		<summary>
			<para> Adds an item to the collection with the specified text and image.</para>
		</summary>
		<param name="text">The text of the item. </param>
		<param name="imageIndex">The index of the image to display for the item. </param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/> that was added to the collection.</para>
		</returns>
		<remarks>
			<para>You can use this version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method to
   create a new <see cref="System.Windows.Forms.ListViewItem"/>
   to add to the <see cref="System.Windows.Forms.ListView"/> control. The text of the new <see cref="System.Windows.Forms.ListViewItem"/> added
   to the control is based on the <paramref name="text"/> parameter. You can also specify an image to
   use for the item by passing an index into the <see cref="System.Windows.Forms.ImageList"/> assigned to the <see cref="System.Windows.Forms.ListView.LargeImageList" qualify="true"/> and <see cref="System.Windows.Forms.ListView.SmallImageList" qualify="true"/> properties (typically these two properties
   use the same index positions for related images to display) to the
<paramref name="imageIndex"/> parameter.
   If you do not want to specify an
   image index for the item, use the version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method
   that only accepts a string as a parameter. If you have an existing <see cref="System.Windows.Forms.ListViewItem"/> that you want to add to the collection,
   use the version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method
   that accepts a <see cref="System.Windows.Forms.ListViewItem"/> as its parameter.</para>
			<para>If the <see cref="System.Windows.Forms.ListView.Sorting"/> property of the <see cref="System.Windows.Forms.ListView"/> is set to <see langword="true"/>, the item is inserted into the list
alphabetically. Otherwise, the item is inserted at the end of the list. To
insert an item into the <see cref="System.Windows.Forms.ListView"/> at a
specific position, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>method. To
add a set of items to the control in a single operation, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method. If
you want to use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method to
add a large number of items to the control, use the <see cref="System.Windows.Forms.ListView.BeginUpdate"/> and <see cref="System.Windows.Forms.ListView.EndUpdate"/> methods to prevent the <see cref="System.Windows.Forms.ListView"/>
from repainting until all items are added.
When adding items to a <see cref="System.Windows.Forms.ListView"/>, it
is more efficient to sort the items first and then add new items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListView.Sorting"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.AddRange">
		<overload>
			<para>Adds an array of items to the collection.</para>
		</overload>
		<summary>
			<para>Adds an array of <see cref="System.Windows.Forms.ListViewItem"/> objects to the collection.</para>
		</summary>
		<param name="values">An array of <see cref="System.Windows.Forms.ListViewItem"/> objects to add to the collection.</param>
		<remarks>
			<para>This method removes all existing items from the <see cref="System.Windows.Forms.ListView"/> control before 
   inserting the new items. You can use this method to reuse items from a
   different <see cref="System.Windows.Forms.ListView"/>
   
   control. If you want to add a single <see cref="System.Windows.Forms.ListViewItem"/> , use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method. You can also use the
<see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/> method if you want to add a 
   single <see cref="System.Windows.Forms.ListViewItem"/> at a specific position
   in the collection.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Clear">
		<summary>
			<para>Removes all items from the collection.</para>
		</summary>
		<remarks>
			<para>When you remove items from the collection, all information
      about the deleted items is lost. To remove a single item from the collection use
      the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/> or <see cref="System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt"/>method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Contains">
		<summary>
			<para>Determines whether the specified item is located in the collection.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the item is contained in the
   collection; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Contains"/> method enables you to determine whether a
<see cref="System.Windows.Forms.ListViewItem"/> 
is a member of the collection. Once you know that the item is the
collection, you can use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.IndexOf"/> method to
determine the position of the item in the collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.IndexOf"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator to use to iterate through the
      item collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> that represents the item
   collection.</para>
		</returns>
	</doc>
	<doc for="ListView.ListViewItemCollection.IndexOf">
		<summary>
			<para>Returns the index within the collection of the specified item.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to locate in the collection.</param>
		<returns>
			<para>The zero-based index of the item's location in the 
      collection. If the item is not located in the collection, the
      return value is negative one (-1).</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ListViewItemCollection.IndexOf"/> method enables you to determine the 
   position of an item in the collection. To determine whether an item is contained
   in the collection before calling this method, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Contains"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Contains" qualify="true"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Insert1">
		<summary>
			<para>Creates a new item and inserts it into the collection at the specified index.</para>
		</summary>
		<param name="index">The zero-based index location where the item is inserted.</param>
		<param name="text">The text to display for the item.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/> that was inserted into the collection.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> .</exception>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/> method allows you to insert a new item at a specific position in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/>. The
   text specified in the <paramref name="text"/> parameter is used to create a new
<see cref="System.Windows.Forms.ListViewItem"/> that is then inserted into the 
<see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> 
at
the specified location.</para>
			<para> To
   add an item without specifying a specific position in the collection, use the
<see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method. If 
   you want to add an array of items to the collection, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method.
   You can use this method if you want to insert a new item into an existing
   collection of items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Insert">
		<overload>
			<para> Inserts an item into the collection at the specified index.</para>
		</overload>
		<summary>
			<para>Inserts an existing <see cref="System.Windows.Forms.ListViewItem"/> into the
   collection at the specified index.</para>
		</summary>
		<param name="index">The zero-based index location where the item is inserted.</param>
		<param name=" item">The <see cref="System.Windows.Forms.ListViewItem"/> that represents the item to insert.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/> that was inserted into the collection.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> .</exception>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/> method allows you to insert an existing
<see cref="System.Windows.Forms.ListViewItem"/> at a specific position in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> 
.</para>
			<para> To add an item without specifying a
   specific position in the collection to add the item, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method. If you want to add an
   array of items to the collection, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/> method.
   You can use this method if you want to insert a new item into an existing
   collection of items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Insert2">
		<summary>
			<para> Creates a new item with the specified image index and inserts it into the
      collection at the specified index.</para>
		</summary>
		<param name="index">The zero-based index location where the item is inserted.</param>
		<param name="text">The text to display for the item.</param>
		<param name=" imageIndex">The index of the image to display for the item.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/> that was inserted into the collection.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> .</exception>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/> method allows you to insert a new item at a specific position in the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/>. The text specified in the <paramref name="text"/> parameter is used to create a new <see cref="System.Windows.Forms.ListViewItem"/> that is then inserted into the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> at
   the specified location. You can also use this version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/> method to specify an image to display for
   the item by passing an index into the <see cref="System.Windows.Forms.ImageList"/> assigned to the <see cref="System.Windows.Forms.ListView.LargeImageList" qualify="true"/> and <see cref="System.Windows.Forms.ListView.SmallImageList" qualify="true"/> properties (typically these two
   properties use the same index positions for related images to display) to the
<paramref name="imageIndex"/> parameter. If you do not want to specify an image index 
   for the item, use the other version of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Insert"/>
   method that accepts a string
   as a parameter.</para>
			<para> To
   add an item without specifying a specific position in the collection, use the
<see cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/> method. If 
   you want to add an array of items to the collection, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
   method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.AddRange"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.RemoveAt">
		<summary>
			<para>Removes the item at the specified index within the
      collection.</para>
		</summary>
		<param name="index">The zero-based index of the item to remove.</param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> .</exception>
		<remarks>
			<para>When you remove an item from the collection, the indexes
      change for subsequent items in the collection. All information about the removed
      item is deleted. You can use this method to remove a specific item from the
      collection by specifying the index of the item to remove from the collection. To
      specify the item to remove instead of the index to the item, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/> method. To remove all items from
      the collection, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Clear"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Clear"/>
	</doc>
	<doc for="ListView.ListViewItemCollection.Remove">
		<summary>
			<para>Removes the specified item from the collection.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem"/> representing the item to remove from the collection.</param>
		<exception cref="System.ArgumentException">The <see cref="System.Windows.Forms.ListViewItem"/> assigned to the <paramref name="item"/> parameter is <see langword="null"/> . </exception>
		<remarks>
			<para> When you remove an item from the
      collection, the indexes change for subsequent items in the collection. All information
      about the removed item is deleted. You can use this method to remove a specific
      item from the collection by specifying the actual item to remove. To specify the
      index of the item to remove instead of the item itself, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt"/> method. To remove all items from
      the collection, use the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Clear"/>method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.RemoveAt"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Clear"/>
	</doc>
	<doc for="ListView.CreateParams">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.CreateHandle">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.OnHandleCreated">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.RealizeProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.ToString">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.WndProc">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.BackgroundImage">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.Text">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.OnHandleDestroyed">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListView.SelectedIndexCollection">
		<summary>
			<para>Represents the collection containing the indexes to the
      selected items in a list view control.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> stores the indexes to the selected items in a <see cref="System.Windows.Forms.ListView"/> control. The indexes stored in the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> are index positions within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> . The <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores all items displayed in the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<para>The following table is an example of how the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> stores the items of the <see cref="System.Windows.Forms.ListView"/> as well as their selection states in an example <see cref="System.Windows.Forms.ListView"/> .</para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Item</description>
					<description>Selection state in the ListView</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>Item1</description>
					<description>Unselected</description>
				</item>
				<item>
					<term> 1</term>
					<description>Item2</description>
					<description>Selected</description>
				</item>
				<item>
					<term> 2</term>
					<description>Item3</description>
					<description>Unselected</description>
				</item>
				<item>
					<term> 3</term>
					<description>Item4</description>
					<description>Selected</description>
				</item>
				<item>
					<term> 4</term>
					<description>Item5</description>
					<description>Selected</description>
				</item>
			</list>
			<para>Based on the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> example in the previous table, the following table demonstrates how the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> would appear. </para>
			<list type="table">
				<listheader>
					<term>Index</term>
					<description>Index of Selected Item in
         ListViewItemCollection</description>
				</listheader>
				<item>
					<term> 0</term>
					<description>1</description>
				</item>
				<item>
					<term> 1</term>
					<description>3</description>
				</item>
				<item>
					<term> 2</term>
					<description>4</description>
				</item>
			</list>
			<para>You can use the properties and methods of this class to perform a variety of tasks with the collection. The <see cref="System.Windows.Forms.ListView.SelectedIndexCollection.Contains"/> method enables you to determine whether an index position from the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> is one of the indexes stored in the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/>. Once you know that the item
is in the collection, you can use the <see cref="System.Windows.Forms.ListView.SelectedIndexCollection.IndexOf"/> method to the position of the index in the
<see cref="System.Windows.Forms.ListView.SelectedIndexCollection"/> . </para>
		</remarks>
	</doc><doc for="ListView.BackgroundImageChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListView.TextChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListView.OnPaint">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListView.AfterLabelEdit">
		<summary>
			<para> Occurs when the label for an item is edited by the user.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event occurs when the user finishes modifying
   the text for an item. The new string that the user types for the item
   is passed to the event, and the event handler can reject the change. If the event
   handler rejects the change, the text reverts to the text as it was before the
   user began editing the item. In order for the <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event to be raised, the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control must be set to <see langword="true"/>. You can create an event
   handler for the <see cref="System.Windows.Forms.ListView.BeforeLabelEdit"/> event to perform tasks before the user
   edits the text of an item.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event to restrict a newly edited label to
   characters in the alphabet. The example uses the <see cref="System.Text.ASCIIEncoding"/>
   class to obtain the ASCII character code of each character of the
   new label. If the character falls between the ASCII codes that represent numbers,
   the new label cannot be applied to the item. This example assumes that you have
   created a <see cref="System.Windows.Forms.ListView"/> control on a form and added items to it.
   The example also assumes that you have connected the <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event to the event handler defined in the
   example code. In order to use the <see cref="System.Text.ASCIIEncoding"/> class, your file must include the
<see cref="System.Text"/> 
namespace.</para>
			<codelink SampleID="ListView.AfterLabelEdit" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.OnAfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.ListView.BeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.LabelEditEventHandler"/>
	</doc>
	<doc for="ListView.OnAfterLabelEdit">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.LabelEditEventArgs"/> that contains the event data. </param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnAfterLabelEdit"/> method also allows derived
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnAfterLabelEdit"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnAfterLabelEdit"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event to restrict a newly edited label to
   characters in the alphabet. The example uses the <see cref="System.Text.ASCIIEncoding"/>
   class to obtain the ASCII character code of each character of the
   new label. If the character falls between the ASCII codes that represent numbers,
   the new label cannot be applied to the item. This example assumes that you have
   created a <see cref="System.Windows.Forms.ListView"/> control on a form and added items to it.
   The example also assumes that you have connected the <see cref="System.Windows.Forms.ListView.AfterLabelEdit"/> event to the event handler defined in the
   example code. In order to use the <see cref="System.Text.ASCIIEncoding"/> class, your file must include the
<see cref="System.Text"/> 
namespace.</para>
			<codelink SampleID="ListView.AfterLabelEdit" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.AfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.LabelEditEventArgs"/>
	</doc>
	<doc for="ListView.ColumnClick">
		<summary>
			<para>Occurs when the user clicks a column header within the list view control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ColumnClick"/> event occurs when the user clicks one of
   the column headers in a details view of the items in a <see cref="System.Windows.Forms.ListView"/>
   control (when the <see cref="System.Windows.Forms.ListView.View"/> property is set to
<see langword="View.Details"/>). The <see cref="System.Windows.Forms.ListView.ColumnClick"/> event it typically 
   handled to sort the items in the <see cref="System.Windows.Forms.ListView"/> using the clicked column
   as the column to sort by.</para>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/>
control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class
called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/>
comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the
<see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> 
property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods
defined in <c>ListViewItemComparer</c> to perform the sort
of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.OnColumnClick"/>
	</doc>
	<doc for="ListView.OnColumnClick">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.ColumnClickEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.ListView.OnColumnClick"/> method also allows derived
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.ListView.OnColumnClick"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.ListView.OnColumnClick"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/> control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/> comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods defined in <c>ListViewItemComparer</c> to perform the sort of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ColumnClick"/>
		<seealso cref="System.Windows.Forms.ColumnClickEventArgs"/>
	</doc>
	<doc for="ListView.Activation">
		<summary>
			<para> Gets or sets the type of action the user must take to
      activate an item.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ItemActivation"/>values. The default is
<see langword="ItemActivation.Standard"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is not one of the <see cref="System.Windows.Forms.ItemActivation"/> members.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.Activation"/> property allows you to specify
   how the user will activate an item in the <see cref="System.Windows.Forms.ListView"/> control. Activating an item in a <see cref="System.Windows.Forms.ListView"/>
   is different from simply selecting an item. When an item is selected, an action
   is typically performed in an event handler for the <see cref="System.Windows.Forms.ListView.ItemActivate"/> event. For example, when an item
   is activated you might open a file or display a dialog box that allows the item
   to be edited. Typically, an item is double-clicked by the user to activate it. If
   the <see cref="System.Windows.Forms.ListView.Activation"/> property is set to
<see langword="ItemActivation.OneClick"/> , clicking the item once activates 
   it. Setting the <see cref="System.Windows.Forms.ListView.Activation"/> property to
<see langword="ItemActivation.TwoClick"/> is 
   different from the standard double-click because the two clicks can have any duration between
   
   them.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.ListView.Activation"/> property is set
   to <see langword="ItemActivation.OneClick"/> or
<see langword="ItemActivation.TwoClick"/>, label editing will not be allowed 
   regardless of the value of the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ItemActivation"/>
		<seealso cref="System.Windows.Forms.ListView.ItemActivate"/>
	</doc>
	<doc for="ListView.ListViewItemSorter">
		<summary>
			<para>Gets or sets the sorting comparer for the control.</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.IComparer"/> that
   represents the sorting comparer for the control.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/>
property allows you to specify the object that
performs the sorting of items in the <see cref="System.Windows.Forms.ListView"/>. You can use the
<see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property in combination with the 
<see langword="Sort"/> method to perform custom sorting. For example, you could 
create a class (that implements the <see cref="System.Collections.IComparer"/> interface) to
support column sorting in the <see cref="System.Windows.Forms.ListView"/> control. If an
instance of the class is assigned to the
<see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property and the <see langword="Sort"/>
method is called, you can then create code in the event handler for the
<see cref="System.Windows.Forms.ListView.ColumnClick"/> event to perform sorting 
based on the column that was clicked. </para>
			<note type="note">
   Setting the value of the <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property causes the <see cref="System.Windows.Forms.ListView.Sort"/> method to be called
   automatically.
</note>
		</remarks>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/>
control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class
called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/>
comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the
<see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> 
property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods
defined in <c>ListViewItemComparer</c> to perform the sort
of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnClick"/>
	</doc>
	<doc for="ListView.ColumnHeaderCollection">
		<summary>
			<para>Represents the collection of column headers in a <see cref="System.Windows.Forms.ListView"/> control.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> class stores the column headers that are displayed in the <see cref="System.Windows.Forms.ListView"/> control when the
<see cref="System.Windows.Forms.ListView.View"/> property is set to 
<see langword="View.Details"/>. The <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> stores <see cref="System.Windows.Forms.ColumnHeader"/> objects that define the text to display 
   for a column as well as how the column header is displayed in the <see cref="System.Windows.Forms.ListView"/>
   control when displaying columns. When a <see cref="System.Windows.Forms.ListView"/>
   displays columns, the items and their subitems are displayed in their
   own columns. To specify which columns subitem data is displayed under, see the
<see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> class.</para>
			<para>There are a number of ways to add column headers to the
   collection. The <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/>
   method adds a single column header to the collection. To add a
   number of column headers to the collection, you create an array of <see cref="System.Windows.Forms.ColumnHeader"/> objects and pass it to the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/> method. If you want to insert a
   column header at a specific location in the collection, you can use the
<see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method. To remove column headers, 
   you can use either the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Remove"/> method or the
<see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.RemoveAt"/> method if you know where 
   the column header is located in the collection. The <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Clear"/> method allows you to remove all
   column headers from the collection instead of using the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Remove"/> method to remove a single column header at a time.</para>
			<para>In addition to methods and properties for adding and
   removing column headers, the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> also provides methods to find column
   headers in the collection. The <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Contains"/> method enables you to determine
   whether a column header is a member of the collection. Once you know that the
   column header is located in the collection, you can use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.IndexOf"/> method to determine where the column header is located in the collection. </para>
		</remarks>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/>
control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class
called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/>
comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the
<see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> 
property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods
defined in <c>ListViewItemComparer</c> to perform the sort
of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ListView.ColumnHeaderCollection.Add1">
		<summary>
			<para>Adds an existing <see cref="System.Windows.Forms.ColumnHeader"/> to the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.ColumnHeader"/> to add to the collection.</param>
		<returns>
			<para>The zero-based index into the collection where the item
      was added.</para>
		</returns>
		<remarks>
			<para>You can use this version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method to
   add an existing <see cref="System.Windows.Forms.ColumnHeader"/> to
   the collection. If you want to create a new <see cref="System.Windows.Forms.ColumnHeader"/>
   at the time you add it to the collection, you can use
   the other version of the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Add"/> method.</para>
			<para> When column headers are added, they are added to the end of
   the collection. To insert a column header into the collection at a specific
   position, use the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/> method. To
   add a set of column headers to the collection in a single operation, use the
<see cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/> method. </para>
		</remarks>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/> control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/> comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods defined in <c>ListViewItemComparer</c> to perform the sort of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListView.ColumnHeaderCollection.AddRange"/>
	</doc>
	<doc for="ListView.TopItem">
		<summary>
			<para>Gets the first visible item in the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem"/> that represents the first visible item in
   the control.</para>
		</value>
		<remarks>
			<para>Initially, the item with the index position of zero
      (0) is at the top of the <see cref="System.Windows.Forms.ListView"/> control. If the <see cref="System.Windows.Forms.ListView"/>
      control contents are scrolled, a different item can be at the top of the
      control. You can use this property to determine which item is visible at the top
      of the <see cref="System.Windows.Forms.ListView"/> control. To position a specific
      item in the visible region of the control, use the <see cref="System.Windows.Forms.ListView.EnsureVisible"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
		<seealso cref="System.Windows.Forms.ListView.EnsureVisible"/>
	</doc>
	<doc for="ListView.Sort">
		<summary>
			<para>Sorts the items of the list view.</para>
		</summary>
		<remarks>
			<para>Typically items are sorted using the <see cref="System.Windows.Forms.ListView.Sorting"/> property, which sorts items based 
   on the item text. If you want to sort the items in the <see cref="System.Windows.Forms.ListView"/>
   based on subitem text, you would use the <see cref="System.Windows.Forms.ListView.Sort"/> method. The <see cref="System.Windows.Forms.ListView.Sort"/> method uses the <see cref="System.Collections.IComparer"/>specified in the <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/>
   property to perform a manual sort of the items in the <see cref="System.Windows.Forms.ListView"/> . See the example for more
   information on performing manual sorting of items. </para>
		</remarks>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/>
control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class
called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/>
comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the
<see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> 
property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods
defined in <c>ListViewItemComparer</c> to perform the sort
of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemSorter"/>
	</doc>
	<doc for="ListView.ItemCheck">
		<summary>
			<para>Occurs when the check state of an item changes.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView.ItemCheck"/> event occurs when the check state of an
   item changes. The <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property must be set to true in order for
   check boxes to be displayed next to each item in the <see cref="System.Windows.Forms.ListView"/>
   control. You can create an event handler for the <see cref="System.Windows.Forms.ListView.ItemCheck"/> event to perform tasks such
   as changing the state of an item's icon or another application-specific task each
   time an item is checked in the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.Control.Visible"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control is set to <see langword="false "/>at the time the control is
   created, the <see cref="System.Windows.Forms.ListView.ItemCheck"/> event is not raised. Once the
   control is visible, the event is raised regardless of the state of the <see cref="System.Windows.Forms.Control.Visible"/>
   property.
</note>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.OnItemCheck"/>
		<seealso cref="System.Windows.Forms.ItemCheckEventHandler"/>
	</doc>
</docs>
