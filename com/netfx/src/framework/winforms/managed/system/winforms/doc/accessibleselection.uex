<docs>
	<doc for="AccessibleSelection.None">
		<summary>
			<para>
       The selection or focus of an object is unchanged.
    </para>
		</summary>
	</doc>
	<doc for="AccessibleSelection.TakeFocus">
		<summary>
			<para>
       Assigns focus to an object and makes
       it the anchor, which is the starting point for
       the selection. Can be combined with <see langword="TakeSelection"/>,
    <see langword="ExtendSelection"/>, <see langword="AddSelection"/>, or 
    <see langword="RemoveSelection"/>.
    </para>
		</summary>
	</doc>
	<doc for="AccessibleSelection.ExtendSelection">
		<summary>
			<para>
       Selects all objects between the anchor and the selected object.
    </para>
		</summary>
	</doc>
	<doc for="AccessibleSelection.AddSelection">
		<summary>
			<para>
       Adds the object to the selection.
    </para>
		</summary>
	</doc>
	<doc for="AccessibleSelection.RemoveSelection">
		<summary>
			<para>
       Removes the object from the selection.
    </para>
		</summary>
	</doc>
	<doc for="AccessibleSelection.TakeSelection">
		<summary>
			<para> Selects the object and deselects all other objects in the container.
 </para>
		</summary>
	</doc><doc for="AccessibleSelection">
		<summary>
			<para> Specifies how an accessible object is selected or receives focus.
      </para>
		</summary>
		<remarks>
			<para> A focused object is the one object that receives
      keyboard input. The object with the keyboard focus is either the active window
      or a child object of the active window. A selected object is marked
      to participate in some type of group operation.
      </para>
			<para> This enumeration is used by <see cref="System.Windows.Forms.AccessibleObject.Select" qualify="true"/>.
   </para>
			<para>For additional information on the accessibility application, search for "Microsoft Active Accessibility" in the
   Microsoft Developer Network (MSDN) library.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the creation of an
      accessibility-aware chart control, using the <see cref="System.Windows.Forms.AccessibleObject"/> and <see cref="System.Windows.Forms.Control.ControlAccessibleObject"/> classes to expose accessible information.
      The control plots two curves along with a legend. The <c>ChartControlAccessibleObject</c> class, which derives
   from <see langword="ControlAccessibleObject"/>, is used in the <see cref="System.Windows.Forms.Control.CreateAccessibilityInstance"/> method to provide custom accessible
   information for the chart control. Since the chart legend is not an actual
<see cref="System.Windows.Forms.Control"/>-based control, but instead is drawn by the 
   chart control, it does not any built-in accessible information. Because of this,
   the <c>ChartControlAccessibleObject</c> class overrides the <see cref="System.Windows.Forms.AccessibleObject.GetChild"/> method to return the <c>CurveLegendAccessibleObject</c> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.</para>
			<para>This code excerpt demonstrates using the <see cref="System.Windows.Forms.AccessibleSelection"/> enumeration with the <see cref="System.Windows.Forms.AccessibleObject.Select"/> method. See the <see cref="System.Windows.Forms.AccessibleObject"/> class overview for the complete code example. </para>
			<codelink SampleID="System.Windows.Forms.AccessibleObject" SnippetID="4"/>
		</example>
		<seealso cref="System.Windows.Forms.AccessibleEvents"/>
		<seealso cref="System.Windows.Forms.AccessibleNavigation"/>
		<seealso cref="System.Windows.Forms.AccessibleObject"/>
		<seealso cref="System.Windows.Forms.AccessibleRole"/>
		<seealso cref="System.Windows.Forms.AccessibleStates"/>
	</doc>
</docs>
