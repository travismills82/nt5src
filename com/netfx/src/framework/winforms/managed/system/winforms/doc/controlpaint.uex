<docs>
	<doc for="ControlPaint.BorderStyleToDashStyle">
		<summary>
      Draws a border of the specified style and color to the given graphics.
 </summary>
		<param name="borderStyle">
      The style of border to draw.
 </param>
	</doc>
	<doc for="ControlPaint.DrawFlatCheckBox">
		<summary>
     Draws a flat checkbox.
 </summary>
	</doc>
	<doc for="ControlPaint.DrawFrameControl">
		<summary>
     Draws a win32 frame control.
 </summary>
	</doc>
	<doc for="ControlPaint.GetActiveBrush">
		<summary>
      Retrieves the brush used to draw active objects.
 </summary>
		<param name="backColor">
      The background the brush is going to be drawn against.
 </param>
	</doc>
	<doc for="ControlPaint.GetFocusPen">
		<summary>
      Retrieves the pen used to draw a focus rectangle around a control.  The focus
      rectangle is typically drawn when the control has keyboard focus.
 </summary>
		<param name="backColor">
      The background the pen is going to be drawn against.
 </param>
		<param name="odds">
      Used to get "square" corners on a focus rectangle. If odds is false, the pen
 will draw pixels whose x + y is even; if odds is true, the pen will draw pixels
 whose x + y is odd.
 </param>
	</doc>
	<doc for="ControlPaint.GetSelectedBrush">
		<summary>
      Retrieves the brush used to draw selected objects.
 </summary>
		<param name="backColor">
      The background the brush is going to be drawn against.
 </param>
	</doc>
	<doc for="ControlPaint.InfinityToOne">
		<summary>
      Converts an infinite value to "1".
 </summary>
	</doc>
	<doc for="ControlPaint.InvertColor">
		<summary>
      Inverts the given color.
 </summary>
	</doc>
	<doc for="ControlPaint.ReplaceTransparency">
		<summary>
      Creates a new bitmap that is like the old bitmap, only with the specified background color
      instead of transparency.
 </summary>
	</doc>
	<doc for="ControlPaint.HLSColor">
		<summary>
     Logic copied from Win2K sources to copy the lightening and
     darkening of colors.
 </summary>
	</doc>
	<doc for="ControlPaint.HLSColor.HLSColor">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.Hue">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.Luminosity">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.Saturation">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.Darker">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.Lighter">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.NewLuma">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.NewLuma1">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.ColorFromHLS">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.HLSColor.HueToRGB">
		<summary>
		</summary>
	</doc>
	<doc for="ControlPaint.CreateHBitmap16Bit"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ControlPaint.CreateHBitmapTransparencyMask"><nodoc/>
		<summary>
			<para>Creates a color mask for the specified bitmap that
      indicates which color should be displayed as transparent. </para>
		</summary>
		<param name="bitmap">The <see cref="System.Drawing.Bitmap"/> to create the trancparency mask for.</param>
		<returns>
			<para>The handle to the <see cref="System.Drawing.Bitmap"/> mask.</para>
		</returns>
		<remarks>
			<para>You are responsible for de-allocating the bitmap with
      Windows.DeleteObject(handle). </para>
		</remarks>
	</doc><doc for="ControlPaint.CreateHBitmapColorMask">
		<nodoc/>
		<summary>
			<para>Creates a Win32 HBITMAP out of the image. You are responsible for
      de-allocating the HBITMAP with Windows.DeleteObject(handle).
      If the image uses transparency, the background will be filled with the specified color.</para>
		</summary>
	</doc><doc for="ControlPaint.ContrastControlDark">
		<summary>
			<para>Gets the color to use as the
   <see cref="System.Drawing.SystemColors.ControlDark"/> color.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Color"/> to use as the <see cref="System.Drawing.SystemColors.ControlDark"/> color.</para>
		</value>
		<remarks>
			<para>If the user has enabled the <see cref="System.Windows.Forms.SystemInformation.HighContrast"/> mode,
   this property is set to <see cref="System.Drawing.SystemColors.WindowFrame" qualify="true"/> ; otherwise, it is set to
<see cref="System.Drawing.SystemColors.ControlDark" qualify="true"/> .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.SystemInformation"/>
		<seealso cref="System.Drawing.SystemColors"/>
	</doc><doc for="ControlPaint.Dark">
		<overload>
			<para>Creates a new dark color object for the control.</para>
		</overload>
		<summary>
			<para>Creates a new dark color object for the control from the specified color and darkens it by the specified percentage.</para>
		</summary>
		<param name="baseColor">The <see cref="System.Drawing.Color"/> to be darkened.</param>
		<param name="percOfDarkDark">The percentage to darken the specified <see cref="System.Drawing.Color"/>.</param>
		<returns>
			<para>A <see cref="System.Drawing.Color"/> that represent the dark color on the control.</para>
		</returns>
		<remarks>
			<para>If the specified <see cref="System.Drawing.Color"/> is one of the <see cref="System.Drawing.SystemColors"/>, the color is converted to a <see cref="System.Drawing.SystemColors.ControlDark" qualify="true"/> color; otherwise, the color's luminosity value is decreased.</para>
		</remarks>
	</doc><doc for="ControlPaint.Dark1">
		<summary>
			<para>Creates a new dark color object for the control from the specified color.</para>
		</summary>
		<param name="baseColor">The <see cref="System.Drawing.Color"/> to be darkened.</param>
		<returns>
			<para>A <see cref="System.Drawing.Color"/> that represents the dark color on the control.</para>
		</returns>
		<remarks>
			<para>If the specified <see cref="System.Drawing.Color"/> is one of
   the <see cref="System.Drawing.SystemColors"/>, the color is converted to a <see cref="System.Drawing.SystemColors.ControlDark" qualify="true"/> color;
   otherwise, the color's luminosity value is decreased.</para>
		</remarks>
	</doc><doc for="ControlPaint.DarkDark">
		<summary>
			<para>Creates a new dark color object for the control from the specified color.</para>
		</summary>
		<param name="baseColor">The <see cref="System.Drawing.Color"/> to be darkened.</param>
		<returns>
			<para>A <see cref="System.Drawing.Color"/> that represents the dark color on the control.</para>
		</returns>
		<remarks>
			<para>If the specified <see cref="System.Drawing.Color"/> is one of the <see cref="System.Drawing.SystemColors"/>, the color is converted to the <see cref="System.Drawing.SystemColors.ControlDarkDark" qualify="true"/> color; otherwise, the color's luminosity value is increased.</para>
		</remarks>
	</doc><doc for="ControlPaint.DrawReversibleLine">
		<summary>
			<para>Draws a reversible line on the screen within the specified starting and
      ending points and with the specified background color.</para>
		</summary>
		<param name="start">The starting <see cref="System.Drawing.Point"/> of the line, in screen coordinates. </param>
		<param name="end">The ending <see cref="System.Drawing.Point"/> of the line, in screen coordinates. </param>
		<param name="backColor">The <see cref="System.Drawing.Color"/> of the background behind the line. </param>
		<remarks>
			<para>The <paramref name="backColor"/> parameter is used to calculate the fill color of the line so that it is always visible against the background.</para>
			<para>The results of this method can be reversed by drawing the same line again. Drawing a line using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.FrameStyle"/>
	</doc><doc for="ControlPaint.FillReversibleRectangle">
		<summary>
			<para> Draws a filled,
      reversible rectangle on the screen.</para>
		</summary>
		<param name="rectangle"><para>The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the rectangle to fill, in screen coordinates. </para></param>
		<param name="backColor">The <see cref="System.Drawing.Color"/> of the background behind the fill. </param>
		<remarks>
			<para>The <paramref name="backColor"/> parameter is used to
   calculate the fill color of the rectangle so that it is always visible against
   the background.</para>
			<para>The results of this method can be reversed by drawing the same rectangle again.
   Drawing a rectangle using this method is similar to inverting a region of the
   screen except that it provides better performance for a wider variety of colors.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.BackColor"/>
	</doc><doc for="ControlPaint.Light">
		<overload>
			<para>Creates a new light color object for the control.</para>
		</overload>
		<summary>
			<para>Creates a new light color object for the control from the specified color and lightens it by the specified percentage.</para>
		</summary>
		<param name="baseColor">The <see cref="System.Drawing.Color"/> to be lightened.</param>
		<param name="percOfLightLight">The percentage to lighten the specified <see cref="System.Drawing.Color"/>.</param>
		<returns>
			<para>A <see cref="System.Drawing.Color"/> that represents the light color on the control.</para>
		</returns>
		<remarks>
			<para>If the specified <see cref="System.Drawing.Color"/> is one of the <see cref="System.Drawing.SystemColors"/>, the color is converted to a <see cref="System.Drawing.SystemColors.ControlLight" qualify="true"/> color; otherwise, the color's luminosity value is decreased.</para>
		</remarks>
	</doc><doc for="ControlPaint.Light1">
		<summary>
			<para>Creates a new light color object for the control from the specified color.</para>
		</summary>
		<param name="baseColor">The <see cref="System.Drawing.Color"/> to be lightened.</param>
		<returns>
			<para>A <see cref="System.Drawing.Color"/> that represents the light color on the control.</para>
		</returns>
		<remarks>
			<para>If the specified <see cref="System.Drawing.Color"/> is one of
   the <see cref="System.Drawing.SystemColors"/>, the color is converted to a <see cref="System.Drawing.SystemColors.ControlLight" qualify="true"/> color;
   otherwise, the color's luminosity value is decreased.</para>
		</remarks>
	</doc><doc for="ControlPaint.LightLight">
		<summary>
			<para>Creates a new light color object for the control from the specified color.</para>
		</summary>
		<param name="baseColor">The <see cref="System.Drawing.Color"/> to be lightened.</param>
		<returns>
			<para>A <see cref="System.Drawing.Color"/> that represents the light color on the control.</para>
		</returns>
		<remarks>
			<para>If the specified <see cref="System.Drawing.Color"/> is one of the <see cref="System.Drawing.SystemColors"/>, the color is converted to the <see cref="System.Drawing.SystemColors.ControlLightLight" qualify="true"/> color; otherwise, the color's luminosity value is increased.</para>
		</remarks>
	</doc><doc for="ControlPaint.DrawBorder">
		<overload>
			<para>Draws a border on a button-style control. </para>
		</overload>
		<summary>
			<para> Draws a border with the specified style and
      color, on the specified graphics surface, and within the specified
      bounds on a button-style control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="bounds">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the border. </param>
		<param name="color">The <see cref="System.Drawing.Color"/> of the border. </param>
		<param name="style">One of the <see cref="System.Windows.Forms.ButtonBorderStyle"/> values that specifies the style of the border. </param>
	</doc>
	<doc for="ControlPaint.DrawBorder1">
		<summary>
			<para> Draws a border on a button-style control with the specified styles, colors, and
      border widths, on the specified graphics surface, and within the specified
      bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="bounds">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the border. </param>
		<param name="leftColor">The <see cref="System.Drawing.Color"/> of the left of the border. </param>
		<param name="leftWidth">The width of the left border. </param>
		<param name="leftStyle">One of the <see cref="System.Windows.Forms.ButtonBorderStyle"/> values that specifies the style of the left border. </param>
		<param name="topColor">The <see cref="System.Drawing.Color"/> of the top of the border. </param>
		<param name="topWidth">The width of the top border. </param>
		<param name="topStyle">One of the <see cref="System.Windows.Forms.ButtonBorderStyle"/> values that specifies the style of the top border. </param>
		<param name="rightColor">The <see cref="System.Drawing.Color"/> of the right of the border. </param>
		<param name="rightWidth">The width of the right border. </param>
		<param name="rightStyle">One of the <see cref="System.Windows.Forms.ButtonBorderStyle"/> values that specifies the style of the right border. </param>
		<param name="bottomColor">The <see cref="System.Drawing.Color"/> of the bottom of the border. </param>
		<param name="bottomWidth">The width of the left border. </param>
		<param name="bottomStyle">One of the <see cref="System.Windows.Forms.ButtonBorderStyle"/> values that specifies the style of the bottom border. </param>
		<seealso cref="System.Windows.Forms.ButtonBorderStyle"/>
	</doc>
	<doc for="ControlPaint.DrawBorder3D">
		<overload>
			<para>Draws a three-dimensional style border on a control.</para>
		</overload>
		<summary>
			<para> Draws a three-dimensional style border on the specified graphics surface and within the specified bounds
      on a control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the border. </param>
		<remarks>
			<para>The <see cref="System.Windows.Forms.Border3DStyle.Etched" qualify="true"/> style is used by default to draw the border.</para>
		</remarks>
		<seealso cref="System.Drawing.Rectangle"/>
		<seealso cref="System.Windows.Forms.Border3DStyle"/>
	</doc>
	<doc for="ControlPaint.DrawBorder3D1">
		<summary>
			<para>Draws a three-dimensional style border with the specified style, on the
      specified graphics surface, and within the specified bounds on a control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the border. </param>
		<param name="style"><para>One of the <see cref="System.Windows.Forms.Border3DStyle"/> values that specifies the style of the border. </para></param>
		<seealso cref="System.Drawing.Rectangle"/>
		<seealso cref="System.Windows.Forms.Border3DStyle"/>
	</doc>
	<doc for="ControlPaint.DrawBorder3D2">
		<summary>
			<para>Draws a three-dimensional style border with the specified style, on the specified
      graphics surface and sides, and within the specified bounds on a
      control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the border. </param>
		<param name="style">One of the <see cref="System.Windows.Forms.Border3DStyle"/> values that specifies the style of the border. </param>
		<param name="sides"><para>One of the <see cref="System.Windows.Forms.Border3DSide"/> values that specifies the side of the rectangle to draw the border on.</para></param>
		<seealso cref="System.Drawing.Rectangle"/>
		<seealso cref="System.Windows.Forms.Border3DStyle"/>
		<seealso cref="System.Windows.Forms.Border3DSide"/>
	</doc>
	<doc for="ControlPaint.DrawBorder3D3">
		<summary>
			<para>Draws a three-dimensional style border on the specified graphics surface and
      within the specified bounds on a control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x"> The x-coordinate of the top left of the border rectangle.</param>
		<param name="y"> The y-coordinate of the top left of the border rectangle.</param>
		<param name="width">The width of the border rectangle.</param>
		<param name="height">The height of the border rectangle.</param>
		<remarks>
			<para>The <see cref="System.Windows.Forms.Border3DStyle.Etched" qualify="true"/> style is used by default to draw the border.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawBorder3D4">
		<summary>
			<para>Draws a three-dimensional style border with the specified style, on the
      specified graphics surface, and within the specified bounds on a control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the top left of the border rectangle.</param>
		<param name="y">The y-coordinate of the top left of the border rectangle.</param>
		<param name="width">The width of the border rectangle.</param>
		<param name="height">The height of the border rectangle.</param>
		<param name="style">One of the <see cref="System.Windows.Forms.Border3DStyle"/> values that specifies the style of the border.</param>
		<seealso cref="System.Windows.Forms.Border3DStyle"/>
	</doc>
	<doc for="ControlPaint.DrawBorder3D5">
		<summary>
			<para>Draws a three-dimensional style border with the specified style, on the specified
      graphics surface and side, and within the specified bounds on a
      control.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the top left of the border rectangle.</param>
		<param name="y">The y-coordinate of the top left of the border rectangle.</param>
		<param name="width">The width of the border rectangle.</param>
		<param name="height">The height of the border rectangle.</param>
		<param name="style">One of the <see cref="System.Windows.Forms.Border3DStyle"/> values that specifies the style of the border.</param>
		<param name="sides">The <see cref="System.Windows.Forms.Border3DSide"/> of the rectangle to draw the border on.</param>
		<seealso cref="System.Windows.Forms.Border3DStyle"/>
		<seealso cref="System.Windows.Forms.Border3DSide"/>
	</doc>
	<doc for="ControlPaint.DrawButton">
		<overload>
			<para>Draws a button control.</para>
		</overload>
		<summary>
			<para>Draws a button control in the specified state, on
      the specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the button. </param>
		<param name="state">A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the button in. </param>
		<seealso cref="System.Windows.Forms.Button"/>
	</doc>
	<doc for="ControlPaint.DrawCaptionButton">
		<overload>
			<para>Draws a caption button control.</para>
		</overload>
		<summary>
			<para>Draws the specified caption button control in the specified state, on the specified
      graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the caption button. </param>
		<param name="button">One of the <see cref="System.Windows.Forms.CaptionButton"/> values that specifies the type of caption button to draw. </param>
		<param name="state">A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the button in. </param>
		<seealso cref="System.Windows.Forms.CaptionButton"/>
	</doc>
	<doc for="ControlPaint.DrawCaptionButton1">
		<summary>
			<para>Draws the specified caption button control in the specified state, on the
      specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> object to draw on. </param>
		<param name="x">The x-coordinate of the top left of the drawing rectangle.</param>
		<param name="y">The y-coordinate of the top left of the drawing rectangle.</param>
		<param name="width">The width of the drawing rectangle.</param>
		<param name="height">The height of the drawing rectangle.</param>
		<param name="button">One of the <see cref="System.Windows.Forms.CaptionButton"/> values that specifies the type of caption button to draw. </param>
		<param name="state">A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the button in. </param>
		<seealso cref="System.Windows.Forms.CaptionButton"/>
	</doc>
	<doc for="ControlPaint.DrawCheckBox">
		<overload>
			<para>Draws a check box control.</para>
		</overload>
		<summary>
			<para>Draws a check box control in the specified state, on the specified graphics
      surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the check box. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the check box in. </para></param>
	</doc>
	<doc for="ControlPaint.DrawCheckBox1">
		<summary>
			<para>Draws a check box control in the specified state, on the specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="width">The width of the check box. </param>
		<param name="height">The height of the check box. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the check box in. </para></param>
	</doc>
	<doc for="ControlPaint.DrawComboButton">
		<overload>
			<para>Draws a drop-down button on a combo box control.</para>
		</overload>
		<summary>
			<para>Draws a drop-down button on a combo box control in the specified state, on the specified graphics
      surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the combo box. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the combo box in. </para></param>
	</doc>
	<doc for="ControlPaint.DrawComboButton1">
		<summary>
			<para>Draws a drop-down button on a combo box control in the specified state, on the specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the top left of the border rectangle.</param>
		<param name="y">The y-coordinate of the top left of the border rectangle.</param>
		<param name="width">The width of the combo box. </param>
		<param name="height">The height of the combo box. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the combo box in. </para></param>
	</doc>
	<doc for="ControlPaint.DrawContainerGrabHandle">
		<summary>
			<para>Draws a container control grab handle glyph on the specified graphics surface and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="bounds">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the grab handle glyph. </param>
		<remarks>
			<para>Grab handles are used by containers to indicate to the user that the user can
      directly manipulate the containers. The manipulation can consist of actions such as
      sizing and moving.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawFocusRectangle">
		<overload>
			<para>Draws a focus rectangle.</para>
		</overload>
		<summary>
			<para> Draws a focus rectangle on the specified graphics surface and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the grab handle glyph. </param>
		<remarks>
			<para>A focus rectangle is a dotted rectangle that Windows uses to indicate what
      control has the current keyboard focus.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawFocusRectangle1">
		<summary>
			<para> Draws a focus rectangle on the specified graphics surface and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the grab handle glyph. </param>
		<param name="foreColor">The <see cref="System.Drawing.Color"/> that is the foreground color of the object to draw the focus rectangle on.</param>
		<param name="backColor">The <see cref="System.Drawing.Color"/> that is the foreground color of the object to draw the focus rectangle on.</param>
		<remarks>
			<para>A focus rectangle is a dotted rectangle that Windows uses to indicate what
      control has the current keyboard focus.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawGrabHandle">
		<summary>
			<para> Draws a standard selection grab handle glyph on the specified graphics surface, within the specified bounds, and in the specified state and style. </para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the grab handle glyph. </param>
		<param name="primary"><para><see langword="true"/> to draw the handle as a primary grab handle; otherwise, <see langword="false"/>.</para></param>
		<param name="enabled"><para><see langword="true"/> to draw the handle in an enabled state; otherwise, <see langword="false"/>.</para></param>
		<remarks>
			<para>Grab handles are used by objects to indicate to the user that the user can directly
      manipulate the object. The manipulation can consist of actions such as
      sizing and moving.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawGrid">
		<summary>
			<para> Draws a grid of one-pixel dots with the specified
      spacing, within the specified bounds, on the specified graphics surface, and in the specified color.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="area">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the grab handle glyph. </param>
		<param name="pixelsBetweenDots">The <see cref="System.Drawing.Size"/> that specified the height and width between the dots of the grid. </param>
		<param name="backColor">The <see cref="System.Drawing.Color"/> of the background behind the grid. </param>
		<remarks>
			<para>The <paramref name="backColor"/> parameter is used to calculate the fill color
   of the dots so that the grid is always visible against the
   background.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawImageDisabled">
		<summary>
			<para>Draws the specified image in a disabled state.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on.</param>
		<param name="image">The <see cref="System.Drawing.Image"/> to draw.</param>
		<param name="x">The x-coordinate of the top left of the border image.</param>
		<param name="y">The y-coordinate of the top left of the border image.</param>
		<param name="background">The <see cref="System.Drawing.Color"/> of the background behind the image. </param>
		<remarks>
			<para>The <paramref name="background"/> parameter is used to calculate the fill color
   of the disabled image so that it is always visible against the
   background.</para>
		</remarks>
		<seealso cref="System.Drawing.Image"/>
	</doc>
	<doc for="ControlPaint.DrawLockedFrame">
		<summary>
			<para> Draws a locked selection frame on the screen
      within the specified bounds and on the specified graphics surface. Specifies whether
      to draw the frame with the primary selected colors.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on.</param>
		<param name="rectangle"><para>The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the frame. </para></param>
		<param name="primary"><para><see langword="true"/> to draw this frame with the colors used for the primary selection; otherwise, <see langword="false"/>.</para></param>
	</doc>
	<doc for="ControlPaint.DrawMenuGlyph">
		<overload>
			<para>Draws a menu glyph on a menu item control.</para>
		</overload>
		<summary>
			<para>Draws the specified menu glyph on a menu item control within the specified
      bounds and on the specified surface.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the glyph. </param>
		<param name="glyph">One of the <see cref="System.Windows.Forms.MenuGlyph"/> values that specifies the image to draw. </param>
		<remarks>
			<para>When owner-drawing <see cref="System.Windows.Forms.MenuItem"/> controls, you need to
   verify property values to determine the correct glyph to draw or remove. For
   example, when the <see cref="System.Windows.Forms.MenuItem.Checked" qualify="true"/> property is set to <see langword="true"/>
   , you need to draw a <see cref="System.Windows.Forms.MenuGlyph.Checkmark"/> glyph on the <see cref="System.Windows.Forms.MenuItem"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.MenuGlyph"/>
	</doc>
	<doc for="ControlPaint.DrawMenuGlyph1">
		<summary>
			<para>Draws the specified menu glyph on a menu item control with the specified
      bounds and on the specified surface.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="width">The width of the menu glyph. </param>
		<param name="height">The height of the menu glyph. </param>
		<param name="glyph">One of the <see cref="System.Windows.Forms.MenuGlyph"/> values that specifies the image to draw. </param>
		<remarks>
			<para>When owner-drawing <see cref="System.Windows.Forms.MenuItem"/> controls, you need to verify property
   values to determine the correct glyph to draw or remove. For example, when the
<see cref="System.Windows.Forms.MenuItem.Checked" qualify="true"/> property is set to 
<see langword="true"/>, you need to draw a <see cref="System.Windows.Forms.MenuGlyph.Checkmark"/> glyph on the 
<see cref="System.Windows.Forms.MenuItem"/>.</para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawMixedCheckBox">
		<overload>
			<para>Draws a three-state check box control.</para>
		</overload>
		<summary>
			<para>Draws a three-state check box control in the specified state, on the specified graphics
      surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> object to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the check box. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the check box in. </para></param>
		<seealso cref="System.Windows.Forms.CheckBox.ThreeState"/>
	</doc>
	<doc for="ControlPaint.DrawMixedCheckBox1">
		<summary>
			<para>Draws a three-state check box control in the specified state, on the specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="width">The width of the check box. </param>
		<param name="height">The height of the check box. </param>
		<param name="state">A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the check box in. </param>
		<seealso cref="System.Windows.Forms.CheckBox.ThreeState"/>
	</doc>
	<doc for="ControlPaint.DrawRadioButton">
		<overload>
			<para>Draws a radio button control.</para>
		</overload>
		<summary>
			<para>Draws a radio button control in the specified state, on the specified graphics
      surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the radio button. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the radio button in. </para></param>
		<seealso cref="System.Windows.Forms.RadioButton"/>
	</doc>
	<doc for="ControlPaint.DrawRadioButton1">
		<summary>
			<para>Draws a radio button control in the specified state, on the specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="width">The width of the radio button. </param>
		<param name="height">The height of the radio button. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the radio button in.</para>
		</param>
	</doc>
	<doc for="ControlPaint.DrawReversibleFrame">
		<summary>
			<para>Draws a reversible frame on the screen within the
      specified bounds, with the specified background color, and in the specified state.</para>
		</summary>
		<param name="rectangle"><para>The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the rectangle to draw, in screen coordinates. </para></param>
		<param name="backColor">The <see cref="System.Drawing.Color"/> of the background behind the frame. </param>
		<param name="style">One of the <see cref="System.Windows.Forms.FrameStyle"/> values that specifies the style of the frame. </param>
		<remarks>
			<para>The <paramref name="backColor"/> parameter is used to calculate the fill color of the frame so that it is always visible against the background.</para>
			<para> The results of this method can be reversed by drawing the same frame again. Drawing a frame using this method is similar to inverting a region of the screen, except that it provides better performance for a wider variety of colors.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.FrameStyle"/>
	</doc>
	<doc for="ControlPaint.DrawScrollButton">
		<overload>
			<para>Draws a scroll button on a scroll bar control.</para>
		</overload>
		<summary>
			<para>Draws the specified scroll button on a scroll bar control
      in the specified state, on the specified graphics surface, and within the
      specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="rectangle">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the glyph. </param>
		<param name="button">One of the <see cref="System.Windows.Forms.ScrollButton"/> values that specifies the type of scroll arrow to draw. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the scroll button in.</para></param>
		<seealso cref="System.Windows.Forms.ScrollButton"/>
		<seealso cref="System.Windows.Forms.ButtonState"/>
		<seealso cref="System.Windows.Forms.ScrollBar"/>
	</doc>
	<doc for="ControlPaint.DrawScrollButton1">
		<summary>
			<para>Draws the specified scroll button on a scroll bar control
      in the specified state, on the specified graphics surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="width">The width of the scroll button. </param>
		<param name="height">The height of the scroll button. </param>
		<param name="button">One of the <see cref="System.Windows.Forms.ScrollButton"/> values that specifies the type of scroll arrow to draw. </param>
		<param name="state"><para>A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the scroll button in.</para></param>
		<seealso cref="System.Windows.Forms.ScrollButton"/>
		<seealso cref="System.Windows.Forms.ButtonState"/>
		<seealso cref="System.Windows.Forms.ScrollBar"/>
	</doc>
	<doc for="ControlPaint.DrawSelectionFrame">
		<summary>
			<para>Draws a standard selection frame in the specified state, on the specified
      graphics surface, with the specified inner and outer dimensions, and with the
      specified background color. </para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="active"><para><see langword="true"/> to draw the selection frame in an active state; otherwise, <see langword="false"/>. </para></param>
		<param name="insideRect">The <see cref="System.Drawing.Rectangle"/> that represents the inner boundary of the selection frame.</param>
		<param name="outsideRect">The <see cref="System.Drawing.Rectangle"/> that represents the outer boundary of the selection frame.</param>
		<param name="backColor">The <see cref="System.Drawing.Color"/> of the background behind the frame. </param>
		<remarks>
			<para> A selection frame is a frame that is drawn around a selected component at
      design time.</para>
			<para>The <paramref name="backColor"/> parameter is used to calculate the fill color of the frame so that it is always visible against the background.</para>
			<para>If the <paramref name="active"/> parameter is set to <see langword="true"/>
, the selection frame is drawn as a set of hatch marks indicating that
the component has been activated; otherwise, the selection frame is drawn with
a dotted pattern or nothing, depending on the implementation. </para>
		</remarks>
	</doc>
	<doc for="ControlPaint.DrawSizeGrip">
		<overload>
			<para>Draws a size grip on a form.</para>
		</overload>
		<summary>
			<para>Draws a size grip on a form with the specified bounds and background color and
      on the specified graphics surface.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="bounds">The <see cref="System.Drawing.Rectangle"/> that represents the dimensions of the size grip. </param>
		<param name="backColor"><para>The <see cref="System.Drawing.Color"/> of the background used to determine the colors of the size grip. </para></param>
		<remarks>
			<para>The <paramref name="backColor"/> parameter is used to calculate the color of
   the size grip so that it is always visible against the background.</para>
			<para> When you define a sizable window, you can include a size grip.
   A size grip is a special handle that enables the user to resize a window. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.Form"/>
		<seealso cref="System.Windows.Forms.SizeGripStyle"/>
	</doc>
	<doc for="ControlPaint.DrawSizeGrip1">
		<summary>
			<para>Draws a size grip on a form with the specified bounds and background color and
      on the specified graphics surface.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="backColor"><para>The <see cref="System.Drawing.Color"/> of the background used to determine the colors of the size grip. </para></param>
		<param name="x">The x-coordinate of the upper left corner of the size grip. </param>
		<param name="y">The y-coordinate of the upper left corner of the size grip. </param>
		<param name="width">The width of the size grip. </param>
		<param name="height">The height of the size grip. </param>
		<remarks>
			<para>The <paramref name="backColor"/> parameter is used to calculate the color of
   the size grip so that it is always visible against the background.</para>
			<para> When you define a sizable window, you can include a size grip.
   A size grip is a special handle that enables the user to resize a window. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.Form"/>
		<seealso cref="System.Windows.Forms.SizeGripStyle"/>
	</doc>
	<doc for="ControlPaint.DrawStringDisabled">
		<summary>
			<para> Draws the specified string in a disabled
      state on the specified graphics surface, within the specified bounds, and
      in the specified font, color, and format.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on.</param>
		<param name="s">The string to draw.</param>
		<param name="font">The <see cref="System.Drawing.Font"/> to draw the string with.</param>
		<param name="color">The <see cref="System.Drawing.Color"/> to draw the string with.</param>
		<param name="layoutRectangle">The <see cref="System.Drawing.RectangleF"/> that represents the dimensions of the string.</param>
		<param name="format">The <see cref="System.Drawing.StringFormat"/> to apply to the string.</param>
	</doc>
	<doc for="ControlPaint">
		<summary>
			<para>Provides methods used to paint common Windows controls and their
      elements.</para>
		</summary>
		<remarks>
			<para>The methods contained in the <see cref="System.Windows.Forms.ControlPaint"/> class allow you to draw your own controls
   or elements of controls. You can control the drawing of your own controls if
   the <see cref="System.Windows.Forms.ControlStyles.UserPaint"/>
   bit is set to <see langword="true"/>
   for the control. You can
   get or set the style bits by calling the <see cref="M:System.Windows.Forms.Control.GetStyle" qualify="true"/> or <see cref="M:System.Windows.Forms.Control.SetStyle" qualify="true"/> methods. You can set multiple
   style bits for any control. The <see cref="System.Windows.Forms.ControlStyles"/> enumeration members can
   be combined with bitwise operations.</para>
		</remarks>
		<example>
			<codelink SampleID="ButtonState" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.Control"/>
		<seealso cref="System.Windows.Forms.ControlStyles"/>
		<keyword term="owner-drawn controls"/>
	</doc>
	<doc for="ControlPaint.DrawButton1">
		<summary>
			<para>Draws a button control in the specified state, on the specified graphics
      surface, and within the specified bounds.</para>
		</summary>
		<param name="graphics">The <see cref="System.Drawing.Graphics"/> to draw on. </param>
		<param name="x">The x-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="y">The y-coordinate of the upper left corner of the drawing rectangle. </param>
		<param name="width">The widthof the button. </param>
		<param name="height">The height of the button. </param>
		<param name="state">A bitwise combination of the <see cref="System.Windows.Forms.ButtonState"/> values that specifies the state to draw the button in. </param>
		<example>
			<codelink SampleID="ButtonState" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.Button"/>
		<seealso cref="System.Windows.Forms.ButtonState"/>
	</doc>
</docs>
