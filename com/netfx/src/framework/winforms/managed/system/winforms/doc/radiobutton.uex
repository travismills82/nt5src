<docs>
	<doc for="RadioButton.AppearanceChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.RadioButton.Appearance"/> property value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.Appearance"/>
	</doc>
	<doc for="RadioButton.Checked">
		<summary>
			<para>Gets or sets a value indicating whether the control is checked.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the check box is checked; otherwise, <see langword="false"/>.</para>
		</value>
		<example>
			<para>The following example evaluates a <see cref="System.Windows.Forms.ListBox"/> selection and the <see cref="System.Windows.Forms.RadioButton.Checked"/> property of a <see cref="System.Windows.Forms.RadioButton"/>. When a specified item is selected from the list box, the <see cref="System.Windows.Forms.RadioButton.PerformClick"/> method of another <see cref="System.Windows.Forms.RadioButton"/> is called. This code assumes that two <see cref="System.Windows.Forms.RadioButton"/> controls and a <see cref="System.Windows.Forms.ListBox"/> have been instantiated on a form.</para>
			<codelink SampleID="Classic RadioButton.Checked Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="RadioButton.CreateParams">
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.TabStop">
		<internalonly/>
		<summary>
			<para>Gets or sets a value indicating whether the user can give the focus to this
       control using the TAB key.
       </para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the user gan give focus to this control using the 
    TAB key; otherwise <see langword="false"/>.</para>
		</value>
	</doc>
	<doc for="RadioButton.TextAlign">
		<internalonly/>
		<summary>
			<para>Gets or sets the alignment of the
       text on the radiobutton control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Drawing.ContentAlignment"/> values. The default is
 <see langword="MiddleLeft"/> .</para>
		</value>
	</doc>
	<doc for="RadioButton.CreateAccessibilityInstance">
		<internalonly/>
		<summary>
			<para>
       Constructs the new instance of the accessibility object for this control. Subclasses
       should not call base.CreateAccessibilityObject.
    </para>
		</summary>
	</doc>
	<doc for="RadioButton.OnHandleCreated">
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.OnClick">
		<summary>
     We override this to implement the autoCheck functionality.
 </summary>
	</doc>
	<doc for="RadioButton.OnEnter">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.PerformAutoUpdates">
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.wipeTabStops">
		<summary>
     Removes tabstops from all radio buttons, other than the one that currently has the focus.
 </summary>
	</doc>
	<doc for="RadioButton.Draw3DLiteBorderAndField">
		<overload>
			<para>Draws a three-dimensional border and background for a popup style radio button 
       control.</para>
		</overload>
		<summary>
			<para>Draws a three-dimensional border and background for a popup 
       style radio button control on the specified surface, within the specified bounds, and with the specified background color.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="field">The <see cref="System.Drawing.Color"/> to draw the background with.</param>
	</doc>
	<doc for="RadioButton.Draw3DLiteBorderAndField1">
		<summary>
			<para>Draws a three-dimensional border and background for a popup style radio button 
       control on the specified surface, within the specified bounds, and with the
       specified background colors. It also specifies the style of the text if the
       button is disabled.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="field">The <see cref="System.Drawing.Color"/> to draw the background with.</param>
		<param name="disabledColors">
			<para>
				<see langword="true"/> to override the colors with the appropriate grayed colors when the button is disabled; otherwise, <see langword="false"/>.</para>
		</param>
	</doc>
	<doc for="RadioButton.DrawFlatBorderAndField">
		<overload>
			<para>Draws the border and background for a flat style radio button control.</para>
		</overload>
		<summary>
			<para>Draws the border and background for a flat style radio button 
       control on the specified surface, within the specified bounds, and with the
       specified border and background colors. It also specifies if the colors are to be overridden with the appropriate grayed colors if the button is disabled.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="border">The <see cref="System.Drawing.Color"/> to draw the border with.</param>
		<param name="field">The <see cref="System.Drawing.Color"/> to draw the background with.</param>
	</doc>
	<doc for="RadioButton.DrawFlatBorderAndField1">
		<summary>
			<para> Draws the border and background of flat style radio buttons on the specified surface, within the specified 
       bounds, and with the specified border and background colors. It also specifies
       if the colors are to be overridden with the appropriate grayed colors if the
       button is disabled.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="border">The <see cref="System.Drawing.Color"/> to draw the border with.</param>
		<param name="field">The <see cref="System.Drawing.Color"/> to draw the background with.</param>
		<param name="disabledColors">
			<see langword="true"/> to override the colors with the appropriate grayed colors when the button is disabled; otherwise, <see langword="false"/>.</param>
	</doc>
	<doc for="RadioButton.DrawRadioCheck">
		<overload>
			<para> Draws the radio button's check mark in the selected state.</para>
		</overload>
		<summary>
			<para> Draws the radio button's check mark in the 
       selected state on the specified surface, and within the specified bounds.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<remarks>
			<para>You can use the return value from the <see cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/> method as the <paramref name="r 
    "/>parameter value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/>
	</doc>
	<doc for="RadioButton.DrawRadioCheck1">
		<summary>
			<para> Draws the radio button's check mark in the 
       selected state on the specified surface, within the specified bounds, and with the specified background color.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="c">The <see cref="System.Drawing.Color"/> to draw the check mark with.</param>
		<remarks>
			<para>You can use the return value from the <see cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/> method as the <paramref name="r "/>parameter value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/>
	</doc>
	<doc for="RadioButton.DrawRadioCheck2">
		<summary>
			<para> Draws the radio button's check mark in the 
       selected state on the specified surface, within the specified bounds, and with the specified background color. It also specifies if
       the colors are to be overridden with the appropriate grayed colors if the button is disabled.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="c">The <see cref="System.Drawing.Color"/> to draw the dot with.</param>
		<param name="disabledColors">
			<see langword="true"/> if the selection of colors should be overridden with appropriate grayed colors when the button is disabled.</param>
		<remarks>
			<para>You can use the return value from the <see cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/> method as the <paramref name="r "/>parameter value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/>
	</doc>
	<doc for="RadioButton.DrawRadioCheckBox">
		<summary>
			<para>Draws the check box portion of the radio button in the selected state on the 
       specified surface.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
	</doc>
	<doc for="RadioButton.GetCheckmarkRectangle">
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> occupied by the radio button's check box.</para>
		</summary>
		<param name="client">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the check box portion of the 
    radio button.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.Control.ClientRectangle"/> property of the control as the 
 <paramref name="client "/>parameter value.</para>
			<para>The return value is typically the check mark rectangle (including 
    border).</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.ClientRectangle"/>
	</doc>
	<doc for="RadioButton.GetFaceRectangle">
		<overload>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> 
 that represents the
 radio button's face.</para>
		</overload>
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> that represents the radio button's face with the 
    specified client rectangle.</para>
		</summary>
		<param name="client">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that 
    represents the radio button's face.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.Control.ClientRectangle"/> property of the control as the 
 <paramref name="client "/>parameter value.</para>
 The return value is typically the client rectangle (excluding the borders and
 other elements, such as a check box).
 </remarks>
		<seealso cref="System.Windows.Forms.Control.ClientRectangle"/>
	</doc>
	<doc for="RadioButton.GetFaceRectangle1">
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> that represents the 
    radio button's face with the specified client rectangle and check mark
    rectangle.</para>
		</summary>
		<param name="client">
			<para>The <see cref="System.Drawing.Rectangle"/> bounds to draw the radio button within. </para>
		</param>
		<param name=" check">The <see cref="System.Drawing.Rectangle"/> bounds to draw the check box within.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the radio button's face.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.Control.ClientRectangle"/> property of the 
    control as the <paramref name="client "/>parameter value, and the return value from the
 <see cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/> method as the <paramref name="check"/>parameter value.</para>
			<para>The return value is typically the client rectangle with the exclusion of the 
    space occupied by the borders and other elements such as a check box.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.ClientRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/>
	</doc>
	<doc for="RadioButton.GetFixedFaceRectangle">
		<overload>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> 
 that represents the radio button's face,
 regardless of the button's state.</para>
		</overload>
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> that represents the radio 
    button's face with the specified client rectangle,
    regardless of the button's state.</para>
		</summary>
		<param name="client">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the radio button's face.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.Control.ClientRectangle"/> property of the control as the 
 <paramref name="client "/>parameter value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.ClientRectangle"/>
	</doc>
	<doc for="RadioButton.GetFixedFaceRectangle1">
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> that represents the radio button's face with the specified client rectangle and 
    check mark rectangle, regardless of the button's state.</para>
		</summary>
		<param name="client">
			<para>The <see cref="System.Drawing.Rectangle"/> bounds to draw the radio button within. </para>
		</param>
		<param name="check">The <see cref="System.Drawing.Rectangle"/> bounds to draw the check box within.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the radio button's face.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.Control.ClientRectangle"/> property of the control as the 
 <paramref name="client "/>parameter value, and the return value from the <see cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/> method as the <paramref name="check"/> parameter 
    value.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.ClientRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetCheckmarkRectangle"/>
	</doc>
	<doc for="RadioButton.GetFocusRectangle">
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> that represents the radio button's focus 
    rectangle.</para>
		</summary>
		<param name="text">The <see cref="System.Drawing.Rectangle"/> occupied by the button's text.</param>
		<param name="image">The <see cref="System.Drawing.Rectangle"/> occupied by the button's image.</param>
		<param name="maxFocus">The largest <see cref="System.Drawing.Rectangle"/> acceptable for drawing the focus rectangle.</param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the radio button's focus 
    rectangle.</para>
		</returns>
		<remarks>
			<para>You can pass the return values from the <see cref="System.Windows.Forms.RadioButton.GetTextRectangle"/>, <see cref="System.Windows.Forms.RadioButton.GetImageRectangle"/>, 
    and <see cref="System.Windows.Forms.RadioButton.GetMaxFocusRectangle"/> methods as the parameter values for this method.</para>
			<para>The rectangle returned by this method accounts for any margins separating the focus rectangle from the text and image rectangles.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetTextRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetImageRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetMaxFocusRectangle"/>
	</doc>
	<doc for="RadioButton.GetImageRectangle">
		<overload>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> occupied by the radio button's image.</para>
		</overload>
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> occupied by the radio button's image with the 
    specified client rectangle and face rectangle.</para>
		</summary>
		<param name="client">The radio button's client rectangle.</param>
		<param name=" face">The <see cref="System.Drawing.Rectangle"/> where the button's focus rectangle, text, and image can be painted. </param>
		<param name=" imageStart">When this method returns, contains a <see cref="System.Drawing.Point"/> that represents the upper-left corner of the button's image. This parameter is passed uninitialized. </param>
		<returns>
			<para>The <see cref="System.Drawing.Rectangle"/> occupied by the button's image.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.Control.ClientRectangle"/> property value and the return value from the 
 <see cref="System.Windows.Forms.RadioButton.GetFaceRectangle"/> or <see cref="System.Windows.Forms.RadioButton.GetFixedFaceRectangle"/> methods as the parameter values for 
    this method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.ClientRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetFaceRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetFixedFaceRectangle"/>
	</doc>
	<doc for="RadioButton.GetImageRectangle1">
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> occupied by the radio button's image 
    with the specified client focus.</para>
		</summary>
		<param name="maxFocus">The largest <see cref="System.Drawing.Rectangle"/> acceptable for drawing the focus rectangle.</param>
		<param name="imageStart">When this method returns, contains a <see cref="System.Drawing.Point"/> that represents the upper-left corner of the button's image. This parameter is passed uninitialized.</param>
		<returns>
			<para>The <see cref="System.Drawing.Rectangle"/> occupied by the button's image.</para>
		</returns>
		<remarks>
			<para>You can pass the return value from the <see cref="System.Windows.Forms.RadioButton.GetMaxFocusRectangle"/> method as the parameter value for this method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetMaxFocusRectangle"/>
	</doc>
	<doc for="RadioButton.GetMaxFocusRectangle">
		<summary>
			<para>Retrieves the largest <see cref="System.Drawing.Rectangle"/> acceptable for drawing the radio button's focus 
    rectangle.</para>
		</summary>
		<param name="face">The <see cref="System.Drawing.Rectangle"/> where the button's focus rectangle, text, and image can be painted. </param>
		<returns>
			<para>The largest <see cref="System.Drawing.Rectangle"/> acceptable for drawing the radio button's focus 
    rectangle. </para>
		</returns>
		<remarks>
			<para>You can pass the return value from the <see cref="System.Windows.Forms.RadioButton.GetFaceRectangle"/> or <see cref="System.Windows.Forms.RadioButton.GetFixedFaceRectangle"/> methods as the <paramref name="face"/> 
 parameter value for this method.</para>
			<para>The text and image will use this rectangle to ensure there is enough space for a focus 
    rectangle.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetFaceRectangle"/>
		<seealso cref="System.Windows.Forms.RadioButton.GetFixedFaceRectangle"/>
	</doc>
	<doc for="RadioButton.GetTextRectangle">
		<summary>
			<para>Retrieves the <see cref="System.Drawing.Rectangle"/> occupied by the radio button's 
    text.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="maxFocus">The largest <see cref="System.Drawing.Rectangle"/> acceptable for drawing the focus rectangle.</param>
		<returns>
			<para>The <see cref="System.Drawing.Rectangle"/> occupied by the button's text.</para>
		</returns>
		<remarks>
			<para>You can pass the return value from the <see cref="System.Windows.Forms.RadioButton.GetMaxFocusRectangle"/> method as 
    the <paramref name="maxFocus"/> parameter value for this method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.GetMaxFocusRectangle"/>
	</doc>
	<doc for="RadioButton.OnAppearanceChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.RadioButton.AppearanceChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.RadioButton.OnAppearanceChanged"/> method also allows derived classes 
    to handle the event without attaching a delegate. This is the preferred
    technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.RadioButton.OnAppearanceChanged"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.RadioButton.OnAppearanceChanged"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
		<seealso cref="System.Windows.Forms.RadioButton.Appearance"/>
		<seealso cref="System.Windows.Forms.RadioButton.AppearanceChanged"/>
	</doc>
	<doc for="RadioButton.OnMouseDown">
		<internalonly/>
		<summary>
			<para>
       Raises the <see cref="System.Windows.Forms.Control.OnMouseDown"/> event.
    </para>
		</summary>
		<param name="mevent">
    A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains the event data.
 </param>
		<remarks>
			<para>
       Raising an event invokes the event handler
       through a delegate. For an overview, see <see topic="cpconProvidingEventFunctionality"/>.
    </para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.ButtonBase.OnMouseDown"/> in an
       inheriting class, be sure to call the base class's <see cref="System.Windows.Forms.ButtonBase.OnMouseDown"/> method.
    </note>
		</remarks>
		<seealso cref="System.Windows.Forms.ButtonBase.OnMouseUp"/>
	</doc>
	<doc for="RadioButton.OnMouseUp">
		<internalonly/>
		<summary>
			<para>
       Raises the <see cref="System.Windows.Forms.ButtonBase.OnMouseUp"/> event.
       
    </para>
		</summary>
		<param name="mevent">
    A <see cref="System.Windows.Forms.MouseEventArgs"/> that contains the event data.
 </param>
		<remarks>
			<para>
       Raising an event invokes the event handler through a delegate. For an overview, see XXX.
       
    </para>
			<note type="inheritinfo">
       When overriding <see cref="System.Windows.Forms.ButtonBase.OnMouseUp"/> in an
       inheriting class, be sure to call the base class's <see cref="System.Windows.Forms.ButtonBase.OnMouseUp"/> method.
       
    </note>
		</remarks>
		<seealso cref="System.Windows.Forms.ButtonBase.OnMouseDown"/>
		<keyword term=""/>
	</doc>
	<doc for="RadioButton.PaintUp">
		<internalonly/>
		<summary>
    Determines whether the control or one of its children currently has
    the system focus.
 </summary>
	</doc>
	<doc for="RadioButton.PaintDown">
		<internalonly/>
		<summary>
			<para>
       Called to render the sunken version of the button.
    </para>
		</summary>
	</doc>
	<doc for="RadioButton.PaintFlatUp">
		<internalonly/>
		<summary>
    Called to render the flat version of the button.
 </summary>
	</doc>
	<doc for="RadioButton.PaintFlatOver">
		<internalonly/>
		<summary>
    Called to render the flat, but mouse over, version of the button.
 </summary>
	</doc>
	<doc for="RadioButton.PaintFlatDown">
		<internalonly/>
		<summary>
    Called to render the flat, but mouse down, version of the button.
 </summary>
	</doc>
	<doc for="RadioButton.PaintPopupUp">
		<internalonly/>
		<summary>
    Paints a popup checkbox in the up state.
 </summary>
	</doc>
	<doc for="RadioButton.PaintPopupOver">
		<internalonly/>
		<summary>
    Paints a popup checkbox in the over state.
 </summary>
	</doc>
	<doc for="RadioButton.PaintPopupDown">
		<internalonly/>
		<summary>
    Paints a popup checkbox in the down state.
 </summary>
	</doc>
	<doc for="RadioButton.PerformClick">
		<summary>
			<para>Generates a <see cref="System.Windows.Forms.Control.Click"/> event for the
    button, simulating a click by a user.</para>
		</summary>
		<example>
			<para>The following example evaluates a <see cref="System.Windows.Forms.ListBox"/> selection and the <see cref="System.Windows.Forms.RadioButton.Checked"/> property of a <see cref="System.Windows.Forms.RadioButton"/>. When a specified item is selected from the list box, the <see cref="System.Windows.Forms.RadioButton.PerformClick"/> method of another <see cref="System.Windows.Forms.RadioButton"/> is called. This code assumes that two <see cref="System.Windows.Forms.RadioButton"/> controls and a <see cref="System.Windows.Forms.ListBox"/> have been instantiated on a form.</para>
			<codelink SampleID="Classic RadioButton.Checked Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Control.Click"/>
	</doc>
	<doc for="RadioButton.ProcessMnemonic">
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="RadioButton.WndProc">
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButtonAccessibleObject">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButtonAccessibleObject.RadioButtonAccessibleObject">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButtonAccessibleObject.DefaultAction">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButtonAccessibleObject.Role">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButtonAccessibleObject.State">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButtonAccessibleObject.DoDefaultAction">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.DefaultSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.DoubleClick">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="RadioButton.RadioButton">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.RadioButton"/>
class.</para>
		</summary>
		<remarks>
			<para>The default view of the <see cref="System.Windows.Forms.RadioButton"/> has its text aligned to the right of the button and
   the <see cref="System.Windows.Forms.RadioButton.AutoCheck"/>
   property is set to
   <see langword="true"/>.</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.RadioButton"/> , gives it the appearance of a toggle button, sets its <see cref="System.Windows.Forms.RadioButton.AutoCheck"/> property to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/> .</para>
			<codelink SampleID="Classic RadioButton Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="RadioButton.AutoCheck">
		<summary>
			<para> Gets or sets a value indicating whether the <see cref="System.Windows.Forms.RadioButton.Checked"/>
value and the appearance of
the control automatically change when the control is clicked.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.RadioButton.Checked"/> value and the appearance of the
   control automatically change on the <see cref="System.Windows.Forms.Control.Click"/>
   event; otherwise, <see langword="false"/>. The default value is
<see langword="true"/>. </para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.RadioButton.Checked"/> value is set
   to <see langword="false"/> , the radio button portion of the control
   must be checked in code in the <see cref="System.Windows.Forms.Control.Click"/> event handler. In
   addition, if the <see cref="System.Windows.Forms.RadioButton"/> is part of a <see cref="System.Windows.Forms.RadioButton"/> control group, this property ensures
   that only one of the controls is checked at a given time.</para>
			<para>If the <see cref="System.Windows.Forms.RadioButton.AutoCheck"/> property is set to <see langword="false"/>,
a group of <see cref="System.Windows.Forms.RadioButton"/> controls will not act as a mutually
exclusive group and the <see cref="System.Windows.Forms.RadioButton.Checked"/> property must be updated
in code.</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.RadioButton"/> , gives it the appearance of a toggle button, sets its <see cref="System.Windows.Forms.RadioButton.AutoCheck"/> property to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/> .</para>
			<codelink SampleID="Classic RadioButton Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="RadioButton">
		<summary>
			<para> Represents a Windows radio button.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.RadioButton"/> control can display
   text, an <see cref="System.Drawing.Image"/>, or both.</para>
			<para>When the user selects one radio button within a group, the
   others clear automatically. All <see cref="System.Windows.Forms.RadioButton"/> controls in a given container, such as a
<see cref="System.Windows.Forms.Form"/>
, constitute a group. To create multiple groups on one form, place each group in its own container,
such as a <see cref="System.Windows.Forms.GroupBox"/> or <see cref="System.Windows.Forms.Panel"/> control.</para>
			<para><see cref="System.Windows.Forms.RadioButton"/> and <see cref="System.Windows.Forms.CheckBox"/> controls have a
similar function: they offer choices a user can select or clear. The difference is that multiple <see cref="System.Windows.Forms.CheckBox"/> controls can be
selected at the same time, but radio buttons are mutually exclusive.</para>
			<para>Use the <see cref="System.Windows.Forms.RadioButton.Checked"/> property to get or set the
state of a <see cref="System.Windows.Forms.RadioButton"/>. The radio button's
appearance can be altered to appear as a toggle-style button or as a standard
radio button by setting the <see cref="System.Windows.Forms.RadioButton.Appearance"/> property.</para>
			<note type="note">
   The radio button is sometimes
   referred to as an option button.
   
</note>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.RadioButton"/>
, gives it the appearance of a toggle button, sets its <see cref="System.Windows.Forms.RadioButton.AutoCheck"/>
property to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Classic RadioButton Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ButtonBase"/>
		<seealso cref="System.Windows.Forms.Button"/>
		<seealso cref="System.Windows.Forms.CheckBox"/>
	</doc>
	<doc for="RadioButton.Appearance">
		<summary>
			<para> Gets or set the value that determines the appearance of
      the
      radio button control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.Appearance"/> values. The default value is
   <see langword="Normal"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Windows.Forms.Appearance"/> values.</exception>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.RadioButton.Appearance"/> value is set to
   <see langword="Normal"/>, then the <see cref="System.Windows.Forms.RadioButton"/> control is drawn with a circular check box. If
   the value is set to <see langword="Appearance.Button"/>, then the <see cref="System.Windows.Forms.RadioButton"/> control is
   drawn as a button that can be toggled to an up or down state. Either type can display
   text, an image, or both.</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.RadioButton"/> , gives it the appearance of a toggle button, sets its <see cref="System.Windows.Forms.RadioButton.AutoCheck"/> property to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/> .</para>
			<codelink SampleID="Classic RadioButton Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Appearance"/>
	</doc>
	<doc for="RadioButton.CheckAlign">
		<summary>
			<para>
      Gets or
      sets the location of the check box portion of the
      radio button control.</para>
		</summary>
		<value>
			<para>One of the valid <see cref="System.Drawing.ContentAlignment"/> values. The default value is
   <see langword="MiddleLeft"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Drawing.ContentAlignment"/> values.</exception>
		<example>
			<para>The following example demonstrates how the <see cref="System.Windows.Forms.RadioButton.CheckAlign"/> property can be changed at run time. The check box portion of a radio button control is moved to the right or left of the text when the <see cref="System.Windows.Forms.RadioButton.Checked"/> value changes. This code assumes that a <see cref="System.Windows.Forms.RadioButton"/> control has been instantiated on a form and that a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace has been included.</para>
			<codelink SampleID="Classic RadioButton.CheckAlign Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="RadioButton.CheckedChanged">
		<summary>
			<para>Occurs when the
      value of the <see cref="System.Windows.Forms.RadioButton.Checked"/>
      property changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how the <see cref="System.Windows.Forms.RadioButton.CheckAlign"/> property can be changed at run time. The check box portion of a radio button control is moved to the right or left of the text when the <see cref="System.Windows.Forms.RadioButton.Checked"/> value changes. This code assumes that a <see cref="System.Windows.Forms.RadioButton"/> control has been instantiated on a form and that a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace has been included.</para>
			<codelink SampleID="Classic RadioButton.CheckAlign Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.RadioButton.Checked"/>
		<seealso cref="System.Windows.Forms.RadioButton.OnCheckedChanged"/>
	</doc>
	<doc for="RadioButton.OnCheckedChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.CheckBox.CheckedChanged"/>
event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.RadioButton.OnCheckedChanged"/> method also allows derived classes
   to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
   <see cref="System.Windows.Forms.RadioButton.OnCheckedChanged"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.RadioButton.OnCheckedChanged"/> method so that registered delegates
   receive the event.
   </note>
		</remarks>
		<example>
			<para>The following example demonstrates how the <see cref="System.Windows.Forms.RadioButton.CheckAlign"/> property can be changed at run time. The check box portion of a radio button control is moved to the right or left of the text when the <see cref="System.Windows.Forms.RadioButton.Checked"/> value changes. This code assumes that a <see cref="System.Windows.Forms.RadioButton"/> control has been instantiated on a form and that a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace has been included.</para>
			<codelink SampleID="Classic RadioButton.OnCheckedChanged Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
