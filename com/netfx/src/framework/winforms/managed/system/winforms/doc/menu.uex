<docs>
	<doc for="Menu.FindHandle">
		<summary>
     Used by findMenuItem
 </summary>
	</doc>
	<doc for="Menu.FindShortcut">
		<summary>
     Used by findMenuItem
 </summary>
	</doc>
	<doc for="Menu.Menu">
		<summary>
     This is an abstract class.  Instances cannot be created, so the constructor
     is only called from derived classes.
 </summary>
	</doc>
	<doc for="Menu.Handle">
		<summary>
			<para> Gets a value representing the window handle for the menu.</para>
		</summary>
		<value>
			<para>The window handle of the menu.</para>
		</value>
		<remarks>
			<para>You can use this property to obtain the handle to the menu to perform special 
       operations to the menu outside of the functionality provided by this class or
       its derived classes.</para>
		</remarks>
	</doc>
	<doc for="Menu.MenuItems">
		<summary>
			<para>Gets a value indicating the collection of <see cref="System.Windows.Forms.MenuItem"/> objects associated with 
    the menu.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.Menu.MenuItemCollection" qualify="true"/> that represents the list 
    of <see cref="System.Windows.Forms.MenuItem"/> objects stored in the menu.</para>
		</value>
		<remarks>
			<para> You can use this property to obtain a reference to the list of menu 
       items that are currently stored in the menu. For <see cref="System.Windows.Forms.MainMenu"/> and <see cref="System.Windows.Forms.ContextMenu"/>
       objects, the <see cref="System.Windows.Forms.Menu.MenuItems"/> property contains the
       entire menu structure in the control. For the <see cref="System.Windows.Forms.MenuItem"/> class, the <see cref="System.Windows.Forms.Menu.MenuItems"/>
       property contains the list of submenu items associated with the <see cref="System.Windows.Forms.MenuItem"/>.
       With the reference to the collection of
       menu items for the menu (provided by this property), you can add and remove menu items,
       determine the total number of menu items, and clear the list of menu items
       from the collection. For more information on maintaining the menu item
       collection for a menu, see the <see cref="System.Windows.Forms.Menu.MenuItemCollection" qualify="true"/> documentation.</para>
		</remarks>
		<example>
			<para>The following example creates an instance of the derived class, <see cref="System.Windows.Forms.MainMenu"/>, 
    and adds a <see cref="System.Windows.Forms.MenuItem"/> object to its collection of <see cref="System.Windows.Forms.MenuItem"/> objects. This
    example assumes that the method defined in this example is located within the
    class for a form and called by a method in that form class.</para>
			<codelink SampleID="Classic Menu.MenuItems Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MainMenu"/>
		<seealso cref="System.Windows.Forms.ContextMenu"/>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection" qualify="true"/>
		<keyword term="menus, structure"/>
	</doc>
	<doc for="Menu.ClearHandles">
		<summary>
     Notifies Menu that someone called Windows.DeleteMenu on its handle.
 </summary>
	</doc>
	<doc for="Menu.CreateMenuHandle">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.CreateMenuItems">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.DestroyMenuItems">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.Finalize">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.FindMergePosition">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.ItemsChanged">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.ProcessInitMenuPopup">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.ProcessCmdKey">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="Menu.WmMenuChar">
		<summary>
		</summary>
	</doc>
	<doc for="Menu.MenuItemCollection.MenuItemCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.Menu"/> that owns this collection.</param>
		<remarks>
			<para>This class requires that you associate the collection with a class that 
       derives from <see cref="System.Windows.Forms.Menu"/>, such as the <see cref="System.Windows.Forms.MainMenu"/>, <see cref="System.Windows.Forms.ContextMenu"/>,
       or <see cref="System.Windows.Forms.MenuItem"/> class. Since you must specify
       a menu that is associated with this collection, you cannot create
       multiple menu item collections and associate them with a menu as needed. In order
       to switch the menu items associated with a menu, you must clear the collection
       of items and add the menu items to display to the collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.MainMenu"/>
		<seealso cref="System.Windows.Forms.ContextMenu"/>
		<seealso cref="System.Windows.Forms.MenuItem"/>
	</doc>
	<doc for="Menu.MenuItemCollection.IsReadOnly">
		<nodoc/>
		<summary>
			<para> Gets a value indicating whether the collection is 
      read-only.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the collection is read-only; otherwise, 
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
	</doc>
	<doc for="Menu.MenuItemCollection.CopyTo">
		<summary>
			<para>Copies the entire collection into an existing array at a 
      specified location within the array.</para>
		</summary>
		<param name="dest">The destination array.</param>
		<param name=" index">The index in the destination array at which storing begins.</param>
		<remarks>
			<para>You can use this method to combine <see cref="System.Windows.Forms.MenuItem"/> 
objects from multiple collections into a single array. This feature enables you
to easily combine two or more sets of menu items for use in a <see cref="System.Windows.Forms.ContextMenu"/> or <see cref="System.Windows.Forms.MainMenu"/>.</para>
		</remarks>
		<example>
			<para>The following example creates an array and 
      copies the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/>objects from two <see cref="System.Windows.Forms.MenuItem"/> objects into
      the array. The example then copies the the array of <see cref="System.Windows.Forms.MenuItem"/>
      objects into the control collection for a <see cref="System.Windows.Forms.ContextMenu"/> named <c>contextMenu1</c>. This example assumes
   that there are two <see cref="System.Windows.Forms.MenuItem"/> objects that contain submenu items named
   <c>menuItem1</c> and <c>menuItem2</c>
   .</para>
			<codelink SampleID="Classic Menu.MenuItemCollection.CopyTo Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Menu.MenuItemCollection.AddRange">
		<summary>
			<para>Adds an array of previously created <see cref="System.Windows.Forms.MenuItem"/>
objects to the collection.</para>
		</summary>
		<param name="items">An array of <see cref="System.Windows.Forms.MenuItem"/> objects representing the menu items to add to the collection.</param>
		<remarks>
			<para>You can use method to quickly add a group of previouly created <see cref="System.Windows.Forms.MenuItem"/>
objects to the collection instead of manually adding each <see cref="System.Windows.Forms.MenuItem"/>
to the collection using the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method. If the
collection already contains <see cref="System.Windows.Forms.MenuItem"/> objects, calling this method will add the
new <see cref="System.Windows.Forms.MenuItem"/> objects to the end of the collection.</para>
		</remarks>
		<example>
			<para>The following example creates an array and copies the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/>objects from two <see cref="System.Windows.Forms.MenuItem"/> objects into the array. The example then copies the the array of <see cref="System.Windows.Forms.MenuItem"/> objects into the control collection for a <see cref="System.Windows.Forms.ContextMenu"/> named <c>contextMenu1</c>. This example assumes that there are two <see cref="System.Windows.Forms.MenuItem"/> objects that contain submenu items named <c>menuItem1</c> and <c>menuItem2</c> .</para>
			<codelink SampleID="Classic Menu.MenuItemCollection.CopyTo Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.CopyTo"/>
	</doc>
	<doc for="Menu.MdiListItem">
		<summary>
			<para>Gets a value indicating the <see cref="System.Windows.Forms.MenuItem"/> that is used to display a list of Multiple Document Interface (MDI) child forms.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> that represents the menu item
   displaying a list of MDI child forms that are open in the application.</para>
		</value>
		<remarks>
			<para>You can use this property to determine whether a <see cref="System.Windows.Forms.MenuItem"/> has
   been specified to display the list of open child windows in an MDI application.
   To use a specific <see cref="System.Windows.Forms.MenuItem"/> as an MDI list, set the <see cref="System.Windows.Forms.MenuItem.MdiList"/> property in the <see cref="System.Windows.Forms.MenuItem"/>
   to be used.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.MenuItem" qualify="true"/>
		<seealso cref="System.Windows.Forms.MenuItem.MdiList"/>
	</doc>
	<doc for="Menu.MenuItemCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can be used to iterate through the menu item
      collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> object that represents the menu item collection.</para>
		</returns>
	</doc>
	<doc for="Menu.MenuItemCollection.this">
		<summary>
			<para>Retrieves the <see cref="System.Windows.Forms.MenuItem"/> at the specified
   indexed location in the collection.</para>
		</summary>
		<param name="index">The indexed location of the <see cref="System.Windows.Forms.MenuItem"/> in the collection.</param>
		<value>
			<para>The <see cref="System.Windows.Forms.MenuItem"/> at the specified location.</para>
		</value>
		<exception cref="System.ArgumentException">
			<para>The <paramref name="value "/>parameter is <see langword="null"/>. </para>
			<para>or </para>
			<para>The <paramref name="index "/>parameter is less than zero.</para>
			<para>or</para>
			<para>The <paramref name="index "/>parameter is greater than the number of menu items in the collection, and the collection of menu items is not <see langword="null"/>.</para>
		</exception>
		<remarks>
			<para>To assign <see cref="System.Windows.Forms.MenuItem"/> objects to a specific location,
   or to retrieve them from the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> , you can reference the collection object with
   a specific index value. The index value of the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> is a zero-based index.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Count"/>
	</doc>
	<doc for="Menu.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by
      the <see cref="System.Windows.Forms.Menu"/>
      .</para>
		</summary>
		<remarks>
			<para>Call <see cref="System.Windows.Forms.Menu.Dispose"/> when you are finished using the <see cref="System.Windows.Forms.Menu"/>. The
<see cref="System.Windows.Forms.Menu.Dispose"/> method leaves the <see cref="System.Windows.Forms.Menu"/> in an
   unusable state. After calling <see cref="System.Windows.Forms.Menu.Dispose"/>, you must release all references to the
<see cref="System.Windows.Forms.Menu"/>
so the memory it was occupying can be reclaimed by garbage collection. </para>
			<note type="note">
   Always call <see cref="System.Windows.Forms.Menu.Dispose"/>
   before you release your last reference to the <see cref="System.Windows.Forms.Menu"/>. Otherwise, the resources the
<see cref="System.Windows.Forms.Menu"/>
is using will not be freed until garbage collection calls the <see cref="System.Windows.Forms.Menu"/> object's
destructor.
</note>
		</remarks>
	</doc><doc for="MenuItemCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MenuItemCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Menu.MenuItemCollection.IndexOf">
		<summary>
			<para>Retrieves the index of a specific item in the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.MenuItem"/> to locate in the collection.</param>
		<returns>
			<para>The zero-based index of the item found in the collection;
 otherwise, -1.</para>
		</returns>
		<example>
			<para>In this example, you create a main menu, <c>myMainMenu</c>, with two MenuItem
 objects, <see langword="File"/> and <see langword="Edit"/>. The
<see langword="File"/> menu has three submenu items, <see langword="New"/>, 
<see langword="Open"/>, and <see langword="Exit"/>. By using the <see cref="System.Windows.Forms.Menu.MenuItemCollection.IndexOf"/> 
method, you retrieve the index of the <see langword="Exit"/> item in the
<see langword="File"/> menu collection, and then display its value in a message 
box. This program assumes that you have already created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c> 
.</para>
			<codelink SampleID="IndexOf" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Menu.MenuItemCollection.Contains">
		<summary>
			<para>Determines if the specified <see cref="System.Windows.Forms.MenuItem"/>
is a member of the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.MenuItem"/> to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.MenuItem"/>
is a member of the collection; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>This method enables you to determine whether a <see cref="System.Windows.Forms.MenuItem"/>
is member of the collection before attempting to perform operations on the
<see cref="System.Windows.Forms.MenuItem"/>. You can use this method to confirm that a 
<see cref="System.Windows.Forms.MenuItem"/> has been added to or is still a 
member of the collection.</para>
		</remarks>
		<example>
			<para>In this example, you create a main menu, <c>myMainMenu</c>, with two MenuItem objects, <see langword="File"/> and
<see langword="Edit"/>. The <see langword="File"/> menu has three submenu items, 
<see langword="New"/>, <see langword="Open"/>, and <see langword="Exit"/>. By using the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Contains"/> method, you check to see if the
<see langword="File"/> menu collection contains the item <see langword="Open"/>. 
If the item exists, you display the result in a text box. This program assumes
that you have already created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>.</para>
			<codelink SampleID="ContainsItems" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Menu.MenuItemCollection.RemoveAt">
		<overload>
			<para>Removes a <see cref="System.Windows.Forms.MenuItem"/> from the menu item collection.</para>
		</overload>
		<summary>
			<para>Removes a <see cref="System.Windows.Forms.MenuItem"/> from the menu
   item collection at a specified index.</para>
		</summary>
		<param name="index">The index of the <see cref="System.Windows.Forms.MenuItem"/> to remove.</param>
		<remarks>
			<para>When a <see cref="System.Windows.Forms.MenuItem"/> is removed from the menu item
   collection, all subsequent menu items are moved up one position in the
   collection.</para>
		</remarks>
		<example>
			<para>In this example, you create a main menu, <c>myMainMenu</c>,
   with two <see cref="System.Windows.Forms.MenuItem"/> objects, <see langword="File"/> and
<see langword="Edit"/>. The <see langword="File"/> menu has three submenu items, 
<see langword="New"/>, <see langword="Open"/>, and <see langword="Exit"/>. By using the <see langword="RemoveAt"/> method, you remove the
<see langword="Exit"/> item from the <see langword="File"/> menu collection using 
   its index number. This program assumes that you have already created a <see cref="System.Windows.Forms.Form"/> named
   <c>Form1</c>.</para>
			<codelink SampleID="RemoveAt" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Menu.MenuItemCollection.Remove">
		<summary>
			<para>Removes the specified <see cref="System.Windows.Forms.MenuItem"/>
from the menu item collection.</para>
		</summary>
		<param name="item">The <see cref="System.Windows.Forms.MenuItem"/> to remove.</param>
		<remarks>
			<para>When a <see cref="System.Windows.Forms.MenuItem"/> is removed from the menu item collection, 
   all subsequent menu items are moved up one position in the collection. You can
   use this version of the <see langword="Remove"/> to
   remove a specific <see cref="System.Windows.Forms.MenuItem"/> from the collection using a reference to the
<see cref="System.Windows.Forms.MenuItem"/> to be removed. If you do not have a
   reference to the <see cref="System.Windows.Forms.MenuItem"/> that you want to remove, you can use
   the other version of this method that accepts, as a parameter, an index
   corresponding to the <see cref="System.Windows.Forms.MenuItem"/> to be
   removed.</para>
		</remarks>
		<example>
			<para>In this example, you create a main menu, <c>myMainMenu</c>,
   with two <see cref="System.Windows.Forms.MenuItem"/>
   objects, <see langword="File"/> and <see langword="Edit"/>. The
<see langword="File"/> menu has three submenu items, <see langword="New"/>, 
<see langword="Open"/>, and <see langword="Exit"/>. Using the <see langword="Remove"/> 
method, you remove the <see langword="Open"/> item from the <see langword="File"/>
menu collection. This program assumes that you have already created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c> 
.</para>
			<codelink SampleID="RemoveMenuItems" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Menu.MenuItemCollection.Count">
		<summary>
			<para>Gets a value indicating the total number of <see cref="System.Windows.Forms.MenuItem"/> objects in the
   collection.</para>
		</summary>
		<value>
			<para>The number of <see cref="System.Windows.Forms.MenuItem"/> objects in the collection.</para>
		</value>
		<remarks>
			<para>The <see langword="Count"/> property holds
   the number of <see cref="System.Windows.Forms.MenuItem"/> objects
   assigned to the collection. You can use the <see langword="Count"/> property value
   as the upper bounds of a loop to iterate through a collection. Keep in mind, the
   index value of a collection is a zero-based index, so you must subtract one from
   the looping variable. If you do not account for this, you will exceed the upper
   bounds of the collection and throw an exception.</para>
		</remarks>
		<example>
			<para>In this example, you create a main menu, <c>myMainMenu</c> ,
   with one <see cref="System.Windows.Forms.MenuItem"/>
   object, <see langword="File"/>, that has three submenu items,
<see langword="New"/>, <see langword="Open"/>, and <see langword="Exit"/>. Using the <see langword="Count"/> property, you count the number of objects
   in the <see langword="File"/> menu and display this number
   in a message box. This program assumes that you have already created a <see cref="System.Windows.Forms.Form"/>
   named <c>Form1</c>
.</para>
			<codelink SampleID="CountProperty" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItems"/>
	</doc>
	<doc for="Menu.GetMainMenu">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.MainMenu"/> that contains this menu.</para>
		</summary>
		<returns>
			<para>The <see cref="System.Windows.Forms.MainMenu"/> that contains this menu.</para>
		</returns>
		<remarks>
			<para>This method allows you to obtain a reference to the <see cref="System.Windows.Forms.MainMenu"/>
this menu is currently located in. This property returns <see langword="null"/> if
the menu is not contained in a <see cref="System.Windows.Forms.MainMenu"/>. This can occur if the menu is contained in
a <see cref="System.Windows.Forms.MenuItem"/> or <see cref="System.Windows.Forms.ContextMenu"/> , or
if the menu is not contained in any menu. You can use this property to
determine whether a menu is currently being used, and also to determine where.</para>
		</remarks>
		<example>
			<para>This example declares a <see cref="System.Windows.Forms.MainMenu"/>, <c>mainMenu1</c>, and four menu items, <c>menuItem1</c>, <c>menuItem2</c>, <c>menuItem3</c>, and <c>menuItem4</c>. Only the first three menu items are added to
<c>mainMenu1</c> for display. The 
program then checks to see if <c>menuItem3</c> is being used, which is
<see langword="true"/> , and determines the form in which it is used. 
A label text is used to display the name of the form that hosts the <see cref="System.Windows.Forms.MainMenu"/>. If
you change the menu item being tested to <c>menuItem4</c>, the condition evaluates to
<see langword="false"/> because
<c>menuItem4</c> has never beeen used. 
This example assumes that you have created a <see cref="System.Windows.Forms.Form"/> named <c> MyForm</c>
that includes a <see cref="System.Windows.Forms.Label"/> named <c>label1</c> .</para>
			<codelink SampleID="GetMainMenu" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.GetContextMenu"/>
	</doc>
	<doc for="Menu.CloneMenu">
		<summary>
			<para>Copies the <see cref="System.Windows.Forms.Menu"/> that is passed as a parameter to the
   current <see cref="System.Windows.Forms.Menu"/> .</para>
		</summary>
		<param name="menuSrc">The <see cref="System.Windows.Forms.Menu"/> to copy.</param>
		<remarks>
			<para>This method copies the entire list of <see cref="System.Windows.Forms.MenuItem"/> objects (stored in the <see cref="System.Windows.Forms.Menu"/> passed in to <paramref name="menuSrc"/>) into the current
   menu. You can
   use this method in your derived class to clone <see cref="System.Windows.Forms.MenuItem"/> objects. They can then be
   reused by other classes that derive from <see cref="System.Windows.Forms.Menu"/>, such as <see cref="System.Windows.Forms.MainMenu"/>, <see cref="System.Windows.Forms.ContextMenu"/>, and <see cref="System.Windows.Forms.MenuItem"/> .</para>
		</remarks>
		<example>
			<para> This example creates a main menu, <c>mainMenu1</c>, with
   three menu items, <see langword="File"/>, <see langword="Edit"/>, and
<see langword="View"/>. It then uses the <see langword="CloneMenu"/> method to copy <c>mainMenu1</c> into <c>mainMenu2</c>. The
cloned menu is then assigned to the form and displayed. This program assumes that
you have already created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>
.</para>
			<codelink SampleID="CloneMenu" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.MainMenu"/>
		<keyword term="menus, cloning"/>
	</doc>
	<doc for="Menu.MergeMenu">
		<summary>
			<para>Merges the <see cref="System.Windows.Forms.MenuItem"/> objects of one menu with the current
   menu.</para>
		</summary>
		<param name="menuSrc">The <see cref="System.Windows.Forms.Menu"/> whose menu items are merged with the menu items of the current menu.</param>
		<exception cref="System.Exception">The menu was merged with itself.</exception>
		<remarks>
			<para> This method merges <see cref="System.Windows.Forms.MenuItem"/> objects from one menu with the
   current menu. <see cref="System.Windows.Forms.MenuItem"/> objects are merged
   according to the values of the <see cref="System.Windows.Forms.MenuItem.MergeType" qualify="true"/> and <see cref="System.Windows.Forms.MenuItem.MergeOrder" qualify="true"/>
   properties. </para>
			<para>Menu merging is typically done to merge the menus of a Multiple Document Interface
   (MDI) parent form with those of its active MDI child form. This is performed automatically
   by the .NET Framework common language runtime. For example, if an MDI parent
   form contains a set of menus for handling files and your MDI child form also has
   file-related menu items, the menu sets will automatically merge into a single file
   menu set when the child form is displayed in the MDI parent form. </para>
			<para>You can use the <see cref="System.Windows.Forms.Menu.MergeMenu"/> method if you are merging two menu structures
that are not part of an MDI application. This implementation can be called by the
<see cref="System.Windows.Forms.MainMenu"/> or <see cref="System.Windows.Forms.ContextMenu"/> classes to merge two or more
objects that derive from <see cref="System.Windows.Forms.Menu"/>.</para>
			<para> To merge two <see cref="System.Windows.Forms.MenuItem"/> objects use the <see cref="System.Windows.Forms.MenuItem.MergeMenu" qualify="true"/>
method.</para>
		</remarks>
		<example>
			<para>This example creates two menus, <c>mainMenu1</c> and <c>mainMenu2</c>. The
   first menu contains one <see cref="System.Windows.Forms.MenuItem"/>
   , <see langword="File"/>, and the second contains one <see cref="System.Windows.Forms.MenuItem"/>
   , <see langword="Edit"/>. Using the <see cref="System.Windows.Forms.Menu.MergeMenu"/> method, <c>mainMenu2</c> is merged with <c>mainMenu1</c>
. When diplayed, <c>mainMenu1</c> will contain the two menu items, <see langword="File"/>
and <see langword="Edit"/>. This example assumes that you have
created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c> .</para>
			<codelink SampleID="MergeMenu" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MenuItem.MergeType" qualify="true"/>
		<seealso cref="System.Windows.Forms.MenuItem.MergeOrder" qualify="true"/>
		<keyword term="menus, merging"/>
	</doc><doc for="Menu.MenuItemCollection.Clear">
		<summary>
			<para>Removes all <see cref="System.Windows.Forms.MenuItem"/> objects from the menu item collection.</para>
		</summary>
		<remarks>
			<para> You can use this method to clear the entire
 collection of menu items from a menu. To remove an individual menu item from the collection,
 use the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/> method. To
 add new <see cref="System.Windows.Forms.MenuItem"/> objects to the collection, use the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method.</para>
		</remarks>
		<example>
			<para>In this example, you create a main menu, <c>myMainMenu</c>,
 with two <see cref="System.Windows.Forms.MenuItem"/>
 objects, <see langword="File"/> and <see langword="Edit"/>. The
<see langword="File"/> menu has three submenu items, <see langword="New"/>, 
<see langword="Open"/>, and <see langword="Exit"/>. Using the <see langword="Clear"/> method, you remove 
 all the <see cref="System.Windows.Forms.MenuItem"/>
 objects in the <see langword="File"/> menu collection. This
 program assumes that you have already created a <see cref="System.Windows.Forms.Form"/> named <c>Form1</c>
.</para>
			<codelink SampleID="ClearItems" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItems"/>
	</doc>
	<doc for="Menu.FindMenuItem">
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="Menu">
		<summary>
			<para>Represents the base functionality for all menus.</para>
		</summary>
		<remarks>
			<para>This class is the base class for the <see cref="System.Windows.Forms.MainMenu"/>, <see cref="System.Windows.Forms.MenuItem"/>, and <see cref="System.Windows.Forms.ContextMenu"/> classes. You cannot create an
   instance of this class. The menus for an application consist of <see cref="System.Windows.Forms.MenuItem"/> objects. These can contain other <see cref="System.Windows.Forms.MenuItem"/> objects, representing submenu
   items. The <see cref="System.Windows.Forms.MenuItem"/> objects can be stored in a <see cref="System.Windows.Forms.MainMenu"/> for
   display as an entire menu structure for a form or a <see cref="System.Windows.Forms.ContextMenu"/>
   that is used to display shortcut menus. This class provides functionality that is common for all the menu
   classes.</para>
			<para>Unlike many base classes, the <see cref="System.Windows.Forms.Menu"/> class uses its derived classes to define
many of its properties. If you are using your menu in a Multiple Document
Interface (MDI) application, you can use the <see cref="System.Windows.Forms.Menu.MdiListItem"/> property to specify a <see cref="System.Windows.Forms.MenuItem"/> that displays a list of open MDI child forms in
your application. The <see cref="System.Windows.Forms.Menu.MenuItems"/>
property contains a list
of <see cref="System.Windows.Forms.MenuItem"/> objects stored in the menu class.
For a <see cref="System.Windows.Forms.MainMenu"/> or <see cref="System.Windows.Forms.ContextMenu"/> , this property contains all
the <see cref="System.Windows.Forms.MenuItem"/> objects that are displayed. For a <see cref="System.Windows.Forms.MenuItem"/>,
the <see cref="System.Windows.Forms.Menu.MenuItems"/> property
represents the submenu items associated with
it.</para>
			<para> In addition to the properties that are provided for all the derived menu
   classes, the <see cref="System.Windows.Forms.Menu"/> class also provides methods, such
   as <see cref="System.Windows.Forms.Menu.CloneMenu"/> and <see cref="System.Windows.Forms.Menu.MergeMenu"/>, that enable you to create new
   menus from existing menus, and also merge two menu structures together.</para>
			<para>The <see cref="System.Windows.Forms.Menu"/> class also defines the nested class <see cref="System.Windows.Forms.Menu.MenuItemCollection"/>. This class defines the collection
of <see cref="System.Windows.Forms.MenuItem"/> objects
used by the <see cref="System.Windows.Forms.Menu.MenuItems"/> property.
You can use the methods of the <see cref="System.Windows.Forms.Menu.MenuItemCollection"/> class to add and remove menu items from a
<see cref="System.Windows.Forms.MainMenu"/>, <see cref="System.Windows.Forms.ContextMenu"/>, or <see cref="System.Windows.Forms.MenuItem"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the derived class, <see cref="System.Windows.Forms.MenuItem"/> , to create a menu structure for a form. The example code adds a <see cref="System.Windows.Forms.MenuItem"/> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application. The example assumes that there is a <see cref="System.Windows.Forms.MainMenu"/> object named <c>mainMenu1</c> and four <see cref="System.Windows.Forms.MenuItem"/> objects named <c>menuItem1</c>, <c>menuItem2</c>, <c>menuItem3</c>, and <c>menuItem4</c>.</para>
			<codelink SampleID="Classic Menu Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MainMenu"/>
		<seealso cref="System.Windows.Forms.ContextMenu"/>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<keyword term="menus"/>
	</doc>
	<doc for="Menu.GetContextMenu">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.ContextMenu"/> that contains this menu.</para>
		</summary>
		<returns>
			<para>The <see cref="System.Windows.Forms.ContextMenu"/> that contains this menu. The default is
<see langword="null"/>.</para>
		</returns>
		<remarks>
			<para>This method allows you to obtain a reference to the <see cref="System.Windows.Forms.ContextMenu"/>
that this menu is contained in. This property returns
<see langword="null"/> if the menu is not contained in a <see cref="System.Windows.Forms.ContextMenu"/>.
This can occur if the menu is contained in a <see cref="System.Windows.Forms.MenuItem"/>
or <see cref="System.Windows.Forms.MainMenu"/>, or if the menu
is not contained in any menu. You can use this property to determine whether a menu
is currently being used, and also to determine where.</para>
		</remarks>
		<example>
			<para>In this example, you use the method <see langword="GetContextMenu "/>to obtain
   a reference to the shortcut menu that contains <c>menuItem1</c> or <c>menuItem2</c>, and display the shortcut menu information in a message
box. You programmatically create a shortcut menu with two items, <c>New</c> and <c>Open</c>. You then add functionality to these items by
creating the appropriate event handlers. When you run the example, you get a
message box that tells you to right-click the form in order to display the
shortcut menu. Then, when you click a menu item, you get another message that
tells which item has been clicked and displays the information on the containing
shortcut menu. This example assumes that you have already created a <see cref="System.Windows.Forms.Form"/> named
<c>Form1</c>.</para>
			<codelink SampleID="GetContextMenu2" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.GetMainMenu"/>
	</doc>
	<doc for="Menu.MenuItemCollection">
		<summary>
			<para>Represents a collection of <see cref="System.Windows.Forms.MenuItem"/> objects.</para>
		</summary>
		<remarks>
			<para>This class represents the collection of <see cref="System.Windows.Forms.MenuItem"/> objects stored in a <see cref="System.Windows.Forms.MainMenu"/>,
<see cref="System.Windows.Forms.ContextMenu"/>, or <see cref="System.Windows.Forms.MenuItem"/>. For the <see cref="System.Windows.Forms.MainMenu"/>
and <see cref="System.Windows.Forms.ContextMenu"/> classes, this collection represents the entire
menu structure for the control. For the <see cref="System.Windows.Forms.MenuItem"/> class, this collection represents the list of
submenu items associated with the <see cref="System.Windows.Forms.MenuItem"/>.</para>
			<para>The <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> and <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/> methods enable you to add
and remove individual menu items from the collection. You can also use
the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Clear"/> method
to remove all
the menu items from the collection.</para>
		</remarks>
	</doc>
	<doc for="Menu.MenuItemCollection.Add">
		<overload>
			<para>Adds a new <see cref="System.Windows.Forms.MenuItem"/> to the collection.</para>
		</overload>
		<summary>
			<para>Adds a new <see cref="System.Windows.Forms.MenuItem"/>, to the end of the current menu, with a specified caption.</para>
		</summary>
		<param name="caption">The caption of the menu item.</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> that represents the menu item being added to the
   collection.</para>
		</returns>
		<remarks>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> can only be contained in one menu at a
   time, and cannot be added more than once to the same menu. To reuse a <see cref="System.Windows.Forms.MenuItem"/>
   in
   more than one menu, use the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/> class. To remove
   a <see cref="System.Windows.Forms.MenuItem"/> that you have previously added, use
   the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
   method.</para>
		</remarks>
		<example>
			<para>The following example uses the derived
      class <see cref="System.Windows.Forms.MainMenu"/> to create a main menu, <c>mainMenu1</c>, that
   has two <see cref="System.Windows.Forms.MenuItem"/> objects added to its <see cref="System.Windows.Forms.Menu.MenuItems"/> collection. The code then assigns
<c>mainMenu1</c> to the <see cref="System.Windows.Forms.Form.Menu"/> property of the <see cref="System.Windows.Forms.Form"/>. This
example assumes that the code defined in this example is located with in a
form.</para>
			<codelink SampleID="Classic Menu.MenuItemCollection.Add Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
	</doc>
	<doc for="Menu.MenuItemCollection.Add1">
		<summary>
			<para>Adds a new <see cref="System.Windows.Forms.MenuItem"/> to the end of the current menu with a specified
   caption and a specified event handler for the <see cref="System.Windows.Forms.MenuItem.Click"/>
   event.</para>
		</summary>
		<param name="caption">The caption of the menu item.</param>
		<param name="onClick">An <see cref="System.EventHandler"/> that represents the event handler that is called when the item is clicked by the user or when a user, presses an accelerator or shortcut key for the menu item.</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> that represents the menu item being added to the collection.</para>
		</returns>
		<remarks>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> can only be contained in one menu at a
   time, and cannot be added more than once to the same menu. To reuse a <see cref="System.Windows.Forms.MenuItem"/> in
   more than one menu, use the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/>
   class. To remove a <see cref="System.Windows.Forms.MenuItem"/> that you have previously added, use the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
   method.</para>
			<para>This version of the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method allows you to specify a caption for
the menu item and a delegate to handle the <see cref="System.Windows.Forms.MenuItem.Click"/>
event. You can use this version of the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method if your
application already has an event handler to handle the <see cref="System.Windows.Forms.MenuItem.Click"/>
event.</para>
			<note type="note">
   The <see cref="System.Windows.Forms.MenuItem.Click"/>
   event is not raised for a <see cref="System.Windows.Forms.MenuItem"/> that contains
   submenu items.
   
</note>
		</remarks>
		<example>
			<para>The following example uses the derived class <see cref="System.Windows.Forms.MainMenu"/> to create a main menu, <c>mainMenu1</c>, that has two <see cref="System.Windows.Forms.MenuItem"/> objects added to its <see cref="System.Windows.Forms.Menu.MenuItems"/> collection. The code uses this version of
the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method to define an event
handler for the <see cref="System.Windows.Forms.MenuItem.Click"/> event of the second menu item
added to the collection. The code then assigns <c>mainMenu1</c> to the <see cref="System.Windows.Forms.Form.Menu"/> property of the <see cref="System.Windows.Forms.Form"/> . This example assumes that the code defined in this example is located within a form.</para>
			<codelink SampleID="Classic Menu.MenuItemCollection.Add1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
	</doc>
	<doc for="Menu.MenuItemCollection.Add3">
		<summary>
			<para>Adds a previously created <see cref="System.Windows.Forms.MenuItem"/> to the end of the current menu.</para>
		</summary>
		<param name="item">The <see cref="System.Windows.Forms.MenuItem"/> to add.</param>
		<returns>
			<para>The zero-based index where the item is stored in the collection.</para>
		</returns>
		<remarks>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> can only be contained in one menu at a
   time, and cannot be added more than once to the same menu. To reuse a <see cref="System.Windows.Forms.MenuItem"/> in
   more than one menu, use the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/>
   class. To remove a <see cref="System.Windows.Forms.MenuItem"/> that you have previously added, use the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
   method.</para>
			<para>This version of the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method allows you to add
previously created <see cref="System.Windows.Forms.MenuItem"/> objects
to the end of the menu item collection.</para>
		</remarks>
		<example>
			<para>The following example creates an instance of the derived class, <see cref="System.Windows.Forms.MainMenu"/>, and adds a <see cref="System.Windows.Forms.MenuItem"/> to its collection of <see cref="System.Windows.Forms.MenuItem"/> objects. This example assumes that the method defined in this example is located within the class for a form and called by a method in that form class.</para>
			<codelink SampleID="Classic Menu.MenuItems Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
	</doc>
	<doc for="Menu.MenuItemCollection.Add4">
		<summary>
			<para>Adds a previously created <see cref="System.Windows.Forms.MenuItem"/>
at the
specified index within the menu item collection.</para>
		</summary>
		<param name="index">The position to add the new item.</param>
		<param name="item">The <see cref="System.Windows.Forms.MenuItem"/> to add.</param>
		<returns>
			<para>The zero-based index where the item is stored in the collection.</para>
		</returns>
		<exception cref="System.Exception">The <see cref="System.Windows.Forms.MenuItem"/> being added is already in use.</exception>
		<exception cref="System.ArgumentException">The index supplied in the <paramref name="index"/> parameter is larger than the size of the collection.</exception>
		<remarks>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> can only be contained in one menu at a
   time, and cannot be added more than once to the same menu. To reuse a <see cref="System.Windows.Forms.MenuItem"/> in
   more than one menu, use the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/>
   class. To remove a <see cref="System.Windows.Forms.MenuItem"/> that you have previously added, use the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/> method.</para>
			<para>This version of the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method allows you to add
previously created <see cref="System.Windows.Forms.MenuItem"/> objects to a specific index location within the
collection. Any <see cref="System.Windows.Forms.MenuItem"/> currently located at that index, and
all <see cref="System.Windows.Forms.MenuItem"/> objects after that index,
are moved to the next lowest index in the collection.</para>
		</remarks>
		<example>
			<para>The following example creates an instance of the derived class, <see cref="System.Windows.Forms.MainMenu"/>, and adds a <see cref="System.Windows.Forms.MenuItem"/> object to its collection of <see cref="System.Windows.Forms.MenuItem"/> objects at a
   specific location in the menu item collection. This example assumes that the method defined in this example is located within the class for a form and called by a method in that form class.</para>
			<codelink SampleID="Classic Menu.MenuItemCollection.Add4 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
	</doc>
	<doc for="Menu.MenuItemCollection.Add2">
		<summary>
			<para>Adds a new <see cref="System.Windows.Forms.MenuItem"/> to the end of this menu with the specified
   caption, <see cref="System.Windows.Forms.MenuItem.Click"/>
   event handler, and items.</para>
		</summary>
		<param name="caption">The caption of the menu item.</param>
		<param name="items">An array of <see cref="System.Windows.Forms.MenuItem"/> objects that this <see cref="System.Windows.Forms.MenuItem"/> will contain.</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> that represents the menu item being added to the collection.</para>
		</returns>
		<remarks>
			<para>A <see cref="System.Windows.Forms.MenuItem"/> can only be contained in one menu at a
   time, and cannot be added more than once to the same menu. To reuse a <see cref="System.Windows.Forms.MenuItem"/> in
   more than one menu, use the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method of the <see cref="System.Windows.Forms.MenuItem"/>
   class. To remove a <see cref="System.Windows.Forms.MenuItem"/> that you have previously added, use the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/> method.</para>
			<para>This version of the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method allows you to specify
a caption for the menu item and a delegate that will handle its <see cref="System.Windows.Forms.MenuItem.Click"/>
event. You can use this version of the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method if your
application already has an event handler to handle the <see cref="System.Windows.Forms.MenuItem.Click"/>
event. This version of the method
also allows you to specify an array of previously created <see cref="System.Windows.Forms.MenuItem"/>
objects that you want to add to the collection. You can use this feature to
reuse existing <see cref="System.Windows.Forms.MenuItem"/> objects that have been cloned using
the <see cref="System.Windows.Forms.MenuItem.CloneMenu"/> method. If the <paramref name="items"/> parameter is not
empty or <see langword="null"/>, the <see cref="System.Windows.Forms.MenuItem"/> being added to the collection
will contain submenu items.</para>
			<note type="note">
   The <see cref="System.Windows.Forms.MenuItem.Click"/> event is not raised
   for a <see cref="System.Windows.Forms.MenuItem"/> that contains submenu items.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Remove"/>
	</doc>
	<doc for="Menu.IsParent">
		<summary>
			<para>Gets a value indicating whether this menu contains any menu items. This property is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if this menu
   contains <see cref="System.Windows.Forms.MenuItem"/> objects; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para> You can use this method to determine whether any <see cref="System.Windows.Forms.MenuItem"/> objects
   are assigned to this menu. This is equivalent to checking for
<see langword="null"/> in the <see cref="System.Windows.Forms.Menu.MenuItems"/> property. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.MainMenu"/>
with two <see cref="System.Windows.Forms.MenuItem"/> objects. It then uses the <see cref="System.Windows.Forms.Menu.IsParent"/><see langword=" "/>property to
determine whether <c>mainMenu1</c> contains
menu items. If the condition evaluates <see langword="true"/>, it sets the <see cref="System.Windows.Forms.MainMenu.RightToLeft"/> property to
<see langword="true"/> and binds the main menu
to the <see cref="System.Windows.Forms.Form"/>. This example assumes that you have a
<see cref="System.Windows.Forms.Form"/> 
created that is named <c>Form1</c>
.</para>
			<codelink SampleID="IsParent" SnippetID="1"/>





&gt;
</example>
		<seealso cref="System.Windows.Forms.Menu.MenuItems"/>
	</doc>
</docs>
