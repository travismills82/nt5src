<docs>
	<doc for="TabControl.tabBaseReLayoutMessage">
		<summary>
     This message is posted by the control to itself after a TabPage is
     added to it.  On certain occasions, after items are added to a
     TabControl in quick succession, TCM_ADJUSTRECT calls return the wrong
     display rectangle.  When the message is received, the control calls
     updateTabSelection() to layout the TabPages correctly.
 </summary>
	</doc>
	<doc for="TabControl.CreateParams">
		<summary>
     Returns the parameters needed to create the handle.  Inheriting classes
     can override this to provide extra functionality.  They should not,
     however, forget to call base.getCreateParams() first to get the struct
     filled up with the basic info.
 </summary>
	</doc>
	<doc for="TabControl.SelectedItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.AddItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.ApplySize">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.BeginUpdate">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.CreateControlsInstance">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.CreateHandle">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.EndUpdate">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.EndUpdate1">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.FindItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.FindItemExact">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.GetControl">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.GetItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.GetItems">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.GetItems1">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.GetTCITEM">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.GetToolTipText">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.Insert">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.InsertItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.OnHandleCreated">
		<summary>
     This is a notification that the handle has been created.
     We do some work here to configure the handle.
     Overriders should call base.OnHandleCreated()
 </summary>
	</doc>
	<doc for="TabControl.OnHandleDestroyed">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.HandleDestroyed" qualify="true"/> event.</para>
		</summary>
		<param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TabControl.OnHandleDestroyed"/> method also allows derived classes 
    to handle the event without attaching a delegate. This is the preferred
    technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.TabControl.OnHandleDestroyed"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.TabControl.OnHandleDestroyed"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.HandleDestroyed" qualify="true"/>
		<seealso cref="T:System.EventArgs"/>
	</doc>
	<doc for="TabControl.OnDrawItem">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TabControl.DrawItem"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.DrawItemEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TabControl.OnDrawItem"/> method also allows derived classes 
    to handle the event without attaching a delegate. This is the preferred
    technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.TabControl.OnDrawItem"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.TabControl.OnDrawItem"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
	</doc>
	<doc for="TabControl.OnKeyDown">
		<summary>
     We override this to get tabbing functionality.
     If overriding this, remember to call base.onKeyDown.
 </summary>
	</doc>
	<doc for="TabControl.OnResize">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.OnSelectedIndexChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TabControl.SelectedIndexChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TabControl.OnSelectedIndexChanged"/> method also allows derived classes 
    to handle the event without attaching a delegate. This is the preferred
    technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.TabControl.OnSelectedIndexChanged"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.TabControl.OnSelectedIndexChanged"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
	</doc>
	<doc for="TabControl.ProcessKeyPreview">
		<summary>
     We override this to get the Ctrl and Ctrl-Shift Tab functionality.
 </summary>
	</doc>
	<doc for="TabControl.UpdateSize">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.OnFontChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.Control.FontChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TabControl.OnFontChanged"/> method also allows derived classes 
    to handle the event without attaching a delegate. This is the preferred
    technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.TabControl.OnFontChanged"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.TabControl.OnFontChanged"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
	</doc>
	<doc for="TabControl._RemoveAll">
		<summary>
     Removes all tabs from the tabstrip.  All values and data are discarded.
 </summary>
	</doc>
	<doc for="TabControl.RemoveItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.SetDisplayRectangleSize">
		<summary>
			<para>Sets the size of the tabstrip based on a desired size for the Display
       Rectangle. Note that this is only guaranteed to be valid until tabs
       are added or removed. After that, the display size can change when
       the number of visible rows changes. [Note: zero tabs == zero rows]</para>
		</summary>
		<param name="width">
		</param>
		<param name="height">
		</param>
	</doc>
	<doc for="TabControl.SetDisplayRectangleSize1">
		<summary>
    Sets the size of the tabstrip based on a desired size for the Display
    Rectangle.  Note that this is only guaranteed to be valid until tabs
    are added or removed.  After that, the display size can change when
    the number of visible rows changes. [Note: zero tabs == zero rows]
 </summary>
		<param name="sz">New Desired Display Size.  The size of the tabstrip
    will be adjusted to reflect this.</param>
	</doc>
	<doc for="TabControl.SetItem">
		<summary>
     This has package scope so that TabStrip and TabControl can call it.
 </summary>
	</doc>
	<doc for="TabControl.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="TabControl.UpdateTabSelection">
		<summary>
		</summary>
		<summary>
     Set the panel selections appropriately
 </summary>
	</doc>
	<doc for="TabControl.OnStyleChanged">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.UpdateTab">
		<summary>
     This allows the TabPage to update us to it's changes.
		</summary>
	</doc>
	<doc for="TabControl.WmNeedText">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.WmReflectDrawItem">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.WmSelChange">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.WmTabBaseReLayout">
		<summary>
		</summary>
	</doc>
	<doc for="TabControl.WndProc">
		<summary>
     The tab's window procedure.  Inheritng classes can override this
     to add extra functionality, but should not forget to call
     base.wndProc(m); to ensure the tab continues to function properly.
 </summary>
		<param name="m">
     A Windows Message Object.
 </param>
	</doc>
	<doc for="TabControl.TabPageCollection.IList.this">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.TabPage"/> at a specified index.</para>
		</summary>
		<param name="index">The index of the <see cref="System.Windows.Forms.TabPage"/> to get.</param>
		<value>
			<para>The <see cref="System.Windows.Forms.TabPage"/> at the specified index.</para>
		</value>
	</doc>
	<doc for="TabControl.IsInputKey">
		<summary>
			<para>Determines whether the specified key is a regular
      input key or a special key that requires preprocessing.</para>
		</summary>
		<param name="keyData">One of the <see cref="System.Windows.Forms.Keys"/> values.</param>
		<returns>
			<para>
				<see langword="true"/> if the specified key is a regular 
   input key; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>Call this method during window-message preprocessing to 
      determine whether the specified key is a regular input key that should be sent
      directly to the tab control or a special key (such as PAGE UP and PAGE DOWN)
      that should preprocessed. In the latter case, send the key to the control only if it is not consumed by the preprocessing phase.</para>
		</remarks>
	</doc>
	<doc for="TabControl.Click">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.SelectedIndexChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.TabControl.SelectedIndex"/> property is changed.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="TabControl.TabPageCollection">
		<summary>
			<para>Contains a collection of <see cref="System.Windows.Forms.TabPage"/> objects.</para>
		</summary>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc>
	<doc for="TabControl.TabPageCollection.GetEnumerator">
		<summary>
			<para>Returns an enumeration of all the tab pages in the collection.</para>
		</summary>
		<returns>
			<para>An <see cref="T:System.Collections.IEnumerator"/> for the <see cref="System.Windows.Forms.TabControl.TabPageCollection"/>.</para>
		</returns>
		<remarks>
			<para> 
      This method creates an enumerator that contains a
      snapshot of the collection. You can change the collection by changing the enumerator;
      however, multiple enumerators can simultaneously access the same collection. Changing the collection (either
      directly or through another enumerator) can thus cause <see cref="P:System.Collections.IEnumerator.Current"/> or <see cref="M:System.Collections.IEnumerator.MoveNext"/> to throw an exception.</para>
			<para> Two enumerators
      created from the same collection at the same time can contain different snapshots.</para>
			<para>Removing objects from the enumerator also removes them
      from the collection.</para>
		</remarks>
		<seealso cref="P:System.Collections.IEnumerator.Current"/>
		<seealso cref="T:System.Collections.IEnumerator"/>
		<seealso cref="M:System.Collections.IEnumerator.MoveNext"/>
	</doc>
	<doc for="TabControl.ControlCollection.ControlCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabControl.ControlCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.TabControl"/> that this collection belongs to.</param>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc>
	<doc for="TabControl.ControlCollection.Remove">
		<summary>
			<para>Removes a <see cref="System.Windows.Forms.Control"/> from the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.Control"/> to remove.</param>
		<seealso cref="System.Windows.Forms.TabControl.ControlCollection.Add"/>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc>
	<doc for="TabControl.RemoveAll">
		<summary>
			<para>Removes all the tab pages and additional controls
      from this tab control.</para>
		</summary>
		<remarks>
			<para>All controls are removed through the Controls property.</para>
		</remarks>
	</doc>
	<doc for="TabControl.DefaultSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.TabPageCollection.TabPageCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabControl.TabPageCollection"/> class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.TabControl"/> that this collection belongs to.</param>
		<exception cref="T:System.ArgumentNullException">The specified <see cref="System.Windows.Forms.TabControl"/> is <see langword="null"/>.</exception>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc><doc for="TabControl.TabPageCollection.this">
		<summary>
			<para> Gets or sets a <see cref="System.Windows.Forms.TabPage"/> in
   the collection.</para>
		</summary>
		<param name="index">The 0-based index of the tab page to get or set.</param>
		<value>
			<para> The <see cref="System.Windows.Forms.TabPage"/> at the specified index.</para>
		</value>
		<exception cref="T:System.ArgumentException">The value is not a <see cref="System.Windows.Forms.TabPage"/>.</exception>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Add"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Contains"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.IndexOf"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.RemoveAt"/>
	</doc><doc for="TabPageCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabPageCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TabControl.SelectedTab">
		<summary>
			<para> Gets or sets the currently-selected tab page.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.TabPage"/> that
 represents the
 selected tab page. If no tab page is selected, the value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para> The selection to the
 given tab, provided it equals a tab in the list.</para>
		</remarks>
		<example>
			<para> The following example
 creates a <see cref="System.Windows.Forms.TabControl"/> with two <see cref="System.Windows.Forms.TabPage"/> objects. The <see cref="System.Windows.Forms.TabControl.SelectedTab"/> property
 sets <c>tabPage2</c>
 as the currently-selected tab page.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/>
namespaces for this example.</para>
			<codelink SampleID="SelectedTab" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabPage"/>
	</doc>
	<doc for="TabControl.ControlCollection">
		<summary>
			<para>Contains a collection of <see cref="System.Windows.Forms.Control"/> objects.</para>
		</summary>
		<seealso cref="System.Windows.Forms.TabControl"/>
	</doc>
	<doc for="TabControl.HotTrack">
		<summary>
			<para>Gets or sets a value indicating whether the control's tabs change in appearance when the mouse passes over them.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the tabs change in appearance when
   the mouse passes over them; otherwise, <see langword="false"/>. The default is
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The color that the tab changes to when the mouse is over it is determined by
      the local computer's system colors. To change the system colors, use Control
      Panel.</para>
		</remarks>
		<example>
			<para> The following example
      creates a <see cref="System.Windows.Forms.TabControl"/> with two <see cref="System.Windows.Forms.TabPage"/> objects. The <see cref="System.Windows.Forms.TabControl.HotTrack"/> property is set to
   <see langword="true"/>, which highlights the
      tab <see cref="System.Windows.Forms.TabPage.Text"/>
				<c>myTabPage1</c> or <c>myTabPage2</c>
      when the mouse passes over the tabs. </para>
			<para> Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example. </para>
			<codelink SampleID="HotTrack" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabControl.SelectedIndex">
		<summary>
			<para> Gets or sets the index of the currently-selected tab page.</para>
		</summary>
		<value>
			<para>The 0-based index of the currently-selected tab page.
      The default is -1, which is also the value if no tab page is selected.</para>
		</value>
		<exception cref="T:System.ArgumentException">The value is less than -1.</exception>
		<example>
			<para> The following example
      creates a <see cref="System.Windows.Forms.TabControl"/> with two <see cref="System.Windows.Forms.TabPage"/>
      objects. The <see cref="System.Windows.Forms.TabControl.SelectedIndex"/> property sets <c>tabPage2</c>
   as
   the currently-selected tab page using its
   index value. </para>
			<para> Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for
this example. </para>
			<codelink SampleID="SelectedIndex" SnippetID="1"/>
		</example>
	</doc><doc for="TabControl.RowCount">
		<summary>
			<para>Gets the number of rows that are currently being displayed in the control's tab strip. </para>
		</summary>
		<value>
			<para>The number of rows that are currently being displayed in the tab strip.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Windows.Forms.TabControl.RowCount"/>
property when the <see cref="System.Windows.Forms.TabControl.Multiline"/> property is <see langword="true"/>
and you want to know the number of rows that the tabs occupy.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with five <see cref="System.Windows.Forms.TabPage"/> objects. This example uses
the <see cref="P:System.Windows.Forms.TabControl.RowCount"/> property to get the
number of rows currently in the <c>tabControl1</c> tab strip.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="RowCount" SnippetID="1"/>
		</example>
	</doc><doc for="TabControl.TabCount">
		<summary>
			<para>Gets the number of tabs in the tab strip.</para>
		</summary>
		<value>
			<para>The number of tabs in the tab strip.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/> 
with five <see cref="System.Windows.Forms.TabPage"/> objects. This example uses
the <see cref="P:System.Windows.Forms.TabControl.TabCount"/> property to get the number of
tabs currently in the <c>tabControl1</c>
tab strip.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="TabCount" SnippetID="1"/>
		</example>
	</doc><doc for="TabControl">
		<summary>
			<para>Manages a related set of tab pages.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.TabControl"/> contains tab pages, which are represented by
<see cref="System.Windows.Forms.TabPage"/> objects that you add through the <see cref="System.Windows.Forms.Control.Controls"/>
property. </para>
			<note type="note">
   The following events are not raised
   for the <see cref="System.Windows.Forms.TabControl"/> class unless there is at least one <see cref="System.Windows.Forms.TabPage"/> in
   the <see cref="System.Windows.Forms.TabControl.TabPages" qualify="true"/> collection: <see cref="System.Windows.Forms.Control.Click" qualify="true"/>, <see cref="System.Windows.Forms.Control.DoubleClick" qualify="true"/>, <see cref="System.Windows.Forms.Control.MouseDown" qualify="true"/>,
<see cref="System.Windows.Forms.Control.MouseUp" qualify="true"/>, 
<see cref="System.Windows.Forms.Control.MouseHover" qualify="true"/>, <see cref="System.Windows.Forms.Control.MouseEnter" qualify="true"/>, <see cref="System.Windows.Forms.Control.MouseLeave" qualify="true"/> and <see cref="System.Windows.Forms.Control.MouseMove" qualify="true"/>. If there is at least one <see cref="System.Windows.Forms.TabPage"/> in
   the collection, and the user interacts with the tab control’s header (where the
<see cref="System.Windows.Forms.TabPage"/> names appear), the <see cref="System.Windows.Forms.TabControl"/> 
raises the appropriate event. However, if the user interaction is within the
<see cref="System.Windows.Forms.Control.ClientRectangle"/> of the tab page, the <see cref="System.Windows.Forms.TabPage"/> 
raises the appropriate event.
</note>
		</remarks>
		<example>
			<para>The following example uses the Visual Studio .NET Windows
      Forms Designer to create a <see cref="System.Windows.Forms.TabControl"/>
      with three tab pages. Each tab page contains several
      controls.</para>
			<codelink SampleID="Classic TabControl Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabControl.Dispose">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.TabPageCollection.Count">
		<summary>
			<para> Gets the number of tab pages in the collection.</para>
		</summary>
		<value>
			<para> The number of tab pages in the collection.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with three <see cref="System.Windows.Forms.TabPage"/> . The <see cref="P:System.Windows.Forms.TabControl.TabPageCollection.Count"/> property gets
the number of <see cref="System.Windows.Forms.TabPage"/> objects in the <c>tabControl1</c> controls collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPageCollection.Count" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabControl.TabPageCollection.IndexOf">
		<summary>
			<para>Returns the index of the specified tab page in the collection.</para>
		</summary>
		<param name="page">The <see cref="System.Windows.Forms.TabPage"/> to locate in the collection.</param>
		<returns>
			<para> The 0-based index of the tab page; -1 if it cannot be found.</para>
		</returns>
		<exception cref="T:System.ArgumentNullException"> The value of <paramref name="page"/> is <see langword="null"/>.</exception>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . This example
uses the <see cref="System.Windows.Forms.TabControl.TabPageCollection.IndexOf"/> method to
retrieve the <c>tabPage1</c> index value. A ToolTip is used to display
this value. </para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPageCollection.IndexOf" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Contains"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.this"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.RemoveAt"/>
	</doc>
	<doc for="TabControl.ControlCollection.Add">
		<summary>
			<para>Adds a <see cref="System.Windows.Forms.Control"/> to the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.Control"/> to add.</param>
		<exception cref="T:System.Exception">The specified <see cref="System.Windows.Forms.Control"/> is a <see cref="System.Windows.Forms.TabPage"/> .</exception>
		<remarks>
			<para>You cannot add a <see cref="System.Windows.Forms.TabPage"/> to a <see cref="System.Windows.Forms.TabPage"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TabControl.ControlCollection.Remove"/>
		<seealso cref="System.Windows.Forms.TabControl"/>
		<seealso cref="System.Windows.Forms.TabPage"/>
	</doc>
	<doc for="TabControl.TabControl">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TabControl"/> class.</para>
		</summary>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/> with one <see cref="System.Windows.Forms.TabPage"/> . The <see cref="M:System.Windows.Forms.TabControl.#ctor"/> constructor creates an 
   instance of <c>tabControl1</c> .</para>
			<para>Use the <see cref="N:System.Windows.Forms"/> namespace for this example.</para>
			<codelink SampleID="TabControl_constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabControl.Alignment">
		<summary>
			<para> Gets or sets the area of the control (for example, along the top)
      where the tabs are aligned.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.TabAlignment"/> values. The default is
<see langword="Top"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The property value is not a valid <see cref="System.Windows.Forms.TabAlignment"/> value.</exception>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.TabControl.Alignment"/> property is set to
<see langword="Left"/> or <see langword="Right"/>, the <see cref="System.Windows.Forms.TabControl.Multiline"/> property is automatically set to 
<see langword="true"/>.</para>
			<para>When you set the <see cref="System.Windows.Forms.TabControl.Appearance"/> property to <see langword="FlatButtons"/>,
it only appears as such when the <see cref="System.Windows.Forms.TabControl.Alignment"/> property is set to
<see langword="Top"/>. Otherwise, the <see cref="System.Windows.Forms.TabControl.Appearance"/> property displays as if set to the 
<see langword="Buttons"/> value.</para>
			<note type="note">
   When
   you set the <see cref="System.Windows.Forms.TabControl.Appearance"/> property to <see langword="Buttons"/>, you must also set the
<see cref="System.Windows.Forms.TabControl.Alignment"/> property to 
<see langword="Top"/> so that the buttons display correctly. 
</note>
		</remarks>
		<example>
			<para> The following example
      creates a <see cref="System.Windows.Forms.TabControl"/> with three <see cref="System.Windows.Forms.TabPage"/>
      objects.
      The <see cref="System.Windows.Forms.TabControl.Alignment"/> property is set to
   <see langword="Left"/>,
      which positions
      the tabs of <c>tabControl1</c> on the left side. </para>
			<para> Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example. </para>
			<codelink SampleID="TabAlignment" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.Appearance"/>
		<seealso cref="System.Windows.Forms.TabControl.Multiline"/>
		<seealso cref="System.Windows.Forms.TabAlignment"/>
	</doc>
	<doc for="TabControl.Appearance">
		<summary>
			<para> Gets or sets
      the visual appearance of the control's tabs. </para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.TabAppearance"/> values. The default is
<see langword="Normal"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The property value is not a valid <see cref="System.Windows.Forms.TabAppearance"/> value.</exception>
		<remarks>
			<para>When you set the <see cref="System.Windows.Forms.TabControl.Appearance"/> property to <see langword="FlatButtons"/>,
   it only appears as such when the <see cref="System.Windows.Forms.TabControl.Alignment"/> property is set to
<see langword="Top"/>. Otherwise, the <see cref="System.Windows.Forms.TabControl.Appearance"/> property appears as if set to the 
<see langword="Buttons"/> value.</para>
			<note type="note">
   When
   you set the <see cref="System.Windows.Forms.TabControl.Appearance"/> property to <see langword="Buttons"/>, you must also set the
<see cref="System.Windows.Forms.TabControl.Alignment"/> property to 
<see langword="Top"/> so that the buttons display correctly. 
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with two <see cref="System.Windows.Forms.TabPage"/> objects. This example sets
the <see cref="P:System.Windows.Forms.TabControl.Appearance"/> property to <see langword="Buttons"/>,
which displays the tabs of the tab pages as buttons.</para>
			<para>Use the <see cref="N:System.Windows.Forms"/> namespace for this example.</para>
			<codelink SampleID="Appearance" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.Alignment"/>
		<seealso cref="System.Windows.Forms.TabAppearance"/>
	</doc>
	<doc for="TabControl.DisplayRectangle">
		<summary>
			<para>Gets the display area of the control's tab pages.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Rectangle"/> that
   represents the display area of the tab
   pages.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/> with one <see cref="System.Windows.Forms.TabPage"/>
. This example uses the <see cref="P:System.Windows.Forms.TabControl.DisplayRectangle"/> property
to draw a <see cref="T:System.Drawing.Rectangle"/> representing the tab page display area of <c>tabControl1</c>. Notice that the
example uses the <see cref="System.Drawing.Rectangle.Inflate"/> method; otherwise, the <see cref="System.Windows.Forms.TabPage"/>
drawing code overwrites the <see cref="System.Drawing.Rectangle"/> drawn in
the <c>DrawOnTabPage</c> method.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="DisplayRectangle1" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Drawing.Rectangle"/>
	</doc>
	<doc for="TabControl.DrawMode">
		<summary>
			<para> Gets or sets the way
      that the control's tab pages are drawn.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.TabDrawMode"/> values. The default is
<see langword="Normal"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The property value is not a valid <see cref="System.Windows.Forms.TabDrawMode"/> value.</exception>
		<remarks>
			<para>Tab pages can be drawn by the control or by the user of the control. The
   <see cref="System.Windows.Forms.TabControl.DrawMode"/> property allows users of the control to
      customize the way that the tab control is drawn.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . This example sets the <see cref="P:System.Windows.Forms.TabControl.DrawMode"/> property to <see langword="OwnerDrawFixed"/>, which specifies that the tabs are drawn
by the parent object <c>Form1</c>.
The value <see langword="OwnerDrawFixed"/> also allows access to
the <see cref="E:System.Windows.Forms.TabControl.DrawItem"/> event, which, in this
example, is used to draw <c>myTabRect</c> on the <c>tabPage1</c>
tab.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/>
namespaces with this example.</para>
			<codelink SampleID="DrawMode" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabDrawMode"/>
	</doc>
	<doc for="TabControl.ImageList">
		<summary>
			<para>Gets or sets the images to display on the control's tabs.</para>
		</summary>
		<value>
			<para>An <see cref="System.Windows.Forms.ImageList"/> that
   specifies the images to display on the tabs.</para>
		</value>
		<remarks>
			<para>To display an image on a tab, set the <see cref="System.Windows.Forms.TabPage.ImageIndex"/> property of that <see cref="System.Windows.Forms.TabPage"/>.
   The <see cref="System.Windows.Forms.TabPage.ImageIndex"/> acts as the index into the <see cref="System.Windows.Forms.TabControl.ImageList"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . This example uses the
<see cref="P:System.Windows.Forms.TabControl.ImageList"/> property to display images, 
from the collection defined by the <see cref="System.Windows.Forms.ImageList"/>
named <c>myImages</c>, on the tabs
of <c>tabControl1</c> .</para>
			<para>Use the <see cref="N:System.Drawing"/>, <see cref="N:System.ComponentModel"/>, <see cref="N:System.Windows.Forms"/>, and <see cref="N:System.Resources"/> namespaces for this example.</para>
			<codelink SampleID="TabControl.ImageList" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ImageList"/>
	</doc>
	<doc for="TabControl.ItemSize">
		<summary>
			<para>Gets or sets the size of the control's tabs. </para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Size"/> 
that represents the size of the tabs. The default automatically
sizes the tabs to fit the icons and labels on the tabs.</para>
		</value>
		<exception cref="T:System.ArgumentException">The width or height of the <see cref="T:System.Drawing.Size"/> is less than 0.</exception>
		<remarks>
			<para>To change the <see cref="P:System.Drawing.Size.Width"/> property of the <see cref="System.Windows.Forms.TabControl.ItemSize"/> property, the <see cref="System.Windows.Forms.TabControl.SizeMode"/> property must be set to
<see langword="Fixed"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with two <see cref="System.Windows.Forms.TabPage"/> objects. To define
the dimensions of the tabs, set the <see cref="System.Windows.Forms.TabControl.ItemSize"/> property equal
to a <see cref="System.Drawing.Size"/> structure. In this example, <see cref="System.Drawing.Size"/> defines the tabs 90 pixels wide and 50
pixels high. You cannot change the width of the tabs unless the <see cref="System.Windows.Forms.TabControl.SizeMode"/> property is set
to the <see cref="System.Windows.Forms.TabSizeMode.Fixed"/>
value.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="ItemSize" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Drawing.Size"/>
	</doc>
	<doc for="TabControl.Multiline">
		<summary>
			<para>Gets or sets a value indicating whether more than one row
      of tabs can be displayed.</para>
		</summary>
		<value>
			<para><see langword="true"/> if more than one row of tabs can
   be displayed; otherwise, <see langword="false"/>. The default is
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>If <see cref="System.Windows.Forms.TabControl.Multiline"/> is
<see langword="false"/> , only one row of tabs 
   is displayed, even if all the tabs do not fit in the available space. In that case,
   however, arrows are displayed that allow the user to navigate to the undisplayed tabs.</para>
			<para>If the <see cref="System.Windows.Forms.TabControl.Multiline"/> property is changed to
<see langword="false"/> while the <see cref="System.Windows.Forms.TabControl.Alignment"/> property is set to 
<see langword="Left"/> or <see langword="Right"/>, the <see cref="System.Windows.Forms.TabControl.Alignment"/> property is automatically reset to 
<see langword="Top"/>.</para>
		</remarks>
		<example>
			<para> The following example creates
      a <see cref="System.Windows.Forms.TabControl"/> with four <see cref="System.Windows.Forms.TabPage"/> objects.
      The <see cref="System.Windows.Forms.TabControl.Multiline"/>
      property is set to <see langword="true"/>,
      which displays two
      rows of tabs instead of one. </para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/>
namespaces for this example. </para>
			<codelink SampleID="Multiline" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.Alignment"/>
	</doc>
	<doc for="TabControl.SizeMode">
		<summary>
			<para>Gets or sets the way that the control's tabs are sized.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.TabSizeMode"/> values. The default is
<see langword="Normal"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The property value is not a valid <see cref="System.Windows.Forms.TabSizeMode"/> value.</exception>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with five <see cref="System.Windows.Forms.TabPage"/> . This example sets
the <see cref="P:System.Windows.Forms.TabControl.SizeMode"/> property to
<see langword="FillToRight"/>, which sizes the tabs so that each row fills 
the entire width of <c>tabControl1</c>
.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="SizeMode" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabSizeMode"/>
	</doc>
	<doc for="TabControl.DrawItem">
		<summary>
			<para>Occurs when the tabs are drawn, if the <see cref="System.Windows.Forms.TabControl.DrawMode"/> property is set to
<see langword="OwnerDrawFixed"/>.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . This example declares
an event handler that is used to draw a string and
<see langword="Rectangle"/> on the tab of <c>tabPage1</c>. The event handler is bound to 
the <see langword="DrawItem"/>
event.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="DrawItem" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DrawItemEventHandler"/>
		<seealso cref="System.Windows.Forms.TabControl.OnDrawItem"/>
	</doc>
	<doc for="TabControl.GetTabRect">
		<summary>
			<para> Returns the bounding rectangle for a specified tab in this tab control.</para>
		</summary>
		<param name="index">The 0-based index of the tab you want.</param>
		<returns>
			<para>A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the specified
   tab.</para>
		</returns>
		<exception cref="ArgumentOutOfRangeException"><para>The index is less than zero.</para>
			<para>-or-</para>
			<para>The index is greater than or equal to <see cref="TabControl.TabPageCollection.Count"/> . </para></exception>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/> . This example uses the <see cref="M:System.Windows.Forms.TabControl.GetTabRect"/> method to get a
<see langword="Rectangle"/> that represents the <c>tabPage1</c> tab area. The <c>myTabRect</c>
				<see langword="Rectangle"/> is drawn by
the <see cref="E:System.Windows.Forms.TabControl.DrawItem"/> event.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces with this example.</para>
			<codelink SampleID="GetTabRect" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabControl.Padding">
		<summary>
			<para>Gets or sets the amount of space around each item on the control's tab pages. </para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Point"/> that specifies the amount of
   space to pad each item with. The default is (6,3).</para>
		</value>
		<exception cref="T:System.ArgumentException">The width or height of the <see cref="T:System.Drawing.Point"/> is less than 0.</exception>
		<example>
			<para> The following example creates
      a <see cref="System.Windows.Forms.TabControl"/> with two <see cref="System.Windows.Forms.TabPage"/>
      objects. The <see cref="System.Windows.Forms.TabControl.Padding"/>
      property is used to create a cushion of 22 pixels around the tab <see cref="System.Windows.Forms.TabPage.Text"/>
				<c>myTabPage1</c> and <c>myTabPage2</c>.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
      example.</para>
			<codelink SampleID="Padding" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Drawing.Point"/>
	</doc>
	<doc for="TabControl.TabPageCollection.IsReadOnly">
		<summary>
			<para> Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para>This property always returns <see langword="false"/>.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with two <see cref="System.Windows.Forms.TabPage"/> . This example gets the <c>tabControl1</c>
controls collection and
determines if it is read-only using the <see cref="P:System.Windows.Forms.TabControl.TabPageCollection.IsReadOnly"/> property. </para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="TabPageCollection.IsReadOnly" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TabControl.BackColor">
		<hideinheritance/>
		<nodoc/>
	</doc>
	<doc for="TabControl.BackColorChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.BackgroundImage">
		<hideinheritance/>
		<nodoc/>
	</doc>
	<doc for="TabControl.BackgroundImageChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.ForeColor">
		<hideinheritance/>
		<nodoc/>
	</doc>
	<doc for="TabControl.ForeColorChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.Text">
		<hideinheritance/>
		<nodoc/>
	</doc>
	<doc for="TabControl.TextChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.OnPaint">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TabControl.ShowToolTips">
		<summary>
			<para> Gets or sets a value indicating whether a tab's ToolTip is shown when the mouse passes over the tab.</para>
		</summary>
		<value>
			<para><see langword="true"/> if ToolTips are shown for the tabs that have them;
   otherwise, <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>To create a ToolTip for a tab, set the <see cref="System.Windows.Forms.TabPage.ToolTipText"/> property of the <see cref="System.Windows.Forms.TabPage"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with two <see cref="System.Windows.Forms.TabPage"/> objects. For tab page ToolTips
to display, the <see cref="System.Windows.Forms.TabControl.ShowToolTips"/> property must equal to
<see langword="true"/>, as in this example. The <see cref="System.Windows.Forms.TabPage.ToolTipText"/> property is used
to assign string values to the ToolTips.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="ToolTipText" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolTip"/>
	</doc>
	<doc for="TabControl.TabPageCollection.Add">
		<summary>
			<para>Adds a <see cref="System.Windows.Forms.TabPage"/> to the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.TabPage"/> to add.</param>
		<exception cref="T:System.ArgumentNullException">The specified <paramref name="value"/> is <see langword="null"/>.</exception>
		<exception cref="T:System.ArgumentException">The specified object is not a <see cref="System.Windows.Forms.TabPage"/>.</exception>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/>
. This example uses the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.Add"/> method to
add a single tab page to the <c>tabControl1</c> tab control. Notice the <see cref="P:System.Windows.Forms.TabControl.TabPages"/> property is used to get
the <c>tabControl1</c>
controls collection to add the <c>tabPage1</c> to this
collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="TabPageCollection.Add" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Remove"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.RemoveAt"/>
	</doc>
	<doc for="TabControl.TabPageCollection.AddRange">
		<summary>
			<para> Adds a set of tab pages to the collection.</para>
		</summary>
		<param name="pages">An array of type <see cref="System.Windows.Forms.TabPage"/> that contains the tab pages to add.</param>
		<exception cref="T:System.ArgumentNullException">The value of pages equals null.</exception>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with three <see cref="System.Windows.Forms.TabPage"/> . This example uses
the <see cref="System.Windows.Forms.TabControl.TabPageCollection.AddRange"/>
method to add an array of tab pages to the <c>tabControl1</c> tab control. Notice
that the <see cref="System.Windows.Forms.TabControl.TabPages"/> property gets the <c>tabControl1</c> controls collection, in
order to add the array of tab pages
to this collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this collection.</para>
			<codelink SampleID="TabPageCollection.AddRange" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Add"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Remove"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.RemoveAt"/>
		<seealso cref="System.Windows.Forms.TabPage"/>
	</doc>
	<doc for="TabControl.TabPageCollection.Contains">
		<summary>
			<para>Determines whether a specified tab page is in the collection.</para>
		</summary>
		<param name="page">The <see cref="System.Windows.Forms.TabPage"/> to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the
   specified <see cref="System.Windows.Forms.TabPage"/> is
   in the collection; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="T:System.ArgumentNullException">The value of <paramref name="page"/> is <see langword="null"/>.</exception>
		<example>
			<para>The following example initially creates a <see cref="System.Windows.Forms.TabControl"/>
with three <see cref="System.Windows.Forms.TabPage"/> objects. The first two tab pages are
added directly to <c>tabControl1</c> by the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.AddRange"/>
method. The <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.Contains"/>
method determines <c>tabPage3</c> is part of the <c>tabControl1</c> controls collection.
Because <c>tabPage3</c> was not found in
this collection, it was
added by the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.Add"/>
method. </para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPageCollection.Contains" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.this"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.IndexOf"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.GetEnumerator"/>
		<seealso cref="System.Windows.Forms.TabPage"/>
	</doc>
	<doc for="TabControl.TabPageCollection.Clear">
		<summary>
			<para>Removes all the tab pages from the collection.</para>
		</summary>
		<example>
			<para>The following example initially creates a <see cref="System.Windows.Forms.TabControl"/>
with three <see cref="System.Windows.Forms.TabPage"/> . This example uses
the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.Clear"/> method
to clear all controls in the <c>tabControl1</c> controls collection at one instance. Then, the
example adds <c>tabPage2</c> back to the collection. Notice
that the <see cref="P:System.Windows.Forms.TabControl.TabPages"/> property is used to get
the <c>tabControl1</c>
controls collection to remove (and add) tab pages from this
collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="TabPageCollection.Clear" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Remove"/>
	</doc>
	<doc for="TabControl.TabPageCollection.Remove">
		<summary>
			<para>Removes a <see cref="System.Windows.Forms.TabPage"/> from the collection.</para>
		</summary>
		<param name="value">The <see cref="System.Windows.Forms.TabPage"/> to remove.</param>
		<exception cref="T:System.ArgumentNullException">The <paramref name="value"/> parameter is <see langword="null"/>.</exception>
		<example>
			<para>The following example initially creates a <see cref="System.Windows.Forms.TabControl"/>
with three <see cref="System.Windows.Forms.TabPage"/> . This example uses
the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.Remove"/> method to
remove a single tab page, specifically <c>tabPage2</c> from the <c>tabControl1</c> controls collection. Notice that the <see cref="P:System.Windows.Forms.TabControl.TabPages"/> property gets the <c>tabControl1</c> controls
collection to add and remove tab pages from this collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces with this
example.</para>
			<codelink SampleID="TabPageCollection.Remove" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Add"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Clear"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.RemoveAt"/>
	</doc>
	<doc for="TabControl.TabPageCollection.RemoveAt">
		<summary>
			<para>Removes the tab page at the specified index from the collection.</para>
		</summary>
		<param name="index">The 0-based index of the <see cref="System.Windows.Forms.TabPage"/> to remove.</param>
		<example>
			<para>The following example initially creates a <see cref="System.Windows.Forms.TabControl"/>
with three <see cref="System.Windows.Forms.TabPage"/> . This example uses
the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.RemoveAt"/> method to
remove <c>tabPage1</c>, which is
specified by its index, from the <c>tabControl1</c> controls collection. Notice that the <see cref="P:System.Windows.Forms.TabControl.TabPages"/> property gets the <c>tabControl1</c> controls collection to add and remove tab pages from
this collection.</para>
			<para> Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for
this example.</para>
			<codelink SampleID="TabPageCollection.RemoveAt" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Clear"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.IndexOf"/>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection.Remove"/>
	</doc>
	<doc for="TabControl.TabPages">
		<summary>
			<para>Gets the collection of tab pages in this tab control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.TabControl.TabPageCollection"/> that contains the <see cref="System.Windows.Forms.TabPage"/>
objects in this <see cref="System.Windows.Forms.TabControl"/>.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.TabControl"/>
with one <see cref="System.Windows.Forms.TabPage"/>
. This example uses the <see cref="M:System.Windows.Forms.TabControl.TabPageCollection.Add"/> method to
add a single tab page to the <c>tabControl1</c> tab control. Notice the <see cref="P:System.Windows.Forms.TabControl.TabPages"/> property is used to get
the <c>tabControl1</c>
controls collection to add the <c>tabPage1</c> to this
collection.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Windows.Forms"/> namespaces for this
example.</para>
			<codelink SampleID="TabPageCollection.Add" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TabControl.TabPageCollection"/>
	</doc>
</docs>
