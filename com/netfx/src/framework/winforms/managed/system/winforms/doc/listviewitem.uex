<docs>
	<doc for="ListViewItem.EnsureVisible">
		<summary>
			<para>Ensures that the item is visible within the control, scrolling the contents of the control if necessary.</para>
		</summary>
		<remarks>
			<para>You can use this method to ensure that the item is visible within the <see cref="System.Windows.Forms.ListView"/> 
control. This method can be used when performing validation on the item.
You can call the <see cref="System.Windows.Forms.ListViewItem.EnsureVisible"/> method to ensure
that the item is displayed in the <see cref="System.Windows.Forms.ListView"/> control, if
it failed validation, to allow the user to perform changes on the item.</para>
			<para>This method is similar to the <see cref="System.Windows.Forms.ListView.EnsureVisible"/> method of the <see cref="System.Windows.Forms.ListView"/> 
control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.EnsureVisible"/>
	</doc><doc for="ListViewItem.ListViewItem2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with specified item text.</para>
		</summary>
		<param name="text">The text to display for the item.</param>
	</doc><doc for="ListViewItem.ListViewItem4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with an array of strings representing subitems.</para>
		</summary>
		<param name="items">An array of strings that represent the subitems of the new item.</param>
	</doc><doc for="ListViewItem.ListView">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.ListView"/> control that contains the item.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListView"/> that contains the <see cref="System.Windows.Forms.ListViewItem"/> .</para>
		</value>
		<remarks>
			<para>You can use this property to access the <see cref="System.Windows.Forms.ListView"/> control that owns the 
<see cref="System.Windows.Forms.ListViewItem"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc><doc for="ListViewItem.ListViewSubItemCollection.Count">
		<summary>
			<para> Gets the number of subitems in the collection.</para>
		</summary>
		<value>
			<para>The number of subitems in the collection.</para>
		</value>
		<remarks>
			<para>This property enables you to determine the number of subitems that are 
      defined for a <see cref="System.Windows.Forms.ListViewItem"/>. You can then use this value when you are
      looping through the values of the collection and you need to provide a number of
      iterations to perform the loop.</para>
		</remarks>
	</doc><doc for="ListViewItem.ListViewSubItemCollection.Clear">
		<summary>
			<para>Removes all subitems from the collection.</para>
		</summary>
		<remarks>
			<para>When you remove subitems from the collection, all information about the deleted subitems
      is lost. To remove a single subitem from the collection use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove"/> or <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove"/>
	</doc><doc for="ListViewItem.ListViewSubItemCollection.Remove">
		<summary>
			<para>Removes the specified <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> from the collection.</para>
		</summary>
		<param name="item">A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> representing the item to remove from the collection.</param>
		<remarks>
			<para>When you remove a subitem from the collection, the
      indexes change for subsequent subitems in the collection. All information about the
      removed subitem is deleted. You can use this method to remove a specific subitem
      from the collection by specifying the actual subitem to remove from the collection. To
      specify the index of the subitem to remove instead of the subitem itself, use
      the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt"/> method. To remove all subitems
      from the collection, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear"/>
	</doc><doc for="ListViewItem.ListViewItem">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with default values.</para>
		</summary>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
	</doc><doc for="ListViewItem.ListViewSubItem.ListViewSubItem">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> class with default values.</para>
		</summary>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.ListViewSubItem1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> class with a specified owner and text.</para>
		</summary>
		<param name="owner">A <see cref="System.Windows.Forms.ListViewItem"/> that represents the item that owns the subitem.</param>
		<param name=" text">The text to display for the subitem.</param>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.ListViewSubItem2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> class with a specified
   owner, text, foreground color, background color, and font values.</para>
		</summary>
		<param name="owner">A <see cref="System.Windows.Forms.ListViewItem"/> that represents the item that owns the subitem.</param>
		<param name=" text">The text to display for the subitem.</param>
		<param name=" foreColor">A <see cref="System.Drawing.Color"/> that represents the foreground color of the subitem.</param>
		<param name=" backColor">A <see cref="System.Drawing.Color"/> that represents the background color of the subitem.</param>
		<param name=" font">A <see cref="System.Drawing.Font"/> that represents the typeface to display the subitem's text in.</param>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Drawing.Font"/>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListViewItem">
		<summary>
			<para> Represents an item in a <see cref="System.Windows.Forms.ListView"/> control.
   </para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListView"/> control is similar to a <see cref="System.Windows.Forms.ListBox"/> in
   that it displays a list of items. The main difference is that the ListView
   control provides a number of different ways items can be viewed by the user. The
<see cref="System.Windows.Forms.ListViewItem"/> class defines the appearance, behavior, 
   and data associated with an item that is displayed in the <see cref="System.Windows.Forms.ListView"/>
   control. <see cref="System.Windows.Forms.ListViewItem"/> objects can be displayed in the <see cref="System.Windows.Forms.ListView"/>
   
   control in one of four different views. Items
   can be displayed as large or small icons or as small icons in a vertical list.
   Items can also have subitems that contain information that is related to the
   parent item. The fourth view style, details view, allows you to display the item
   and its subitems in a grid with column headers that can be used to identify the
   information being displayed in a subitem.</para>
			<para>Most of the properties of the <see cref="System.Windows.Forms.ListViewItem"/> class provide ways to change the display
of the item in the <see cref="System.Windows.Forms.ListView"/> control it is associated with. The <see cref="System.Windows.Forms.ListViewItem.BackColor"/>, <see cref="System.Windows.Forms.ListViewItem.ForeColor"/>, and <see cref="System.Windows.Forms.ListViewItem.Font"/> properties allow you to change how the
text of the item is displayed in the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property allows you to
specify the image to load from the <see cref="System.Windows.Forms.ImageList"/>
that is assigned to the <see cref="System.Windows.Forms.ListView"/>
control (by setting the <see cref="System.Windows.Forms.ListView.LargeImageList"/> or <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties of the <see cref="System.Windows.Forms.ListView"/> ). Items can display
check boxes in order to obtain item choices from the user in a way similar to a
<see cref="System.Windows.Forms.CheckedListBox"/> control. You can use the <see cref="System.Windows.Forms.ListViewItem.Checked"/> property to determine if an item is 
checked or to check or uncheck the item at run time. Items can display any
number of subitems when the <see cref="System.Windows.Forms.ListView.View"/> property of the
associated <see cref="System.Windows.Forms.ListView"/> control is set
to <see langword="View.Details"/> and columns
are defined in the <see cref="System.Windows.Forms.ListView.ColumnHeaderCollection"/> of the <see cref="System.Windows.Forms.ListView"/> control. You
can add subitems to an item by calling the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/>

. The <see cref="System.Windows.Forms.ListViewItem.SubItems"/> property allows you to gain
access to the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/>
class
and its members. </para>
			<para>Some of the properties and methods of the <see cref="System.Windows.Forms.ListViewItem"/> class are item-specific versions of
properties and methods in the <see cref="System.Windows.Forms.ListView"/> control. For example, the <see cref="System.Windows.Forms.ListView.EnsureVisible"/> method is similar to the <see cref="System.Windows.Forms.ListView"/>
version of the method, but the <see cref="System.Windows.Forms.ListViewItem"/>
version only affects
the current item.</para>
			<para>The <see cref="System.Windows.Forms.ListViewItem"/> class also provides methods that are not 
versions of <see cref="System.Windows.Forms.ListView"/> methods. The <see cref="System.Windows.Forms.ListViewItem.BeginEdit"/> method places the item's text into edit
mode so the user can change the item's text (when the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property of the <see cref="System.Windows.Forms.ListView"/>
control is set to <see langword="true"/>). The <see cref="System.Windows.Forms.ListViewItem.Clone"/> method allows you to create copies of
existing <see cref="System.Windows.Forms.ListViewItem"/> objects to reuse in other <see cref="System.Windows.Forms.ListView"/>
controls.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/>
	</doc>
	<doc for="ListViewItem.ListViewItem7">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with an array of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects and the image index position
   of the item's icon.</para>
		</summary>
		<param name="subItems">An array of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/>objects that represent the subitems of the item.</param>
		<param name=" imageIndex">The zero-based index of the image within the <see cref="System.Windows.Forms.ImageList"/> associated with the <see cref="System.Windows.Forms.ListView"/> control that contains the item.</param>
		<remarks>
			<para> This version of the constructor allows you to reuse
      the subitems from another item.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc>
	<doc for="ListViewItem.ListViewItem3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with specified item text and the
   image index position of the item's icon.</para>
		</summary>
		<param name="text">The text to display for the item.</param>
		<param name=" imageIndex">The zero-based index of the image within the <see cref="System.Windows.Forms.ImageList"/> associated with the <see cref="System.Windows.Forms.ListView"/> control that contains the item.</param>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc>
	<doc for="ListViewItem.ListViewItem5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with an array of strings representing subitems and the
   image index position of the item's icon.</para>
		</summary>
		<param name="items">An array of strings that represent the subitems of the new item.</param>
		<param name=" imageIndex">The zero-based index of the image within the <see cref="System.Windows.Forms.ImageList"/> associated with the <see cref="System.Windows.Forms.ListView"/> control that contains the item.</param>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc>
	<doc for="ListViewItem.Bounds">
		<summary>
			<para>Gets the bounding rectangle of the item, including subitems.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Rectangle"/> that represents the bounding rectangle of the
   item.</para>
		</value>
		<remarks>
			<para>You can use this method to obtain the bounding rectangle of an entire item.
      If you want to obtain the bounding rectangle for a portion of the entire item,
      use the <see cref="System.Windows.Forms.ListViewItem.GetBounds"/> method. The <see cref="System.Windows.Forms.ListView"/>
      class provides a <see cref="System.Windows.Forms.ListView.GetItemRect"/> method that allows you to get
      the bounding rectangle of any item located within the control.</para>
		</remarks>
		<seealso cref="System.Drawing.Rectangle"/>
		<seealso cref="System.Windows.Forms.ListViewItem.GetBounds"/>
	</doc>
	<doc for="ListViewItem.Checked">
		<summary>
			<para>Gets or sets a value indicating whether the item is checked.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the item is checked; otherwise,
<see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>This property is only useful if the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property of the <see cref="System.Windows.Forms.ListView"/>
control the item is contained in is set to <see langword="true"/>. You can use
this property to determine if the item has been checked by the user or through
code at run time. To determine all the items that are checked in a <see cref="System.Windows.Forms.ListView"/>
control, you can use the <see cref="System.Windows.Forms.ListView.CheckedItems"/> property. To take action
when an item has been checked, you can create an event handler for the <see cref="System.Windows.Forms.ListView.ItemCheck"/> property of the <see cref="System.Windows.Forms.ListView"/>
control.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListView.CheckBoxes"/>
		<seealso cref="System.Windows.Forms.ListView.ItemCheck"/>
		<seealso cref="System.Windows.Forms.ListView.CheckedItems"/>
	</doc>
	<doc for="ListViewItem.Font">
		<summary>
			<para> Gets or sets the font of the text displayed by the item.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Font"/> to apply to the text displayed by the
   control. The default is the value of the <see cref="System.Windows.Forms.Control.DefaultFont"/> property if the
<see cref="System.Windows.Forms.ListViewItem"/> is not associated with a <see cref="System.Windows.Forms.ListView"/> 
control; otherwise the font specified in the <see cref="System.Windows.Forms.Control.Font"/> property for the <see cref="System.Windows.Forms.ListView"/>
control is used.</para>
		</value>
		<remarks>
			<para>You can use this method to change the typeface styles
      applied to the text of the item. Because a <see cref="System.Drawing.Font"/> is immutable (you cannot
      adjust any of its properties), you can only assign the <see cref="System.Windows.Forms.Control.Font"/> property a new <see cref="System.Drawing.Font"/> . However, you can base the new font on the existing font.</para>
			<para lang="VB, C#]
      ">The following is an example of how to adjust the existing font to make it
      bold:</para>
			<code lang="C#">listViewItem1.Font = new Font(listViewItem1.Font, 
   listViewItem1.Font.Style | FontStyle.Bold);
   </code>
			<code lang="VB">ListViewItem1.Font = New Font(ListViewItem1.Font, _ 
   ListViewItem1.Font.Style Or FontStyle.Bold)
   </code>
		</remarks>
	</doc>
	<doc for="ListViewItem.ImageIndex">
		<summary>
			<para>Gets or sets the index of the image that is
      displayed for the item.</para>
		</summary>
		<value>
			<para>The zero-based index of the image in the <see cref="System.Windows.Forms.ImageList"/> that is displayed for the 
   item. The default is -1.</para>
		</value>
		<exception cref="System.ArgumentException"> The value specified is less than -1.</exception>
		<remarks>
			<para>The value of this property depends on the value of
      the <see cref="System.Windows.Forms.ListViewItem.ImageList"/> property. Depending on the current value
      of the <see cref="System.Windows.Forms.ListView.View"/> property of the <see cref="System.Windows.Forms.ListView"/>
      control associated with the item, the <see cref="System.Windows.Forms.ImageList"/> used by the item could be
      one specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property or the <see cref="System.Windows.Forms.ListView.SmallImageList"/> property of the <see cref="System.Windows.Forms.ListView"/>
      control. If the <see cref="System.Windows.Forms.ListView.View"/>property is set to
   <see langword="View.LargeIcons"/>, the <see cref="System.Windows.Forms.ImageList"/> specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property is used; otherwise the <see cref="System.Windows.Forms.ImageList"/>
   specified in the <see cref="System.Windows.Forms.ListView.SmallImageList"/> property is used. It is recommended
   that the images defined in the <see cref="System.Windows.Forms.ImageList"/> specified in the <see cref="System.Windows.Forms.ListView.SmallImageList"/> have the same index positions as the
   images in the <see cref="System.Windows.Forms.ImageList"/> specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property. If the index positions are the
   same for both <see cref="System.Windows.Forms.ImageList"/> controls, you can set a single index value
   for the <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property and the appropriate image will be
   displayed regardless of the value of the <see cref="System.Windows.Forms.ListView.View"/>property of the <see cref="System.Windows.Forms.ListView"/>
   
   control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.View"/>
		<seealso cref="System.Windows.Forms.ListView.SmallImageList"/>
		<seealso cref="System.Windows.Forms.ListView.LargeImageList"/>
	</doc>
	<doc for="ListViewItem.ImageList">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.ImageList"/> that contains the image displayed with the
   item.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.ImageList"/> used by the <see cref="System.Windows.Forms.ListView"/> control that contains
   the image displayed with the item.</para>
		</value>
		<remarks>
			<para>Depending on the current value of the <see cref="System.Windows.Forms.ListView.View"/> property of the
<see cref="System.Windows.Forms.ListView"/> control associated with the item, the 
<see cref="System.Windows.Forms.ImageList"/> used by the item could be one specified in 
   the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property or the <see cref="System.Windows.Forms.ListView.SmallImageList"/> property of the <see cref="System.Windows.Forms.ListView"/>
   control. If the <see cref="System.Windows.Forms.ListView.View"/>property is set to
<see langword="View.LargeIcons"/>, the <see cref="System.Windows.Forms.ImageList"/> specified in the <see cref="System.Windows.Forms.ListView.LargeImageList"/> property is used; otherwise the 
<see cref="System.Windows.Forms.ImageList"/> specified in the <see cref="System.Windows.Forms.ListView.SmallImageList"/> property is used. You can use 
   this property to determine which <see cref="System.Windows.Forms.ImageList"/> control is providing the
   image for the item. To determine the index position in the <see cref="System.Windows.Forms.ImageList"/>
   that contains the image to display for the item, use the <see cref="System.Windows.Forms.ListViewItem.ImageIndex"/> property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ImageIndex"/>
	</doc>
	<doc for="ListViewItem.Index">
		<summary>
			<para>Gets the zero-based index of the item within the list
      view control.</para>
		</summary>
		<value>
			<para>The zero-based index of the item within the <see cref="System.Windows.Forms.ListView"/> control's 
<see cref="System.Windows.Forms.ListView.ListViewItemCollection"/>
. If the item is not associated with a <see cref="System.Windows.Forms.ListView"/> control, this property
returns -1.</para>
		</value>
		<remarks>
			<para>You can use this property to determine if the item is associated with a
   <see cref="System.Windows.Forms.ListView"/> control as well as to determine its
      position within the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> of the <see cref="System.Windows.Forms.ListView"/>.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.Selected">
		<summary>
			<para>Gets or sets a value indicating whether the item is selected.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the item is selected;
   otherwise, <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.ListView.MultiSelect"/> property of
   the <see cref="System.Windows.Forms.ListView"/> control the item is contained in is set to
<see langword="true"/>, setting the value of this property adds or removes the 
   item from the set of selected items; if
   the <see cref="System.Windows.Forms.ListView.MultiSelect"/> property is set to <see langword="false"/>,
   setting the value of this property to select an item automatically cancels the
   selection for any other items in the <see cref="System.Windows.Forms.ListView"/>
   control. You can use this property to determine if an
   item is selected or to select an item at run time. You can access all items that
   are selected in a <see cref="System.Windows.Forms.ListView"/> control by using the <see cref="System.Windows.Forms.ListView.SelectedItems" qualify="true"/>
   
   property.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.SelectedItems"/>
		<seealso cref="System.Windows.Forms.ListView.SelectedIndices"/>
	</doc>
	<doc for="ListViewItem.StateImageIndex">
		<summary>
			<para>Gets or sets the index of the state image (an image such as a checked or
      cleared check box that indicates the state of the item) that is displayed for
      the item.</para>
		</summary>
		<value>
			<para>The zero-based index of the state image in the <see cref="System.Windows.Forms.ImageList"/>that is displayed for the 
   item.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><para>The value specified for this property is less than -1.</para>
			<para>-or-</para>
			<para>The value specified for this property is greater than 14.</para></exception>
		<remarks>
			<para>This property allows you to specify the index into the <see cref="System.Windows.Forms.ImageList"/>
assigned to the <see cref="System.Windows.Forms.ListView.StateImageList"/> property of the
associated <see cref="System.Windows.Forms.ListView"/>
control, where the state images to display to the
left of the item are stored. Typically the state image is a checked or cleared check
box or an image that is intended to represent checked or unchecked states for
the item. If no value is specified for the <see cref="System.Windows.Forms.ListView.StateImageList"/> property, the <see cref="System.Windows.Forms.ListView"/>
control displays a default checked or cleared check box when the <see cref="System.Windows.Forms.ListView.CheckBoxes"/> property of the control is set to
<see langword="true"/>. </para>
			<note type="note">
   Although the <see cref="System.Windows.Forms.ImageList"/>
   specified in the <see cref="System.Windows.Forms.ListView.StateImageList"/> property can contain any number of images,
   and the <see cref="System.Windows.Forms.ListViewItem.StateImageIndex"/> property can be set to
   any value lower than 14, only the images at index positions 0 and 1 are
   displayed as state images.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.StateImageList" qualify="true"/>
	</doc>
	<doc for="ListViewItem.SubItems">
		<summary>
			<para>Gets a collection containing all subitems of the item.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> that contains the subitems.</para>
		</value>
		<remarks>
			<para>Using the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/>, you can add subitems, remove subitems, 
   and obtain a count of subitems. For more information on the tasks that can be
   performed with the subitems in the collection, see the
<see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> class reference topics.</para>
			<note type="note">
   The first subitem in
   the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> is always the item that
   owns the subitems. Care should be taken when performing operations
   on subitems in the collection to reference index position 1 instead of 0 to
   make changes to the first subitem.
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/>
	</doc>
	<doc for="ListViewItem.Tag">
		<summary>
			<para>Gets or sets an object that contains data to associate with the item.</para>
		</summary>
		<value>
			<para>An object that contains information that is associated with the item.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListViewItem.Tag"/> property can be used to store any object
   that you want to associate with an item. Although you can store any item, the
<see cref="System.Windows.Forms.ListViewItem.Tag"/> property is 
   typically used to store string information about the item such as a unique identifier or
   the index position of the item's data in a database.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.Text">
		<summary>
			<para>Gets or sets the text of the item.</para>
		</summary>
		<value>
			<para>The text to display for the item.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListViewItem.Text"/> property allows you to change the text
   displayed for the item. You can use the <see cref="System.Windows.Forms.ListViewItem.BackColor"/>, <see cref="System.Windows.Forms.ListViewItem.ForeColor"/>, and <see cref="System.Windows.Forms.ListViewItem.Font"/> properties to specify how the text is
   displayed. The <see cref="System.Windows.Forms.ListView"/> class provides the <see cref="System.Windows.Forms.ListView.LabelWrap"/>
   property that determines whether text wraps to the next line or is
   displayed on a single line.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.BackColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ForeColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.Font"/>
		<seealso cref="System.Windows.Forms.ListView.LabelWrap" qualify="true"/>
	</doc>
	<doc for="ListViewItem.Clone">
		<summary>
			<para>Creates an identical copy of the item.</para>
		</summary>
		<returns>
			<para>An object that represents an item that has the same text, image,
      and subitems associated with it as the cloned item.</para>
		</returns>
		<remarks>
			<para>You can use this method to create a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class based on an existing item. Even the
   subitems of the item being cloned are specified for the new version. This
   feature is useful if you want to reuse a <see cref="System.Windows.Forms.ListViewItem"/> in more than one <see cref="System.Windows.Forms.ListView"/>
   control.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.Deserialize">
		<summary>
			<para>Deserializes the item.</para>
		</summary>
		<param name="info">A <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the data needed to deserialize the item. </param>
		<param name=" context">A <see cref="System.Runtime.Serialization.StreamingContext"/> that represents the source and destination of the stream being deserialized.</param>
		<remarks>
			<note type="inheritinfo">
      This method should be overridden if you are going to
      serialize and deserialize your derived version of
      this class and
      your derived class contains state information you want to be serialized and deserialized. You
      must call the base class implementation of this method in order to ensure that your items are serialized and deserialized properly.
      
   </note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.Serialize"/>
		<seealso cref="System.Runtime.Serialization.SerializationInfo"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
	</doc>
	<doc for="ListViewItem.GetBounds">
		<summary>
			<para>Retrieves the specified portion of the bounding
      rectangle for the
      item.</para>
		</summary>
		<param name="portion">One of the <see cref="System.Windows.Forms.ItemBoundsPortion"/> values that represents a portion of the item for which to retrieve the bounding rectangle. </param>
		<returns>
			<para>A <see cref="System.Drawing.Rectangle"/> that 
   represents the bounding rectangle for the specified portion of the item.</para>
		</returns>
		<remarks>
			<para>The bounding rectangle returned by the <see cref="System.Windows.Forms.ListViewItem.GetBounds"/> method represents only the section of the
   item specified in the<paramref name="portion"/> parameter. You can
   also call the <see cref="System.Windows.Forms.ListView.GetItemRect"/> methods of the <see cref="System.Windows.Forms.ListView"/>
   class to obtain the bounding rectangle of any item in a <see cref="System.Windows.Forms.ListView"/>
   control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.GetItemRect"/>
	</doc>
	<doc for="ListViewItem.Remove">
		<summary>
			<para>Removes the item from its associated list view control.</para>
		</summary>
		<remarks>
			<para> This method is similar in function to the <see cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/> method of the <see cref="System.Windows.Forms.ListView.ListViewItemCollection"/> in the ListView control that contains the
   item. You can use this method to remove an item from its <see cref="System.Windows.Forms.ListView"/>
   control. This feature can be useful if you want to move the item to a different
<see cref="System.Windows.Forms.ListView"/> control or need to remove the item based 
   on a request from the user to remove the item from within your
   application.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection.Remove"/>
		<seealso cref="System.Windows.Forms.ListView.ListViewItemCollection"/>
	</doc>
	<doc for="ListViewItem.Serialize">
		<summary>
			<para> Serializes the item.</para>
		</summary>
		<param name="info">A <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the data needed to serialize the item. </param>
		<param name=" context">A <see cref="System.Runtime.Serialization.StreamingContext"/> that represents the source and destination of the stream being serialized.</param>
		<remarks>
			<note type="inheritinfo">
      This method should be overridden if you are going to
      serialize and deserialize your derived version of
      this class and
      your derived class contains state information you want to be serialized and deserialized. You
      must call the base class implementation of this method in order to ensure that your items are serialized and deserialized properly.
      
   </note>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.Deserialize"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
		<seealso cref="System.Runtime.Serialization.SerializationInfo"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem">
		<summary>
			<para>Represents a subitem of a <see cref="System.Windows.Forms.ListViewItem"/> .</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListView"/> control displays a list of items that are
   defined by the <see cref="System.Windows.Forms.ListViewItem"/> class. Each <see cref="System.Windows.Forms.ListViewItem"/> can store subitem objects that are
   defined by the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> class. Subitems are displayed when the
<see cref="System.Windows.Forms.ListView.View"/> property of the <see cref="System.Windows.Forms.ListView"/>control is set to 
<see langword="View.Details"/>. Typically, subitems contain information that 
   is related to their parent item. For example, if a <see cref="System.Windows.Forms.ListView"/>
   control displays items that represent orders, each item could
   display the order number. Subitems could be added to each item to
   display information such as the product ordered, the quantity of items ordered, and the
   total price of the items ordered. Unlike <see cref="System.Windows.Forms.ListViewItem"/> objects, <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects cannot be edited directly by the
   user (the user can edit <see cref="System.Windows.Forms.ListViewItem"/> objects if the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property of the <see cref="System.Windows.Forms.ListView"/>control is set to
<see langword="true"/>).</para>
			<para> Because subitems cannot be directly edited by the user and
   do not display images, properties are limited to those that affect the style of
   the subitem text when it is displayed in the <see cref="System.Windows.Forms.ListView"/>control. If the <see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> property of the <see cref="System.Windows.Forms.ListView"/>that contains the
   subitems is set to <see langword="false"/>, you can use
   the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.Font"/>, <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/>, and <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/> properties to change the styles applied to
   the text display. Typically, the styles of the item and the subitems are
   the same in a <see cref="System.Windows.Forms.ListView"/> control, but if you want to change the
   style of a specific <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> to highlight it, you can use these properties on the items you want
   to display differently.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.Font">
		<summary>
			<para>Gets or sets the font of the text displayed by the subitem.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Font"/> to apply to the text displayed by the
   control. </para>
		</value>
		<remarks>
			<para>You can use this method to change the typeface styles
      applied to the text of the subitem. If the <see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> property of the <see cref="System.Windows.Forms.ListViewItem"/> is set to <see langword="true"/> , changing this property will have no effect. Because the <see cref="System.Drawing.Font"/> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <see cref="System.Windows.Forms.Control.Font"/> property a new <see cref="System.Drawing.Font"/> . However, you can base the new font on the existing font.</para>
			<para lang="VB, C#] ">The following is an example of how to adjust the existing font to make it bold:</para>
			<code lang="C#">listViewItem1.SubItems[1].Font = new Font(listViewItem1.SubItems[1].Font, 
   listViewItem1.SubItems[1].Font.Style | FontStyle.Bold);
   </code>
			<code lang="VB">ListViewItem1.SubItems[1].Font = New Font(ListViewItem1.SubItems[1].Font, _ 
   ListViewItem1.SubItems[1].Font.Style Or FontStyle.Bold)
   </code>
			<para>If the <see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> property of the <see cref="System.Windows.Forms.ListViewItem"/> that owns the subitem is set to
<see langword="true"/>, setting this property has no effect.</para>
		</remarks>
		<seealso cref="System.Drawing.Font"/>
		<seealso cref="System.Windows.Forms.ListViewItem.Font" qualify="true"/>
		<seealso cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.Text">
		<summary>
			<para>Gets or sets the text of the subitem.</para>
		</summary>
		<value>
			<para>The text to display for the subitem.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.Text"/> property allows you to determine the text
   displayed for the subitem. You can use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/>, <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/>, and <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.Font"/> properties to specify how the text is displayed.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.Text" qualify="true"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem.Font"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.ResetStyle">
		<summary>
			<para>Resets the styles applied to the subitem.</para>
		</summary>
		<remarks>
			<para> You can use this method to reset the font, background color, and
      foreground color settings applied to the subitem. When the styles are reset, the
      subitem is displayed using the default font, background color, and foreground
      color settings.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem.Font"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection">
		<summary>
			<para>Represents a collection of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects stored in a <see cref="System.Windows.Forms.ListViewItem"/> .</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> stores <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects that
   represent subitems of a parent <see cref="System.Windows.Forms.ListViewItem"/> in the <see cref="System.Windows.Forms.ListView"/> control. Subitems are only displayed in a
<see cref="System.Windows.Forms.ListView"/>
control when columns are
specified in the <see cref="System.Windows.Forms.ListView.Columns"/> property of the <see cref="System.Windows.Forms.ListView"/>
control and when the <see cref="System.Windows.Forms.ListView.View"/> property of the <see cref="System.Windows.Forms.ListView"/>
control is set to <see langword="View.Details"/>. The order of subitems in the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> determines the columns the subitems
are displayed in in the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<para>There are a number of ways to add subitems to the
   collection. The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
   method adds a single <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> to the collection. To
   add a number of subitems to the collection, you create an array of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects and pass it to the
<see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/> method. If you want to insert 
   a subitem at a specific location in the collection, you can use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/> method. To remove subitems,
   you can use either the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove"/> method or
   the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt"/> method if you know where the
   subitem is located in the collection. The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear"/> method enables you to remove
   all subitems from the collection instead of using the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove"/> method to remove
   a single subitem at a time.</para>
			<para>In addition to methods and properties for adding and
   removing subitems, the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> also provides methods to find subitems
   in the collection. The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains"/> method enables you to
   determine whether a <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> is a member of the
   collection. Once you know that the subitem is located in the collection, you
   can use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf"/> method to
   determine where the subitem is located in the collection. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.ListViewSubItemCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/>class.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.ListViewItem"/> that owns the collection.</param>
		<remarks>
			<para>You cannot create an instance of this class without
      associating it with a <see cref="System.Windows.Forms.ListViewItem"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the collection is read-only; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>This property is always <see langword="false"/> for this
   collection.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.this">
		<summary>
			<para>Gets or sets the subitem at the specified index within the
      collection.</para>
		</summary>
		<param name="index">The index of the item in the collection to retrieve. </param>
		<value>
			<para>A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> representing the subitem located at the
   specified index within the collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> . </exception>
		<remarks>
			<para>You can use this method to obtain the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> stored at a specific location in the
   collection. To determine the index of a specific item in the collection, use
   the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf"/>method.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.Add">
		<overload>
			<para>Adds a subitem to the collection of subitems.</para>
		</overload>
		<summary>
			<para>Adds an existing <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> to
   the collection.</para>
		</summary>
		<param name="item">The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> to add to the collection.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that
   was added to the collection.</para>
		</returns>
		<remarks>
			<para>You can use this version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method to add an existing
<see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> to the collection. This 
   method is typically used to reuse existing subitems from other <see cref="System.Windows.Forms.ListViewItem"/>
   
   objects. Items that are added to
   the collection are inserted at the end of the list. To insert an item into
   the collection at a specific position, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>method.
   If you want to add an array of existing <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects, you
   can use the version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/> method that accepts an array
   of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects as a parameter.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
	</doc>
	<doc for="ListViewSubItemCollection.Add">
		<summary>
			<para> Adds a subitem to the collection with specified text.</para>
		</summary>
		<param name="text">The text to display for the subitem.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that was added to the
   collection.</para>
		</returns>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method
   allows you to add a subitem to the collection by specifying the text of the
   subitem. When this method is called, a new <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> is created with
   the specified text. You can then use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that
   is returned by this method to set properties and call methods to manipulate the
   subitem. If you already have an existing <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that
   you want to add to the collection, you can use the version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method that accepts a <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> as a parameter, or use
   the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/> method if you want to add the
   subitem at a specific position within the collection.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ListView"/> control with three <see cref="System.Windows.Forms.ListViewItem"/> objects specified and three <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects specified for each item. The example also creates <see cref="System.Windows.Forms.ColumnHeader"/> objects to display the subitems in details view. Two <see cref="System.Windows.Forms.ImageList"/> objects are also created in the code example to provide images for the <see cref="System.Windows.Forms.ListViewItem"/> objects. These <see cref="System.Windows.Forms.ImageList"/> objects are added to the <see cref="System.Windows.Forms.ListView.LargeImageList"/> and <see cref="System.Windows.Forms.ListView.SmallImageList"/> properties. The example uses the following properties in creating the <see cref="System.Windows.Forms.ListView"/> control.</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.ListView.View"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.LabelEdit"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.AllowColumnReorder"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.CheckBoxes"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.FullRowSelect"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.GridLines"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.ListView.Sorting"/></term>
				</item>
			</list>
			<para>This example assumes that you have added the code to a <see cref="System.Windows.Forms.Form"/> and call the method created in the example from the constructor or another method on the form. The example also assumes that images named <c>MySmallImage1</c>, <c>MySmallImage2</c>, <c>MyLargeImage1</c>, and <c>MyLargeImage2</c> are located in the root directory of drive C.</para>
			<codelink SampleID="ListViewExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
	</doc>
	<doc for="ListViewSubItemCollection.Add1">
		<summary>
			<para>Adds a subitem to the collection with specified text,
      foreground color, background color, and font settings.</para>
		</summary>
		<param name="text">The text to display for the subitem.</param>
		<param name=" foreColor">A <see cref="System.Drawing.Color"/> that represents the foreground color of the subitem.</param>
		<param name=" backColor">A <see cref="System.Drawing.Color"/> that represents the background color of the subitem.</param>
		<param name=" font">A <see cref="System.Drawing.Font"/> that represents the typeface to display the subitem's text in.</param>
		<returns>
			<para>The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that was added to the
   collection.</para>
		</returns>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
method allows you to add a subitem to the collection by specifying the text of
the subitem. In addition, this version of the Add method allows you to specify
the initial foreground color, background color, and font of the subitem text.
When this method is called, a new <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> is created
with the specified text. You can then use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that is returned by
this method to set properties and call methods to manipulate the subitem. If you
already have an existing <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> that you want to add to
the collection, you can use the version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
method that accepts a <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> as a parameter, or use
the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
method if you want to add the subitem at a specific position in the
collection.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Drawing.Font"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
	</doc>
	<doc for="ListViewSubItemCollection.AddRange">
		<overload>
			<para> Adds an array of subitems to the collection.</para>
		</overload>
		<summary>
			<para>Adds an array of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects to the collection.</para>
		</summary>
		<param name="items">An array of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects to add to the collection.</param>
		<remarks>
			<para>This method removes all existing subitems from the
      parent <see cref="System.Windows.Forms.ListViewItem"/> before inserting the new
      items. You can use this method to reuse the subitems stored in a different
   <see cref="System.Windows.Forms.ListViewItem"/> . If you want to add a single
   <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> object, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method. You can also use the
   <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/> method if you want to add a
      single <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> at a specific position
      in the collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/>
	</doc>
	<doc for="ListViewSubItemCollection.AddRange1">
		<summary>
			<para>Creates new subitems based on an array and adds them to the collection.</para>
		</summary>
		<param name="items">An array of strings representing the text of each subitem to add to the collection.</param>
		<remarks>
			<para>This method removes all existing subitems from the parent <see cref="System.Windows.Forms.ListViewItem"/> before inserting the new
   items. You can use this version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>method
   to add an array of
   strings to the collection, where each string in the collection represents the
   text of a new subitem. You can use the other version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/> method that accepts an array
   of strings as a parameter to specify the foreground color, background color, and
   font for each item being added. If you want to reuse existing <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects and add them to the
   collection, you can use the version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/> method that accepts an array
   of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects as a parameter.</para>
			<para>If you want to add a single <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> , use
the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method. You can also use the
<see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/> method if you want to add a 
single <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> at a specific position
in the collection.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.Contains">
		<summary>
			<para>Determines whether the specified subitem is located in the collection.</para>
		</summary>
		<param name="subItem">A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> representing the subitem to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the subitem is contained in the
   collection; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains"/> method enables you to
   determine whether a <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> is a member of
   the collection. Once you know that the subitem is in the collection, you
   can use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf"/> method to
   determine the position of the subitem in the collection.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.IndexOf">
		<summary>
			<para>Returns the index within the collection of the specified subitem.</para>
		</summary>
		<param name="subItem">A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> representing the subitem to locate in the collection.</param>
		<returns>
			<para>The zero-based index of the subitem's location in the 
      collection. If the subitem is not located in the collection, the
      return value is negative one (-1).</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf"/> method enables you to determine the 
   position of a subitem in the collection. To determine whether a subitem is
   contained in the collection before calling this method, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains"/> method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator to use to iterate through the
      subitem collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> that represents the subitem
   collection.</para>
		</returns>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.Insert">
		<summary>
			<para>Inserts a subitem into the collection at the specified index.</para>
		</summary>
		<param name="index">The zero-based index location where the item is inserted.</param>
		<param name=" item">A <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> representing the subitem to insert into the collection.</param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> .</exception>
		<remarks>
			<para>This method allows you to insert a subitem
      at a specific position in the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/>
      . To add a subitem without specifying a specific position, use the
   <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method. If you want to add an
      array of subitems to the collection, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/> method. You can use this
      method if you want to insert a new subitem into an existing collection of
      subitems.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItemCollection.RemoveAt">
		<summary>
			<para>Removes the subitem at the specified index
      within the collection.</para>
		</summary>
		<param name="index">The zero-based index of the subitem to remove.</param>
		<exception cref="System.ArgumentOutOfRangeException">The <paramref name="index"/> parameter is less than zero or greater than or equal to the value of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count"/> property of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection"/> .</exception>
		<remarks>
			<para>When you remove a subitem from the collection, the
      indexes change for subsequent subitems in the collection. All information about
      the removed subitem is deleted. You can use this method to remove a specific
      subitem from the collection by specifying the index of the subitem to remove
      from the collection. To specify the subitem to remove instead of the index to
      the subitem, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove"/> method. To
      remove all subitems from the collection, use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear"/>method.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear"/>
	</doc>
	<doc for="ListViewSubItemCollection.AddRange2">
		<summary>
			<para>Creates new subitems based on an array and adds them to
      the collection with specified foreground color, background color, and font.</para>
		</summary>
		<param name="items">An array of strings representing the text of each subitem to add to the collection.</param>
		<param name="foreColor">A <see cref="System.Drawing.Color"/> that represents the foreground color of the subitem.</param>
		<param name="backColor">A <see cref="System.Drawing.Color"/> that represents the background color of the subitem.</param>
		<param name="font">A <see cref="System.Drawing.Font"/> that represents the typeface to display the subitem's text in.</param>
		<remarks>
			<para>This method removes all existing subitems from the parent <see cref="System.Windows.Forms.ListViewItem"/> before inserting the new
   items. You can use this version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>method
   to add an array of strings to the collection, where each string in the
   collection represents the text of a new subitem. In addition, this version of
   the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>
   
   method allows you to specify the foreground color, background
   color, and font for each subitem. You can use the other version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/>
   method that accepts an array of strings as
   a parameter if you do not want to specify foreground color, background color,
   and font settings for each subitem. If you want to reuse existing <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects and add them to the
   collection, you can use the version of the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange"/> method that accepts an array
   of <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> objects as a parameter.</para>
			<para>If you want to add a single <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> , use
the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/> method. You can also use the
<see cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/> method if you want to add a 
single <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem"/> at a specific position
in the collection.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Drawing.Font"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert"/>
	</doc>
	<doc for="ListViewItem.BeginEdit">
		<summary>
			<para> Places the item text into edit mode.</para>
		</summary>
		<exception cref="System.InvalidOperationException">The <see cref="System.Windows.Forms.ListView.LabelEdit"/> property of the associated <see cref="System.Windows.Forms.ListView"/> control is not set to <see langword="true"/>.</exception>
		<remarks>
			<para>This property is only effective if the <see cref="System.Windows.Forms.ListView.LabelEdit"/> property of the <see cref="System.Windows.Forms.ListView"/>
control that contains the item is set to <see langword="true"/>. You can
use this method at run time to force the item's text to display in edit mode.
For example, if you are validating the item text edited by the user, and an
item fails validation, you could select the item in the <see cref="System.Windows.Forms.ListView"/>
control and call the <see cref="System.Windows.Forms.ListViewItem.BeginEdit"/> method to force the user
to change the text that failed validation.</para>
		</remarks>
	</doc>
	<doc for="ListViewItem.ISerializable.GetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewSubItemCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewItem.ToString">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewItem.ListViewSubItem.ToString">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ListViewItem.BackColor">
		<summary>
			<para>Gets or sets the background color
      of the item's text.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that
   represents the background color of the item's
   text.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.ListViewItem.BackColor"/> property to change the
   color displayed behind the item text. This property can be used if you want to
   use different background and foreground color combinations (using the
<see cref="System.Windows.Forms.ListViewItem.ForeColor"/> property to set the foreground color) to 
   differentiate one item from another. For example, you could set the <see cref="System.Windows.Forms.ListViewItem.BackColor"/> property to <see langword="Color.Red"/>
   to identify items that have failed
   validation or are missing subitem information.</para>
			<para>If you want to use the same background color for all subitems of an item, set the
<see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> 
property to <see langword="true"/> . This will cause the
colors and fonts specified for the item to be used for all subitem text.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ForeColor"/>
	</doc>
	<doc for="ListViewItem.Focused">
		<summary>
			<para>Gets or sets a value indicating whether the item has
      focus within the list view control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the item has focus; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Because a <see cref="System.Windows.Forms.ListView"/> control has no directly editable areas,
   except items it displays, when the <see cref="System.Windows.Forms.ListView"/> control has focus, an
   item within the <see cref="System.Windows.Forms.ListView"/> displays the focus reticle around its item
   text. Typically, the last selected item in the <see cref="System.Windows.Forms.ListView"/> control is the focused
   item. Although an item can be the one displaying the focus reticle, it might not
   actually be a selected item in the <see cref="System.Windows.Forms.ListView"/>. You can use this
   property to determine if the item is currently the focused item in the <see cref="System.Windows.Forms.ListView"/>
   control that contains it. If the <see cref="System.Windows.Forms.ListViewItem"/> is not associated with a
<see cref="System.Windows.Forms.ListView"/> control, then this property will return 
<see langword="false"/>.</para>
			<para>The <see cref="System.Windows.Forms.ListView"/> control provides a property called <see cref="System.Windows.Forms.ListView.FocusedItem"/> that allows you to determine which <see cref="System.Windows.Forms.ListViewItem"/> in the <see cref="System.Windows.Forms.ListView"/> has the focus. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListView.FocusedItem"/>
	</doc>
	<doc for="ListViewItem.ForeColor">
		<summary>
			<para>Gets or sets the foreground color of the item's text.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that represents the foreground color of the item's text.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.ListViewItem.ForeColor"/> property to change the
   color of the item text. This property can be used if you want to use
   different background and foreground color combinations (using the <see cref="System.Windows.Forms.ListViewItem.BackColor"/> property to set the background color) to
   differentiate one item from another. For example, you could set the <see cref="System.Windows.Forms.ListViewItem.ForeColor"/> property to <see langword="Color.Red"/>
   to identify items that have a negative number associated with them
   or have failed item validation.</para>
			<para>If you want to use the same foreground color for all subitems of an item, set the
<see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> property to 
<see langword="true"/>. This will cause the colors and fonts specified for the 
   item to be used for all subitem text.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Windows.Forms.ListViewItem.BackColor"/>
	</doc>
	<doc for="ListViewItem.UseItemStyleForSubItems">
		<summary>
			<para>Gets or sets a value indicating whether the <see cref="System.Windows.Forms.ListViewItem.Font"/>, <see cref="System.Windows.Forms.ListViewItem.ForeColor"/>, and <see cref="System.Windows.Forms.ListViewItem.BackColor"/> properties for the
   item are used for all its subitems.</para>
		</summary>
		<value>
			<para><see langword="true"/> if all subitems use the font,
   foreground color, and background color settings of the item; otherwise,
<see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If you do not want to have a uniform background color, foreground color, and
      font used for all items and subitems in your <see cref="System.Windows.Forms.ListView"/> control, you can set this
      property to <see langword="false"/>. When this property is set to true, any
      changes made to the subitem's <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.Font" qualify="true"/>, <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor" qualify="true"/>, and <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor" qualify="true"/> properties are ignored,
      and the values of the item are used instead. You can use this property
      if you need to specify a different text color, background color, or font to be
      used for a subitem to highlight the item when subitems are displayed in the
   <see cref="System.Windows.Forms.ListView"/> control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ListViewItem.ForeColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.BackColor"/>
		<seealso cref="System.Windows.Forms.ListViewItem.Font"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.BackColor">
		<summary>
			<para>Gets or sets the background color of the subitem's text.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that represents the background color of the
   subitem's text.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/> property to change the color displayed
   behind the subitem text. This property can be used if you want to use
   different background and foreground color combinations (using the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/> property to set the foreground color) to
   differentiate one subitem from another. For example, you could set the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/> property to
<see langword="Color.Red"/> to identify subitems that display a 
   negative value.</para>
			<para>If the <see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> property of the <see cref="System.Windows.Forms.ListViewItem"/> that owns the subitem is set to
<see langword="true"/>, setting this property has no effect.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Windows.Forms.ListViewItem.BackColor" qualify="true"/>
	</doc>
	<doc for="ListViewItem.ListViewSubItem.ForeColor">
		<summary>
			<para>Gets or sets the foreground color of the subitem's text.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that represents the foreground color of the
   subitem's text.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/> property to change the color of the
   subitem text. This property can be used if you want to use different
   background and foreground color combinations (using the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.BackColor"/> property to set the background color) to
   differentiate one item from another. For example, you could set the <see cref="System.Windows.Forms.ListViewItem.ListViewSubItem.ForeColor"/> property to
<see langword="Color.Red"/> to 
   identify items that have a negative number associated with them.</para>
			<para>If the <see cref="System.Windows.Forms.ListViewItem.UseItemStyleForSubItems"/> property of the <see cref="System.Windows.Forms.ListViewItem"/> that owns the subitem is set to
<see langword="true"/>, setting this property has no effect.</para>
		</remarks>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Windows.Forms.ListViewItem.ForeColor" qualify="true"/>
	</doc>
	<doc for="ListViewItem.ListViewItem6">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ListViewItem"/> class with an array of strings representing subitems, the image
   index position of the item's icon, and the foreground color, background color, and font of the item.</para>
		</summary>
		<param name="items">An array of strings that represent the subitems of the new item.</param>
		<param name=" imageIndex">The zero-based index of the image within the <see cref="System.Windows.Forms.ImageList"/> associated with the <see cref="System.Windows.Forms.ListView"/> control that contains the item.</param>
		<param name=" foreColor">A <see cref="System.Drawing.Color"/> that represents the foreground color of the item.</param>
		<param name=" backColor">A <see cref="System.Drawing.Color"/> that represents the background color of the item.</param>
		<param name=" font">A <see cref="System.Drawing.Font"/> that represents the typeface to display the item's text in.</param>
		<example>
			<para>The following example creates a form that contains a <see cref="System.Windows.Forms.ListView"/> control that manually sorts items when a column in the <see cref="System.Windows.Forms.ListView"/> control is clicked. The example defines a class called <c>ListViewItemComparer</c> that implements the <see cref="System.Collections.IComparer" qualify="true"/> interface that performs the <see cref="System.Windows.Forms.ListViewItem"/> comparison. The example creates an instance of <c>ListViewItemComparer</c> and uses it to set the <see cref="System.Windows.Forms.ListView.ListViewItemSorter"/> property of the <see cref="System.Windows.Forms.ListView"/> control. The <see cref="System.Windows.Forms.ListView.Sort"/> method call in the <see cref="System.Windows.Forms.ListView.ColumnClick"/> event handler uses the methods defined in <c>ListViewItemComparer</c> to perform the sort of items, based on the column that is clicked. </para>
			<codelink SampleID="ListView.ColumnClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Drawing.Color"/>
		<seealso cref="System.Drawing.Font"/>
		<seealso cref="System.Windows.Forms.ListView"/>
	</doc>
</docs>
