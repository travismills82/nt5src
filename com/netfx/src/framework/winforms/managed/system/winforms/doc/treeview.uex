<docs>
	<doc for="TreeView.CreateParams">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.CreateHandle">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.DetachImageList">
		<summary>
     Resets the imageList to null.  We wire this method up to the imageList's
     Dispose event, so that we don't hang onto an imageList that's gone away.
 </summary>
	</doc>
	<doc for="TreeView.Dispose">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.ForceScrollbarUpdate">
		<summary>
     Forces the TreeView to recalculate all its nodes widths so that it updates the
     scrollbars as appropriate.
 </summary>
	</doc>
	<doc for="TreeView.IsInputKey">
		<summary>
			<para>
       Overridden to handle RETURN key.
    </para>
		</summary>
		<keyword term=""/>
	</doc>
	<doc for="TreeView.NodeFromHandle">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.OnHandleCreated">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.OnHandleDestroyed">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.OnItemDrag">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.ItemDrag"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.Windows.Forms.ItemDragEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnItemDrag"/> method also allows derived classes to 
    handle the event without attaching a delegate. This is the preferred technique
    for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.TreeView.OnItemDrag"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.TreeView.OnItemDrag"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.ItemDrag"/>
	</doc>
	<doc for="TreeView.OnKeyDown">
		<summary>
     Handles the OnBeforeCheck / OnAfterCheck for keyboard clicks
 </summary>
	</doc>
	<doc for="TreeView.OnKeyPress">
		<summary>
     Handles the OnBeforeCheck / OnAfterCheck for keyboard clicks
 </summary>
	</doc>
	<doc for="TreeView.ResetIndent">
		<summary>
     This resets the indentation to the system default.
 </summary>
	</doc>
	<doc for="TreeView.ResetItemHeight">
		<summary>
     This resets the item height to the system default.
 </summary>
	</doc>
	<doc for="TreeView.ShouldSerializeIndent">
		<summary>
     Retrieves true if the indent should be persisted in code gen.
 </summary>
		<returns>
     true if the indent should be persisted.
 </returns>
	</doc>
	<doc for="TreeView.ShouldSerializeItemHeight">
		<summary>
     Retrieves true if the itemHeight should be persisted in code gen.
 </summary>
		<returns>
     true if the itemHeight should be persisted.
 </returns>
	</doc>
	<doc for="TreeView.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="TreeView.CustomDraw">
		<summary>
     Performs custom draw handling
 </summary>
	</doc>
	<doc for="TreeView.GetItemRenderStyles">
		<summary>
     Generates colors for each item. This can be overridden to provide colors on a per state/per node
     basis, rather than using the ForeColor/BackColor/NodeFont properties on TreeNode.

 </summary>
		<param name="node">
     the TreeNode currently being drawn
 </param>
		<param name="state">
     the NMCUSTOMDRAW style bits for this node
 </param>
		<returns>
     an OwnerDrawPropertyBag object containing the font and colors
 </returns>
	</doc>
	<doc for="TreeView.WndProc">
		<summary>
		</summary>
	</doc>
	<doc for="TreeView.ResetForeColor">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TreeView.BackColor"><nodoc/>
		<summary>
   The background color for this control. Specifying null for
   this parameter sets the
   control's background color to its parent's background color.
   </summary>
	</doc><doc for="TreeView.ForeColor"><nodoc/>
		<summary>
   The current foreground color for this control, which is the
   color the control uses to draw its text.
   </summary>
	</doc><doc for="TreeView.OnKeyUp">
		<nodoc/>
		<summary>
			<para>Handles the OnBeforeCheck / OnAfterCheck for keyboard clicks</para>
		</summary>
	</doc><doc for="TreeView.ResetBackColor">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TreeView.ShouldSerializeBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.Control.BackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed from its default; 
   otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="TreeView.ShouldSerializeForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.Control.ForeColor"/> property should be 
   persisted.</para>
		</summary>
	</doc><doc for="TreeView.BeforeLabelEdit">
		<summary>
			<para>Occurs before the tree node label text is edited.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterLabelEdit"/>
	</doc><doc for="TreeView.BeforeCollapse">
		<summary>
			<para>Occurs before the tree node is collapsed.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterCollapse"/>
	</doc><doc for="TreeView.BeforeExpand">
		<summary>
			<para>Occurs before the tree node is expanded.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterExpand"/>
	</doc><doc for="TreeView.AfterExpand">
		<summary>
			<para>Occurs after the tree node is expanded.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeExpand"/>
	</doc><doc for="TreeView.ItemDrag">
		<summary>
			<para>Occurs when an item is dragged into the tree view control.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnItemDrag"/>
	</doc><doc for="TreeView.BeforeSelect">
		<summary>
			<para>Occurs before the tree node is selected.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterSelect"/>
	</doc><doc for="TreeView.AfterSelect">
		<summary>
			<para>Occurs after the tree node is selected.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeSelect"/>
	</doc><doc for="TreeView.OnBeforeLabelEdit">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.BeforeLabelEdit"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.NodeLabelEditEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnBeforeLabelEdit"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnBeforeLabelEdit"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnBeforeLabelEdit"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.BeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterLabelEdit"/>
	</doc><doc for="TreeView.OnAfterLabelEdit">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.AfterLabelEdit"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.NodeLabelEditEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnAfterLabelEdit"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnAfterLabelEdit"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnAfterLabelEdit"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.AfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeLabelEdit"/>
	</doc><doc for="TreeView.OnBeforeCheck">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.BeforeCheck"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnBeforeCheck"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnBeforeCheck"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnBeforeCheck"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.BeforeCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterCheck"/>
	</doc><doc for="TreeView.OnAfterCheck">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.AfterCheck"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnAfterCheck"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnAfterCheck"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnAfterCheck"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.AfterCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeCheck"/>
	</doc><doc for="TreeView.OnBeforeCollapse">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.BeforeCollapse"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnBeforeCollapse"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnBeforeCollapse"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnBeforeCollapse"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.BeforeCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterCollapse"/>
	</doc><doc for="TreeView.OnAfterCollapse">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.AfterCollapse"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnAfterCollapse"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnAfterCollapse"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnAfterCollapse"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.AfterCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeCollapse"/>
	</doc><doc for="TreeView.OnBeforeExpand">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.BeforeExpand"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnBeforeExpand"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnBeforeExpand"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnBeforeExpand"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.BeforeExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterExpand"/>
	</doc><doc for="TreeView.OnAfterExpand">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.AfterExpand"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnAfterExpand"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnAfterExpand"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnAfterExpand"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.AfterExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeExpand"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeExpand"/>
	</doc><doc for="TreeView.OnBeforeSelect">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.BeforeSelect"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnBeforeSelect"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnBeforeSelect"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnBeforeSelect"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.BeforeSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterSelect"/>
	</doc><doc for="TreeView.OnAfterSelect">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.TreeView.AfterSelect"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Windows.Forms.TreeViewEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TreeView.OnAfterSelect"/> method also allows derived classes to
   handle the event without attaching a delegate. This is the preferred technique
   for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TreeView.OnAfterSelect"/> in a derived class, be sure to call
   the base class's <see cref="System.Windows.Forms.TreeView.OnAfterSelect"/> method so that registered delegates
   receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.AfterSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeSelect"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeSelect"/>
	</doc><doc for="Control.DefaultSize"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TreeView.DefaultSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TreeView.Text">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TreeView.CheckedNodeCollection"><nodoc/>
		<summary>
			<para> Encapsulates the collection of <see cref="System.Windows.Forms.TreeNode"/>
items in a <see cref="System.Windows.Forms.TreeView"/> control that are in a checked state.</para>
		</summary>
	</doc><doc for="TreeView.CheckedNodeCollection.CheckedNodeCollection"><nodoc/>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection"/> class assigned to
   the specified <see cref="System.Windows.Forms.TreeView"/> control.</para>
		</summary>
		<param name="owner">The <see cref="System.Windows.Forms.TreeView"/> control that the checked nodes are assigned to.</param>
	</doc><doc for="TreeView.CheckedNodeCollection.Count"><nodoc/>
		<summary>
			<para> Gets the number of checked tree node items in the collection.</para>
		</summary>
		<value>
			<para>The number of checked <see cref="System.Windows.Forms.TreeNode"/> items in the collection. </para>
		</value>
	</doc><doc for="TreeView.CheckedNodeCollection.this"><nodoc/>
		<summary>
			<para>Gets the checked tree node at the specified indexed location in the checked node collection.</para>
		</summary>
		<param name="index"><para>The indexed location of the checked <see cref="System.Windows.Forms.TreeNode"/> item in the collection.</para></param>
		<value>
			<para>A <see cref="System.Windows.Forms.TreeNode"/> that represents the toolbar button at
   the specified indexed location.</para>
		</value>
		<exception cref="System.IndexOutOfRangeException"><para>The <paramref name="index"/> value is less than zero.</para>
			<para>-or-</para>
			<para>The <paramref name="index"/> value is greater than or equal to the <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection.Count"/> value.</para></exception>
		<remarks>
			<para>To retrieve a tree node from the <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection"/>, you
   can reference the collection object with a specific index value. The index value
   of the <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection"/> is a zero-based index. The <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection"/> is a
   subset of the <see cref="System.Windows.Forms.TreeNode"/> items in the
<see cref="System.Windows.Forms.TreeView.Nodes"/> collection, representing only 
   items that are checked.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.CheckedNodeCollection.IndexOf"/>
	</doc><doc for="TreeView.CheckedNodeCollection.IsReadOnly"><nodoc/>
		<summary>
			<para>Gets a value indicating if the collection is read only.</para>
		</summary>
		<value>
			<para>Always <see langword="true"/>.</para>
		</value>
	</doc><doc for="TreeView.CheckedNodeCollection.Contains">
		<nodoc/>
		<summary>
			<para> Determines whether the specified <see cref="System.Windows.Forms.TreeNode"/> is
   located in the collection.</para>
		</summary>
		<param name="node">The <see cref="System.Windows.Forms.TreeNode"/> to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.TreeNode"/> is in the collection; otherwise,
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>This method determines if a <see cref="System.Windows.Forms.TreeNode"/> from the <see cref="System.Windows.Forms.TreeView.Nodes"/> collection is in the <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection"/> .</para>
		</remarks>
	</doc><doc for="TreeView.CheckedNodeCollection.IndexOf"><nodoc/>
		<summary>
			<para> Returns an index into the collection of checked items.</para>
		</summary>
		<param name="node"><para>The <see cref="System.Windows.Forms.TreeNode"/> to locate in the collection.</para></param>
		<returns>
			<para>The zero-based index of the item found in the collection;
      otherwise, -1.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.CheckedNodeCollection"/> is a subset of
   the <see cref="System.Windows.Forms.TreeNode"/> items in the <see cref="System.Windows.Forms.TreeView.Nodes"/>
   collection, representing only items that are checked.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.CheckedNodeCollection.this"/>
	</doc><doc for="TreeView.CheckedNodeCollection.GetEnumerator"><nodoc/>
		<summary>
			<para>Returns an enumerator that can be used to iterate through the checked node
      collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> for navigating through the list.</para>
		</returns>
		<seealso cref="System.Collections.IEnumerator"/>
	</doc><doc for="TreeView.TreeView">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TreeView"/> class.</para>
		</summary>
		<seealso cref="System.Windows.Forms.TreeView"/>
	</doc><doc for="TreeView.Sorted">
		<summary>
			<para>Gets or sets a value indicating whether the tree nodes in the tree view are sorted.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the tree
   nodes in the tree view are sorted; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>When <see cref="System.Windows.Forms.TreeView.Sorted"/> is set to <see langword="true"/>, 
   the <see cref="System.Windows.Forms.TreeNode"/> objects are sorted in alphabetical
   order.</para>
		</remarks>
	</doc><doc for="TreeView.FullRowSelect">
		<summary>
			<para> Gets or sets a value indicating whether the selection highlight spans
      the width of the tree view control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the selection highlight spans the width of the tree view control; otherwise, <see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>When <see cref="System.Windows.Forms.TreeView.FullRowSelect"/> is <see langword="true"/>, a selection highlight
   spans the entire width of the tree view, display rather than the width of
   just the tree node label. The <see cref="System.Windows.Forms.TreeView.FullRowSelect"/> property is ignored
   if <see cref="System.Windows.Forms.TreeView.ShowLines"/> is set to <see langword="true"/>.</para>
		</remarks>
	</doc><doc for="TreeView.ShowLines">
		<summary>
			<para>Gets or sets a value indicating whether lines are drawn between tree nodes
      in the tree view control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if lines are drawn between tree nodes
   in the tree view control; otherwise, <see langword="false"/>. The default is
<see langword="true"/> .</para>
		</value>
		<remarks>
			<para>If <see cref="System.Windows.Forms.TreeView.ShowLines"/> is set to <see langword="true"/>, 
   the <see cref="System.Windows.Forms.TreeView.FullRowSelect"/>
   property is ignored.</para>
		</remarks>
	</doc><doc for="TreeView.ShowPlusMinus">
		<summary>
			<para>Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons
      are displayed next to tree nodes that contain child tree nodes.</para>
		</summary>
		<value>
			<para><see langword="true"/> if plus-sign and minus-sign buttons are displayed next to
   tree nodes that contain child tree nodes; otherwise, <see langword="false"/>. The
   default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>The plus-sign and minus-sign buttons appear next to the root tree nodes
      only if the <see cref="System.Windows.Forms.TreeView.ShowRootLines"/> property is
   <see langword="true"/>. If the
      plus-sign and minus-sign buttons are not displayed, no visual cue exists to indicate that
      the tree node contains child tree nodes and is expandable. The user then
      must double-click a tree node to determine whether it contains child tree nodes, to expand it,
      or to collapse
      it.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.ShowRootLines"/>
	</doc><doc for="TreeView.ShowRootLines">
		<summary>
			<para>Gets or sets a value indicating whether lines are drawn between the tree nodes that
      are at the root of the tree view.</para>
		</summary>
		<value>
			<para><see langword="true"/> if lines are drawn between the tree nodes
   that are at the root of the tree view; otherwise, <see langword="false"/>. The
   default is <see langword="true"/> .</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.TreeView.ShowRootLines"/> property is
<see langword="false"/>, the plus-sign and minus-sign buttons will 
   not appear next to the root tree nodes, and the <see cref="System.Windows.Forms.TreeView.ShowPlusMinus"/> property will have no effect. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeView.ShowPlusMinus"/>
	</doc><doc for="TreeView.TopNode">
		<summary>
			<para> Gets the first fully-visible tree node in the tree view
      control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.TreeNode"/> that represents
   the first fully-visible tree node in the tree view control.</para>
		</value>
		<remarks>
			<para>Initially, the <see cref="System.Windows.Forms.TreeView.TopNode"/> returns the first root tree node, which
   is located at the top of the <see cref="System.Windows.Forms.TreeView"/> .
   However, if the user has scrolled the contents, another tree node might be at the
   top.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeNode.IsVisible"/>
	</doc><doc for="TreeView.VisibleCount">
		<summary>
			<para>Gets the number of tree nodes that can be fully visible in the tree view
      control.</para>
		</summary>
		<value>
			<para>The number of <see cref="System.Windows.Forms.TreeNode"/> items that can be fully visible in the
<see cref="System.Windows.Forms.TreeView"/> 
control.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.VisibleCount"/> value can be greater than the
   number of tree nodes in the tree view. The value is calculated by dividing the
   height of the client window by the height of a tree node item. The result is the
   total number of <see cref="System.Windows.Forms.TreeNode"/> objects that the <see cref="System.Windows.Forms.TreeView"/>
   is capable of displaying
   within its current dimensions.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeNode.IsVisible"/>
	</doc><doc for="TreeView.HotTracking">
		<summary>
			<para>Gets or sets a value indicating whether a tree node label takes on the appearance of
      a hyperlink as the mouse pointer passes over it.</para>
		</summary>
		<value>
			<para><see langword="true"/> if a tree
   node label takes on the appearance of a hyperlink as the mouse pointer passes over it; otherwise, <see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.TreeView.CheckBoxes"/> property is set to <see langword="true"/> , the <see cref="System.Windows.Forms.TreeView.HotTracking"/> property has no effect.</para>
			<note type="note">
   When the <see cref="System.Windows.Forms.TreeView.HotTracking"/> property is set to <see langword="true"/>, each
   tree node label takes on the appearance of a hyperlink as the mouse pointer passes
   over it. The <see cref="System.Drawing.FontStyle.Underline"/> font style is applied to
   the <see cref="System.Drawing.Font"/> and the <see cref="System.Windows.Forms.Control.ForeColor"/> is set
   to blue to make the label appear as
   a link. The
   appearance is not controlled by the internet settings of the user's
   operating system.
</note>
		</remarks>
	</doc><doc for="TreeView.Scrollable">
		<summary>
			<para>Gets or sets a value indicating whether the tree view control displays scroll bars when
      they are needed.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the tree view control displays
   scroll bars when they are needed; otherwise, <see langword="false"/>. The default
   is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If this property is set to <see langword="true"/>, scroll bars are displayed
   on the <see cref="System.Windows.Forms.TreeView"/> when any <see cref="System.Windows.Forms.TreeNode"/> object is located
   outside the control's client region. </para>
			<note type="note">
   When setting the <see cref="System.Windows.Forms.TreeView.Scrollable"/>
   property at run time, the <see cref="System.Windows.Forms.TreeView"/> handle is recreated (see <see cref="System.Windows.Forms.Control.RecreateHandle" qualify="true"/>) to update the control's appearance.
   This causes all tree nodes to be collapsed, with the exception of the selected
<see cref="System.Windows.Forms.TreeNode"/> . 
</note>
		</remarks>
	</doc><doc for="TreeView.CheckBoxes">
		<summary>
			<para>Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if a check box is displayed next to each tree node in the tree view control; otherwise,
<see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>A check box is displayed to the left of both the tree node label and tree node <see cref="System.Drawing.Image"/>, 
   if any. Check boxes allow the user to select more than one tree node at a time. </para>
			<note type="note">
   When setting the <see cref="System.Windows.Forms.TreeView.CheckBoxes"/>
   property at run time, the <see cref="System.Windows.Forms.TreeView"/> handle is
   recreated (see <see cref="System.Windows.Forms.Control.RecreateHandle" qualify="true"/>) to update the control's appearance.
   This causes all tree nodes to be collapsed, with the exception of the selected
<see cref="System.Windows.Forms.TreeNode"/> . 
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeNode.Checked"/>
	</doc><doc for="TreeView.GetNodeAt">
		<overload>
			<para>Retrieves the tree node that is at the specified location.</para>
		</overload>
		<summary>
			<para>Retrieves the tree node that is at the specified point.</para>
		</summary>
		<param name="pt">The <see cref="System.Drawing.Point"/> to evaluate and retrieve the node from. </param>
		<returns>
			<para>The <see cref="System.Windows.Forms.TreeNode"/> at the specified point, in tree view
   coordinates.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.MouseEventArgs.X" qualify="true"/> and <see cref="System.Windows.Forms.MouseEventArgs.Y" qualify="true"/> coordinates of the <see cref="System.Windows.Forms.Control.MouseDown"/> 
event as the <see cref="System.Drawing.Point.X"/> and <see cref="System.Drawing.Point.Y"/> values of a new <see cref="System.Drawing.Point"/> object. </para>
		</remarks>
		<seealso cref="System.Drawing.Point"/>
	</doc><doc for="TreeView.BorderStyle">
		<summary>
			<para>Gets or sets the border style of the tree view control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BorderStyle"/> values. The default is
<see cref="System.Windows.Forms.BorderStyle.Fixed3D"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Windows.Forms.BorderStyle"/> values.</exception>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.TreeView.BorderStyle"/> property is set
   to <see cref="System.Windows.Forms.BorderStyle.Fixed3D"/>, the <see cref="System.Windows.Forms.TreeView"/> has a sunken, three-dimensional
   appearance. To display a flat, thin border around the <see cref="System.Windows.Forms.TreeView"/>
   control, set the <see cref="System.Windows.Forms.BorderStyle"/> property to <see cref="System.Windows.Forms.BorderStyle.FixedSingle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.BorderStyle"/>
	</doc><doc for="TreeView.OnPaint">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeView.ItemHeight">
		<summary>
			<para>Gets or sets the height of each tree node in the tree view control.</para>
		</summary>
		<value>
			<para>The height, in pixels, of each tree node in the tree view.</para>
		</value>
		<exception cref="System.ArgumentException"><para>The assigned value is less than one.</para>
			<para>-or-</para>
			<para> The assigned value is greater than the <see cref="System.Int16.MaxValue"/> value. </para></exception>
		<example>
			<para>The following example changes the size <see cref="System.Windows.Forms.TreeNode.NodeFont"/> to the specified size and adjusts the <see cref="System.Windows.Forms.TreeView.ItemHeight"/> of the tree node's parent <see cref="System.Windows.Forms.TreeView"/> contorl. This example assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.TreeView"/> control with a collection of <see cref="System.Windows.Forms.TreeNode"/> objects, and a <see cref="System.Windows.Forms.ComboBox"/> containing font sizes. </para>
			<codelink SampleID="TreeNode_Bounds" SnippetID="2"/>
		</example>
		<seealso cref="System.Int16.MaxValue"/>
	</doc>
	<doc for="TreeView.LabelEdit">
		<summary>
			<para> Gets or sets a value indicating whether the label text of the
      tree nodes can be edited.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the label text of the tree nodes can be
   edited; otherwise, <see langword="false"/>. The default is
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeNode.BeginEdit"/> method works only if the <see cref="System.Windows.Forms.TreeView.LabelEdit"/> property is
<see langword="true"/>. If <see cref="System.Windows.Forms.TreeView.LabelEdit"/> is <see langword="false "/> when you attempt to edit the label, an exception 
   will be thrown and the tree node will not be put in to an editable state. </para>
		</remarks>
		<example>
			<para>The following example allows the user to edit nonroot tree nodes by using a <see cref="System.Windows.Forms.ContextMenu"/>. When the user right clicks the mouse, the <see cref="System.Windows.Forms.TreeNode"/> at that position is determined and stored in a variable named <c>mySelectedNode</c>. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</para>
			<codelink SampleID="classic treenode.beginedit example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNode.BeginEdit"/>
		<seealso cref="System.Windows.Forms.TreeNode.EndEdit"/>
	</doc>
	<doc for="TreeView.AfterLabelEdit">
		<summary>
			<para>Occurs after the tree node label text is edited.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example allows the user to edit nonroot tree nodes by using a <see cref="System.Windows.Forms.ContextMenu"/>. When the user right clicks the mouse, the <see cref="System.Windows.Forms.TreeNode"/> at that position is determined and stored in a variable named <c>mySelectedNode</c>. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</para>
			<codelink SampleID="classic treenode.beginedit example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeLabelEdit"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeLabelEdit"/>
	</doc>
	<doc for="TreeView.GetNodeAt1">
		<summary>
			<para>Retrieves the tree node at the point with the specified coordinates.</para>
		</summary>
		<param name="x">The <see cref="System.Drawing.Point.X"/> position to evaluate and retrieve the node from. </param>
		<param name="y">The <see cref="System.Drawing.Point.Y"/> position to evaluate and retrieve the node from. </param>
		<returns>
			<para>The <see cref="System.Windows.Forms.TreeNode"/> at the specified location, in tree view coordinates.</para>
		</returns>
		<remarks>
			<para>You can pass the <see cref="System.Windows.Forms.MouseEventArgs.X" qualify="true"/> and <see cref="System.Windows.Forms.MouseEventArgs.Y" qualify="true"/> coordinates of the <see cref="System.Windows.Forms.Control.MouseDown"/> event as the <paramref name="x"/> and
<paramref name="y"/> parameters.</para>
		</remarks>
		<example>
			<para>The following example allows the user to edit nonroot tree nodes by using a <see cref="System.Windows.Forms.ContextMenu"/>. When the user right clicks the mouse, the <see cref="System.Windows.Forms.TreeNode"/> at that position is determined and stored in a variable named <c>mySelectedNode</c>. If a nonroot tree node was selected, it is put into an editable state, allowing the user to edit the node label. After the user stops editing the tree node label, the new label text is evaluated and saved. For this example, several characters are considered not valid in the label text. If one of the invalid characters is in the label string, or the string is empty, the user is notified of the error and the label is returned to its previous text.</para>
			<codelink SampleID="classic treenode.beginedit example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Point"/>
	</doc>
	<doc for="TreeView.ImageIndex">
		<summary>
			<para>Gets or sets the image-list index value of the default image that is displayed by the tree
      nodes.</para>
		</summary>
		<value>
			<para>A zero-based index, that represents the position of an
      <see cref="System.Drawing.Image"/> in an <see cref="System.Windows.Forms.ImageList"/>.
      The default is zero.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.ImageIndex"/> value is the index of an <see cref="System.Drawing.Image"/> stored in
   the <see cref="System.Windows.Forms.ImageList"/> object assigned to the <see cref="System.Windows.Forms.TreeView.ImageList"/> property. </para>
			<note type="note">
   When setting the <see cref="System.Windows.Forms.TreeView.ImageIndex"/>
   property at run time, the <see cref="System.Windows.Forms.TreeView"/> handle is recreated (see <see cref="System.Windows.Forms.Control.RecreateHandle" qualify="true"/>) to update the control's appearance.
   This causes all tree nodes to be collapsed, with the exception of the selected
<see cref="System.Windows.Forms.TreeNode"/> . 
</note>
		</remarks>
		<example>
			<para>The following example creates and assigns an <see cref="System.Windows.Forms.ImageList"/> to a <see cref="System.Windows.Forms.TreeView"/> control and fills the <see cref="System.Windows.Forms.TreeView"/> control with <see cref="System.Windows.Forms.TreeNode"/> objects. The tree nodes are assigned images from the <see cref="System.Windows.Forms.ImageList"/> that are displayed when in a seleced or unselected state. This example assumes you have a <see cref="System.Windows.Forms.Form"/> containing a <see cref="System.Windows.Forms.TreeView"/>, and an <see cref="System.Collections.ArrayList"/> containing <c>Customer</c> objects that each contain <c>Order</c> objects. It is also assumed that the <c>Customer</c> and <c>Order</c> objects are defined.</para>
			<codelink SampleID="TreeNode_TreeNode" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeView.ImageList">
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.ImageList"/> that contains the <see cref="System.Drawing.Image"/> objects used
   by the tree nodes.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.ImageList"/> that contains the <see cref="System.Drawing.Image"/> objects
   used by the tree nodes. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.ImageList"/> property value is anything other than <see langword="null"/> , all the tree nodes display the first <see cref="System.Drawing.Image"/> stored in the <see cref="System.Windows.Forms.ImageList"/>. </para>
		</remarks>
		<example>
			<para>The following example creates and assigns an <see cref="System.Windows.Forms.ImageList"/> to a <see cref="System.Windows.Forms.TreeView"/> control and fills the <see cref="System.Windows.Forms.TreeView"/> control with <see cref="System.Windows.Forms.TreeNode"/> objects. The tree nodes are assigned images from the <see cref="System.Windows.Forms.ImageList"/> that are displayed when in a seleced or unselected state. This example assumes you have a <see cref="System.Windows.Forms.Form"/> containing a <see cref="System.Windows.Forms.TreeView"/>, and an <see cref="System.Collections.ArrayList"/> containing <c>Customer</c> objects that each contain <c>Order</c> objects. It is also assumed that the <c>Customer</c> and <c>Order</c> objects are defined.</para>
			<codelink SampleID="TreeNode_TreeNode" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeView.SelectedImageIndex">
		<summary>
			<para> Gets or sets the image list index value of the image that is displayed when a tree node is selected.</para>
		</summary>
		<value>
			<para>A zero-based index value that represents the position of an <see cref="System.Drawing.Image"/> in an <see cref="System.Windows.Forms.ImageList"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The index assigned value is less than zero.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.SelectedImageIndex"/> value is the index of an <see cref="System.Drawing.Image"/>
stored in the <see cref="System.Windows.Forms.ImageList"/> object assigned to the <see cref="System.Windows.Forms.TreeView.ImageList"/> property.</para>
			<note type="note">
   When setting the <see cref="System.Windows.Forms.TreeView.SelectedImageIndex"/>
   property at run time, the <see cref="System.Windows.Forms.TreeView"/> handle is recreated (see <see cref="System.Windows.Forms.Control.RecreateHandle" qualify="true"/>) to update the control's appearance.
   This causes all tree nodes to be collapsed, with the exception of the selected
<see cref="System.Windows.Forms.TreeNode"/> . 
</note>
		</remarks>
		<example>
			<para>The following example creates and assigns an <see cref="System.Windows.Forms.ImageList"/> to a <see cref="System.Windows.Forms.TreeView"/> control and fills the <see cref="System.Windows.Forms.TreeView"/> control with <see cref="System.Windows.Forms.TreeNode"/> objects. The tree nodes are assigned images from the <see cref="System.Windows.Forms.ImageList"/> that are displayed when in a seleced or unselected state. This example assumes you have a <see cref="System.Windows.Forms.Form"/> containing a <see cref="System.Windows.Forms.TreeView"/>, and an <see cref="System.Collections.ArrayList"/> containing <c>Customer</c> objects that each contain <c>Order</c> objects. It is also assumed that the <c>Customer</c> and <c>Order</c> objects are defined.</para>
			<codelink SampleID="TreeNode_TreeNode" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.ImageList"/>
		<seealso cref="System.Windows.Forms.TreeView.ImageIndex"/>
	</doc>
	<doc for="TreeView.BackgroundImage">
		<hideinheritance/>
		<nodoc/>
	</doc>
	<doc for="TreeView.BackgroundImageChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeView.TextChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeView.Indent">
		<summary>
			<para>Gets or sets the distance to indent each of the child tree node levels.</para>
		</summary>
		<value>
			<para>The distance, in pixels, to indent each of the child tree node levels.</para>
		</value>
		<exception cref="System.ArgumentException"><para>The assigned value is less than 0.</para><para>-or-</para><para>The assigned value is greater than 32,000. </para></exception>
	</doc>
	<doc for="TreeView.CollapseAll">
		<summary>
			<para> Collapses all the tree nodes.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.CollapseAll"/> method collapses all the <see cref="System.Windows.Forms.TreeNode"/> objects, including all the child tree
   nodes, that are in the <see cref="System.Windows.Forms.TreeView"/> control.</para>
			<note type="note">
   The state of a <see cref="System.Windows.Forms.TreeNode"/> persists. For example, suppose that you call the <see cref="System.Windows.Forms.TreeNode.Expand"/> method
   for a
   root tree node. If the child tree nodes were not previously collapsed,
   they will appear in their previously-expanded state. Calling the <see cref="System.Windows.Forms.TreeView.CollapseAll"/> method ensures that all the tree nodes appear in the collapsed state.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.TreeNode.Collapse"/>
		<seealso cref="System.Windows.Forms.TreeView.ExpandAll"/>
	</doc>
	<doc for="TreeView.HideSelection">
		<summary>
			<para>Gets or sets a value indicating whether the selected tree node
      remains highlighted even when the tree view has lost the focus.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the selected tree node is not highlighted when the tree view has lost the focus; otherwise, <see langword="false"/>. The default is <see langword="true"/> .</para>
		</value>
		<seealso cref="System.Windows.Forms.TreeView.SelectedNode"/>
	</doc>
	<doc for="TreeView.Nodes">
		<summary>
			<para>Gets the collection of tree nodes that are assigned to the tree view control.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Windows.Forms.TreeNodeCollection"/> that represents the tree
   nodes assigned to the tree view control.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.Nodes"/> property holds a collection of
<see cref="System.Windows.Forms.TreeNode"/> objects, each 
   of which has a <see cref="System.Windows.Forms.TreeNode.Nodes"/> property that can contain its own
<see cref="T:System.Windows.Forms.TreeNodeCollection"/>. This nesting of tree nodes can make it difficult 
   to navigate a tree structure, but the <see cref="System.Windows.Forms.TreeNode.FullPath"/>
   property makes it easier to determine
   your location within the tree structure.</para>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/>
control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each
customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using
the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed
while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects.
This example assumes you have a Customer object that can hold a collection of
Order objects. It also assumes that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/>
control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Windows.Forms.TreeNodeCollection"/>
		<seealso cref="System.Windows.Forms.TreeView.Nodes"/>
	</doc>
	<doc for="TreeView.PathSeparator">
		<summary>
			<para>Gets or sets the delimiter string that the tree node path uses.</para>
		</summary>
		<value>
			<para>The delimiter string that the tree node <see cref="System.Windows.Forms.TreeNode.FullPath" qualify="true"/> property uses. The default is the backslash character (\).</para>
		</value>
		<remarks>
			<para> The tree node path
      consists of a set of tree node labels separated by the <see cref="System.Windows.Forms.TreeView.PathSeparator"/> delimiter strings. The labels
      range from the root tree node to the tree node that
      you want.</para>
		</remarks>
		<example>
			<para>The following example set the <see cref="System.Windows.Forms.TreeView.PathSeparator"/> proprety of a <see cref="System.Windows.Forms.TreeView"/>
and displays the number of child tree nodes contained in the <see cref="T:System.Windows.Forms.TreeNodeCollection"/> of the <see cref="System.Windows.Forms.TreeView.SelectedNode"/>. The percentage of child tree node to
total tree nodes in the tree view control is also displayed. This example
assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.Button"/>,
and a <see cref="System.Windows.Forms.TreeView"/> control with a <see cref="T:System.Windows.Forms.TreeNodeCollection"/> that has several <see cref="System.Windows.Forms.TreeNode"/>
objects (preferably with three or more levels).</para>
			<codelink SampleID="TreeNode_ForeColor" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNode.FullPath"/>
	</doc>
	<doc for="TreeView.SelectedNode">
		<summary>
			<para>Gets or sets the tree node that is currently selected in the tree view control.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.TreeNode"/> that
   is currently selected in the tree view
   control.</para>
		</value>
		<remarks>
			<para>If no <see cref="System.Windows.Forms.TreeNode"/> is currently selected, the <see cref="System.Windows.Forms.TreeView.SelectedNode"/> property is <see langword="null "/>.</para>
		</remarks>
		<example>
			<para>The following example set the <see cref="System.Windows.Forms.TreeView.PathSeparator"/> proprety of a <see cref="System.Windows.Forms.TreeView"/> and displays the number of child tree nodes contained in the <see cref="T:System.Windows.Forms.TreeNodeCollection"/> of the <see cref="System.Windows.Forms.TreeView.SelectedNode"/>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.Button"/>, and a <see cref="System.Windows.Forms.TreeView"/> control with a <see cref="T:System.Windows.Forms.TreeNodeCollection"/> that has several <see cref="System.Windows.Forms.TreeNode"/> objects (preferably with three or more levels).</para>
			<codelink SampleID="TreeNode_ForeColor" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNode"/>
	</doc>
	<doc for="TreeView.ExpandAll">
		<summary>
			<para> Expands all the tree nodes.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.ExpandAll"/> method expands all the <see cref="System.Windows.Forms.TreeNode"/>
objects, including all the child tree nodes, that are in the <see cref="System.Windows.Forms.TreeView"/>
control.</para>
			<note type="note">
   The state of a <see cref="System.Windows.Forms.TreeNode"/> persists. For example, suppose that you
   call the <see cref="System.Windows.Forms.TreeNode.ExpandAll"/> method, then the individual root tree
   nodes are collapsed. The child tree nodes have not been collapsed, and will appear in their previously-expanded state when
   the root tree nodes are expanded again. Calling the <see cref="System.Windows.Forms.TreeView.CollapseAll"/> method ensures that all the tree
   nodes appear in the collapsed state.
</note>
		</remarks>
		<example>
			<para>The following example expands all the tree nodes in a <see cref="System.Windows.Forms.TreeView"/>
control when a <see cref="System.Windows.Forms.CheckBox"/> is checked, and collapses the <see cref="System.Windows.Forms.TreeNode.FirstNode"/> when the <see cref="System.Windows.Forms.CheckBox"/> is cleared. This example
assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.CheckBox"/>, and a <see cref="System.Windows.Forms.TreeView"/> control with a <see cref="T:System.Windows.Forms.TreeNodeCollection"/> that has
several<see cref="System.Windows.Forms.TreeNode"/> objects (preferably with three or more levels).</para>
			<codelink SampleID="TreeNode_ForeColor" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNode.Expand"/>
		<seealso cref="System.Windows.Forms.TreeView.CollapseAll"/>
	</doc>
	<doc for="TreeView.GetNodeCount">
		<summary>
			<para>Retrieves the number of tree nodes, optionally including those in all subtrees, assigned to the tree
      view control.</para>
		</summary>
		<param name="includeSubTrees"><para><see langword="true"/> to count the <see cref="System.Windows.Forms.TreeNode"/> items that the subtrees contain; otherwise, <see langword="false"/>.</para></param>
		<returns>
			<para> The number of tree nodes, optionally including
      those in all subtrees, assigned to the tree view control.</para>
		</returns>
		<remarks>
			<para>If <paramref name="includeSubTrees"/> is <see langword="true"/>, the result is the number of all
   the tree nodes in the entire tree structure.</para>
		</remarks>
		<example>
			<para>The following example set the <see cref="System.Windows.Forms.TreeView.PathSeparator"/> proprety of a <see cref="System.Windows.Forms.TreeView"/> and displays the number of child tree nodes contained in the <see cref="T:System.Windows.Forms.TreeNodeCollection"/> of the <see cref="System.Windows.Forms.TreeView.SelectedNode"/>. The percentage of child tree node to total tree nodes in the tree view control is also displayed. This example assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.Button"/>, and a <see cref="System.Windows.Forms.TreeView"/> control with a <see cref="T:System.Windows.Forms.TreeNodeCollection"/> that has several <see cref="System.Windows.Forms.TreeNode"/> objects (preferably with three or more levels).</para>
			<codelink SampleID="TreeNode_ForeColor" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNode"/>
	</doc>
	<doc for="TreeView.AfterCheck">
		<summary>
			<para>Occurs after the tree node check box is checked.</para>
		</summary>
		<remarks>
			<note type="note">
      Setting the <see cref="System.Windows.Forms.TreeNode.Checked" qualify="true"/> property from within the <see cref="System.Windows.Forms.TreeView.BeforeCheck"/> or
   <see cref="System.Windows.Forms.TreeView.AfterCheck"/> event causes the event to
      be raised multiple times and can result in unexpected behavior. For example, you
      might set the <see cref="System.Windows.Forms.TreeNode.Checked"/> property in the event handler when you are
      recursively updating the child nodes, so the user does not have to expand and
      check each one individually. To prevent the event from being raised multiple
      times, add logic to your event handler that only executes your recursive code if
      the <see cref="System.Windows.Forms.TreeViewEventArgs.Action"/> property of the <see cref="System.Windows.Forms.TreeViewEventArgs"/> is not set to <see cref="System.Windows.Forms.TreeViewAction.Unknown" qualify="true"/> .
      
   </note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example updates all the child tree nodes of a <see cref="System.Windows.Forms.TreeNode"/>
when the user changes its checked state. This code assumes you have a <see cref="System.Windows.Forms.Form"/> with
a <see cref="System.Windows.Forms.TreeView"/> that has <see cref="System.Windows.Forms.TreeNode"/> objects in its <see cref="T:System.Windows.Forms.TreeNodeCollection"/>. The <see cref="T:System.Windows.Forms.TreeNodeCollection"/> should have tree nodes with child
nodes.</para>
			<codelink SampleID="TreeView.AfterCheck_BeforeCheck" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.CheckBoxes"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeCheck"/>
	</doc>
	<doc for="TreeView.AfterCollapse">
		<summary>
			<para>Occurs after the tree node is collapsed.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/> .
   </para>
		</remarks>
		<example>
			<para>The following example updates all the child tree nodes of a <see cref="System.Windows.Forms.TreeNode"/>
when the user changes its checked state. This code assumes you have a <see cref="System.Windows.Forms.Form"/> with
a <see cref="System.Windows.Forms.TreeView"/> that has <see cref="System.Windows.Forms.TreeNode"/> objects in its <see cref="T:System.Windows.Forms.TreeNodeCollection"/>. The <see cref="T:System.Windows.Forms.TreeNodeCollection"/> should have tree nodes with child
nodes.</para>
			<codelink SampleID="TreeView.AfterCheck_BeforeCheck" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.BeforeCollapse"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeCollapse"/>
	</doc>
	<doc for="TreeView.BeforeCheck">
		<summary>
			<para>Occurs before the tree node check box is checked.</para>
		</summary>
		<remarks>
			<note type="note">
      Setting the <see cref="System.Windows.Forms.TreeNode.Checked" qualify="true"/> property from within the <see cref="System.Windows.Forms.TreeView.BeforeCheck"/> or
   <see cref="System.Windows.Forms.TreeView.AfterCheck"/> event causes the event to
      be raised multiple times and can result in unexpected behavior. For example, you
      might set the <see cref="System.Windows.Forms.TreeNode.Checked"/> property in the event handler when you are
      recursively updating the child nodes, so the user does not have to expand and
      check each one individually. To prevent the event from being raised multiple
      times, add logic to your event handler that only executes your recursive code if
      the <see cref="System.Windows.Forms.TreeViewEventArgs.Action"/> property of the <see cref="System.Windows.Forms.TreeViewEventArgs"/> is not set to <see cref="System.Windows.Forms.TreeViewAction.Unknown" qualify="true"/> .
      
   </note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example updates all the child tree nodes of a <see cref="System.Windows.Forms.TreeNode"/> when the user changes its checked state. This code assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.TreeView"/> that has <see cref="System.Windows.Forms.TreeNode"/> objects in its <see cref="T:System.Windows.Forms.TreeNodeCollection"/>. The <see cref="T:System.Windows.Forms.TreeNodeCollection"/> should have tree nodes with child nodes.</para>
			<codelink SampleID="TreeView.AfterCheck_BeforeCheck" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.CheckBoxes"/>
		<seealso cref="System.Windows.Forms.TreeView.OnBeforeCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.AfterCheck"/>
		<seealso cref="System.Windows.Forms.TreeView.OnAfterCheck"/>
	</doc>
	<doc for="TreeView">
		<summary>
			<para>Displays a hierarchical collection of labeled items, each represented by a
   <see cref="System.Windows.Forms.TreeNode"/>. </para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeView.Nodes"/> collection holds all the <see cref="System.Windows.Forms.TreeNode"/> objects that are assigned to the <see cref="System.Windows.Forms.TreeView"/>
control. The tree nodes in this collection are referred
to as the root tree nodes. Any tree node that is subsequently added to a root tree
node is referred to as a child node. Because each <see cref="System.Windows.Forms.TreeNode"/> can contain a collection
of other <see cref="System.Windows.Forms.TreeNode"/>
objects, you might find it difficult to determine
your location in the tree structure when you iterate through
the collection. You can parse the <see cref="System.Windows.Forms.TreeNode.FullPath" qualify="true"/>
string by using the
<see cref="System.Windows.Forms.TreeView.PathSeparator"/> string value to determine where a 
<see cref="System.Windows.Forms.TreeNode"/> label begins and ends.</para>
			<para>You can display images next to the tree nodes by assigning an <see cref="System.Windows.Forms.ImageList"/> object
to the <see cref="System.Windows.Forms.TreeView.ImageList"/>
property, and referencing
the index value of an <see cref="System.Drawing.Image"/>
in the <see cref="System.Windows.Forms.ImageList"/> to assign that <see cref="System.Drawing.Image"/> . Set the <see cref="System.Windows.Forms.TreeView.ImageIndex"/> property to the index value of the <see cref="System.Drawing.Image"/> that you want to display when a tree
node is not selected. Likewise, set the <see cref="System.Windows.Forms.TreeView.SelectedImageIndex"/> property to the index value of
the <see cref="System.Drawing.Image"/> that you want to display when a tree node is selected. The images
referenced by the <see cref="System.Windows.Forms.TreeView.ImageIndex"/> and <see cref="System.Windows.Forms.TreeView.SelectedImageIndex"/>
property values are the default images displayed by all the
tree nodes that are assigned to the <see cref="System.Windows.Forms.TreeView.Nodes"/>
collection. Each tree node can override the default images by setting the
<see cref="System.Windows.Forms.TreeNode.ImageIndex" qualify="true"/> and <see cref="System.Windows.Forms.TreeNode.SelectedImageIndex" qualify="true"/> properties. </para>
			<para> Tree nodes can be expanded to display the next level of
   child tree nodes. The user can expand the <see cref="System.Windows.Forms.TreeNode"/> by clicking the plus-sign (+) button, if one
   is displayed next to the <see cref="System.Windows.Forms.TreeNode"/> , or you can expand
   the <see cref="System.Windows.Forms.TreeNode"/> by calling the <see cref="System.Windows.Forms.TreeNode.Expand" qualify="true"/> method. To expand all the child tree node
   levels in the <see cref="System.Windows.Forms.TreeNode.Nodes"/> collection, call the <see cref="System.Windows.Forms.TreeNode.ExpandAll"/> method. You can collapse the
   child <see cref="System.Windows.Forms.TreeNode"/> level by calling the <see cref="System.Windows.Forms.TreeNode.Collapse" qualify="true"/> method, or the user can press the minus-sign (-) button, if
   one is displayed next to the <see cref="System.Windows.Forms.TreeNode"/> . You can also call
   the <see cref="System.Windows.Forms.TreeNode.Toggle" qualify="true"/> method to alternate
   between the expanded and
   collapsed states.</para>
			<para> Tree nodes can optionally display check boxes. To display the check boxes,
   set the <see cref="System.Windows.Forms.TreeView.CheckBoxes"/> property of the <see cref="System.Windows.Forms.TreeView"/>
   to <see langword="true"/>. The <see cref="System.Windows.Forms.TreeNode.Checked"/> property is set to
<see langword="true"/> for tree nodes that are in a checked state. </para>
			<note type="note">
   Setting the <see cref="System.Windows.Forms.TreeNode.Checked" qualify="true"/> property from within the <see cref="System.Windows.Forms.TreeView.BeforeCheck"/> or <see cref="System.Windows.Forms.TreeView.AfterCheck"/> event causes the event to
   be raised multiple times and can result in unexpected behavior. For example, you
   might set the <see cref="System.Windows.Forms.TreeNode.Checked"/> property in the event handler when you are
   recursively updating the child nodes, so the user does not have to expand and
   check each one individually. To prevent the event from being raised multiple
   times, add logic to your event handler that only executes your recursive code if
   the <see cref="System.Windows.Forms.TreeViewEventArgs.Action"/> property of the <see cref="System.Windows.Forms.TreeViewEventArgs"/> is not set to <see cref="System.Windows.Forms.TreeViewAction.Unknown" qualify="true"/>. For an example of how to do this, see the
   Example section of the <see cref="System.Windows.Forms.TreeView.AfterCheck"/> or <see cref="System.Windows.Forms.TreeView.BeforeCheck"/> events.
   
</note>
			<para> You can change the appearance of the <see cref="System.Windows.Forms.TreeView"/>
control by setting some of its display and style properties. Setting
<see cref="System.Windows.Forms.TreeView.ShowPlusMinus"/> to <see langword="true"/> 
displays a plus-sign or minus-sign button next to each <see cref="System.Windows.Forms.TreeNode"/> object that can be expanded or
collapsed, respectively. Setting the <see cref="System.Windows.Forms.TreeView.ShowRootLines"/> property to <see langword="true"/>
causes the<see cref="System.Windows.Forms.TreeView"/> to display lines that join all the root
tree nodes together. You can display lines that connect child tree nodes to their root node by
setting the <see cref="System.Windows.Forms.TreeView.ShowLines"/> property to <see langword="true"/>. Setting
the <see cref="System.Windows.Forms.TreeView.HotTracking"/> property to <see langword="true"/> changes the appearance of the tree node
labels as the mouse pointer passes over them. When hot-tracked, the
tree node labels take on the appearance of a hyperlink. </para>
			<note type="note">
   When setting the <see cref="System.Windows.Forms.TreeView.CheckBoxes"/>, <see cref="System.Windows.Forms.TreeView.Scrollable"/>, <see cref="System.Windows.Forms.TreeView.ImageIndex"/>, and <see cref="System.Windows.Forms.TreeView.SelectedImageIndex"/>
   properties at run time, the <see cref="System.Windows.Forms.TreeView"/> handle is
   recreated (see <see cref="System.Windows.Forms.Control.RecreateHandle" qualify="true"/>) to update the control's appearance.
   This causes all tree nodes to be collapsed, with the exception of the selected
<see cref="System.Windows.Forms.TreeNode"/> . 
</note>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/>
control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each
customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using
the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed
while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects. This
example assumes you have a <c>Customer</c> object that can hold a collection of <c>Order</c> objects.
It also assumes that you have a cursor file named <c>MyWait.cur</c> in the application directory and that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/>
control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNode"/>
	</doc>
	<doc for="TreeView.EndUpdate">
		<summary>
			<para>Enables the redrawing of the tree view. </para>
		</summary>
		<remarks>
			<para> To maintain performance while items are added one at a
      time to the <see cref="System.Windows.Forms.TreeView"/>, call the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> method. The <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> method prevents the control from
      painting until the <see cref="System.Windows.Forms.TreeView.EndUpdate"/> method is called.</para>
			<para>The preferred way to add items to a tree view control is to use the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> method to add an array
   of tree node items to a tree view. However, if you want to add items one at a
   time, use the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> method to prevent the <see cref="System.Windows.Forms.TreeView"/>
   control from painting during the add operations. To allow control the control to
   resume painting, call the <see cref="System.Windows.Forms.TreeView.EndUpdate"/> method when all the tree nodes
   have been added to the tree view.</para>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/>
control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each
customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using
the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed
while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects. This
example assumes you have a <c>Customer</c> object that can hold a collection of <c>Order</c> objects.
It also assumes that you have a cursor file named <c>MyWait.cur</c> in the application directory and that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/>
control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.BeginUpdate"/>
	</doc>
	<doc for="TreeView.BeginUpdate">
		<summary>
			<para>Disables any redrawing of the tree view. </para>
		</summary>
		<remarks>
			<para>To maintain performance while items are added one at a time to the
      <see cref="System.Windows.Forms.TreeView"/>, call the
      <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> method. The <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> method prevents the control
      from painting until the <see cref="System.Windows.Forms.TreeView.EndUpdate"/>
      method is called.</para>
			<para>The preferred way to add items to a tree view control is to use
      the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> method to add an array
      of tree node items to a tree view. However, if you want to add items one at a
      time, use the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/>
      method to prevent the <see cref="System.Windows.Forms.TreeView"/> control from painting during the
      add operations. To allow control the control
      to resume painting, call the <see cref="System.Windows.Forms.TreeView.EndUpdate"/>
      method when all the tree nodes have been added to the tree view.</para>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/>
control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each
customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using
the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed
while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects. This
example assumes you have a <c>Customer</c> object that can hold a collection of <c>Order</c> objects.


It also assumes that you have a cursor file named <c>MyWait.cur</c> in the application directory and that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/>
control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView.EndUpdate"/>
	</doc>
</docs>
