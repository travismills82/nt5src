<docs>
	<doc for="PrintPreviewDialog">
		<summary>
			<para> Represents a
       dialog box form that contains a <see cref="System.Windows.Forms.PrintPreviewControl"/>.</para>
		</summary>
		<remarks>
			<para>When you create an instance of <see cref="System.Windows.Forms.PrintPreviewDialog"/>, some of the read/write
    properties are set to initial values. For a list of these, see the <see cref="System.Windows.Forms.PrintPreviewDialog()"/>
    constructor.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.PageSetupDialog"/>
		<seealso cref="System.Windows.Forms.PrintDialog"/>
		<seealso cref="System.Windows.Forms.PrintPreviewControl"/>
	</doc>
	<doc for="PrintPreviewDialog.ShouldSerializeAutoScaleBaseSize">
		<summary>
			<para>
       AutoScaleBaseSize should never be persisted for PrintPreviewDialogs.
    </para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Dispose"><nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by the <see cref="System.Windows.Forms.PrintPreviewDialog"/>.</para>
		</summary>
		<remarks>
			<para>Call <see cref="System.Windows.Forms.PrintPreviewDialog.Dispose"/> when you are finished using the <see cref="System.Windows.Forms.PrintPreviewDialog"/>. The <see cref="System.Windows.Forms.PrintPreviewDialog.Dispose"/> method leaves the <see cref="System.Windows.Forms.PrintPreviewDialog"/> in an unusable state. After
   calling <see cref="System.Windows.Forms.PrintPreviewDialog.Dispose"/>, you must release all references to
   the <see cref="System.Windows.Forms.PrintPreviewDialog"/>
   so the memory it
   was occupying can be reclaimed by garbage collection.</para>
			<note type="note">
   Always call <see cref="System.Windows.Forms.PrintPreviewDialog.Dispose"/> before you release your last reference to the
   <see cref="System.Windows.Forms.PrintPreviewDialog"/>. Otherwise, the resources the <see cref="System.Windows.Forms.PrintPreviewDialog"/> is using will not be freed until garbage
   collection calls the <see cref="System.Windows.Forms.PrintPreviewDialog"/>
   object's
   destructor.
   </note>
		</remarks>
	</doc><doc for="PrintPreviewDialog.CreateHandle">
		<summary>
			<para> Creates the handle for the form that encapsulates the
   <see cref="System.Windows.Forms.PrintPreviewDialog"/>
   .</para>
		</summary>
		<exception cref="T:System.Drawing.Printing.InvalidPrinterException">The printer settings in <see cref="System.Windows.Forms.PrintPreviewDialog.Document"/> are not valid.</exception>
		<remarks>
			<para>For more information on <see cref="System.Windows.Forms.PrintPreviewDialog.CreateHandle" qualify="true"/> see the <see cref="System.Windows.Forms.Control.CreateHandle" qualify="true"/> 
method.</para>
		</remarks>
		<seealso cref="Control.CreateHandle"/>
	</doc><doc for="PrintPreviewDialog.ShouldSerializeText">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.Control.Text"/>
property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the text property should be persisted; otherwise,
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.PrintPreviewDialog"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.PrintPreviewDialog"/>.</para>
		</remarks>
	</doc><doc for="PrintPreviewControl.AntiAlias">
		<summary>
			<para>Gets or sets a value indicating whether to use anti-aliasing when displaying 
      the print preview.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the print preview uses 
   anti-aliasing; otherwise, <see langword="false"/>. The default is
<see langword="false"/> .</para>
		</value>
		<remarks>
			<para>Anti-aliasing, also known as gray scaling, uses several shades of gray around 
      areas of curves and diagonals in text to give the text a smoother appearance. </para>
			<note type="note">
      While using anti-aliasing makes the
      print preview look better, it can slow down the rendering speed.
      
   </note>
		</remarks>
	</doc><doc for="PrintPreviewDialog.ShouldSerializeMinimumSize">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.Form.MinimumSize"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.Form.MinimumSize"/> property should be persisted; 
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the <see cref="System.Windows.Forms.PrintPreviewDialog"/> or creating your own control incorporating the <see cref="System.Windows.Forms.PrintPreviewDialog"/>.</para>
		</remarks>
	</doc><doc for="PrintPreviewDialog.AntiAlias">
		<summary>
			<para>Gets or sets a value indicating whether to use 
      anti-aliasing when displaying the print preview.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the print preview uses anti-aliasing; otherwise, 
<see langword="false"/>. The default is <see langword="false"/>. </para>
		</value>
	</doc><doc for="PrintPreviewDialog.UseAntiAlias">
		<summary>
			<para>Gets or sets a value indicating whether printing uses the 
      anti-aliasing features of the operating system.</para>
		</summary>
		<value>
			<para><see langword="true"/> if anti-aliasing is used; otherwise, 
<see langword="false"/>. </para>
		</value>
		<remarks>
			<para>Anti-aliasing removes jagged lines when fonts are rendered.</para>
		</remarks>
	</doc><doc for="PrintPreviewDialog.PrintPreviewDialog">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.PrintPreviewDialog"/> class.</para>
		</summary>
		<remarks>
			<para>When you create an instance of <see cref="System.Windows.Forms.PrintPreviewDialog"/>, the <see cref="System.Windows.Forms.PrintPreviewDialog.Document"/> property is initialized to
<see langword="null"/> . You can
 change the value for this property at run time.</para>
		</remarks>
		<seealso cref="System.Drawing.Printing.PrintDocument"/>
		<seealso cref="System.Windows.Forms.PrintPreviewControl"/>
	</doc><doc for="PrintPreviewDialog.AutoScale">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the form adjusts its size to fit the
      height of the font used on the form and scales its controls.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the form will automatically scale itself and its
   controls based on the current font assigned to the form; otherwise,
<see langword="false"/>. The default is <see langword="true"/>. </para>
		</value>
		<remarks>
			<para>You can use this property to allow your form and its controls to
      automatically adjust based on changes in the font. This can be useful in
      applications where the font might increase or decrease based on the language
      specified for use by Windows. </para>
			<para>To obtain the size the form will auto scale to, use the <see cref="System.Windows.Forms.Form.AutoScaleBaseSize"/> property. If you want to determine the
   size the form will auto scale to based on a specific font, use the <see cref="System.Windows.Forms.Form.GetAutoScaleSize"/> method. </para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.ControlBox"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether a control box is
      displayed in the caption bar of the form.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the form displays a control box in the upper left corner of
   the form; otherwise, <see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.PrintPreviewDialog.ControlBox"/> property is set to
<see langword="true"/>, the control box is displayed in the upper-left corner of 
   the caption bar. The control box is where the user can click to access the
   system menu. </para>
			<note type="note">
   If your form does not display a
   control box, the form is not able to close using the ALT+F4 keyboard
   combination.
</note>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.FormBorderStyle"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the border style of the form.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.FormBorderStyle"/> that represents the style of border to
   display for the form. The default is <see cref="System.Windows.Forms.FormBorderStyle.Sizable" qualify="true"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
		<remarks>
			<para>The border style of the form determines how the outer
      edge of the form appears. In addition to changing the border display for a form,
      certain border styles prevent the form from being sized. For example,
      the <see cref="System.Windows.Forms.FormBorderStyle.FixedDialog" qualify="true"/> border style changes the
      border of the form to that of a dialog box and prevents the form from being
      resized. The border style can also affect the size or availability of the
      caption bar section of a form.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.HelpButton"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether a help button
      should be displayed in the caption box of the form.</para>
		</summary>
		<value>
			<para><see langword="true"/> to display a help button in the form's caption bar; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>When this property is set to <see langword="true"/>, a small button with a
   question mark appears in the caption bar to the left of the close button. You
   can use this button to display help for your application. You can create an
   event handler for the <see cref="System.Windows.Forms.Control.HelpRequested"/> event of the <see cref="System.Windows.Forms.Control"/>
   class to display help information to the user when the help button of the form
   is clicked. </para>
			<para>The value of the <see cref="System.Windows.Forms.PrintPreviewDialog.HelpButton"/> property is ignored if
the maximize or minimize boxes are shown. </para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.Icon"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the icon for the form.</para>
		</summary>
		<value>
			<para>An <see cref="System.Drawing.Icon"/> that represents the icon for the form.</para>
		</value>
		<remarks>
			<para>A form's icon designates the picture that represents the form in the taskbar
      as well as the icon that is displayed for the control box of the form.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.IsMdiContainer"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the form is a
      container for multiple document interface (MDI) child forms.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the form is a container for MDI child forms; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>This property changes the display and behavior of the form to an MDI parent
      form. When this property is set to <see langword="true"/>, the form displays a sunken
      client area with a raised border. All MDI child forms assigned to the parent
      form are displayed within its client area.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.KeyPreview">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the form will
      receive key events before the event is passed to the control that has focus.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the form will receive all key events; <see langword="false"/> if the
   currently selected control on the form receives key events. The default is
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>When this property is set to <see langword="true"/> , the form will receive
   all <see cref="System.Windows.Forms.Control.KeyPress"/>, <see cref="System.Windows.Forms.Control.KeyDown"/>, and <see cref="System.Windows.Forms.Control.KeyUp"/>
   
   events. After the
   form's event handlers have completed processing the keystroke, the keystroke is then
   assigned to the control with focus.</para>
			<para> You can use this property to process all keystrokes in your
   application and either handle the keystroke or call the appropriate control to handle
   the keystroke. For example, when an application uses function keys, you might want to process
   the keystrokes at the form level rather than writing code for each
   control that might receive keystroke events.</para>
			<note type="note">
   If a form has no visible or enabled
   controls, it automatically receives all keyboard events.
   
</note>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.MaximumSize">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the maximum size the form can be resized to.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Size"/> that represents the maximum size for the
   form.</para>
		</value>
		<exception cref="T:System.ArgumentOutOfRangeException">The values of the height or width within the <see cref="System.Drawing.Size"/> are less than 0.</exception>
		<remarks>
			<para>This property enables you to limit the size of a form to
      a specified maximum size. You can use this feature when displaying multiple
      windows at the same time, to ensure that a single window does not cause other
      windows to be hidden.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.MaximizeBox"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the maximize
      button is displayed in the caption bar of the form.</para>
		</summary>
		<value>
			<para><see langword="true"/> to display a maximize button for the form; otherwise,
<see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<example>
			<para>A maximize button enables users to enlarge a window to full-screen size. To
      display a maximize button, you must also set the form's <see cref="System.Windows.Forms.PrintPreviewDialog.FormBorderStyle"/> property to either <see cref="System.Windows.Forms.FormBorderStyle.FixedSingle" qualify="true"/>, <see cref="System.Windows.Forms.FormBorderStyle.Sizable" qualify="true"/>, <see cref="System.Windows.Forms.FormBorderStyle.Fixed3D" qualify="true"/>, or <see cref="System.Windows.Forms.FormBorderStyle.FixedDialog"/>
      
      .
      </para>
			<para>
      A maximize button automatically becomes a restore button when a window is
      maximized. Minimizing or restoring a window automatically changes the restore
      button back to a maximize button.
      </para>
			<note type="note">
      Maximizing a form at run time generates
      a <see cref="System.Windows.Forms.Control.Resize"/> event. The <see cref="System.Windows.Forms.PrintPreviewDialog.WindowState"/> property reflects the current state of the
      window. If you set the <see cref="System.Windows.Forms.PrintPreviewDialog.WindowState"/> property to <see cref="System.Windows.Forms.FormWindowState.Maximized"/>, the form is maximized independently of
      whatever settings are in effect for the <see cref="System.Windows.Forms.PrintPreviewDialog.MaximizeBox"/> and <see cref="System.Windows.Forms.PrintPreviewDialog.FormBorderStyle"/>
      
      
      properties
      
      </note>
		</example>
	</doc>
	<doc for="PrintPreviewDialog.Menu"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.MainMenu"/> that is displayed in the form.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.MainMenu"/> that represents the menu to display in the form.</para>
		</value>
		<remarks>
			<para>You can use this property to switch between complete
      menu sets at run time. For example, you can define one <see cref="System.Windows.Forms.MainMenu"/>
      to be displayed when your multiple document interface (MDI) form has no active
      MDI child forms and another <see cref="System.Windows.Forms.MainMenu"/> to display when a child
      window is displayed. You can also use a different <see cref="System.Windows.Forms.MainMenu"/>
      when specific conditions exist in your application that require displaying a
      different menu set.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.MinimumSize">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets the minimum size the form can be resized to.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Size"/> that represents the minimum size for the
   form.</para>
		</value>
		<exception cref="T:System.ArgumentOutOfRangeException">The values of the height or width within the <see cref="System.Drawing.Size"/> are less than 0.</exception>
		<remarks>
			<para>This property enables you to limit the size of a form to
      a specified minimum size. You can use this feature to prevent a user from sizing
      a window to an undesirable size.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.Size"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the size of the form.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Size"/> that represents the size of the form.</para>
		</value>
		<remarks>
			<para>This property allows you to set both the height and
      width of the form at the same time instead of setting the <see cref="System.Windows.Forms.Control.Height"/> and <see cref="System.Windows.Forms.Control.Width"/> properties individually. If you want to
      set the size and location of a form, you can use the <see cref="System.Windows.Forms.Form.DesktopBounds"/> property to size and locate the form based
      on desktop coordinates or use the <see cref="System.Windows.Forms.Control.Bounds"/> property of
      the <see cref="System.Windows.Forms.Control"/> class to set the size and location of the
      form based on screen coordinates.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.StartPosition">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the starting position of the form at run time.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.FormStartPosition"/> that represents the
   starting position of the form.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
		<remarks>
			<para>This property enables you to set the starting position
      of the form when it is displayed at run time. The form can be displayed manually
      or in the default location specified by Windows. You can also position the form
      to display in the center of the screen or in the center of its parent form for
      forms such as multiple document interface (MDI) child forms.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.TopMost"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the form should be displayed as the
      top-most form of your application.</para>
		</summary>
		<value>
			<para><see langword="true"/> to display the form as a top-most form; otherwise, <see langword="false"/>.
   The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>A top-most form is a form that overlaps all the other forms even if it is not
      the active or foreground form. Top-most forms are always displayed at the
      highest point in the Z-order of an application. You can use this method to
      create a form that is always displayed in your application, such as a Find and
      Replace tool window.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.TransparencyKey">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the color that will represent transparent
      areas of the form.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that represents the color to display transparently on the form.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.Form.TransparencyKey"/> property is assigned a <see cref="System.Drawing.Color"/>, the
   areas of the form that have the same <see cref="System.Windows.Forms.Control.BackColor"/> will be displayed transparently.
   Any mouse actions, such as the click of the mouse,
   that are performed on the transparent areas of the form will be transferred
   to the windows below the transparent area. For example, if the client region of
   a form is made transparent, clicking the mouse on that area will send the
   event notification of the click to any window that is below it. If the color
   assigned to the <see cref="System.Windows.Forms.Form.TransparencyKey"/> property is the same as any controls on the
   form, they also will be displayed transparently. For example, if you have
   a <see cref="System.Windows.Forms.Button"/> control on a form that has
   its <see cref="System.Windows.Forms.Form.TransparencyKey"/> property set to
<see langword="SystemColors.Control"/>, the control will be displayed
   transparently unless the <see cref="System.Windows.Forms.Control.BackColor"/> property of the <see cref="System.Windows.Forms.Button"/> control
   is changed to a different color.</para>
		</remarks>
		<platnote platform="Win2K, Win2KPro, Win2KSvr, Win2KADC">Transparent windows and regions are only supported under the Windows 2000 operating system.
</platnote>
	</doc>
	<doc for="PrintPreviewDialog.WindowState">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the form's window state.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.FormWindowState"/> that represents the window state of the
   form. The default is <see cref="System.Windows.Forms.FormWindowState.Normal" qualify="true"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value specified is outside the range of valid values.</exception>
		<remarks>
			<para>Before a form is displayed, the <see cref="System.Windows.Forms.Form.WindowState"/> property is always set to
<see langword="FormWindowState.Normal"/>, regardless of its initial setting. This
   is reflected in the <see cref="System.Windows.Forms.Control.Height"/>, <see cref="System.Windows.Forms.Control.Left"/>, <see cref="System.Windows.Forms.Control.Top"/>,
   and <see cref="System.Windows.Forms.Control.Width"/> property settings. If a form is hidden after it
   has been shown, these properties reflect the previous state until the form is
   shown again, regardless of any changes made to the <see cref="System.Windows.Forms.Form.WindowState"/> property.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.AccessibleRole"><hideinheritance/><nodoc/>
		<summary>
			<para>The accessible role of the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.AccessibleRole"/> values. The default is <see cref="System.Windows.Forms.AccessibleRole.Default" qualify="true"/>.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.AccessibleDescription"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the accessible description of the control.</para>
		</summary>
		<value>
			<para>The accessible description of the control. The default is
      <see langword="null"/>.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.AccessibleName"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the accessible name of the control.</para>
		</summary>
		<value>
			<para>The accessible name of the control. The default <see langword="null"/>.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.CausesValidation"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether entering the
      control causes validation for all controls that require validation.</para>
		</summary>
		<value>
			<para><see langword="true"/> if entering the control causes
   validation to be performed on controls requiring validation; otherwise,
<see langword="false"/>. The default is <see langword="true"/> .</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.DataBindings"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets the data bindings for the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ControlBindingsCollection"/> that contains the <see cref="System.Windows.Forms.Binding"/>
objects for the control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Windows.Forms.PrintPreviewDialog.DataBindings"/> property to access the <see cref="System.Windows.Forms.ControlBindingsCollection"/>. By adding <see cref="System.Windows.Forms.Binding"/> objects to the
   collection, you can data-bind any property of a control to the property of an
   object.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.Enabled"><hideinheritance/><nodoc/>
		<summary>
			<para>Get or sets a value indicating whether the control is enabled.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the control is enabled; otherwise, <see langword="false"/>. The default
   is <see langword="true"/>.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.Location"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the coordinates of the upper-left corner of
      the control relative to the upper-left corner of its container.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Point"/> that represents the upper-left corner of the
   control relative to the upper-left corner of its container.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.Tag">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the object that contains data about the control.</para>
		</summary>
		<value>
			<para>An object that contains data about the control. The
      default <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Retrieves or assigns the data currently associated with 
      the tree node. Any object-derived type can be assigned to this property. If
      this property is being set through the Windows Forms designer, only text can be
      assigned.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.ImeMode"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the Input Method Editor(IME) mode supported
      by this control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ImeMode"/> values. The default is <see cref="System.Windows.Forms.ImeMode.Inherit" qualify="true"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Windows.Forms.ImeMode"/> enumeration values.</exception>
	</doc>
	<doc for="PrintPreviewDialog.AutoScrollMargin"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the size of the auto-scroll margin.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Size"/> object that represents the height and width of
   the auto-scroll margin in pixels.</para>
		</value>
		<remarks>
			<para>The auto-scroll-margin is used to determine
      the distance from the edges of the scrollable control. If the distance from the
      edge of a child control to parent-scrollable control is less than the value
      assigned to this property, the appropriate scroll bar is displayed.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.AutoScrollMinSize"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the minimum size of the auto-scroll.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Size"/> object that represents the minimum height and
   width of the scrollbars in pixels.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.PrintPreviewDialog.AutoScrollMinSize"/> property is used to manage the screen size
   allocated to the automatic scroll bars.</para>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.Visible"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the control is visible.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the control is visible; otherwise, <see langword="false"/>. The default
   is <see langword="true"/>.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.TabStop"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the user can
      give the focus to this control using the TAB key.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the user can give the focus to this control using the TAB key;
   otherwise, <see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
	</doc>
	<doc for="PrintPreviewDialog.Document">
		<summary>
			<para> Gets or sets the document to preview.
      </para>
		</summary>
		<value>
			<para> The <see cref="System.Drawing.Printing.PrintDocument"/> representing the document to preview.
   </para>
		</value>
		<remarks>
			<para> This property is equivalent to
   <see cref="System.Windows.Forms.PrintPreviewControl.Document" qualify="true"/>.
      </para>
		</remarks>
		<seealso cref="System.Drawing.Printing.PrintDocument"/>
	</doc>
	<doc for="PrintPreviewDialog.MinimizeBox"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the minimize
      button is displayed in the caption bar of the form.</para>
		</summary>
		<value>
			<para><see langword="true"/> to display a minimize button for the form; otherwise,
<see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>A minimize button enables users to minimize a window to an icon. To display a
      minimize button, you must also set the form's FormBorderStyle property to either
      <see cref="System.Windows.Forms.FormBorderStyle.FixedSingle"/>, <see cref="System.Windows.Forms.FormBorderStyle.Sizable"/>, <see cref="System.Windows.Forms.FormBorderStyle.Fixed3D"/>, or <see cref="System.Windows.Forms.FormBorderStyle.FixedDialog"/>. </para>
			<note type="note">
      Minimizing a form at run time
      generates a <see cref="System.Windows.Forms.Control.Resize"/> event. The <see cref="System.Windows.Forms.PrintPreviewDialog.WindowState"/> property reflects the current state of the
      window. If you set the <see cref="System.Windows.Forms.PrintPreviewDialog.WindowState"/> property to <see cref="System.Windows.Forms.FormWindowState.Minimized" qualify="true"/>, the form is minimized independently of
      whatever settings are in effect for the <see cref="System.Windows.Forms.PrintPreviewDialog.MinimizeBox"/> and <see cref="System.Windows.Forms.PrintPreviewDialog.FormBorderStyle"/> properties.
      
      </note>
		</remarks>
	</doc>
	<doc for="PrintPreviewDialog.ShowInTaskbar"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets a value indicating whether the form is
      displayed in the Windows taskbar.</para>
		</summary>
		<value>
			<para><see langword="true"/> to display the form in the Windows taskbar at run time;
   otherwise, <see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If a form is parented within another form, the parented form is not displayed
      in the Windows taskbar.</para>
   You can use this property to prevent users from selecting your form through
   the Windows taskbar. For example, if you display a Find and Replace tool window
   in your application, you might want to prevent that window from being selected
   through the Windows taskbar since you would need both the application's main
   window and the Find and Replace tool window displayed in order to process
   searches appropriately.
</remarks>
	</doc>
	<doc for="PrintPreviewDialog.AcceptButton"><hideinheritance/><nodoc/>
		<summary>
			<para>Gets or sets the button on the form that is clicked when
      the user presses the ENTER key.</para>
		</summary>
		<value>
			<para>An <see cref="System.Windows.Forms.IButtonControl"/> that represents the button to use as the
   accept button for the form.</para>
		</value>
		<remarks>
			<para> This property allows you to designate a default action
      that occurs when the user presses the ENTER key in your application. The button
      assigned to this property must be an <see cref="System.Windows.Forms.IButtonControl"/> that is on the current
      form or located within a container on the current form.</para>
			<para>You can use this property, for example, to allow the user to quickly
      navigate a simple form by allowing them to simply press the ENTER key when they
      are finished instead of manually clicking the accept button with their mouse.</para>
			<para> The accept button might not be activated if the currently
      selected control on the form intercepts the ENTER key and processes it. For
      example, a multiline text box control allows the ENTER key to be pressed when it
      is selected to insert a new line character in the control.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Form.AcceptButton"/>
	</doc>
	<doc for="PrintPreviewDialog.AutoScroll"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.BackColor"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.BackColorChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.CancelButton"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.MaximumSizeChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.MinimumSizeChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.SizeChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.CausesValidationChanged"><hideinheritance/><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.EnabledChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.LocationChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.AllowDrop"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Cursor"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.CursorChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.BackgroundImage"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.BackgroundImageChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.ImeModeChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Anchor"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.VisibleChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.ForeColor"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.ForeColorChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.RightToLeft"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.RightToLeftChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.TabStopChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Text"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.TextChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Dock"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.DockChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Font"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.FontChanged"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.ContextMenu"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.ContextMenuChanged"><hideinheritance/><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.DockPadding"><nodoc/><hideinheritance/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.AutoScaleBaseSize"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>PrintPreviewDialog does not support AutoScaleBaseSize.</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.Opacity"><nodoc/><hideinheritance/>
		<summary>
			<para>       Opacity does not apply to PrintPreviewDialogs.
      </para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.SizeGripStyle"><hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.OnClosing"><nodoc/><hideinheritance/>
		<summary>
			<para>       Forces the preview to be regenerated every time the dialog comes up
      </para>
		</summary>
	</doc>
	<doc for="PrintPreviewDialog.PrintPreviewControl">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para> Gets a value indicating the <see cref="System.Windows.Forms.PrintPreviewControl"/>
contained in this form.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.PrintPreviewControl"/> contained in this form.</para>
		</value>
		<seealso cref="System.Windows.Forms.PrintPreviewControl"/>
	</doc>
</docs>
