<docs>
	<doc for="PictureBox.borderStyle">
		<summary>
     The type of border this control will have.
 </summary>
	</doc>
	<doc for="PictureBox.image">
		<summary>
     The image being displayed.
 </summary>
	</doc>
	<doc for="PictureBox.sizeMode">
		<summary>
     Controls how the image is placed within our bounds, or how we are
     sized to fit said image.
 </summary>
	</doc>
	<doc for="PictureBox.requestedWidth">
		<summary>
     Used by the autoSizing code.
 </summary>
	</doc>
	<doc for="PictureBox.PictureBox">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.PictureBox"/> class. </para>
		</summary>
		<remarks>
			<para>The following table shows initial property values for an instance of
    <see cref="System.Windows.Forms.PictureBox"/>. </para>
			<list type="table">
				<listheader>
					<term>Item</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Windows.Forms.PictureBox.Image"/>
					</term>
					<description>
						<see langword="null"/>
					</description>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.PictureBox.SizeMode"/>
					</term>
					<description>
						<see langword="PictureBoxSizeMode.Normal"/>
					</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Windows.Forms.PictureBoxSizeMode"/>
	</doc>
	<doc for="PictureBox.CreateParams">
		<summary>
			<para>Returns the parameters needed to create the handle. Inheriting classes
       can override this to provide extra functionality. They should not,
       however, forget to call base.getCreateParams() first to get the struct
       filled up with the basic info.</para>
		</summary>
	</doc>
	<doc for="PictureBox.AdjustSize">
		<summary>
		If the PictureBox has the SizeMode property set to AutoSize, this makes sure that the picturebox is large enough to hold the image.
		</summary>
	</doc>
	<doc for="PictureBox.Dispose">
		<summary>
		     Removes hooks from the parent, and then calls the base class to perform all other cleanup
		</summary>
	</doc>
	<doc for="PictureBox.GetPreferredSize">
		<summary>
     Returns the preferred size of this control, were it supposed to fit
     the current image perfectly.
 </summary>
	</doc>
	<doc for="PictureBox.OnPaintBackground">
		<summary>
     Overridden onPaint to make sure that the image is painted correctly.
 </summary>
	</doc>
	<doc for="PictureBox.OnPaint">
		<summary>
     Overridden onPaint to make sure that the image is painted correctly.
 </summary>
	</doc>
	<doc for="PictureBox.OnResize">
		<summary>
     OnResize override to invalidate entire control in Stetch mode
 </summary>
	</doc>
	<doc for="PictureBox.SetBoundsCore">
		<summary>
     Overrides Control.setBoundsCore to enforce autoSize.
 </summary>
	</doc>
	<doc for="PictureBox.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="PictureBox.SizeModeChanged">
		<summary>
			<para>Occurs when <see cref="System.Windows.Forms.PictureBox.SizeMode"/> changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="PictureBox.OnVisibleChanged">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.OnParentChanged">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.OnSizeModeChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.PictureBox.SizeModeChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.PictureBox.OnSizeModeChanged"/> method also allows derived 
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.PictureBox.OnSizeModeChanged"/> in a derived class, be sure to 
   call the base class's <see cref="System.Windows.Forms.PictureBox.OnSizeModeChanged"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="PictureBox.SizeMode">
		<summary>
			<para>Indicates how the image is displayed.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.PictureBoxSizeMode"/> values. The default is <see langword="Normal"/>.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="System.Windows.Forms.PictureBoxSizeMode"/> values.</exception>
		<remarks>
			<para>Valid values for this property are taken from the <see cref="System.Windows.Forms.PictureBoxSizeMode"/> enumeration.
   By default,
   in <see langword="PictureBoxSizeMode.Normal"/> mode, the <see cref="System.Drawing.Image"/> is placed in the upper left corner of
   the <see cref="System.Windows.Forms.PictureBox"/> , and any part of the image too big for
   the <see cref="System.Windows.Forms.PictureBox"/> is
   clipped. Using the <see langword="PictureBoxSizeMode.StretchImage"/> value causes the image to stretch to fit the
<see cref="System.Windows.Forms.PictureBox"/>
. </para>
			<para> Using the
<see langword="PictureBoxSizeMode.AutoSize"/> value causes the control to resize to
   always fit the image. Using the <see langword="PictureBoxSizeMode.CenterImage"/> value causes the image to be centered in the client
   area. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.PictureBox.Image"/>
		<seealso cref="System.Windows.Forms.PictureBoxSizeMode"/>
	</doc>
	<doc for="PictureBox.OnEnabledChanged">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.DefaultSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.BorderStyle">
		<summary>
			<para> Indicates the
 border style for the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BorderStyle"/> enumeration values. The default is
<see langword="None"/> .</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="System.Windows.Forms.BorderStyle"/> values.</exception>
		<remarks>
			<para>You can specify this property at design time or run time.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.BorderStyle"/>
	</doc><doc for="PictureBox">
		<summary>
			<para> Represents a Windows picture box control for
      displaying an image.</para>
		</summary>
		<remarks>
			<para>Typically the <see cref="System.Windows.Forms.PictureBox"/> is used to display graphics from a
   bitmap, metafile, icon, JPEG, GIF or PNG file.</para>
			<para> Set the <see cref="System.Windows.Forms.PictureBox.Image"/> property to the <see cref="System.Drawing.Image"/>
you want to display, either at design time or at run time.
Clipping and positioning of the image in the display area is controlled by
the <see cref="System.Windows.Forms.PictureBox.SizeMode"/> property which is
set to values in the <see cref="System.Windows.Forms.PictureBoxSizeMode"/> enumeration.
You can change the size of the display area at run time with
the <see cref="System.Windows.Forms.Control.ClientSize"/>
property.</para>
			<para>The <see cref="System.Windows.Forms.PictureBox"/> control is displayed by default without
any borders. You can provide a standard or three-dimensional border using
the <see cref="System.Windows.Forms.PictureBox.BorderStyle"/> property
to
distinguish the picture box from the rest of the form,
even if it contains no image.</para>
		</remarks>
		<example>
			<para> The following example illustrates how you can set an
      image and resize the display area of the picture box. This example assumes
      that <c>ShowMyImage</c> is
   called from within an existing form, and that the <see cref="Drawing"/> namespace has been added
   to the source code for your form.</para>
			<codelink SampleID="Classic PictureBox Example" SnippetID="1"/>
		</example>
	</doc><doc for="PictureBox.DefaultImeMode">
		<summary>
			<para> Gets a value indicating the mode for Input Method
      Editor (IME) for the <see cref="System.Windows.Forms.PictureBox"/> .</para>
		</summary>
		<value>
			<para>Always <see cref="System.Windows.Forms.ImeMode.Disable" qualify="true"/>.</para>
		</value>
	</doc><doc for="PictureBox.Image">
		<summary>
			<para>Gets or sets the image that the <see cref="System.Windows.Forms.PictureBox"/> displays.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Image"/> object to
   display.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.PictureBox.Image"/> property is set to the <see cref="System.Drawing.Image"/>
to display. You can do this either at design time or at run time. </para>
		</remarks>
		<seealso cref="System.Windows.Forms.PictureBox.SizeMode"/>
	</doc><doc for="PictureBox.ImeModeChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.AllowDrop">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.CausesValidation">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.CausesValidationChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.ForeColor">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.ForeColorChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.Font">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.FontChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.ImeMode">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>Gets or sets the Input Method Editor(IME) mode supported
      by this control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ImeMode"/> values.</para>
		</value>
	</doc>
	<doc for="PictureBox.RightToLeft">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.RightToLeftChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.TabStop">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.TabStopChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.TabIndex">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.TabIndexChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.Text">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.TextChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.Enter">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="PictureBox.KeyUp">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.KeyDown">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.KeyPress">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="PictureBox.Leave">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
</docs>
