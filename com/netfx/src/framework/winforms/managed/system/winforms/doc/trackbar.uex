<docs>
	<doc for="TrackBar.CreateParams">
		<summary>
     This is called when creating a window.  Inheriting classes can ovveride
     this to add extra functionality, but should not forget to first call
     base.getCreateParams() to make sure the control continues to work
     correctly.
 </summary>
		<returns>
     a CreateParams object with the information for creating
     this Control.
 </returns>
	</doc>
	<doc for="TrackBar.PreferredDimension">
		<summary>
     Little private routine that helps with auto-sizing.
 </summary>
	</doc>
	<doc for="TrackBar.AdjustSize">
		<summary>
     Enforces autoSizing
 </summary>
	</doc>
	<doc for="TrackBar.CreateHandle">
		<summary>
		</summary>
	</doc>
	<doc for="TrackBar.OnHandleCreated">
		<summary>
		</summary>
	</doc>
	<doc for="TrackBar.OnValueChanged">
		<summary>
     Actually fires the "valueChanged" event.
 </summary>
	</doc>
	<doc for="TrackBar.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="TrackBar.WndProc">
		<summary>
     The button's window procedure.  Inheriting classes can override this
     to add extra functionality, but should not forget to call
     base.wndProc(m); to ensure the button continues to function properly.
 </summary>
		<param name="m">
     A Windows Message Object.
 </param>
	</doc>
	<doc for="TrackBar.DefaultSize"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TrackBar.OnBackColorChanged"><nodoc/>
		<summary>
   This method is called by the control when any property changes. Inheriting
   controls can overide this method to get property change notification on
   basic properties. Inherting controls must call base.propertyChanged.
   </summary>
		<param name="e">
		</param>
	</doc><doc for="TrackBar.IsInputKey"><nodoc/>
		<summary>
			<para>Handling special input keys, such as pgup, pgdown, home, end, etc...</para>
		</summary>
		<param name="keyData"></param>
	</doc><doc for="TrackBar.SetBoundsCore"><nodoc/>
		<summary>
   Overrides Control.setBoundsCore to enforce autoSize.
   </summary>
	</doc><doc for="TrackBar.BeginInit">
		<summary>
			<para>Begins the initialization of a <see cref="System.Windows.Forms.TrackBar"/> that is used on a form or
 used by another component. The initialization occurs at run time.</para>
		</summary>
		<remarks>
			<para> The Visual Studio.NET design environment uses this
 method to start the initialization of a component that is used on a form or used
 by another component. The <see cref="System.Windows.Forms.TrackBar.EndInit"/> method ends the
 initialization. Using <see cref="System.Windows.Forms.TrackBar.BeginInit"/> and <see cref="System.Windows.Forms.TrackBar.EndInit"/> methods prevents the control from being used
 before it is fully initialized.</para>
		</remarks>
		<example>
			<para>The following example shows using the <see cref="System.Windows.Forms.TrackBar.BeginInit"/> and <see cref="System.Windows.Forms.TrackBar.EndInit"/> methods to ensure that the track bars in 
 the example are not used before they are fully initialized. The example
 assumes a <see cref="System.Windows.Forms.Form"/> with three track bars placed on it. </para>
			<code>
[SampleID='TrackBar' SnippetID='4']
--------- CODE NOT FOUND IN DATABASE ---------
</code>
		</example>
		<seealso cref="System.Windows.Forms.TrackBar.EndInit"/>
	</doc><doc for="TrackBar.EndInit">
		<summary>
			<para>Ends the initialization of a <see cref="System.Windows.Forms.TrackBar"/> that is used on a form or
 used by another component. The initialization occurs at run time.</para>
		</summary>
		<remarks>
			<para> The Visual Studio.NET design environment uses this
 method to end the initialization of a component that is used on a form or used
 by another component. The <see cref="System.Windows.Forms.TrackBar.BeginInit"/> method starts the
 initialization. Using the <see cref="System.Windows.Forms.TrackBar.BeginInit"/> and <see cref="System.Windows.Forms.TrackBar.EndInit"/> methods prevents the control from being used
 before it is fully initialized.</para>
		</remarks>
		<example>
			<para>The following example shows using the <see cref="System.Windows.Forms.TrackBar.BeginInit"/> and <see cref="System.Windows.Forms.TrackBar.EndInit"/> methods to ensure that the track bars in 
 the example are not used before they are fully initialized. The example
 assumes a <see cref="System.Windows.Forms.Form"/> with three track bars placed on it.</para>
			<codelink SampleID="TrackBar" SnippetID="4"/>
		</example>
		<seealso cref="System.Windows.Forms.TrackBar.BeginInit"/>
	</doc><doc for="TrackBar.DefaultImeMode">
		<summary>
			<para> Gets a value indicating the mode for the Input Method
 Editor (IME) for the <see cref="System.Windows.Forms.TrackBar"/> .</para>
		</summary>
		<value>
			<para>Always <see cref="System.Windows.Forms.ImeMode.Disable" qualify="true"/> .</para>
		</value>
	</doc><doc for="TrackBar.TickStyle">
		<summary>
			<para> Gets
 or sets a value indicating how to display the tick marks on the
 track bar.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.TickStyle"/> values. The default is
<see cref="System.Windows.Forms.TickStyle.BottomRight" qualify="true"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the valid <see cref="System.Windows.Forms.TickStyle"/> values.</exception>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.TrackBar.TickStyle"/> property to modify the manner
 in which the tick marks are displayed on the track bar.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TickStyle"/>
	</doc><doc for="TrackBar.ValueChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.TrackBar.Value"/> property of a track bar
   changes, either by movement of the slider or by manipulation in code.</para>
		</summary>
		<remarks>
			<para>You can use this event to update other controls when the
      value represented in the track bar changes.</para>
			<para>When you create a <see cref="System.Windows.Forms.TrackBar"/> delegate, you identify the method that
   will handle the event. To associate the event with your event handler, add an
   instance of the delegate to the event. The event handler is called whenever the
   event occurs, unless you remove the delegate. </para>
			<para> For more information about event-handler delegates, see <see topic="cpconEventsDelegates"/>.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc><doc for="TrackBar.OnScroll">
		<summary>
			<para>Raises the <see langword="Scroll"/>
event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.TrackBar.OnScroll"/> event to update other controls as
   the position of the slider changes.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.TrackBar.OnScroll"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.TrackBar.OnScroll"/> in a derived class, be 
   sure to call the <see cref="System.Windows.Forms.TrackBar.OnScroll"/>
   method of the base class so that registered
   delegates receive the event.
</note>
		</remarks>
	</doc><doc for="TrackBar.TrackBar">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.TrackBar"/> class.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Windows.Forms.TrackBar"/> is created with a default
   horizontal orientation and a range of 0 to 10, with a tick mark shown for
   every value.</para>
		</remarks>
	</doc>
	<doc for="TrackBar.AutoSize">
		<summary>
			<para>Gets or sets a value indicating whether the height or width
      of the track bar is being automatically sized.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the track bar is being automatically sized;
   otherwise, <see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>You can set the <see cref="System.Windows.Forms.TrackBar.AutoSize"/> property to <see langword="true"/>
to cause the track bar to adjust either its height or width, depending on
orientation, to ensure that the control uses only the required amount of space.</para>
		</remarks>
	</doc>
	<doc for="TrackBar.ForeColor">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para> Gets the foreground color of the track bar.</para>
		</summary>
		<value>
			<para>Always <see cref="System.Drawing.SystemColors.WindowText" qualify="true"/>.</para>
		</value>
	</doc>
	<doc for="TrackBar.Minimum">
		<summary>
			<para>Gets or sets the lower limit of the range this <see cref="System.Windows.Forms.TrackBar"/> is working with.</para>
		</summary>
		<value>
			<para>The minimum value for the <see cref="System.Windows.Forms.TrackBar"/> . The default
   value is 0.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.TrackBar.SetRange"/> method to set both
   the <see cref="System.Windows.Forms.TrackBar.Maximum"/> and <see cref="System.Windows.Forms.TrackBar.Minimum"/>
   properties at the same time.</para>
		</remarks>
	</doc>
	<doc for="Trackbar.OnMouseWheel"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.SetRange">
		<summary>
			<para>Sets the minimum and maximum values for a <see cref="System.Windows.Forms.TrackBar"/> .</para>
		</summary>
		<param name="minValue">The lower limit of the range of the track bar. </param>
		<param name="maxValue">The upper limit of the range of the track bar. </param>
		<remarks>
			<para> You can use this method to set the entire range for the <see cref="System.Windows.Forms.TrackBar"/> at the same
   time. To set the minimum or maximum values individually, use the <see cref="System.Windows.Forms.TrackBar.Minimum"/> and <see cref="System.Windows.Forms.TrackBar.Maximum"/> properties. If the <paramref name="minValue"/>
   parameter is greater than the <paramref name="maxValue"/> parameter, <paramref name="maxValue"/>
   is set equal to <paramref name="minValue"/> .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.TrackBar.Minimum"/>
		<seealso cref="System.Windows.Forms.TrackBar.Maximum"/>
	</doc>
	<doc for="TrackBar.BackgroundImage">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.BackgroundImageChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.Font">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.FontChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.ForeColorChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.ImeMode">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>Gets or sets the Input Method Editor (IME) mode supported
      by this control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ImeMode"/> values.</para>
		</value>
	</doc>
	<doc for="TrackBar.ImeModeChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.Text">
		<hideinheritance/>
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.TextChanged">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar.Click">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="TrackBar.DoubleClick">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
	</doc>
	<doc for="TrackBar.OnPaint">
		<hideinheritance/>
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TrackBar">
		<summary>
			<para> Represents a standard Windows track bar.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TrackBar"/> is a scrollable control similar to the
<see cref="System.Windows.Forms.ScrollBar"/> control. You can configure ranges through 
   which the value of the <see cref="System.Windows.Forms.TrackBar.Value"/> property of
   a track bar scrolls by setting the <see cref="System.Windows.Forms.TrackBar.Minimum"/> property to specify the lower
   end of the range and the <see cref="System.Windows.Forms.TrackBar.Maximum"/> property to specify the upper
   end of the range. </para>
			<para>The <see cref="System.Windows.Forms.TrackBar.LargeChange"/> property defines the increment to add or
subtract from the <see cref="System.Windows.Forms.TrackBar.Value"/> property when clicks occur on either side
of the slider. The track bar can be displayed horizontally or vertically. </para>
			<para> You can use this control to input
   numeric data obtained through the <see cref="System.Windows.Forms.TrackBar.Value"/>
   property. You can display this numeric data
   in a control or use it in code. </para>
		</remarks>
		<example>
			<para> The following example displays a form containing a
      <see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/>
   control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
   the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.LargeChange">
		<summary>
			<para> Gets or sets a value to be added to or subtracted
      from the <see cref="System.Windows.Forms.TrackBar.Value"/>
      property when the slider is moved a large
      distance.</para>
		</summary>
		<value>
			<para>A numeric value. The default value is 5.</para>
		</value>
		<exception cref="T:System.Exception">The assigned value is less than 0.</exception>
		<remarks>
			<para> When the user presses the PAGE UP or PAGE DOWN key
      or clicks the track bar on either side of the slider, the <see cref="System.Windows.Forms.TrackBar.Value"/> property changes according to the value
      set in the <see cref="System.Windows.Forms.TrackBar.LargeChange"/> property. You might consider setting
      the <see cref="System.Windows.Forms.TrackBar.LargeChange"/> value to a percentage of the <see cref="System.Windows.Forms.Control.Height"/> (for a vertically oriented track bar)
      or <see cref="System.Windows.Forms.Control.Width"/> (for a
      horizontally oriented track bar) values. This keeps the distance your track bar moves proportionate to its
      size.</para>
		</remarks>
		<example>
			<para> The following example displays a form containing a
      <see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/>
   control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
   the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.Maximum">
		<summary>
			<para>Gets or sets the upper limit of the range this <see cref="System.Windows.Forms.TrackBar"/> is working with.</para>
		</summary>
		<value>
			<para>The maximum value for the <see cref="System.Windows.Forms.TrackBar"/> . The default
   value is 10.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.Windows.Forms.TrackBar.SetRange"/> method to set both
   the <see cref="System.Windows.Forms.TrackBar.Maximum"/> and <see cref="System.Windows.Forms.TrackBar.Minimum"/>
   properties at the same time.</para>
		</remarks>
		<example>
			<para> The following example displays a form containing a
      <see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/>
   control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
   the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.Scroll">
		<summary>
			<para>Occurs when either a mouse or keyboard action moves the
      slider.</para>
		</summary>
		<remarks>
			<para>When you create a <see cref="System.Windows.Forms.TrackBar.Scroll"/> delegate, you identify the method
   that will handle the event. To associate the event with your event handler, add
   an instance of the delegate to the event. The event handler is called whenever
   the event occurs, unless you remove the delegate.</para>
			<para> For more information about
   event-handler delegates, see <see topic="cpconEventsDelegates"/>.</para>
		</remarks>
		<example>
			<para>The following example shows how to implement the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event to
   modify information labels on a form, based on the scrolling of the
   slider on a track bar. The example assumes a <see cref="System.Windows.Forms.Form"/> with
   three track bars and three labels placed on it. </para>
			<codelink SampleID="TrackBar" SnippetID="3"/>
			<para> The following example displays a form containing a 
<see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/> 
control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
 the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.SmallChange">
		<summary>
			<para> Gets or sets the value added to or
      subtracted from the <see cref="System.Windows.Forms.TrackBar.Value"/>
      property when the slider is moved a small distance.</para>
		</summary>
		<value>
			<para>A numeric value. The default value is 1.</para>
		</value>
		<exception cref="T:System.Exception">The assigned value is less than 0.</exception>
		<remarks>
			<para> When the user presses one of the arrow
      keys, the <see cref="System.Windows.Forms.TrackBar.Value"/> property changes according to the
      value set in the <see cref="System.Windows.Forms.TrackBar.SmallChange"/> property. </para>
			<para>You might consider setting the value of <see cref="System.Windows.Forms.TrackBar.SmallChange"/> to a
   percentage of the value of
   the <see cref="System.Windows.Forms.Control.Height"/> (for a vertically oriented track bar)
   or <see cref="System.Windows.Forms.Control.Width"/> (for a horizontally oriented track
   bar) properties. This sets the distance your track bar moves proportionate to its size. </para>
		</remarks>
		<example>
			<para> The following example displays a form containing a
      <see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/>
   control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
   the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.TickFrequency">
		<summary>
			<para>Gets or sets a value that specifies the delta
      between ticks drawn on the control.</para>
		</summary>
		<value>
			<para>The numeric value representing the delta between ticks. The default is 1.</para>
		</value>
		<remarks>
			<para>For a <see cref="System.Windows.Forms.TrackBar"/> with a large range of
   values between the <see cref="System.Windows.Forms.TrackBar.Minimum"/> and the <see cref="System.Windows.Forms.TrackBar.Maximum"/> , it might be impractical to draw all the ticks for values on the control. For
   example, if you have a control with a range of 100, passing in a value of five here causes the
   control to draw 20 ticks. In this case, each tick represents five units in the range of
   values.</para>
		</remarks>
		<example>
			<para> The following example displays a form containing a
      <see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/>
   control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
   the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.Value">
		<summary>
			<para> Gets or sets
      a numeric value that represents the current position of the slider on the track bar.</para>
		</summary>
		<value>
			<para>A numeric value that is within the <see cref="System.Windows.Forms.TrackBar.Minimum"/> and <see cref="System.Windows.Forms.TrackBar.Maximum"/> range. The default value is 0.</para>
		</value>
		<exception cref="T:System.ArgumentException"><para>The assigned value is less than the value of <see cref="System.Windows.Forms.TrackBar.Minimum"/> .</para>
			<para>-or-</para>
			<para>The assigned value is greater than the value of <see cref="System.Windows.Forms.TrackBar.Maximum"/> .</para></exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TrackBar.Value"/>
property contains the number that represents the current position of the slider
on the track bar.</para>
		</remarks>
		<example>
			<para> The following example displays a form containing a
      <see cref="System.Windows.Forms.TrackBar"/> control and a <see cref="System.Windows.Forms.TextBox"/>
   control. The example demonstrates setting the <see cref="System.Windows.Forms.TrackBar.Maximum"/>, <see cref="System.Windows.Forms.TrackBar.TickFrequency"/>, <see cref="System.Windows.Forms.TrackBar.LargeChange"/>, and <see cref="System.Windows.Forms.TrackBar.SmallChange"/> properties and handling the <see cref="System.Windows.Forms.TrackBar.Scroll"/> event. The <see cref="System.Windows.Forms.TextBox"/> contents are updated to
   the <see cref="System.Windows.Forms.TrackBar.Value"/> property value when the
<see langword="Scroll"/> event occurs. </para>
			<codelink SampleID="System.Windows.Forms.TrackBar" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TrackBar.Orientation">
		<summary>
			<para> Gets or
      sets a value indicating the horizontal or vertical
      orientation of the track bar.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.Orientation"/> values.</para>
		</value>
		<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Windows.Forms.Orientation"/> values.</exception>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.TrackBar.Orientation"/> property is set to <see cref="System.Windows.Forms.Orientation.Horizontal" qualify="true"/>,
   the slider moves from left to right as
   the <see cref="System.Windows.Forms.TrackBar.Value"/> increases. When the <see cref="System.Windows.Forms.TrackBar.Orientation"/> property is set to <see cref="System.Windows.Forms.Orientation.Vertical" qualify="true"/>, the slider moves
   from bottom to top as the <see cref="System.Windows.Forms.TrackBar.Value"/>
   increases.</para>
		</remarks>
		<example>
			<codelink SampleID="TrackBar" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.Orientation"/>
	</doc>
</docs>
