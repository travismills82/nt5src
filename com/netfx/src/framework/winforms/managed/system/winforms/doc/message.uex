<docs>
	<doc for="Message.HWnd">
		<summary>
			<para>Gets or sets the window handle of the message.</para>
		</summary>
		<value>
			<para>The window handle of the message.</para>
		</value>
	</doc>
	<doc for="Message.Result">
		<summary>
			<para>Specifies the value that is returned to Windows in response to handling the message.</para>
		</summary>
		<value>
			<para>The return value of the message.</para>
		</value>
	</doc>
	<doc for="Message.ToString">
		<summary>
		</summary>
	</doc>
	<doc for="Message.GetHashCode"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Message.Equals">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
		<param name="o"></param>
	</doc><doc for="Message.LParam">
		<summary>
			<para>Specifies the <see cref="System.Windows.Forms.Message.LParam"/> field of the message.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.Message.LParam"/> field of the message.</para>
		</value>
		<remarks>
			<para>The value of this field depends on the message. Use the <see cref="System.Windows.Forms.Message.LParam"/> field 
   to get information that is important for handling the message. <see cref="System.Windows.Forms.Message.LParam"/>
   is
   typically used to store an object if it is needed by the message. Use the
<see cref="System.Windows.Forms.Message.GetLParam"/> method to retrieve and convert information from
   the <see cref="System.Windows.Forms.Message.LParam"/> field into an object.</para>
		</remarks>
	</doc><doc for="Message.GetLParam">
		<summary>
			<para>Gets the <see cref="System.Windows.Forms.Message.LParam"/> value, and converts the value to an object.</para>
		</summary>
		<param name="cls">The type to use to create an instance. This type must be declared as a structure type.</param>
		<returns>
			<para>An <see cref="System.Object"/> that represents an instance of the class
   specified by the <paramref name="cls "/>parameter, with the data from the <see cref="System.Windows.Forms.Message.LParam"/> field of the message.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Windows.Forms.Message.GetLParam"/> method to retrieve
   information from the <see cref="System.Windows.Forms.Message.LParam"/> field of a message and convert it to an object.
   You can use this method to access objects passed in a message.</para>
		</remarks>
	</doc><doc for="Message.Create">
		<summary>
			<para>Creates a new <see cref="System.Windows.Forms.Message"/> structure.</para>
		</summary>
		<param name="hWnd">The window handle that the message is for.</param>
		<param name="msg">The message ID.</param>
		<param name="wparam">The message wparam field.</param>
		<param name="lparam">The message lparam field.</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.Message"/>
structure that represents the message that was created.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Windows.Forms.Message.Create"/> method to create a <see cref="System.Windows.Forms.Message"/> structure
   to wrap a message sent by Windows. </para>
		</remarks>
	</doc>
	<doc for="Message">
		<summary>
			<para> Implements a Windows message.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.Message"/> structure wraps messages that Windows
   sends. You can use this structure to wrap a message and assign it to the window
   procedure to be dispatched. You can also use this structure to get information about a message the system sends to your application or
   controls.</para>
			<para>You cannot create the <see cref="System.Windows.Forms.Message"/> structure directly. To create a
<see cref="System.Windows.Forms.Message"/> structure, use the <see cref="System.Windows.Forms.Message.Create"/>
method.
To make creating <see cref="System.Windows.Forms.Message"/>
structures more efficient, the <see cref="System.Windows.Forms.Message"/> structure
uses its pool of existing <see cref="System.Windows.Forms.Message"/> structures instead of instantiating a new one, if possible. However, if
a <see cref="System.Windows.Forms.Message"/> structure is not available in the pool, a new structure is
instantiated.</para>
		</remarks>
		<example>
			<para>The following example demonstrates overriding the
      <see cref="System.Windows.Forms.Control.WndProc"/> method to handle operating system messages
      identified in the <see cref="System.Windows.Forms.Message"/> structure. The WM_ACTIVATEAPP operating
      system message is handled in this example to know when another application is
      becoming active. Refer to the Platform SDK documentation reference located in
      the MSDN Library to understand the available <see cref="System.Windows.Forms.Message.Msg" qualify="true"/>, <see cref="System.Windows.Forms.Message.LParam" qualify="true"/>, and <see cref="System.Windows.Forms.Message.WParam" qualify="true"/>
      values. Actual constant values can be found in the windows.h header file included in the Platform SDK (Core SDK section) download, which is also available on MSDN.
      </para>
			<codelink SampleID="System.Windows.Forms.Control.WndProc" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Message.Msg">
		<summary>
			<para>Gets or sets the ID number for the message.</para>
		</summary>
		<value>
			<para>The ID number for the message.</para>
		</value>
		<example>
			<para>The following example demonstrates overriding the
      <see cref="System.Windows.Forms.Control.WndProc"/> method to handle operating system messages
      identified in the <see cref="System.Windows.Forms.Message"/> structure. The WM_ACTIVATEAPP operating
      system message is handled in this example to know when another application is
      becoming active. Refer to the Platform SDK documentation reference located in
      the MSDN Library to understand the available <see cref="System.Windows.Forms.Message.Msg" qualify="true"/>, <see cref="System.Windows.Forms.Message.LParam" qualify="true"/>, and <see cref="System.Windows.Forms.Message.WParam" qualify="true"/>
      values. Actual constant values can be found in the windows.h header file included in the Platform SDK (Core SDK section) download, which is also available on MSDN.
      </para>
			<codelink SampleID="System.Windows.Forms.Control.WndProc" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Message.WParam">
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.Message.WParam"/> field of the message.</para>
		</summary>
		<value>
			<para> The <see cref="System.Windows.Forms.Message.WParam"/> field
   of the message.</para>
		</value>
		<remarks>
			<para>The value of this field depends on the message. Use the <see cref="System.Windows.Forms.Message.WParam"/> field
   to
   get information that is important to handling the message. This field is typically
   used to store small pieces of information, such as flags.</para>
		</remarks>
		<example>
			<para>The following example demonstrates overriding the
      <see cref="System.Windows.Forms.Control.WndProc"/> method to handle operating system messages
      identified in the <see cref="System.Windows.Forms.Message"/> structure. The WM_ACTIVATEAPP operating
      system message is handled in this example to know when another application is
      becoming active. Refer to the Platform SDK documentation reference located in
      the MSDN Library to understand the available <see cref="System.Windows.Forms.Message.Msg" qualify="true"/>, <see cref="System.Windows.Forms.Message.LParam" qualify="true"/>, and <see cref="System.Windows.Forms.Message.WParam" qualify="true"/>
      values. Actual constant values can be found in the windows.h header file included in the Platform SDK (Core SDK section) download, which is also available on MSDN.
      </para>
			<codelink SampleID="System.Windows.Forms.Control.WndProc" SnippetID="1"/>
		</example>
	</doc>
</docs>
