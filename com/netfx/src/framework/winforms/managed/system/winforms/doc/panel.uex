<docs>
	<doc for="Panel">
		<summary>
			<para> 
       Represents
       a Windows <see cref="System.Windows.Forms.Panel"/>
       control.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Windows.Forms.Panel"/> is a control that contains other controls. You 
    can use a <see cref="System.Windows.Forms.Panel"/> to group collections of controls such as a
    group of <see cref="System.Windows.Forms.RadioButton"/> controls. As with
    other container controls such as the <see cref="System.Windows.Forms.GroupBox"/> control, if
    the <see cref="System.Windows.Forms.Panel"/> control's <see cref="System.Windows.Forms.Control.Enabled"/> property is set to <see langword="false"/> , the controls
    contained within the <see cref="System.Windows.Forms.Panel"/>
    will also be disabled.</para>
			<para>The <see cref="System.Windows.Forms.Panel"/> 
 control is displayed by default without any borders. You can provide
 a standard or three-dimensional border using the <see cref="System.Windows.Forms.Panel.BorderStyle"/> property to distinguish the area of the
 panel from other areas on the form. Because the <see cref="System.Windows.Forms.Panel"/> control
 derives from the <see cref="System.Windows.Forms.ScrollableControl"/> class, you can use the <see cref="System.Windows.Forms.ScrollableControl.AutoScroll"/> property to enable scroll bars in
 the <see cref="System.Windows.Forms.Panel"/> control. When the <see cref="System.Windows.Forms.ScrollableControl.AutoScroll"/>
 property is set to <see langword="true"/>, any controls located within
 the <see cref="System.Windows.Forms.Panel"/> (but outside of its
 visible region), can be scrolled to with the scroll bars provided.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.Panel"/> control 
    and adds a <see cref="System.Windows.Forms.Label"/> and a <see cref="System.Windows.Forms.TextBox"/> to the <see cref="System.Windows.Forms.Panel"/>.
    The <see cref="System.Windows.Forms.Panel"/> control is displayed with a three-dimensional
    border to distinguish where the <see cref="System.Windows.Forms.Panel"/> control is located in relation to other objects on the form. This example assumes that the
    method defined in this example is called from within an existing form and that
    the <see cref="System.Drawing" qualify="true"/> namespace has been added to the source
    code for the form.</para>
			<codelink SampleID="Classic Panel Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.GroupBox"/>
	</doc>
	<doc for="Panel.Panel">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.Panel"/> class.</para>
		</summary>
	</doc>
	<doc for="Panel.BorderStyle">
		<summary>
			<para> Indicates the
       border style for the control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.BorderStyle"/> values. The default is 
 <see langword="BorderStyle.None"/> .</para>
		</value>
		<remarks>
			<para>By default, the <see cref="System.Windows.Forms.Panel"/> control is displayed without a border. You can 
    use this property to distinguish the boundaries of the <see cref="System.Windows.Forms.Panel"/>
    control from other areas on the form.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.Panel"/> control with a three-dimensional border.</para>
			<codelink SampleID="Classic Panel.BorderStyle Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Panel.CreateParams">
		<internalonly/>
		<summary>
    Returns the parameters needed to create the handle.  Inheriting classes
    can override this to provide extra functionality.  They should not,
    however, forget to call base.getCreateParams() first to get the struct
    filled up with the basic info.
 </summary>
		<seealso cref="System.Windows.Forms.CreateParams"/>
	</doc>
	<doc for="Panel.Text">
		<summary>
		</summary>
	</doc>
	<doc for="Panel.OnResize">
		<internalonly/>
		<summary>
			<para>Fires the event indicating that the panel has been resized.
       Inheriting controls should use this in favour of actually listening to
       the event, but should not forget to call base.onResize() to
       ensure that the event is still fired for external listeners.</para>
		</summary>
		<param name="eventargs">e Event to send</param>
	</doc>
	<doc for="Panel.StringFromBorderStyle">
		<summary>
		</summary>
	</doc>
	<doc for="Panel.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="Panel.DefaultSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Panel.KeyUp">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Panel.KeyDown">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Panel.KeyPress">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Panel.TextChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Panel.TabStop">
		<summary>
			<para>Gets or sets a value indicating whether the user can give the focus to this 
      control using the TAB key.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the user can 
   give the focus to the control using the TAB key; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>When the user presses the TAB key, the input focus is set to the next control 
      in the tab order. Controls with the <see cref="System.Windows.Forms.Control.TabStop"/> property value of
   <see langword="false"/> are not included in the collection of controls in the tab 
      order. The tab order can be manipulated by setting the control's <see cref="System.Windows.Forms.Control.TabIndex"/> property value.</para>
			<note type="note">
      The <see cref="System.Windows.Forms.Panel.TabStop"/> property has no effect on the <see cref="System.Windows.Forms.Panel"/>
      control as it is a container object.
   </note>
		</remarks>
	</doc>
</docs>
