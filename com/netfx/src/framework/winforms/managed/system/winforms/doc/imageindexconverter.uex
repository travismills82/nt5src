<docs>
	<doc for="ImageIndexConverter.GetStandardValues">
		<nodoc/>
		<overload>
			<para>Returns a collection of standard values for the data type
      this type converter is designed for.</para>
		</overload>
		<summary>
			<para> Returns a collection of standard values for
      the data type this type converter is designed for when provided
      with a format context.</para>
		</summary>
		<param name="context">An<see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be<see langword="null"/>. </param>
		<returns>
			<para>A<see cref="System.ComponentModel.TypeConverter.StandardValuesCollection"/>
that holds a standard set of valid values, or a<see langword=" null"/> if the data type does not support a standard
set of values.</para>
		</returns>
		<remarks>
			<para>Returns a collection of index values for the data
      type.</para>
		</remarks>
	</doc><doc for="ImageIndexConverter.ConvertTo">
		<nodoc/>
		<overload>
			<para>Converts the given value object to the specified destination type.</para>
		</overload>
		<summary>
			<para> Converts the specified object to
      the destination type.</para>
		</summary>
		<param name="context">An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <see langword="null"/>. </param>
		<param name=" culture">A <see cref="System.Globalization.CultureInfo"/> object to provide locale information.</param>
		<param name="value">The object to convert.</param>
		<param name="destinationType">The type to convert the object to.</param>
		<returns>
			<para>An <see cref="System.Object"/>
that represents the converted <paramref name="value"/>.</para>
		</returns>
		<exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> is <see langword="null"/>.</exception>
		<remarks>
			<note type="inheritinfo">
      Override this method
      to provide your own coversion requirements.
      
   </note>
			<para>The <paramref name="context"/> parameter can be used to extract addtional information
   about the environment this converter is being invoked from. This may be
<see langword="null"/>, so you should always check for this return value. Also,
   properties on the context object may also return <see langword="null"/>.</para>
		</remarks>
	</doc><doc for="ImageIndexConverter.ConvertFrom">
		<nodoc/>
		<overload>
			<para>Converts the given value to the native type of the converter.</para>
		</overload>
		<summary>
			<para>Converts the specified value object to a 32-bit signed integer object.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name=" culture">A <see cref="System.Globalization.CultureInfo"/> object to provide locale information.</param>
		<param name="value">The <see cref="System.Object"/> to convert.</param>
		<returns>
			<para>An <see cref="System.Object"/>
that represents the converted <paramref name="value"/>.</para>
		</returns>
		<exception cref="T:System.Exception">The conversion could not be performed.</exception>
		<remarks>
			<para>This converter only can convert a 32-bit signed integer object to and from a
      string.</para>
			<para>The <paramref name="context "/>can be used to extract additional information about the
   environment this converter is being invoked from. This may be
<see langword="null"/>, so you should always check. Also, properties on the
   context object may also return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="ImageIndexConverter">
		<summary>
			<para>Provides a type converter to convert data for an image
      index to and from a string. </para>
		</summary>
		<remarks>
			<para>For more information about type converters, see the
   <see cref="System.ComponentModel.TypeConverter"/> base class and
   <see topic="cpconImplementingTypeConverter"/>
   .</para>
			<note type="note">
   Typically, you do not directly create
   an instance of an <see cref="System.Windows.Forms.ImageIndexConverter"/>.
   Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>
   . For more information, see the examples in
   the <see cref="System.ComponentModel.TypeConverter"/> base class.
</note>
		</remarks>
	</doc><doc for="ImageIndexConverter.IncludeNoneAsStandardValue">
		<summary>
			<para>Gets or sets a value indicating whether a 
   <see langword="none"/> or <see langword="null"/> value is valid in 
      the <see cref="System.ComponentModel.TypeConverter.StandardValuesCollection"/>
      collection.</para>
		</summary>
		<value>
			<see langword="true"/> if a 
<see langword="none"/> or <see langword="null"/> value is valid in the standard values 
   collection; otherwise, <see langword="false"/>.
</value>
		<remarks>
			<para>As implemented in this class is always returns 
   <see langword="true"/> .</para>
		</remarks>
	</doc><doc for="ImageIndexConverter.GetStandardValuesSupported">
		<nodoc/>
		<overload>
			<para> Returns whether this object supports a standard set of
      values that can be picked from a list.</para>
		</overload>
		<summary>
			<para>Determines if this object supports a standard set of values
      that can be picked from a list.</para>
		</summary>
		<param name="context">An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be <see langword="null"/>. </param>
		<returns>
			<para>Always returns <see langword="true"/>.</para>
		</returns>
		<remarks>
			<para>As implemented in this class, <see cref="System.Windows.Forms.ImageIndexConverter.GetStandardValuesSupported"/>
always returns <see langword="true"/> since this object
supports a standard set of values that can be picked from a list.</para>
		</remarks>
	</doc>
	<doc for="ImageIndexConverter.GetStandardValuesExclusive">
		<nodoc/>
		<summary>
			<para>Determines if the list of standard values returned from
 GetStandardValues is an exclusive list. If the list
 is exclusive, then no other values are valid, such as
 in an enum data type. If the list is not exclusive,
 then there are other valid values besides the list of
 standard values GetStandardValues provides.</para>
		</summary>
		<param name="context">A formatter context.</param>
		<returns>
			<para>Always returns <see langword="false"/>
.</para>
		</returns>
		<remarks>
			<para>As implemented in this converter, this method always
 returns <see langword="false"/>
 .</para>
		</remarks>
	</doc></docs>
