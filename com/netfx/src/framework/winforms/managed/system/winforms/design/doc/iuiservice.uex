<docs>
	<doc for="IUIService.ShowError">
		<overload>
			<para>Displays the specified error message in a message box.</para>
		</overload>
		<summary>
			<para>Displays the specified error message in a message box.</para>
		</summary>
		<param name="message">The error message to display.</param>
		<remarks>
			<para>Using this method allows the message box display to be properly 
       integrated with the development environment.</para>
		</remarks>
	</doc>
	<doc for="IUIService.Styles">
		<summary>
			<para> Gets the collection of
      styles that are specific to the host's environment.</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.IDictionary"/> containing style settings.</para>
		</value>
		<remarks>
			<para> The dictionary can provide
      information from the host environment. At a
      minimum, this consists of the font that should be used for standard UI text,
      and the color to use for highlighting. These required styles are "DialogFont" and "HighlightColor".</para>
			<para> The values for these styles may be retrieved by using the style as a key
      for the dictionary, accessing the dictionary using the key as an indexer.
      For example: (object implementing IUIService).Styles[(style name string in
      quotes)].</para>
		</remarks>
		<example>
			<para>The following example gets the dialog font from the host
      environment:</para>
			<codelink SampleID="Classic IUIService.Styles Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Font"/>
	</doc>
	<doc for="IUIService.GetDialogOwnerWindow">
		<summary>
			<para>Gets the window that should be used as the owner when showing dialogs.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Windows.Forms.IWin32Window"/> that 
   indicates the window to own any child dialog
   boxes.</para>
		</returns>
		<remarks>
			<para>Some dialog boxes are parented to an owner application and are not visible in
      the task list. This method returns an <see cref="System.Windows.Forms.IWin32Window"/> that indicates the window that should be
      the owner for dialog boxes of this sort that are spawned from an integrated
      development environment.</para>
		</remarks>
	</doc>
	<doc for="IUIService.ShowComponentEditor">
		<summary>
			<para>Attempts to display a <see cref="System.Windows.Forms.Design.ComponentEditorForm"/> for a component.</para>
		</summary>
		<param name="component">The component for which to display a <see cref="System.Windows.Forms.Design.ComponentEditorForm"/> .</param>
		<param name="parent">The <see cref="System.Windows.Forms.IWin32Window"/> to parent any dialogs to.</param>
		<returns>
			<para><see langword="true"/> if the attempt is successful; otherwise,
<see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentException">The component does not support component editors.</exception>
		<remarks>
			<para>A <see cref="System.Windows.Forms.Design.ComponentEditorForm"/> is similar to a
   property page from
   COM.</para>
			<para>If the component does not support component editors, 
   an <see cref="System.ArgumentException"/>
   is thrown. To avoid this, be sure to call <see cref="System.Windows.Forms.Design.IUIService.CanShowComponentEditor"/> first.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Design.IUIService.CanShowComponentEditor"/>
	</doc>
	<doc for="IUIService.ShowError1">
		<summary>
			<para> Displays the specified exception and information
      about the exception in a message box.</para>
		</summary>
		<param name="ex">The <see cref="System.Exception"/> to display.</param>
		<remarks>
			<para>Using this method allows the message box display to be properly integrated
      with the development environment.</para>
		</remarks>
	</doc>
	<doc for="IUIService.SetUIDirty">
		<summary>
			<para>Sets a flag indicating the UI has changed.</para>
		</summary>
		<remarks>
			<para> This method indicates that the UI has been 
      changed and should be refreshed. It is important to indicate the need for a refresh whenever a toolbar
      or menu item's status changes. Most development environments cache the status of
      these elements for speed, and need to know when they need to be updated. This
      method is called, for example, after objects have been selected within designer view to enable
      the cut and copy menu items.</para>
		</remarks>
	</doc>
	<doc for="IUIService">
		<summary>
			<para> Enables interaction with the user
      interface of the development environment object that is hosting the designer.</para>
		</summary>
		<remarks>
			<para><see cref="System.Windows.Forms.Design.IUIService"/> can display error messages, show
   dialog boxes, and get ambient properties of the host, such as the font for
   dialogs and color schemes, through the <see cref="System.Windows.Forms.Design.IUIService.Styles"/>
   
   dictionary property.</para>
		</remarks>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="1"/>
		</example>
	</doc>
	<doc for="IUIService.CanShowComponentEditor">
		<summary>
			<para> Indicates whether the component can display a <see cref="System.Windows.Forms.Design.ComponentEditorForm"/>.</para>
		</summary>
		<param name="component">The component to check for support for displaying a <see cref="System.Windows.Forms.Design.ComponentEditorForm"/>.</param>
		<returns>
			<para><see langword="true"/> if the specified component can display a component editor
   form; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>Component editors can display a component editor
      form that is similar to a property page from COM.</para>
			<para>This method checks to determine whether the specified component has
      a <see cref="System.ComponentModel.ComponentEditor"/>
      that can display a <see cref="System.Windows.Forms.Design.ComponentEditorForm"/>
      .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Design.IUIService.ShowComponentEditor"/>
	</doc>
	<doc for="IUIService.ShowDialog">
		<summary>
			<para>Attempts to display the specified form in a dialog box.</para>
		</summary>
		<param name="form">The <see cref="System.Windows.Forms.Form"/> to display.</param>
		<returns>
			<para>One of the <see cref="System.Windows.Forms.DialogResult"/> values
   indicating the result code returned by the dialog box.</para>
		</returns>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="4"/>
		</example>
		<seealso cref="System.Windows.Forms.DialogResult"/>
	</doc>
	<doc for="IUIService.ShowError2">
		<summary>
			<para> Displays the specified exception and information
      about the exception in a message box.</para>
		</summary>
		<param name="ex">The <see cref="System.Exception"/> to display.</param>
		<param name="message">A message to display that provides information about the exception.</param>
		<remarks>
			<para>Using this method allows the message box display to be properly integrated
      with the development environment.</para>
		</remarks>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="3"/>
		</example>
	</doc>
	<doc for="IUIService.ShowMessage">
		<overload>
			<para>Displays the specified message in a message box.</para>
		</overload>
		<summary>
			<para>Displays the specified message in a message box.</para>
		</summary>
		<param name="message">The message to display</param>
		<remarks>
			<para>This method ensures that the display of the message box is properly integrated
      with the development environment.</para>
		</remarks>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="2"/>
		</example>
	</doc>
	<doc for="IUIService.ShowMessage1">
		<summary>
			<para> Displays the specified message in
      a message box with the specified caption.</para>
		</summary>
		<param name="message">The message to display.</param>
		<param name="caption">The caption for the message box.</param>
		<remarks>
			<para>This method ensures that the display of the message box is properly integrated
      with the development environment.</para>
		</remarks>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="2"/>
		</example>
	</doc>
	<doc for="IUIService.ShowMessage2">
		<summary>
			<para> Displays the specified message in a message box with the specified caption and
      buttons to place on the dialog box.</para>
		</summary>
		<param name="message">The message to display.</param>
		<param name="caption">The caption for the dialog box.</param>
		<param name="buttons">One of the <see cref="System.Windows.Forms.MessageBoxButtons"/> values: <see cref="System.Windows.Forms.MessageBoxButtons.OK"/>, <see cref="System.Windows.Forms.MessageBoxButtons.OKCancel"/>, <see cref="System.Windows.Forms.MessageBoxButtons.YesNo"/>, or <see cref="System.Windows.Forms.MessageBoxButtons.YesNoCancel"/>.</param>
		<returns>
			<para>One of the <see cref="System.Windows.Forms.DialogResult"/> values
   indicating the result code returned by the dialog box.</para>
		</returns>
		<remarks>
			<para>This method ensures that the display of the message box is properly integrated
      with the development environment.</para>
		</remarks>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DialogResult"/>
		<seealso cref="System.Windows.Forms.MessageBox"/>
	</doc>
	<doc for="IUIService.ShowToolWindow">
		<summary>
			<para>Displays the specified tool window.</para>
		</summary>
		<param name="toolWindow">A <see cref="System.Guid"/> identifier for the tool window. This can be a custom <see cref="System.Guid"/> or one of the predefined values from <see cref="System.ComponentModel.Design.StandardToolWindows"/>.</param>
		<returns>
			<para><see langword="true"/> if the tool window was
   successfully shown; <see langword="false"/> if it couldn't
   be shown or found.</para>
		</returns>
		<example>
			<codelink SampleID="IUIServiceExample" SnippetID="5"/>
		</example>
		<seealso cref="System.ComponentModel.Design.StandardToolWindows"/>
	</doc>
</docs>
