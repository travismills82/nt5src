<docs>
	<doc for="CreateParams.ToString"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CreateParams.Parent">
		<summary>
			<para>Gets or sets the control's parent.</para>
		</summary>
		<value>
			<para>An <see cref="System.IntPtr"/> 
that contains the window handle of the control's parent.</para>
		</value>
		<seealso cref="System.Windows.Forms.Control.Handle" qualify="true"/>
	</doc><doc for="CreateParams.X">
		<summary>
			<para> Gets or sets the initial left position of the control.</para>
		</summary>
		<value>
			<para> The numeric value that represents the initial left position of
      the control.</para>
		</value>
		<seealso cref="System.Drawing.Rectangle.X" qualify="true"/>
		<seealso cref="System.Windows.Forms.CreateParams.Y"/>
	</doc><doc for="CreateParams.Y">
		<summary>
			<para>Gets or sets the top position of the initial location of the control.</para>
		</summary>
		<value>
			<para>The numeric value that represents the top position of the initial location of the
      control.</para>
		</value>
		<seealso cref="System.Drawing.Rectangle.Y" qualify="true"/>
		<seealso cref="System.Windows.Forms.CreateParams.X"/>
	</doc><doc for="CreateParams.Param">
		<summary>
			<para>Gets or sets additional parameter information needed to create the control.</para>
		</summary>
		<value>
			<para>The <see cref="System.Object"/> that holds additional parameter information needed to create the
   control.</para>
		</value>
		<remarks>
			<para> If you are creating a multiple document
      interface (MDI) client window, the <see cref="System.Windows.Forms.CreateParams.Param"/>
      property must reference a <see langword="CLIENTCREATESTRUCT"/>
      structure.</para>
			<para>For more information about creating control parameters, see the
   <see langword="CreateWindow"/> and <see langword="CreateWindowEx"/> functions and the
   <see langword="CLIENTCREATESTRUCT"/> structure documentation in the Windows
      Platform SDK reference located in the MSDN Library.</para>
		</remarks>
	</doc><doc for="CreateParams.Caption">
		<summary>
			<para> Gets or sets the control's initial text.</para>
		</summary>
		<value>
			<para>The control's initial text.</para>
		</value>
		<seealso cref="System.Windows.Forms.Control.Text"/>
	</doc>
	<doc for="CreateParams.Width">
		<summary>
			<para> Gets or sets the initial width of the control.</para>
		</summary>
		<value>
			<para> The numeric value that represents the initial width of the
 control.</para>
		</value>
		<seealso cref="System.Windows.Forms.Control.Width" qualify="true"/>
		<seealso cref="System.Windows.Forms.CreateParams.Height"/>
	</doc>
	<doc for="CreateParams.Height">
		<summary>
			<para> Gets or sets the initial height of the control.</para>
		</summary>
		<value>
			<para> The numeric value that represents the initial height of the
 control.</para>
		</value>
		<seealso cref="System.Windows.Forms.Control.Height" qualify="true"/>
		<seealso cref="System.Windows.Forms.CreateParams.Width"/>
	</doc>
	<doc for="CreateParams.ClassName">
		<summary>
			<para> Gets or
      sets
      the name of the Windows
      class to derive the control from.</para>
		</summary>
		<value>
			<para>The name of the Windows class to derive the control from.</para>
		</value>
		<remarks>
			<para>The default value for this property is
   <see langword="null"/>, indicating that the control is not derived
      from an existing control class. To derive from an existing control class, store
      the system class name in this property. For example, to derive from the
      standard <see cref="System.Windows.Forms.Button"/>
      control, set this property to "BUTTON".</para>
		</remarks>
	</doc>
	<doc for="CreateParams">
		<summary>
			<para> Encapsulates the information needed when creating
      a control.</para>
		</summary>
		<remarks>
			<para>The information in a <see cref="System.Windows.Forms.CreateParams"/> object can be used to pass information about the
   initial state and appearance of a control. Most <see cref="System.Windows.Forms.Control"/> derived
   controls override the <see cref="System.Windows.Forms.Control.CreateParams"/>
   property to pass in the appropriate values or include additional information in
   the <see cref="System.Windows.Forms.CreateParams"/>
   object.</para>
			<para>For more information about creating control parameters,
   see the <see langword="CreateWindow"/> and <see langword="CreateWindowEx"/>
   functions and the <see langword="CREATESTRUCT"/> structure
   documentation in the Windows Platform SDK reference located in the MSDN Library.
   </para>
			<note type="note">
   The constants used to set the <see cref="System.Windows.Forms.CreateParams.Style"/>, <see cref="System.Windows.Forms.CreateParams.ExStyle"/>, and <see cref="System.Windows.Forms.CreateParams.ClassStyle"/>
   properties are defined in the Winuser.h header file. This file is installed by
   the Platform SDK or Visual Studio .NET.
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.Button"/> derived class
   named <c>MyIconButton</c> and provides the implementation
needed for the button to display an Icon rather than an Image. The <see cref="System.Windows.Forms.Control.CreateParams"/> property is extended and a value added to
the <see cref="System.Windows.Forms.CreateParams.Style"/> property that causes the button to display
an <see cref="System.Drawing.Icon"/>
rather than an <see cref="System.Drawing.Image"/>
.</para>
			<codelink SampleID="CreateParams" SnippetID="1"/>
			<para>The following example creates an instance of a standard 
<see cref="System.Windows.Forms.Button"/> 
control and an instance of the derived control, <c>MyIconButton</c>, created in the example above. This 
example assumes there is an <see cref="System.Drawing.Icon"/> 
file named <c>Default.ico</c> in the same location as the application. 
When the application starts, the <see langword="Default"/> icon is displayed on 
the <c>MyIconButton</c> 
button. If the <see langword="Default"/> icon is not present, the button face is 
blank. When the standard <see cref="System.Windows.Forms.Button"/> is clicked, an <see cref="System.Windows.Forms.OpenFileDialog"/> box will appear so you can select a new 
Icon to display on the <c>MyIconButton</c>. </para>
			<codelink SampleID="CreateParams" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.Control.CreateParams"/>
	</doc>
	<doc for="CreateParams.Style">
		<summary>
			<para>Gets or sets a bitwise combination of window style values.</para>
		</summary>
		<value>
			<para>A bitwise combination of the window style values.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.CreateParams.Style"/> property controls the appearance of the
   control and its initial state.</para>
			<para>For more information about creating control parameters, see the <see langword="CreateWindow"/>
and <see langword="CreateWindowEx"/> functions and the <see langword="CREATESTRUCT"/> structure documentation in the Windows Platform SDK reference located in the MSDN Library.</para>
			<note type="note">
   The constants used to set the <see cref="System.Windows.Forms.CreateParams.Style"/>, <see cref="System.Windows.Forms.CreateParams.ExStyle"/>, and <see cref="System.Windows.Forms.CreateParams.ClassStyle"/>
   properties are defined in the Winuser.h header file. This file is installed by
   the Platform SDK or Visual Studio .NET.
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.Button"/> derived class
   named <c>MyIconButton</c> and provides the implementation
needed for the button to display an Icon rather than an Image. The <see cref="System.Windows.Forms.Control.CreateParams"/> property is extended and a value added to
the <see cref="System.Windows.Forms.CreateParams.Style"/> property that causes the button to display
an <see cref="System.Drawing.Icon"/>
rather than an <see cref="System.Drawing.Image"/>
.</para>
			<codelink SampleID="CreateParams" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.CreateParams.ExStyle"/>
		<seealso cref="System.Windows.Forms.CreateParams.ClassStyle"/>
	</doc>
	<doc for="CreateParams.ExStyle">
		<summary>
			<para> Gets or sets a bitwise combination of extended window
      style values.</para>
		</summary>
		<value>
			<para>A bitwise combination of the extended window style values.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.CreateParams.ExStyle"/> property
   supports extended appearance and initial state values to apply to the control. </para>
			<para>For more information about creating control parameters,
   see the <see langword="CreateWindow"/> and <see langword="CreateWindowEx"/>
   functions and the <see langword="CREATESTRUCT"/> structure documentation in the Windows Platform SDK reference located in the MSDN Library.</para>
			<note type="note">
   The constants used to set the <see cref="System.Windows.Forms.CreateParams.Style"/>, <see cref="System.Windows.Forms.CreateParams.ExStyle"/>, and <see cref="System.Windows.Forms.CreateParams.ClassStyle"/>
   properties are defined in the Winuser.h header file. This file is installed by
   the Platform SDK or Visual Studio .NET.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.CreateParams.Style"/>
		<seealso cref="System.Windows.Forms.CreateParams.ClassStyle"/>
	</doc>
	<doc for="CreateParams.ClassStyle">
		<summary>
			<para>Gets or sets a bitwise combination of class style values.</para>
		</summary>
		<value>
			<para>A bitwise combination of the class style values.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.CreateParams.ClassStyle"/> property is ignored if
   the <see cref="System.Windows.Forms.CreateParams.ClassName"/> property is not <see langword="null"/>.</para>
			<para>For more information about creating control parameters,
   see the <see langword="CreateWindow"/> and <see langword="CreateWindowEx"/>
   functions and the <see langword="CREATESTRUCT"/> structure documentation in the Windows Platform SDK reference located in the MSDN Library.</para>
			<note type="note">
   The constants used to set the <see cref="System.Windows.Forms.CreateParams.Style"/>, <see cref="System.Windows.Forms.CreateParams.ExStyle"/>, and <see cref="System.Windows.Forms.CreateParams.ClassStyle"/>
   properties are defined in the Winuser.h header file. This file is installed by
   the Platform SDK or Visual Studio .NET.
</note>
		</remarks>
		<seealso cref="System.Windows.Forms.CreateParams.Style"/>
		<seealso cref="System.Windows.Forms.CreateParams.ExStyle"/>
	</doc>
</docs>
