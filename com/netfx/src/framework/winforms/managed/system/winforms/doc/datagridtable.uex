<docs>
	<doc for="DataGridTableStyle.ShouldSerializeAlternatingBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed from its default; 
    otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the 
    <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating 
       the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.ShouldSerializeForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.ForeColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating the
    <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.ShouldSerializeGridLineColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.GridLineColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed from its default; 
    otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating 
       a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
       the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.GridLineStyle">
		<summary>
			<para>Gets or sets the style of grid lines.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.DataGridLineStyle"/> values. The default is 
 <see langword="DataGridLineStyle.Solid"/>.</para>
		</value>
	</doc>
	<doc for="DataGridTableStyle.ShouldSerializeHeaderFont">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="DataGridTableStyle.DataGridTableStyle2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.DataGridTableStyle"/> class with the specified
 <see cref="System.Windows.Forms.CurrencyManager"/>.</para>
		</summary>
		<param name="listManager">The <see cref="System.Windows.Forms.CurrencyManager"/> to use.</param>
		<example>
			<para>The following example creates a new <see cref="System.Windows.Forms.DataGridTableStyle"/> 
 using a <see cref="System.Windows.Forms.CurrencyManager"/> for a <see cref="T:System.Data.DataTable"/>
 .</para>
			<codelink SampleID="Classic DataGridTableStyle.DataGridTableStyle2 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.ResetRelationsList">
		<summary>
			<para>[To be Supplied.]</para>
		</summary>
	</doc>
	<doc for="DataGridTableStyle.SetInternalDataGrid">
		<summary>
			<para>
       Gets or sets the <see cref="System.Windows.Forms.DataGrid"/>
       control displaying the table.
    </para>
		</summary>
		<value>
			<para>
       A <see cref="System.Windows.Forms.DataGrid"/> control.
    </para>
		</value>
	</doc>
	<doc for="DataGridTableStyle.GridTableText">
		<summary>
			<para>Gets or sets the name of the grid.</para>
		</summary>
		<value>
			<para>The name of the grid.</para>
		</value>
		<example>
			<para>The following example prints the <see cref="System.Windows.Forms.DataGridTableStyle.GridTableText"/> of each <see cref="System.Windows.Forms.DataGridTableStyle"/> in a <see cref="System.Windows.Forms.GridTableStylesCollection"/>.</para>
			<codelink SampleID="Classic DataGridTableStyle.GridTableText Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.PropertyChanged">
		<summary>
			<para>Occurs when a property value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example adds an event handler for the <see cref="System.Windows.Forms.DataGridTableStyle.PropertyChanged"/> event.</para>
			<codelink SampleID="Classic DataGridTableStyle.PropertyChanged Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.OnPropertyChanged"/>
	</doc>
	<doc for="DataGridTableStyle.OnColumnChanged">
		<summary>
      The DataColumnCollection class actually wires up this
      event handler to the PropertyChanged events of
      a DataGridTable's columns.
 </summary>
	</doc>
	<doc for="DataGridTableStyle.RaisePropertyChanged">
		<overload>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.PropertyChanged"/> event.</para>
		</overload>
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.PropertyChanged"/> event using the specified <see cref="System.ComponentModel.PropertyDescriptor"/>.</para>
		</summary>
		<param name="changed">The <see cref="T:System.ComponentModel.PropertyDescriptor" qualify="true"/> representing the property being changed.</param>
		<example>
			<para>The following example shows a class derived from the <see cref="System.Windows.Forms.DataGridTableStyle"/> that calls the 
 <see cref="System.Windows.Forms.DataGridTableStyle.RaisePropertyChanged"/> method.</para>
			<codelink SampleID="Classic DataGridTableStyle.RaisePropertyChanged Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.RaisePropertyChanged1">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.PropertyChanged"/> event using the specified 
    property name.</para>
		</summary>
		<param name="propName">A string specifying the property being changed.</param>
		<example>
			<para>The following example shows a class derived from the <see cref="System.Windows.Forms.DataGridTableStyle"/> 
 that calls the <see cref="System.Windows.Forms.DataGridTableStyle.RaisePropertyChanged"/> method.</para>
			<codelink SampleID="Classic DataGridTableStyle.RaisePropertyChanged1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.ShouldSerializeBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/> property should be
   persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed from its default; 
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnPropertyChanged">
		<summary>
			<para> Raises the <see cref="System.Windows.Forms.DataGridTableStyle.PropertyChanged"/> event.</para>
		</summary>
		<param name="pcevent">A <see cref="System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For
      more information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
      When overriding
   <see cref="System.Windows.Forms.DataGridTableStyle.OnPropertyChanged"/> in a derived class, be sure to
      call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnPropertyChanged"/> method.
      
   </note>
		</remarks>
		<example>
			<para>The following example shows a class derived from the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> that calls the <see cref="System.Windows.Forms.DataGridTableStyle.OnPropertyChanged"/> method.</para>
			<codelink SampleID="Classic DataGridTableStyle.OnPropertyChanged Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.AlternatingBackColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.BackColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.ForeColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.ForeColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnReadOnlyChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.ReadOnlyChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnReadOnlyChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnGridTableTextChanged">
		<summary>
			<para>Raises the GridTableTextChanged event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnGridTableTextChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnGridTableTextChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnGridTableTextChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnMappingNameChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.MappingNameChanged"/> event</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnMappingNameChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnAllowSortingChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.AllowSortingChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnAllowSortingChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnGridLineColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.GridLineColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnGridLineColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnGridLineStyleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.GridLineStyleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnGridLineStyleChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnHeaderBackColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderBackColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnHeaderFontChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderFontChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderFontChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnHeaderForeColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnHeaderForeColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnLinkColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.LinkColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnLinkColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnLinkHoverColorChanged">
		<summary>
			<para>Raises the LinkHoverColorChanged event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnLinkHoverColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnPreferredRowHeightChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeightChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnPreferredRowHeightChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnPreferredColumnWidthChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnPreferredColumnWidthChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnColumnHeadersVisibleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnColumnHeadersVisibleChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnRowHeadersVisibleChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnRowHeadersVisibleChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnRowHeaderWidthChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnRowHeaderWidthChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnSelectionForeColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnSelectionForeColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.OnSelectionBackColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnSelectionBackColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc>
	<doc for="DataGridTableStyle.CreateGridColumn">
		<overload>
			<para>Creates a <see cref="System.Windows.Forms.DataGridColumnStyle"/>.</para>
		</overload>
		<summary>
			<para>Creates a <see cref="System.Windows.Forms.DataGridColumnStyle"/>. using the specified property 
   descriptor.</para>
		</summary>
		<param name="prop">The <see cref="System.ComponentModel.PropertyDescriptor"/> used to create the column style object.</param>
		<returns>
			<para>The newly created <see cref="System.Windows.Forms.DataGridColumnStyle"/> object.</para>
		</returns>
	</doc><doc for="DataGridTableStyle.ShouldSerializeHeaderBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed
   from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.ShouldSerializeSelectionBackColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed from its default;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/>
	</doc><doc for="DataGridTableStyle.SelectionForeColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/> value changes.</para>
		</summary>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor"/>
	</doc><doc for="DataGridTableStyle.ShouldSerializeSelectionForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed from its default;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged"/>
	</doc><doc for="DataGridTableStyle.ShouldSerializeHeaderForeColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value
   has changed from its default; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.PreferredColumnWidthChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth"/> property value changes.</para>
		</summary>
	</doc><doc for="DataGridTableStyle.ShouldSerializePreferredRowHeight">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed
   from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/>
	</doc><doc for="DataGridTableStyle.GridColumnStyles">
		<summary>
			<para>Gets the collection of columns drawn for this table.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.GridColumnStylesCollection"/> that contains all <see cref="System.Windows.Forms.DataGridColumnStyle"/>
objects for the table.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.GridColumnStylesCollection"/> returned by the <see cref="System.Windows.Forms.DataGridTableStyle.GridColumnStyles"/> property allows you to create a customized
   set of column styles. For each <see cref="System.Data.DataColumn"/> in a <see cref="System.Data.DataTable"/>, set the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of a <see cref="System.Windows.Forms.DataGridColumnStyle"/> object to the <see cref="System.Data.DataColumn.ColumnName"/>. That column style will automatically be used 
   when this <see cref="System.Windows.Forms.DataGridTableStyle"/> is displayed.</para>
			<para>If you create a <see cref="System.Windows.Forms.DataGridTableStyle"/> object without adding any <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/>, a collection of <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects will be created automatically when 
the <see cref="System.Windows.Forms.DataGridTableStyle"/> object is added to the <see cref="System.Windows.Forms.GridTableStylesCollection"/>. An exception will be thrown if you
attempt to add <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects with duplicate <see cref="System.Windows.Forms.DataGridColumnStyle.MappingName"/> values to the collection.</para>
		</remarks>
		<example>
			<para>The following example gets the <see cref="System.Windows.Forms.GridColumnStylesCollection"/> of a <see cref="System.Windows.Forms.DataGridTableStyle"/> and prints each object's
   header.</para>
			<codelink SampleID="Classic DataGridTableStyle.GridColumnStyles Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.LinkHoverColorChanged"><nodoc/>
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor"/>
	</doc><doc for="DataGridTableStyle.ShouldSerializeLinkHoverColor"><nodoc/>
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColor"/> property should be persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed from its default;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor"/>
	</doc><doc for="DataGridTableStyle.DefaultTableStyle"><nodoc/>
		<summary>
			<para>Gets the default table style.</para>
		</summary>
	</doc><doc for="DataGridTableStyle.LinkHoverColor">
		<nodoc/>
		<summary>
			<para>Gets or sets the color displayed when hovering
      over link text.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Color"/> that represents the hover color.</para>
		</value>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetLinkHoverColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor"/>
	</doc><doc for="DataGridTableStyle.ShouldSerializeLinkColor">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/> property should be
   persisted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the property value has changed
   from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetLinkColor"/>
	</doc><doc for="DataGridTableStyle.ResetLinkHoverColor"><nodoc/>
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
      <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor"/> method to determine whether the property
      value has changed from its default.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkHoverColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkHoverColor"/>
	</doc><doc for="DataGridTableStyle.DataGridTableStyle">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.DataGridTableStyle"/> class using the
   specified value to determine whether the grid table is the default style.</para>
		</summary>
		<param name="isDefaultTableStyle">
			<see langword="true"/> to specify the table as the default; otherwise, <see langword="false"/>.</param>
		<example>
			<para>The following example creates a new <see cref="System.Windows.Forms.DataGridTableStyle"/> and adds it to
   the <see cref="System.Windows.Forms.GridTableStylesCollection"/>.</para>
			<codelink SampleID="Classic DataGridTableStyle.DataGridTableStyle Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.DataGridTableStyle1">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.DataGridTableStyle"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.DataGridTableStyle"/> class.</para>
		</summary>
		<example>
			<para>The following example creates a new <see cref="System.Windows.Forms.DataGridTableStyle"/> and adds it to the
<see cref="System.Windows.Forms.GridTableStylesCollection"/>.</para>
			<codelink SampleID="Classic DataGridTableStyle.DataGridTableStyle Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.ReadOnly">
		<summary>
			<para>Gets or sets a value indicating whether columns can be
      edited.</para>
		</summary>
		<value>
			<para><see langword="true"/>, if columns can be edited; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>You can also specify whether individual columns within the table are editable
      by setting the <see cref="System.Windows.Forms.DataGridColumnStyle"/> class's <see cref="System.Windows.Forms.DataGridColumnStyle.ReadOnly" qualify="true"/> property to an appropriate
      value, <see langword="true "/> or <see langword="false"/>.</para>
			<para>Alternatively, to ensure that the data is not edited, you can set the <see cref="T:System.Data.DataColumn"/>
class's <see cref="P:System.Data.DataColumn.ReadOnly"/> property
to <see langword="true"/>.</para>
		</remarks>
		<example>
			<para>The following example returns the <see cref="System.Windows.Forms.DataGridTableStyle.ReadOnly"/> property for each <see cref="System.Windows.Forms.DataGridTableStyle"/> in a <see cref="System.Windows.Forms.GridTableStylesCollection"/>.</para>
			<codelink SampleID="Classic DataGridTableStyle.ReadOnly Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.CreateGridColumn1">
		<summary>
			<para>Creates a <see cref="System.Windows.Forms.DataGridColumnStyle"/> using the specified property descriptor.
   Specifies whether the <see cref="System.Windows.Forms.DataGridColumnStyle"/> is a default column
   style.</para>
		</summary>
		<param name="prop">The <see cref="System.ComponentModel.PropertyDescriptor"/> used to create the column style object.</param>
		<param name=" isDefault">Specifies whether the <see cref="System.Windows.Forms.DataGridColumnStyle"/> object is a default column style. This parameter is read-only.</param>
		<returns>
			<para>The newly created <see cref="System.Windows.Forms.DataGridColumnStyle"/> object.</para>
		</returns>
	</doc><doc for="DataGridTableStyle.BeginEdit">
		<summary>
			<para>Requests an edit operation.</para>
		</summary>
		<param name="gridColumn">The <see cref="System.Windows.Forms.DataGridColumnStyle"/> to edit.</param>
		<param name=" rowNumber">The number of the edited row.</param>
		<returns>
			<para>
				<see langword="true"/>, if the operation succeeds;
 otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.BeginEdit"/> method is intended to notify
 the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control when the
 user has begun an editing
 operation. When the controls is
 in edit mode, multiple edits can be made and the constraints will be temporarily
 unenforced.</para>
			<para>Call the <see cref="System.Windows.Forms.DataGridTableStyle.EndEdit"/> method to quit the edit mode.</para>
		</remarks>
		<example>
			<para>The following example calls the <see cref="System.Windows.Forms.DataGridTableStyle.BeginEdit"/> method on the current <see cref="System.Windows.Forms.DataGridTableStyle"/>
in a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
			<codelink SampleID="Classic DataGridTableStyle.BeginEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid.BeginEdit"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.EndEdit"/>
	</doc><doc for="DataGridTableStyle.EndEdit">
		<summary>
			<para> Requests an end to an edit
 operation.</para>
		</summary>
		<param name="gridColumn">The <see cref="System.Windows.Forms.DataGridColumnStyle"/> to edit.</param>
		<param name="rowNumber">The number of the edited row.</param>
		<param name=" shouldAbort">A value indicating whether the operation should be stopped; <see langword="true"/> if it should stop; otherwise, <see langword="false"/>.</param>
		<returns>
			<para>
				<see langword="true "/>if the edit operation ends
 successfully; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>Similar to the <see cref="System.Windows.Forms.DataGridTableStyle.BeginEdit"/> method, the <see cref="System.Windows.Forms.DataGridTableStyle.EndEdit"/> method is intended to notify the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
when an edit operation is ending. </para>
		</remarks>
		<example>
			<para>The following example calls the <see cref="System.Windows.Forms.DataGridTableStyle.BeginEdit"/> method on the current <see cref="System.Windows.Forms.DataGridTableStyle"/>
in a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control.</para>
			<codelink SampleID="Classic DataGridTableStyle.EndEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.BeginEdit"/>
		<seealso cref="System.Windows.Forms.DataGrid.EndEdit"/>
	</doc><doc for="DataGridTableStyle.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by
 the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</summary>
		<remarks>
			<para>The method calls the <see cref="System.Windows.Forms.DataGridTableStyle.Dispose" qualify="true"/> method on each <see cref="System.Windows.Forms.DataGridColumnStyle"/> contained by the collection before calling
<see cref="System.Windows.Forms.DataGrid.Dispose" qualify="true"/> 
on the grid
itself.</para>
		</remarks>
	</doc><doc for="DataGridTableStyle.ResetLinkColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/> property to its default
   value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor"/> method to determine whether the property
      value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetLinkColor" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor"/>
	</doc><doc for="DataGridTableStyle.RowHeaderWidth">
		<summary>
			<para>Gets or sets the width of row headers.</para>
		</summary>
		<value>
			<para>The width of row headers in pixels. </para>
		</value>
		<remarks>
			<para>When row headers are visible a plus sign is displayed in each row header if
      the underlying data has a related child table.</para>
			<para> This property will not function until you add <see cref="System.Windows.Forms.DataGridTableStyle"/> objects to the <see cref="System.Windows.Forms.GridTableStylesCollection"/>. Until then, setting this property will
   have no effect.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_RowHeaderWidth" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidthChanged"/>
	</doc><doc for="DataGridTableStyle.RowHeaderWidthChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_RowHeaderWidth" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/>
	</doc><doc for="DataGridTableStyle.RowHeadersVisible">
		<summary>
			<para>Gets or sets a value indicating whether row headers are visible.</para>
		</summary>
		<value>
			<para><see langword="true"/> if row headers are visible;
   otherwise, <see langword="false"/>. The default is <see langword="true"/> .</para>
		</value>
		<remarks>
			<para>When row headers are visible, a plus sign is displayed
      in each row header if the underlying <see cref="System.Data.DataTable"/>
      has a related child table.</para>
			<para>This property will not function until you add <see cref="System.Windows.Forms.DataGridTableStyle"/> objects to the <see cref="System.Windows.Forms.GridTableStylesCollection"/>. Until then, setting this property will
   have no effect.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_RowHeadersVisibleChanged" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisibleChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth"/>
	</doc><doc for="DataGridTableStyle.RowHeadersVisibleChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_RowHeadersVisibleChanged" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/>
	</doc><doc for="DataGridTableStyle.SelectionBackColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_SelectionBackColor" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/>
	</doc><doc for="DataGridTableStyle.HeaderFont">
		<summary>
			<para>Gets or sets the font used for header captions.</para>
		</summary>
		<value>
			<para>The <see cref="T:System.Drawing.Font"/> used for captions.</para>
		</value>
		<remarks>
			<para>To set header caption text, use the <see cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/> property of the <see cref="System.Windows.Forms.DataGridColumnStyle"/> class.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_Sample" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFontChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetHeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/>
	</doc><doc for="DataGridTableStyle.HeaderFontChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_Sample" SnippetID="4"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetHeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/>
	</doc><doc for="DataGridTableStyle.LinkColor">
		<summary>
			<para>Gets or sets the color of link text.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Color"/> of link text.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_Sample" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor"/>
	</doc><doc for="DataGridTableStyle.LinkColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_Sample" SnippetID="3"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeLinkColor"/>
	</doc><doc for="DataGridTableStyle.SelectionForeColor">
		<summary>
			<para>Gets or sets the foreground color of selected cells.</para>
		</summary>
		<value>
			<para>The <see cref="T:System.Drawing.Color"/> that represents the foreground color of
   selected cells.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_SelectionForeColor " SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetSelectionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor"/>
	</doc><doc for="DataGridTableStyle.ResetSelectionForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use
      the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor"/> method to determine
      whether the property value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_SelectionForeColor " SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionForeColor"/>
	</doc><doc for="DataGridTableStyle.GridLineStyleChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.GridLineStyle"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_sample1" SnippetID="2"/>
		</example>
	</doc><doc for="DataGridTableStyle.MappingNameChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_sample1" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.MappingName"/>
	</doc><doc for="DataGridTableStyle.ColumnHeadersVisible">
		<summary>
			<para>Gets or sets a value indicating whether column headers are visible.</para>
		</summary>
		<value>
			<para><see langword="true "/>if column headers are visible; otherwise,
<see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>To set header caption text, use the <see cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/>
property of the <see cref="System.Windows.Forms.DataGridColumnStyle"/> class.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_Sample3" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisibleChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/>
	</doc><doc for="DataGridTableStyle.ColumnHeadersVisibleChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/> value changes.</para>
		</summary>
		<remarks>
			<para>To set the caption text for each column in a grid, set the <see cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/> property of the <see cref="System.Windows.Forms.DataGridColumnStyle"/>class.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_Sample3" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.GridLineColor">
		<summary>
			<para>Gets or sets the color of grid lines.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/> that represents the grid line color.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_sample5" SnippetID="2"/>
		</example>
	</doc><doc for="DataGridTableStyle.GridLineColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.GridLineColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_sample5" SnippetID="3"/>
		</example>
	</doc><doc for="DataGridTableStyle.ForeColor">
		<summary>
			<para>Gets or sets the foreground color of the grid table.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/> that represents the foreground color of
   the grid table. </para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_ForeColor" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.HeaderBackColor">
		<summary>
			<para>Gets or sets the background color of headers.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/> that represents the background color of
   headers.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_Header_4" SnippetID="4"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetHeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.HeaderBackColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/> value changes.</para>
		</summary>
		<example>
			<codelink SampleID="DataGridTableStyle_Header_4" SnippetID="3"/>
		</example>
	</doc><doc for="DataGridTableStyle.HeaderForeColor">
		<summary>
			<para>Gets or sets the foreground color of headers.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/> that represents the foreground color of
   headers.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_Header_4" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.HeaderForeColorChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_Header_4" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetHeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.PreferredColumnWidth">
		<summary>
			<para>Gets or sets the width used to create columns when a new grid is displayed.</para>
		</summary>
		<value>
			<para>The width used to create columns when a new grid is displayed.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_PreferredColumnWidth" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidthChanged"/>
	</doc><doc for="DataGridTableStyle.PreferredRowHeight">
		<summary>
			<para>Gets or sets the height used to create a row when a new grid is displayed.</para>
		</summary>
		<value>
			<para>The height of a row in pixels.</para>
		</value>
		<remarks>
			<para>The preferred height is the minimum height needed to
      accommodate the displayed text with the assigned <see cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>. </para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_PreferredRowHeight" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth"/>
	</doc><doc for="DataGridTableStyle.PreferredRowHeightChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_PreferredRowHeightChanged" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/>
	</doc><doc for="DataGridTableStyle.ReadOnlyChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.ReadOnly"/> value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ReadOnlyChanged" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ReadOnly"/>
	</doc><doc for="DataGridTableStyle.ResetAlternatingBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are
      either creating a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own
      control incorporating the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use
      the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeAlternatingBackColor"/> method to determine
      whether the property value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetAlternatingBackcolor" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.ResetBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating the
   <see cref="System.Windows.Forms.DataGridTableStyle"/>
   .</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetBackColor" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.ResetForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.ForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeForeColor"/> method to determine whether the property
      value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetForeColor" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.ResetGridLineColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.GridLineColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use
      the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeGridLineColor"/>
      method to determine whether the property value has
      changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetGridLineColor" SnippetID="1"/>
		</example>
	</doc><doc for="DataGridTableStyle.ResetHeaderBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderBackColor"/> method to determine
      whether the property value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetHeaderBackColor" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.ResetHeaderFont">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetHeaderFont1" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFontChanged"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle.HeaderText"/>
	</doc><doc for="DataGridTableStyle.ResetHeaderForeColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the
   <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor"/> method to determine
      whether the property value has changed from its default.</para>
		</remarks>
		<example>
			<codelink SampleID="DataGridTableStyle_ResetHeaderForeColor" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeHeaderForeColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/>
	</doc><doc for="DataGridTableStyle.OnAlternatingBackColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnAlternatingBackColorChanged"/> method so that
   registered delegates receive the event.
</note>
		</remarks>
	</doc><doc for="DataGridTableStyle.OnBackColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.BackColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnBackColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnBackColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnBackColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc><doc for="DataGridTableStyle.OnForeColorChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.DataGridTableStyle.ForeColorChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
      information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.OnForeColorChanged"/> method also allows 
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Windows.Forms.DataGridTableStyle.OnForeColorChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Windows.Forms.DataGridTableStyle.OnForeColorChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
	</doc><doc for="DataGridTableStyle.ResetSelectionBackColor">
		<summary>
			<para>Resets the <see cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/> property to its default value.</para>
		</summary>
		<remarks>
			<para>You typically use this method if you are either creating 
      a designer for the <see cref="System.Windows.Forms.DataGridTableStyle"/> or creating your own control incorporating
      the <see cref="System.Windows.Forms.DataGridTableStyle"/>. You can use
      the <see cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor"/>
      method to determine whether the property
      value has changed from its default.</para>
		</remarks>
	</doc><doc for="DataGridTableStyle.DataGrid">
		<summary>
			<para>Gets or sets the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control for the drawn table.</para>
		</summary>
		<value>
			<para>The <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control that displays the table.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control displays data in the form of a grid.
   The <see cref="System.Windows.Forms.DataGridTableStyle"/> is an object that represents the drawn grid.
   The <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
   property returns a reference to the control that is displaying the
   grid.</para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.DataGrid"/> property is set when a <see cref="System.Windows.Forms.DataGridTableStyle"/> is added to a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control's
<see cref="System.Windows.Forms.GridTableStylesCollection"/> . You should 
not try to set this property unless you are overriding it and creating a
designer for a user control that incorporates the <see cref="System.Windows.Forms.DataGrid"/>
control.</para>
		</remarks>
		<example>
			<para>The following example prints the <see cref="System.Windows.Forms.DataGrid.CurrentCell"/> of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> displaying a <see cref="System.Windows.Forms.DataGridTableStyle"/>.</para>
			<codelink SampleID="Classic DataGridTableStyle.DataGrid Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.AllowSorting">
		<summary>
			<para>Indicates whether sorting is allowed on the grid table
      when this <see cref="System.Windows.Forms.DataGridTableStyle"/> is used.</para>
		</summary>
		<value>
			<para><see langword="true"/> if sorting is allowed; otherwise,
<see langword="false"/>. The default is <see langword="true"/> .</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.DataGridTableStyle.AllowSorting"/> property is set to
<see langword="true"/>, a triangle appears in each column header indicating the 
   direction of the sort. The user can click on any column header to sort the grid by
   that column. Clicking the column a second time changes the direction of the
   sort.</para>
		</remarks>
		<example>
			<para>The following example allows you to toggle sorting
      availability on a <see cref="System.Windows.Forms.DataGrid"/> by clicking a button and the current sorting
      status is displayed in a label. This example assumes you have a <see cref="System.Windows.Forms.DataGrid"/>
      with a <see cref="System.Data.DataSet" qualify="true"/> that contains some data, a <see cref="System.Windows.Forms.Button"/> and a
   <see cref="System.Windows.Forms.Label"/> on a <see cref="System.Windows.Forms.Form"/>
   
   
   .</para>
			<codelink SampleID="DataGridTableStyle_Sample2" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.AllowSortingChanged"/>
	</doc>
	<doc for="DataGridTableStyle.AllowSortingChanged">
		<summary>
			<para>Occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.AllowSorting"/> property value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example allows you to toggle sorting
      availability on a <see cref="System.Windows.Forms.DataGrid"/> by clicking a button and the current sorting
      status is displayed in a label. This example assumes you have a <see cref="System.Windows.Forms.DataGrid"/>
      with a <see cref="System.Data.DataSet" qualify="true"/> that contains some data, a <see cref="System.Windows.Forms.Button"/> and a
   <see cref="System.Windows.Forms.Label"/> on a <see cref="System.Windows.Forms.Form"/>
   
   .</para>
			<codelink SampleID="DataGridTableStyle_Sample2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.MappingName">
		<summary>
			<para>Gets or sets the name used to map this table to a specific data source.</para>
		</summary>
		<value>
			<para>The name used to map this grid to a specific data source.</para>
		</value>
		<remarks>
			<para>To bind the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> to a strongly typed array of objects, the 
   object must contain public properties. To create a <see cref="System.Windows.Forms.DataGridTableStyle"/> that displays such an array, set
   the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property to <paramref name="classname[]"/>
   where <paramref name="classname"/> is replaced by the class name. Also note that the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property is case-sensitive. </para>
			<para>You can also bind the <see cref="System.Windows.Forms.DataGrid"/> to an <see cref="System.Collections.ArrayList"/>. A feature of the <see cref="System.Collections.ArrayList"/> is 
that it can contain objects of multiple types, but the <see cref="System.Windows.Forms.DataGrid"/>
can only bind to such a list when all items in the list are of the same type as
the first item. This means that all objects must either be of the same type, or
they must inherit from the same class as the first item in the list. For
example, if the first item in a list is a <see cref="System.Windows.Forms.Control"/> object, the second item
could be a <see cref="System.Windows.Forms.TextBox"/> (which inherits from <see cref="System.Windows.Forms.Control"/>).
If, on the other hand, the first item is a <see cref="System.Windows.Forms.TextBox"/>, the second object cannot
be a <see cref="System.Windows.Forms.Control"/>. Further, the <see cref="System.Collections.ArrayList"/>
must have items in it when it is bound. An empty <see cref="System.Collections.ArrayList"/>
will result in an empty grid. When binding to an <see cref="System.Collections.ArrayList"/>,
set the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the <see cref="System.Windows.Forms.DataGridTableStyle"/> to "ArrayList"
(the type name).</para>
			<para>The default is the name of the list managed by the <see cref="System.Windows.Forms.CurrencyManager"/>
for this grid. The <see cref="System.Windows.Forms.CurrencyManager"/> for the <see cref="System.Windows.Forms.DataGridTableStyle"/> is set using
the <see cref="M:System.Windows.Forms.DataGridTableStyle.#ctor"/> constructor.</para>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.MappingNameChanged"/> event occurs when the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> value changes.</para>
		</remarks>
		<example>
			<para>The following example creates an array of <c>Widget</c> objects and binds a <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control to the array. The code then
creates a <see cref="System.Windows.Forms.DataGridTableStyle"/> and sets the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> to the name of the class plus
brackets.</para>
			<codelink SampleID="DataGridTable.MappingName Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.CurrencyManager"/>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle"/>
		<seealso cref="System.Windows.Forms.DataGrid.TableStyles"/>
	</doc>
	<doc for="DataGridTableStyle.AlternatingBackColor">
		<summary>
			<para>Gets or sets the background color of odd-numbered rows of the grid. </para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/> that
   represents the background color of odd-numbered rows. The default is <see cref="System.Drawing.SystemBrushes.Window"/></para>
		</value>
		<example>
			<para>The following example creates an instance of <see cref="System.Windows.Forms.DataGridTableStyle"/> and sets the <see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/> and <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/> properties to new values. The example assumes you have a <see cref="System.Windows.Forms.DataGrid"/> with a <see cref="System.Data.DataSet" qualify="true"/> that contains some
   data, and a <see cref="System.Windows.Forms.Button"/> on a <see cref="System.Windows.Forms.Form"/> .</para>
			<codelink SampleID="DataGridTableStyle_sample5" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle.BackColor">
		<summary>
			<para>Gets or sets the background color of odd-numbered rows of the grid. </para>
		</summary>
		<value>
			<para>A <see cref="T:System.Drawing.Color"/> that represents the background color of
   odd-numbered rows.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/> property can also be set
   to create a ledger-like appearance.</para>
		</remarks>
		<example>
			<para>The following example creates an instance of <see cref="System.Windows.Forms.DataGridTableStyle"/> and sets the <see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/> and <see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/> properties to new values. The example assumes you have a <see cref="System.Windows.Forms.DataGrid"/> with a <see cref="System.Data.DataSet" qualify="true"/> that contains some
   data, and a <see cref="System.Windows.Forms.Button"/> on a <see cref="System.Windows.Forms.Form"/> .</para>
			<codelink SampleID="DataGridTableStyle_sample5" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataGridTableStyle">
		<summary>
			<para>Represents the table drawn by the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control at run time.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.DataGrid" qualify="true"/> control displays data in the form of a grid.
   The <see cref="System.Windows.Forms.DataGridTableStyle"/> is a class that represents the drawn grid only. This grid
   should not be confused with the <see cref="T:System.Data.DataTable"/> class, which is a possible
   source of data for the grid. Instead, the <see cref="T:System.Data.DataGridTableStyle"/> strictly represents the grid as
   it is painted in the control. Therefore, through the <see cref="System.Windows.Forms.DataGridTableStyle"/> you can
   control the appearance of the grid for each <see cref="System.Data.DataTable"/>. To specify which <see cref="System.Windows.Forms.DataGridTableStyle"/> is used when displaying data from a
   particular <see cref="System.Data.DataTable"/>, set the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> to the <see cref="System.Data.DataTable.TableName"/>
   of a <see cref="System.Data.DataTable"/>. </para>
			<para>The <see cref="System.Windows.Forms.GridTableStylesCollection"/> contains all the <see cref="System.Windows.Forms.DataGridTableStyle"/> objects used by a <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control. The collection can contain as many <see cref="System.Windows.Forms.DataGridTableStyle"/> objects as you need, however the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of each must be unique. At run time, this
allows you to substitute a different <see cref="System.Windows.Forms.DataGridTableStyle"/> for the same data,
depending on the user's preference. To do this:</para>
			<list type="number"><item>
					<term>
      Populate the <see cref="System.Windows.Forms.GridTableStylesCollection"/> with <see cref="System.Windows.Forms.DataGridTableStyle"/> objects. If a <see cref="System.Windows.Forms.DataGridTableStyle"/> exists in the <see cref="System.Windows.Forms.GridTableStylesCollection"/> whose <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property value equals the <see cref="System.Data.DataTable"/>
      object's <see cref="System.Data.DataTable.TableName"/> property, the <see cref="System.Data.DataTable"/> is displayed with this <see cref="System.Windows.Forms.DataGridTableStyle"/>. If no <see cref="System.Windows.Forms.DataGridTableStyle"/> exists with a matching <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/>, the <see cref="System.Data.DataTable"/> is displayed with the
      default style for data grid tables.</term>
				</item>
				<item>
					<term>
      When a different grid style is needed, use the Item
      property to select the appropriate <see cref="System.Windows.Forms.DataGridTableStyle"/> (pass the <see cref="System.Data.DataTable.TableName"/> to the <see cref="System.Windows.Forms.GridTableStylesCollection.this"/> property) and set the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the returned
      object to a new value.</term>
				</item>
				<item>
					<term>
      Use the <see cref="System.Windows.Forms.GridTableStylesCollection.this"/> property to select the desired <see cref="System.Windows.Forms.DataGridTableStyle"/>, and set its <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> to the <see cref="System.Data.DataTable.TableName"/> of the <see cref="System.Data.DataTable"/>
      .</term>
				</item>
			</list>
			<para>To determine which <see cref="System.Windows.Forms.DataGridTableStyle"/> is currently
displayed, use the <see cref="System.Windows.Forms.DataGrid.DataSource"/> and <see cref="System.Windows.Forms.DataGrid.DataMember"/> properties of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> to return a
<see cref="System.Windows.Forms.CurrencyManager"/>. If the data source implements
the <see cref="System.ComponentModel.ITypedList"/>
interface, you can use the <see cref="System.ComponentModel.ITypedList.GetListName"/> method to return the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the current
table. This is shown in the C# code below: </para>
			<code>
private void PrintCurrentListName(DataGrid myDataGrid){
 CurrencyManager myCM = (CurrencyManager)
 BindingContext[myDataGrid.DataSource, myDataGrid.DataMember];
 IList myList = myCM.List;
 ITypedList thisList = (ITypedList) myList;
 Console.WriteLine(thisList.GetListName(null));
}
</code>
			<para>If the <see cref="System.Data.DataSet"/> contains
<see cref="System.Data.DataTable"/> 
objects related through <see cref="System.Data.DataRelation"/> objects, and the currently displayed <see cref="System.Data.DataTable"/> is a
child table, the <see cref="System.Windows.Forms.DataGrid.DataMember"/> will
return a string in the form of TableName.RelationName (in the simplest case). If
the <see cref="System.Data.DataTable"/>
is further down in the hierarchy, the string will consist of the parent table's
name followed by the necessary <see cref="System.Data.DataRelation.RelationName"/> values required to reach the
table's level. For example, imagine three <see cref="System.Data.DataTable"/> objects in a hierarchical
relationship named (top to bottom) Regions, Customers, and Orders, and two
<see cref="System.Data.DataRelation"/> objects named RegionsToCustomers and 
CustomersToOrders, the <see cref="System.Windows.Forms.DataGrid.DataMember"/> property will return
"Regions.RegionsToCustomers.CustomersToOrders". However, the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> will then be "Orders".</para>
			<para> The collection of <see cref="System.Windows.Forms.DataGridTableStyle"/> objects is returned
through the <see cref="System.Windows.Forms.DataGrid.TableStyles"/>
property of the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> . </para>
			<para> When a <see cref="System.Windows.Forms.DataGridTableStyle"/> is displayed, the
settings for the <see cref="System.Windows.Forms.DataGridTableStyle"/> will override the settings for the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control. If a value is not set for a particular <see cref="System.Windows.Forms.DataGridTableStyle"/> property, the <see cref="System.Windows.Forms.DataGrid" qualify="true"/>
control's value will be used instead. The following list shows the <see cref="System.Windows.Forms.DataGridColumnStyle"/> properties that can be set to override
<see cref="System.Windows.Forms.DataGrid" qualify="true"/> 
control properties: </para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.AllowSorting"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.AlternatingBackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.BackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.ColumnHeadersVisible"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.ForeColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.GridLineColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.GridLineStyle"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.HeaderBackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.HeaderFont"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.HeaderForeColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.LinkColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.PreferredColumnWidth"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.PreferredRowHeight"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.ReadOnly"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.RowHeadersVisible"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.RowHeaderWidth"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColor"/></term>
				</item>
				<item>
					<term>
						<see cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/></term>
				</item>
			</list>
			<para>To bind the <see cref="System.Windows.Forms.DataGrid"/> to a strongly typed array of objects, the
object must contain public properties. To create a <see cref="System.Windows.Forms.DataGridTableStyle"/> that displays such an array, set the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property to <paramref name="classname[]"/> where 
<paramref name="classname"/> is replaced by the class name. Also note that 
the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property is case-sensitive. See the
<see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> property for an example.</para>
			<para>You can also bind the <see cref="System.Windows.Forms.DataGrid"/> to an <see cref="System.Collections.ArrayList"/>. A feature of the <see cref="System.Collections.ArrayList"/> is
that it can contain objects of multiple types, but the <see cref="System.Windows.Forms.DataGrid"/>
can only bind to such a list when all items in the list are of the same type as
the first item. This means that all objects must either be of the same type, or
they must inherit from the same class as the first item in the list. For
example, if the first item in a list is a <see cref="System.Windows.Forms.Control"/>, the second item could be
a <see cref="System.Windows.Forms.TextBox"/> (which inherits from <see cref="System.Windows.Forms.Control"/>).
If, on the other hand, the first item is a <see cref="System.Windows.Forms.TextBox"/>, the second object cannot
be a <see cref="System.Windows.Forms.Control"/>. Further, the <see cref="System.Collections.ArrayList"/>
must have items in it when it is bound. An empty <see cref="System.Collections.ArrayList"/>
will result in an empty grid. When binding to an <see cref="System.Collections.ArrayList"/>,
set the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of the <see cref="System.Windows.Forms.DataGridTableStyle"/> to "ArrayList" (the type name).</para>
		</remarks>
		<example>
			<para>The following example sets creates two <see cref="System.Windows.Forms.DataGridTableStyle"/> instances and sets the <see cref="System.Windows.Forms.DataGridTableStyle.MappingName"/> of each object to the <see cref="System.Data.DataTable.TableName"/>
of a <see cref="System.Data.DataTable"/> in a <see cref="System.Data.DataSet"/>. The example then adds <see cref="System.Windows.Forms.DataGridColumnStyle"/> objects to the <see cref="System.Windows.Forms.GridColumnStylesCollection"/> of each <see cref="System.Windows.Forms.DataGridTableStyle"/> . For an
example that runs, see the <see cref="System.Windows.Forms.DataGrid" qualify="true"/> example. </para>
			<codelink SampleID="Classic DataGridTableStyle Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGrid"/>
		<seealso cref="System.Windows.Forms.DataGridColumnStyle"/>
		<seealso cref="System.Windows.Forms.GridColumnStylesCollection"/>
		<seealso cref="System.Windows.Forms.GridTableStylesCollection"/>
	</doc>
	<doc for="DataGridTableStyle.SelectionBackColor">
		<summary>
			<para>Gets or sets the background color of selected cells.</para>
		</summary>
		<value>
			<para>The <see cref="T:System.Drawing.Color"/> that represents the background color of
   selected cells.</para>
		</value>
		<example>
			<codelink SampleID="DataGridTableStyle_SelectionBackColor" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ResetSelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionBackColorChanged"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.ShouldSerializeSelectionBackColor"/>
		<seealso cref="System.Windows.Forms.DataGridTableStyle.SelectionForeColor"/>
	</doc>
</docs>
