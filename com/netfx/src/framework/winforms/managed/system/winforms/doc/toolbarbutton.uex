<docs>
	<doc for="ToolBarButton.stringIndex">
		<summary>
     If this button has a string, what it's index is in the ToolBar's
     internal list of strings.  Needs to be package protected.
 </summary>
	</doc>
	<doc for="ToolBarButton.parent">
		<summary>
     Our parent ToolBar control.
 </summary>
	</doc>
	<doc for="ToolBarButton.dropDownMenu">
		<summary>
     This is pretty cool.  For DropDown buttons, we can optionally show a
     context menu when the button is dropped down.
 </summary>
	</doc>
	<doc for="ToolBarButton.Parent">
		<summary>
			<para> Gets the toolbar control that the toolbar button is assigned 
       to.</para>
		</summary>
		<value>
			<para> The <see cref="System.Windows.Forms.ToolBar"/> control 
    that the <see cref="System.Windows.Forms.ToolBarButton"/> is assigned to.</para>
		</value>
		<seealso cref="System.Windows.Forms.ToolBar"/>
	</doc>
	<doc for="ToolBarButton.PartialPush">
		<summary>
			<para> 
       Gets or sets a value
       indicating whether a toggle-style toolbar button
       is partially pushed.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if a toggle-style toolbar button is 
    partially pushed; otherwise, <see langword="false"/>. The default is
 <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>When <see cref="System.Windows.Forms.ToolBarButton.PartialPush"/> is set to <see langword="true"/> , the 
    toolbar button appears to have its face grayed. This appearance is different from the dimmed appearance
    when the <see cref="System.Windows.Forms.ToolBarButton.Enabled"/> property is set to
 <see langword="false"/> 
 since the partial-push appearance gives a haze to the entire
 button face. This property has no effect unless the <see cref="System.Windows.Forms.ToolBarButtonStyle"/> is set to
 <see langword="ToggleButton"/> 
 .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ToolBarButtonStyle"/>
		<keyword term="toggle button"/>
		<keyword term="indeterminate button state"/>
	</doc>
	<doc for="ToolBarButton.Pushed">
		<summary>
			<para>Gets or sets a value indicating whether a toggle-style toolbar button is currently in the pushed state.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if a 
    toggle-style toolbar button is currently in the pushed state; otherwise,
 <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>When <see cref="System.Windows.Forms.ToolBarButton.Pushed"/> is set to <see langword="true"/> , the toolbar button appears sunken 
    or inset relative to the other buttons. This property has no effect unless the
 <see cref="System.Windows.Forms.ToolBarButtonStyle"/> is set to <see langword="ToggleButton"/> 
 .</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ToolBarButtonStyle"/>
		<keyword term="toggle button"/>
	</doc>
	<doc for="ToolBarButton.Rectangle">
		<summary>
			<para> Gets the bounding rectangle for a toolbar 
       button.</para>
		</summary>
		<value>
			<para>The bounding <see cref="System.Drawing.Rectangle"/> for a toolbar button.</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.ToolBar"/> and the current button are both <see cref="System.Windows.Forms.ToolBarButton.Visible"/>, then this property retrieves the bounding rectangle 
    the button is currently contained in.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.ToolBar"/>
		<seealso cref="System.Windows.Forms.ToolBarButton.Visible"/>
	</doc>
	<doc for="ToolBarButton.Visible">
		<summary>
			<para> 
       Gets or sets a value
       indicating whether the toolbar button
       is visible.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the toolbar button is visible; 
    otherwise, <see langword="false"/>. The default is <see langword="true"/> .</para>
		</value>
		<remarks>
			<para> If the toolbar button is not visible, it will not be 
       displayed on the toolbar, and therefore cannot receive user input.</para>
		</remarks>
	</doc>
	<doc for="ToolBarButton.Width">
		<summary>
     This is somewhat nasty -- by default, the windows ToolBar isn't very
     clever about setting the width of buttons, and has a very primitive
     algorithm that doesn't include for things like drop down arrows, etc.
     We need to do a bunch of work here to get all the widths correct. Ugh.
 </summary>
	</doc>
	<doc for="ToolBarButton.Dispose">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="ToolBarButton.FindButtonIndex">
		<summary>
     Finds out index in the parent.
 </summary>
		<returns>
     int      the index in the parent that we inhabit
 </returns>
	</doc>
	<doc for="ToolBarButton.GetTBBUTTON">
		<summary>
     Returns a TBBUTTON object that represents this ToolBarButton.
 </summary>
		<returns>
     TBBUTTON a TBBUTTON object that represents this button that
     can be sent to the win32 ToolBar control.
 </returns>
	</doc>
	<doc for="ToolBarButton.GetTBBUTTONINFO">
		<summary>
     Returns a TBBUTTONINFO object that represents this ToolBarButton.
 </summary>
		<returns>
     TBBUTTONINFO a TBBUTTONINFO object that represents this button that
     can be sent to the win32 ToolBar control.
 </returns>
	</doc>
	<doc for="ToolBarButton.StringFromStyle">
		<summary>
     Returns a string given a button style.
 </summary>
	</doc>
	<doc for="ToolBarButton.ToString">
		<summary>
		</summary>
	</doc>
	<doc for="ToolBarButton.ItemData">
		<summary>
			<para>Gets or sets the object that contains data about the toolbar button.</para>
		</summary>
		<value>
			<para>An <see cref="System.Object"/> that contains data
   about the toolbar button. The default is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Retrieves or assigns the data currently associated with the toolbar
      button. Any <see cref="System.Object"/> derived type may be
      assigned to this property. If this property is being set through
      the Windows
      Forms designer, only text may be assigned. </para>
		</remarks>
		<seealso cref="System.Object"/>
	</doc>
	<doc for="ToolBarButton.ToolBarButton">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ToolBarButton"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ToolBarButton"/> class.</para>
		</summary>
		<remarks>
			<para>A newly created <see cref="System.Windows.Forms.ToolBarButton"/> has no default <see cref="System.Windows.Forms.ToolBarButton.Text"/> or <see cref="System.Drawing.Image"/> assigned to it. The
   button's default style is <see langword="ToolBarButtonStyle.PushButton"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code assumes a <see cref="System.Windows.Forms.MenuItem"/> , <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolBar"/>
	</doc>
	<doc for="ToolBarButton.ToolBarButton1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.ToolBarButton"/> class and displays the assigned
   text on the button.</para>
		</summary>
		<param name="text">The text to display on the new <see cref="System.Windows.Forms.ToolBarButton"/>.</param>
		<remarks>
			<para>The newly created <see cref="System.Windows.Forms.ToolBarButton"/> has no <see cref="System.Drawing.Image"/> assigned to it. The button's
   default style is <see cref="System.Windows.Forms.ToolBarButtonStyle.PushButton"/>. The <paramref name="text"/>
   parameter is assigned to the <see cref="System.Windows.Forms.ToolBarButton.Text"/> property and is displayed on the
   new toolbar button control.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code assumes a <see cref="System.Windows.Forms.MenuItem"/> , <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolBar"/>
		<seealso cref="System.Windows.Forms.ToolBarButton.Text"/>
	</doc>
	<doc for="ToolBarButton.ImageIndex">
		<summary>
			<para> Gets or sets the index
      value of the image assigned to the button.</para>
		</summary>
		<value>
			<para>The index value of the <see cref="System.Drawing.Image"/> assigned to the toolbar button. The default is
   -1.</para>
		</value>
		<exception cref="System.ArgumentException">The assigned value is less than -1.</exception>
		<remarks>
			<para>The <see cref="System.Windows.Forms.ToolBarButton.ImageIndex"/> value references the indexed
   value of the images in an <see cref="System.Windows.Forms.ImageList"/> assigned to the parent <see cref="System.Windows.Forms.ToolBar"/>
   control.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code assumes a <see cref="System.Windows.Forms.MenuItem"/> , <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolBar"/>
		<seealso cref="System.Windows.Forms.ImageList"/>
	</doc>
	<doc for="ToolBarButton.Style">
		<summary>
			<para> Gets or sets the style of the
      toolbar button.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.ToolBarButtonStyle"/> values. The default is
   <see langword="ToolBarButtonStyle.PushButton"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="System.Windows.Forms.ToolBarButtonStyle"/>values. </exception>
		<remarks>
			<para>If the button <see cref="System.Windows.Forms.ToolBarButton.Style"/> is set to <see cref="System.Windows.Forms.ToolBarButtonStyle.DropDownButton"/> you can specify
   a <see cref="System.Windows.Forms.MenuItem"/> to be displayed when the drop-down button is
   pressed. If the style is set to <see langword="ToolBarButtonStyle.Separator"/>,
   the toolbar button appears as a button separator and not as a button. The
   <see langword="ToolBarButtonStyle.ToggleButton"/> style causes the
   toolbar button to act like a
   toggle button; it can be in an on or off state.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code assumes a <see cref="System.Windows.Forms.MenuItem"/> , <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolBarButtonStyle"/>
	</doc>
	<doc for="ToolBarButton.Text">
		<summary>
			<para> Gets or sets the text displayed on the toolbar button.</para>
		</summary>
		<value>
			<para> The text displayed on the toolbar button. The default is an empty string
      ("").</para>
		</value>
		<remarks>
			<para>The default the Text property value is an empty
      string ("") unless you created the control with the <see cref="M:System.Windows.Forms.ToolBar.#ctor"/> constructor that accepts the text
      string as a parameter. The orientation of the text on the toolbar button is determined by the
      <see cref="System.Windows.Forms.ToolBar.TextAlign"/> property of the button's parent <see cref="System.Windows.Forms.ToolBar"/>, which
      can be set to one of the <see cref="System.Windows.Forms.ToolBarTextAlign"/> enumeration values. The
      orientation is in relation to the image assigned to the button. If no image is
      assigned to the button, there will be space left for one on the surface of the
      toolbar button.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code assumes a <see cref="System.Windows.Forms.MenuItem"/> , <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Image"/>
	</doc>
	<doc for="ToolBarButton.ToolTipText">
		<summary>
			<para> Gets
      or
      sets the text that appears as a ToolTip for a control.</para>
		</summary>
		<value>
			<para>The text that is displayed when the mouse pointer moves over the toolbar button. The default is an empty
      string ("").</para>
		</value>
		<remarks>
			<para> To enable the display of the ToolTip text when the mouse pointer is moved over the button,
      set the <see cref="System.Windows.Forms.ToolBar.ShowToolTips"/> property of the button's parent <see cref="System.Windows.Forms.ToolBar"/> to
      <see langword="true"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the toolbar, and sets some of the buttons' common properties. This code assumes a <see cref="System.Windows.Forms.MenuItem"/> , <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolBar.ShowToolTips"/>
		<seealso cref="System.Windows.Forms.ToolTip"/>
	</doc>
	<doc for="ToolBarButton">
		<summary>
			<para> Represents a Windows toolbar button.</para>
		</summary>
		<remarks>
			<para><see cref="System.Windows.Forms.ToolBarButton"/> controls are parented by <see cref="System.Windows.Forms.ToolBar"/>
controls. Common properties to set once the toolbar button has been
created are <see cref="System.Windows.Forms.ToolBarButton.Text"/> and <see cref="System.Windows.Forms.ToolBarButton.ImageIndex"/> . Set the <see cref="System.Windows.Forms.ToolBarButton.Text"/> property of the buttonto display text
beneath or to the right of the image. To assign images to the buttons by
creating an <see cref="System.Windows.Forms.ImageList"/> , assigning it to the <see cref="System.Windows.Forms.ToolBar.ImageList"/> property of the toolbar; then assign the
image index value to the <see cref="System.Windows.Forms.ToolBarButton.ImageIndex"/>
property of the button. </para>
			<para>To change the appearance of the toolbar buttons assigned to the toolbar, set the
<see cref="System.Windows.Forms.ToolBar.Appearance"/>
property of the parent toolbar control. The <see langword="ToolBarAppearance.Flat "/> appearance
give the buttons a flat appearance. As the mouse pointer moves over the
buttons, their appearance changes to three-dimensional. Button separators appear as
lines rather than spaces between the buttons when the buttons have a flat
appearance. If the <see cref="System.Windows.Forms.ToolBar.Appearance"/>
property is set to <see langword="ToolBarAppearance.Normal"/> , the
buttons appear raised and three-dimensional, and the
separators
appear as a gap between the buttons. </para>
			<para>You can assign a <see cref="System.Windows.Forms.ContextMenu"/> to a button if the <see cref="System.Windows.Forms.ToolBarButton.Style"/> property is set to
<see langword="ToolBarButtonStyle.DropDown"/>
. When the button is clicked, the assigned menu
is displayed. </para>
			<para> To create a collection of <see cref="System.Windows.Forms.ToolBarButton"/>
controls to display on a <see cref="System.Windows.Forms.ToolBar"/>, add the buttons individually by using the
<see cref="System.Windows.Forms.ToolBar.ToolBarButtonCollection.Add"/> method of the
<see cref="System.Windows.Forms.ToolBar.Buttons"/> 
property.
Alternatively, you can add several toolbar buttons using the <see cref="System.Windows.Forms.ToolBar.ToolBarButtonCollection.AddRange"/>
method. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/> and three <see cref="System.Windows.Forms.ToolBarButton"/> controls. The toolbar buttons are assigned to the
   button collection, the collection is assigned to the toolbar, and the toolbar
   is added to the form. On the <see cref="System.Windows.Forms.ToolBar.ButtonClick"/> event of the toolbar, the <see cref="System.Windows.Forms.ToolBarButtonClickEventArgs.Button"/> property of the <see cref="System.Windows.Forms.ToolBarButtonClickEventArgs"/> is evaluated and the appropriate dialog box opened. This code assumes that a <see cref="System.Windows.Forms.Form"/> , an <see cref="System.Windows.Forms.OpenFileDialog"/>, a <see cref="System.Windows.Forms.SaveFileDialog"/>, and a <see cref="System.Windows.Forms.PrintDialog"/> have all been created.</para>
			<codelink SampleID="Classic ToolBar.ToolBar Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ToolBar"/>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.ImageList"/>
		<seealso cref="System.Windows.Forms.ToolTip"/>
	</doc>
	<doc for="ToolBarButton.Enabled">
		<summary>
			<para> Gets or sets a value indicating whether the button is enabled.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the button is enabled;
   otherwise, <see langword="false"/>. The default is <see langword="true"/> .</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Windows.Forms.ToolBarButton.Enabled"/> property is set to <see langword="false"/>, the toolbar button cannot be clicked,
   and the button's appearance changes. The <see cref="System.Drawing.Image"/> and <see cref="System.Windows.Forms.ToolBarButton.Text"/> assigned to the
   button appear grayed out. If the image or text has multiple colors, they display
   in a monochromatic gray.</para>
		</remarks>
	</doc>
	<doc for="ToolBarButton.Tag">
		<summary>
			<para>Gets or sets the object that contains data about the toolbar button.</para>
		</summary>
		<value>
			<para>An <see cref="System.Object"/> that contains data
   about the toolbar button. The default is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Retrieves or assigns the data currently associated with the toolbar
      button. Any <see cref="System.Object"/> derived type can be
      assigned to this property. If this property is being set through
      the Windows
      Forms designer, only text can be assigned. </para>
		</remarks>
		<seealso cref="System.Object"/>
	</doc>
	<doc for="ToolBarButton.DropDownMenu">
		<summary>
			<para> Gets or
      sets the menu to be displayed in
      the drop-down toolbar button.</para>
		</summary>
		<value>
			<para>A <see cref="System.Windows.Forms.ContextMenu"/> to
   be displayed in the drop-down toolbar button. The default is
<see langword="null"/>
.</para>
		</value>
		<exception cref="System.ArgumentException">The assigned object is not a <see cref="System.Windows.Forms.ContextMenu"/> .</exception>
		<remarks>
			<para>You can specify a <see cref="System.Windows.Forms.ContextMenu"/> to be displayed when the drop-down button
   is clicked. This property is not used unless the <see cref="System.Windows.Forms.ToolBarButton.Style"/> property value is set to <see cref="System.Windows.Forms.ToolBarButtonStyle.DropDownButton" qualify="true"/>
   .</para>
			<note type="note">
   Although the <see cref="System.Windows.Forms.ToolBarButton.DropDownMenu"/> property is defined as a <see cref="System.Windows.Forms.Menu"/> type,
   you must assign it a <see cref="System.Windows.Forms.ContextMenu"/> for it to display properly. If you are
   creating your own <see cref="System.Windows.Forms.MenuItem"/> derived class you must assign that object
   to a <see cref="System.Windows.Forms.ContextMenu"/> and assign the
<see cref="System.Windows.Forms.ContextMenu"/> to the
<see cref="System.Windows.Forms.ToolBarButton.DropDownMenu"/> property. 
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.ToolBar"/>and three <see cref="System.Windows.Forms.ToolBarButton"/> controls, assigns the buttons to the
   toolbar, and sets some of the buttons' common properties. This code assumes an <see cref="System.Windows.Forms.ImageList"/> , <see cref="System.Windows.Forms.ToolTip"/> and a <see cref="System.Windows.Forms.Form"/> have been created and the <see cref="System.Windows.Forms.ImageList"/> has at least one <see cref="System.Drawing.Image"/> assigned to it.</para>
			<codelink SampleID="Classic ToolBarButton.Style Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MenuItem"/>
	</doc>
</docs>
