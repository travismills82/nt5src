<docs>
	<doc for="QueryContinueDragEventArgs.QueryContinueDragEventArgs">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Windows.Forms.QueryContinueDragEventArgs"/> class.
   </para>
		</summary>
		<param name="keyState">The current state of the SHIFT, CTRL, and ALT keys. </param>
		<param name="escapePressed"><para><see langword="true"/> if the ESC key was pressed; otherwise, <see langword="false"/>. </para></param>
		<param name="action"><para> A <see cref="System.Windows.Forms.DragAction"/> value. </para></param>
		<seealso cref="System.Windows.Forms.DragAction"/>
		<seealso cref="System.Windows.Forms.Control.DoDragDrop"/>
	</doc>
	<doc for="QueryContinueDragEventArgs.EscapePressed">
		<summary>
			<para> Gets whether the user pressed the ESC key.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the ESC key was pressed; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>By default, the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event sets <see cref="System.Windows.Forms.QueryContinueDragEventArgs.Action"/> to <see cref="System.Windows.Forms.DragAction.Cancel" qualify="true"/> if <see cref="System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed"/> is true.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.DoDragDrop"/>
	</doc>
	<doc for="QueryContinueDragEventArgs.KeyState">
		<summary>
			<para> Gets
      the current state of the SHIFT, CTRL, and ALT keys.</para>
		</summary>
		<value>
			<para>The current state of the SHIFT, CTRL, and ALT keys.</para>
		</value>
		<remarks>
			<para>The bits that are set in the <see cref="System.Windows.Forms.QueryContinueDragEventArgs.KeyState"/> property identify the keys or mouse
   buttons that were pressed during the operation. For example, if the left mouse
   button is pressed, the first bit in the <see cref="System.Windows.Forms.QueryContinueDragEventArgs.KeyState"/> property is set. You can use the bitwise
<see langword="AND"/> 
operator to test for a given key state.</para>
			<para>The following table lists the bits that are set for a specified event.</para>
			<list type="table">
				<listheader>
					<term>Bit</term>
					<description>Key</description>
				</listheader>
				<item>
					<term> 1</term>
					<description>The left mouse button.</description>
				</item>
				<item>
					<term> 2</term>
					<description>The right mouse button.</description>
				</item>
				<item>
					<term> 4</term>
					<description>The SHIFT key.</description>
				</item>
				<item>
					<term> 8</term>
					<description>The CTL key.</description>
				</item>
				<item>
					<term> 16</term>
					<description>The middle mouse button.</description>
				</item>
				<item>
					<term> 32</term>
					<description>The ALT key.</description>
				</item>
			</list>
			<para>By default, the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event sets <see cref="System.Windows.Forms.QueryContinueDragEventArgs.Action"/> to <see cref="System.Windows.Forms.DragAction.Drop" qualify="true"/> if <see cref="System.Windows.Forms.QueryContinueDragEventArgs.KeyState"/> indicates that the left, middle, or right
mouse button is pressed.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Control.DoDragDrop"/>
	</doc>
	<doc for="QueryContinueDragEventArgs.Action">
		<summary>
			<para> Gets or sets the status of a drag-and-drop operation.</para>
		</summary>
		<value>
			<para> A <see cref="System.Windows.Forms.DragAction"/> value.</para>
		</value>
		<remarks>
			<para>By default, the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event sets <see cref="System.Windows.Forms.QueryContinueDragEventArgs.Action"/> to <see cref="System.Windows.Forms.DragAction.Cancel" qualify="true"/> if the ESC key was pressed
   and sets <see langword="Action"/> to <see cref="System.Windows.Forms.DragAction.Drop" qualify="true"/> if the left,
   middle, or right mouse button is pressed.</para>
		</remarks>
		<example>
			<para>The following example demonstrates a drag-and-drop
      operation between two <see cref="System.Windows.Forms.ListBox"/> controls. The example calls
      the <see cref="System.Windows.Forms.Control.DoDragDrop"/> method when the drag action starts. The
      drag action starts if the mouse has moved more than <see cref="System.Windows.Forms.SystemInformation.DragSize" qualify="true"/> from
      the mouse location during the <see cref="System.Windows.Forms.Control.MouseDown"/> event.
      The <see cref="System.Windows.Forms.ListBox.IndexFromPoint"/> method is used to determine the index of
      the item to drag during the <see langword="MouseDown"/> event.</para>
			<para> The example also demonstrates using custom cursors for the drag-and-drop operation.
      The example assumes that two cursor files, <c>3dwarro.cur</c> and <c>3dwno.cur</c>, exist in the application
   directory, for the custom drag and no-drop cursors, respectively. The custom
   cursors will be used if the <c>UseCustomCursorsCheck</c>
				<see cref="System.Windows.Forms.CheckBox"/> is checked. The custom
cursors are set in the <see cref="System.Windows.Forms.Control.GiveFeedback"/> event
handler. </para>
			<para>The keyboard state is evaluated in the <see cref="System.Windows.Forms.Control.DragOver"/> event handler for the right
<see langword="ListBox"/>, to determine what the drag operation will be based 
upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the
<see langword="ListBox"/> where the drop would occur is also determined during 
the <see langword="DragOver"/> event. If the data to drop is not a
<see langword="String"/>, then the <see cref="System.Windows.Forms.DragEventArgs.Effect" qualify="true"/> is set to <see cref="System.Windows.Forms.DragDropEffects.None" qualify="true"/>. Finally, the status of the drop is 
displayed in the <c>DropLocationLabel</c>
				<see cref="System.Windows.Forms.Label"/>. </para>
			<para>The data to drop for the right <see langword="ListBox"/> is determined in
the <see cref="System.Windows.Forms.Control.DragDrop"/> event handler and the
<see langword="String"/> value is added at the appropriate place in the 
<see langword="ListBox"/>. If the drag operation moves outside the bounds of the 
form, then the drag-and-drop operation is canceled in the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event handler. </para>
			<para>This code excerpt demonstrates using the <see cref="System.Windows.Forms.QueryContinueDragEventArgs"/> class with the <see cref="System.Windows.Forms.Control.QueryContinueDragEvent"/> event. See the <see cref="System.Windows.Forms.Control.DoDragDrop"/> method for the complete code example. </para>
			<codelink SampleID="System.Windows.Forms.Control.DoDragDrop" SnippetID="6"/>
		</example>
		<seealso cref="System.Windows.Forms.DragAction"/>
		<seealso cref="System.Windows.Forms.Control.DoDragDrop"/>
	</doc>
	<doc for="QueryContinueDragEventArgs">
		<summary>
			<para>Provides data for the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/>
event.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event
   occurs during a drag-and-drop operation and allows the drag source to determine
   whether the drag-and-drop operation should be canceled. A <see cref="System.Windows.Forms.QueryContinueDragEventArgs"/> specifies whether and
   how the drag-and-drop operation should proceed, whether any modifier keys are
   pressed, and whether the user has pressed the ESC key.</para>
			<para>By default, the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/>
event sets <see cref="System.Windows.Forms.QueryContinueDragEventArgs.Action"/> to <see cref="System.Windows.Forms.DragAction.Cancel" qualify="true"/> if the ESC key was pressed
and sets <see langword="Action"/> to <see cref="System.Windows.Forms.DragAction.Drop" qualify="true"/> if the left, middle, or right mouse button
is pressed.</para>
			<para>For information about the event model, see <see topic="cpconEventsDelegates"/>
.</para>
		</remarks>
		<example>
			<para>The following example demonstrates a drag-and-drop
      operation between two <see cref="System.Windows.Forms.ListBox"/> controls. The example calls
      the <see cref="System.Windows.Forms.Control.DoDragDrop"/> method when the drag action starts. The
      drag action starts if the mouse has moved more than <see cref="System.Windows.Forms.SystemInformation.DragSize" qualify="true"/> from
      the mouse location during the <see cref="System.Windows.Forms.Control.MouseDown"/> event.
      The <see cref="System.Windows.Forms.ListBox.IndexFromPoint"/> method is used to determine the index of
      the item to drag during the <see langword="MouseDown"/> event.</para>
			<para> The example also demonstrates using custom cursors for the drag-and-drop operation.
      The example assumes that two cursor files, <c>3dwarro.cur</c> and <c>3dwno.cur</c>, exist in the application
   directory, for the custom drag and no-drop cursors, respectively. The custom
   cursors will be used if the <c>UseCustomCursorsCheck</c>
				<see cref="System.Windows.Forms.CheckBox"/> is checked. The custom
cursors are set in the <see cref="System.Windows.Forms.Control.GiveFeedback"/> event
handler. </para>
			<para>The keyboard state is evaluated in the <see cref="System.Windows.Forms.Control.DragOver"/> event handler for the right
<see langword="ListBox"/>, to determine what the drag operation will be based 
upon state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the
<see langword="ListBox"/> where the drop would occur is also determined during 
the <see langword="DragOver"/> event. If the data to drop is not a
<see langword="String"/>, then the <see cref="System.Windows.Forms.DragEventArgs.Effect" qualify="true"/> is set to <see cref="System.Windows.Forms.DragDropEffects.None" qualify="true"/>. Finally, the status of the drop is 
displayed in the <c>DropLocationLabel</c>
				<see cref="System.Windows.Forms.Label"/>. </para>
			<para>The data to drop for the right <see langword="ListBox"/> is determined in
the <see cref="System.Windows.Forms.Control.DragDrop"/> event handler and the
<see langword="String"/> value is added at the appropriate place in the 
<see langword="ListBox"/>. If the drag operation moves outside the bounds of the 
form, then the drag-and-drop operation is canceled in the <see cref="System.Windows.Forms.Control.QueryContinueDrag"/> event handler. </para>
			<para>This code excerpt demonstrates using the <see cref="System.Windows.Forms.QueryContinueDragEventArgs"/> class with the <see cref="System.Windows.Forms.Control.QueryContinueDragEvent"/> event. See the <see cref="System.Windows.Forms.Control.DoDragDrop"/> method for the complete code example. </para>
			<codelink SampleID="System.Windows.Forms.Control.DoDragDrop" SnippetID="6"/>
		</example>
		<seealso cref="System.Windows.Forms.DragAction"/>
		<seealso cref="System.Windows.Forms.Control.DoDragDrop"/>
	</doc>
</docs>
