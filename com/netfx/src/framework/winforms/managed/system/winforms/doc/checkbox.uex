<docs>
	<doc for="CheckBox.AppearanceChanged">
		<summary>
			<para>Occurs when the value of the <see cref="System.Windows.Forms.CheckBox.Appearance"/> property changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.CheckBox.Appearance"/>
	</doc>
	<doc for="CheckBox.OverChangeRectangle">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CheckBox.DownChangeRectangle">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CheckBox.CheckedChanged">
		<summary>
			<para>Occurs when the
       value of the <see cref="System.Windows.Forms.CheckBox.Checked"/>
       property changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.CheckBox.Checked"/>
	</doc>
	<doc for="CheckBox.CheckStateChanged">
		<summary>
			<para>Occurs when the
       value of the <see cref="System.Windows.Forms.CheckBox.CheckState"/>
       property changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.CheckBox.CheckState"/>
	</doc>
	<doc for="CheckBox.OnAppearanceChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.CheckBox.AppearanceChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.CheckBox.OnAppearanceChanged"/> method also allows derived classes to 
    handle the event without attaching a delegate. This is the preferred technique
    for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.CheckBox.OnAppearanceChanged"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.CheckBox.OnAppearanceChanged"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
		<seealso cref="System.Windows.Forms.CheckBox.AppearanceChanged"/>
	</doc>
	<doc for="CheckBox.OnCheckedChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.CheckBox.CheckedChanged"/>
 event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>.</para>
			<para>The <see cref="System.Windows.Forms.CheckBox.OnCheckedChanged"/> method also allows derived classes to 
    handle the event without attaching a delegate. This is the preferred technique
    for handling the event in a derived class.</para>
			<note type="inheritinfo">When overriding <see cref="System.Windows.Forms.CheckBox.OnCheckedChanged"/> in a derived class, be sure to call the base class's <see cref="System.Windows.Forms.CheckBox.OnCheckedChanged"/> method so that registered delegates receive the event.
 	</note>
		</remarks>
		<seealso cref="System.Windows.Forms.CheckBox.CheckedChanged"/>
	</doc>
	<doc for="CheckBox.OnCheckStateChanged">
		<summary>
			<para>Raises the <see cref="System.Windows.Forms.CheckBox.CheckStateChanged"/> event.</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Windows.Forms.CheckBox.OnCheckStateChanged"/> method also allows derived classes to 
    handle the event without attaching a delegate. This is the preferred technique
    for handling the event in a derived class.</para>
			<note type="inheritinfo">
    When overriding
 <see cref="System.Windows.Forms.CheckBox.OnCheckStateChanged"/> in a derived class, be sure to call 
    the base class's <see cref="System.Windows.Forms.CheckBox.OnCheckStateChanged"/> method so that registered delegates
    receive the event.
 </note>
		</remarks>
		<seealso cref="System.Windows.Forms.CheckBox.CheckStateChanged"/>
	</doc>
	<doc for="CheckBox.Draw3DLiteBorder">
		<nodoc/>
		<summary>
			<para>Draws the border of the checkbox for the 3d look of popup buttons.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
	</doc>
	<doc for="CheckBox.DrawField">
		<summary>
			<para>Draws the background of the checkbox itself.</para>
		</summary>
		<param name="g">
    The <see cref="System.Drawing.Graphics"/> surface to draw on.
 </param>
		<param name="r">
    The <see cref="System.Drawing.Rectangle"/> bounds to draw within.
 </param>
		<param name="c">
    The <see cref="System.Drawing.Color"/> in which to draw the background.
 </param>
	</doc>
	<doc for="CheckBox.DrawField1">
		<summary>
     Draws the background of the checkbox itself.
 </summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="c">The <see cref="System.Drawing.Color"/> in which to draw the background.</param>
		<param name="disabledColors">
			<see langword="true"/> if the selection of colors should be overridden with appropriate grayed colors when the button is disabled.</param>
	</doc>
	<doc for="CheckBox.DrawFlatBorder">
		<nodoc/>
		<overload>
			<para>Draws the border of the check box for buttons with a flat appearance</para>
		</overload>
		<summary>
			<para>Draws the border of the check box for buttons with a flat appearance.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="c">The <see cref="System.Drawing.Color"/> in which to draw the border.</param>
	</doc>
	<doc for="CheckBox.DrawFlatBorder1">
		<nodoc/>
		<summary>
			<para>Draws the border of the check box for buttons with a flat appearance.</para>
		</summary>
		<param name="g">The <see cref="System.Drawing.Graphics"/> surface to draw on.</param>
		<param name="r">The <see cref="System.Drawing.Rectangle"/> bounds to draw within.</param>
		<param name="c">The <see cref="System.Drawing.Color"/> in which to draw the border.</param>
		<param name="disabledColors">
			<see langword="true"/> if the selection of colors should be overridden with appropriate grayed colors when the button is disabled.</param>
	</doc>
	<doc for="CheckBox.DrawCheckBox">
		<summary>
			<para>Draws a Standard checkbox. To draw a Popup or Flat checkbox, use DrawXxxBorder,
 DrawField, and DrawCheck.</para>
		</summary>
	</doc>
	<doc for="CheckBox.GetCheckmarkRectangle">
		<nodoc/>
		<summary>
    The rectangle of the actual checkmark and checkmark border.
 </summary>
		<param name="client">The client rectangle. Pass ClientRectangle as this parameter.</param>
	</doc>
	<doc for="CheckBox.CreateParams">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.CreateAccessibilityInstance">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.OnClick">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.OnHandleCreated">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.OnMouseUp">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.ProcessMnemonic">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.ToString">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.TextAlign">
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CheckBox.DefaultSize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.CheckBoxAccessibleObject">
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.CheckBoxAccessibleObject.CheckBoxAccessibleObject"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.CheckBoxAccessibleObject.DefaultAction"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.CheckBoxAccessibleObject.Role"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.CheckBoxAccessibleObject.State"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.DoubleClick">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="CheckBox.CheckBox">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.CheckBox"/> class.</para>
		</summary>
		<remarks>
			<para>By default, when a new <see cref="System.Windows.Forms.CheckBox"/> is instantiated,
   <see cref="System.Windows.Forms.CheckBox.AutoCheck"/> is set to <see langword="true"/>
, <see cref="System.Windows.Forms.CheckBox.Checked"/> is set to <see langword="false"/>, and
<see cref="System.Windows.Forms.CheckBox.Appearance"/> is set to
<see langword="Normal"/> .</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.CheckBox"/>, gives it the appearance of a toggle button, sets <see cref="System.Windows.Forms.CheckBox.AutoCheck"/> to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Classic CheckBox.CheckBox Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.CheckBox"/>
	</doc>
	<doc for="CheckBox.AutoCheck">
		<summary>
			<para> Gets or set a value indicating whether the <see cref="System.Windows.Forms.CheckBox.Checked"/> or <see cref="System.Windows.Forms.CheckBox.CheckState"/> values and
   the check box's appearance are automatically
   changed when the check box is clicked.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the
   <see cref="System.Windows.Forms.CheckBox.Checked"/> value or <see cref="System.Windows.Forms.CheckBox.CheckState"/> value and
   the appearance of the control are automatically changed on the <see cref="System.Windows.Forms.Control.Click"/>
   event; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>If <see cref="System.Windows.Forms.CheckBox.AutoCheck"/> is set to false, you will need
   to add code to update the <see cref="System.Windows.Forms.CheckBox.Checked"/> or <see cref="System.Windows.Forms.CheckBox.CheckState"/> values in the <see cref="System.Windows.Forms.Control.Click"/>
   event handler.</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.CheckBox"/>, gives it the appearance of a toggle button, sets <see cref="System.Windows.Forms.CheckBox.AutoCheck"/> to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Classic CheckBox.CheckBox Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="CheckBox.Appearance">
		<summary>
			<para> Gets or sets the value that determines the appearance of a
      check box control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.Appearance"/> values. The default value is <see langword="Normal"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="System.Windows.Forms.Appearance"/> values.</exception>
		<remarks>
			<para>If <see cref="System.Windows.Forms.CheckBox.Appearance"/> value is set to <see langword="Appearance.Normal"/>, the check box has a typical appearance. If the
   value is set to <see langword="Button"/>, the check box appears like a toggle button, which can be toggled to an up or down state.</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.CheckBox"/>, gives it the appearance of a toggle button, sets <see cref="System.Windows.Forms.CheckBox.AutoCheck"/> to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Classic CheckBox.CheckBox Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Appearance"/>
	</doc>
	<doc for="CheckBox">
		<summary>
			<para> Represents a Windows check box.</para>
		</summary>
		<remarks>
			<para>Use a <see cref="System.Windows.Forms.CheckBox"/> to give the user an option, such as
   true/false or yes/no. The check box control can display an image or text or both.</para>
			<para><see cref="System.Windows.Forms.CheckBox"/> and <see cref="System.Windows.Forms.RadioButton"/> controls have a similar
function: they allow the user to choose from a list of options. <see cref="System.Windows.Forms.CheckBox"/>
controls let the user pick a combination of options. In contrast, <see cref="System.Windows.Forms.RadioButton"/>
controls allow a user to choose from mutually exclusive options.</para>
			<para>The <see cref="System.Windows.Forms.CheckBox.Appearance"/> property determines whether the check box appears as a typical check box or as a
button.</para>
			<para>The <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property determines whether the
control supports two or three states. Use the <see cref="System.Windows.Forms.CheckBox.Checked"/> property to get or set
the value of a two-state check box control and use the <see cref="System.Windows.Forms.CheckBox.CheckState"/> property to get or
set the value of a three-state check box
control.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property is set to <see langword="true"/>, the <see cref="System.Windows.Forms.CheckBox.Checked"/> property will return
<see langword="true"/> for either a checked or indeterminate state.
   
</note>
			<para>The <see cref="System.Windows.Forms.ButtonBase.FlatStyle"/> property determines the
style and appearance of the control. If the <see cref="System.Windows.Forms.ButtonBase.FlatStyle"/> property is set to
<see cref="System.Windows.Forms.FlatStyle.System" qualify="true"/>
, the user's operating system determines the appearance of the control.</para>
			<note type="note">
   When
   the <see cref="System.Windows.Forms.ButtonBase.FlatStyle"/> property is set
   to <see cref="System.Windows.Forms.FlatStyle.System" qualify="true"/>, the <see cref="System.Windows.Forms.CheckBox.CheckAlign"/>
   property is ignored and the control is displayed using the <see cref="System.Drawing.ContentAlignment.MiddleLeft" qualify="true"/> or <see cref="System.Drawing.ContentAlignment.MiddleRight" qualify="true"/> alignment. If
   the <see cref="System.Windows.Forms.CheckBox.CheckAlign"/> property is set to one of the
   right alignments, the control is displayed using the <see cref="System.Drawing.ContentAlignment.MiddleRight" qualify="true"/> alignment; otherwise, it is displayed using the
<see cref="System.Drawing.ContentAlignment.MiddleLeft" qualify="true"/>
alignment.
</note>
			<para>The following describes an indeterminate state: You have a check box that determines if the selected text
   in a <see cref="System.Windows.Forms.RichTextBox"/> is bold. When you select text you can click the check box to bold the selection. Likewise, when you select
   some text, the check box displays whether the selected text is bold. If your selected text contains text that is bold and normal, the check box will have an indeterminate state.</para>
		</remarks>
		<example>
			<para>The following example creates and initializes a <see cref="System.Windows.Forms.CheckBox"/>, gives it the appearance of a toggle button, sets <see cref="System.Windows.Forms.CheckBox.AutoCheck"/> to <see langword="false"/>, and adds it to a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="Classic CheckBox.CheckBox Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ButtonBase"/>
		<keyword term="indeterminate button state"/>
	</doc>
	<doc for="CheckBox.CheckAlign">
		<summary>
			<para> Gets or sets
      the horizontal and vertical alignment of a check box on a check box
      control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Drawing.ContentAlignment"/> values. The default value is <see cref="System.Drawing.ContentAlignment.MiddleLeft"/>.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="System.Drawing.ContentAlignment"/> enumeration values.</exception>
		<example>
			<para>The following code example displays the values of three properties in a label. The <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property alternates between <see langword="true"/> and <see langword="false"/> with alternating clicks of the button and the <see cref="System.Windows.Forms.CheckBox.CheckAlign"/> alternates between <see cref="System.Drawing.ContentAlignment.MiddleRight"/> and <see cref="System.Drawing.ContentAlignment.MiddleLeft"/>. This example shows how the property values change as the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property changes and the button is checked. This code assumes that a <see cref="System.Windows.Forms.CheckBox"/>, <see cref="System.Windows.Forms.Label"/> and <see cref="System.Windows.Forms.Button"/> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace. This code should be called in the <see cref="System.Windows.Forms.Control.Click"/> event handler of the button.</para>
			<codelink SampleID="Classic CheckBox.CheckAlign Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.ButtonBase.TextAlign"/>
	</doc>
	<doc for="CheckBox.Checked">
		<summary>
			<para> Gets or set a value indicating whether the check box is in the checked state.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the check box is in the checked state; otherwise,
<see langword="false"/>. The default value is <see langword="false"/>.</para>
			<note type="note">
   If the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property is set to
<see langword="true"/> , the <see cref="System.Windows.Forms.CheckBox.Checked"/> property will return
<see langword="true"/> for either a <see langword="Checked"/> or <see langword="Indeterminate"/><see cref="System.Windows.Forms.CheckBox.CheckState"/>.
   
</note>
		</value>
		<remarks>
			<para>When the value is <see langword="true"/>, the check box portion of the control
   displays a check mark. If the <see cref="System.Windows.Forms.CheckBox.Appearance"/> property is set to
<see langword="Button"/>, the control will appear sunken when <see cref="System.Windows.Forms.CheckBox.Checked"/>
is <see langword="true"/> and raised like a standard button when <see langword="false"/> .</para>
		</remarks>
		<example>
			<para>The following code example displays the values of three properties in a label. The <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property alternates between <see langword="true"/> and <see langword="false"/> with alternating clicks of the button and the <see cref="System.Windows.Forms.CheckBox.CheckAlign"/> alternates between <see cref="System.Drawing.ContentAlignment.MiddleRight"/> and <see cref="System.Drawing.ContentAlignment.MiddleLeft"/>. This example shows how the property values change as the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property changes and the button is checked. This code assumes that a <see cref="System.Windows.Forms.CheckBox"/>, <see cref="System.Windows.Forms.Label"/> and <see cref="System.Windows.Forms.Button"/> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace. This code should be called in the <see cref="System.Windows.Forms.Control.Click"/> event handler of the button.</para>
			<codelink SampleID="Classic CheckBox.CheckAlign Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.CheckBox.ThreeState"/>
		<seealso cref="System.Windows.Forms.CheckBox.CheckState"/>
	</doc>
	<doc for="CheckBox.CheckState">
		<summary>
			<para> Gets or sets the state of the check box.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.CheckState"/> enumeration values. The default value is
<see langword="Unchecked"/> .</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="System.Windows.Forms.CheckState"/> enumeration values.</exception>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property is set to <see langword="false"/>, the <see cref="System.Windows.Forms.CheckBox.CheckState"/> property value can only be set to
<see langword="CheckState.Indeterminate"/> in code and not by user interaction.</para>
			<para>The following table describes the appearance of the check
   box control in its different states for the <see cref="System.Windows.Forms.Appearance.Normal" qualify="true"/> and <see cref="System.Windows.Forms.Appearance.Button" qualify="true"/>
   style control <see cref="System.Windows.Forms.CheckBox.Appearance"/>.</para>
			<list type="table"><listheader>
					<term>CheckState</term>
					<description>Appearance.Normal</description>
					<description>Appearance.Button</description>
				</listheader>
				<item>
					<term><see langword="Checked"/></term>
					<description>The check box displays a check mark.</description>
					<description> The control appears sunken.</description>
				</item>
				<item>
					<term><see langword="Unchecked"/></term>
					<description>The check box is empty.</description>
					<description>The control appears raised.</description>
				</item>
				<item>
					<term><see langword="Indeterminate"/></term>
					<description>The check box displays a check mark and is shaded.</description>
					<description> The control appears flat.</description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following code example displays the values of three properties in a label. The <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property alternates between <see langword="true"/> and <see langword="false"/> with alternating clicks of the button and the <see cref="System.Windows.Forms.CheckBox.CheckAlign"/> alternates between <see cref="System.Drawing.ContentAlignment.MiddleRight"/> and <see cref="System.Drawing.ContentAlignment.MiddleLeft"/>. This example shows how the property values change as the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property changes and the button is checked. This code assumes that a <see cref="System.Windows.Forms.CheckBox"/>, <see cref="System.Windows.Forms.Label"/> and <see cref="System.Windows.Forms.Button"/> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace. This code should be called in the <see cref="System.Windows.Forms.Control.Click"/> event handler of the button.</para>
			<codelink SampleID="Classic CheckBox.CheckAlign Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.CheckBox.Checked"/>
		<seealso cref="System.Windows.Forms.CheckBox.ThreeState"/>
	</doc>
	<doc for="CheckBox.ThreeState">
		<summary>
			<para> Gets or sets a value indicating
      whether the check box will allow three check states rather than two.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.CheckBox"/> is able to display three
   check states; otherwise, <see langword="false"/>. The default value is
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property is set to
<see langword="false"/>, the <see cref="System.Windows.Forms.CheckBox.CheckState"/> property value can only be set to 
<see cref="System.Windows.Forms.CheckState.Indeterminate" qualify="true"/> in code and not by user
   interaction.</para>
		</remarks>
		<example>
			<para>The following code example displays the values of three properties in a label. The <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property alternates between <see langword="true"/> and <see langword="false"/> with alternating clicks of the button and the <see cref="System.Windows.Forms.CheckBox.CheckAlign"/> alternates between <see cref="System.Drawing.ContentAlignment.MiddleRight"/> and <see cref="System.Drawing.ContentAlignment.MiddleLeft"/>. This example shows how the property values change as the <see cref="System.Windows.Forms.CheckBox.ThreeState"/> property changes and the button is checked. This code assumes that a <see cref="System.Windows.Forms.CheckBox"/>, <see cref="System.Windows.Forms.Label"/> and <see cref="System.Windows.Forms.Button"/> have all been instantiated on a form and that the label is large enough to display three lines of text, as well as a reference to the <see cref="N:System.Drawing" qualify="true"/> namespace. This code should be called in the <see cref="System.Windows.Forms.Control.Click"/> event handler of the button.</para>
			<codelink SampleID="Classic CheckBox.CheckAlign Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
