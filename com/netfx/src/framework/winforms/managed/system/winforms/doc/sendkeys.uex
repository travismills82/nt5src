<docs>
	<doc for="SendKeys.SendWait1">
		<summary>
     Sends the given keys to the active application, and then waits for
     the messages to be processed.
 </summary>
		<param name="keys">
     The string of keystrokes to send.
 </param>
		<param name="control">
     The control to send the keystrokes to, or null if keys
     should go to the entire application.
 </param>
	</doc>
	<doc for="SendKeys.UninstallJournalingHook">
		<summary>
     cleans up and uninstalls the hook
 </summary>
	</doc>
	<doc for="SendKeys.SKEvent">
		<summary>
     helps us hold information about the various events we're going to journal
 </summary>
	</doc>
	<doc for="SendKeys.SKEvent.SKEvent">
		<summary>
		</summary>
	</doc>
	<doc for="SendKeys.SKEvent.SKEvent1">
		<summary>
		</summary>
	</doc>
	<doc for="SendKeys.KeywordVk">
		<summary>
     holds a keyword and the associated VK_ for it
 </summary>
	</doc>
	<doc for="SendKeys.KeywordVk.KeywordVk">
	</doc>
	<doc for="SendKeys.SendKeysHookProc">
		<summary>
     this class is our callback for the journaling hook we install
 </summary>
	</doc>
	<doc for="SendKeys.SendKeysHookProc.Callback">
		<summary>
			<para>legacy code. don't doc. (may not be ripped, but don't 
       doc)</para>
		</summary>
	</doc>
	<doc for="SendKeys.SendWait">
		<summary>
			<para>Sends the given keys to the active application, and then waits for
      the messages to be processed.</para>
		</summary>
		<param name="keys">The string of keystrokes to send.</param>
		<remarks>
			<para>Use <see cref="System.Windows.Forms.SendKeys.SendWait"/> to send keystrokes
   or combinations of keystrokes to the active application and wait for the keystroke
   messages to be processed. You can use this method to send keystrokes to an
   application and wait for any processes that are started by the keystrokes to be
   completed. This can be important if the other application must finish before your
   application can continue.</para>
			<note type="note">
   Because there is no managed method to activate another application, you can
   either use this class within the current application or use native Windows
   methods, such as <see langword="FindWindow"/> and
<see langword="SetForegroundWindow"/>,
   to force focus on other
   applications.
   
</note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for unmanaged code to call this method. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
	</doc><doc for="SendKeys">
		<summary>
			<para>Provides methods for sending keystrokes to an application.</para>
		</summary>
		<remarks>
			<para>Use <see cref="System.Windows.Forms.SendKeys"/> to send
   keystrokes and keystroke combinations to the active application. This class
   cannot be instantiated. To send a keystroke to a class and immediately continue
   with the flow of your program, use <see cref="System.Windows.Forms.SendKeys.Send"/>. To wait for any processes
   started by the keystroke, use <see cref="System.Windows.Forms.SendKeys.SendWait"/>.</para>
			<para> Each key is represented by one or more characters. To specify a single keyboard
   character, use the character itself. For example, to represent the letter A,
   pass in the string "A" to the method. To represent more than
   one character, append each additional character to the one preceding it. To represent the letters
   A, B, and C, specify the parameter as "ABC".</para>
			<para>The plus sign (+), caret (^), percent sign (%), tilde
   (~), and parentheses ( ) have special meanings to <see cref="System.Windows.Forms.SendKeys"/>. To specify one of these characters,
   enclose it within braces ({}). For example, to specify the plus sign, use "{+}".
   To specify brace characters, use "{{}" and "{}}". Brackets ([ ]) have no special
   meaning to <see cref="System.Windows.Forms.SendKeys"/> , but
   you must enclose them in braces. In other applications, brackets do have a special meaning
   that might be significant when dynamic data exchange (DDE) occurs.</para>
			<para> To specify characters that aren't displayed when
   you press a key, such as ENTER or TAB, and keys that represent actions rather
   than characters, use the codes in the following table.</para>
			<list type="table"><listheader>
					<term>Key</term>
					<description>Code</description>
				</listheader>
				<item>
					<term> BACKSPACE</term>
					<description>{BACKSPACE}, {BS}, or {BKSP}</description>
				</item>
				<item>
					<term> BREAK</term>
					<description>{BREAK}</description>
				</item>
				<item>
					<term> CAPS
      LOCK </term>
					<description>{CAPSLOCK}</description>
				</item>
				<item>
					<term> DEL or DELETE </term>
					<description>{DELETE} or {DEL}</description>
				</item>
				<item>
					<term> DOWN ARROW </term>
					<description>{DOWN}</description>
				</item>
				<item>
					<term> END </term>
					<description>{END}</description>
				</item>
				<item>
					<term> ENTER </term>
					<description>{ENTER}or ~</description>
				</item>
				<item>
					<term> ESC </term>
					<description>{ESC}</description>
				</item>
				<item>
					<term> HELP </term>
					<description>{HELP}</description>
				</item>
				<item>
					<term> HOME </term>
					<description>{HOME}</description>
				</item>
				<item>
					<term> INS or INSERT </term>
					<description>{INSERT} or {INS}</description>
				</item>
				<item>
					<term> LEFT ARROW </term>
					<description>{LEFT}</description>
				</item>
				<item>
					<term> NUM
      LOCK </term>
					<description>{NUMLOCK}</description>
				</item>
				<item>
					<term> PAGE
      DOWN </term>
					<description>{PGDN}</description>
				</item>
				<item>
					<term> PAGE UP </term>
					<description>{PGUP}</description>
				</item>
				<item>
					<term> PRINT SCREEN </term>
					<description>{PRTSC} (reserved for future use)</description>
				</item>
				<item>
					<term> RIGHT ARROW </term>
					<description>{RIGHT}</description>
				</item>
				<item>
					<term> SCROLL LOCK </term>
					<description>{SCROLLLOCK}</description>
				</item>
				<item>
					<term> TAB </term>
					<description>{TAB}</description>
				</item>
				<item>
					<term> UP
      ARROW </term>
					<description>{UP}</description>
				</item>
				<item>
					<term> F1 </term>
					<description>{F1}</description>
				</item>
				<item>
					<term> F2 </term>
					<description>{F2}</description>
				</item>
				<item>
					<term> F3 </term>
					<description>{F3}</description>
				</item>
				<item>
					<term> F4 </term>
					<description>{F4}</description>
				</item>
				<item>
					<term> F5 </term>
					<description>{F5}</description>
				</item>
				<item>
					<term> F6 </term>
					<description>{F6}</description>
				</item>
				<item>
					<term> F7 </term>
					<description>{F7}</description>
				</item>
				<item>
					<term> F8 </term>
					<description>{F8}</description>
				</item>
				<item>
					<term> F9 </term>
					<description>{F9}</description>
				</item>
				<item>
					<term> F10 </term>
					<description>{F10}</description>
				</item>
				<item>
					<term> F11 </term>
					<description>{F11}</description>
				</item>
				<item>
					<term> F12 </term>
					<description>{F12}</description>
				</item>
				<item>
					<term> F13 </term>
					<description>{F13}</description>
				</item>
				<item>
					<term> F14 </term>
					<description>{F14}</description>
				</item>
				<item>
					<term> F15 </term>
					<description>{F15}</description>
				</item>
				<item>
					<term> F16 </term>
					<description>{F16}</description>
				</item>
				<item>
					<term> Keypad
      add</term>
					<description>{ADD}</description>
				</item>
				<item>
					<term> Keypad
      subtract</term>
					<description>{SUBTRACT}</description>
				</item>
				<item>
					<term> Keypad
      multiply</term>
					<description>{MULTIPLY}</description>
				</item>
				<item>
					<term> Keypad
      divide</term>
					<description>{DIVIDE}</description>
				</item>
			</list>
			<para>To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys,
   precede the key code with one or more of the following codes.</para>
			<list type="table">
				<listheader>
					<term>Key</term>
					<description>Code</description>
				</listheader>
				<item>
					<term> SHIFT </term>
					<description>+</description>
				</item>
				<item>
					<term> CTRL </term>
					<description>^</description>
				</item>
				<item>
					<term> ALT </term>
					<description>%</description>
				</item>
			</list>
			<para>To specify that any combination of SHIFT, CTRL, and ALT should be held down
   while several other keys are pressed, enclose the code for those keys in
   parentheses. For example, to specify to hold down SHIFT while E and C are
   pressed, use "+(EC)". To specify to hold down SHIFT while E is pressed, followed
   by C without SHIFT, use "+EC".</para>
			<para>To specify repeating keys, use the form {key number}. You must put a space
   between key and number. For example, {LEFT 42} means press the LEFT ARROW key 42
   times; {h 10} means press H 10 times.</para>
			<note type="note">
   Because there is no managed method to activate another application, you can
   either use this class within the current application or use native Windows
   methods, such as <see langword="FindWindow"/> and
<see langword="SetForegroundWindow"/>,
   to force focus on other
   applications.
   
</note>
		</remarks>
	</doc>
	<doc for="SendKeys.Send">
		<summary>
			<para>Sends keystrokes to the active application.</para>
		</summary>
		<param name="keys">The string of keystrokes to send.</param>
		<remarks>
			<para> Each key is represented by one or more characters. To specify a single keyboard
      character, use the character itself. For example, to represent the letter A,
      pass in the string "A" to the method. To represent more than
      one character, append each additional character to the one preceding it. To represent the letters
      A, B, and C, specify the parameter as "ABC".</para>
			<para>The plus sign (+), caret (^), percent sign (%), tilde
      (~), and parentheses ( ) have special meanings to <see cref="System.Windows.Forms.SendKeys"/>. To specify one of these characters,
      enclose it within braces ({}). For example, to specify the plus sign, use
      "{+}". To specify brace characters, use "{{}" and "{}}". Brackets ([ ])
      have no special meaning to <see cref="System.Windows.Forms.SendKeys"/> , but
      you must enclose them in braces. In other applications, brackets do have a special meaning
      that might be significant when dynamic data exchange (DDE) occurs.</para>
			<para> To specify characters that aren't displayed when
      you press a key, such as ENTER or TAB, and keys that represent actions rather
      than characters, use the codes in the following table.</para>
			<list type="table"><listheader>
					<term>Key</term>
					<description>Code</description>
				</listheader>
				<item>
					<term> BACKSPACE</term>
					<description>{BACKSPACE}, {BS}, or {BKSP}</description>
				</item>
				<item>
					<term> BREAK</term>
					<description>{BREAK}</description>
				</item>
				<item>
					<term> CAPS
         LOCK </term>
					<description>{CAPSLOCK}</description>
				</item>
				<item>
					<term> DEL or DELETE </term>
					<description>{DELETE} or {DEL}</description>
				</item>
				<item>
					<term> DOWN ARROW </term>
					<description>{DOWN}</description>
				</item>
				<item>
					<term> END </term>
					<description>{END}</description>
				</item>
				<item>
					<term> ENTER </term>
					<description>{ENTER}or ~</description>
				</item>
				<item>
					<term> ESC </term>
					<description>{ESC}</description>
				</item>
				<item>
					<term> HELP </term>
					<description>{HELP}</description>
				</item>
				<item>
					<term> HOME </term>
					<description>{HOME}</description>
				</item>
				<item>
					<term> INS or INSERT </term>
					<description>{INSERT} or {INS}</description>
				</item>
				<item>
					<term> LEFT ARROW </term>
					<description>{LEFT}</description>
				</item>
				<item>
					<term> NUM
         LOCK </term>
					<description>{NUMLOCK}</description>
				</item>
				<item>
					<term> PAGE
         DOWN </term>
					<description>{PGDN}</description>
				</item>
				<item>
					<term> PAGE UP </term>
					<description>{PGUP}</description>
				</item>
				<item>
					<term> PRINT SCREEN </term>
					<description>{PRTSC} (reserved for future use)</description>
				</item>
				<item>
					<term> RIGHT ARROW </term>
					<description>{RIGHT}</description>
				</item>
				<item>
					<term> SCROLL LOCK </term>
					<description>{SCROLLLOCK}</description>
				</item>
				<item>
					<term> TAB </term>
					<description>{TAB}</description>
				</item>
				<item>
					<term> UP
         ARROW </term>
					<description>{UP}</description>
				</item>
				<item>
					<term> F1 </term>
					<description>{F1}</description>
				</item>
				<item>
					<term> F2 </term>
					<description>{F2}</description>
				</item>
				<item>
					<term> F3 </term>
					<description>{F3}</description>
				</item>
				<item>
					<term> F4 </term>
					<description>{F4}</description>
				</item>
				<item>
					<term> F5 </term>
					<description>{F5}</description>
				</item>
				<item>
					<term> F6 </term>
					<description>{F6}</description>
				</item>
				<item>
					<term> F7 </term>
					<description>{F7}</description>
				</item>
				<item>
					<term> F8 </term>
					<description>{F8}</description>
				</item>
				<item>
					<term> F9 </term>
					<description>{F9}</description>
				</item>
				<item>
					<term> F10 </term>
					<description>{F10}</description>
				</item>
				<item>
					<term> F11 </term>
					<description>{F11}</description>
				</item>
				<item>
					<term> F12 </term>
					<description>{F12}</description>
				</item>
				<item>
					<term> F13 </term>
					<description>{F13}</description>
				</item>
				<item>
					<term> F14 </term>
					<description>{F14}</description>
				</item>
				<item>
					<term> F15 </term>
					<description>{F15}</description>
				</item>
				<item>
					<term> F16 </term>
					<description>{F16}</description>
				</item>
				<item>
					<term> Keypad add</term>
					<description>{ADD}</description>
				</item>
				<item>
					<term> Keypad subtract</term>
					<description>{SUBTRACT}</description>
				</item>
				<item>
					<term> Keypad multiply</term>
					<description>{MULTIPLY}</description>
				</item>
				<item>
					<term> Keypad divide</term>
					<description>{DIVIDE}</description>
				</item>
			</list>
			<para>To specify keys combined with any combination of the SHIFT, CTRL, and ALT keys,
   precede the key code with one or more of the following codes.</para>
			<list type="table"><listheader>
					<term>Key</term>
					<description>Code</description>
				</listheader>
				<item>
					<term> SHIFT </term>
					<description>+</description>
				</item>
				<item>
					<term> CTRL </term>
					<description>^</description>
				</item>
				<item>
					<term> ALT </term>
					<description>%</description>
				</item>
			</list>
			<para>To specify that any combination of SHIFT, CTRL, and ALT should be held down
   while several other keys are pressed, enclose the code for those keys in
   parentheses. For example, to specify to hold down SHIFT while E and C are
   pressed, use "+(EC)". To specify to hold down SHIFT while E is pressed, followed
   by C without SHIFT, use "+EC".</para>
			<para>To specify repeating keys, use the form {key number}. You must put a space
   between key and number. For example, {LEFT 42} means press the LEFT ARROW key 42
   times; {h 10} means press H 10 times.</para>
			<note type="note">
   Because there is no managed method to activate another application, you can
   either use this class within the current application or use native Windows
   methods, such as <see langword="FindWindow"/> and
<see langword="SetForegroundWindow"/>,
   to force focus on other
   applications.
   
</note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for unmanaged code to call this method. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
	</doc>
	<doc for="SendKeys.Flush">
		<summary>
			<para>Processes all the Windows messages currently in the message queue.</para>
		</summary>
		<remarks>
			<para> Use <see cref="System.Windows.Forms.SendKeys.Flush"/> to wait for the 
   application to process keystrokes and other operating system messages that
   are in the message queue. This is equivalent to calling <see cref="System.Windows.Forms.Application.DoEvents" qualify="true"/> until
   there are no more keys to
   process.</para>
			<note type="note">
   Because there is no managed method to activate another application, you can
   either use this class within the current application or use native Windows
   methods, such as <see langword="FindWindow"/> and
<see langword="SetForegroundWindow"/>,
   to force focus on other
   applications.
   
</note>
		</remarks>
	</doc>
</docs>
