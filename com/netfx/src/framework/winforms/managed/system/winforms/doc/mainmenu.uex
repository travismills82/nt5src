<docs>
	<doc for="MainMenu.MainMenu">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.MainMenu"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.MainMenu"/> class 
    without any specified menu items.</para>
		</summary>
		<remarks>
			<para>This version of the constructor creates a <see cref="System.Windows.Forms.MainMenu"/> 
 without any specified <see cref="System.Windows.Forms.MenuItem"/> objects. To add menu items to the control use
 the other version of this constructor that accepts an array of <see cref="System.Windows.Forms.MenuItem"/>
 objects as its parameter or use
 the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method of the <see cref="System.Windows.Forms.Menu.MenuItems"/>
 property.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.MainMenu"/>, assigns two <see cref="System.Windows.Forms.MenuItem"/> 
 objects to the <see cref="System.Windows.Forms.MainMenu"/> and binds it to a form. This example assumes
 that you have a <see cref="System.Windows.Forms.Form"/> created that is named <c>Form1</c>.</para>
			<codelink SampleID="Classic MainMenu.MainMenu Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Add" qualify="true"/>
		<seealso cref="System.Windows.Forms.Form.Menu"/>
		<seealso cref="System.Windows.Forms.Menu.MenuItems" qualify="true"/>
	</doc>
	<doc for="MainMenu.CreateMenuHandle">
		<summary>
		</summary>
	</doc>
	<doc for="MainMenu.GetForm">
		<summary>
			<para> Gets the <see cref="System.Windows.Forms.Form"/> that contains this control.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Windows.Forms.Form"/> that is 
    the container for this control. Returns <see langword="null"/> if
    the <see cref="System.Windows.Forms.MainMenu"/> is not currently hosted on a form.</para>
		</returns>
		<remarks>
			<para>This property enables you to determine if a 
       specific <see cref="System.Windows.Forms.MainMenu"/> is parented to a form. The property is
       typically used when multiple <see cref="System.Windows.Forms.MainMenu"/> objects are being used on a
       form and you need to determine which one is currently being used by a form.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.MainMenu.GetForm"/> method to determine if 
    a <see cref="System.Windows.Forms.MainMenu"/> is currently parented to the form. If the call
    in the example code to <see cref="System.Windows.Forms.MainMenu.GetForm"/> does not return a null, the
    code then clones the menu structure of the <see cref="System.Windows.Forms.MainMenu"/> using the <see cref="System.Windows.Forms.MainMenu.CloneMenu"/> method. The code then sets
    the <see cref="System.Windows.Forms.MainMenu.RightToLeft"/> property to true on the new copy of
    the <see cref="System.Windows.Forms.MainMenu"/> to create a <see cref="System.Windows.Forms.MainMenu"/> that
    can be used for languages that support right to left text. This example assumes that you have
    a <see cref="System.Windows.Forms.MainMenu"/> created that is named <c>mainMenu1</c>.</para>
			<codelink SampleID="Classic MainMenu.GetForm Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.Form"/>
	</doc>
	<doc for="MainMenu.ItemsChanged">
		<summary>
		</summary>
	</doc>
	<doc for="MainMenu.ItemsChanged1">
		<summary>
		</summary>
	</doc>
	<doc for="MainMenu.ShouldSerializeRightToLeft">
		<summary>
			<para>Indicates whether the <see cref="System.Windows.Forms.MainMenu.RightToLeft"/> property should be persisted.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the property value has changed 
    from its default; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>You typically use this method if you are either creating a designer for the 
    <see cref="System.Windows.Forms.MainMenu"/> or creating your own control incorporating the 
    <see cref="System.Windows.Forms.MainMenu"/>.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.MainMenu.RightToLeft"/>
	</doc>
	<doc for="MainMenu.ToString">
		<summary>
     Returns a string representation for this control.
 </summary>
		<returns>
     String
 </returns>
	</doc>
	<doc for="MainMenu.MainMenu1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Windows.Forms.MainMenu"/> with a specified set
   of <see cref="System.Windows.Forms.MenuItem"/> objects.</para>
		</summary>
		<param name="items">An array of <see cref="System.Windows.Forms.MenuItem"/> objects that will be added to the <see cref="System.Windows.Forms.MainMenu"/> .</param>
		<remarks>
			<para>You can use this constructor to assign an array
      of <see cref="System.Windows.Forms.MenuItem"/> objects to the <see cref="System.Windows.Forms.MainMenu"/> at
      the time of its creation. After the <see cref="System.Windows.Forms.MainMenu"/> has been created you can add
      additional <see cref="System.Windows.Forms.MenuItem"/> objects to the <see cref="System.Windows.Forms.MainMenu"/> using the <see cref="System.Windows.Forms.Menu.MenuItemCollection.Add"/> method of
      the <see cref="System.Windows.Forms.Menu.MenuItems"/>
      property. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.MainMenu"/>, and
   assigns two <see cref="System.Windows.Forms.MenuItem"/> objects to the <see cref="System.Windows.Forms.MainMenu"/> using this version of the constructor.
   The example then binds the <see cref="System.Windows.Forms.MainMenu"/> to a <see cref="System.Windows.Forms.Form"/> . This
   example assumes that you have a <see cref="System.Windows.Forms.Form"/> created that is named <c>Form1</c>.</para>
			<codelink SampleID="Classic MainMenu.MainMenu1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MenuItem"/>
	</doc>
	<doc for="MainMenu.Dispose">
		<nodoc/>
		<summary>
			<para>Disposes of the resources (other than memory) used by the <see cref="System.Windows.Forms.MainMenu"/>.</para>
		</summary>
		<remarks>
			<para>Call <see cref="System.Windows.Forms.MainMenu.Dispose"/> when you are finished using the
<see cref="System.Windows.Forms.MainMenu"/>. The <see cref="System.Windows.Forms.MainMenu.Dispose"/> method leaves the
<see cref="System.Windows.Forms.MainMenu"/> in an unusable state. After calling <see cref="System.Windows.Forms.MainMenu.Dispose"/>, you must release all references to
   the <see cref="System.Windows.Forms.MainMenu"/> so the memory it was occupying can be reclaimed
   by garbage collection. </para>
			<note type="note">
   Always call <see cref="System.Windows.Forms.MainMenu.Dispose"/> before you release your last reference
   to the <see cref="System.Windows.Forms.MainMenu"/>. Otherwise, the resources the <see cref="System.Windows.Forms.MainMenu"/> is
   using will not be freed until garbage collection calls the <see cref="System.Windows.Forms.MainMenu"/>
   object's destructor.
   
</note>
		</remarks>
	</doc><doc for="MainMenu">
		<summary>
			<para> Represents the menu structure of a form.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.MainMenu"/> control represents the container for the
 menu structure of a form. A menu is composed of <see cref="System.Windows.Forms.MenuItem"/> objects that
 represent the individual menu commands in the menu structure. Each <see cref="System.Windows.Forms.MenuItem"/> can
 be a command for your application or a parent menu for other submenu items. To
 bind the <see cref="System.Windows.Forms.MainMenu"/> to the <see cref="System.Windows.Forms.Form"/> that will display it, assign
 the <see cref="System.Windows.Forms.MainMenu"/> to the <see cref="System.Windows.Forms.Form.Menu"/> property of the <see cref="System.Windows.Forms.Form"/>
 .</para>
			<para>For applications that will have support for multiple
 languages, you can use the <see cref="System.Windows.Forms.MainMenu.RightToLeft"/> property to display the text
 of the menu from right to left to support languages such as Arabic, which read
 from right to
 left.</para>
			<para>You can create different <see cref="System.Windows.Forms.MainMenu"/>
objects to represent different menu strutures for your form. If you want to
reuse the menu structure contained in a specific <see cref="System.Windows.Forms.MainMenu"/>, you
can use its <see cref="System.Windows.Forms.MainMenu.CloneMenu"/> method to create a copy. Once you have a copy
of the menu structure, you can make the appropriate modifications for your new
menu
structure.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Windows.Forms.MainMenu"/>,
 assigns two <see cref="System.Windows.Forms.MenuItem"/> objects to the <see cref="System.Windows.Forms.MainMenu"/> and
 binds it to a form. This example assumes that you have a <see cref="System.Windows.Forms.Form"/> created
 that is named <c>Form1</c>.</para>
			<codelink SampleID="Classic MainMenu.MainMenu Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.MenuItem"/>
		<seealso cref="System.Windows.Forms.Menu.MenuItemCollection.Add" qualify="true"/>
		<seealso cref="System.Windows.Forms.Form.Menu"/>
		<seealso cref="System.Windows.Forms.Menu.MenuItems" qualify="true"/>
	</doc>
	<doc for="MainMenu.RightToLeft">
		<summary>
			<para>Gets or sets whether the text displayed by the control is displayed from right to
 left.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Windows.Forms.RightToLeft"/> values.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value assigned to the property is not a valid member of the <see cref="System.Windows.Forms.RightToLeft"/> enumeration.</exception>
		<remarks>
			<para>This property allows your menus to support languages
 that are written from right to left. When this property is set to
 <see langword="RightToLeft.Yes"/>
 , the menu
 item text will be displayed from right to left instead of the default
 left to right method. </para>
			<note type="note">
 For more information about
 how enabling right-to-left alignment affects Windows Forms controls, see the <see cref="System.Windows.Forms.Control.RightToLeft"/> property.
</note>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.MainMenu.GetForm"/> method to determine if
 a <see cref="System.Windows.Forms.MainMenu"/> is currently parented to the form. If the call
 in the example code to <see cref="System.Windows.Forms.MainMenu.GetForm"/> does not return a null, the
 code then clones the menu structure of the <see cref="System.Windows.Forms.MainMenu"/> using the <see cref="System.Windows.Forms.MainMenu.CloneMenu"/> method. The example code then sets the <see cref="System.Windows.Forms.MainMenu.RightToLeft"/> property to
<see langword="RightToLeft.Yes"/> on the new copy of the <see cref="System.Windows.Forms.MainMenu"/> to create a <see cref="System.Windows.Forms.MainMenu"/> that can be used for languages that support right to left text. This example assumes that you have
 a <see cref="System.Windows.Forms.MainMenu"/> created that is named <c>mainMenu1</c>.</para>
			<codelink SampleID="Classic MainMenu.RightToLeft Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.RightToLeft"/>
	</doc><doc for="MainMenu.CloneMenu">
		<overload>
			<para>Creates a copy of the menu object.</para>
		</overload>
		<summary>
			<para>Creates a new <see cref="System.Windows.Forms.MainMenu"/> that is a duplicate of the
   current <see cref="System.Windows.Forms.MainMenu"/> .</para>
		</summary>
		<returns>
			<para>A <see cref="System.Windows.Forms.MainMenu"/> that represents the cloned menu.</para>
		</returns>
		<remarks>
			<para> You can use this method to create a copy of the menu structure stored in
      a <see cref="System.Windows.Forms.MainMenu"/>. You can use this method to reuse the
      menu structure stored in a <see cref="System.Windows.Forms.MainMenu"/> as the foundation for a
      new <see cref="System.Windows.Forms.MainMenu"/>. For example, if you want to create a menu
      structure that has the same menu items as an existing <see cref="System.Windows.Forms.MainMenu"/> but
      will also have additional <see cref="System.Windows.Forms.MenuItem"/> objects added to it, you can use
      the <see cref="System.Windows.Forms.MainMenu.CloneMenu"/> method to create a copy of the
      original <see cref="System.Windows.Forms.MainMenu"/> and then add the new <see cref="System.Windows.Forms.MenuItem"/>
      objects to the cloned <see cref="System.Windows.Forms.MainMenu"/>
      .</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Windows.Forms.MainMenu.GetForm"/> method to determine if
   a <see cref="System.Windows.Forms.MainMenu"/> is currently parented to the form. If the call
   in the example code to <see cref="System.Windows.Forms.MainMenu.GetForm"/> does not return a null, the
   code then clones the menu structure of the <see cref="System.Windows.Forms.MainMenu"/> using the <see cref="System.Windows.Forms.MainMenu.CloneMenu"/> method. The code then sets the <see cref="System.Windows.Forms.MainMenu.RightToLeft"/> property to true on the new copy of the <see cref="System.Windows.Forms.MainMenu"/> to create a <see cref="System.Windows.Forms.MainMenu"/> that can be used for languages that support right to left text. This example assumes that you have
   a <see cref="System.Windows.Forms.MainMenu"/> created that is named <c>mainMenu1</c>.</para>
			<codelink SampleID="Classic MainMenu.GetForm Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
