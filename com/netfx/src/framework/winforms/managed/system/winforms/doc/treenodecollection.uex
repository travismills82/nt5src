<docs>
	<doc for="TreeNodeCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="TreeNodeCollection">
		<summary>
			<para>Represents a collection of <see cref="System.Windows.Forms.TreeNode"/> objects.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeNodeCollection.Add"/> , <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/>, and <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> methods enable you to add and remove
   individual tree nodes from the collection. You can also use the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/>
   or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> methods to add
   or remove all
   the tree nodes from the collection.</para>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects. This example assumes you have a Customer object that can hold a collection of Order objects. It also assumes that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/> control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeView"/>
		<seealso cref="System.Windows.Forms.TreeNode"/>
	</doc>
	<doc for="TreeNodeCollection.Add">
		<overload>
			<para>Adds a new tree node to the collection.</para>
		</overload>
		<summary>
			<para>Adds a new tree node to the end of the current tree node collection with the specified label text.</para>
		</summary>
		<param name="text">The label text displayed by the <see cref="System.Windows.Forms.TreeNode"/> .</param>
		<returns>
			<para>A <see cref="System.Windows.Forms.TreeNode"/> that represents the tree node being added to the
   collection.</para>
		</returns>
		<remarks>
			<para>You can also add new <see cref="System.Windows.Forms.TreeNode"/> objects to the collection by using
   the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> methods.</para>
			<para> To remove
   a <see cref="System.Windows.Forms.TreeNode"/> that you previously added, use
   the <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/> , <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/>
   methods.</para>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects. This example assumes you have a Customer object that can hold a collection of Order objects. It also assumes that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/> control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.Remove"/>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/>
	</doc>
	<doc for="TreeNodeCollection.Add1">
		<summary>
			<para>Adds a previously created tree node to the end of the tree node collection.</para>
		</summary>
		<param name="node">The <see cref="System.Windows.Forms.TreeNode"/> to add to the collection.</param>
		<returns>
			<para>The zero-based index value of the <see cref="System.Windows.Forms.TreeNode"/>
added to the tree node collection. </para>
		</returns>
		<exception cref="System.Exception">The <paramref name="node"/> is currently assigned to another <see cref="System.Windows.Forms.TreeView"/> control.</exception>
		<remarks>
			<para>This version of the <see cref="System.Windows.Forms.TreeNodeCollection.Add"/> method allows you to add
   previously created <see cref="System.Windows.Forms.TreeNode"/>
   objects to the end of the tree node collection.</para>
			<para>You can also add new <see cref="System.Windows.Forms.TreeNode"/> objects to the collection by using
the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> methods.</para>
			<para>To remove a <see cref="System.Windows.Forms.TreeNode"/> that you previously added, use the
<see cref="System.Windows.Forms.TreeNodeCollection.Remove"/>, <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> methods.</para>
			<note type="note">
   A <see cref="System.Windows.Forms.TreeNode"/> object can only be assigned to one <see cref="System.Windows.Forms.TreeView"/>
   control at a time. To add the tree node to a new tree view control, you must remove it from the other tree view first, or clone it.
</note>
		</remarks>
		<example>
			<para>The following example displays customer information in a <see cref="System.Windows.Forms.TreeView"/>
control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each
customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <see cref="System.Windows.Forms.TreeView"/> is suppressed by using
the <see cref="System.Windows.Forms.TreeView.BeginUpdate"/> and <see cref="System.Windows.Forms.TreeView.EndUpdate"/> methods, and a wait <see cref="System.Windows.Forms.Cursor"/> is displayed
while the <see cref="System.Windows.Forms.TreeView"/> creates and paints the <see cref="System.Windows.Forms.TreeNode"/> objects.
This example assumes you have a Customer object that can hold a collection of
Order objects. It also assumes that you have created an instance of a <see cref="System.Windows.Forms.TreeView"/>
control on a <see cref="System.Windows.Forms.Form"/> . </para>
			<codelink SampleID="TreeView" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.Remove"/>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/>
	</doc>
	<doc for="TreeNodeCollection.IndexOf">
		<summary>
			<para> Returns the index of the specified tree node in the collection.</para>
		</summary>
		<param name="node">The <see cref="System.Windows.Forms.TreeNode"/> to locate in the collection.</param>
		<returns>
			<para> The zero-based index of the item found in the tree node collection;
      otherwise, -1.</para>
		</returns>
		<example>
			<para>The following example determines if a specified <see cref="System.Windows.Forms.TreeNode"/> is within a <see cref="M:System.Windows.Forms.TreeNodeCollection.#ctor"/> and enumerates the collection. This example assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.TreeView"/> that has a <see cref="System.Windows.Forms.TreeNodeCollection"/> that contains a <see cref="System.Windows.Forms.TreeNode"/> named <c>myTreeNode2</c> .</para>
			<codelink SampleID="TreeNodeCollection_Contains_GetEnumerator" SnippetID="2"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.AddRange">
		<summary>
			<para>Adds an array of previously created tree
      nodes to the collection.</para>
		</summary>
		<param name="nodes">An array of <see cref="System.Windows.Forms.TreeNode"/> objects representing the tree nodes to add to the collection.</param>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeNode"/> objects contained in the <paramref name="nodes"/>
array are appended to the end of the collection.</para>
			<para>You can use the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> method to quickly add a group of previously created <see cref="System.Windows.Forms.TreeNode"/>
objects to the collection instead of manually adding each <see cref="System.Windows.Forms.TreeNode"/>
to the collection using the <see cref="System.Windows.Forms.TreeNodeCollection.Add"/> method.</para>
			<para>To remove a <see cref="System.Windows.Forms.TreeNode"/> that you previously added, use the
<see cref="System.Windows.Forms.TreeNodeCollection.Remove"/>, <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> methods.</para>
		</remarks>
		<example>
			<para>The following example copies the <see cref="System.Windows.Forms.TreeNodeCollection"/> from a <see cref="System.Windows.Forms.TreeView"/> to a temporary <see cref="System.Array"/>, then adds the contents of the array to another <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> method. The <see cref="System.Windows.Forms.TreeNodeCollection"/> from the source <see cref="System.Windows.Forms.TreeView"/> is cleared using the <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> method. This example assumes you have two <see cref="System.Windows.Forms.TreeView"/> controls, one with a collection of <see cref="System.Windows.Forms.TreeNode"/> objects. </para>
			<codelink SampleID="TreeNodeCollection_Clear" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.Add"/>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.CopyTo"/>
	</doc>
	<doc for="TreeNodeCollection.Count">
		<summary>
			<para> Gets the total number of <see cref="System.Windows.Forms.TreeNode"/> objects in the
   collection.</para>
		</summary>
		<value>
			<para>The total number of <see cref="System.Windows.Forms.TreeNode"/> objects in the collection.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Windows.Forms.TreeNodeCollection.Count"/> property holds
   the number of <see cref="System.Windows.Forms.TreeNode"/> objects assigned to the
   collection. You can use the <see cref="System.Windows.Forms.TreeNodeCollection.Count"/> property value as the
   upper bounds of a loop to iterate through a
   
   collection.</para>
			<note type="note">
   
   Because the
   index value of a collection is a zero-based index, you must subtract one from the
   looping variable. If you do not account for this, you will exceed the upper
   bounds of the collection and throw an <see cref="System.IndexOutOfRangeException"/> exception.
</note>
		</remarks>
		<example>
			<para>The following example displays the number of <see cref="System.Windows.Forms.TreeNode"/> objects in a <see cref="System.Windows.Forms.TreeNodeCollection"/> and copies the contents of the collection
   to an <see cref="System.Object"/>
   array and displays a list of the tree nodes in a <see cref="System.Windows.Forms.Label"/> control. This example
   assumes you have a <see cref="System.Windows.Forms.TreeView"/> with at least one <see cref="System.Windows.Forms.TreeNode"/>
   in its <see cref="System.Windows.Forms.TreeNodeCollection"/> and a <see cref="System.Windows.Forms.Label"/> control on a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="TreeNodeCollection_Count_CopyTo" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.Contains">
		<summary>
			<para>Determines whether the specified tree node
      is a member of the collection.</para>
		</summary>
		<param name="node">The <see cref="System.Windows.Forms.TreeNode"/> to locate in the collection.</param>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Windows.Forms.TreeNode"/>
is a member of the collection; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>This method enables you to determine whether a <see cref="System.Windows.Forms.TreeNode"/> is
   a member of the collection before attempting to perform operations on the
<see cref="System.Windows.Forms.TreeNode"/>. You can use this method to confirm that a 
<see cref="System.Windows.Forms.TreeNode"/> has been added to or is still a 
   member of the collection.</para>
		</remarks>
		<example>
			<para>The following example determines if a specified
   <see cref="System.Windows.Forms.TreeNode"/> is within a <see cref="System.Windows.Forms.TreeNodeCollection"/> and enumerates the collection. This
      example assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.TreeView"/> that has a <see cref="System.Windows.Forms.TreeNodeCollection"/> that contains a <see cref="System.Windows.Forms.TreeNode"/>
      named <c>myTreeNode2</c>
   
   .</para>
			<codelink SampleID="TreeNodeCollection_Contains_GetEnumerator" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.Clear">
		<summary>
			<para> Removes all tree nodes from the collection.</para>
		</summary>
		<remarks>
			<para> You can use this method to clear the entire collection
      of tree nodes from a tree view.</para>
			<para> To remove an individual tree node from the collection,
      use the <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/> or <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> methods. </para>
			<para> To
      add new <see cref="System.Windows.Forms.TreeNode"/> objects to the collection, use the <see cref="System.Windows.Forms.TreeNodeCollection.Add"/> , <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> methods.</para>
		</remarks>
		<example>
			<para>The following example copies the <see cref="System.Windows.Forms.TreeNodeCollection"/> from a <see cref="System.Windows.Forms.TreeView"/> to a temporary <see cref="System.Array"/>, then adds the contents of the array to another <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> method. The <see cref="System.Windows.Forms.TreeNodeCollection"/> from the source <see cref="System.Windows.Forms.TreeView"/> is cleared using the <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> method. This example assumes you have two <see cref="System.Windows.Forms.TreeView"/> controls, one with a collection of <see cref="System.Windows.Forms.TreeNode"/> objects. </para>
			<codelink SampleID="TreeNodeCollection_Clear" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.CopyTo">
		<summary>
			<para>Copies the entire collection into an existing array at a
      specified location within the array.</para>
		</summary>
		<param name="dest">The destination array.</param>
		<param name=" index">The index in the destination array at which storing begins.</param>
		<example>
			<para>The following example displays the number of <see cref="System.Windows.Forms.TreeNode"/> objects in a <see cref="System.Windows.Forms.TreeNodeCollection"/> and copies the contents of the collection to an <see cref="System.Object"/> array and displays a list of the tree nodes in a <see cref="System.Windows.Forms.Label"/> control. This example assumes you have a <see cref="System.Windows.Forms.TreeView"/> with at least one <see cref="System.Windows.Forms.TreeNode"/> in its <see cref="System.Windows.Forms.TreeNodeCollection"/> and a <see cref="System.Windows.Forms.Label"/> control on a <see cref="System.Windows.Forms.Form"/>.</para>
			<codelink SampleID="TreeNodeCollection_Count_CopyTo" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can be used to iterate through the tree node
      collection.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> object that represents the tree node collection.</para>
		</returns>
		<example>
			<para>The following example determines if a specified
   <see cref="System.Windows.Forms.TreeNode"/> is within a 
   <see cref="System.Windows.Forms.TreeNodeCollection"/> and enumerates the collection. This
      example assumes you have a <see cref="System.Windows.Forms.Form"/> with a <see cref="System.Windows.Forms.TreeView"/> that has a <see cref="System.Windows.Forms.TreeNodeCollection"/> that contains a <see cref="System.Windows.Forms.TreeNode"/>
      named <c>myTreeNode2</c>
   
   .</para>
			<codelink SampleID="TreeNodeCollection_Contains_GetEnumerator" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.this">
		<summary>
			<para>Indicates the <see cref="System.Windows.Forms.TreeNode"/> at the specified
   indexed location in the collection.</para>
		</summary>
		<param name="index">The indexed location of the <see cref="System.Windows.Forms.TreeNode"/> in the collection.</param>
		<value>
			<para>The <see cref="System.Windows.Forms.TreeNode"/> at the specified indexed location in the
   collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><para>The <paramref name="index"/> value is less than zero or is greater than the number of tree nodes in the collection.</para></exception>
		<remarks>
			<para>To assign <see cref="System.Windows.Forms.TreeNode"/> objects to a specific
   location, or to retrieve them from the <see cref="System.Windows.Forms.TreeNodeCollection"/>, you can reference the
   collection object with a specific index value. The index value of the <see cref="System.Windows.Forms.TreeNodeCollection"/> is a zero-based index.</para>
		</remarks>
		<example>
			<para> The following example removes the first <see cref="System.Windows.Forms.TreeNode"/> from a <see cref="System.Windows.Forms.TreeView"/> if its
<see cref="System.Windows.Forms.TreeNode.Text" qualify="true"/> property is set to "Node0". When a <see cref="System.Windows.Forms.Button"/> is clicked, the first <see cref="System.Windows.Forms.TreeNode"/> in the <see cref="System.Windows.Forms.TreeView"/> is deleted using the <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> method. This example 
   assumes you have created a <see cref="System.Windows.Forms.TreeView"/> and a <see cref="System.Windows.Forms.Button"/> on a <see cref="System.Windows.Forms.Form"/>. The
   first <see cref="System.Windows.Forms.TreeNode"/> in your <see cref="System.Windows.Forms.TreeView"/> should have a text
   property of "Node0." </para>
			<codelink SampleID="TreeNodeCollection" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.Count"/>
	</doc>
	<doc for="TreeNodeCollection.Insert">
		<summary>
			<para>Inserts an existing tree node in the tree node collection at the specified location.</para>
		</summary>
		<param name="index">The indexed location within the collection to insert the tree node. </param>
		<param name="node">The <see cref="System.Windows.Forms.TreeNode"/> to insert into the collection. </param>
		<exception cref="System.ArgumentException">The <paramref name="node"/> is currently assigned to another <see cref="System.Windows.Forms.TreeView"/> control.</exception>
		<remarks>
			<para>If the <see cref="System.Windows.Forms.TreeView.Sorted" qualify="true"/> property is set to
<see langword="true"/>, the <paramref name="index"/> parameter value is ignored. The 
<see cref="System.Windows.Forms.TreeNode"/> is inserted into the tree view and the <see cref="System.Windows.Forms.TreeView"/> 
resorted.</para>
			<para>You can also add new <see cref="System.Windows.Forms.TreeNode"/> objects to the collection by using
the <see cref="System.Windows.Forms.TreeNodeCollection.Add"/> or <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/> methods.</para>
			<para>To remove a <see cref="System.Windows.Forms.TreeNode"/> that you previously added, use the
<see cref="System.Windows.Forms.TreeNodeCollection.Remove"/>, <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> methods.</para>
			<note type="note">
   A <see cref="System.Windows.Forms.TreeNode"/> object can only be assigned to one <see cref="System.Windows.Forms.TreeView"/>
   control at a time. To add the tree node to a new tree view control, you must remove it from the other tree view first, or clone it.
</note>
		</remarks>
		<example>
			<para>The following example removes the selected tree node from one <see cref="System.Windows.Forms.TreeView"/> and adds it to another if both tree node collections are not read-only. When a <see cref="System.Windows.Forms.Button"/> is clicked, the <see cref="System.Windows.Forms.TreeNode"/>
represented by the <see cref="System.Windows.Forms.TreeView.SelectedNode" qualify="true"/> property is deleted from one <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/> method and added to the other <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> method. This example assumes you have a <see cref="System.Windows.Forms.Form"/> that contains two <see cref="System.Windows.Forms.TreeView"/>
controls and a <see cref="System.Windows.Forms.Button"/>. The <see cref="System.Windows.Forms.TreeView"/> controls should be named <c>treeView1</c> and <c>treeView2</c>.</para>
			<codelink SampleID="TreeNodeCollection" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TreeNodeCollection.Remove">
		<summary>
			<para>Removes the specified tree node from the tree node collection.</para>
		</summary>
		<param name="node">The <see cref="System.Windows.Forms.TreeNode"/> to remove.</param>
		<remarks>
			<para>When a <see cref="System.Windows.Forms.TreeNode"/> is removed from
   the tree node collection, all subsequent tree nodes are moved up one position in the collection.</para>
			<para>You can also remove a <see cref="System.Windows.Forms.TreeNode"/> that you previously added by using
the <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/> methods.</para>
			<para> To add new <see cref="System.Windows.Forms.TreeNode"/> objects to the collection, use the <see cref="System.Windows.Forms.TreeNodeCollection.Add"/> , <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/>, or <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> methods.</para>
		</remarks>
		<example>
			<para>The following example removes the selected tree node from one <see cref="System.Windows.Forms.TreeView"/> and adds it to another if both tree node collections are not read-only. When a <see cref="System.Windows.Forms.Button"/> is clicked, the <see cref="System.Windows.Forms.TreeNode"/>
represented by the <see cref="System.Windows.Forms.TreeView.SelectedNode" qualify="true"/> property is deleted from one <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/> method and added to the other <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> method. This example
assumes you have a <see cref="System.Windows.Forms.Form"/> that contains two <see cref="System.Windows.Forms.TreeView"/>
controls and a <see cref="System.Windows.Forms.Button"/>. The <see cref="System.Windows.Forms.TreeView"/> controls should be named <c>treeView1</c> and <c>treeView2</c>.</para>
			<codelink SampleID="TreeNodeCollection" SnippetID="1"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/>
	</doc>
	<doc for="TreeNodeCollection.RemoveAt">
		<summary>
			<para>Removes a tree node from the tree node collection at a specified index.</para>
		</summary>
		<param name="index">The index of the <see cref="System.Windows.Forms.TreeNode"/> to remove.</param>
		<remarks>
			<para>When a <see cref="System.Windows.Forms.TreeNode"/> is removed from the tree node collection,
   all subsequent tree nodes are moved up one position in the collection.</para>
			<para>You can also remove a <see cref="System.Windows.Forms.TreeNode"/> that you previously added by using
the <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/> or <see cref="System.Windows.Forms.TreeNodeCollection.Clear"/>
methods.</para>
			<para>To add new <see cref="System.Windows.Forms.TreeNode"/> objects to the collection, use the <see cref="System.Windows.Forms.TreeNodeCollection.Add"/>, <see cref="System.Windows.Forms.TreeNodeCollection.AddRange"/>, or <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> methods.</para>
		</remarks>
		<example>
			<para>The following example removes the first <see cref="System.Windows.Forms.TreeNode"/> from a <see cref="System.Windows.Forms.TreeView"/> if its <see cref="System.Windows.Forms.TreeNode.Text" qualify="true"/> property is set to "Node0". When a <see cref="System.Windows.Forms.Button"/> is clicked, the first <see cref="System.Windows.Forms.TreeNode"/> in the <see cref="System.Windows.Forms.TreeView"/> is deleted using the <see cref="System.Windows.Forms.TreeNodeCollection.RemoveAt"/> method. This example assumes you have created a <see cref="System.Windows.Forms.TreeView"/> and a <see cref="System.Windows.Forms.Button"/> on a <see cref="System.Windows.Forms.Form"/>. The first <see cref="System.Windows.Forms.TreeNode"/> in your <see cref="System.Windows.Forms.TreeView"/> should have a text property of "Node0." </para>
			<codelink SampleID="TreeNodeCollection" SnippetID="2"/>
		</example>
		<seealso cref="System.Windows.Forms.TreeNodeCollection.Remove"/>
	</doc>
	<doc for="TreeNodeCollection.IsReadOnly">
		<summary>
			<para> Gets a value indicating whether the collection is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the collection is read-only; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<example>
			<para>The following example removes the selected tree node from one <see cref="System.Windows.Forms.TreeView"/> and adds it to another if both tree node collections are not read-only. When a <see cref="System.Windows.Forms.Button"/> is clicked, the <see cref="System.Windows.Forms.TreeNode"/>
represented by the <see cref="System.Windows.Forms.TreeView.SelectedNode" qualify="true"/> property is deleted from one <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.Remove"/> method and added to the other <see cref="System.Windows.Forms.TreeView"/> using the <see cref="System.Windows.Forms.TreeNodeCollection.Insert"/> method. This example assumes you have a <see cref="System.Windows.Forms.Form"/> that contains two <see cref="System.Windows.Forms.TreeView"/>
controls and a <see cref="System.Windows.Forms.Button"/>. The <see cref="System.Windows.Forms.TreeView"/> controls should be named <c>treeView1</c> and <c>treeView2</c>.</para>
			<codelink SampleID="TreeNodeCollection" SnippetID="1"/>
		</example>
	</doc>
</docs>
