<docs>
	<doc for="JScriptCodeProvider">
		<summary>
			<para> Provides access to instances of the JScript code generator and code compiler.</para>
		</summary>
		<remarks>
			<para>This interface provides methods that can be used to retrieve instances of the
      JScript <see cref="System.CodeDom.Compiler.ICodeGenerator"/> and <see cref="System.CodeDom.Compiler.ICodeCompiler"/> implementations.</para>
		</remarks>
		<seealso cref="System.CodeDom.Compiler.ICodeGenerator"/>
		<seealso cref="System.CodeDom.Compiler.ICodeCompiler"/>
		<seealso cref="System.CodeDom"/>
		<seealso cref="System.CodeDom.Compiler"/>
	</doc>
	<doc for="JScriptCodeProvider.JScriptCodeProvider">
		<summary>
    Initializes a new instance of the <see cref="Microsoft.JScript.JScriptCodeProvider"/> class.
 </summary>
	</doc>
	<doc for="JScriptCodeProvider.CreateGenerator">
		<overload>
			<para>Gets an instance of the JScript code generator.</para>
		</overload>
		<summary>
			<para>Gets an instance of the JScript code generator.</para>
		</summary>
		<returns>
			<para>An instance of the JScript <see cref="System.CodeDom.Compiler.ICodeGenerator"/> implementation.</para>
		</returns>
		<example>
			<codelink SampleID="MicrosoftCodeProviderExamples1" SnippetID="4"/>
		</example>
		<seealso cref="System.CodeDom.Compiler.ICodeGenerator"/>
	</doc>
	<doc for="JScriptCodeProvider.CreateCompiler">
		<summary>
			<para>Gets an instance of the JScript code compiler.</para>
		</summary>
		<returns>
			<para> An instance of the JScript <see cref="System.CodeDom.Compiler.ICodeCompiler"/> implementation.</para>
		</returns>
		<example>
			<codelink SampleID="MicrosoftCodeProviderExamples1" SnippetID="3"/>
		</example>
		<seealso cref="System.CodeDom.Compiler.ICodeCompiler"/>
	</doc>
	<doc for="JSCodeGenerator">
		<summary>
			<para>Provides a code generator for the JScript (ECMAScript) language.</para>
		</summary>
		<remarks>
			<para>This code generator will translate a JScript file to a source code file 
       representation using the classes in the System.CodeDOM namespace.</para>
		</remarks>
	</doc>
	<doc for="JSCodeGenerator.FileExtension">
		<summary>
			<para>
       Gets or the file extension to use for source files.
    </para>
		</summary>
		<value>
			<para>
       The file extension to use for source files.
    </para>
		</value>
	</doc>
	<doc for="JSCodeGenerator.CompilerName">
		<summary>
			<para>
       Gets the name of the compiler executable.
    </para>
		</summary>
		<value>
			<para>
       The name of the compiler executable.
    </para>
		</value>
	</doc>
	<doc for="JSCodeGenerator.GenerateTypeStart">
		<summary>
			<para>
       Generates code for the specified CodeDom based class start representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeTypeDeclaration"/> that indicates the start of the class.
 </param>
		<seealso cref="System.CodeDom.CodeTypeDeclaration"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateTypeConstructor">
		<summary>
			<para>
       Generates code for the specified CodeDom based class constructor representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeTypeConstructor"/> that indicates the constructor to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeTypeConstructor"/>
	</doc>
	<doc for="JSCodeGenerator.OutputType">
		<summary>
			<para>
       Generates code for
       the specified CodeDom based return type representation.
    </para>
		</summary>
		<param name="typeRef">
    A string that indicates the return type to generate code for.
 </param>
	</doc>
	<doc for="JSCodeGenerator.OutputMemberAccessModifier">
		<summary>
			<para>
       Generates code for
       the specified CodeDom based member access modifier representation.
    </para>
		</summary>
		<param name="attributes">
    A <see cref="System.CodeDom.MemberAttributes"/> that indicates the access modifier to generate code for.
 </param>
		<seealso cref="System.CodeDom.MemberAttributes"/>
	</doc>
	<doc for="JSCodeGenerator.OutputMemberScopeModifier">
		<summary>
			<para>
       Generates code for
       the specified CodeDom based member scope modifier representation.
    </para>
		</summary>
		<param name="attributes">
			<para>A <see cref="System.CodeDom.MemberAttributes"/> that indicates the scope modifier to generate code for.</para>
		</param>
		<seealso cref="System.CodeDom.MemberAttributes"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateNamespace">
		<summary>
			<para>
       Generates code for the specified CodeDom based namespace
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeNamespace"/> that indicates the namespace to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeNamespace"/>
	</doc>
	<doc for="JSCodeGenerator.OutputTypeNamePair">
		<summary>
			<para>
       Generates
       code for the specified CodeDom based type name pair representation.
    </para>
		</summary>
		<param name="typeRef">
    A string that indicates the type to generate code for.
 </param>
		<param name=" name">
    The name to generate code for.
 </param>
		<remarks>
			<para>
       This is commonly used for variable declarations.
    </para>
		</remarks>
	</doc>
	<doc for="JSCodeGenerator.GenerateField">
		<summary>
			<para>
       Generates code for the specified CodeDom based member field representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeMemberField"/> that indicates the field to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeMemberField"/>
	</doc>
	<doc for="JSCodeGenerator.OutputParameters">
		<summary>
			<para>
       Generates code for the specified CodeDom based parameter declaration
       expression representation.
    </para>
		</summary>
		<param name="parameters">
    A <see cref="System.CodeDom.CodeParameterDeclarationExpressionCollection"/> that indicates the parameter declaration expressions to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeParameterDeclarationExpressionCollection"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateConstructor">
		<summary>
			<para>
       Generates code for the specified CodeDom based constructor representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeConstructor"/> that indicates the constructor to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeConstructor"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateDelegateCreateExpression">
		<summary>
			<para>
       Generates
       code for the specified CodeDom based delegate creation expression
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeDelegateCreateExpression"/> that indicates the delegate creation expression to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeDelegateCreateExpression"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateProperty">
		<summary>
			<para>
       Generates code for the specified
       CodeDom based member property representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeMemberProperty"/> that indicates the member property to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeMemberProperty"/>
	</doc>
	<doc for="JSCodeGenerator.GeneratePropertyReferenceExpression">
		<summary>
			<para>
       Generates code for the specified CodeDom based property reference
       expression representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodePropertyReferenceExpression"/> that indicates the expression to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodePropertyReferenceExpression"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateMethod">
		<summary>
			<para>
       Generates code for the specified CodeDom based member method
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeMemberMethod"/> that indicates the method to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeMemberMethod"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateLinePragmaStart">
		<summary>
			<para>
       Generates code for the specified CodeDom based line pragma start representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeLinePragma"/> that indicates the start position to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeLinePragma"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateLinePragmaEnd">
		<summary>
			<para>
       Generates code for the specified CodeDom based line pragma end representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeLinePragma"/> that indicates the end position to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeLinePragma"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateCastExpression">
		<summary>
			<para>
       Generates code for the specified CodeDom based cast expression
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeCastExpression"/> that indicates the expression to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeCastExpression"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateIndexerExpression">
		<summary>
			<para>
       Generates code for the specified CodeDom based indexer expression
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeIndexerExpression"/> that indicates the expression to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeIndexerExpression"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateVariableDeclarationStatement">
		<summary>
			<para>
       Generates code for the specified CodeDom based variable declaration statement
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> that indicates the statement to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeVariableDeclarationStatement"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateNamespaceImport">
		<summary>
			<para>
       Generates code for the specified CodeDom based namespace import
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeNamespaceImport"/> that indicates the namespace import to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeNamespaceImport"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateNamespaceStart">
		<summary>
			<para>
       Generates code for the specified CodeDom based namespace start
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeNamespace"/> that indicates the namespace start to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeNamespace"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateNamespaceEnd">
		<summary>
			<para>
       Generates code for the specified CodeDom based namespace end
       representation.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.CodeDom.CodeNamespace"/> that indicates the namespace end to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeNamespace"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateAttributeDeclarationsStart">
		<summary>
			<para>
       Generates code for the specified CodeDom based attribute block start
       representation.
    </para>
		</summary>
		<param name="attributes">
    A <see cref="System.CodeDom.CodeAttributeDeclarationCollection"/> that indicates the attribute block to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeAttributeDeclarationCollection"/>
	</doc>
	<doc for="JSCodeGenerator.GenerateAttributeDeclarationsEnd">
		<summary>
			<para>
       Generates code for the specified CodeDom based attribute block end
       representation.
    </para>
		</summary>
		<param name="attributes">
    A <see cref="System.CodeDom.CodeAttributeDeclarationCollection"/> that indicates the attribute block end to generate code for.
 </param>
		<seealso cref="System.CodeDom.CodeAttributeDeclarationCollection"/>
	</doc>
	<doc for="JSCodeGenerator.Supports">
		<summary>
			<para>
       Indicates whether the code generator supports advanced semantics.
    </para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the code generator supports advanced semantics; 
       otherwise, <see langword="false"/>.
    </para>
		</value>
	</doc>
	<doc for="JScriptCodeProvider.FileExtension">
		<summary>
			<para>Gets or sets the file name extension to use when creating source code
      files.</para>
		</summary>
		<value>
			<para>The file name extension to use for generated source code files.</para>
		</value>
		<remarks>
			<para>This file name extension is usually the extension used by the language's 
      source code files.</para>
		</remarks>
	</doc></docs>
