<docs>
   <doc for="CodeTypeDeclaration">
 <summary>
    <para>Represents a type
       or nested class declaration.</para>
 </summary>
 <remarks>
 <para><see cref='System.CodeDom.CodeTypeDeclaration'/> can be used to 
    represent code that declares a new type or nested class. This can
    be used to declare a class, struct, or Enumeration.</para>
 </remarks>
 <seealso cref='System.CodeDom.CodeTypeDeclarationCollection'/>
   </doc>
   <doc for="CodeTypeDeclaration.PopulateBaseTypes">
 <summary>
    <para>
       An event that will be fired the first time the BaseTypes Collection is accessed.  
    </para>
 </summary>
   </doc>
   <doc for="CodeTypeDeclaration.PopulateMembers">
 <summary>
    <para>
       An event that will be fired the first time the Members Collection is accessed.  
    </para>
 </summary>
   </doc>
   <doc for="CodeTypeDeclaration.CodeTypeDeclaration">
 <overload>
 <para>Initializes a new instance of the <see cref='System.CodeDom.CodeTypeDeclaration'/> class.</para>
 </overload>
 <summary>
 <para>Initializes a new instance of the <see cref='System.CodeDom.CodeTypeDeclaration'/> class.</para>
 </summary>
   </doc>
   <doc for="CodeTypeDeclaration.CodeTypeDeclaration1">
 <summary>
 <para>Initializes a new instance of the <see cref='System.CodeDom.CodeTypeDeclaration'/> class with the specified name.</para>
 </summary>
 <param name='name'>The name for the code class.</param>
   </doc>
   <doc for="CodeTypeDeclaration.TypeAttributes">
 <summary>
    <para> Gets or sets the attributes of the class.</para>
 </summary>
 <value>
 <para>A <see cref='System.Reflection.TypeAttributes'/> that indicates the attributes of the
    class.</para>
 </value>
 <seealso cref='System.Reflection.TypeAttributes'/>
   </doc>
   <doc for="CodeTypeDeclaration.BaseTypes">
 <summary>
    <para> Gets or sets
       the base types of the class.</para>
 </summary>
 <value>
 <para>A <see cref='System.CodeDom.CodeTypeReferenceCollection'/> that indicates the base types of the class.</para>
 </value>
 <seealso cref='System.CodeDom.CodeTypeReferenceCollection'/>
   </doc>
   <doc for="CodeTypeDeclaration.IsClass">
 <summary>
    <para> 
       Gets or sets a value
       indicating whether the class is a class.</para>
 </summary>
 <value>
 <para><see langword='true'/> if the class type attributes match; 
    otherwise, <see langword='false'/>.</para>
 </value>
 
 
   </doc>
   <doc for="CodeTypeDeclaration.IsStruct">
 <summary>
    <para> 
       Gets or sets a value
       indicating whether the class is a struct.</para>
 </summary>
 <value>
 <para><see langword='true'/> if the class 
    type attributes match; otherwise, <see langword='false'/>.</para>
 </value>
 
 
   </doc>
   <doc for="CodeTypeDeclaration.IsEnum">
 <summary>
    <para> 
       Gets or sets a value
       indicating whether the class is an enumeration.</para>
 </summary>
 <value>
 <para><see langword='true'/> if the class 
    type attributes match; otherwise, <see langword='false'/>.</para>
 </value>
 
 
   </doc>
   <doc for="CodeTypeDeclaration.IsInterface">
 <summary>
    <para> 
       Gets or sets a value
       indicating whether the class is an interface.</para>
 </summary>
 <value>
 <para><see langword='true'/> if the class type attributes match; otherwise, 
 <see langword='false'/>.</para>
 </value>
 
 
   </doc>
   <doc for="CodeTypeDeclaration.Members">
 <summary>
    <para> Gets or sets the class member collection members.</para>
 </summary>
 <value>
 <para>A <see cref='System.CodeDom.CodeTypeMemberCollection'/> that indicates the class members.</para>
 </value>
 
 
 <seealso cref='System.CodeDom.CodeTypeMemberCollection'/>
   </doc>
   <doc for="CodeTypeDeclaration.Equals">
 <nodoc/>
 <summary>
 </summary>
   </doc>
   <doc for="CodeTypeDeclaration.GetHashCode">
 <nodoc/>
   </doc>
</docs>

