<docs>
	<doc for="CodeRemoveEventStatement.CodeRemoveEventStatement">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeRemoveEventStatement"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeRemoveEventStatement"/> class.</para>
		</summary>
	</doc>
	<doc for="CodeRemoveEventStatement.Event">
		<summary>
			<para> Gets or sets the event to remove a listener from.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeEventReferenceExpression"/> that indicates the event to remove a listener from.</para>
		</value>
		<seealso cref="System.CodeDom.CodeEventReferenceExpression"/>
	</doc>
	<doc for="CodeRemoveEventStatement.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeRemoveEventStatement.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeRemoveEventStatement.CodeRemoveEventStatement2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeRemoveEventStatement"/> class using the
   specified target object, event name, and event handler.</para>
		</summary>
		<param name="targetObject">A <see cref="System.CodeDom.CodeExpression"/> that indicates the object that contains the event.</param>
		<param name=" eventName">The name of the event.</param>
		<param name=" listener">A <see cref="System.CodeDom.CodeExpression"/> that indicates the event handler to remove.</param>
		<seealso cref="System.CodeDom.CodeEventReferenceExpression"/>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
	<doc for="CodeRemoveEventStatement.Listener">
		<summary>
			<para> Gets or sets the event handler to remove.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeExpression"/> that indicates the event handler to remove.</para>
		</value>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
	<doc for="CodeRemoveEventStatement">
		<summary>
			<para>Represents a statement that removes an event handler.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeRemoveEventStatement"/> can be used to represent a statement that removes an event handler for an event.</para>
			<para>The <see cref="System.CodeDom.CodeRemoveEventStatement.Event"/> property specifies the event to
remove the event handler from. The <see cref="System.CodeDom.CodeRemoveEventStatement.Listener"/> property specifies the event handler to
remove.</para>
		</remarks>
		<example>
			<para>The following example demonstrates use of a <see cref="System.CodeDom.CodeRemoveEventStatement"/> to remove a delegate from an event.</para>
			<codelink SampleID="CodeRemoveEventExample" SnippetID="2"/>
		</example>
	</doc>
	<doc for="CodeRemoveEventStatement.CodeRemoveEventStatement1">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeRemoveEventStatement"/> class using the specified arguments.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeRemoveEventStatement"/> class with the
   specified event and event handler.</para>
		</summary>
		<param name="eventRef">A <see cref="System.CodeDom.CodeEventReferenceExpression"/> that indicates the event to detach the event handler from.</param>
		<param name="listener">A <see cref="System.CodeDom.CodeExpression"/> that indicates the event handler to remove.</param>
		<seealso cref="System.CodeDom.CodeEventReferenceExpression"/>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
</docs>
