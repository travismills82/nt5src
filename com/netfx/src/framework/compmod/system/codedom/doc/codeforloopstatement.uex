<docs>
   <doc for="CodeIterationStatement">
 <summary>
 <para>Represents a simple <see langword='for'/> loop.</para>
 </summary>
 <remarks>
 <para><see cref='System.CodeDom.CodeIterationStatement'/> can be used to 
    represent code that indicates a <see langword='for'/> loop or a
 <see langword='while'/> 
 loop. </para>
 </remarks>
   </doc>
   <doc for="CodeIterationStatement.CodeIterationStatement">
 <overload>
 <para>Initializes a new instance of the <see cref='System.CodeDom.CodeIterationStatement'/> class.</para>
 </overload>
 <summary>
 <para>Initializes a new instance of the <see cref='System.CodeDom.CodeIterationStatement'/> class.</para>
 </summary>
   </doc>
   <doc for="CodeIterationStatement.CodeIterationStatement1">
 <summary>
 <para>Initializes a new instance of the <see cref='System.CodeDom.CodeIterationStatement'/> class using the 
    specified parameters.</para>
 </summary>
 <param name='initStatement'>A <see cref='System.CodeDom.CodeStatement'/> containing the loop initialization statement.</param>
 <param name='testExpression'>A <see cref='System.CodeDom.CodeExpression'/> containing the expression to test for exit condition.</param>
 <param name='incrementStatement'>A <see cref='System.CodeDom.CodeStatement'/> containing the per cycle increment statement.</param>
 <param name='statements'>An array of type <see cref='System.CodeDom.CodeStatement'/> containing the statements within the loop.</param>
 <seealso cref='System.CodeDom.CodeStatement'/>
 <seealso cref='System.CodeDom.CodeExpression'/>
   </doc>
   <doc for="CodeIterationStatement.InitStatement">
 <summary>
    <para> Gets or sets
       the loop initialization statement.</para>
 </summary>
 <value>
 <para>A <see cref='System.CodeDom.CodeStatement'/> that indicates the loop
    initialization statement.</para>
 </value>
 
 
   </doc>
   <doc for="CodeIterationStatement.TestExpression">
 <summary>
    <para> Gets or sets the expression to test as the
       condition that continues the loop.</para>
 </summary>
 <value>
 <para>A <see cref='System.CodeDom.CodeExpression'/> 
 that indicates the expression to
 test.</para>
 </value>
 <remarks>
 <para>If this expression resolves to <see langword='true'/> or 1, the loop will 
    continue.</para>
 </remarks>
 <seealso cref='System.CodeDom.CodeExpression'/>
   </doc>
   <doc for="CodeIterationStatement.IncrementStatement">
 <summary>
    <para> Gets or sets the statement that
       is called after each loop cycle.</para>
 </summary>
 <value>
 <para>A <see cref='System.CodeDom.CodeStatement'/> that indicates the per cycle
    increment statement.</para>
 </value>
 <remarks>
    <para>This statement is called after each iteration.</para>
 </remarks>
 <seealso cref='System.CodeDom.CodeStatement'/>
   </doc>
   <doc for="CodeIterationStatement.Statements">
 <summary>
    <para> Gets or sets
       the statements to be executed within the loop.</para>
 </summary>
 <value>
 <para>An array of type <see cref='System.CodeDom.CodeStatement'/> that indicates the statements within the loop.</para>
 </value>
 
 
 <seealso cref='System.CodeDom.CodeStatement'/>
   </doc>
   <doc for="CodeIterationStatement.Equals">
 <nodoc/>
 <summary>
 </summary>
   </doc>
   <doc for="CodeIterationStatement.GetHashCode">
 <nodoc/>
   </doc>
</docs>

