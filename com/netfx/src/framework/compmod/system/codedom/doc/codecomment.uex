<docs>
	<doc for="CodeComment.CodeComment">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeComment"/> 
 class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeComment"/> 
 class.</para>
		</summary>
	</doc>
	<doc for="CodeComment.Equals">
		<nodoc/>
	</doc>
	<doc for="CodeComment.GetHashCode">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeComment.CodeComment2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeComment"/> class using the specified text
 and documentation comment flag.</para>
		</summary>
		<param name="text">The contents of the comment.</param>
		<param name=" docComment"><see langword="true"/> if the comment is a documentation comment; otherwise, <see langword="false"/>. </param>
	</doc><doc for="CodeComment.CodeComment1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeComment"/> class with the specified text as
   contents.</para>
		</summary>
		<param name="text">The contents of the comment.</param>
	</doc>
	<doc for="CodeComment.Text">
		<summary>
			<para> Gets or sets
      the text of the comment.</para>
		</summary>
		<value>
			<para>A string containing the comment text.</para>
		</value>
		<remarks>
			<para>The text of this property should not contain line breaks. If multiple 
      lines are required, multiple <see cref="System.CodeDom.CodeComment"/> objects should be defined.</para>
		</remarks>
	</doc>
	<doc for="CodeComment">
		<summary>
			<para> Represents a comment.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeComment"/> can be 
   used to represent a single line
   comment. </para>
			<para> 
   A <see cref="System.CodeDom.CodeCommentStatement"/> can contain a <see cref="System.CodeDom.CodeComment"/> and allows it to be
   treated as a statement and generated as code within a
   collection of statements. Multi-line comments can be represented with multiple <see cref="System.CodeDom.CodeCommentStatement"/> objects. </para>
			<para>To include a comment in a CodeDOM graph that can be generated to source
   code, add a <see cref="System.CodeDom.CodeComment"/> to a <see cref="System.CodeDom.CodeCommentStatement"/>, and add this to the statements collection of
   a <see cref="System.CodeDom.CodeMemberMethod"/> or to the comments collection of a <see cref="System.CodeDom.CodeNamespace"/> or
   any object that derives from <see cref="System.CodeDom.CodeTypeMember"/>.</para>
		</remarks>
		<example>
			<para>This example demonstrates using a <see cref="System.CodeDom.CodeComment"/> to represent a comment in
   source code.</para>
			<codelink SampleID="CodeCommentExample" SnippetID="2"/>
		</example>
		<seealso cref="System.CodeDom.CodeCommentStatement"/>
		<seealso cref="System.CodeDom.CodeTypeMember.Comments"/>
	</doc>
	<doc for="CodeComment.DocComment">
		<summary>
			<para>Gets or sets a value that indicates whether the comment is a documentation comment.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the comment is a documentation comment; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para> Some languages support a special type of comment that can be automatically extracted from the
      source code for documentation purposes. This property can be used to designate
      whether the comment is a documentaion comment, which may generate a different
      syntax. An example of this is C#, which uses "//" for regular comments and
      "///" for documentation comments.</para>
		</remarks>
	</doc>
</docs>
