<docs>
	<doc for="CodeThrowExceptionStatement.CodeThrowExceptionStatement">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeThrowExceptionStatement"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeThrowExceptionStatement"/> class.</para>
		</summary>
	</doc>
	<doc for="CodeThrowExceptionStatement.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeThrowExceptionStatement.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeThrowExceptionStatement.ToThrow">
		<summary>
			<para> Gets or sets
      the exception to throw.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeExpression"/> representing an instance of the exception to throw.</para>
		</value>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
	<doc for="CodeThrowExceptionStatement">
		<summary>
			<para>Represents
      a statement that throws an exception.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeThrowExceptionStatement"/> can represent a statement
   that throws an exception. The expression should be, or evaluate to, a
   reference to an instance of a type that derives from the <see cref="System.Exception"/> class.</para>
			<para>The <see cref="System.CodeDom.CodeThrowExceptionStatement.ToThrow"/> property specifies the
exception to throw.</para>
		</remarks>
		<example>
			<para>This example demonstrates using a <see cref="System.CodeDom.CodeThrowExceptionStatement"/> to throw a new
<see langword="System.Exception"/>. </para>
			<codelink SampleID="CodeThrowExceptionStatement" SnippetID="2"/>
		</example>
	</doc>
	<doc for="CodeThrowExceptionStatement.CodeThrowExceptionStatement1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeThrowExceptionStatement"/> class with the specified exception type instance.</para>
		</summary>
		<param name="toThrow">A <see cref="System.CodeDom.CodeExpression"/> that indicates the exception to throw.</param>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
</docs>
