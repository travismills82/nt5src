<docs>
	<doc for="CodeConstructor.CodeConstructor">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeConstructor"/> class.</para>
		</summary>
	</doc>
	<doc for="CodeConstructor.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeConstructor.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeConstructor.BaseConstructorArgs">
		<summary>
			<para> Gets the collection of base constructor arguments.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeExpressionCollection"/> that contains the base constructor
   arguments.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.CodeDom.CodeConstructor"/> overloads a base class constructor, this 
   collection contains any arguments to pass to a base class constructor. To
   call a base class constructor with no arguments, set a <see cref="System.CodeDom.CodeSnippetExpression"/>
   containing an empty string ("") to this collection.</para>
		</remarks>
		<seealso cref="System.CodeDom.CodeExpressionCollection"/>
	</doc>
	<doc for="CodeConstructor.ChainedConstructorArgs">
		<summary>
			<para> Gets the collection of chained constructor arguments.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeExpressionCollection"/> that contains the chained constructor
   arguments.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.CodeDom.CodeConstructor"/> overloads another constructor of the same type, this
   collection contains any arguments to pass to the overloaded type
   constructor. To call a constructor for the current type with no
   arguments, set a <see cref="System.CodeDom.CodeSnippetExpression"/>
   containing an empty string ("") to this collection. </para>
		</remarks>
		<seealso cref="System.CodeDom.CodeExpressionCollection"/>
	</doc>
	<doc for="CodeConstructor">
		<summary>
			<para> Represents a declaration for an instance constructor of a
      type.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeConstructor"/> can be used to represent a declaration of
   an instance constructor for a type. Use <see cref="System.CodeDom.CodeTypeConstructor"/> to declare a static
   constructor for a type.</para>
			<para>If the constructor calls a base class constructor, set the constructor
   arguments for the base class constructor in the <see cref="System.CodeDom.CodeConstructor.BaseConstructorArgs"/>
   property. If the constructor overloads another constuctor
   for the type, set the constructor arguments to pass to the overloaded
   type constructor in the <see cref="System.CodeDom.CodeConstructor.ChainedConstructorArgs"/> property.</para>
		</remarks>
		<example>
			<para>This example demonstrates using a <see cref="System.CodeDom.CodeConstructor"/> to declare several types of
   constructors.</para>
			<codelink SampleID="CodeConstructorExample" SnippetID="2"/>
		</example>
	</doc>
</docs>
