<docs>
	<doc for="CodePrimitiveExpression.CodePrimitiveExpression">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodePrimitiveExpression"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodePrimitiveExpression"/> class.</para>
		</summary>
	</doc>
	<doc for="CodePrimitiveExpression.CodePrimitiveExpression1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodePrimitiveExpression"/> class using the specified
    object.</para>
		</summary>
		<param name="value">The object to represent.</param>
	</doc>
	<doc for="CodePrimitiveExpression.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodePrimitiveExpression.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodePrimitiveExpression">
		<summary>
			<para>Represents a primitive data type value.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodePrimitiveExpression"/> can be used to represent an expression that indicates a primitive data type value. </para>
			<para>The <see cref="System.CodeDom.CodePrimitiveExpression.Value"/> property specifies the
primitive data type value to represent.</para>
			<para>Primitive data types that can be represented
   using <see cref="System.CodeDom.CodePrimitiveExpression"/> include
<see langword="null"/>; string; 16-, 32-, and 64-bit signed integers; and single-precision and double-precision
   floating-point numbers.</para>
		</remarks>
		<example>
			<para>The following example demonstrates use of <see cref="System.CodeDom.CodePrimitiveExpression"/> to represent values of several primitive 
   types.</para>
			<codelink SampleID="CodePrimitiveExpressionExample" SnippetID="2"/>
		</example>
	</doc>
	<doc for="CodePrimitiveExpression.Value">
		<summary>
			<para> Gets or sets the primitive data type to represent.</para>
		</summary>
		<value>
			<para>The primitive data type instance to represent the value of.</para>
		</value>
		<remarks>
			<para> Any .NET Framework primitive type can be used here.</para>
		</remarks>
	</doc>
</docs>
