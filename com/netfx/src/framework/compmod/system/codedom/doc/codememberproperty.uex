<docs>
	<doc for="CodeMemberProperty.Type">
		<summary>
			<para>Gets or sets the data type of the property.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeTypeReference"/> that indicates the data type of the property.</para>
		</value>
	</doc>
	<doc for="CodeMemberProperty.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeMemberProperty.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeMemberProperty.PrivateImplementationType">
		<summary>
			<para>Gets or sets the data type of the interface, if any, this property, if private, implements.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeTypeReference"/> that indicates the 
   data type of the interface, if any, the property, if
   private, implements.</para>
		</value>
		<remarks>
			<para>The type referenced by this property must be an interface.</para>
		</remarks>
	</doc>
	<doc for="CodeMemberProperty.ImplementationTypes">
		<summary>
			<para> Gets the data types of any interfaces that the property implements.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeTypeReferenceCollection"/> that indicates the data types the property implements.</para>
		</value>
		<remarks>
			<para>The types referenced by this collection must consist of interfaces.</para>
		</remarks>
	</doc>
	<doc for="CodeMemberProperty.Parameters">
		<summary>
			<para> Gets the collection of declaration expressions
      for
      the property.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeParameterDeclarationExpressionCollection"/> that indicates the declaration
   expressions for the property.</para>
		</value>
		<remarks>
			<note type="note">
      In general, properties do not have
      parameters. CodeDom supports an exception to this. For any property that
      has the special name "Item" and one or more parameters, it will declare an
      indexer property for the class. However, not all languages support the
      declaration of indexers.
   </note>
		</remarks>
		<seealso cref="System.CodeDom.CodeParameterDeclarationExpressionCollection"/>
	</doc>
	<doc for="CodeMemberProperty">
		<summary>
			<para>Represents a declaration for a property of a type.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeMemberProperty"/> can be used to represent the declaration for a property of a
   type.</para>
			<para>The <see cref="System.CodeDom.CodeMemberProperty.Type"/> property specifies the data
type of the property. The <see cref="System.CodeDom.CodeMemberProperty.GetStatements"/> property contains any get statement methods for
the property. The <see cref="System.CodeDom.CodeMemberProperty.SetStatements"/> property contains any set statement methods for
the property. The <see cref="System.CodeDom.CodeMemberProperty.Parameters"/> property specifies any parameters for the property, such as are
required for an indexer property.</para>
		</remarks>
		<example>
			<para>The following example code demonstrates use of a <see cref="System.CodeDom.CodeMemberProperty"/> to define a <see langword="string"/>
property with <see langword="get"/> and <see langword="set"/>
accessors.</para>
			<codelink SampleID="CodeMemberPropertyExample" SnippetID="3"/>
		</example>
	</doc>
	<doc for="CodeMemberProperty.GetStatements">
		<summary>
			<para> Gets the collection of <see langword="get"/> statements for the
   property.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeStatementCollection"/> that contains the
<see langword="get"/> statements for the member
   property.</para>
		</value>
		<remarks>
			<para> One of the statements in this <see cref="System.CodeDom.CodeStatementCollection"/> should
   return the value for the member property. Use a <see cref="System.CodeDom.CodeMethodReturnStatement"/> to return a value of the
   data type of the property.</para>
		</remarks>
		<seealso cref="System.CodeDom.CodeStatementCollection"/>
		<seealso cref="System.CodeDom.CodeMethodReturnStatement"/>
	</doc>
	<doc for="CodeMemberProperty.SetStatements">
		<summary>
			<para> Gets the collection of <see langword="set"/> statements for the property.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeStatementCollection"/> that contains the
<see langword="set"/> statements for the member
   property.</para>
		</value>
		<remarks>
			<para> One of the statements in this collection typically
      sets a value for the property. Often, the statements within a set method accessor
      perform checking to determine whether to set or translate the
      specified value for the property. A <see cref="System.CodeDom.CodePropertySetValueReferenceExpression"/> represents a reference to the object
      passed to the set method.</para>
		</remarks>
		<seealso cref="System.CodeDom.CodeStatementCollection"/>
		<seealso cref="System.CodeDom.CodePropertySetValueReferenceExpression"/>
	</doc>
	<doc for="CodeMemberProperty.HasGet">
		<summary>
			<para> Gets or sets a value indicating whether the property has
      a <see langword="get"/>
      method accessor.</para>
		</summary>
		<value>
			<para><see langword="true"/> if
   the <see langword="Count"/> property of the <see cref="System.CodeDom.CodeMemberProperty.GetStatements"/> collection is non-zero, or if the value of this
   property has been set to <see langword="true"/>; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<note type="note">
      Setting this property to <see langword="false"/>
      clears the <see cref="System.CodeDom.CodeMemberProperty.GetStatements"/> collection.
      
   </note>
		</remarks>
		<seealso cref="System.CodeDom.CodeMemberProperty.HasSet"/>
	</doc>
	<doc for="CodeMemberProperty.HasSet">
		<summary>
			<para> Gets or sets a value indicating whether the property has
      a <see langword="set"/>
      method accessor.</para>
		</summary>
		<value>
			<para><see langword="true"/> if
   the <see cref="System.Collections.CollectionBase.Count"/> property of the <see cref="System.CodeDom.CodeMemberProperty.SetStatements"/> collection is non-zero; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para><see cref="System.CodeDom.CodeMemberProperty.HasSet"/> will return <see langword="false"/> if the property is
   read-only.</para>
			<note type="note">
   Setting this property to <see langword="false"/> will
   clear the <see cref="System.CodeDom.CodeMemberProperty.SetStatements"/> collection.
</note>
		</remarks>
		<seealso cref="System.CodeDom.CodeMemberProperty.HasGet"/>
	</doc>
</docs>
