<docs>
	<doc for="CodeTypeDelegate.CodeTypeDelegate">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeTypeDelegate"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeTypeDelegate"/> class.</para>
		</summary>
	</doc>
	<doc for="CodeTypeDelegate.CodeTypeDelegate1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeTypeDelegate"/> class.</para>
		</summary>
		<param name="name">The name of the delegate.</param>
	</doc>
	<doc for="CodeTypeDelegate.ReturnType">
		<summary>
			<para> Gets or sets the return type of the delegate.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeTypeReference"/> that indicates the return type of the delegate.</para>
		</value>
	</doc>
	<doc for="CodeTypeDelegate.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeTypeDelegate.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeTypeDelegate.Parameters">
		<summary>
			<para> Gets the parameters of the delegate.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeParameterDeclarationExpressionCollection"/> that indicates the
   parameters of the delegate.</para>
		</value>
		<seealso cref="System.CodeDom.CodeParameterDeclarationExpressionCollection"/>
	</doc>
	<doc for="CodeTypeDelegate">
		<summary>
			<para> Represents a delegate declaration.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeTypeDelegate"/> can be used to
   declare a delegate type, or event handler. A delegate defines a method signature
   that can be used by calback methods or event handlers. Delegates can be declared
   at the namespace level or nested inside other types. Delegates cannot be nested
   inside other delegates.</para>
			<para>The <see cref="System.CodeDom.CodeTypeDelegate.ReturnType"/> property specifies the data type of the event
handler returned by the delegate. The <see cref="System.CodeDom.CodeTypeDelegate.Parameters"/> property contains the parameters for the
delegate type.</para>
			<para><see cref="System.CodeDom.CodeTypeDelegate"/> should not be used
for enumeration, interface, or type declaration. Instead, use <see cref="System.CodeDom.CodeTypeDeclaration"/> for those.</para>
			<note type="note">
   Not
   all languages support the declaration
   of delegates. Call the <see cref="System.CodeDom.Compiler.ICodeGenerator.Supports"/> method with
   the <see cref="System.CodeDom.Compiler.GeneratorSupport.DeclareDelegates"/> flag to determine if
   it is supported in a particular language.
</note>
		</remarks>
		<example>
			<para>The following example code demonstrates use of a <see cref="System.CodeDom.CodeTypeDelegate"/>
to declare a new delegate type.</para>
			<codelink SampleID="CodeTypeDelegateExample" SnippetID="3"/>
		</example>
	</doc>
</docs>
