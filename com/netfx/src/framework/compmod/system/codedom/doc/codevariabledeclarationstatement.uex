<docs>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class.</para>
		</summary>
	</doc>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class using the specified data type name and variable 
    name.</para>
		</summary>
		<param name="type">The name of the data type of the variable.</param>
		<param name=" name">The name of the variable.</param>
	</doc>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class using the specified data type and variable 
    name.</para>
		</summary>
		<param name="type">The data type for the variable.</param>
		<param name=" name">The name of the variable. </param>
	</doc>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class using the specified data type, variable name, and
    initialization expression.</para>
		</summary>
		<param name="type">A <see cref="System.CodeDom.CodeTypeReference"/> that indicates the type of the variable.</param>
		<param name=" name">The name of the variable.</param>
		<param name=" initExpression">A <see cref="System.CodeDom.CodeExpression"/> that indicates the initialization expression for the variable.</param>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class using the specified data type, variable 
    name, and initialization expression.</para>
		</summary>
		<param name="type">The name of the data type of the variable.</param>
		<param name=" name">The name of the variable.</param>
		<param name=" initExpression">A <see cref="System.CodeDom.CodeExpression"/> that indicates the initialization expression for the variable.</param>
	</doc>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement6">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class using the specified data type, variable 
    name, and initialization expression.</para>
		</summary>
		<param name="type">The data type of the variable.</param>
		<param name=" name">The name of the variable.</param>
		<param name=" initExpression">A <see cref="System.CodeDom.CodeExpression"/> that indicates the initialization expression for the variable.</param>
	</doc>
	<doc for="CodeVariableDeclarationStatement.InitExpression">
		<summary>
			<para> Gets or sets the initialization expression for the variable.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeExpression"/> that indicates the initialization
    expression for the variable.</para>
		</value>
		<seealso cref="System.CodeDom.CodeExpression"/>
	</doc>
	<doc for="CodeVariableDeclarationStatement.Name">
		<summary>
			<para> Gets or sets the name of the variable.</para>
		</summary>
		<value>
			<para>The name of the variable.</para>
		</value>
	</doc>
	<doc for="CodeVariableDeclarationStatement.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeVariableDeclarationStatement.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeVariableDeclarationStatement.CodeVariableDeclarationStatement1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> class using the specified type and name.</para>
		</summary>
		<param name="type">A <see cref="System.CodeDom.CodeTypeReference"/> that indicates the data type of the variable.</param>
		<param name="name">The name of the variable.</param>
	</doc>
	<doc for="CodeVariableDeclarationStatement.Type">
		<summary>
			<para> Gets or sets the data type of the variable.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeTypeReference"/> that indicates
   the data type of the variable.</para>
		</value>
	</doc>
	<doc for="CodeVariableDeclarationStatement">
		<summary>
			<para> Represents a variable declaration.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeVariableDeclarationStatement"/>
can be used to represent
code that declares a variable.</para>
			<para>The <see cref="System.CodeDom.CodeVariableDeclarationStatement.Type"/> property specifies the
type of the variable to declare. The <see cref="System.CodeDom.CodeVariableDeclarationStatement.Name"/> property
specifies the name of the variable to
declare. The <see cref="System.CodeDom.CodeVariableDeclarationStatement.InitExpression"/> property is
optional, and specifies an initialization expression
to assign to the variable after it is created. </para>
			<note type="note">
   Some languages can implement the
   optional variable initialization expression by making a separate assignment
   statement after the variable declaration.
   
</note>
		</remarks>
		<example>
			<para>This example demonstrates using a <see cref="System.CodeDom.CodeVariableDeclarationStatement"/> to declare a variable.</para>
			<codelink SampleID="CodeVariableDeclarationStatementExample" SnippetID="2"/>
		</example>
	</doc>
</docs>
