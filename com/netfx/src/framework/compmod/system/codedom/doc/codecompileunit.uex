<docs>
	<doc for="CodeCompileUnit.CodeCompileUnit">
		<overload>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeCompileUnit"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeCompileUnit"/> class.</para>
		</summary>
	</doc>
	<doc for="CodeCompileUnit.Equals">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeCompileUnit.GetHashCode">
		<nodoc/>
	</doc>
	<doc for="CodeCompileUnit">
		<summary>
			<para> Provides a container for a CodeDOM program graph.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeCompileUnit"/>
provides a container for a CodeDOM program graph. </para>
			<para><see cref="System.CodeDom.CodeCompileUnit"/> contains a collection that can store <see cref="System.CodeDom.CodeNamespace"/> 
objects containing CodeDOM source code graphs, along with a collection of
assemblies referenced by the project, and a collection of attributes for the
project assembly.</para>
			<para> 
   A <see cref="System.CodeDom.CodeCompileUnit"/> can be passed to the <see cref="System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit"/> method of an <see cref="System.CodeDom.Compiler.ICodeGenerator"/>
   implementation along with other parameters to generate code based upon the
   program graph contained by the compile unit. </para>
			<note type="note">
   Some languages support only a single
   namespace that contains a single class in a compile unit.
</note>
		</remarks>
		<example>
			<para>The following example constructs a <see cref="System.CodeDom.CodeCompileUnit"/>
that models the program structure of a simple "Hello World" program. For a
larger code example that produces code from this model, see the code
example for the <see cref="System.CodeDom.Compiler.CodeDomProvider"/> class.</para>
			<codelink SampleID="CodeDomExample" SnippetID="2"/>
		</example>
	</doc>
	<doc for="CodeCompileUnit.Namespaces">
		<summary>
			<para> Gets the collection of namespaces.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeNamespaceCollection"/> that indicates the namespaces that the compile unit
   uses.</para>
		</value>
		<remarks>
			<para>You can add and remove <see cref="System.CodeDom.CodeNamespace"/> objects, each 
   representing a namespace, from this collection.</para>
			<note type="note">
   Some languages support only a single
   namespace that contains a single class in a compile unit.
</note>
		</remarks>
		<seealso cref="System.CodeDom.CodeNamespaceCollection"/>
	</doc>
	<doc for="CodeCompileUnit.ReferencedAssemblies">
		<summary>
			<para> Gets the referenced assemblies.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.StringCollection"/> that contains the file names of the
   referenced assemblies.</para>
		</value>
		<remarks>
			<para>You can add and remove file names from this 
      collection.</para>
		</remarks>
	</doc>
	<doc for="CodeCompileUnit.AssemblyCustomAttributes">
		<summary>
			<para> Gets a collection of custom attributes for
      the generated assembly.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeAttributeDeclarationCollection"/> that indicates
   the custom attributes for the generated assembly.</para>
		</value>
		<remarks>
			<para>You can add and remove <see cref="System.CodeDom.CodeAttributeDeclaration"/> objects representing 
   attributes for the
   generated assembly to and from this collection.</para>
		</remarks>
	</doc>
</docs>
