<docs>
	<doc for="CodeSnippetCompileUnit.Equals">
		<nodoc/>
	</doc>
	<doc for="CodeSnippetCompileUnit.GetHashCode">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="CodeSnippetCompileUnit.Value">
		<summary>
			<para> Gets or sets the literal code fragment to represent.</para>
		</summary>
		<value>
			<para> 
      The literal code fragment.</para>
		</value>
	</doc><doc for="CodeSnippetCompileUnit.LinePragma">
		<summary>
			<para>Gets or sets the line and file information about where the code is located in a source code document.</para>
		</summary>
		<value>
			<para>A <see cref="System.CodeDom.CodeLinePragma"/> that indicates the position of the code fragment.</para>
		</value>
		<seealso cref="System.CodeDom.CodeLinePragma"/>
	</doc><doc for="CodeSnippetCompileUnit">
		<summary>
			<para>Represents a literal code fragment that can be compiled.</para>
		</summary>
		<remarks>
			<para><see cref="System.CodeDom.CodeSnippetCompileUnit"/> can
   represent a literal block of code that is included directly in the source without modification.</para>
			<para>A <see cref="System.CodeDom.CodeSnippetCompileUnit"/> stores a section of
code, exactly in its original format, as a string. The CodeDOM does
not translate literal code fragments. Literal code fragments are stored and output
in their original format. CodeDOM objects that contain literal code are provided
so developers can encapsulate code that is already in the target language.</para>
			<para>The <see cref="System.CodeDom.CodeSnippetCompileUnit.Value"/> property contains the literal code fragment as a
string. The <see cref="System.CodeDom.CodeSnippetCompileUnit.LinePragma"/>
property is optional and specifies the position of the code within
a source code document.</para>
		</remarks>
		<example>
			<codelink SampleID="CodeDomSampleBatch" SnippetID="8"/>
		</example>
	</doc>
	<doc for="CodeSnippetCompileUnit.CodeSnippetCompileUnit">
		<summary>
			<para>Initializes a new instance of the <see cref="System.CodeDom.CodeSnippetCompileUnit"/> class.</para>
		</summary>
		<param name="value">The literal code fragment to represent.</param>
		<example>
			<codelink SampleID="CodeDomSampleBatch" SnippetID="8"/>
		</example>
	</doc>
</docs>
