<docs>
	<doc for="GeneratorSupport.GotoStatments">
		<summary>
			<para><see langword="goto"/> statements.</para>
		</summary>
	</doc><doc for="GeneratorSupport.ArraysOfArrays">
		<summary>
			<para> Indicates the generator supports arrays of arrays.</para>
		</summary>
	</doc><doc for="GeneratorSupport.GotoStatements">
		<summary>
			<para>Indicates the generator supports goto statements.</para>
		</summary>
	</doc><doc for="GeneratorSupport.MultidimensionalArrays">
		<summary>
			<para> Indicates the generator supports referencing 
 multidimensional arrays. Currently, the CodeDom cannot be used to
 instantiate multidimensional arrays.</para>
		</summary>
	</doc><doc for="GeneratorSupport.TryCatchStatements">
		<summary>
			<para>Indicates the generator supports 
 <see langword="try...catch"/> statements.</para>
		</summary>
	</doc><doc for="GeneratorSupport.ReturnTypeAttributes">
		<summary>
			<para> Indicates the generator supports return type attribute declarations.</para>
		</summary>
	</doc><doc for="GeneratorSupport.DeclareValueTypes">
		<summary>
			<para>Indicates the generator supports value type declarations.</para>
		</summary>
	</doc><doc for="GeneratorSupport.DeclareEnums">
		<summary>
			<para>Indicates the generator supports enumeration declarations.</para>
		</summary>
	</doc><doc for="GeneratorSupport.DeclareDelegates">
		<summary>
			<para>Indicates the generator supports delegate declarations.</para>
		</summary>
	</doc><doc for="GeneratorSupport.DeclareInterfaces">
		<summary>
			<para>Indicates the generator supports interface declarations.</para>
		</summary>
	</doc><doc for="GeneratorSupport.DeclareEvents">
		<summary>
			<para>Indicates the generator supports event declarations.</para>
		</summary>
	</doc><doc for="GeneratorSupport.AssemblyAttributes">
		<summary>
			<para>Indicates the generator supports assembly attributes.</para>
		</summary>
	</doc><doc for="GeneratorSupport.ParameterAttributes">
		<summary>
			<para>Indicates the generator supports parameter attributes.</para>
		</summary>
	</doc><doc for="GeneratorSupport.ChainedConstructorArguments">
		<summary>
			<para>Indicates the generator supports chained constructor arguments.</para>
		</summary>
	</doc><doc for="GeneratorSupport.PublicStaticMembers">
		<summary>
			<para>Indicates the generator supports public static members.</para>
		</summary>
	</doc><doc for="GeneratorSupport.ComplexExpressions">
		<summary>
			<para>Indicates the generator supports complex expressions.</para>
		</summary>
	</doc><doc for="GeneratorSupport.StaticConstructors">
		<summary>
			<para>Indicates the generator supports static 
      constructors.</para>
		</summary>
	</doc><doc for="GeneratorSupport.EntryPointMethod">
		<summary>
			<para> Indicates the generator supports a program entry point method designation. This is used when building executables.</para>
		</summary>
	</doc>
	<doc for="GeneratorSupport.ReferenceParameters">
		<summary>
			<para>Indicates the generator supports reference and out parameters.</para>
		</summary>
	</doc>
	<doc for="GeneratorSupport.NestedTypes">
		<summary>
			<para> Indicates the generator supports the declaration of nested types.</para>
		</summary>
	</doc>
	<doc for="GeneratorSupport.MultipleInterfaceMembers">
		<summary>
			<para>Indicates the generator supports the declaration of members that implement multiple interfaces.</para>
		</summary>
	</doc>
	<doc for="GeneratorSupport.Win32Resources">
		<summary>
			<para> Indicates the generator supports compilation with Win32 resources.</para>
		</summary>
	</doc>
	<doc for="GeneratorSupport">
		<summary>
			<para>Defines identifiers used to determine whether a code generator supports certain types of code
      elements.</para>
		</summary>
		<remarks>
			<para>These identifiers are used when calling the <see cref="System.CodeDom.Compiler.ICodeGenerator.Supports"/> method of a code generator to
   determine whether the code generator supports generating certain types of code.</para>
		</remarks>
		<seealso cref="System.CodeDom.Compiler.ICodeGenerator"/>
		<seealso cref="System.CodeDom.Compiler.ICodeGenerator.Supports"/>
	</doc>
</docs>
