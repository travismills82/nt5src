<docs>
	<doc for="DesignerAttribute.DesignerAttribute1">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.ComponentModel.DesignerAttribute"/> class using the type that provides
       design-time services.
    </para>
		</summary>
		<param name="designerType">
			<para>A <see cref="System.Type"/> that represents the class that provides design-time services for the component this attribute is bound to.</para>
		</param>
		<remarks>
			<para>
       The class you use for the design-time services must implement the <see cref="System.ComponentModel.Design.IDesigner"/> interface.
    </para>
		</remarks>
	</doc>
	<doc for="DesignerAttribute.DesignerAttribute4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.DesignerAttribute"/> class using the types of the designer and
    designer base class.</para>
		</summary>
		<param name="designerType">
			<para>A <see cref="System.Type"/> that represents the class that provides design-time services for the component this attribute is bound to.</para>
		</param>
		<param name="designerBaseType">A <see cref="System.Type"/> that represents the base class to associate with the <paramref name="designerType"/> .</param>
		<remarks>
			<para>The class you use for the design-time services must implement the <see cref="System.ComponentModel.Design.IDesigner"/> interface.</para>
			<para>The <paramref name="designerBaseType "/>parameter allows you to attach more than one type
 of designer for a given class.</para>
		</remarks>
	</doc>
	<doc for="DesignerAttribute.DesignerBaseTypeName">
		<summary>
			<para>
       Gets
       the name of the base type of this designer.
    </para>
		</summary>
		<value>
			<para>
       The
       name of the base type
       of this designer.
    </para>
		</value>
	</doc>
	<doc for="DesignerAttribute.DesignerTypeName">
		<summary>
			<para>
       Gets the name of the designer type associated with this designer attribute.
    </para>
		</summary>
		<value>
    The name of the designer type
    associated with this designer attribute.
 </value>
	</doc>
	<doc for="DesignerAttribute.TypeId">
		<internalonly/>
		<summary>
			<para>
       This defines a unique ID for this attribute type. It is used
       by filtering algorithms to identify two attributes that are
       the same type. For most attributes, this just returns the
       Type instance for the attribute. DesignerAttribute overrides
       this to include the type of the designer base type.
    </para>
		</summary>
	</doc>
	<doc for="DesignerAttribute">
		<summary>
			<para>Specifies the class used to implement design-time services for a component.</para>
		</summary>
		<remarks>
			<para>The class you use for the
      design-time services must implement the <see cref="System.ComponentModel.Design.IDesigner"/> interface.</para>
			<para>Use the <see cref="System.ComponentModel.DesignerAttribute.DesignerBaseTypeName"/> property to find the designer's base
   type. Use the <see cref="System.ComponentModel.DesignerAttribute.DesignerTypeName"/>property to get the name of the type of
   designer associated with this member.</para>
			<para>For more information, see <see topic="cpconAttributesOverview"/> and <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a class called <c>MyForm</c>. <c>MyForm</c>
   has two attributes, a <see cref="System.ComponentModel.DesignerAttribute"/> that
   specifies this class uses the <see cref="T:System.Windows.Forms.Design.DocumentDesigner"/>, and a <see cref="System.ComponentModel.DesignerCategoryAttribute"/> that
   specifies the <see cref="System.ComponentModel.DesignerCategoryAttribute.Form"/>
   category.</para>
			<codelink SampleID="Classic DesignerAttribute Example" SnippetID="1"/>
			<para>The next example creates an instance of <c>MyForm</c>. Then it gets the attributes
for the class, extracts the <see cref="System.ComponentModel.DesignerAttribute"/>, and prints the name
of the designer.</para>
			<codelink SampleID="Classic DesignerAttribute Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Attribute"/>
	</doc>
	<doc for="DesignerAttribute.GetHashCode">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DesignerAttribute.Equals">
		<nodoc/>
		<summary>
			<para>Returns whether the value of the given object is equal
      to the current <see cref="System.ComponentModel.DesignerAttribute"/> .</para>
		</summary>
		<param name="obj">The object to test the value equality of.</param>
		<returns>
			<para>
				<see langword="true"/> if the value of the given object
   is equal to that of the current; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="DesignerAttribute.DesignerAttribute3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.DesignerAttribute"/> class, using the name of the designer
   class and the base class for the designer.</para>
		</summary>
		<param name="designerTypeName"><para>The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in. </para></param>
		<param name="designerBaseType">A <see cref="System.Type"/> that represents the base class to associate with the <paramref name="designerTypeName"/> .</param>
		<remarks>
			<para>The class you use for the design-time services must implement the <see cref="System.ComponentModel.Design.IDesigner"/> interface.</para>
			<para>The
<paramref name="designerBaseType "/>parameter allows you to
   attach more than one type of designer for a given class.</para>
		</remarks>
	</doc>
	<doc for="DesignerAttribute.DesignerAttribute">
		<overload>
			<para> Initializes a new instance
      of the <see cref="System.ComponentModel.DesignerAttribute"/> class.
      </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.ComponentModel.DesignerAttribute"/> class using the name of the type that
   provides design-time services.
   </para>
		</summary>
		<param name="designerTypeName"><para>The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in. </para></param>
		<remarks>
			<para> The class you use for the design-time services must implement the <see cref="System.ComponentModel.Design.IDesigner"/> interface.
   </para>
		</remarks>
	</doc>
	<doc for="DesignerAttribute.DesignerAttribute2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.ComponentModel.DesignerAttribute"/> class using the designer type and the
   base class for the designer.
   </para>
		</summary>
		<param name="designerTypeName"><para>The concatenation of the fully qualified name of the type that provides design-time services for the component this attribute is bound to, and the name of the assembly this type resides in. </para></param>
		<param name="designerBaseTypeName"><para> The fully qualified name of the base class to associate with the designer class. </para></param>
		<remarks>
			<para> The class you use for the design-time services must implement the <see cref="System.ComponentModel.Design.IDesigner"/> interface.
   </para>
			<para> The <paramref name="designerBaseTypeName "/>parameter allows you to attach more than
one type of designer for a given class.</para>
		</remarks>
	</doc>
</docs>
