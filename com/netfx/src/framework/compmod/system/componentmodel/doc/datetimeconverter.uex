<docs>
	<doc for="DateTimeConverter.CanConvertFrom"><nodoc/>
		<summary>
			<para>Gets a value indicating whether this converter can
      convert an object in the given source type to a <see cref="System.DateTime"/>
      object using the
      specified context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="sourceType">A <see cref="System.Type"/> that represents the type you wish to convert from.</param>
		<returns>
			<para><see langword="true "/>if this object can perform the conversion; otherwise,
   <see langword="false"/>. </para>
		</returns>
		<remarks>
			<para>This converter can only convert a <see cref="System.DateTime"/> object to and from a string.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="DateTimeConverter.CanConvertTo"><nodoc/>
		<summary>
			<para>Gets a value indicating whether this converter can
      convert an object to the given destination type using the context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="destinationType">A <see cref="System.Type"/> that represents the type you wish to convert to.</param>
		<returns>
			<para><see langword="true "/>if this converter can perform the conversion; otherwise,
   <see langword="false"/>. </para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
   <see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
			<note type="inheritinfo">
   Override this method to provide your own conversion requirements.
   </note>
		</remarks>
		<seealso cref="System.ComponentModel.ITypeDescriptorContext"/>
	</doc><doc for="DateTimeConverter.ConvertFrom"><nodoc/>
		<summary>
			<para>Converts the given value object to a <see cref="System.DateTime"/>
object.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="culture">An optional culture info. If not supplied the current culture is assumed.</param>
		<param name="value">The <see cref="System.Object"/> to convert.</param>
		<returns>
			<para>An <see cref="System.Object"/>
that represents the converted <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.Exception">The conversion could not be performed.</exception>
		<remarks>
			<para>This converter can only convert a <see cref="System.DateTime"/> object to and from a string.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="DateTimeConverter.ConvertTo">
		<nodoc/>
		<summary>
			<para>Converts the given value object to a <see cref="System.DateTime"/>
object
using the arguments.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</para></param>
		<param name="culture">An optional culture info. If not supplied the current culture is assumed. </param>
		<param name="value">The <see cref="System.Object"/> to convert.</param>
		<param name="destinationType">The <see cref="System.Type"/> to convert the value to.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="destinationType "/>is <see langword="null"/>.</exception>
		<exception cref="System.NotSupportedException">The conversion could not be performed.</exception>
		<remarks>
			<para>This converter can only convert a <see cref="System.DateTime"/> object to and from a string.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
can return <see langword="null"/>.</para>
		</remarks>
	</doc><doc for="DateTimeConverter">
		<summary>
			<para>Provides a type converter to convert <see cref="System.DateTime"/>
objects to and from various other representations.</para>
		</summary>
		<remarks>
			<para>This converter can only convert a <see cref="System.DateTime"/> object to and from a string.</para>
			<para><see cref="M:System.ComponentModel.TypeConverter.ConvertFrom"/>uses the <see cref="System.DateTime.Parse"/> method
of <see cref="System.DateTime"/> to convert from a string.</para>
			<para><see cref="M:System.ComponentModel.TypeConverter.ConvertTo"/> uses the current culture, if a <see cref="System.Globalization.CultureInfo"/> object is not supplied. Generally,
<see cref="M:System.ComponentModel.TypeConverter.ConvertTo"/> uses <see cref="System.Globalization.DateTimeFormatInfo.ShortDatePattern"/> to format a date and <see cref="System.Globalization.DateTimeFormatInfo.ShortDatePattern"/> with <see cref="System.Globalization.DateTimeFormatInfo.ShortTimePattern"/> to format a date and 
time. If <see cref="System.Globalization.CultureInfo.InvariantCulture"/> is
passed, <see cref="M:System.ComponentModel.TypeConverter.ConvertTo"/> uses yyyy-mm-dd to
format a date and <see cref="System.Object.ToString"/> to format a date and time.</para>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
			<note type="note">
   You should never create
   an instance of <see cref="System.ComponentModel.DateTimeConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
   in the <see cref="System.ComponentModel.TypeConverter"/> base class.
   
</note>
		</remarks>
		<example>
			<para>The following sample converts a variable of
      type <see cref="System.DateTime"/> to a string, and vice
      versa.</para>
			<codelink SampleID="Converters" SnippetID="9"/>
		</example>
	</doc>
</docs>
