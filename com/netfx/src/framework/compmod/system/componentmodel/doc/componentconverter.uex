<docs>
	<doc for="ComponentConverter.ComponentConverter"><nodoc/>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.ComponentConverter"/> class.</para>
		</summary>
		<param name="type">A <see cref="System.Type"/> that represents the type to associate with this component converter.</param>
	</doc><doc for="ComponentConverter.GetProperties"><nodoc/>
		<summary>
			<para>Gets a collection of properties for the type of component
      specified by the value
      parameter.</para>
		</summary>
		<param name="context">An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
		<param name="value">An <see cref="System.Object"/> that specifies the type of component to get the properties for.</param>
		<param name="attributes"><para>An array of type <see cref="System.Attribute"/> that will be used as a filter. </para></param>
		<returns>
			<para>A <see cref="System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed
   for the component, or <see langword="null "/>if there are no properties.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
   <see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
			<para>The <paramref name="attributes "/>array will be used to filter the array. The
<paramref name="attributes "/>can have a mix of <see cref="System.Type"/> and <see cref="System.Attribute"/> objects. Filtering is defined by the
following rules:</para>
			<list type="bullet"><item>
					<term>       A <see cref="System.Type"/>
object will be treated as a wildcard; it will match any property that has the
<see cref="System.Type"/> in its set of attributes.</term>
				</item>
				<item>
					<term>       If a property does not have an <see cref="System.Attribute"/> of the same class, the property will not be included
   in the returned array.</term>
				</item>
				<item>
					<term>       If the attribute is an instance of <see cref="System.Attribute"/>, the property must be an exact match or
   it will not be included in the returned array.</term>
				</item>
				<item>
					<term>       If a <see cref="System.Attribute"/> instance is specified and it is the
   default property, it will be included in the returned array even if there is
   no instance of the <see cref="System.Attribute"/> in the property.</term>
				</item>
			</list>
		</remarks>
	</doc><doc for="ComponentConverter.GetPropertiesSupported">
		<nodoc/>
		<summary>
			<para>Gets a value indicating whether this object supports properties using the
      specified context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<returns>
			<para><see langword="true "/>because <see cref="System.ComponentModel.TypeConverter.GetProperties"/> should be
   called to find the properties of this object. This method never
   returns <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
	</doc><doc for="ComponentConverter">
		<summary>
			<para>Provides a type converter to convert components to and
      from various other representations.</para>
		</summary>
		<remarks>
			<para>This class implements <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported"/> and
<see cref="M:System.ComponentModel.TypeConverter.GetProperties"/> by
   returning the properties through the <see cref="System.ComponentModel.TypeDescriptor.GetProperties"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>
   .</para>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
			<note type="note">
   You should never create
   an instance of <see cref="System.ComponentModel.ComponentConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
   in the <see cref="System.ComponentModel.TypeConverter"/> base class.
   
</note>
			<para>This converter converts an object that implements
<see cref="System.ComponentModel.IComponent"/> 
and displays its properties in the Properties window.</para>
		</remarks>
	</doc></docs>
