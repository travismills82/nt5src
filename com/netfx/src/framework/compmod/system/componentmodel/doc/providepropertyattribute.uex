<docs>
	<doc for="ProvidePropertyAttribute.PropertyName">
		<summary>
			<para>Gets the name of a property that this class provides.</para>
		</summary>
		<value>
			<para>The name of a property that this class provides.</para>
		</value>
	</doc>
	<doc for="ProvidePropertyAttribute.TypeId">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="ProvidePropertyAttribute">
		<summary>
			<para>Specifies the name of the property that an implementor
      of <see cref="System.ComponentModel.IExtenderProvider"/> offers to other
      components.</para>
		</summary>
		<remarks>
			<para>When you mark a class with this attribute, you tell the code
      generator to create an extender property with the name you provide. The marked class
      must implement <see cref="System.ComponentModel.IExtenderProvider"/>
      . As a result, the new property can be used by other components in a
      container.</para>
			<para>Within the marked class, you must implement
   <see langword="Get"/>&lt;name&gt; and <see langword="Set"/>&lt;name&gt;
      methods. For example, if you mark a class with
      [ProvideProperty("PropertyName")], you must implement
   <see langword="GetPropertyName"/> and <see langword="SetPropertyName"/> methods. To specify that the new 
      property will be an extender property, you must implement from <see cref="System.ComponentModel.IExtenderProvider"/>, you must
      also implement a <see langword="CanExtend"/>
      method.</para>
			<para>For more information, see <see topic="cpconAttributesOverview"/>and <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example marks <c>MyClass</c> with a <see cref="System.ComponentModel.ProvidePropertyAttribute"/> that tells
the compiler to create a property called <c>MyProperty</c>
from the <c>GetMyProperty</c> and <c>SetMyProperty</c>
methods.</para>
			<codelink SampleID="Classic ProvidePropertyAttribute Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ProvidePropertyAttribute.ReceiverTypeName">
		<summary>
			<para> Gets the name of the data type this property can extend.
      </para>
		</summary>
		<value>
			<para>The name of the data type this property can extend.</para>
		</value>
	</doc>
	<doc for="ProvidePropertyAttribute.GetHashCode">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ProvidePropertyAttribute.Equals">
		<nodoc/>
		<summary>
			<para>Returns whether the value of the given object is equal
      to the current <see cref="System.ComponentModel.ProvidePropertyAttribute"/> .</para>
		</summary>
		<param name="obj">The object to test the value equality of.</param>
		<returns>
			<para>
				<see langword="true"/> if the value of the given object
   is equal to that of the current; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="ProvidePropertyAttribute.ProvidePropertyAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.ProvidePropertyAttribute"/> class with
   the name of the property and the type of its receiver.</para>
		</summary>
		<param name="propertyName"><para>The name of the property extending to an object of the specified type.</para></param>
		<param name=" receiverTypeName">The name of the data type this property can extend.</param>
	</doc>
	<doc for="ProvidePropertyAttribute.ProvidePropertyAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.ProvidePropertyAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.ProvidePropertyAttribute"/> class with
   the name of the property and its <see cref="System.Type"/> . </para>
		</summary>
		<param name="propertyName"><para>The name of the property extending to an object of the specified type.</para></param>
		<param name=" receiverType">The <see cref="System.Type"/> of the data type of the object that can receive the property.</param>
	</doc>
</docs>
