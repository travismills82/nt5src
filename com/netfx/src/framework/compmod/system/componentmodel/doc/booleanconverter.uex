<docs>
	<doc for="BooleanConverter.CanConvertFrom">
		<nodoc/>
		<summary>
			<para>Gets a value indicating whether this converter can
      convert an object in the given source type to a Boolean object using the
      specified context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="sourceType">A <see cref="System.Type"/> that represents the type you wish to convert from.</param>
		<returns>
			<para><see langword="true "/>if this object can perform the
   conversion; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>This converter can only convert a Boolean object to and from a string.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="BooleanConverter.GetStandardValuesExclusive"><nodoc/>
		<summary>
			<para>Gets a value indicating whether the list of standard values returned from
      <see cref="System.ComponentModel.BooleanConverter.GetStandardValues"/> is an exclusive list. </para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<returns>
			<para><see langword="true "/>because the
   <see cref="System.ComponentModel.TypeConverter.StandardValuesCollection"/>
returned from <see cref="System.ComponentModel.BooleanConverter.GetStandardValues"/> is an exhaustive list of
possible values. This method never returns <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The
      Boolean data type has only two standard values,
      <see langword="true "/>and <see langword="false"/>. The <see cref="System.ComponentModel.TypeConverter.StandardValuesCollection"/> returned from this method
      has all possible values. Therefore,
      this method always returns
      <see langword="true"/>. </para>
		</remarks>
	</doc><doc for="BooleanConverter.GetStandardValuesSupported"><nodoc/>
		<summary>
			<para>Gets a value indicating whether this object supports a standard set of values
      that can be picked from a list.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<returns>
			<para><see langword="true "/>because <see cref="System.ComponentModel.BooleanConverter.GetStandardValues"/> can be called to find a
   common set of values the object supports. This method never returns
   <see langword="false"/>. </para>
		</returns>
		<remarks>
			<para>The Boolean data type
      supports standard values, because a Boolean can only be <see langword="true "/>or
      <see langword="false"/>. Therefore, this method always returns <see langword="true"/>. </para>
		</remarks>
	</doc><doc for="BooleanConverter.ConvertFrom">
		<nodoc/>
		<summary>
			<para>Converts the given value
      object to a Boolean object.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="value">The <see cref="System.Object"/> to convert.</param>
		<param name=" culture"></param>
		<returns>
			<para>An <see cref="System.Object"/>
that represents the converted <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.Exception">The conversion could not be performed.</exception>
		<remarks>
			<para>This converter can only convert a Boolean object to and from a string.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="BooleanConverter.GetStandardValues">
		<nodoc/>
		<summary>
			<para>Gets a collection of standard values
      for the Boolean data type.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<returns>
			<para>A <see cref="System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set
   of valid values.</para>
		</returns>
		<remarks>
			<para>The Boolean data type has two standard values, <see langword="true "/>and
<see langword="false"/>. </para>
		</remarks>
	</doc><doc for="BooleanConverter">
		<summary>
			<para>Provides a type converter to convert <see cref="System.Boolean"/>
objects to and from various other representations.</para>
		</summary>
		<remarks>
			<para>This converter can only convert a <see cref="System.Boolean"/> object to and from a string.</para>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
			<note type="note">
 You should never create an
 instance of a <see cref="System.ComponentModel.BooleanConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
 in the <see cref="System.ComponentModel.TypeConverter"/> base class.
 
</note>
		</remarks>
		<example>
			<para>The following example converts a variable of type <see cref="System.Boolean"/> to and from a string.</para>
			<codelink SampleID="Converters" SnippetID="3"/>
		</example>
	</doc>
</docs>
