<docs>
	<doc for="MemberDescriptor.MemberDescriptor">
		<overload>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.MemberDescriptor"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.MemberDescriptor"/> class with 
    the specified name of the
    member.</para>
		</summary>
		<param name="name">The name of the member.</param>
	</doc>
	<doc for="MemberDescriptor.MemberDescriptor1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.MemberDescriptor"/> class with 
    the specified name of the member and an array of attributes.</para>
		</summary>
		<param name="name">The name of the member.</param>
		<param name="attributes"><para>An array of type <see cref="System.Attribute"/> that contains the member attributes.</para></param>
		<exception cref="System.ArgumentException"><para>The name is an empty string ("") or <see langword="null"/>.</para></exception>
	</doc>
	<doc for="MemberDescriptor.MemberDescriptor2">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.ComponentModel.MemberDescriptor"/> class with the specified <see cref="System.ComponentModel.MemberDescriptor"/>.
    </para>
		</summary>
		<param name="descr">
    A <see cref="System.ComponentModel.MemberDescriptor"/> that contains the name of the member and its attributes.
 </param>
	</doc>
	<doc for="MemberDescriptor.Name">
		<summary>
			<para>
       Gets the
       name of the member.
    </para>
		</summary>
		<value>
			<para>
       The name of the member.
    </para>
		</value>
		<seealso cref="System.ComponentModel.MemberDescriptor.Category"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.Description"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.IsBrowsable"/>
	</doc>
	<doc for="MemberDescriptor.GetHashCode">
		<nodoc/>
		<summary>
			<para> Returns the hashcode for this object.
      </para>
		</summary>
	</doc><doc for="MemberDescriptor.Description">
		<summary>
			<para> Gets the description of
      the member, as specified in the <see cref="System.ComponentModel.DescriptionAttribute"/>.
      </para>
		</summary>
		<value>
			<para> The description of the member. If there is no <see cref="System.ComponentModel.DescriptionAttribute"/> , the property value is set to the
   default,
   which is an empty string ("").
   </para>
		</value>
		<remarks>
			<para> 
      A visual designer can use this description to display information about
      this member.
      </para>
		</remarks>
		<seealso cref="System.ComponentModel.MemberDescriptor.Category"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.IsBrowsable"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.Name"/>
	</doc><doc for="MemberDescriptor.DesignTimeOnly">
		<summary>
			<para>Gets whether this member should be set only at
      design time, as specified in the <see cref="System.ComponentModel.DesignOnlyAttribute"/>.</para>
		</summary>
		<value>
			<para><see langword="true "/>if this member should be set only
   at design time; <see langword="false "/>if the member can be set during run time.</para>
		</value>
		<remarks>
			<para>If there is no <see cref="System.ComponentModel.DesignOnlyAttribute"/> , the return value is the default,
   which is <see langword="false"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.MemberDescriptor.DisplayName"/>
	</doc><doc for="MemberDescriptor.DisplayName">
		<summary>
			<para>Gets the name that can be displayed in a window, such as a
      Properties window.</para>
		</summary>
		<value>
			<para>The name to display for the member.</para>
		</value>
		<seealso cref="System.ComponentModel.MemberDescriptor.DesignTimeOnly"/>
	</doc><doc for="MemberDescriptor.NameHashCode">
		<summary>
			<para> Gets the hash
      code for the name of the member, as specified in <see cref="System.String.GetHashCode"/>.
      </para>
		</summary>
		<value>
			<para> The hash code
      for the name of the member.
      </para>
		</value>
	</doc><doc for="MemberDescriptor.Equals">
		<summary>
			<para> Compares this instance to the given object to see if they are equivalent.
      </para>
		</summary>
		<param name="obj">The object to compare to the current instance. </param>
		<returns>
			<para><see langword="true "/>if
   equivalent;
   otherwise, <see langword="false"/>.
   </para>
		</returns>
	</doc><doc for="MemberDescriptor.FindMethod1">
		<summary>
			<para> Finds the given method through reflection, with an 
      option to search only public methods.
      </para>
		</summary>
		<param name="componentClass">The component that contains the method. </param>
		<param name="name">The name of the method to find. </param>
		<param name="args"><para> An array of parameters for the method, used to choose between overloaded methods. </para></param>
		<param name="returnType">The type to return for the method. </param>
		<param name="publicOnly">Whether to restrict search to public methods. </param>
		<returns>
			<para> A <see cref="System.Reflection.MethodInfo"/> that represents the method. If the method is
   not found, <see langword="null "/>is returned.
   </para>
		</returns>
	</doc><doc for="MemberDescriptor.FindMethod">
		<overload>
			<para>Finds the given method through reflection.</para>
		</overload>
		<summary>
			<para> Finds the given method through reflection, searching only for public methods.</para>
		</summary>
		<param name="componentClass">The component that contains the method.</param>
		<param name="name">The name of the method to find.</param>
		<param name="args"><para> An array of parameters for the method, used to choose between overloaded methods. </para></param>
		<param name="returnType">The type to return for the method.</param>
		<returns>
			<para>A <see cref="System.Reflection.MethodInfo"/> that represents the method. If the method is
   not found, <see langword="null "/>is returned.</para>
		</returns>
	</doc><doc for="MemberDescriptor.GetInvokee">
		<summary>
			<para> 
      Gets the component on which to invoke a method.
      </para>
		</summary>
		<param name="componentClass"><para>A <see cref="T:System.Type"/> representing the type of component this <see cref="System.ComponentModel.MemberDescriptor"/> is bound to. For example, if this <see cref="System.ComponentModel.MemberDescriptor"/> describes a property, this parameter should be the class that the property is declared on. </para></param>
		<param name="component">An instance of the object to call. </param>
		<returns>
			<para> An instance of the component to invoke. This method returns a visual designer
      when the property is attached to a visual designer.
      </para>
		</returns>
	</doc><doc for="MemberDescriptor.MemberDescriptor3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.MemberDescriptor"/> class with the name in the specified
<see cref="System.ComponentModel.MemberDescriptor"/> and the attributes
   in both the old <see cref="System.ComponentModel.MemberDescriptor"/> and the <see cref="System.Attribute"/> array.</para>
		</summary>
		<param name="oldMemberDescriptor">A <see cref="System.ComponentModel.MemberDescriptor"/> that has the name of the member and its attributes.</param>
		<param name="newAttributes">An array of <see cref="System.Attribute"/> objects with the attributes you want to add to the member.</param>
		<remarks>
			<para>This constructor appends the attributes in
      the <see cref="System.Attribute"/> array to the attributes in the old <see cref="System.ComponentModel.MemberDescriptor"/>.</para>
		</remarks>
	</doc><doc for="MemberDescriptor.Category">
		<summary>
			<para> Gets the name of the category to which
      the
      member belongs, as specified in the <see cref="System.ComponentModel.CategoryAttribute"/>.
      </para>
		</summary>
		<value>
			<para> The name of the category to which the member belongs. If
      there is no <see cref="System.ComponentModel.CategoryAttribute"/>,
      the category name is set to the default category, <see langword="Misc"/>
      .
      </para>
		</value>
		<remarks>
			<para> A visual
      designer can use this property value to display members in categories.
      </para>
		</remarks>
		<seealso cref="System.ComponentModel.MemberDescriptor.Description"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.IsBrowsable"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.Name"/>
	</doc><doc for="MemberDescriptor.IsBrowsable">
		<summary>
			<para> Gets a value indicating whether the member is browsable, as specified in the
   <see cref="System.ComponentModel.BrowsableAttribute"/>.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the member is browsable; otherwise,
<see langword="false"/>. If there
   is no <see cref="System.ComponentModel.BrowsableAttribute"/>, the
   property value is set to the default, which is <see langword="true"/>.
   </para>
		</value>
		<remarks>
			<para> A visual designer typically displays the members that are browsable in the
      Properties window.
      </para>
		</remarks>
		<seealso cref="System.ComponentModel.MemberDescriptor.Category"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.Description"/>
		<seealso cref="System.ComponentModel.MemberDescriptor.Name"/>
	</doc><doc for="MemberDescriptor.CreateAttributeCollection">
		<summary>
			<para> Creates a collection of attributes
      using the array of attributes passed to the constructor.
      </para>
		</summary>
		<returns>
			<para> A
      new <see cref="System.ComponentModel.AttributeCollection"/> that contains the <see cref="System.ComponentModel.MemberDescriptor.AttributeArray"/> attributes.
      </para>
		</returns>
		<remarks>
			<para> This method is called from the <see cref="System.ComponentModel.MemberDescriptor.Attributes"/> property when there is
   no <see cref="System.ComponentModel.AttributeCollection"/>
   for this member. If there are no attributes in the <see cref="System.ComponentModel.MemberDescriptor.AttributeArray"/>, this will return an
   empty <see cref="System.ComponentModel.AttributeCollection"/> .
   </para>
		</remarks>
	</doc><doc for="MemberDescriptor.FillAttributes">
		<summary>
			<para> When
      overridden in a derived class, adds the attributes of the inheriting class
      to the specified list of attributes in the parent class.
      </para>
		</summary>
		<param name="attributeList">An <see cref="System.Collections.IList"/> that lists the attributes in the parent class. Initially, this is empty. </param>
		<remarks>
			<para> For duplicate attributes, the last one added to
      the list is kept.</para>
			<para> The <see cref="System.Collections.IList"/> with the attributes is created once. If
   there are duplicate attributes in the list, only the first instance is saved;
   all subsequent duplicate attributes are removed from the list.
   </para>
		</remarks>
	</doc><doc for="MemberDescriptor.GetSite">
		<summary>
			<para> Gets a component site
      for the given component.
      </para>
		</summary>
		<param name="component">The component for which you want to find a site. </param>
		<returns>
			<para> The site of the component, or <see langword="null "/>
if a site does not exist.</para>
		</returns>
	</doc><doc for="MemberDescriptor.AttributeArray">
		<summary>
			<para> Gets or sets an array of
 attributes.
 </para>
		</summary>
		<value>
			<para> An array of type <see cref="System.Attribute"/> that contains the attributes of this 
 member. Accessing this member allows derived classes to modify the default
 set of
 Attributes that are used in
 CreateAttributeCollection.
 </para>
		</value>
		<seealso cref="System.ComponentModel.MemberDescriptor.Attributes"/>
	</doc>
	<doc for="MemberDescriptor">
		<summary>
			<para>An abstract base class that represents a class member, such as a property, or
 event. </para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.MemberDescriptor"/> is the base class for the <see cref="System.ComponentModel.EventDescriptor"/> and the <see cref="System.ComponentModel.PropertyDescriptor"/>
classes. The <see cref="System.ComponentModel.EventDescriptor"/> class provides
a description of an event, and the <see cref="System.ComponentModel.PropertyDescriptor"/> class provides a description of a property.</para>
			<para>This class defines properties and methods to access its stored
 attributes. <see cref="System.ComponentModel.MemberDescriptor.Attributes"/> gets the collection of
 attributes. <see cref="System.ComponentModel.MemberDescriptor.Category"/>, <see cref="System.ComponentModel.MemberDescriptor.IsBrowsable"/>, <see cref="System.ComponentModel.MemberDescriptor.Description"/>, and <see cref="System.ComponentModel.MemberDescriptor.DesignTimeOnly"/> retrieve the values of
 those specific attributes. <see cref="System.ComponentModel.MemberDescriptor.Name"/> and
<see cref="System.ComponentModel.MemberDescriptor.DisplayName"/> provide the name of the
 member.</para>
			<para>The <see cref="System.ComponentModel.MemberDescriptor"/> also defines an <see cref="System.ComponentModel.MemberDescriptor.Equals"/> method to
compare this <see cref="System.ComponentModel.MemberDescriptor"/> to another.</para>
			<note type="note">
 Typically, you inherit from the <see cref="System.ComponentModel.EventDescriptor"/> and <see cref="System.ComponentModel.PropertyDescriptor"/> classes, and
 not from this class.
 
</note>
		</remarks>
		<example>
			<para>Since most of the usage of this class will fall on the inherited classes
 <see cref="System.ComponentModel.EventDescriptor"/> and 
 <see cref="System.ComponentModel.PropertyDescriptor"/>, refer to the
 samples in these classes, respectively.</para>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
	</doc>
	<doc for="MemberDescriptor.Attributes">
		<summary>
			<para>Gets the collection of attributes for this member.</para>
		</summary>
		<value>
			<para>An <see cref="System.ComponentModel.AttributeCollection"/> that
 provides the attributes for this member. If there are no attributes in the
<see cref="System.ComponentModel.MemberDescriptor.AttributeArray"/> , the
 property value is an empty
 collection.</para>
		</value>
		<remarks>
			<para>If there is no <see cref="System.ComponentModel.AttributeCollection"/> for this member, this
 property calls <see cref="System.ComponentModel.MemberDescriptor.CreateAttributeCollection"/> to create a new <see cref="System.ComponentModel.AttributeCollection"/>
 using the array of <see cref="System.Attribute"/> objects passed to the constructor.</para>
		</remarks>
		<seealso cref="System.ComponentModel.MemberDescriptor.AttributeArray"/>
	</doc>
</docs>
