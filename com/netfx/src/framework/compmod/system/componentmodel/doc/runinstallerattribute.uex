<docs>
	<doc for="RunInstallerAttribute.RunInstallerAttribute">
		<summary>
			<para>
       Initializes a new instance of
       the <see cref="System.ComponentModel.RunInstallerAttribute"/> class.
    </para>
		</summary>
		<param name="runInstaller">
			<see langword="true"/> if an installer should be invoked during installation of an assembly; otherwise, <see langword="false"/>.
 </param>
	</doc>
	<doc for="RunInstallerAttribute.RunInstaller">
		<summary>
			<para>
       Gets a value indicating whether an installer should be
       invoked during installation of an assembly.
    </para>
		</summary>
		<value>
			<see langword="true "/>if an 
    installer should be invoked during installation of an assembly; otherwise,
 <see langword="false"/>.
 </value>
	</doc>
	<doc for="RunInstallerAttribute.Equals">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="RunInstallerAttribute.IsDefaultAttribute">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="RunInstallerAttribute.GetHashCode">
		<nodoc/>
		<summary>
			<para> Returns the hashcode for this object.
      </para>
		</summary>
	</doc>
	<doc for="RunInstallerAttribute.Default">
		<internalonly/>
		<summary>
			<para>Specifies the default visiblity, which is <see cref="System.ComponentModel.RunInstallerAttribute.No"/>. This <see langword="static"/> field is
   read-only.</para>
		</summary>
		<remarks>
			<para>When
      you mark a property with this value, this attribute is set to the constant
      member <see cref="System.ComponentModel.RunInstallerAttribute.No"/>. Therefore, when
      you want to check whether the attribute is set to this value in your code, you must
      specify the attribute as <see cref="System.ComponentModel.RunInstallerAttribute.No" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="RunInstallerAttribute">
		<summary>
			<para>Specifies whether the Visual Studio .NET Custom Action Installer or
      the <see topic="cpconInstallerUtilityInstallutilexe"/> should be invoked when the assembly is
      installed. </para>
		</summary>
		<remarks>
			<para>If a class that inherits from <see cref="T:System.Configuration.Install.Installer"/> is marked with the 
<see cref="M:System.ComponentModel.RunInstallerAttribute.#ctor"/> constructor of 
   the value <see langword="true"/>, Visual Studio .NET's Custom Action Installer or
   the InstallUtil.exe will be invoked when the assembly is installed. Members
   marked with the <see cref="M:System.ComponentModel.RunInstallerAttribute.#ctor"/> constructor of
   the value <see langword="false"/> will not invoke an installer.
   The default is <see langword="false"/>.</para>
			<note type="note">
   When you mark a property with the
<see cref="M:System.ComponentModel.RunInstallerAttribute.#ctor"/> constructor of 
   the value <see langword="true"/>, the value of this attribute is
   set to the constant member <see cref="System.ComponentModel.RunInstallerAttribute.Yes"/>. For a property
   marked with the <see cref="M:System.ComponentModel.RunInstallerAttribute.#ctor"/> constructor of
   the value <see langword="false"/>, the value is
<see cref="System.ComponentModel.RunInstallerAttribute.No"/>. Therefore, when you want to check the
   value of this attribute in your code, you must specify the attribute as <see cref="System.ComponentModel.RunInstallerAttribute.Yes" qualify="true"/> or <see cref="System.ComponentModel.RunInstallerAttribute.No" qualify="true"/>.
   
</note>
			<para>For more information, see <see topic="cpconAttributesOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example specifies that the installer
      should be run for <c>MyProjectInstaller</c>.</para>
			<codelink SampleID="Classic RunInstallerAttribute Example" SnippetID="1"/>
			<para>The next example creates an instance of <c>MyProjectInstaller</c>. Then it gets the attributes for
 the class, extracts the <see cref="System.ComponentModel.RunInstallerAttribute"/>, and prints whether to
 run the installer.</para>
			<codelink SampleID="Classic RunInstallerAttribute Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Attribute"/>
		<seealso cref="T:System.Configuration.Install.Installer"/>
	</doc>
	<doc for="RunInstallerAttribute.Yes">
		<summary>
			<para>Specifies that the Visual Studio .NET Custom
      Action Installer or the <see topic="cpconInstallerUtilityInstallutilexe"/> should be invoked when the assembly
      is installed. This <see langword="static"/> field is
      read-only.</para>
		</summary>
		<remarks>
			<para>When you mark a property with the <see cref="M:System.ComponentModel.RunInstallerAttribute.#ctor"/> 
constructor of the value <see langword="true"/>, the value of this attribute is
set to the constant member <see cref="System.ComponentModel.RunInstallerAttribute.Yes"/> . Therefore,
when you want to check whether the attribute is set to this value in your code, you must
specify the attribute as <see cref="System.ComponentModel.RunInstallerAttribute.Yes" qualify="true"/>.</para>
		</remarks>
	</doc>
	<doc for="RunInstallerAttribute.No">
		<summary>
			<para>Specifies that the Visual Studio .NET Custom
      Action Installer or the <see topic="cpconInstallerUtilityInstallutilexe"/> should not be invoked when the assembly
      is installed. This <see langword="static"/> field is
      read-only.</para>
		</summary>
		<remarks>
			<para>This field is the default setting for this attribute.</para>
			<para>When you mark a property with the <see cref="M:System.ComponentModel.RunInstallerAttribute.#ctor"/> 
constructor of the value <see langword="false"/>, the value of this attribute
is set to the constant member <see cref="System.ComponentModel.RunInstallerAttribute.No"/>. Therefore, when you
want to check whether the attribute is set to this value in your code, you must
specify the attribute as <see cref="System.ComponentModel.RunInstallerAttribute.No" qualify="true"/>.</para>
		</remarks>
	</doc>
</docs>
