<docs>
	<doc for="PropertyDescriptorCollection.Add">
		<summary>
			<para>Adds the specified <see cref="System.ComponentModel.PropertyDescriptor"/> to the collection.</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.PropertyDescriptor"/> to add to the collection.</param>
		<returns>
			<para>The index of the <see cref="System.ComponentModel.PropertyDescriptor"/> that was added to the collection.</para>
		</returns>
	</doc>
	<doc for="PropertyDescriptorCollection.Clear">
		<summary>
			<para>Removes all <see cref="System.ComponentModel.PropertyDescriptor"/> objects from the collection.</para>
		</summary>
	</doc>
	<doc for="PropertyDescriptorCollection.IndexOf">
		<summary>
			<para>Returns the index of the given <see cref="System.ComponentModel.PropertyDescriptor"/> .</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.PropertyDescriptor"/> to return the index of.</param>
		<returns>
			<para>The index of the given <see cref="System.ComponentModel.PropertyDescriptor"/> .</para>
		</returns>
	</doc>
	<doc for="PropertyDescriptorCollection.Remove">
		<summary>
			<para>Removes the specified <see cref="System.ComponentModel.PropertyDescriptor"/> from the collection.</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.PropertyDescriptor"/> to remove from the collection.</param>
	</doc>
	<doc for="PropertyDescriptorCollection.RemoveAt">
		<summary>
			<para>Removes the <see cref="System.ComponentModel.PropertyDescriptor"/> at the specified index from the collection.</para>
		</summary>
		<param name="index">The index of the <see cref="System.ComponentModel.PropertyDescriptor"/> to remove from the collection.</param>
	</doc>
	<doc for="PropertyDescriptorCollection.PropertyDescriptorCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.PropertyDescriptorCollection"/>
class.</para>
		</summary>
		<param name="properties">An array of type <see cref="System.ComponentModel.PropertyDescriptor"/> that provides the properties for this collection.</param>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="PropertyDescriptorCollection">
		<summary>
			<para>Represents a collection of <see cref="System.ComponentModel.PropertyDescriptor"/> objects.</para>
		</summary>
		<remarks>
			<para>
				<see cref="System.ComponentModel.PropertyDescriptorCollection"/> is read-only; it does not implement
   methods that add or remove properties. You must inherit from this class to
   implement these methods.</para>
			<para>Using the properties available in the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> class, you
can query the collection about its contents. Use the
<see cref="System.ComponentModel.PropertyDescriptorCollection.Count"/> property to
determine the
number of elements in the collection.
Use the <see cref="System.ComponentModel.PropertyDescriptorCollection.this"/> property to
get a specific property by index number or by name.</para>
			<para>In addition to properties, you can use
   the <see cref="System.ComponentModel.PropertyDescriptorCollection.Find"/> method
   to get a description of the property with the specified name from the collection.</para>
		</remarks>
		<example>
			<para>The following example creates a new <see cref="System.ComponentModel.PropertyDescriptorCollection"/> using the
   properties on <c>button1</c>. It
assumes that <c>button1</c>
has been instantiated on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection Example" SnippetID="1"/>
			<para> The next example prints all the properties on a
   button in a text box. It assumes that <c>button1</c> and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection Example" SnippetID="2"/>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="PropertyDescriptorCollection.this1">
		<summary>
			<para>Gets the <see cref="System.ComponentModel.PropertyDescriptor"/> with the specified name.</para>
		</summary>
		<param name="name">The name of the <see cref="System.ComponentModel.PropertyDescriptor"/> to get from the collection.</param>
		<value>
			<para>The <see cref="System.ComponentModel.PropertyDescriptor"/> with the
   specified name,
   or <see langword="null "/>
   if the property does not exist.</para>
		</value>
		<remarks>
			<para>
				<see cref="System.ComponentModel.PropertyDescriptorCollection.this"/> is 
   case-sensitive when searching for names. That is, the names "Pname" and "pname"
   are considered to
   be two different properties.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.ComponentModel.PropertyDescriptorCollection.this"/> property to
   print the type of component for the <see cref="System.ComponentModel.PropertyDescriptor"/> specified by
   the index. It assumes that <c>button1</c> and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection.this1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="PropertyDescriptorCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator for this class.</para>
		</summary>
		<returns>
			<para>An enumerator of type <see cref="System.Collections.IEnumerator"/>.</para>
		</returns>
		<example>
			<para>The following example gets an enumerator for the
      properties on <c>button1</c>. It
   uses the enumerator to print the names of the properties in the collection. It
   assumes that <c>button1</c>
and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection.GetEnumerator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.Collections.IEnumerator"/>
	</doc>
	<doc for="PropertyDescriptorCollection.InternalSort1">
		<summary>
			<para>Sorts the members of this collection, using the specified <see cref="System.Collections.IComparer"/> . </para>
		</summary>
		<param name="sorter">A comparer to use to sort the <see cref="System.ComponentModel.PropertyDescriptor"/> objects in this collection.</param>
		<seealso cref="System.Collections.IComparer"/>
	</doc>
	<doc for="PropertyDescriptorCollection.Sort">
		<overload>
			<para>Sorts the members of this collection.</para>
		</overload>
		<summary>
			<para> Sorts the members of this collection, using the default sort for this collection,
      which is usually alphabetical.
      </para>
		</summary>
		<returns>
			<para>A new <see cref="System.ComponentModel.PropertyDescriptorCollection"/> that contains the sorted <see cref="System.ComponentModel.PropertyDescriptor"/> objects.</para>
		</returns>
	</doc>
	<doc for="PropertyDescriptorCollection.Sort3">
		<summary>
			<para> Sorts the members of this collection, using the specified <see cref="System.Collections.IComparer"/>
.</para>
		</summary>
		<param name="comparer">A comparer to use to sort the <see cref="System.ComponentModel.PropertyDescriptor"/> objects in this collection.</param>
		<returns>
			<para>A new <see cref="System.ComponentModel.PropertyDescriptorCollection"/> that contains the sorted <see cref="System.ComponentModel.PropertyDescriptor"/> objects.</para>
		</returns>
		<seealso cref="System.Collections.IComparer"/>
	</doc>
	<doc for="PropertyDescriptorCollection.IList.Clear">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.Clear">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.RemoveAt">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.Count">
		<summary>
			<para>Gets the number of property descriptors in the collection.</para>
		</summary>
		<value>
			<para>The number of
      property
      descriptors in the collection.</para>
		</value>
		<remarks>
			<para>You can use the <see cref="System.ComponentModel.PropertyDescriptorCollection.Count"/>
property to set the limits of a loop that iterates through a
collection of objects. Because the collection is zero-based, be sure to use <c>Count - 1</c>
as the upper boundary
of the loop.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.ComponentModel.PropertyDescriptorCollection.Count"/> property to
   print the number of properties on <c>button1</c>. It assumes that <c>button1</c> and <c>textBox1</c>
have
been instantianted on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection.Count Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="PropertyDescriptorCollection.this">
		<overload>
			<para>Gets the specified <see cref="System.ComponentModel.PropertyDescriptor"/> .</para>
		</overload>
		<summary>
			<para> Gets the <see cref="System.ComponentModel.PropertyDescriptor"/> at the specified index
   number.</para>
		</summary>
		<param name="index">The zero-based index of the <see cref="System.ComponentModel.PropertyDescriptor"/> to get from the collection.</param>
		<value>
			<para>The <see cref="System.ComponentModel.PropertyDescriptor"/> with the
   specified index number.</para>
		</value>
		<exception cref="System.IndexOutOfRangeException">The <paramref name="index"/> parameter is not a valid index for <see cref="System.ComponentModel.PropertyDescriptorCollection.this"/>.</exception>
		<remarks>
			<para>The index number is zero-based. Therefore, you must
      subtract one from the numerical position of a particular <see cref="System.ComponentModel.PropertyDescriptor"/> to access that <see cref="System.ComponentModel.PropertyDescriptor"/>. For example, to get the third <see cref="System.ComponentModel.PropertyDescriptor"/>,
      you need to specify <c>myColl[2]</c>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.ComponentModel.PropertyDescriptorCollection.this"/> property to
   print the name of the <see cref="System.ComponentModel.PropertyDescriptor"/> specified
   by the index number in a text box. Because the index number is zero-based, this
   example prints the name of the second <see cref="System.ComponentModel.PropertyDescriptor"/>. It assumes
   that <c>button1</c> has been instantiated
on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection.this Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="PropertyDescriptorCollection.Contains">
		<summary>
			<para>Returns whether the collection contains the given <see cref="System.ComponentModel.PropertyDescriptor"/> .</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.PropertyDescriptor"/> to find in the collection.</param>
		<returns>
			<para><see langword="true"/> if the collection contains the
   given <see cref="System.ComponentModel.PropertyDescriptor"/>; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc><doc for="PropertyDescriptorCollection.CopyTo">
		<summary>
			<para> Copies the entire collection to an array, starting at the specified
      index number.</para>
		</summary>
		<param name="array">An array of <see cref="System.ComponentModel.PropertyDescriptor"/> objects to copy elements of the collection to.</param>
		<param name=" index">The index of the <paramref name="array"/> parameter at which copying begins.</param>
	</doc><doc for="PropertyDescriptorCollection.Find">
		<summary>
			<para>Returns the <see cref="System.ComponentModel.PropertyDescriptor"/> with the specified name, using a Boolean to indicate whether to ignore
   case.</para>
		</summary>
		<param name="name">The name of the <see cref="System.ComponentModel.PropertyDescriptor"/> to return from the collection.</param>
		<param name="ignoreCase"><see langword="true"/> if you want to ignore the case of the property name; otherwise, <see langword="false"/>.</param>
		<returns>
			<para>A <see cref="System.ComponentModel.PropertyDescriptor"/> with the
   specified name,
   or <see langword="null "/> if the property does not exist.</para>
		</returns>
		<example>
			<para>The following example finds a specific <see cref="System.ComponentModel.PropertyDescriptor"/>. It prints the type of
   component for this <see cref="System.ComponentModel.PropertyDescriptor"/> in a text
   box. It assumes that <c>button1</c> and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic PropertyDescriptorCollection.Find Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="PropertyDescriptorCollection.Insert">
		<summary>
			<para>Adds the <see cref="System.ComponentModel.PropertyDescriptor"/> to the collection at the specified index
   number.</para>
		</summary>
		<param name="index">The index at which to add the <paramref name="value"/> parameter to the collection.</param>
		<param name=" value">The <see cref="System.ComponentModel.PropertyDescriptor"/> to add to the collection.</param>
	</doc><doc for="PropertyDescriptorCollection.InternalSort">
		<overload>
			<para>Sorts the members of this collection.</para>
		</overload>
		<summary>
			<para> Sorts the members of this collection. The specified order is applied first, followed by the default sort for this collection, which is usually alphabetical. </para>
		</summary>
		<param name="names">An array of strings describing the order in which to sort the <see cref="System.ComponentModel.PropertyDescriptor"/> objects in this collection.</param>
		<example>
			<para>If the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> contains four <see cref="System.ComponentModel.PropertyDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , this results in the properties of <c>myNewColl</c> sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="Classic EventDescriptorCollection.InternalSort Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="PropertyDescriptorCollection.Sort1">
		<summary>
			<para> Sorts the members of this collection. The specified order is applied first, followed by
      the default sort for this collection, which is usually alphabetical.
      </para>
		</summary>
		<param name="names">An array of strings describing the order in which to sort the <see cref="System.ComponentModel.PropertyDescriptor"/> objects in this collection.</param>
		<returns>
			<para>A new <see cref="System.ComponentModel.PropertyDescriptorCollection"/> that contains the sorted <see cref="System.ComponentModel.PropertyDescriptor"/> objects.</para>
		</returns>
		<example>
			<para>If the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> contains four <see cref="System.ComponentModel.PropertyDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , this results in the
properties of <c>myNewColl</c>
sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="classic eventdescriptorcollection.sort example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="PropertyDescriptorCollection.Sort2">
		<summary>
			<para> Sorts the members of this collection. The specified order is applied
      first, followed by the sort using the specified <see cref="System.Collections.IComparer"/>
      .
      </para>
		</summary>
		<param name="names">An array of strings describing the order in which to sort the <see cref="System.ComponentModel.PropertyDescriptor"/> objects in this collection.</param>
		<param name="comparer">A comparer to use to sort the <see cref="System.ComponentModel.PropertyDescriptor"/> objects in this collection.</param>
		<returns>
			<para>A new <see cref="System.ComponentModel.PropertyDescriptorCollection"/> that contains the sorted <see cref="System.ComponentModel.PropertyDescriptor"/> objects.</para>
		</returns>
		<example>
			<para>If the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> contains four <see cref="System.ComponentModel.PropertyDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , this results in the properties of <c>myNewColl</c> sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="classic eventdescriptorcollection.sort example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="PropertyDescriptorCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.GetEnumerator">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.IsReadOnly">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.Keys">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IDictionary.Values">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.ICollection.Count">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.IsReadOnly">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.IEnumerable.GetEnumerator">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PropertyDescriptorCollection.Empty">
		<summary>
			<para>Specifies an empty collection that you can use instead
      of creating a new one with no items. This <see langword="static"/> field is read-only.</para>
		</summary>
	</doc></docs>
