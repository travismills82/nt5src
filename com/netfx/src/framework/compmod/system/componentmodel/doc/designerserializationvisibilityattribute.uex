<docs>
	<doc for="DesignerSerializationVisibilityAttribute.Equals">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="DesignerSerializationVisibilityAttribute.GetHashCode">
		<internalonly/>
		<summary>
			<para>
       Returns the hashcode for this object.
    </para>
		</summary>
	</doc>
	<doc for="DesignerSerializationVisibilityAttribute.IsDefaultAttribute">
		<summary>
			<para>Gets a value indicating whether the current value of the attribute is the default value for the attribute.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the attributeissetto the 
    default value; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="DesignerSerializationVisibilityAttribute.Content">
		<summary>
			<para> Specifies that a visual designer serialize the contents 
      of this property, rather than the property itself. This field is read-only.</para>
		</summary>
		<remarks>
			<para>When you mark a property with
   <see langword="DesignerSerializationVisibilityAttribute.Content"/>, the value of this attribute
      is set to the constant member <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content"/> . Therefore, when you want to verify that the
      attribute is set to this value in your code, you must specify the attribute as
   <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content" qualify="true"/>. </para>
		</remarks>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>
	</doc><doc for="DesignerSerializationVisibilityAttribute.Hidden">
		<summary>
			<para> Specifies that a visual designer does not serialize the
      value of this property. This <see langword="static"/> field is read-only.</para>
		</summary>
		<remarks>
			<para>When you mark a property with
      <see langword="DesignerSerializationVisibilityAttribute.Hidden"/>, the value of this
      attribute is set to the constant member <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden"/> .
      Therefore, when you want to verify that the attribute is set to this value in your code, you must
      specify the attribute as <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content"/>
	</doc><doc for="DesignerSerializationVisibilityAttribute.Visible">
		<summary>
			<para> Specifies that a visual designer can use default rules
      when serializing the value of a property. This <see langword="static"/> field is read-only.</para>
		</summary>
		<remarks>
			<para>This field is the default setting for this attribute.</para>
			<para>When you mark a property with
      <see langword="DesignerSerializationVisibilityAttribute.Visible"/>, the value of this
      attribute is set to the constant member <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/> .
      Therefore, when you want to verify that the attribute is set to this value in your code, you must
      specify the attribute as <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content"/>
	</doc><doc for="DesignerSerializationVisibilityAttribute.Default">
		<internalonly/>
		<summary>
			<para>Specifies the default value, which is <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>,
   that is, a visual designer uses default rules to generate the value of a
   property. This <see langword="static"/> field is read-only. </para>
		</summary>
		<remarks>
			<para>When
      you mark a property with this value, this attribute is set to the constant
      member <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/> . Therefore,
      when you want to check whether the attribute is set to this value in your code, you must
      specify the attribute as <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden"/>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content"/>
	</doc><doc for="DesignerSerializationVisibilityAttribute.DesignerSerializationVisibilityAttribute">
		<summary>
			<para> Initializes a new instance of the <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/> class.
 </para>
		</summary>
		<param name="visibility"><para>One of the <see cref="System.ComponentModel.DesignerSerializationVisibility"/> values.</para></param>
		<example>
			<para> The following example specifies how a property on a component is saved
 by a designer. This code creates a new <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>and sets its value to
 <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content" qualify="true"/>
 .
 </para>
			<codelink SampleID="Classic DesignerSerializationVisibilityAttribute.DesignerSerializationVisibilityAttribute Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>
	</doc>
	<doc for="DesignerSerializationVisibilityAttribute.Visibility">
		<summary>
			<para>Gets a value indicating whether a
      visual designer must generate special code to persist the value of a property.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.ComponentModel.DesignerSerializationVisibility"/> values. The default is
<see cref="System.ComponentModel.DesignerSerializationVisibility.Visible"/>.</para>
		</value>
		<example>
			<para> The following example shows how to check the value
      of the <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/> for <c>MyProperty</c> . First the code gets a <see cref="System.ComponentModel.PropertyDescriptorCollection"/> with all the properties for the object.
   Next, the code indexes into the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> to get <c>MyProperty</c> . Then, the code returns the
attributes for this property and saves them in the attributes variable.</para>
			<para>This example presents two different ways to check the value of the <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/>. In the 
second code fragment, the example calls the <see cref="System.Object.Equals"/>method with a <see langword="static "/>value.
In the last code fragment, the example uses the <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visibility"/>
property to check the value.</para>
			<codelink SampleID="Classic DesignerSerializationVisibilityAttribute.Visibility Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.AttributeCollection"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection"/>
	</doc><doc for="DesignerSerializationVisibilityAttribute">
		<summary>
			<para> Specifies the type of persistence to use when serializing a property on a component at design
      time.</para>
		</summary>
		<remarks>
			<para> When the design time environment saves a project,
      it often adds code to the initialization method of components in order to persist values of properties that have been set
      at design time. This happens by default for most basic types, if no attribute
      has been set to direct other behavior.</para>
			<para>The <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/> allows you to indicate whether
   the value for a property is <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Visible"/>, and should be persisted in
   initialization code, <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Hidden"/>, and should not be persisted in
   initialization code, or consists of <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute.Content"/>, which should have initialization code
   generated for each public, not hidden property of the object assigned to the
   property.</para>
			<para>Members that do not have a <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/> will be 
treated as though they have a <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with a value of <see cref="System.ComponentModel.DesignerSerializationVisibility.Visible"/>

. The values of a property marked as
<see cref="System.ComponentModel.DesignerSerializationVisibility.Visible"/> will be 
serialized, if possible, by a serializer for the type. To
specify custom serialization for a particular type or property, use the <see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/>.</para>
			<para>For more information, see
<see topic="cpconAttributesOverview"/> and <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates use of a <see cref="System.ComponentModel.DesignerSerializationVisibilityAttribute"/> set to <see cref="System.ComponentModel.DesignerSerializationVisibility.Content"/>, to
   persist the values of a public property of a user control, which can
   be configured at design time. To use the example, first compile the following
   code into a user control library. Next add a reference in a new project to the
   compiled .DLL file, add the control from the .DLL file to the Toolbox in design
   mode by right clicking the toolbox, selecting Customize Toolbox..., and
   selecting the control from the .DLL file containing the user control.
   Then drag the control from the toolbox to a Form, and set the properties of the
   DimensionData object listed in the property grid while the control is
   selected. When you view the code for the form, code will have been added
   to the InitializeComponent method of the parent form of the control which
   sets the values of the properties of the control to those which you have
   set in design
   mode.</para>
			<codelink SampleID="Classic DesignerSerializationVisibilityAttribute Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.AttributeCollection"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection"/>
	</doc>
</docs>
