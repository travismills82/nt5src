<docs>
	<doc for="ReadOnlyAttribute.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the property this attribute is bound to is
       read-only.</para>
		</summary>
		<value>
			<para>
				<see langword="true "/>if the property this attribute is bound to is 
    read-only; <see langword="false "/>if the property is read/write.</para>
		</value>
		<example>
			<para>The following example checks to see whether <c>MyProperty</c> is read-only. First the 
    code gets the attributes for <c>MyProperty</c>
 by:</para>
			<list type="bullet">
				<item>
					<term>
       Retrieving a <see cref="System.ComponentModel.PropertyDescriptorCollection"/> with all
       the properties for the object.</term>
				</item>
				<item>
					<term>
       Indexing into the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> to get
       <c>MyProperty</c>.</term>
				</item>
				<item>
					<term>
          Saving the attributes for this property in the attributes
          variable.</term>
				</item>
			</list>
			<para>Then the code sets <c>myAttribute</c> to the value of the
 <see cref="System.ComponentModel.ReadOnlyAttribute"/> 
 in the <see cref="System.ComponentModel.AttributeCollection"/>
 and checks a whether the property is read-only.</para>
			<codelink SampleID="Classic ReadOnlyAttribute.IsReadOnly Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute"/>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.AttributeCollection"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection"/>
	</doc>
	<doc for="ReadOnlyAttribute.Equals">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="ReadOnlyAttribute.IsDefaultAttribute">
		<internalonly/>
		<summary>
			<para>
       Determines if this attribute is the default.
    </para>
		</summary>
		<returns>
			<para>
       True if the attribute is the default value for this
       attribute class; false otherwise.
    </para>
		</returns>
	</doc>
	<doc for="ReadOnlyAttribute.GetHashCode">
		<nodoc/>
		<summary>
			<para> Returns the hashcode for this object.
      </para>
		</summary>
	</doc>
	<doc for="ReadOnlyAttribute.Default">
		<internalonly/>
		<summary>
			<para>Specifies the default value for the <see cref="System.ComponentModel.ReadOnlyAttribute"/> , which is <see cref="System.ComponentModel.ReadOnlyAttribute.No"/>, that is, the property
   this attribute is bound to is read/write. This <see langword="static"/> field is read-only.</para>
		</summary>
		<remarks>
			<para>When
      you mark a property with this value, this attribute is
      set to the constant member <see cref="System.ComponentModel.ReadOnlyAttribute.No"/> . Therefore, when
      you want to check whether the attribute is set to this value in your code, you must
      specify the attribute as <see cref="System.ComponentModel.ReadOnlyAttribute.No" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute"/>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute.Yes"/>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute.No"/>
	</doc><doc for="ReadOnlyAttribute">
		<summary>
			<para>Specifies whether the property this attribute is bound to is read-only or
      read/write at design time.</para>
		</summary>
		<remarks>
			<para>Members that are marked with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> constructor of the 
   value <see langword="true"/> or that do not have a
<see langword="Set"/> method cannot be changed. Members that do not 
   have this attribute or that are marked with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/>
   constructor of the value <see langword="false "/> are read/write, and they can be
   changed. The default is <see cref="System.ComponentModel.ReadOnlyAttribute.No"/>.</para>
			<note type="note">
   When you mark a property with the
<see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> constructor of the 
   value <see langword="true"/>, the value of this attribute is set
   to the constant member <see cref="System.ComponentModel.ReadOnlyAttribute.Yes"/>. For a property marked
   with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> constructor of the
   value <see langword="false"/>, the value is <see cref="System.ComponentModel.ReadOnlyAttribute.No"/>. Therefore, when you
   want to check the value of this attribute in your code, you must specify the
   attribute as <see cref="System.ComponentModel.ReadOnlyAttribute.Yes" qualify="true"/> or <see cref="System.ComponentModel.ReadOnlyAttribute.No" qualify="true"/>.
   
</note>
			<para>For more information, see
<see topic="cpconAttributesOverview"/> and <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example marks a property as read-only.</para>
			<codelink SampleID="Classic ReadOnlyAttribute Example" SnippetID="1"/>
			<para>The next example shows how to check the value of the
<see cref="System.ComponentModel.ReadOnlyAttribute"/> for <c>MyProperty</c> . First the code gets a
<see cref="System.ComponentModel.PropertyDescriptorCollection"/> with all the properties for the object.
 Next it indexes into the <see cref="System.ComponentModel.PropertyDescriptorCollection"/> to get <c>MyProperty</c>
. Then it returns the attributes for this
property and saves them
in the attributes
variable.</para>
			<para>The example presents two different ways of checking the value of the <see cref="System.ComponentModel.ReadOnlyAttribute"/>.
In the second code fragment, the example calls the <see cref="System.ComponentModel.ReadOnlyAttribute.Equals"/> method. In the last code fragment, the
example uses the <see cref="System.ComponentModel.ReadOnlyAttribute.IsReadOnly"/>
property to check the value.</para>
			<codelink SampleID="Classic ReadOnlyAttribute Example" SnippetID="2"/>
			<para>If you marked a class with the <see cref="System.ComponentModel.ReadOnlyAttribute"/>, use
the following code example to check the value.</para>
			<codelink SampleID="Classic ReadOnlyAttribute Example" SnippetID="3"/>
		</example>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
		<seealso cref="System.ComponentModel.AttributeCollection"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection"/>
	</doc>
	<doc for="ReadOnlyAttribute.Yes">
		<summary>
			<para>Specifies that the property this attribute is bound to is
      read-only and cannot be modified in the server explorer. This <see langword="static"/> field is
      read-only.</para>
		</summary>
		<remarks>
			<para>When you mark a property with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> 
constructor of the value <see langword="true"/>,
the value of this attribute is set to the constant member <see cref="System.ComponentModel.ReadOnlyAttribute.Yes"/> . Therefore, when
you want to check whether the attribute is set to this value in your code, you must
specify the attribute as <see cref="System.ComponentModel.ReadOnlyAttribute.Yes" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute"/>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute.No"/>
	</doc>
	<doc for="ReadOnlyAttribute.No">
		<summary>
			<para>Specifies that the property this attribute is bound to is
      read/write and can be modified at design time. This <see langword="static"/> field is read-only.</para>
		</summary>
		<remarks>
			<para>This field is the default setting for this attribute.</para>
			<para>When you mark a property with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> 
constructor of the value <see langword="false"/>,
the value of this attribute is set to the constant member <see cref="System.ComponentModel.ReadOnlyAttribute.No"/> . Therefore, when
you want to check whether the attribute is set to this value in your code, you must
specify the attribute as <see cref="System.ComponentModel.ReadOnlyAttribute.No" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute"/>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute.Yes"/>
	</doc>
	<doc for="ReadOnlyAttribute.ReadOnlyAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.ReadOnlyAttribute"/> class.</para>
		</summary>
		<param name="isReadOnly"><see langword="true"/> if the property this attribute is bound to is read-only; <see langword="false"/> if the property is read/write. </param>
		<remarks>
			<para>Members that are marked with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> 
constructor of the value <see langword="true "/>or that do not have a
<see langword="Set"/> method cannot be changed. Members that do not 
have this attribute or that are marked with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/>
constructor of the value <see langword="false "/>
are read/write, and they can be changed. The default is <see cref="System.ComponentModel.ReadOnlyAttribute.No"/>.</para>
			<note type="note">
   When you mark a property with the
<see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> constructor of the 
   value <see langword="true"/>, the value of this attribute is set to the
   constant member <see cref="System.ComponentModel.ReadOnlyAttribute.Yes"/>. For a property marked
   with the <see cref="M:System.ComponentModel.ReadOnlyAttribute.#ctor"/> constructor of the
   value <see langword="false"/>, the value is <see cref="System.ComponentModel.ReadOnlyAttribute.No"/>. Therefore, when you
   want to check the value of this attribute in your code, you must specify the
   attribute as <see cref="System.ComponentModel.ReadOnlyAttribute.Yes" qualify="true"/> or <see cref="System.ComponentModel.ReadOnlyAttribute.No" qualify="true"/>.
   
</note>
		</remarks>
		<example>
			<para>The following example marks a
      property as read-only. This code creates a new <see cref="System.ComponentModel.ReadOnlyAttribute"/>, sets its value to
   <see cref="System.ComponentModel.ReadOnlyAttribute.Yes" qualify="true"/>,
      and binds it to the property.</para>
			<codelink SampleID="Classic ReadOnlyAttribute.ReadOnlyAttribute Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.ReadOnlyAttribute"/>
	</doc>
</docs>
