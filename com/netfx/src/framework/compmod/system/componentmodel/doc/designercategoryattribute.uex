<docs>
	<doc for="DesignerCategoryAttribute.DesignerCategoryAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.DesignerCategoryAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.DesignerCategoryAttribute"/> class with an empty
    string ("").</para>
		</summary>
	</doc>
	<doc for="DesignerCategoryAttribute.DesignerCategoryAttribute1">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.ComponentModel.DesignerCategoryAttribute"/> class with
       the given category name.
    </para>
		</summary>
		<param name="category">
    The name of the category.
 </param>
	</doc>
	<doc for="DesignerCategoryAttribute.Category">
		<summary>
			<para>
       Gets the name of the category.
    </para>
		</summary>
		<value>
			<para>
       The name
       of the category.
    </para>
		</value>
	</doc>
	<doc for="DesignerCategoryAttribute.Equals">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="DesignerCategoryAttribute.GetHashCode">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="DesignerCategoryAttribute.IsDefaultAttribute">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="DesignerCategoryAttribute.TypeId">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DesignerCategoryAttribute">
		<summary>
			<para>Specifies that the designer for a class belongs to a certain
      category.</para>
		</summary>
		<remarks>
			<para>A visual designer can use a designer category to inform a development environment of
      the type of designer that will be implemented. If no designer category is
      provided on a class, a development environment may or may not allow the
      class to be designed. A category can be created for any name.</para>
			<para>When you mark a class with this attribute, it is set to a
      constant member. When you want to check the value of this attribute in your code,
      you must specify the constant member. The Description column in the table below lists
      the constant member that each value is set to.</para>
			<para>The <see cref="System.ComponentModel.DesignerCategoryAttribute"/> class defines the following common
   categories:</para>
			<list type="table">
				<listheader>
					<term>Category</term>
					<description>Description</description>
				</listheader>
				<item>
					<term> Component</term>
					<description>
						<para>Designers that are used with components. The
      attribute is set to the constant member <see cref="System.ComponentModel.DesignerCategoryAttribute.Component" qualify="true"/>.</para>
					</description>
				</item>
				<item>
					<term> Form</term>
					<description>
						<para>Designers that are used with forms. The attribute
      is set to the constant member <see cref="System.ComponentModel.DesignerCategoryAttribute.Form" qualify="true"/>.</para>
					</description>
				</item>
				<item>
					<term> Designer</term>
					<description>
						<para>Designers that are used with designers. The
      attribute is set to the constant member <see cref="System.ComponentModel.DesignerCategoryAttribute.Generic" qualify="true"/>.</para>
					</description>
				</item>
				<item>
					<term> Empty String ("")</term>
					<description>This
      is the default category.</description>
				</item>
			</list>
			<para>For more information, see <see topic="cpconAttributesOverview"/> and <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a class called <c>MyForm</c>. <c>MyForm</c>
   has two attributes, a <see cref="System.ComponentModel.DesignerAttribute"/> that
   specifies this class uses the <see cref="T:System.Windows.Forms.Design.DocumentDesigner"/>, and a <see cref="System.ComponentModel.DesignerCategoryAttribute"/> that
   specifies the <see cref="System.ComponentModel.DesignerCategoryAttribute.Form"/>
   category.</para>
			<codelink SampleID="Classic DesignerCategoryAttribute Example" SnippetID="1"/>
			<para>The next example creates an instance of <c>MyForm</c>. Then it gets the attributes
for the class, extracts the <see cref="System.ComponentModel.DesignerCategoryAttribute"/>, and prints the name
of the designer.</para>
			<codelink SampleID="Classic DesignerCategoryAttribute Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.DesignerAttribute"/>
	</doc>
	<doc for="DesignerCategoryAttribute.Component">
		<summary>
			<para>Specifies that a component marked with this category use 
      a component designer. This field is read-only.</para>
		</summary>
	</doc><doc for="DesignerCategoryAttribute.Default">
		<internalonly/>
		<summary>
			<para>Specifies that a component marked with this category
      cannot use a visual designer. This <see langword="static"/> field is read-only.</para>
		</summary>
		<remarks>
			<para>This is the default category.</para>
		</remarks>
	</doc><doc for="DesignerCategoryAttribute.Form">
		<summary>
			<para>Specifies that a component marked with this category use
      a form designer. This <see langword="static"/> field is read-only.</para>
		</summary>
	</doc><doc for="DesignerCategoryAttribute.Generic">
		<summary>
			<para>Specifies that a component marked with this category use
      a generic designer. This <see langword="static"/> field is read-only.</para>
		</summary>
	</doc></docs>
