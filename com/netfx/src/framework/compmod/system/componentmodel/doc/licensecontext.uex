<docs>
	<doc for="LicenseContext.UsageMode">
		<summary>
			<para>When overridden in a derived class, gets a value that specifies when you can use a license.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.ComponentModel.LicenseUsageMode"/> values that specifies when you can use
   a license. The default is <see cref="System.ComponentModel.LicenseUsageMode.Runtime" qualify="true"/>
   .</para>
		</value>
		<remarks>
			<note type="inheritinfo">
      To implement design-time support, override this property in a class that
      inherits.
      
   </note>
		</remarks>
		<seealso cref="System.ComponentModel.License"/>
		<seealso cref="System.ComponentModel.LicenseContext"/>
		<seealso cref="System.ComponentModel.LicenseException"/>
		<seealso cref="System.ComponentModel.LicenseManager"/>
		<seealso cref="System.ComponentModel.LicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseProviderAttribute"/>
		<seealso cref="System.ComponentModel.LicFileLicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseUsageMode"/>
	</doc><doc for="LicenseContext.GetSavedLicenseKey">
		<summary>
			<para>When overridden in a derived class, returns a saved license
      key for the specified type, from the specified resource assembly.</para>
		</summary>
		<param name="type">A <see cref="System.Type"/> that represents the type of component.</param>
		<param name="resourceAssembly">An <see cref="T:System.Reflection.Assembly"/> with the license key.</param>
		<returns>
			<para>The <see cref="System.ComponentModel.License.LicenseKey"/> for
   the specified type. This method returns <see langword="null"/> unless you override
   it. </para>
		</returns>
		<remarks>
			<note type="inheritinfo">
      Override this method and the <see cref="System.ComponentModel.LicenseContext.SetSavedLicenseKey"/> method to implement a
      saved license key. If the <paramref name="resourceAssembly"/>
      parameter is <see langword="null"/> , then you can retrieve the resource from
      the primary executing <see cref="T:System.Reflection.Assembly"/>.
      
   </note>
		</remarks>
		<seealso cref="System.ComponentModel.License"/>
		<seealso cref="System.ComponentModel.LicenseContext"/>
		<seealso cref="System.ComponentModel.LicenseException"/>
		<seealso cref="System.ComponentModel.LicenseManager"/>
		<seealso cref="System.ComponentModel.LicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseProviderAttribute"/>
		<seealso cref="System.ComponentModel.LicFileLicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseUsageMode"/>
	</doc><doc for="LicenseContext.GetService">
		<summary>
			<para>Gets the requested service, if it is available.</para>
		</summary>
		<param name="type">The type of service to retrieve.</param>
		<returns>
			<para>An instance of the service, or <see langword="null"/> 
if the service cannot be found.</para>
		</returns>
	</doc><doc for="LicenseContext">
		<summary>
			<para>Specifies when you can use a licensed object and
 provides a way of obtaining additional services needed to support licenses running within its domain.</para>
		</summary>
		<remarks>
			<para>This class provides the default <see cref="System.ComponentModel.LicenseContext"/>
. It implements only run-time support and does not support saved license keys.</para>
			<note type="inheritinfo">
 If you want to implement design-time license support, you must inherit from this class, and override the following members:
<see cref="System.ComponentModel.LicenseContext.UsageMode"/>,
<see cref="System.ComponentModel.LicenseContext.GetSavedLicenseKey"/>, <see cref="System.ComponentModel.LicenseContext.GetService"/> , and <see cref="System.ComponentModel.LicenseContext.SetSavedLicenseKey"/>. If you want to implement
 saved license keys, override the <see cref="System.ComponentModel.LicenseContext.GetSavedLicenseKey"/>
 and <see cref="System.ComponentModel.LicenseContext.SetSavedLicenseKey"/> methods.
 
</note>
			<para>For more information on licensing, see <see topic="cpconLicensingComponentsControls"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.License"/>
		<seealso cref="System.ComponentModel.LicenseException"/>
		<seealso cref="System.ComponentModel.LicenseManager"/>
		<seealso cref="System.ComponentModel.LicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseProviderAttribute"/>
		<seealso cref="System.ComponentModel.LicFileLicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseUsageMode"/>
	</doc>
	<doc for="LicenseContext.SetSavedLicenseKey">
		<summary>
			<para> When overridden in a derived class, sets a license key for the specified type.
      </para>
		</summary>
		<param name="type">A <see cref="System.Type"/> that represents the component associated with the license key. </param>
		<param name="key">The <see cref="System.ComponentModel.License.LicenseKey"/> to save for the type of component. </param>
		<remarks>
			<para> Typically, call this method when you set <see cref="System.ComponentModel.LicenseUsageMode"/> at design time. You must override
   the <see cref="System.ComponentModel.LicenseContext.UsageMode"/> property to implement design-time
   license support.
   </para>
			<note type="inheritinfo">
   This method does not provide support for a saved license
   key. Override this method and the <see cref="System.ComponentModel.LicenseContext.GetSavedLicenseKey"/> method to implement a key.
   
</note>
		</remarks>
		<seealso cref="System.ComponentModel.License"/>
		<seealso cref="System.ComponentModel.LicenseContext"/>
		<seealso cref="System.ComponentModel.LicenseException"/>
		<seealso cref="System.ComponentModel.LicenseManager"/>
		<seealso cref="System.ComponentModel.LicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseProviderAttribute"/>
		<seealso cref="System.ComponentModel.LicFileLicenseProvider"/>
		<seealso cref="System.ComponentModel.LicenseUsageMode"/>
	</doc>
</docs>
