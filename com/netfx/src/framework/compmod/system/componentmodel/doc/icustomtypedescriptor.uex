<docs>
	<doc for="ICustomTypeDescriptor.GetClassName">
		<summary>
			<para>Returns the class name of this object.</para>
		</summary>
		<returns>
			<para>The class name of the object, or <see langword="null "/> if the class does not have a name.</para>
		</returns>
		<remarks>
			<para>If <see langword="null "/> is
   returned, use the type name.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="ICustomTypeDescriptor.GetComponentName">
		<summary>
			<para>Returns the name of this object.</para>
		</summary>
		<returns>
			<para>The name of the object, or <see langword="null "/> if object does not have a name.</para>
		</returns>
		<remarks>
			<para>If <see langword="null "/>is returned, use the default name.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="ICustomTypeDescriptor.GetConverter">
		<summary>
			<para>Returns a type converter for this object.</para>
		</summary>
		<returns>
			<para>A <see cref="System.ComponentModel.TypeConverter"/> that is the converter for this object, or
<see langword="null "/>if there is no <see cref="System.ComponentModel.TypeConverter"/> for this
   object.</para>
		</returns>
		<remarks>
			<para>If <see langword="null "/>is returned, use the default
<see cref="System.ComponentModel.TypeConverter"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="ICustomTypeDescriptor.GetDefaultEvent">
		<summary>
			<para>Returns the default event for this object.</para>
		</summary>
		<returns>
			<para>An <see cref="System.ComponentModel.EventDescriptor"/> that represents the default event for
   this object, or <see langword="null "/>if this object does not have events.</para>
		</returns>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
	</doc><doc for="ICustomTypeDescriptor.GetDefaultProperty">
		<summary>
			<para>Returns the default property for this object.</para>
		</summary>
		<returns>
			<para>A <see cref="System.ComponentModel.PropertyDescriptor"/> that
   represents the default property for this object, or <see langword="null "/>if
   this object does not have properties.</para>
		</returns>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
	</doc><doc for="ICustomTypeDescriptor.GetEditor">
		<summary>
			<para>Returns an editor of the specified type for this object.</para>
		</summary>
		<param name="editorBaseType">A <see cref="System.Type"/> that represents the editor for this object.</param>
		<returns>
			<para>An <see cref="System.Object"/> of the specified type that is the editor for this object,
   or <see langword="null "/>if the
   editor cannot be found.</para>
		</returns>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="ICustomTypeDescriptor.GetPropertyOwner">
		<summary>
			<para> Returns the object that this value is a member of.</para>
		</summary>
		<param name="pd"><para>A <see cref="System.ComponentModel.PropertyDescriptor"/> that represents the property whose owner is to be found.</para></param>
		<returns>
			<para>An <see cref="System.Object"/> that represents
   the owner of the specified property.</para>
		</returns>
		<remarks>
			<para> This method retrieves the object
      that directly depends on this value being edited. Typically, this object is required for
      the <see cref="System.ComponentModel.PropertyDescriptor.GetValue" qualify="true"/> and <see cref="System.ComponentModel.PropertyDescriptor.SetValue" qualify="true"/>
      methods.</para>
			<para>This method should return an object that you can use as follows:</para>
			<code>
pd.GetValue(GetPropertyOwner(myPd));
   </code>
			<para>If the <c>myPd</c> is <see langword="null"/>, your implementation of <see cref="System.ComponentModel.ICustomTypeDescriptor"/> should
return the default object, typically, the base object that exposes the properties and
attributes.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor"/>
	</doc><doc for="ICustomTypeDescriptor.GetEvents">
		<overload>
			<para>Returns the events for this instance of a component.</para>
		</overload>
		<summary>
			<para>Returns the events for this instance of a component.</para>
		</summary>
		<returns>
			<para>An <see cref="System.ComponentModel.EventDescriptorCollection"/> that
 represents the events for this component instance.</para>
		</returns>
		<remarks>
			<para> The events for this instance can differ from the set of events that the
 class provides. For example, if the component is site-based, the site can add or remove
 additional events.</para>
			<para>Implementors can return an <see cref="System.ComponentModel.EventDescriptorCollection.Empty" qualify="true"/> if no properties are specified. This method should never return <see langword="null "/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.EventDescriptorCollection"/>
	</doc><doc for="ICustomTypeDescriptor.GetEvents1">
		<summary>
			<para>Returns the events for this instance of a component using the attribute array as a
 filter.</para>
		</summary>
		<param name="attributes"><para>An array of type <see cref="System.Attribute"/> that is used as a filter.</para></param>
		<returns>
			<para>An <see cref="System.ComponentModel.EventDescriptorCollection"/> that
 represents
 the events for this component instance that match the given set of
 attributes.</para>
		</returns>
		<remarks>
			<para> The events for this instance can differ from the set of events that the
 class provides. For example, if the component is site-based, the site can add or remove
 additional events.</para>
			<para>If an <see cref="System.Attribute"/> instance is specified in
 the attributes array and the event does not have an instance of the class for
 that attribute, the returned array includes the event if the <see cref="System.Attribute"/> is the default event.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.DefaultEventAttribute"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.EventDescriptorCollection"/>
	</doc><doc for="ICustomTypeDescriptor.GetProperties">
		<overload>
			<para>Returns the properties for this instance of a component.</para>
		</overload>
		<summary>
			<para>Returns the properties for this instance of a component.</para>
		</summary>
		<returns>
			<para>A <see cref="System.ComponentModel.PropertyDescriptorCollection"/> that
 represents
 the properties for this component instance.</para>
		</returns>
		<remarks>
			<para> The properties for this instance can differ from the set of properties that
 the class provides. For example, if the component is sited, the site can add or
 remove additional properties.</para>
			<para>Implementors can return a <see cref="System.ComponentModel.PropertyDescriptorCollection.Empty" qualify="true"/> if no properties are specified. This method should never return <see langword="null "/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection"/>
	</doc><doc for="ICustomTypeDescriptor.GetProperties1">
		<summary>
			<para>Returns the properties for this instance of a component using the attribute array as a filter.</para>
		</summary>
		<param name="attributes"><para>An array of type <see cref="System.Attribute"/> that is used as a filter.</para></param>
		<returns>
			<para>An array of type <see cref="System.Attribute"/> that represents the properties for this
 component instance that match the given set of attributes.</para>
		</returns>
		<remarks>
			<para> The properties for this instance can differ from the set of properties that
 the class provides. For example, if the component is sited, the site can add or
 remove additional properties.</para>
			<para>If an <see cref="System.Attribute"/> instance is specified in the attributes
 array and the property does not have an instance of the class for that
 attribute, the returned array will include the property if the <see cref="System.Attribute"/> is the default property.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.ComponentModel.DefaultPropertyAttribute"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection"/>
	</doc><doc for="ICustomTypeDescriptor">
		<summary>
			<para>Provides an interface that supplies custom type information for an
      object.</para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.ICustomTypeDescriptor"/> allows an object to provide type information about itself. Typically,
   this interface is used when an object needs dynamic type information. In
   contrast, <see cref="System.ComponentModel.TypeDescriptor"/> provides static type information that is
   obtained from metadata.</para>
			<para>For example, <see cref="System.ComponentModel.ICustomTypeDescriptor"/> is used in
the .NET Framework to provide type information for COM objects. COM objects do not support properties or attributes. The .NET Framework
uses <see cref="System.ComponentModel.ICustomTypeDescriptor"/> to
implement properties and attributes for COM objects.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="ICustomTypeDescriptor.GetAttributes">
		<summary>
			<para>Returns a collection of type <see cref="System.Attribute"/>
for this object.</para>
		</summary>
		<returns>
			<para>An <see cref="System.ComponentModel.AttributeCollection"/> with the attributes for this object.</para>
		</returns>
		<remarks>
			<para> The return value is never
   <see langword="null"/>.</para>
			<para>Implementers can return an empty <see cref="System.ComponentModel.AttributeCollection"/> if no attributes are specified.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ICustomTypeDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.ComponentModel.AttributeCollection"/>
	</doc>
</docs>
