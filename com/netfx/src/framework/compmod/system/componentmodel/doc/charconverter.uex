<docs>
	<doc for="CharConverter.CanConvertFrom"><nodoc/>
		<summary>
			<para>Gets a value indicating whether this converter can
      convert an object in the given source type to a Unicode character object using
      the specified context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="sourceType">A <see cref="System.Type"/> that represents the type you wish to convert from.</param>
		<returns>
			<para><see langword="true "/>if this converter can perform the conversion;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>This converter can only convert a string with a length of one, to and from a
      character.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
   <see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="CharConverter.ConvertFrom">
		<nodoc/>
		<summary>
			<para>Converts the given object to a Unicode character object.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="value">The <see cref="System.Object"/> to convert.</param>
		<param name=" culture"></param>
		<returns>
			<para>An <see cref="System.Object"/>
that represents the converted <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.Exception">More than one character in the string.</exception>
		<exception cref="System.NotSupportedException">The conversion could not be performed.</exception>
		<remarks>
			<para>This converter can only convert a string with a length of one, to and from a
      character.</para>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
<see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="CharConverter.ConvertTo">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="CharConverter">
		<summary>
			<para>Provides
 a type converter to convert Unicode
 character objects to and from various other representations.</para>
		</summary>
		<remarks>
			<para>This converter can only convert a string, with a length of one, to and from a
 character.</para>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
			<note type="note">
 You should never create an
 instance of a <see cref="System.ComponentModel.CharConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
 in the <see cref="System.ComponentModel.TypeConverter"/> base class.
 
</note>
		</remarks>
		<example>
			<para>The following example converts a variable of
 type <see cref="System.Char"/> to a string variable, and
 vice versa.</para>
			<codelink SampleID="Converters" SnippetID="5"/>
		</example>
	</doc>
</docs>
