<docs>
	<doc for="DoubleConverter.AllowHex">
		<summary>
 Determines whether this editor will attempt to convert hex (0x or #) strings
 </summary>
	</doc>
	<doc for="DoubleConverter.TargetType">
		<summary>
 The Type this converter is targeting (e.g. Int16, UInt32, etc.)
 </summary>
	</doc>
	<doc for="DoubleConverter.FromString">
		<summary>
 Convert the given value to a string using the given radix
 </summary>
	</doc>
	<doc for="DoubleConverter.FromString1">
		<summary>
 Convert the given value to a string using the given formatInfo
 </summary>
	</doc>
	<doc for="DoubleConverter.FromString2">
		<summary>
 Convert the given value to a string using the given CultureInfo
 </summary>
	</doc>
	<doc for="DoubleConverter.ToString">
		<summary>
 Convert the given value from a string using the given formatInfo
 </summary>
	</doc>
	<doc for="DoubleConverter">
		<summary>
			<para>Provides a type
      converter to convert double-precision, floating point number objects to and from various
      other representations.</para>
		</summary>
		<remarks>
			<para>This converter can only convert a <see cref="System.Double"/> object to and from a string.</para>
			<note type="note">
   You should never create an instance
   of <see cref="System.ComponentModel.DoubleConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
   in the <see cref="System.ComponentModel.TypeConverter"/> base class.
</note>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
		</remarks>
		<example>
			<para>The following sample converts a variable of
      type <see cref="System.Double"/> to a string, and vice
      versa.</para>
			<codelink SampleID="Converters" SnippetID="11"/>
		</example>
	</doc></docs>
