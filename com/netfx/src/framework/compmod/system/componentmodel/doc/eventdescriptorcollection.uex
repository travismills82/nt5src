<docs>
	<doc for="EventDescriptorCollection.Add">
		<summary>
			<para>Adds an <see cref="System.ComponentModel.EventDescriptor"/> to the end of the collection.</para>
		</summary>
		<param name="value">An <see cref="System.ComponentModel.EventDescriptor"/> to add to the collection.</param>
		<returns>
			<para>The position of the <see cref="System.ComponentModel.EventDescriptor"/> within the collection.</para>
		</returns>
	</doc>
	<doc for="EventDescriptorCollection.Clear">
		<summary>
			<para>Removes all objects from the collection.</para>
		</summary>
	</doc>
	<doc for="EventDescriptorCollection.Find">
		<summary>
			<para>Gets the description of the event with the specified
      name
      in the collection.</para>
		</summary>
		<param name="name">The name of the event to get from the collection.</param>
		<param name="ignoreCase">
			<see langword="true"/> if you want to ignore the case of the event; otherwise, <see langword="false"/>.</param>
		<returns>
			<para>The <see cref="System.ComponentModel.EventDescriptor"/> with the specified name,
   or <see langword="null"/> if the event does not exist.</para>
		</returns>
		<example>
			<para>The following example finds a specific <see cref="System.ComponentModel.EventDescriptor"/>. It prints the type of component for this
<see cref="System.ComponentModel.EventDescriptor"/> in a text box. 
   It assumes that <c>button1</c>
and <c>textBox1</c>
have been
instantiated on a form.</para>
			<codelink SampleID="Classic EventDescriptorCollection.Find Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="EventDescriptorCollection.IndexOf">
		<summary>
			<para>Returns the index of the <see cref="System.ComponentModel.EventDescriptor"/> given.</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.EventDescriptor"/> to find within the collection.</param>
		<returns>
			<para>The index of the given <see cref="System.ComponentModel.EventDescriptor"/> within the collection.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <see cref="System.ComponentModel.EventDescriptor"/> does not exist in the collection.</exception>
	</doc>
	<doc for="EventDescriptorCollection.Remove">
		<summary>
			<para>Removes the specified <see cref="System.ComponentModel.EventDescriptor"/> from the collection.</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.EventDescriptor"/> to remove from the collection.</param>
	</doc>
	<doc for="EventDescriptorCollection">
		<summary>
			<para> Represents a collection of <see cref="System.ComponentModel.EventDescriptor"/> objects.
   </para>
		</summary>
		<remarks>
			<para>
				<see cref="System.ComponentModel.EventDescriptorCollection"/> is read-only; it does not implement
   methods that add or remove events. You must inherit from this class to
   implement these methods.
   </para>
			<para> Using the properties available in the <see cref="System.ComponentModel.EventDescriptorCollection"/>
class, you can query the collection about its contents.
Use the <see cref="System.ComponentModel.EventDescriptorCollection.Count"/> property to
determine the number of elements in the collection.
Use the <see cref="System.ComponentModel.EventDescriptorCollection.this"/>
property to get a specific property by index number or by name.</para>
			<para> You can also use
   the <see cref="System.ComponentModel.EventDescriptorCollection.Find"/> method to get
   a description of
   the event with the specified name from the collection.
   </para>
		</remarks>
		<example>
			<para> The following example prints all the events on a button
      in a text box. It assumes that <c>button1</c> and <c>textBox1</c>
   
   have been instantiated on a form.
   </para>
			<codelink SampleID="Classic EventDescriptorCollection Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="EventDescriptorCollection.Count">
		<summary>
			<para> Gets the number
      of event descriptors in the collection.
      </para>
		</summary>
		<value>
			<para> The number of
      event descriptors in the collection.
      </para>
		</value>
		<remarks>
			<para> The <see cref="System.ComponentModel.EventDescriptorCollection.Count"/> property can be
   used to set the limits of a loop that iterates through a collection of objects.
   If the collection is zero-based, be sure to use <c>Count - 1</c>
as the upper boundary
of the loop.</para>
		</remarks>
		<example>
			<para> The following example uses the <see cref="System.ComponentModel.EventDescriptorCollection.Count"/> property to
   print the number of events attached to <c>button1</c>. It assumes that <c>button1</c> and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic EventDescriptorCollection.Count Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="EventDescriptorCollection.Contains">
		<summary>
			<para>Returns whether the collection contains the given <see cref="System.ComponentModel.EventDescriptor"/> .</para>
		</summary>
		<param name="value">The <see cref="System.ComponentModel.EventDescriptor"/> to find within the collection.</param>
		<returns>
			<para>
				<see langword="true"/> if the collection contains the
<paramref name="value"/> parameter given; otherwise, <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="EventDescriptorCollection.GetEnumerator">
		<summary>
			<para> Gets an enumerator for this <see cref="System.ComponentModel.EventDescriptorCollection"/>.
   </para>
		</summary>
		<returns>
			<para> An enumerator that implements <see cref="System.Collections.IEnumerator"/>.
   </para>
		</returns>
		<example>
			<para> The following example gets an enumerator for the events
      on <c>button1</c>. It uses the
   enumerator to print the names of the events in the collection. It assumes
   that <c>button1</c>
and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic EventDescriptorCollection.GetEnumerator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
		<seealso cref="System.Collections.IEnumerator"/>
	</doc>
	<doc for="EventDescriptorCollection.this1">
		<summary>
			<para>Gets the event with the specified name.</para>
		</summary>
		<param name="name">The name of the <see cref="System.ComponentModel.EventDescriptor"/> to get from the collection.</param>
		<value>
			<para>The <see cref="System.ComponentModel.EventDescriptor"/> with the specified name,
   or <see langword="null "/>
   if the event does not exist.</para>
		</value>
		<remarks>
			<para>
				<see cref="System.ComponentModel.EventDescriptorCollection.this"/> is 
   case-sensitive when searching for names. That is, the names "Ename"
   and "ename" are considered to
   be two different events.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.ComponentModel.EventDescriptorCollection.this"/> property to print
   the type
   of the component for the <see cref="System.ComponentModel.EventDescriptor"/> specified by the index. It assumes
   that <c>button1</c>
and <c>textBox1</c>
have been instantiated
on a form.</para>
			<codelink SampleID="Classic EventDescriptorCollection.this1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="EventDescriptorCollection.this">
		<overload>
			<para>Gets the specified event.</para>
		</overload>
		<summary>
			<para>Gets the event with the specified index
      number.</para>
		</summary>
		<param name="index">The zero-based index number of the <see cref="System.ComponentModel.EventDescriptor"/> to get from the collection.</param>
		<value>
			<para>The <see cref="System.ComponentModel.EventDescriptor"/> with the specified index
   number.</para>
		</value>
		<exception cref="System.IndexOutOfRangeException">
			<paramref name="index"/> is not a valid index for <see cref="System.ComponentModel.EventDescriptorCollection.this"/>.</exception>
		<remarks>
			<para>The index number is zero-based. Therefore, you must
      subtract one from the numerical position of a particular <see cref="System.ComponentModel.EventDescriptor"/> to access that <see cref="System.ComponentModel.EventDescriptor"/>. For example, to get the third <see cref="System.ComponentModel.EventDescriptor"/>, you need to
      specify <c>myColl[2]</c>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.ComponentModel.EventDescriptorCollection.this"/> property to
   print the name of the
<see cref="System.ComponentModel.EventDescriptor"/> specified by the index number in a
   text box. Because the index number is zero-based, this example prints the name of the
   second <see cref="System.ComponentModel.EventDescriptor"/>. It assumes <c>button1</c> and <c>textBox1</c>
have been instantiated on a form.</para>
			<codelink SampleID="Classic EventDescriptorCollection.this Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc>
	<doc for="EventDescriptorCollection.InternalSort1">
		<summary>
			<para>Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/> , using
   the specified <see cref="System.Collections.IComparer"/> .</para>
		</summary>
		<param name="sorter">A comparer to use to sort the <see cref="System.ComponentModel.EventDescriptor"/> objects in this collection.</param>
		<remarks>
			<para>If the <paramref name="sorter"/> parameter is <see langword="null"/>, the default sort 
   order is used.</para>
		</remarks>
		<seealso cref="System.Collections.IComparer"/>
	</doc>
	<doc for="EventDescriptorCollection.EventDescriptorCollection">
		<summary>
			<para> Initializes a new instance of the <see cref="System.ComponentModel.EventDescriptorCollection"/> class.
   </para>
		</summary>
		<param name="events">An array of type <see cref="System.ComponentModel.EventDescriptor"/> that provides the events for this collection. </param>
		<remarks>
			<para> If the <paramref name="events"/> parameter is empty, this constructor creates an empty
<see cref="System.ComponentModel.EventDescriptorCollection"/> class.
   </para>
		</remarks>
		<example>
			<para> The following example creates a new <see cref="System.ComponentModel.EventDescriptorCollection"/> class using the
   events on <c>button1</c>. It assumes
that <c>button1</c>
has been instantiated on a form.</para>
			<codelink SampleID="Classic EventDescriptorCollection.EventDescriptorCollection Example" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.EventDescriptor"/>
		<seealso cref="System.ComponentModel.TypeDescriptor"/>
	</doc><doc for="EventDescriptorCollection.Insert">
		<summary>
			<para>Inserts an <see cref="System.ComponentModel.EventDescriptor"/> to the collection at a specified index.</para>
		</summary>
		<param name="index">The index within the collection in which to insert the <paramref name="value"/> parameter. </param>
		<param name=" value">An <see cref="System.ComponentModel.EventDescriptor"/> to insert into the collection.</param>
	</doc><doc for="EventDescriptorCollection.InternalSort">
		<overload>
			<para>Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/>.</para>
		</overload>
		<summary>
			<para> Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/>
. The specified order is applied first, followed by
the default sort for this collection, which is usually alphabetical.</para>
		</summary>
		<param name="names">An array of strings describing the order in which to sort the <see cref="System.ComponentModel.EventDescriptor"/> objects in this collection.</param>
		<example>
			<para>If the <see cref="System.ComponentModel.EventDescriptorCollection"/> contains four <see cref="System.ComponentModel.EventDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , the properties of this <see cref="System.ComponentModel.EventDescriptorCollection"/> would be 
sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="Classic EventDescriptorCollection.InternalSort Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="EventDescriptorCollection.RemoveAt">
		<summary>
			<para>Removes the <see cref="System.ComponentModel.EventDescriptor"/> at the specified index from the
   collection.</para>
		</summary>
		<param name="index">The index of the <see cref="System.ComponentModel.EventDescriptor"/> to remove.</param>
	</doc><doc for="EventDescriptorCollection.Sort">
		<overload>
			<para>Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/>.</para>
		</overload>
		<summary>
			<para> Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/> , using the default sort for this collection,
   which is usually alphabetical.
   </para>
		</summary>
		<returns>
			<para>The new <see cref="System.ComponentModel.EventDescriptorCollection"/> .</para>
		</returns>
		<example>
			<para>If the <see cref="System.ComponentModel.EventDescriptorCollection"/> contains four <see cref="System.ComponentModel.EventDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , the properties of <c>myNewColl</c> would be sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="classic eventdescriptorcollection.sort example" SnippetID="1"/>
		</example>
	</doc><doc for="EventDescriptorCollection.Sort3">
		<summary>
			<para> Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/> , using the specified
<see cref="System.Collections.IComparer"/> 
.</para>
		</summary>
		<param name="comparer">An <see cref="System.Collections.IComparer"/> to use to sort the <see cref="System.ComponentModel.EventDescriptor"/> objects in this collection.</param>
		<returns>
			<para>The new <see cref="System.ComponentModel.EventDescriptorCollection"/> .</para>
		</returns>
		<remarks>
			<para>The specified <see cref="System.Collections.IComparer"/> is applied first, followed by the default
   sort for this collection, which is usually alphabetical.</para>
		</remarks>
		<example>
			<para>If the <see cref="System.ComponentModel.EventDescriptorCollection"/> contains four <see cref="System.ComponentModel.EventDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , the properties of <c>myNewColl</c> would be sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="classic eventdescriptorcollection.sort example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="EventDescriptorCollection.Sort1">
		<summary>
			<para> Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/>
, given
a specified sort order.</para>
		</summary>
		<param name="names">An array of strings describing the order in which to sort the <see cref="System.ComponentModel.EventDescriptor"/> objects in the collection.</param>
		<returns>
			<para>The new <see cref="System.ComponentModel.EventDescriptorCollection"/> .</para>
		</returns>
		<remarks>
			<para>The specified order is applied first, followed by the default sort for this
      collection, which is usually alphabetical.</para>
		</remarks>
		<example>
			<para>If the <see cref="System.ComponentModel.EventDescriptorCollection"/> contains four <see cref="System.ComponentModel.EventDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , the properties of <c>myNewColl</c> would be sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="classic eventdescriptorcollection.sort example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="EventDescriptorCollection.Sort2">
		<summary>
			<para> Sorts the members of this <see cref="System.ComponentModel.EventDescriptorCollection"/> , given a specified sort
   order and an <see cref="System.Collections.IComparer"/>
   .</para>
		</summary>
		<param name="names">An array of strings describing the order in which to sort the <see cref="System.ComponentModel.EventDescriptor"/> objects in the collection.</param>
		<param name="comparer">An <see cref="System.Collections.IComparer"/> to use to sort the <see cref="System.ComponentModel.EventDescriptor"/> objects in this collection.</param>
		<returns>
			<para>The new <see cref="System.ComponentModel.EventDescriptorCollection"/> .</para>
		</returns>
		<remarks>
			<para>The specified sort order is applied first, followed by the sort
      using the specified <see cref="System.Collections.IComparer"/> .</para>
		</remarks>
		<example>
			<para>If the <see cref="System.ComponentModel.EventDescriptorCollection"/> contains four <see cref="System.ComponentModel.EventDescriptor"/> objects with the names <c>A</c>, <c>B</c>, <c>C</c>, and <c>D</c> , the properties of <c>myNewColl</c> would be sorted in the order <c>D</c>, <c>B</c>, <c>A</c>, and <c>C</c> .</para>
			<codelink SampleID="classic eventdescriptorcollection.sort example" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IComparer"/>
	</doc><doc for="EventDescriptorCollection.ICollection.Count">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IEnumerable.GetEnumerator">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.Clear">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.IndexOf">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.Insert">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.RemoveAt">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.IsReadOnly">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.IList.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventDescriptorCollection.Empty">
		<summary>
			<para>Specifies an empty collection to use, rather than
      creating a new one with no items. This <see langword="static"/> field is read-only.</para>
		</summary>
	</doc></docs>
