<docs>
	<doc for="StringConverter.CanConvertFrom"><nodoc/>
		<summary>
			<para>Gets a value indicating whether this converter can convert an object in the
      given source type to a string using the specified context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</para></param>
		<param name="sourceType">A <see cref="System.Type"/> that represents the type you wish to convert from.</param>
		<returns>
			<para><see langword="true "/>if this converter can perform the conversion;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
   <see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc><doc for="StringConverter">
		<summary>
			<para> Provides a type converter to convert string objects to and from other
 representations.</para>
		</summary>
		<remarks>
			<para>This converter can only convert to a string. It works as a pass through for
 other converters that want to convert an object to a string.</para>
			<para>For more information about type converters, see the <see cref="System.ComponentModel.TypeConverter"/> base class and
<see topic="cpconImplementingTypeConverter"/>.</para>
			<note type="note">
 You should never create
 an instance of <see cref="System.ComponentModel.StringConverter"/>. Instead, call the <see cref="System.ComponentModel.TypeDescriptor.GetConverter"/> method of <see cref="System.ComponentModel.TypeDescriptor"/>. For more information, see the examples
 in the <see cref="System.ComponentModel.TypeConverter"/> base class.
 
</note>
		</remarks>
	</doc>
	<doc for="StringConverter.ConvertFrom">
		<summary>
			<para>Converts the specified value object to a <see cref="System.String"/> object.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</para></param>
		<param name="value">The <see cref="System.Object"/> to convert.</param>
		<param name=" culture">The <see cref="System.Globalization.CultureInfo"/> to use.</param>
		<returns>
			<para>An <see cref="System.Object"/> that represents
   the converted value.</para>
		</returns>
		<exception cref="System.NotSupportedException">The conversion could not be performed.</exception>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information
   about the environment this converter is being invoked from. This can be
<see langword="null"/>, so 
   you always need to check its value. In addition, properties on the context object
   can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter"/>
	</doc>
</docs>
