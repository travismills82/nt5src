<docs>
	<doc for="IComponent.Site">
		<summary>
			<para> Gets or sets
      the <see cref="System.ComponentModel.ISite"/> associated
      with the <see cref="System.ComponentModel.IComponent"/>.</para>
		</summary>
		<value>
			<para>The <see cref="System.ComponentModel.ISite"/>
object associated with the component; or <see langword="null"/>, if
the component does not have a site.</para>
		</value>
		<remarks>
			<para>Sites can also
      serve as a repository for container-specific, per-component information, such as
      the component name.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ISite"/>
	</doc><doc for="IComponent.Disposed">
		<summary>
			<para>Represents the method that handles the <see cref="System.ComponentModel.IComponent.Disposed"/> event of a component.</para>
		</summary>
		<remarks>
			<para>When you create a <see cref="System.ComponentModel.IComponent"/> delegate, you identify the method
   that handles the event. To associate the event with your event handler, add an
   instance of the delegate to the event. The event handler is called whenever the
   event occurs, unless you remove the delegate. For more information about event
   handler delegates, see <see topic="cpconEventsDelegates"/>.</para>
		</remarks>
		<seealso cref="System.EventHandler"/>
	</doc><doc for="IComponent">
		<summary>
			<para>Provides functionality required by all components.
   <see cref="System.ComponentModel.Component"/> is the
      default implementation of <see cref="System.ComponentModel.IComponent"/> and
      serves as the base class for all components in the common language runtime. </para>
		</summary>
		<remarks>
			<para> You can contain components
      in a container. In this context, containment refers to logical containment, not visual containment.
      You can use components and containers in a variety of scenarios, both visual
      and non visual.</para>
			<para><see cref="T:System.Windows.Forms.Control" qualify="true"/> inherits from <see cref="System.ComponentModel.Component"/>, the default implementation of <see cref="System.ComponentModel.IComponent"/>.</para>
			<para>A component interacts with its container primarily
   through a container-provided <see cref="System.ComponentModel.ISite"/>
   , which is a repository of
   container-specific per-component information.</para>
			<note type="inotes">
   To be a component, a class must implement the <see cref="System.ComponentModel.IComponent"/> interface and
   provide a basic constructor that requires no
   parameters or a single parameter of type IContainer. For more information
   about implementing <see cref="System.ComponentModel.IComponent"/>, see <see topic="cpconcomponentprogrammingessentials"/>.
   
</note>
		</remarks>
		<example>
			<codelink SampleID="ContainerExmpl" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.Container"/>
		<seealso cref="System.ComponentModel.IContainer"/>
		<seealso cref="System.ComponentModel.ISite"/>
		<seealso cref="T:System.Windows.Forms.Control" qualify="true"/>
	</doc></docs>
