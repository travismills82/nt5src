<docs>
	<doc for="IEditableObject.EndEdit">
		<summary>
			<para> Pushes changes since the last <see cref="System.ComponentModel.IEditableObject.BeginEdit"/> or <see cref="M:System.ComponentModel.IBindingList.AddNew" qualify="true"/> call into the underlying
 object.</para>
		</summary>
		<remarks>
			<para>This method is typically used to capture the <see cref="System.ComponentModel.IEditableObject.EndEdit"/> semantics of a <see cref="T:System.Data.DataRowView"/>.</para>
			<para>This method will be ignored if called on an object that is not 
 being edited.</para>
		</remarks>
	</doc>
	<doc for="IEditableObject.CancelEdit">
		<summary>
			<para>Discards changes since the last <see cref="System.ComponentModel.IEditableObject.BeginEdit"/>
call.</para>
		</summary>
		<remarks>
			<para>This method is typically used to capture the <see cref="System.ComponentModel.IEditableObject.CancelEdit"/> semantics of a <see cref="T:System.Data.DataRowView"/>.</para>
			<para>This method will be ignored if called on an object that is not 
 being edited.</para>
			<note type="note">
 If the owning list
 implements <see cref="System.ComponentModel.IBindingList"/>
 
 ,
 calling <see cref="System.ComponentModel.IEditableObject.CancelEdit"/> on an object created
 using <see cref="M:System.ComponentModel.IBindingList.AddNew" qualify="true"/>
 discards the
 object.
 
</note>
		</remarks>
	</doc>
	<doc for="IEditableObject">
		<summary>
			<para>Provides functionality to commit or rollback changes to an object that is used as a data source.</para>
		</summary>
		<remarks>
			<para>This interface is typically used to capture
 the <see cref="System.ComponentModel.IEditableObject.BeginEdit"/>, <see cref="System.ComponentModel.IEditableObject.EndEdit"/>, and <see cref="System.ComponentModel.IEditableObject.CancelEdit"/> semantics of a <see cref="T:System.Data.DataRowView"/>.</para>
		</remarks>
		<example>
			<para>The following sample provides a simple implementation of
 the <see cref="System.ComponentModel.IEditableObject"/> interface. The <c>Customer</c> class stores customer
 information and can be used as a collection for a customer database. This sample
 assumes that you have used the <c>CustomerList </c>class that can be found in sample in the <see cref="System.ComponentModel.IBindingList"/>
class.</para>
			<codelink SampleID="Binding_Editable" SnippetID="1"/>
		</example>
	</doc>
	<doc for="IEditableObject.BeginEdit">
		<summary>
			<para>Begins
      an edit on an object.
      </para>
		</summary>
		<remarks>
			<para>This method is typically used to capture the <see cref="System.ComponentModel.IEditableObject.BeginEdit"/> semantics of a <see cref="T:System.Data.DataRowView"/>.</para>
			<para>If <see cref="System.ComponentModel.IEditableObject.BeginEdit"/> is called on an object
that is already being edited, the second and subsequent calls are ignored. </para>
			<note type="inotes">
   An object implementing this interface needs to store
   updates after <see cref="System.ComponentModel.IEditableObject.BeginEdit"/> in such a way that they can be discarded
   if <see cref="System.ComponentModel.IEditableObject.CancelEdit"/> is called.
   
</note>
		</remarks>
	</doc></docs>
