<docs>
	<doc for="ServiceContainer.Container">
		<summary>
     Retrieves the parent service container, or null
     if there is no parent container.
 </summary>
	</doc>
	<doc for="ServiceContainer.Services">
		<summary>
     Our hashtable of services.  The hashtable is demand
     created here.
 </summary>
	</doc>
	<doc for="ServiceContainer.ServiceContainer">
		<overload>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.ServiceContainer"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.ServiceContainer"/> class.</para>
		</summary>
	</doc><doc for="ServiceContainer.GetService">
		<summary>
			<para>Gets the requested service.</para>
		</summary>
		<param name="serviceType">The type of service to retrieve.</param>
		<returns>
			<para> An instance of the service if it could be found,
      or <see langword="null"/>
      if it could not be found.</para>
		</returns>
		<seealso cref="System.IServiceProvider"/>
	</doc><doc for="ServiceContainer.ServiceContainer1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.ServiceContainer"/> class using the specified parent service provider.</para>
		</summary>
		<param name="parentProvider">A parent service provider.</param>
		<remarks>
			<para> The service container uses this service object provider to retrieve
 services, if they are not available locally in the container.</para>
		</remarks>
	</doc><doc for="ServiceContainer.AddService3">
		<summary>
			<para>Adds the specified service to the service container.</para>
		</summary>
		<param name="serviceType">The type of service to add.</param>
		<param name="callback">A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.</param>
		<param name="promote"><see langword="true"/> if this service should be added to any parent service containers; otherwise, <see langword="false"/>.</param>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
	</doc><doc for="ServiceContainer.RemoveService1">
		<summary>
			<para>Removes the specified service type from the service container.</para>
		</summary>
		<param name="serviceType">The type of service to remove.</param>
		<param name="promote"><see langword="true"/> if this service should be removed from any parent service containers; otherwise, <see langword="false"/>.</param>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
	</doc><doc for="ServiceContainer.AddService">
		<overload>
			<para>Adds the specified service to the service container.</para>
		</overload>
		<summary>
			<para>Adds the specified service to the service container.</para>
		</summary>
		<param name="serviceType">The type of service to add.</param>
		<param name="serviceInstance">An instance of the service to add. This object must implement or inherit from the type indicated by the <paramref name="serviceType"/> parameter.</param>
		<example>
			<para>The following example illustrates how to add a service to a <see cref="System.ComponentModel.Design.ServiceContainer"/>.</para>
			<codelink SampleID="ServiceContainerExample" SnippetID="2"/>
		</example>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
	</doc>
	<doc for="ServiceContainer.AddService2">
		<summary>
			<para>Adds the specified service to the service container.</para>
		</summary>
		<param name="serviceType">The type of service to add.</param>
		<param name="callback">A callback object that can create the service. This allows a service to be declared as available, but delays creation of the object until the service is requested.</param>
		<example>
			<para>The following example illustrates how to add a service to a <see cref="System.ComponentModel.Design.ServiceContainer"/>.</para>
			<codelink SampleID="ServiceContainerExample" SnippetID="3"/>
		</example>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
	</doc>
	<doc for="ServiceContainer.RemoveService">
		<overload>
			<para>Removes the specified service type from the service container.</para>
		</overload>
		<summary>
			<para>Removes the specified service type from the service container.</para>
		</summary>
		<param name="serviceType">The type of service to remove.</param>
		<example>
			<para>The following example illustrates how to remove a service from a 
   <see cref="System.ComponentModel.Design.ServiceContainer"/>.</para>
			<codelink SampleID="ServiceContainerExample" SnippetID="4"/>
		</example>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
	</doc>
	<doc for="ServiceContainer.AddService1">
		<summary>
			<para>Adds the specified service to the service container.</para>
		</summary>
		<param name="serviceType">The type of service to add.</param>
		<param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by the <paramref name="serviceType"/> parameter.</param>
		<param name="promote"><see langword="true"/> if this service should be added to any parent service containers; otherwise, <see langword="false"/>.</param>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
	</doc>
	<doc for="ServiceContainer">
		<summary>
			<para>Provides a simple implementation of the <see cref="System.ComponentModel.Design.IServiceContainer"/> interface. This class cannot be
   inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.ComponentModel.Design.ServiceContainer"/> object can be used to store
   and provide services. <see cref="System.ComponentModel.Design.ServiceContainer"/> implements the
<see cref="System.ComponentModel.Design.IServiceContainer"/> interface.</para>
			<para>The <see cref="System.ComponentModel.Design.ServiceContainer"/> object can be created using a
constructor that adds a parent <see cref="System.ComponentModel.Design.IServiceContainer"/>through which services can be
optionally added to or removed from all parent
<see cref="System.ComponentModel.Design.IServiceContainer"/> objects, including the 
immediate parent <see cref="System.ComponentModel.Design.IServiceContainer"/>. To add
or remove a service from all <see cref="System.ComponentModel.Design.IServiceContainer"/> implementations that are
linked to this <see cref="System.ComponentModel.Design.IServiceContainer"/> through
parenting,
call the <see cref="System.ComponentModel.Design.ServiceContainer.AddService"/> or <see cref="System.ComponentModel.Design.ServiceContainer.RemoveService"/> method overload
that accepts a Boolean value indicating whether to promote the service request.</para>
		</remarks>
		<example>
			<para> The following example program demonstrates service chaining and the resultant
      service availability of a chain of linked <see cref="System.ComponentModel.Design.ServiceContainer"/> objects. The
      program provides a user interface that allows you to see the availability
      of services within a chain of linked services, and uses the <see cref="System.ComponentModel.Design.ServiceContainer.AddService"/>, <see cref="System.ComponentModel.Design.ServiceContainer.GetService"/>, and <see cref="System.ComponentModel.Design.ServiceContainer.RemoveService"/> methods as well as
      linked service containers.</para>
			<codelink SampleID="ServiceArchitectureExample" SnippetID="1"/>
		</example>
		<seealso cref="System.IServiceProvider"/>
		<seealso cref="System.ComponentModel.Design.IServiceContainer"/>
		<seealso cref="System.ComponentModel.Design.ServiceCreatorCallback"/>
	</doc>
</docs>
