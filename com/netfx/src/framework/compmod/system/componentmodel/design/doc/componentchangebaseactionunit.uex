<docs>
   <doc for="ComponentChangeBaseActionUnit">
 <summary>
    <para>
       Represents a general component change
       action unit.
    </para>
 </summary>
 <remarks>
    <para>
       This object can usually find the proper component object even if the name or instance
       changes (due to other undo actions, for example).
    </para>
 </remarks>
 <seealso cref='System.ComponentModel.Design.IUndoService'/>
   </doc>
   <doc for="ComponentChangeBaseActionUnit.ComponentChangeBaseActionUnit">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.ComponentChangeBaseActionUnit'/>
       class.
    </para>
 </summary>
 <param name='target'>
    The object the actions are performed upon.
 </param>
 <seealso cref='System.ComponentModel.Design.IUndoService'/>
   </doc>
   <doc for="ComponentChangeBaseActionUnit.Description">
 <summary>
    <para>
       Gets the description for this action unit.
    </para>
 </summary>
 <returns>
    <para>
       A description of the action encapsulated in this action unit.
    </para>
 </returns>
 <seealso cref='System.ComponentModel.Design.IUndoService'/>
   </doc>
   <doc for="ComponentChangeBaseActionUnit.NextActionType">
 <summary>
 <para>Gets the current undo or redo <see cref='System.ComponentModel.Design.ActionType'/>.</para>
 </summary>
 <value>
 <para>The current action type state, <see cref='System.ComponentModel.Design.ActionType.Undo'/> or <see cref='System.ComponentModel.Design.ActionType.Redo'/>.</para>
 </value>
 <remarks>
 <para>The current action state indicates the type of operation that will be performed on the next call to <see cref='System.ComponentModel.Design.ComponentChangeBaseActionUnit.DoAction'/>. The
    return value is either <see cref='System.ComponentModel.Design.ActionType.Undo'/> or <see cref='System.ComponentModel.Design.ActionType.Redo'/>.</para>
 </remarks>
 <seealso cref='System.ComponentModel.Design.IUndoService'/>
 <seealso cref='System.ComponentModel.Design.ActionType'/>
   </doc>
   <doc for="ComponentChangeBaseActionUnit.DoAction">
 <summary>
 <para>Perform the action encapsulated in this <see cref='System.ComponentModel.Design.IActionUnit'/>.</para>
 </summary>
 <returns>
 <para><see langword='true'/> if the action was 
    successfully carried out; otherwise, <see langword='false'/>.</para>
 </returns>
 <remarks>
 <para>The implementation automatcially toggles the <see cref='System.ComponentModel.Design.IActionUnit'/> 
 between being an <see langword='ActionType.Undo '/>or <see langword='ActionType.Redo '/> type
 action each time <see langword='DoAction'/> is called.</para>
 <note type="inotes">
    Override this member to perform specific changes, then
    call <see langword='base.DoAction'/>
    to invoke this code.
 </note>
 </remarks>
 <seealso cref='System.ComponentModel.Design.IUndoService'/>
 <seealso cref='System.ComponentModel.Design.ActionType'/>
   </doc>
   <doc for="ComponentChangeBaseActionUnit.GetTarget">
 <summary>
    <para>
       Gets the current target component for this action.
    </para>
 </summary>
 <returns>
    <para>
       The target object to perform the action on.
    </para>
 </returns>
 <seealso cref='System.ComponentModel.Design.IUndoService'/>
   </doc>
   <doc for="ComponentChangeBaseActionUnit.OnTargetChanged">
 <summary>
    <para>Called when the target has been changed to a new object. This may occur if 
       some other undo action causes the target to be recreated, such as if the target
       was deleted and the delete was undone, and then subsequent undos cause this undo
       unit to execute.</para>
 </summary>
 <param name='oldTarget'>The prior target object.</param>
 <param name='newTarget'>The new target object.</param>
 <remarks>
    <para>Override this function to be notified if the action unit will operate on a different target than the one that it was created with.
       This is called when the ComponentChangeBase action unit attempts to use the target rather than when the target actually changes.</para>
 </remarks>
   </doc>
</docs>

