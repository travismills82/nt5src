<docs>
	<doc for="ITypeDescriptorFilterService.FilterAttributes">
		<summary>
			<para> Filters the attributes that a component exposes through
      a <see cref="System.ComponentModel.TypeDescriptor"/>.</para>
		</summary>
		<param name="component">The component to filter the attributes of.</param>
		<param name="attributes">A dictionary of attributes that can be modified.</param>
		<returns>
			<para><see langword="true"/>
if the set of filtered attributes is to be cached; <see langword="false"/>
if the filter service must query again.</para>
		</returns>
		<remarks>
			<para> This method is called when a user requests a set of
      attributes for a component. The attributes are added to the dictionary with the
      attribute type ID as the keys. Implementers of this service can make changes, add, or
      remove attributes in the dictionary.</para>
			<note type="inotes">
      Return <see langword="false"/> only
      when necessary,
      because repeated queries to the type descriptor filter service can decrease performance.
      
   </note>
		</remarks>
	</doc>
	<doc for="ITypeDescriptorFilterService.FilterProperties">
		<summary>
			<para>Filters the properties that a component exposes through a <see cref="System.ComponentModel.TypeDescriptor"/>.</para>
		</summary>
		<param name="component">The component to filter properties for.</param>
		<param name="properties">A dictionary of properties that can be modified.</param>
		<returns>
			<para><see langword="true"/> if the set of
   filtered properties is to be cached; <see langword="false"/>
   if the filter service must query again.</para>
		</returns>
		<remarks>
			<para> This method is called when a user requests a set of
      properties for a component. The properties are added to the
      dictionary with the property names as the keys.
      Implementers of this service can make changes, add, or remove
      properties in the dictionary.</para>
			<note type="inotes">
      
      Return <see langword="false"/>
      only when necessary, because repeated queries to the type descriptor filter service can decrease performance.
      
   </note>
		</remarks>
	</doc><doc for="ITypeDescriptorFilterService.FilterEvents">
		<summary>
			<para> Filters the events that a component exposes through a
      <see cref="System.ComponentModel.TypeDescriptor"/>.</para>
		</summary>
		<param name="component">The component to filter events for.</param>
		<param name="events">A dictionary of events that can be modified.</param>
		<returns>
			<para><see langword="true"/> if the set of filtered events is to be
   cached; <see langword="false"/> if the filter service must query again.</para>
		</returns>
		<remarks>
			<para> This method is called when a user requests a set of events for a
      component. The events are added to the dictionary with the event names as the keys.
      Implementers of this service can make changes, add, or remove events in the
      dictionary.</para>
			<note type="inotes">
Return <see langword="false"/>
only
when necessary, because repeated queries to the type descriptor filter service can decrease performance.</note>
		</remarks>
	</doc><doc for="ITypeDescriptorFilterService">
		<summary>
			<para>Provides an interface to modify the set of member descriptors for a component in design
      mode.</para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.Design.ITypeDescriptorFilterService"/> provides an
   interface that a component can implement to modify the set of descriptors that a
   component provides through a <see cref="System.ComponentModel.TypeDescriptor"/>.
<see cref="System.ComponentModel.TypeDescriptor"/> will query a component's 
   site for the <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService"/> service before providing
   descriptors representing its properties, attributes, and events.</para>
			<note type="inotes">
   To filter the member
   descriptors exposed by a <see cref="System.ComponentModel.TypeDescriptor"/>, implement this interface on a
   component and
   override the <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes"/>, <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents"/> or <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties"/>
   methods of this class to filter the attributes, events, or properties,
   respectively.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates a designer that uses
      the <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService"/> to filter the attributes collection of any
      new or existing <see langword="System.Windows.Forms.Button"/> to add a designer
      attribute for a new designer before
      loading or reloading the designer for the button. </para>
			<para> To use the example, compile the code as a class library and
      load the components from the class library into the toolbox in a Windows Forms
      project using the <see langword="Customize Toolbox"/>
      command. Add some buttons to your form. Add a
   <see langword="ButtonDesignerFilterComponent"/> to your form, and it will appear
      in the component tray. The <see langword="ButtonDesignerFilterComponent "/>will add
      a <see langword="ButtonDesignerFilterService"/>
				<see cref="System.ComponentModel.Design.ITypeDescriptorFilterService"/> as a design mode service
      provider. Existing or new <see langword="System.Windows.Forms.Button "/>objects on the form will begin color cycling after the
   <see langword="ButtonDesignerFilterService"/> replaces the designer for each
      existing, and any new buttons, with a <see langword="ColorCycleButtonDesigner"/>. The buttons will color
      cycle when you mouse over them, and alternately continue cycling or reset the
      background and foreground colors on MouseLeave events. New
   <see langword="System.Windows.Forms.Button"/>
   
   objects will be given the
<see langword="ColorCycleButtonDesigner"/> through the <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes"/> method of the 
<see langword="ButtonDesignerFilterService"/>
				<see cref="System.ComponentModel.Design.ITypeDescriptorFilterService"/> that has
been loaded, until the <see langword="ButtonDesignerFilterComponent"/> is
disposed and replaces the original <see cref="System.ComponentModel.Design.ITypeDescriptorFilterService"/>. The
<see langword="ColorCycleButton"/> class in this example is 
a <see langword="System.Windows.Forms.Button"/> associated with a
<see langword="ColorCycleButtonDesigner"/>. </para>
			<codelink SampleID="ITypeDescriptorFilterService" SnippetID="1"/>
		</example>
	</doc>
</docs>
