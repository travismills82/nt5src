<docs>
	<doc for="IDesigner.DoDefaultAction">
		<summary>
			<para> Performs the default action for this designer.
      </para>
		</summary>
		<remarks>
			<para>This method is called when a user double-clicks the representation of a 
      component in the component tray.</para>
		</remarks>
	</doc>
	<doc for="IDesigner.Initialize">
		<summary>
			<para>Initializes the designer with the specified component.</para>
		</summary>
		<param name="component">The component to associate with this designer.</param>
	</doc>
	<doc for="IDesigner">
		<summary>
			<para>Provides the basic framework for building a custom designer.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.ComponentModel.Design.IDesigner"/>
interface provides an interface through which you can implement basic
services for a designer. A designer can modify the behavior of a
component at design time, and may provide its own services and behavior. A
designer is only active at design-time, and must be associated with a type of
component using a <see cref="System.ComponentModel.DesignerAttribute"/> in order to be loaded when a component of
the associated type is created at design time.</para>
			<para>The <see cref="System.ComponentModel.Design.IDesigner"/> interface provides methods and properties that you can implement in order to provide custom
behavior at design time.</para>
			<para> Implement the <see cref="System.ComponentModel.Design.IDesigner.Initialize"/> method of a designer to
perform actions when a component
is created. This can be useful if a component should have a special configuration at
design-time, or if its configuration should change depending on conditions that
the designer can determine.</para>
			<para>A designer can provide menu commands on the shortcut
   menu that is displayed when a user right-clicks a component or control in the
   design-time environment. You can implement the <see cref="System.ComponentModel.Design.IDesigner.Verbs"/> property to define a get
   accessor that returns a <see cref="System.ComponentModel.Design.DesignerVerbCollection"/>
   containing the <see cref="System.ComponentModel.Design.DesignerVerb"/>
   objects for generating menu commands.</para>
			<para> A designer for a component that appears in
   the component tray can perform a default action when the
   component is double-clicked. Implement the <see cref="System.ComponentModel.Design.IDesigner.DoDefaultAction"/>
   method to specify the behavior to perform when
   the component is double-clicked.</para>
			<para> A designer can also use the available design-time
   services to perform a variety of tasks, including surveying
   the current design-time environment for components and their properties, reading and setting the
   values of properties of components, managing the toolbox, managing selected components,
   or displaying a user interface that can be used to configure values or
   to apply futher processing.</para>
			<para> To implement a designer for a control that can be sited
   on a form, you can
   inherit from the <see cref="T:System.Windows.Forms.Design.ControlDesigner"/>
   class. Controls whose associated designer does
   not derive from <see cref="T:System.Windows.Forms.Design.ControlDesigner"/> are displayed in the
   component tray. The <see cref="T:System.ComponentModel.Design.ComponentDesigner"/> and <see cref="T:System.Windows.Forms.Design.ControlDesigner"/> classes implement the <see cref="System.ComponentModel.Design.IDesigner"/>
   interface and provide additional design-time
   support that may be of use to authors
   of designers. For more information, see the reference documentation for these classes.</para>
			<para>For an overview of creating design components, please see <see topic="cpconenhancingdesign-timesupport"/>.</para>
		</remarks>
		<example>
			<para>This example demonstrates an <see cref="System.ComponentModel.Design.IDesigner"/> implementation 
   that stores a local reference to its component, performs a default action when
   the component is double-clicked, and provides a designer verb menu command.</para>
			<codelink SampleID="IDesignerExample" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.Design.IRootDesigner"/>
		<seealso cref="System.ComponentModel.Design.IDesignerHost"/>
		<seealso cref="System.ComponentModel.Design.DesignerVerb"/>
		<seealso topic="cpconenhancingdesign-timesupport"/>
	</doc>
	<doc for="IDesigner.Component">
		<summary>
			<para>Gets or sets the base component that this designer is designing.</para>
		</summary>
		<value>
			<para>An <see cref="T:System.ComponentModel.IComponent"/> indicating the base component that this designer is designing.</para>
		</value>
	</doc>
	<doc for="IDesigner.Verbs">
		<summary>
			<para> Gets or sets the design-time verbs supported by the designer.</para>
		</summary>
		<value>
			<para>An array of <see cref="System.ComponentModel.Design.DesignerVerb"/> objects supported by the designer,
   or <see langword="null"/> if the component has no verbs.</para>
		</value>
		<remarks>
			<para>Returns the design time verbs supported by the component
      associated with the designer. The verbs returned by this method
      are typically displayed by the design-time environment in a right-click menu. When a
      user selects one of the verbs, the event handler of the
      corresponding <see cref="System.ComponentModel.Design.DesignerVerb"/> is
      invoked.</para>
			<note type="note">
      A design-time environment typically provides
      a <SpecialLocalizableItem kind="UIElement">Properties...</SpecialLocalizableItem>
   
   entry on a component's
   right-click menu. To avoid duplicate titles for menu entries, no verb
   with a title of "Properties..." should be included in a <see cref="System.ComponentModel.Design.DesignerVerbCollection"/>.
   
</note>
		</remarks>
		<seealso cref="System.ComponentModel.Design.DesignerVerb"/>
		<seealso cref="System.ComponentModel.Design.DesignerVerbCollection"/>
	</doc>
</docs>
