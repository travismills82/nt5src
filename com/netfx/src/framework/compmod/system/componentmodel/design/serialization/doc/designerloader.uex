<docs>
	<doc for="DesignerLoader.Loading">
		<summary>
			<para> Gets a value indicating whether the loader
      is currently loading a document.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the loader is currently loading a document;
   otherwise, <see langword="false"/>.</para>
		</value>
	</doc><doc for="DesignerLoader.BeginLoad">
		<summary>
			<para> Begins loading
      a designer.</para>
		</summary>
		<param name="host"> The loader host through which this loader loads components.</param>
		<remarks>
			<para> The <see cref="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"/> that is passed to
   the <paramref name="host"/>
   parameter is typically the same object as the
   designer host. Through this reference to the loader host, the designer loader can reload
   the design document and indicate that it has finished loading the design document.</para>
		</remarks>
	</doc><doc for="DesignerLoader.Flush">
		<summary>
			<para> Writes cached changes to the location that the designer was loaded from.</para>
		</summary>
		<remarks>
			<para> The designer host calls this method
      periodically to ensure that changes made to the document were saved by the designer loader. This method allows
      designer loaders to implement an asynchronous write scheme to improve performance. The
      default implementation of this method does nothing.</para>
		</remarks>
	</doc><doc for="DesignerLoader">
		<summary>
			<para>Provides a basic designer loader interface that can be used to implement a custom designer loader.</para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.Design.Serialization.DesignerLoader"/>
can be implemented to support custom loading of a designer and
designer components. A designer loader is also responsible for writing changes to an open document
back to the storage the loader used when loading the document after the <see cref="System.ComponentModel.Design.Serialization.DesignerLoader.Flush"/>
method is called. </para>
			<para>By default, the Visual Studio .NET development environment creates
   its own variety of <see cref="System.ComponentModel.Design.Serialization.DesignerLoader"/> that can load basic
   designer projects. To create a custom designer loader, you must inherit from and
   implement the abstract <see cref="System.ComponentModel.Design.Serialization.DesignerLoader"/>
   class. You cannot directly instantiate <see cref="System.ComponentModel.Design.Serialization.DesignerLoader"/>, as it has
   no public constructor. </para>
			<para> When <see cref="System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad"/> is invoked, the designer loader loads the
design document, displays the designer surface using the <see cref="System.ComponentModel.Design.IDesignerHost"/> interface, and calls <see cref="System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad"/>
on the <see cref="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"/> interface
when done. The <see cref="System.ComponentModel.Design.Serialization.IDesignerLoaderHost"/>
implementation is usually the same class that implements <see cref="System.ComponentModel.Design.IDesignerHost"/>.</para>
		</remarks>
	</doc>
	<doc for="DesignerLoader.Dispose">
		<summary>
			<para>Releases all resources used by the <see cref="System.ComponentModel.Design.Serialization.DesignerLoader"/>.</para>
		</summary>
		<remarks>
			<para>Calling <see cref="System.ComponentModel.Design.Serialization.DesignerLoader.Dispose"/>
allows the resources used by the <see cref="System.ComponentModel.Design.Serialization.DesignerLoader"/> to
be reallocated for other purposes. For more information about <see cref="System.ComponentModel.Design.Serialization.DesignerLoader.Dispose"/>, see
<see topic="cpconcleaningupunmanagedresources"/> 
.</para>
		</remarks>
	</doc>
</docs>
