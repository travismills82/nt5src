<docs>
	<doc for="DesignerSerializerAttribute.TypeId">
		<summary>
			<para>Indicates a unique ID for this attribute type.</para>
		</summary>
		<remarks>
			<para>This defines a unique ID for this attribute type. It is used by filtering 
       algorithms to identify two attributes that are the same type. For most
       attributes, this just returns the Type instance for the attribute.
       EditorAttribute overrides this to include the type of the editor base type.</para>
		</remarks>
	</doc>
	<doc for="DesignerSerializerAttribute.SerializerTypeName">
		<summary>
			<para> Gets the fully qualified type name of the serializer.</para>
		</summary>
		<value>
			<para>The fully qualified type name of the serializer.</para>
		</value>
	</doc><doc for="DesignerSerializerAttribute.SerializerBaseTypeName">
		<summary>
			<para> Gets the fully qualified type name of the serializer base type.</para>
		</summary>
		<value>
			<para>The fully qualified type name of the serializer base type.</para>
		</value>
	</doc><doc for="DesignerSerializerAttribute.DesignerSerializerAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/> class.</para>
		</summary>
		<param name="serializerType">The data type of the serializer.</param>
		<param name="baseSerializerType">The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.</param>
	</doc><doc for="DesignerSerializerAttribute.DesignerSerializerAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/> class.</para>
		</summary>
		<param name="serializerTypeName">The fully qualified name of the data type of the serializer.</param>
		<param name="baseSerializerType">The base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.</param>
	</doc><doc for="DesignerSerializerAttribute.DesignerSerializerAttribute2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/> class.</para>
		</summary>
		<param name="serializerTypeName">The fully qualified name of the data type of the serializer.</param>
		<param name="baseSerializerTypeName">The fully qualified name of the base data type of the serializer. Multiple serializers can be supplied for a class as long as the serializers have different base types.</param>
	</doc><doc for="DesignerSerializerAttribute">
		<summary>
			<para> Indicates a serializer for the serialization manager to use to serialize the values of the type this attribute is applied to. This class cannot be
      inherited.</para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/> provides a
   way to indicate to the designer serialization manager that a specific type of serializer
   should be used when serializing the values of an object. This allows
   you to specify a serializer that is capable of serializing a custom type, for instance. Place this attribute on a class to
   indicate the serialization object to use when serializing the class.</para>
		</remarks>
		<example>
			<para>The following code uses a <see cref="System.ComponentModel.Design.Serialization.DesignerSerializerAttribute"/> to associate an
   example serializer with an example component.</para>
			<codelink SampleID="DesignerSerializerAttribute" SnippetID="1"/>
		</example>
		<seealso cref="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute"/>
	</doc>
</docs>
