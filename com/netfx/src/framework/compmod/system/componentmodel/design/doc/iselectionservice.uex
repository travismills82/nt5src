<docs>
	<doc for="ISelectionService.GetComponentSelected">
		<summary>
			<para>Gets a value indicating whether the specified component is currently selected.</para>
		</summary>
		<param name="component">The component to test.</param>
		<returns>
			<para><see langword="true "/> if the component is part of the user's current selection; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>This method can be used to check whether a specific 
      component is currently selected. This process is generally quicker than getting and parsing the entire list of selected components.</para>
		</remarks>
	</doc><doc for="ISelectionService.GetSelectedComponents">
		<summary>
			<para> Gets a collection of components that are currently selected.
      </para>
		</summary>
		<returns>
			<para> A collection that represents the current set of components that are selected.
      </para>
		</returns>
	</doc><doc for="ISelectionService.SetSelectedComponents">
		<overload>
			<para> Selects the specified components.</para>
		</overload>
		<summary>
			<para> Selects the specified collection of components.</para>
		</summary>
		<param name="components">The collection of components to select.</param>
		<remarks>
			<para>If the array is <see langword="null"/>
or does not contain any components, <see cref="System.ComponentModel.Design.ISelectionService.SetSelectedComponents"/>
selects the top-level component in the designer.</para>
		</remarks>
	</doc><doc for="ISelectionService.SetSelectedComponents1">
		<summary>
			<para> Selects the components from within the specified collection of components that match the specified selection type.</para>
		</summary>
		<param name="components">The collection of components to select.</param>
		<param name="selectionType">A value from the <see cref="System.ComponentModel.Design.SelectionTypes"/> enumeration. The default is <see cref="System.ComponentModel.Design.SelectionTypes.Normal"/>.</param>
		<remarks>
			<para>If the array is <see langword="null"/>
or does not contain any components, <see cref="System.ComponentModel.Design.ISelectionService.SetSelectedComponents"/>
selects the top-level component in the designer.</para>
		</remarks>
		<seealso cref="System.ComponentModel.Design.SelectionTypes"/>
	</doc><doc for="ISelectionService.SelectionCount">
		<summary>
			<para> Gets the count of selected objects.</para>
		</summary>
		<value>
			<para>The number of selected objects.</para>
		</value>
	</doc><doc for="ISelectionService.SelectionChanging">
		<summary>
			<para>Occurs when the current selection is about to change.</para>
		</summary>
		<remarks>
			<para> Minimize processing when handling this event,
      because processing that occurs within this event handler can significantly affect the overall
      performance of the form designer.</para>
		</remarks>
		<example>
			<para>The following example illustrates how to use the <see cref="System.ComponentModel.Design.ISelectionService.SelectionChanging"/> event.</para>
			<codelink SampleID="ISelectionService" SnippetID="4,5"/>
		</example>
		<seealso cref="System.ComponentModel.Design.ISelectionService.SelectionChanged"/>
		<seealso cref="System.EventHandler"/>
	</doc>
	<doc for="ISelectionService.SelectionChanged">
		<summary>
			<para> Occurs when the current selection changes.</para>
		</summary>
		<remarks>
			<para> Minimize processing when handling this
      event, because processing that occurs within this event handler can significantly affect the overall performance of the form designer.</para>
		</remarks>
		<example>
			<para>The following example illustrates how to use 
      the <see cref="System.ComponentModel.Design.ISelectionService.SelectionChanged"/> event.</para>
			<codelink SampleID="ISelectionService" SnippetID="2,3"/>
		</example>
		<seealso cref="System.ComponentModel.Design.ISelectionService.SelectionChanging"/>
		<seealso cref="System.EventHandler"/>
	</doc>
	<doc for="ISelectionService.PrimarySelection">
		<summary>
			<para> Gets the object that is currently the primary selected object.</para>
		</summary>
		<value>
			<para>The object that is currently the primary selected object.</para>
		</value>
		<remarks>
			<para> When
      multiple components are selected at design time, one of the objects is the
      primary selected object. Some operations behave differently depending on which selected component
      is the primary selected object. The primary selected object is
      typically the last object that was selected, but the primary object of a multiple
      component selection can be changed to any of the selected components. The
      primary selected object has a selection border that is distinct in
      appearance from the other selected objects. The specific type of visual distinction depends on the development environment's implementation of a selection user interface.</para>
		</remarks>
	</doc>
	<doc for="ISelectionService">
		<summary>
			<para> Provides an interface for a designer to select components.
      </para>
		</summary>
		<remarks>
			<para> When a component is selected, its viewable or editable properties are shown in the Properties window.
      </para>
		</remarks>
		<example>
			<para> The following example demonstrates use
      of the <see cref="System.ComponentModel.Design.ISelectionService"/> to
      handle the <see cref="System.ComponentModel.Design.ISelectionService.SelectionChanged"/> and <see cref="System.ComponentModel.Design.ISelectionService.SelectionChanging"/> events.</para>
			<codelink SampleID="ISelectionServiceSample" SnippetID="1"/>
		</example>
	</doc>
</docs>
