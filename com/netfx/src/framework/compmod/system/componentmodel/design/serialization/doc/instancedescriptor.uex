<docs>
	<doc for="InstanceDescriptor.InstanceDescriptor">
		<overload>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/>
class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/>
class using the specified member information and arguments.</para>
		</summary>
		<param name="member">The member information for the descriptor. This can be a <see cref="System.Reflection.MethodInfo"/>, <see cref="System.Reflection.ConstructorInfo"/>, <see cref="System.Reflection.FieldInfo"/>, or <see cref="System.Reflection.PropertyInfo"/>. If this is a <see cref="System.Reflection.MethodInfo"/>, <see cref="System.Reflection.FieldInfo"/>, or <see cref="System.Reflection.PropertyInfo"/>, it must represent a <see langword="static"/> member. </param>
		<param name="arguments">The collection of arguments to pass to the member. This parameter can be <see langword="null"/> or an empty collection if there are no arguments. The collection can also consist of other instances of <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/>.</param>
	</doc><doc for="InstanceDescriptor.InstanceDescriptor1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/>
class using the specified member information, arguments, and value indicating
whether the specified information completely describes the instance.</para>
		</summary>
		<param name="member">The member information for the descriptor. This can be a <see cref="System.Reflection.MethodInfo"/>, <see cref="System.Reflection.ConstructorInfo"/>, <see cref="System.Reflection.FieldInfo"/>, or <see cref="System.Reflection.PropertyInfo"/>. If this is a <see cref="System.Reflection.MethodInfo"/>, <see cref="System.Reflection.FieldInfo"/>, or <see cref="System.Reflection.PropertyInfo"/>, it must represent a <see langword="static"/> member. </param>
		<param name=" arguments"> The collection of arguments to pass to the member. This parameter can be <see langword="null"/> or an empty collection if there are no arguments. The collection can also consist of other instances of <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/>.</param>
		<param name=" isComplete"><see langword="true"/> if the specified information completely describes the instance; otherwise, <see langword="false"/>.</param>
	</doc><doc for="InstanceDescriptor.IsComplete">
		<summary>
			<para>Gets a value indicating whether the contents of this <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> completely identify the instance.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the instance is completely described; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Typically, an <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> 
completely describes a particular instance. However, some objects are too complex
for a single method or constructor to represent. <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete"/> indicates whether
an <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> is incomplete, so a user
can identify these objects and perform additional processing, if necessary, to further
describe their state.</para>
		</remarks>
	</doc><doc for="InstanceDescriptor.MemberInfo">
		<summary>
			<para> Gets the member information that describes the instance this descriptor
      is associated with.</para>
		</summary>
		<value>
			<para>A <see cref="System.Reflection.MemberInfo"/> that describes the instance that this object is associated
   with.</para>
		</value>
		<remarks>
			<para>The value of this property can be a <see cref="System.Reflection.MethodInfo"/>,
<see cref="System.Reflection.ConstructorInfo"/>, <see cref="System.Reflection.FieldInfo"/>, or <see cref="System.Reflection.PropertyInfo"/> . </para>
		</remarks>
	</doc><doc for="InstanceDescriptor.Invoke">
		<summary>
			<para>Invokes this instance descriptor and returns the object
      the descriptor describes.</para>
		</summary>
		<returns>
			<para>The object this instance descriptor describes.</para>
		</returns>
		<remarks>
			<para>This method creates a new instance of the object
      indicated by the <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo"/>
      property, using the specified arguments to create that particular type
      of instance.</para>
		</remarks>
	</doc><doc for="InstanceDescriptor.Arguments">
		<summary>
			<para> Gets the collection of arguments that can be used to 
 reconstruct an instance of the object that this instance descriptor represents.
 </para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.ICollection"/> of arguments that can be used to create the
 object.</para>
		</value>
	</doc><doc for="InstanceDescriptor">
		<summary>
			<para> Provides information necessary to create
      an instance of
      an object. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> can store
   information that describes an instance of an object. This information can be
   used to create an instance of the object.</para>
			<para> Some custom serializers
   use <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> to represent
   serializable objects. Several methods of a <see cref="System.ComponentModel.TypeDescriptor"/> use <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> to represent or
   instantiate objects.</para>
			<para>An <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor"/> provides the following members:</para>
			<list type="bullet"><item>
					<term>
      
      A <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo"/>
      property that describes this object.</term>
				</item>
				<item>
					<term>
      
      An <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments"/>
      property that consists of the constructor arguments that can be used to
      instantiate this object.</term>
				</item>
				<item>
					<term>
      
      A Boolean <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete"/>
      property that indicates whether the object is completely represented by the
      current information.</term>
				</item>
				<item>
					<term>
      
      An <see cref="System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke"/> method
      that can be used to create an instance of the represented
      object.</term>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example illustrates how to use a type converter that
      participates in code generation through the use of instance descriptors.</para>
			<codelink SampleID="InstanceDescriptorSample" SnippetID="1"/>
		</example>
		<seealso cref="System.Reflection.MemberInfo"/>
	</doc>
</docs>
