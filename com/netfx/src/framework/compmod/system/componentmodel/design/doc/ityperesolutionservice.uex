<docs>
	<doc for="ITypeResolutionService.GetAssembly">
		<overload>
			<para>Gets the requested assembly.</para>
		</overload>
		<summary>
			<para>Gets the requested assembly.</para>
		</summary>
		<param name="name">The name of the assembly to retrieve. </param>
		<returns>
			<para>An instance of the requested assembly, or
   <see langword="null"/>
   if no assembly can be located.</para>
		</returns>
	</doc><doc for="ITypeResolutionService.GetType">
		<overload>
			<para>Loads a type with the specified name.</para>
		</overload>
		<summary>
			<para>Loads a type with the specified name.</para>
		</summary>
		<param name="name">The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</param>
		<returns>
			<para>An instance of <see cref="System.Type"/> that corresponds to
   the specified name, or <see langword="null"/>
   if no type can be found.</para>
		</returns>
	</doc><doc for="ITypeResolutionService.ReferenceAssembly">
		<summary>
			<para> Adds a reference
      to the specified assembly.</para>
		</summary>
		<param name="name">An <see cref="System.Reflection.AssemblyName"/> that indicates the assembly to reference.</param>
		<remarks>
			<para>Once a reference to an assembly has been added to this service, this service can load types from names
      that do not specify an assembly.</para>
		</remarks>
		<seealso cref="System.Reflection.AssemblyName"/>
	</doc><doc for="ITypeResolutionService.GetAssembly1">
		<summary>
			<para>Gets the requested assembly.</para>
		</summary>
		<param name="name">The name of the assembly to retrieve. </param>
		<param name="throwOnError"><see langword="true"/> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false"/>, and this method returns <see langword="null"/> if the assembly cannot be located. </param>
		<returns>
			<para>An instance of the requested assembly, or
 <see langword="null"/> if no assembly can be located.</para>
		</returns>
	</doc><doc for="ITypeResolutionService.GetType1">
		<summary>
			<para>Loads a type with the specified name.</para>
		</summary>
		<param name="name">The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</param>
		<param name="throwOnError"><see langword="true"/> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false"/>, and this method returns <see langword="null"/> if the assembly cannot be located. </param>
		<returns>
			<para>An instance of <see cref="System.Type"/> that corresponds to
 the specified name, or <see langword="null"/>
 if no type can be found.</para>
		</returns>
		<remarks>
			<para>If the type cannot be loaded
 and the <paramref name="throwOnError"/> parameter is <see langword="true"/>, this will throw an exception.</para>
		</remarks>
	</doc><doc for="ITypeResolutionService.GetType2">
		<summary>
			<para>Loads a type with the specified name.</para>
		</summary>
		<param name="name">The name of the type. If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</param>
		<param name="throwOnError"><see langword="true"/> if this method should throw an exception if the assembly cannot be located; otherwise, <see langword="false"/>, and this method returns <see langword="null"/> if the assembly cannot be located. </param>
		<param name="ignoreCase"><see langword="true"/> to ignore case when searching for types; otherwise, <see langword="false"/> .</param>
		<returns>
			<para>An instance of <see cref="System.Type"/> that corresponds to
 the specified name, or <see langword="null"/>
 if no type can be found.</para>
		</returns>
		<remarks>
			<para>If the type cannot be loaded and the
 <paramref name="throwOnError"/> parameter is <see langword="true"/>, this will throw an exception.</para>
		</remarks>
	</doc><doc for="ITypeResolutionService.GetPathOfAssembly">
		<summary>
			<para>Gets the path to the file from which the assembly was loaded.</para>
		</summary>
		<param name="name">The name of the assembly.</param>
		<returns>
			<para>The path to the file from which the assembly was loaded.</para>
		</returns>
	</doc><doc for="ITypeResolutionService">
		<summary>
			<para>Provides an interface to retrieve an assembly or type by name.</para>
		</summary>
		<remarks>
			<para>This service is used to load types at design time.</para>
		</remarks>
		<example>
			<para>The following example control provides an interface to call methods of 
      the <see cref="System.ComponentModel.Design.ITypeResolutionService"/> from design mode.</para>
			<codelink SampleID="ITypeResolutionServiceExample" SnippetID="1"/>
		</example>
	</doc>
</docs>
