//------------------------------------------------------------------------------
// <copyright file="ComponentCollection.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>
//------------------------------------------------------------------------------


/**************************************************************************\
*
* Copyright (c) 1998-2002, Microsoft Corp.  All Rights Reserved.
*
* Module Name:
*
*   ComponentCollection.cs
*
* Abstract:
*
* Revision History:
*
\**************************************************************************/
//------------------------------------------------------------------------------
// <autogenerated>
//     This class was generated by a tool.
//     Runtime Version: 1.0.2204.0
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace System.ComponentModel {
    using System;
    using System.Collections;
    using System.ComponentModel;
    using System.Globalization;
    
    /** The component in the container identified by name. */
    /// <include file='doc\ComponentCollection.uex' path='docs/doc[@for="ComponentCollection"]/*' />
    /// <devdoc>
    ///    <para>
    ///       Gets a specific <see cref='System.ComponentModel.Component'/> in the <see cref='System.ComponentModel.Container'/>
    ///       .
    ///    </para>
    /// </devdoc>
    [System.Runtime.InteropServices.ComVisible(true)]
    public class ComponentCollection : ReadOnlyCollectionBase {
        /// <include file='doc\ComponentCollection.uex' path='docs/doc[@for="ComponentCollection.ComponentCollection"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        public ComponentCollection(IComponent[] components) {
            InnerList.AddRange(components);
        }

        /** The component in the container identified by name. */
        /// <include file='doc\ComponentCollection.uex' path='docs/doc[@for="ComponentCollection.this"]/*' />
        /// <devdoc>
        ///    <para>
        ///       Gets a specific <see cref='System.ComponentModel.Component'/> in the <see cref='System.ComponentModel.Container'/>
        ///       .
        ///    </para>
        /// </devdoc>
        public virtual IComponent this[string name] {
            get {
                if (name != null) {
                    IList list = InnerList;
                    foreach(IComponent comp in list) {
                        if (comp != null && comp.Site != null && comp.Site.Name != null && string.Compare(comp.Site.Name, name, true, CultureInfo.InvariantCulture) == 0) {
                            return comp;
                        }
                    }
                }
                return null;
            }
        }
        
        /** The component in the container identified by index. */
        /// <include file='doc\ComponentCollection.uex' path='docs/doc[@for="ComponentCollection.this1"]/*' />
        /// <devdoc>
        ///    <para>
        ///       Gets a specific <see cref='System.ComponentModel.Component'/> in the <see cref='System.ComponentModel.Container'/>
        ///       .
        ///    </para>
        /// </devdoc>
        public virtual IComponent this[int index] {
            get {
                return (IComponent)InnerList[index];
            }
        }
        
        /// <include file='doc\ComponentCollection.uex' path='docs/doc[@for="ComponentCollection.CopyTo"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        public void CopyTo(IComponent[] array, int index) {
            InnerList.CopyTo(array, index);
        }
    }
}

