<docs>
	<doc for="NameValueCollection.NameValueCollection">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameValueCollection"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameValueCollection"/> class 
    that is empty, has the default initial capacity
    and uses the default case-insensitive hash code provider and the default
    case-insensitive comparer.</para>
		</summary>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The 
    default initial capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code 
 provider is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default 
    comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc>
	<doc for="NameValueCollection.NameValueCollection2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameValueCollection"/> class 
    that is empty, has the default
    initial capacity and uses the specified hash code provider and the
    specified comparer.</para>
		</summary>
		<param name="hashProvider">The <see cref="System.Collections.IHashCodeProvider"/> that will supply the hash codes for all keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>.</param>
		<param name="comparer"><para> The <see cref="System.Collections.IComparer"/> to use to determine whether two keys are equal.</para></param>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The default initial 
    capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code provider 
 is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default 
    comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.IHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.IComparer"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc>
	<doc for="NameValueCollection.NameValueCollection3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameValueCollection"/> class 
    that is empty, has
    the specified initial capacity and uses the default case-insensitive hash code
    provider and the default case-insensitive comparer.</para>
		</summary>
		<param name="capacity">The initial number of entries that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero. </exception>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The default initial 
    capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code provider 
 is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default 
    comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc>
	<doc for="NameValueCollection.NameValueCollection5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameValueCollection"/> class 
    that is empty, has the specified initial
    capacity and uses the specified hash code provider and the
    specified comparer.</para>
		</summary>
		<param name="capacity">The initial number of entries that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. </param>
		<param name="hashProvider">The <see cref="System.Collections.IHashCodeProvider"/> that will supply the hash codes for all keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>.</param>
		<param name="comparer"><para> The <see cref="System.Collections.IComparer"/> to use to determine whether two keys are equal.</para></param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero. </exception>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The default initial 
    capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code provider 
 is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default 
    comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc>
	<doc for="NameValueCollection.NameValueCollection6">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameValueCollection"/> class 
    that is serializable and uses the
    specified <see cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/> and <see cref="System.Runtime.Serialization.StreamingContext" qualify="true"/>.</para>
		</summary>
		<param name="info">A <see cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/> object that contains the information required to serialize the new <see cref="System.Collections.Specialized.NameValueCollection"/> instance.</param>
		<param name="context">A <see cref="System.Runtime.Serialization.StreamingContext" qualify="true"/> object that contains the source and destination of the serialized stream associated with the new <see cref="System.Collections.Specialized.NameValueCollection"/> instance.</param>
		<seealso cref="System.Runtime.Serialization.ISerializable" qualify="true"/>
		<seealso cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext" qualify="true"/>
	</doc>
	<doc for="NameValueCollection.InvalidateCachedArrays">
		<summary>
			<para> Resets the cached arrays of the collection to <see langword="null"/>.</para>
		</summary>
		<remarks>
			<para>The arrays returned by <see cref="System.Collections.Specialized.NameValueCollection.AllKeys"/> are cached for better performance and are automatically refreshed 
    when the collection changes. A derived class can invalidate the
    cached version by calling <see cref="System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays"/>, thereby forcing the
    arrays to be recreated.</para>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameValueCollection.AllKeys"/>
	</doc>
	<doc for="NameValueCollection.Clear">
		<summary>
			<para>Invalidates the cached arrays and removes all entries 
       from the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<seealso cref="System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays"/>
	</doc>
	<doc for="NameValueCollection.Add1">
		<summary>
			<para>Adds an entry with the specified name and value to the 
    <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry to add. The key can be <see langword="null"/>. </para></param>
		<param name="value"><para>The <see cref="System.String"/> value of the entry to add. The value can be <see langword="null"/>. </para></param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<remarks>
			<para>If the specified key already exists in the target <see cref="System.Collections.Specialized.NameValueCollection"/> instance, the specified value is added to 
    the existing comma-separated list of values associated with the same key in the
    target <see cref="System.Collections.Specialized.NameValueCollection"/> instance.</para>
		</remarks>
	</doc>
	<doc for="NameValueCollection.Get">
		<overload>
			<para>Gets the values of a specified entry in the <see cref="System.Collections.Specialized.NameValueCollection"/> combined into one 
    comma-separated list.</para>
		</overload>
		<summary>
			<para> Gets the values associated with the specified key from the <see cref="System.Collections.Specialized.NameValueCollection"/> combined into one comma-separated list.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry that contains the values to get. The key can be <see langword="null"/>. </para></param>
		<returns>
			<para>A <see cref="System.String"/> 
 that contains a comma-separated list of the values associated with the specified
 key from the <see cref="System.Collections.Specialized.NameValueCollection"/>, if found;
 otherwise, <see langword="null"/>.</para>
		</returns>
		<seealso cref="System.Collections.Specialized.NameValueCollection.GetValues"/>
		<seealso cref="System.Collections.Specialized.NameValueCollection.AllKeys"/>
	</doc>
	<doc for="NameValueCollection.GetValues">
		<overload>
			<para>Gets the values of a specified entry in the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</overload>
		<summary>
			<para>Gets the values associated with the specified key from the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry that contains the values to get. The key can be <see langword="null"/>. </para></param>
		<returns>
			<para>A <see cref="System.String"/> array that contains the values associated with the specified key from the <see cref="System.Collections.Specialized.NameValueCollection"/>, if found; 
    otherwise, <see langword="null"/>.</para>
		</returns>
		<seealso cref="System.Collections.Specialized.NameValueCollection.Get"/>
		<seealso cref="System.Collections.Specialized.NameValueCollection.AllKeys"/>
	</doc>
	<doc for="NameValueCollection.Remove">
		<summary>
			<para>Removes the entries with the specified key from the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="name">The <see cref="System.String"/> key of the entry to remove. The key can be <see langword="null"/>.</param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<remarks>
			<para>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.
 If the collection is indexed, the indexes of the elements that are moved are also updated.
 This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hashtable.</para>
		</remarks>
	</doc>
	<doc for="NameValueCollection.this">
		<overload>
			<para>Gets or sets the specified entry of the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</overload>
		<summary>
			<para> Gets or sets the entry with the specified key in the 
    <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry to locate. The key can be <see langword="null"/>. </para></param>
		<value>
			<para>A <see cref="System.String"/> that contains the comma-separated list of values associated with the specified 
    key.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<exception cref="System.NotSupportedException">The collection is read-only and the operation attempts to modify the collection.</exception>
		<remarks>
			<para>This property provides the ability to access a specific element in the 
       collection by using the following syntax: <c>myCollection[name]</c>.</para>
			<para>If the specified key already exists in the collection, setting this property 
       overwrites the existing list of values with the specified value. To append the new value to
       the existing list of values, use the <see cref="System.Collections.Specialized.NameValueCollection.Add"/> method.</para>
			<para>If the specified key does not exist in the collection, setting this property 
       creates a new entry using the specified key and the specified value.</para>
		</remarks>
	</doc>
	<doc for="NameValueCollection.Get1">
		<summary>
			<para> 
       Gets the values at the specified index of the <see cref="System.Collections.Specialized.NameValueCollection"/> combined into one
       comma-separated list.</para>
		</summary>
		<param name="index"><para>The zero-based index of the entry that contains the values to get from the collection.</para></param>
		<returns>
			<para>A <see cref="System.String"/> that contains a comma-separated list of the values at the 
    specified index of the <see cref="System.Collections.Specialized.NameValueCollection"/>, if found;
    otherwise, <see langword="null"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<seealso cref="System.Collections.Specialized.NameValueCollection.GetValues"/>
		<seealso cref="System.Collections.Specialized.NameValueCollection.AllKeys"/>
	</doc>
	<doc for="NameValueCollection.GetValues1">
		<summary>
			<para> Gets the values at the specified index of the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="index"><para>The zero-based index of the entry that contains the values to get from the collection.</para></param>
		<returns>
			<para>A <see cref="System.String"/> array that contains the values at the specified index 
    of the <see cref="System.Collections.Specialized.NameValueCollection"/>, if found;
    otherwise, <see langword="null"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<seealso cref="System.Collections.Specialized.NameValueCollection.Get"/>
		<seealso cref="System.Collections.Specialized.NameValueCollection.AllKeys"/>
	</doc>
	<doc for="NameValueCollection.GetKey">
		<summary>
			<para>Gets the key at the specified index of the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="index"><para>The zero-based index of the key to get from the collection.</para></param>
		<returns>
			<para>A <see cref="System.String"/> that contains the key at the 
    specified index of the <see cref="System.Collections.Specialized.NameValueCollection"/>, if found;
    otherwise, <see langword="null"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<seealso cref="System.Collections.Specialized.NameValueCollection.AllKeys"/>
	</doc>
	<doc for="NameValueCollection.this1">
		<summary>
			<para>Gets the entry at the specified index of the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
		<value>
			<para>A <see cref="System.String"/> that contains the comma-separated list of values at the 
    specified index of the collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<remarks>
			<para>This property provides the ability to access a specific element in the 
       collection by using the following syntax: <c>myCollection[index]</c>.</para>
			<para>This property cannot be set. To set the value at a specified index, 
       use <c>Item[GetKey(index)]</c>.</para>
		</remarks>
	</doc>
	<doc for="NameValueCollection.HasKeys">
		<summary>
			<para>Gets a value indicating whether the <see cref="System.Collections.Specialized.NameValueCollection"/> contains keys that are not <see langword="null"/>.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Collections.Specialized.NameValueCollection"/> contains 
   keys that are not <see langword="null"/>; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="NameValueCollection.CopyTo">
		<summary>
			<para>Copies the entire <see cref="System.Collections.Specialized.NameValueCollection"/> to a compatible one-dimensional <see cref="System.Array"/>, starting at the specified index of the target array.</para>
		</summary>
		<param name="dest">The one-dimensional <see cref="System.Array"/> that is the destination of the elements copied from <see cref="System.Collections.Specialized.NameValueCollection"/>. The <see cref="System.Array"/> must have zero-based indexing. </param>
		<param name="index">The zero-based index in <paramref name="dest"/> at which copying begins. </param>
		<exception cref="System.ArgumentNullException"><paramref name="dest"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is less than zero.</exception>
		<exception cref="System.ArgumentException"><para><paramref name="dest"/> is multidimensional.</para>
			<para>-or-</para>
			<para><paramref name="index"/> is equal to or greater than the length of <paramref name="dest"/>.</para>
			<para>-or-</para>
			<para>The number of elements in the source <see cref="System.Collections.Specialized.NameValueCollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="dest"/>.</para></exception>
		<exception cref="System.InvalidCastException">The type of the source <see cref="System.Collections.Specialized.NameValueCollection"/> cannot be cast automatically to the type of the destination <paramref name="dest"/>.</exception>
		<remarks>
			<para>The specified array must be of a compatible type. </para>
			<para>This method uses <see cref="System.Array.Copy" qualify="true"/> to copy the elements.</para>
		</remarks>
	</doc><doc for="NameValueCollection.NameValueCollection1">
		<summary>
			<para>Copies the entries from the specified <see cref="System.Collections.Specialized.NameValueCollection"/> to a new <see cref="System.Collections.Specialized.NameValueCollection"/> 
with the same initial capacity as the
number of entries copied and using the same hash code provider and the
same comparer as the source collection.</para>
		</summary>
		<param name="col">The <see cref="System.Collections.Specialized.NameValueCollection"/> to copy to the new <see cref="System.Collections.Specialized.NameValueCollection"/> instance.</param>
		<exception cref="System.ArgumentNullException"><paramref name="col"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The default initial
 capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code provider
is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default
 comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
			<para>The elements of the new <see cref="System.Collections.Specialized.NameValueCollection"/> are sorted in the same
order as the source <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc><doc for="NameValueCollection.AllKeys">
		<summary>
			<para>Gets all the keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. </para>
		</summary>
		<value>
			<para>A <see cref="System.String"/> array that contains all the keys of the <see cref="System.Collections.Specialized.NameValueCollection"/> 
.</para>
		</value>
		<remarks>
			<para>If the collection is empty, this method returns an empty <see cref="System.String"/> array, not <see langword="null"/>.</para>
			<para>The arrays returned by <see cref="System.Collections.Specialized.NameValueCollection.AllKeys"/> are cached for better
performance and are automatically refreshed when the collection changes. A
derived class can invalidate the cached version by calling <see cref="System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays"/>, thereby forcing the
arrays to be recreated.</para>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameValueCollection.GetKey"/>
		<seealso cref="System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays"/>
	</doc><doc for="NameValueCollection">
		<summary>
			<para>Represents a sorted collection of associated <see cref="System.String"/> keys and <see cref="System.String"/>
values that can be accessed either with the key or with the index.</para>
		</summary>
		<threadsafe>
			<para>Public static (<see langword="Shared"/> in Visual Basic) members of this type
   are safe for multithreaded operations. Instance members are not guaranteed to be
   thread-safe.</para>
			<para>This implementation does not provide a synchronized (thread-safe) wrapper for
   a <see cref="System.Collections.Specialized.NameValueCollection"/>, but derived classes can create
   their own synchronized versions of the <see cref="System.Collections.Specialized.NameValueCollection"/>
   using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property
   of the <see cref="System.Collections.Specialized.NameObjectCollectionBase" /> class.</para>
			<para>Enumerating through a collection is intrinsically not a thread-safe
   procedure. Even when a collection is synchronized, other threads could still
   modify the collection, which causes the enumerator to throw an exception. To
   guarantee thread safety during enumeration, you can either lock the collection
   during the entire enumeration or catch the exceptions resulting from changes
   made by other threads.</para>
		</threadsafe>
		<remarks>
			<para>This collection is based on the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> class. However, unlike the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>, this class stores multiple string values under a single key. </para>
			<para>This class can be used for headers, query strings and form data. </para>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The default initial
capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code provider
is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default
   comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameObjectCollectionBase"/>
	</doc>
	<doc for="NameValueCollection.NameValueCollection4">
		<summary>
			<para>Copies the entries from the specified <see cref="System.Collections.Specialized.NameValueCollection"/> to a new <see cref="System.Collections.Specialized.NameValueCollection"/> with the specified initial capacity or the
   same initial capacity as the number of entries copied, whichever is greater, and
   using the default case-insensitive hash code provider and the default
   case-insensitive comparer.</para>
		</summary>
		<param name="capacity">The initial number of entries that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. </param>
		<param name="col">The <see cref="System.Collections.Specialized.NameValueCollection"/> to copy to the new <see cref="System.Collections.Specialized.NameValueCollection"/> instance. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="col"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that the <see cref="System.Collections.Specialized.NameValueCollection"/> can contain. The default initial
   capacity is zero. The capacity is automatically increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameValueCollection"/>. The default hash code provider
is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default
   comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc>
	<doc for="NameValueCollection.Set">
		<summary>
			<para>Sets the value of an entry in the <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry to add the new value to. The key can be <see langword="null"/>. </para></param>
		<param name="value"><para>The <see cref="System.Object"/> that represents the new value to add to the specified entry. The value can be <see langword="null"/>. </para></param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<remarks>
			<para>If the specified key already exists in the collection, this
      method overwrites the existing list of values with the specified value.
      To append the new value to the existing list of values, use the <see cref="System.Collections.Specialized.NameValueCollection.Add"/> method.</para>
			<para>If the specified key does not exist in the collection,
      this method creates a new entry using the specified key and the specified value.</para>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameValueCollection.Add"/>
	</doc>
	<doc for="NameValueCollection.Add">
		<overload>
			<para>Adds entries to the current <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</overload>
		<summary>
			<para>Copies the entries in the specified <see cref="System.Collections.Specialized.NameValueCollection"/> to the current <see cref="System.Collections.Specialized.NameValueCollection"/>.</para>
		</summary>
		<param name="c">The <see cref="System.Collections.Specialized.NameValueCollection"/> to copy to the current <see cref="System.Collections.Specialized.NameValueCollection"/>. </param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="c"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>If a key in <paramref name="c"/> already exists in the target <see cref="System.Collections.Specialized.NameValueCollection"/> instance, the associated value in
<paramref name="c"/> is added to the existing comma-separated list of values
   associated with the same key in the target <see cref="System.Collections.Specialized.NameValueCollection"/> instance.</para>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameValueCollection.Set"/>
	</doc>
</docs>
