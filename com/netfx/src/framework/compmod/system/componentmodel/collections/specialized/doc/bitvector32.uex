<docs>
    <doc for="BitVector32">
        <summary>
            <para>Provides a simple structure that stores Boolean values and small integers in 32 bits of memory.</para>
        </summary>
        <remarks>
            <para><see cref="System.Collections.Specialized.BitVector32" /> is more efficient than <see cref="System.Collections.BitArray" /> for
   Boolean values and small integers that are used internally. A
<see cref="System.Collections.BitArray" /> can grow indefinitely as needed, but
   it has the memory and performance overhead that a class instance requires. In
   contrast, a <see cref="System.Collections.Specialized.BitVector32" /> uses only 32 bits.</para>
            <para>A <see cref="System.Collections.Specialized.BitVector32" /> structure can be set up
to contain either sections for small integers or bit flags for Booleans, but not both.
A <see cref="System.Collections.Specialized.BitVector32.Section" /> is a window into the <see cref="System.Collections.Specialized.BitVector32" />
and is composed of the smallest number of consecutive bits that can contain the maximum value
specified in <see cref="System.Collections.Specialized.BitVector32.CreateSection" />.
For example, a section with a maximum value of 1 is composed of only one bit,
whereas a section with a maximum value of 5 is composed of three bits.
You can create a <see cref="System.Collections.Specialized.BitVector32.Section" /> with a maximum value of 1 to serve as a Boolean,
thereby allowing you to store integers and Booleans in the same <see cref="System.Collections.Specialized.BitVector32" />.</para>
            <para>Some members can be used for a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections,
 while other members can be used for one that is set up as bit flags.
 For example, the <see cref="System.Collections.Specialized.BitVector32.this" />[Section] property
 is the indexer for a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections,
 and the <see cref="System.Collections.Specialized.BitVector32.this" />[int] property 
is the indexer for a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as bit flags.
<see cref="System.Collections.Specialized.BitVector32.CreateMask" /> creates a series of masks
that can be used to access individual bits in a <see cref="System.Collections.Specialized.BitVector32" />
that is set up as bit flags.</para>
            <para>Using a mask on a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections might
cause unexpected results.</para>
        </remarks>
        <example>
            <para>The following example shows the standard usage of a bit vector.</para>
            <codelink SampleID="Classic BitVector32 Example" SnippetID="1" />
        </example>
        <seealso cref="System.Collections.BitArray" />
    </doc><doc for="BitVector32.BitVector32">
        <overload>
            <para>Initializes a new instance of the <see cref="System.Collections.Specialized.BitVector32" /> structure.</para>
        </overload>
        <summary>
            <para>Initializes a new instance of the <see cref="System.Collections.Specialized.BitVector32" /> structure containing the data represented in an integer.</para>
        </summary>
        <param name="data">An integer representing the data of the new <see cref="System.Collections.Specialized.BitVector32" />.</param>
    </doc><doc for="BitVector32.BitVector321">
        <summary>
            <para>Initializes a new instance of the <see cref="System.Collections.Specialized.BitVector32" /> structure 
 containing the data represented in an existing <see cref="System.Collections.Specialized.BitVector32" /> structure.</para>
        </summary>
        <param name="value">A <see cref="System.Collections.Specialized.BitVector32" /> structure that contains the data to copy.</param>
    </doc><doc for="BitVector32.this">
        <overload>
            <para> Gets or sets the value of the specified section or bit flag.</para>
        </overload>
        <summary>
            <para>Gets or sets the state of the bit flag indicated by the specified mask.</para>
        </summary>
        <param name="bit">A mask that indicates the bit to get or set.</param>
        <value>
            <para><see langword="true" /> if the specified bit flag is on (1);
   otherwise, <see langword="false" />.</para>
        </value>
        <remarks>
            <para>The <see cref="System.Collections.Specialized.BitVector32.this" />[Section] property
   is the indexer for a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections, and
   the <see cref="System.Collections.Specialized.BitVector32.this" />[int] property
   is the indexer for a <see cref="System.Collections.Specialized.BitVector32" /> that
   is set up as bit flags.</para>
            <para>Using this property on a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections might
cause unexpected results.</para>
        </remarks>
        <seealso cref="System.Collections.Specialized.BitVector32.CreateMask" />
    </doc><doc for="BitVector32.this1">
        <summary>
            <para>Gets or sets the value stored in the specified <see cref="System.Collections.Specialized.BitVector32.Section" />.</para>
        </summary>
        <param name="section">A <see cref="System.Collections.Specialized.BitVector32.Section" /> that contains the value to get or set.</param>
        <value>
            <para>The value stored in the specified <see cref="System.Collections.Specialized.BitVector32.Section" />.</para>
        </value>
        <remarks>
            <para>The<see cref="System.Collections.Specialized.BitVector32.this" />[Section] property
 is the indexer for a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections,
 and the <see cref="System.Collections.Specialized.BitVector32.this" />[int] property
   is the indexer for a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</para>
            <para>A <see cref="System.Collections.Specialized.BitVector32.Section" /> is a window into the <see cref="System.Collections.Specialized.BitVector32" />
and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <see cref="System.Collections.Specialized.BitVector32.CreateSection" />.
For example, a section with a maximum value of 1 is composed of only one bit,
whereas a section with a maximum value of 5 is composed of three bits.
You can create a <see cref="System.Collections.Specialized.BitVector32.Section" /> with a maximum value of 1 to serve as a Boolean,
thereby allowing you to store integers and Booleans in the same <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </remarks>
        <seealso cref="System.Collections.Specialized.BitVector32.CreateSection" />
        <seealso cref="System.Collections.Specialized.BitVector32.Section" />
    </doc><doc for="BitVector32.Data">
        <summary>
            <para>Gets the value of the <see cref="System.Collections.Specialized.BitVector32" /> as an integer.</para>
        </summary>
        <value>
            <para>The value of the <see cref="System.Collections.Specialized.BitVector32" /> as an integer.</para>
        </value>
        <remarks>
            <para>To access the value of the individual sections or bit flags, use the <see cref="System.Collections.Specialized.BitVector32.this" /> property.</para>
        </remarks>
        <seealso cref="System.Collections.Specialized.BitVector32.this" />
    </doc><doc for="BitVector32.CreateMask">
        <overload>
            <para> Creates a series of masks that can be used to retrieve individual bits in a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</para>
        </overload>
        <summary>
            <para> Creates the first mask in a series of masks that can be used to retrieve individual bits in a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</para>
        </summary>
        <returns>
            <para>A mask that isolates the first bit flag in the <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </returns>
        <remarks>
            <para> Use <c>CreateMask()</c> to create the first mask in a series and <c>CreateMask(int)</c> for all subsequent masks.</para>
            <para>Multiple masks can be created to refer to the same bit flag.</para>
            <para>The resulting mask isolates only one bit flag in the <see cref="System.Collections.Specialized.BitVector32" />. You 
   can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <see cref="System.Collections.Specialized.BitVector32" />.</para>
            <para>Using a mask on a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections might
cause unexpected results.</para>
        </remarks>
    </doc><doc for="BitVector32.CreateMask1">
        <summary>
            <para>Creates an additional mask following the specified mask in a series of masks that can be used to retrieve individual bits in a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</para>
        </summary>
        <param name="previous">The mask that indicates the previous bit flag.</param>
        <returns>
            <para>A mask that isolates the bit flag following the one that <paramref name="previous" /> points to in <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </returns>
        <exception cref="System.InvalidOperationException"><paramref name="previous" /> indicates the last bit flag in the <see cref="System.Collections.Specialized.BitVector32" />.</exception>
        <remarks>
            <para>Use <c>CreateMask()</c> to create the first mask in a series and <c>CreateMask(int)</c> for all subsequent 
   masks.</para>
            <para>Multiple masks can be created to refer to the same bit flag. </para>
            <para>The resulting mask isolates only one bit flag in the <see cref="System.Collections.Specialized.BitVector32" />. You 
can combine masks using the bitwise OR operation to create a mask that isolates multiple bit flags in the <see cref="System.Collections.Specialized.BitVector32" />.</para>
            <para>Using a mask on a <see cref="System.Collections.Specialized.BitVector32" /> that is set up as sections might
cause unexpected results.</para>
        </remarks>
    </doc><doc for="BitVector32.CreateSection">
        <overload>
            <para>Creates a series of sections that contain small integers.</para>
        </overload>
        <summary>
            <para>Creates the first <see cref="System.Collections.Specialized.BitVector32.Section" /> in a series of sections that contain small integers.</para>
        </summary>
        <param name="maxValue">A 16-bit signed integer that specifies the maximum value for the new <see cref="System.Collections.Specialized.BitVector32.Section" />.</param>
        <returns>
            <para>A <see cref="System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</para>
        </returns>
        <exception cref="System.ArgumentException"><paramref name="maxValue" /> is less than 1.</exception>
        <remarks>
            <para>A <see cref="System.Collections.Specialized.BitVector32.Section" /> is a window into the <see cref="System.Collections.Specialized.BitVector32" />
and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <see cref="System.Collections.Specialized.BitVector32.CreateSection" />.
For example, a section with a maximum value of 1 is composed of only one bit,
whereas a section with a maximum value of 5 is composed of three bits.
You can create a <see cref="System.Collections.Specialized.BitVector32.Section" /> with a maximum value of 1 to serve as a Boolean,
thereby allowing you to store integers and Booleans in the same <see cref="System.Collections.Specialized.BitVector32" />.</para>
            <para>If sections already exist in the <see cref="System.Collections.Specialized.BitVector32" />, those sections are still accessible;
however, overlapping sections might cause unexpected results. </para>
        </remarks>
    </doc><doc for="BitVector32.CreateSection1">
        <summary>
            <para>Creates a new <see cref="System.Collections.Specialized.BitVector32.Section" /> following the specified <see cref="System.Collections.Specialized.BitVector32.Section" />
in a series of sections that contain small integers.</para>
        </summary>
        <param name="maxValue">A 16-bit signed integer that specifies the maximum value for the new <see cref="System.Collections.Specialized.BitVector32.Section" />.</param>
        <param name="previous">The previous <see cref="System.Collections.Specialized.BitVector32.Section" /> in the <see cref="System.Collections.Specialized.BitVector32" />.</param>
        <returns>
            <para>A <see cref="System.Collections.Specialized.BitVector32.Section" /> that can hold a number from zero to <paramref name="maxValue" />.</para>
        </returns>
        <exception cref="System.ArgumentException"><paramref name="maxValue" /> is less than 1.</exception>
        <exception cref="System.InvalidOperationException">
            <para><paramref name="previous" /> includes the final bit in the <see cref="System.Collections.Specialized.BitVector32" />.</para><para>-or-</para>
            <para><paramref name="maxValue" /> is greater than the highest value that can be represented by the number of bits after <paramref name="previous" />.</para></exception>
<remarks>
            <para>A <see cref="System.Collections.Specialized.BitVector32.Section" /> is a window into the <see cref="System.Collections.Specialized.BitVector32" />
and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <see cref="System.Collections.Specialized.BitVector32.CreateSection" />.
For example, a section with a maximum value of 1 is composed of only one bit,
whereas a section with a maximum value of 5 is composed of three bits.
You can create a <see cref="System.Collections.Specialized.BitVector32.Section" /> with a maximum value of 1 to serve as a Boolean,
thereby allowing you to store integers and Booleans in the same <see cref="System.Collections.Specialized.BitVector32" />.</para>
            <para>If sections already exist after <paramref name="previous" /> in the <see cref="System.Collections.Specialized.BitVector32" />,
those sections are still accessible; however, overlapping sections might cause unexpected results. </para>
        </remarks>
    </doc><doc for="BitVector32.Equals">
        <summary>
            <para>Determines whether the specified object is equal to the <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </summary>
        <param name="o">The object to compare with the current <see cref="System.Collections.Specialized.BitVector32" />.</param>
        <returns>
            <para><see langword="true" /> if the 
   specified object is equal to the <see cref="System.Collections.Specialized.BitVector32" />;
   otherwise, <see langword="false" />.</para>
        </returns>
        <remarks>
            <para>The object <paramref name="o" /> is considered equal to the <see cref="System.Collections.Specialized.BitVector32" />
if the type of <paramref name="o" /> is compatible with the <see cref="System.Collections.Specialized.BitVector32" /> type
and if the value of <paramref name="o" /> is equal to the value of <see cref="System.Collections.Specialized.BitVector32.Data" />.</para>
        </remarks>
    </doc><doc for="BitVector32.GetHashCode">
        <summary>
            <para>Serves as a hash function for the <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </summary>
        <returns>
            <para>A hash code for the <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </returns>
        <remarks>
            <para>The hash code of a <see cref="System.Collections.Specialized.BitVector32" /> is based on the value of <see cref="System.Collections.Specialized.BitVector32.Data" />.
 Two instances of <see cref="System.Collections.Specialized.BitVector32" /> with the same value for <see cref="System.Collections.Specialized.BitVector32.Data" /> will also generate the same hash code.</para>
        </remarks>
    </doc><doc for="BitVector32.ToString">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="BitVector32.ToString1">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="BitVector32.Section">
        <summary>
            <para> Represents an section of the vector that can contain a integer number.</para>
        </summary>
        <remarks>
            <para> Use <see cref="System.Collections.Specialized.BitVector32.CreateSection" /> to define a new section.
 A <see cref="System.Collections.Specialized.BitVector32.Section" /> is a window into the <see cref="System.Collections.Specialized.BitVector32" />
 and is composed of the smallest number of consecutive bits that can contain the maximum value specified in <see cref="System.Collections.Specialized.BitVector32.CreateSection" />.
 For example, a section with a maximum value of 1 is composed of only one bit,
 whereas a section with a maximum value of 5 is composed of three bits.
 You can create a <see cref="System.Collections.Specialized.BitVector32.Section" /> with a maximum value of 1 to serve as a Boolean,
 thereby allowing you to store integers and Booleans in the same <see cref="System.Collections.Specialized.BitVector32" />.</para>
        </remarks>
        <seealso cref="System.Collections.Specialized.BitVector32.CreateSection" qualify="true" />
    </doc><doc for="BitVector32.Section.Mask">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="BitVector32.Section.Offset">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="Section.Equals">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="Section.GetHashCode">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="BitVector32.Section.ToString">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc><doc for="BitVector32.Section.ToString1">
        <summary>
            <para>[To be supplied.]</para>
        </summary>
    </doc>
</docs>
