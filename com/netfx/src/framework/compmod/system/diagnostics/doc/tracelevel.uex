<docs>
	<doc for="TraceLevel.Off">
		<summary>
			<para>
       Output no tracing and debugging
       messages.
    </para>
		</summary>
	</doc>
	<doc for="TraceLevel.Error">
		<summary>
			<para>
       Output error-handling messages.
    </para>
		</summary>
	</doc>
	<doc for="TraceLevel.Warning">
		<summary>
			<para>
       Output warnings and error-handling
       messages.
    </para>
		</summary>
	</doc>
	<doc for="TraceLevel.Info">
		<summary>
			<para>
       Output informational messages, warnings, and error-handling messages.
    </para>
		</summary>
	</doc>
	<doc for="TraceLevel.Verbose">
		<summary>
    Output all debugging and tracing messages.
 </summary>
	</doc>
	<doc for="TraceLevel">
		<summary>
			<para>Specifies what messages to output for the <see cref="System.Diagnostics.Debug"/>, <see cref="System.Diagnostics.Trace"/> and <see cref="System.Diagnostics.TraceSwitch"/>
classes.</para>
		</summary>
		<remarks>
			<para>This enumeration is used by the <see cref="System.Diagnostics.TraceSwitch"/>
class.</para>
			<para>You must enable tracing or debugging to use a switch. The following syntax is
   compiler specific. If you use compilers other than C or Visual Basic, refer to
   the documentation for your compiler.</para>
			<list type="bullet"><item>
					<term>
      To enable debugging in C#, add the <see langword="/d:DEBUG"/> flag to the
      compiler command line when you compile your code, or you can add
   <see langword="#define DEBUG"/> to the top of your file. In Visual Basic, add 
      the <see langword="/d:DEBUG=True"/> flag to the compiler command line.</term>
				</item>
				<item>
					<term>
      To enable tracing using in C#, add the <see langword="/d:TRACE"/> flag to
      the compiler command line when you compile your code, or add <see langword="#define TRACE"/> to the top of your file. In Visual Basic, add the
   <see langword="/d:TRACE=True"/> flag to the compiler command line.</term>
				</item>
			</list>
			<para>For more information on instrumenting your application,
   see <see cref="System.Diagnostics.Debug"/> and <see cref="System.Diagnostics.Trace"/>
   .</para>
			<para>When you set the trace level using a configuration file, you specify an 
   integer value that corresponds to an enumeration member, rather than the
   enumeration member itself, as the following example demonstrates.</para>
			<code>
&lt;configuration&gt;
    &lt;system.diagnostics&gt;
       &lt;switches&gt;
          &lt;add name="mySwitch" value="4" /&gt;
       &lt;/switches&gt;
    &lt;/system.diagnostics&gt;
&lt;/configuration&gt;
</code>
			<para>The following table shows the relationship between the <see cref="System.Diagnostics.TraceLevel"/> 
enumeration members and their corresponding configuration file entries. </para>
			<para><list type="table">
					<listheader>
						<term>Trace Level</term>
						<description>Configuration File Value</description>
					</listheader>
					<item>
						<term>Off</term>
						<description>0</description>
					</item>
					<item>
						<term>Error</term>
						<description>1</description>
					</item>
					<item>
						<term>Warning</term>
						<description>2</description>
					</item>
					<item>
						<term>Info</term>
						<description>3</description>
					</item>
					<item>
						<term>Verbose</term>
						<description>4</description>
					</item>
				</list>
			</para>
		</remarks>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
		<seealso cref="System.Diagnostics.TraceSwitch"/>
	</doc>
</docs>
