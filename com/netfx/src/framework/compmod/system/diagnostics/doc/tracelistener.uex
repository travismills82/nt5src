<docs>
	<doc for="TraceListener.TraceListener">
		<overload>
			<para>
       Initializes a new instance of the <see cref="System.Diagnostics.TraceListener"/> class.
    </para>
		</overload>
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Diagnostics.TraceListener"/> class.
    </para>
		</summary>
		<remarks>
			<para>
       The following table shows initial property values for an instance of <see cref="System.Diagnostics.TraceListener"/>.
    </para>
			<list type="table">
				<listheader>
					<term>
             Property
          </term>
					<description>
             Default Value
          </description>
				</listheader>
				<item>
					<term>
             Name
          </term>
					<description>
             The empty string ("").
          </description>
				</item>
				<item>
					<term>
             Indent
          </term>
					<description>
             Zero.
          </description>
				</item>
				<item>
					<term>
             IndentSize
          </term>
					<description>
             Four spaces.
          </description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.TraceListener1">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Diagnostics.TraceListener"/> class using the specified name as the
       listener.
    </para>
		</summary>
		<param name="name">
    The name of the <see cref="System.Diagnostics.TraceListener"/>.
 </param>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.Flush">
		<summary>
			<para>
       When overridden in a derived class, flushes the output buffer.
    </para>
		</summary>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.NeedIndent">
		<summary>
			<para>
       Gets or sets a value indicating whether to indent the output.
    </para>
		</summary>
		<value>
			<para>
				<see langword="true "/>if the output should be indented; otherwise, <see langword="false"/>.
    </para>
		</value>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.Fail">
		<overload>
			<para>
       Emits error messages to the listener you create when you
       implement the <see cref="System.Diagnostics.TraceListener"/> class.
    </para>
		</overload>
		<summary>
			<para>
       Emits an error message to the listener you create when
       you implement the <see cref="System.Diagnostics.TraceListener"/> class.
    </para>
		</summary>
		<param name="message">
    A message to emit.
 </param>
		<remarks>
			<para>
       The default behavior is to display the specified message in a message box when the application
       is running in a user-interface mode, and to the <see cref="System.Diagnostics.TraceListener"/> instances in a <see cref="System.Diagnostics.TraceListenerCollection"/> collection. By default, the <see cref="System.Diagnostics.TraceListenerCollection"/> collection has an instance of
       a <see cref="System.Diagnostics.DefaultTraceListener"/>. You can customize this behavior by adding a <see cref="System.Diagnostics.TraceListener"/> to or removing one from the collection.
    </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.Fail1">
		<summary>
			<para>
       Emits an error message, and a detailed error message to
       the listener you create when you implement the <see cref="System.Diagnostics.TraceListener"/> class.
    </para>
		</summary>
		<param name="message">
    A message to emit.
 </param>
		<param name="detailMessage">
    A detailed message to emit.
 </param>
		<remarks>
			<para>
       The default behavior is to display the message and detailed message
       in a message box when the application is running in a user-interface mode,
       and to the <see cref="System.Diagnostics.TraceListener"/> instances in a <see cref="System.Diagnostics.TraceListenerCollection"/> collection. By default, the <see cref="System.Diagnostics.TraceListenerCollection"/> collection has an instance of
       a <see cref="System.Diagnostics.DefaultTraceListener"/>. You can customize this behavior by adding a <see cref="System.Diagnostics.TraceListener"/> to or removing one from the collection.
    </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.Write2">
		<summary>
			<para>
       Writes a category name and a message to the listener you create when
       you implement the <see cref="System.Diagnostics.TraceListener"/>
       class.
    </para>
		</summary>
		<param name="message">
    A message to write.
 </param>
		<param name="category">
    A category name used to organize the output.
 </param>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.WriteIndent">
		<summary>
			<para>
       Writes the indent to the listener you create when you
       implement this
       class, and resets the <see cref="TraceListener.NeedIndent"/> property to <see langword="false"/>.
    </para>
		</summary>
		<remarks>
			<para>
       Writes the indent and resets <see cref="System.Diagnostics.TraceListener.NeedIndent"/> to <see langword="false"/>. Call this method
       if <see cref="System.Diagnostics.TraceListener.NeedIndent"/> is <see langword="true"/>, when you are overloading
    <see cref="System.Diagnostics.TraceListener.Write"/> and <see cref="System.Diagnostics.TraceListener.WriteLine"/>.
       By default, this method uses blank spaces for indentation.
    </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.Write1">
		<summary>
			<para>Writes the value of the object's <see cref="System.Object.ToString"/> method to the listener you create when you implement the <see cref="System.Diagnostics.TraceListener"/>
class.</para>
		</summary>
		<param name="o">An <see cref="System.Object"/> whose fully qualified class name you want to write.</param>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.Write3">
		<summary>
			<para>Writes a category name and the value of the object's 
   <see cref="System.Object.ToString"/> 
   method to the listener
   you create when you implement the <see cref="System.Diagnostics.TraceListener"/>
   class.</para>
		</summary>
		<param name="o">An <see cref="System.Object"/> whose fully qualified class name you want to write.</param>
		<param name="category">A category name used to organize the output.</param>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.WriteLine1">
		<summary>
			<para>Writes the value of the object's <see cref="System.Object.ToString"/> method to the listener you create when you implement the <see cref="System.Diagnostics.TraceListener"/>
class, followed by a line
terminator.</para>
		</summary>
		<param name="o">An <see cref="System.Object"/> whose fully qualified class name you want to write.</param>
		<remarks>
			<para> The typical line terminator you might implement is a carriage return followed by a line 
      feed (\r\n).</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.WriteLine2">
		<summary>
			<para> Writes a category name and a message to the listener you create when
      you implement the <see cref="System.Diagnostics.TraceListener"/>
      class, followed by a line terminator.
      </para>
		</summary>
		<param name="message">A message to write. </param>
		<param name="category">A category name used to organize the output. </param>
		<remarks>
			<para> The typical line terminator you might implement is a carriage return followed by a line 
      feed (\r\n).</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.WriteLine3">
		<summary>
			<para>Writes a category name and the value of the object's 
   <see cref="System.Object.ToString"/> 
   method to the listener
   you create when you implement the <see cref="System.Diagnostics.TraceListener"/>
   class, followed by a line terminator.</para>
		</summary>
		<param name="o">An <see cref="System.Object"/> whose fully qualified class name you want to write.</param>
		<param name="category">A category name used to organize the output.</param>
		<remarks>
			<para> The typical line terminator you might implement is a carriage return followed by a line 
      feed (\r\n).</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.WriteLine">
		<overload>
			<para> Writes a message, category name, or the value of an 
      object's <see cref="System.Object.ToString"/> method to
      the listener you create when you implement the <see cref="System.Diagnostics.TraceListener"/>
      class, followed by a line terminator.
      </para>
		</overload>
		<summary>
			<para> When
      overridden in a derived class, writes a message to the listener you create in the derived class,
      followed by a line terminator.
      </para>
		</summary>
		<param name="message">A message to write. </param>
		<remarks>
			<para> The typical line terminator you might implement is a carriage return followed by a line 
      feed (\r\n).</para>
			<note type="inheritinfo">
      When inheriting from this class, you must implement this method. To support an indentation,
      call <see cref="System.Diagnostics.TraceListener.WriteIndent"/> if <see cref="TraceListener.NeedIndent"/> is
   <see langword="true"/>. To indent the following line, you must reset
   <see cref="System.Diagnostics.TraceListener.NeedIndent"/> to <see langword="true"/>.
      
   </note>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.Write">
		<overload>
			<para> Writes a message, category name, or the value of an 
      object's <see cref="System.Object.ToString"/> method to the listener you create when
      you implement the <see cref="System.Diagnostics.TraceListener"/>
      class.
      </para>
		</overload>
		<summary>
			<para> When overridden in a derived class, writes the specified
      message to the listener you create in the derived class.
      </para>
		</summary>
		<param name="message">A message to write. </param>
		<remarks>
			<note type="inheritinfo">
      When inheriting from this class, you must implement this method. To support an indentation, you should
      call <see cref="TraceListener.WriteIndent"/> if <see cref="TraceListener.NeedIndent"/> is <see langword="true"/>. If you need to indent the following line,
      you must reset <see cref="System.Diagnostics.TraceListener.NeedIndent"/> to <see langword="true"/>.
      
   </note>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.IndentLevel">
		<summary>
			<para> Gets or sets the indent level.
      </para>
		</summary>
		<value>
			<para> The indent level. The default is zero.
      </para>
		</value>
		<remarks>
			<para> This property is stored on per-thread/per-request basis.
      </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.IndentSize">
		<summary>
			<para> Gets or sets the number of spaces in an indent.
      </para>
		</summary>
		<value>
			<para> The number of spaces in an indent. The default is four spaces.
      </para>
		</value>
		<remarks>
			<para> The property is stored on per-thread/per-request basis.
      </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.Name">
		<summary>
			<para> Gets or sets a name for this <see cref="System.Diagnostics.TraceListener"/>.
   </para>
		</summary>
		<value>
			<para> A name for this <see cref="System.Diagnostics.TraceListener"/> . The default is an empty string
   ("").
   </para>
		</value>
		<remarks>
			<para> The name can be used to organize and access listeners in a <see cref="System.Diagnostics.TraceListenerCollection"/>
collection.</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.Close">
		<summary>
			<para> When overridden in a derived class, closes the
      output stream so it no longer receives tracing or debugging output.
      </para>
		</summary>
		<remarks>
			<para> Use this method when the output is going to a file, such
      as to the <see cref="System.Diagnostics.TextWriterTraceListener"/>.
      After a call to this method, you must reinitialize the object.
      </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc><doc for="TraceListener.Dispose">
		<overload>
			<para>Releases the resources used by the <see cref="System.Diagnostics.TraceListener"/>.</para>
		</overload>
		<summary>
			<para> Releases all resources used by the
   <see cref="System.Diagnostics.TraceListener"/> .</para>
		</summary>
		<remarks>
			<para>Calling <see cref="System.Diagnostics.TraceListener.Dispose"/> allows the resources
   used by the <see cref="System.Diagnostics.TraceListener"/>. to be reallocated for other purposes. For more
   information about <see cref="System.Diagnostics.TraceListener.Dispose"/>, see
<see topic="cpconCleaningUpUnmanagedResources"/> .</para>
		</remarks>
		<seealso topic="cpconCleaningUpUnmanagedResources"/>
	</doc><doc for="TraceListener">
		<summary>
			<para>Provides the <see langword="abstract "/>base class for the listeners who
   monitor trace and debug output.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded operations.</para>
		</threadsafe>
		<remarks>
			<para>For examples of how to implement a <see cref="System.Diagnostics.TraceListener"/>,
   see the <see cref="System.Diagnostics.DefaultTraceListener"/>, <see cref="System.Diagnostics.TextWriterTraceListener"/>
   and the <see cref="T:System.Diagnostics.EventLogTraceListener"/> classes.</para>
			<para>You must enable tracing or debugging to use a switch. The following syntax is
   compiler specific. If you use compilers other than C# or Visual Basic, refer to
   the documentation for your compiler.</para>
			<list type="bullet"><item>
					<term>
      To enable debugging in C#, add the <see langword="/d:DEBUG"/> flag to the
      compiler command line when you compile your code, or you can add
   <see langword="#define DEBUG"/> to the top of your file. In Visual Basic, add
      the <see langword="/d:DEBUG=True"/> flag to the compiler command line.</term>
				</item>
				<item>
					<term>
      To enable tracing using in C#, add the <see langword="/d:TRACE"/> flag to
      the compiler command line when you compile your code, or add <see langword="#define TRACE"/> to the top of your file. In Visual Basic, add the
   <see langword="/d:TRACE=True"/> flag to the compiler command line.</term>
				</item>
			</list>
			<para>To set the level of your listener, edit the configuration file that 
   corresponds to the name of your application. Within this file, you can add a
   listener, set its type and set its parameter, remove a listener, or clear all
   the listeners previously set by the application. The configuration file should
   be formatted similar to the following example:</para>
			<para>For this code example to run, you must provide the fully qualified assembly 
   name. For information about how to obtain the fully qualified assembly name, see
<see topic="cpconassemblynames"/>.</para>
			<code>
&lt;configuration&gt;
&lt;system.diagnostics&gt;
    &lt;switches&gt;
        &lt;add name="MagicTraceSwitch" value="3" /&gt;
    &lt;/switches&gt;
    &lt;trace autoflush="false" indentsize="4"&gt;
        &lt;listeners&gt;
           &lt;add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="c:\myListener.log" /&gt;
           &lt;!-- You must supply a valid fully qualified assembly name here. --&gt; 
           &lt;remove type="Assembly text name, Version, Culture, PublicKeyToken"/&gt; 
        &lt;/listeners&gt;
    &lt;/trace&gt;
&lt;/system.diagnostics&gt;
 &lt;/configuration&gt;
</code>
			<note type="inheritinfo">
   Inherit from this
   class to implement a custom listener for the <see cref="System.Diagnostics.Debug"/> and <see cref="System.Diagnostics.Trace"/>
   classes. At a minimum, you must implement the <see cref="System.Diagnostics.TraceListener.Write"/> and <see cref="System.Diagnostics.TraceListener.WriteLine"/> methods. Additionally, you can
   implement the <see cref="System.Diagnostics.TraceListener.Fail"/>, <see cref="System.Diagnostics.TraceListener.Close"/> and <see cref="System.Diagnostics.TraceListener.Flush"/> methods.
   
</note>
		</remarks>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TraceListener.Dispose1">
		<summary>
			<para>Releases the unmanaged resources used by the <see cref="System.Diagnostics.TraceListener"/> and optionally releases the managed
   resources.</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<remarks>
			<para>This method is called by the public
   <see topic="frlrfSystemDiagnosticsTraceListenerClassDisposeTopic1" title="Dispose()"/> method and the <see cref="System.Object.Finalize"/> method.
   <see langword="Dispose"/> invokes the protected <see cref="System.Diagnostics.TraceListener.Dispose"/> method with the <paramref name="disposing"/> parameter set
      to <see langword="true"/>. <see cref="System.Object.Finalize"/> invokes <see langword="Dispose"/> with
   <paramref name="disposing"/> set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is <see langword="true"/>, this method releases all
   resources held by any managed objects that this <see cref="System.Diagnostics.TraceListener"/> references. This method invokes the
<see langword="Dispose"/> method of each referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called 
   multiple times by other objects. When overriding this method, be careful not to reference
   objects that have been previously disposed of in an earlier call to
<see langword="Dispose"/>. For more information about how to implement 
<see langword="Dispose"/>, see <see topic="cpconImplementingDisposeMethod"/> . 
</note>
			<para>For more information about <see langword="Dispose"/> and
<see langword="Finalize"/>, see <see topic="cpconCleaningUpUnmanagedResources"/> and <see topic="cpconOverridingFinalizeMethod"/>.</para>
		</remarks>
		<seealso topic="cpconImplementingDisposeMethod"/>
		<seealso topic="cpconCleaningUpUnmanagedResources"/>
	</doc>
</docs>
