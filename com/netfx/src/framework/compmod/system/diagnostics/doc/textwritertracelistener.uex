<docs>
	<doc for="TextWriterTraceListener.TextWriterTraceListener">
		<overload>
			<para>Initializes a new instance
       of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class with
 <see cref="System.IO.TextWriter"/> 
 as the output recipient.</para>
		</summary>
		<remarks>
			<para>This contructor uses the <see cref="T:System.IO.TextWriter"/> stream as the recipient of the
    tracing
    or debugging output. Its <see cref="System.Diagnostics.TraceListener.Name"/> is
    initialized to "TextWriter".</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.TextWriterTraceListener3">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class using the
       specified writer as recipient of the tracing or debugging output.
    </para>
		</summary>
		<param name="writer">
			<para>A <see cref="T:System.IO.TextWriter"/> that receives the output from the <see cref="System.Diagnostics.TextWriterTraceListener"/>.</para>
		</param>
		<exception cref="System.ArgumentNullException">
    The writer is <see langword="null"/>.
 </exception>
		<remarks>
			<para>
       This constructor initializes the <see cref="System.Diagnostics.TraceListener.Name"/> property to
       an empty string ("").
    </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.IO.Stream"/>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.TextWriterTraceListener4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class with
    the specified name, using the specified writer as recipient of the tracing or
    debugging
    output.</para>
		</summary>
		<param name="writer">
			<para>A <see cref="T:System.IO.TextWriter"/> that receives the output from the <see cref="System.Diagnostics.TextWriterTraceListener"/>.</para>
		</param>
		<param name="name">The name of the new instance.</param>
		<exception cref="System.ArgumentNullException">The writer is <see langword="null"/>.</exception>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.IO.Stream"/>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.Writer">
		<summary>
			<para>
       Gets or sets the text writer that receives the tracing
       or debugging output.
    </para>
		</summary>
		<value>
			<para>
       A <see cref="T:System.IO.TextWriter"/> that represents the writer that receives the tracing
       or debugging output.
    </para>
		</value>
		<example>
			<para>
       The following example creates a <see cref="System.Diagnostics.TextWriterTraceListener"/> that writes to
       the console screen. Then the code adds the new trace listener to the <see cref="System.Diagnostics.Trace.Listeners"/>
       in the trace class.
    </para>
			<codelink SampleID="Classic TextWriterTraceListener.Writer Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.IO.Stream"/>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.Close">
		<summary>
			<para>Closes the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/> so that it no longer
    receives tracing or debugging output.</para>
		</summary>
		<remarks>
			<para>If you want to send debugging or tracing output to a
    <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/> after a call to this 
       method, you must reinitialize the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>.</para>
		</remarks>
		<example>
			<para>The following example implements a <see cref="System.Diagnostics.TextWriterTraceListener"/> named <c>myTextListener</c>, which uses a <see cref="System.IO.StreamWriter"/> called <c>
 myOutputWriter
 </c>to write to a file named <c>TestFile.txt</c> 
 . The example creates the file, stream,
 and text writer, writes one line of text to the file, and then flushes and closes the stream.</para>
			<codelink SampleID="Classic TextWriterTraceListener.Close Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.Flush">
		<summary>
			<para>Flushes the output buffer for the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>.</para>
		</summary>
		<example>
			<para>The following example implements a <see cref="System.Diagnostics.TextWriterTraceListener"/> named <c>myTextListener</c>, which uses a <see cref="System.IO.StreamWriter"/> called <c>
 myOutputWriter
 </c>to write to a file named <c>TestFile.txt</c> 
 . The example creates the file, stream,
 and text writer, writes one line of text to the file, and then flushes and closes the stream.</para>
			<codelink SampleID="Classic TextWriterTraceListener.Close Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.Dispose">
		<summary>
			<para>Disposes this <see cref="System.Diagnostics.TextWriterTraceListener"/> object.</para>
		</summary>
	</doc>
	<doc for="TextWriterTraceListener.TextWriterTraceListener1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class, using the
   stream as the recipient of the debugging and tracing output.
   </para>
		</summary>
		<param name="stream">
			<para>A <see cref="T:System.IO.Stream"/> that represents the stream the <see cref="System.Diagnostics.TextWriterTraceListener"/> writes to.</para>
		</param>
		<exception cref="System.ArgumentNullException">The stream is <see langword="null"/>. </exception>
		<remarks>
			<para> This constructor initializes the <see cref="System.Diagnostics.TraceListener.Name"/> property to an empty string
   ("").
   </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.TextWriterTraceListener2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class with
   the specified name, using the stream as the recipient of the debugging and tracing output.</para>
		</summary>
		<param name="stream">
			<para>A <see cref="T:System.IO.Stream"/> that represents the stream the <see cref="System.Diagnostics.TextWriterTraceListener"/> writes to.</para>
		</param>
		<param name="name">The name of the new instance.</param>
		<exception cref="System.ArgumentNullException">The stream is <see langword="null"/>.</exception>
		<remarks>
			<para>This constructor
      initializes the <see cref="System.Diagnostics.TraceListener.Name"/> property to the <paramref name="name"/>
      parameter or to an empty string (""), if the <paramref name="name"/> parameter is <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.IO.Stream"/>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.TextWriterTraceListener5">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class, using
   the file as the recipient of the debugging and tracing output.
   </para>
		</summary>
		<param name="fileName">
			<para> The name of the file the <see cref="System.Diagnostics.TextWriterTraceListener"/> writes to.</para>
		</param>
		<exception cref="System.ArgumentNullException">The file is <see langword="null"/>. </exception>
		<remarks>
			<para> This constructor initializes the <see cref="System.Diagnostics.TraceListener.Name"/> property to an empty string
   ("").
   </para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.TextWriterTraceListener6">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class
   with the specified name, using the file as the recipient of the debugging and tracing output.</para>
		</summary>
		<param name="fileName">
			<para> The name of the file the <see cref="System.Diagnostics.TextWriterTraceListener"/> writes to.</para>
		</param>
		<param name="name">The name of the new instance.</param>
		<exception cref="System.ArgumentNullException">The stream is <see langword="null"/>.</exception>
		<remarks>
			<para>This constructor
      initializes the <see cref="System.Diagnostics.TraceListener.Name"/> property to the <paramref name="name"/>
      parameter or to an empty string (""), if the <paramref name="name"/> parameter is <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="System.IO.Stream"/>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.Write">
		<overload>
			<para>Writes a message to this instance's <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>.</para>
		</overload>
		<summary>
			<para>Writes a message
      to this instance's <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>.</para>
		</summary>
		<param name="message">A message to write.</param>
		<example>
			<para>The following example implements a <see cref="System.Diagnostics.TextWriterTraceListener"/> named <c>
   myWriter
</c> to
write to the console screen. The example writes two lines to the console screen. Note the second
write appears on the same line as the first write. The example then flushes and closes the stream.</para>
			<codelink SampleID="Classic TextWriterTraceListener.Write Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener.WriteLine">
		<overload>
			<para>Writes a message to this instance's <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>
followed by a line terminator.</para>
		</overload>
		<summary>
			<para>Writes a message
      to this instance's <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/> followed by a line terminator. The
      default line terminator is a carriage return followed by a line feed (\r\n).</para>
		</summary>
		<param name="message">A message to write.</param>
		<example>
			<para>The following example implements a <see cref="System.Diagnostics.TextWriterTraceListener"/> named <c>
   myWriter
</c> to write to the console screen. The example
writes two lines to the console screen. Note the second write appears on the same line
as the first write. The example then flushes and closes the stream.</para>
			<codelink SampleID="Classic TextWriterTraceListener.WriteLine Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="System.Diagnostics.TextWriterTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
	<doc for="TextWriterTraceListener">
		<summary>
			<para>Directs tracing or debugging output to
      a <see cref="T:System.IO.TextWriter"/> or to a <see cref="T:System.IO.Stream"/>,
      such as <see cref="F:System.Console.Out" qualify="true"/> or <see cref="T:System.IO.FileStream"/>.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Diagnostics.TextWriterTraceListener"/> class provides the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/> property to get or set the text writer that
   receives the tracing or debugging output.</para>
			<para>This class also provide methods to <see cref="System.Diagnostics.TextWriterTraceListener.Close"/>
the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/> so that it no longer receives
tracing or debugging output, to <see cref="System.Diagnostics.TextWriterTraceListener.Flush"/> the output buffer for the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>, and to <see cref="System.Diagnostics.TextWriterTraceListener.Write"/> a message to the <see cref="System.Diagnostics.TextWriterTraceListener.Writer"/>.</para>
			<para>You must enable tracing or debugging to use a switch.
   The following syntax is compiler specific. If you use compilers other than C# or
   Visual Basic, refer to the documentation for your compiler.</para>
			<list type="bullet"><item>
					<term>
      
      To enable debugging in C#, add the <see langword="/d:DEBUG"/> flag to the
      compiler command line when you compile your code, or you can add
   <see langword="#define DEBUG"/> to the top of your file. In Visual Basic, add
      the <see langword="/d:DEBUG=True"/> flag to the compiler command line.</term>
				</item>
				<item>
					<term>
      
      To enable tracing using in C#, add the <see langword="/d:TRACE"/> flag to
      the compiler command line when you compile your code, or add <see langword="#define TRACE"/> to the top of your file. In Visual Basic, add the
   <see langword="/d:TRACE=True"/> flag to the compiler command line.</term>
				</item>
			</list>
			<para> To set the level of your listener, edit the configuration file
   that corresponds to the name of your application. Within this file, you can
   add a listener, set its type and set its parameter, remove a listener, or
   clear all the listeners previously set by the application. The configuration
   file should be formatted like the following example.</para>
			<para>For this code example to run, you must provide the fully 
   qualified assembly name. For information about how to obtain the fully qualified
   assembly name, see <see topic="cpconassemblynames"/>
   
   .</para>
			<code>
&lt;configuration&gt;
&lt;system.diagnostics&gt;
    &lt;switches&gt;
        &lt;add name="MagicTraceSwitch" value="3" /&gt;
    &lt;/switches&gt;
    &lt;trace autoflush="false" indentsize="4"&gt;
        &lt;listeners&gt;
           &lt;add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="c:\myListener.log" /&gt;
           &lt;!-- You must supply a valid fully qualified assembly name here. --&gt; 
           &lt;remove type="Assembly text name, Version, Culture, PublicKeyToken"/&gt; 
        &lt;/listeners&gt;
    &lt;/trace&gt;
&lt;/system.diagnostics&gt;
&lt;/configuration&gt;
</code>
		</remarks>
		<example>
			<para>The following example implements two instances of the <see cref="System.Diagnostics.TextWriterTraceListener"/> class.
   The first instance, <c>myTextListener</c>, uses a <see cref="System.IO.StreamWriter"/> called <c>myOutputWriter</c> to write to a file named
<c>TestFile.txt</c> .
The second instance, <c>myWriter</c>, outputs to the console screen.</para>
			<para>First the example creates a file for output. Then it
   creates the <see cref="System.IO.StreamWriter"/> for the first text writer, assigns it the output
   file, and adds it to the <see cref="System.Diagnostics.Trace.Listeners"/>. Next it creates the
   second text writer, which it also add to the <see cref="System.Diagnostics.Trace.Listeners"/> . Then, the code outputs one line of text
   to the file and the console screen,
   and two lines to the console screen. Finally, the example flushes the output buffer and closes the buffer.</para>
			<para>After running this sample, you can open the <c>TestFile.txt</c>
file to see the output.</para>
			<codelink SampleID="Classic TextWriterTraceListener Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.TraceListener"/>
		<seealso cref="System.Diagnostics.DefaultTraceListener"/>
		<seealso cref="T:System.Diagnostics.EventLogTraceListener"/>
		<seealso cref="T:System.IO.Stream"/>
		<seealso cref="T:System.IO.TextWriter"/>
		<seealso cref="System.Diagnostics.Debug"/>
		<seealso cref="System.Diagnostics.Trace"/>
	</doc>
</docs>
