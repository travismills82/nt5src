<docs>
	<doc for="ThreadExceptionEventArgs.ThreadExceptionEventArgs">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Threading.ThreadExceptionEventArgs"/> class.</para>
		</summary>
		<param name="t">The <see cref="System.Exception"/> that occurred.</param>
		<example>
			<para>The following example allows you to raise a <see cref="E:System.Windows.Forms.Application.ThreadException"/> event by
   clicking <c>button1</c> on a
form. The example creates two classes. The <c>ErrorHandler</c>
class creates the form and the button that raises the
event. The <c>CustomExceptionHandler</c> class provides the methods to handle the
exception.</para>
			<para>In <c>Main</c> in the <c>ErrorHandler</c> class, the code
creates a new instance of the exception handling class, that is, an instance of
the <c>CustomExceptionHandler</c>.
Then the instance is added to the event, and the application is run.</para>
			<para>In the <c>OnThreadException</c>
method in the <c>CustomExceptionHandler</c> class, the example uses a
<see langword="try...catch...finally"/> statement to process the exception. The
<c>ShowThreadExceptionDialog</c>
method creates the message to display, and displays it in a message box.</para>
			<codelink SampleID="Classic ThreadExceptionEventArgs Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Threading.Thread"/>
		<seealso cref="System.Threading.ThreadStart"/>
	</doc>
	<doc for="ThreadExceptionEventArgs.Exception">
		<summary>
			<para>Gets the <see cref="System.Exception"/> that occurred.</para>
		</summary>
		<value>
			<para>The <see cref="System.Exception"/> that occurred.</para>
		</value>
		<example>
			<para>The following example allows you to raise a <see cref="E:System.Windows.Forms.Application.ThreadException"/> event by
   clicking <c>button1</c> on a
form. The example creates two classes. The <c>ErrorHandler</c>
class creates the form and the button that raises the
event. The <c>CustomExceptionHandler</c> class provides the methods to handle the
exception.</para>
			<para>In <c>Main</c> in the <c>ErrorHandler</c> class, the code
creates a new instance of the exception handling class, that is, an instance of
the <c>CustomExceptionHandler</c>.
Then the instance is added to the event, and the application is run.</para>
			<para>In the <c>OnThreadException</c>
method in the <c>CustomExceptionHandler</c> class, the example uses a
<see langword="try...catch...finally"/> statement to process the exception. The
<c>ShowThreadExceptionDialog</c>
method creates the message to display, and displays it in a message box.</para>
			<codelink SampleID="Classic ThreadExceptionEventArgs Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ThreadExceptionEventArgs">
		<summary>
			<para>Provides data for the <see cref="E:System.Windows.Forms.Application.ThreadException"/>
event.</para>
		</summary>
		<remarks>
			<para>A <see cref="ThreadExceptionEventArgs"/> is created by a thread
   when an unhandled exception occurs. <see cref="System.Threading.ThreadExceptionEventArgs"/> contains the <see cref="System.Exception"/>
   that occurred.</para>
		</remarks>
		<example>
			<para>The following example allows you to raise a <see cref="E:System.Windows.Forms.Application.ThreadException"/> event by
   clicking <c>button1</c> on a
form. The example creates two classes. The <c>ErrorHandler</c> class creates the form and the button that raises the
event. The <c>CustomExceptionHandler</c> class provides the methods to handle the
exception.</para>
			<para>In <c>Main</c> in the <c>ErrorHandler</c> class, the code
creates a new instance of the exception handling class, that is, an instance of
the <c>CustomExceptionHandler</c>.
Then the instance is added to the event, and the application is run.</para>
			<para>In the <c>OnThreadException</c>
method in the <c>CustomExceptionHandler</c> class, the example uses a
<see langword="try...catch...finally"/> statement to process the exception. The
<c>ShowThreadExceptionDialog</c>
method creates the message to display, and displays it in a message box.</para>
			<codelink SampleID="Classic ThreadExceptionEventArgs Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Threading.Thread"/>
		<seealso cref="System.Threading.ThreadStart"/>
		<seealso cref="System.Threading.ThreadExceptionEventHandler"/>
	</doc>
</docs>
