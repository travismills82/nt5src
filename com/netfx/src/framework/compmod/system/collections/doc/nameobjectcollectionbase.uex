<docs>
	<doc for="NameObjectCollectionBase.NameObjectCollectionBase4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> 
 class that is serializable and uses the
 specified <see cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/> and <see cref="System.Runtime.Serialization.StreamingContext" qualify="true"/>.</para>
		</summary>
		<param name="info">A <see cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/> object that contains the information required to serialize the new <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
		<param name="context">A <see cref="System.Runtime.Serialization.StreamingContext" qualify="true"/> object that contains the source and destination of the serialized stream associated with the new <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
		<seealso cref="System.Runtime.Serialization.ISerializable" qualify="true"/>
		<seealso cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext" qualify="true"/>
	</doc>
	<doc for="NameObjectCollectionBase.GetObjectData">
		<summary>
			<para>Implements the <see cref="System.Runtime.Serialization.ISerializable"/> interface and returns the data 
    needed to serialize the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
    instance.</para>
		</summary>
		<param name="info">A <see cref="System.Runtime.Serialization.SerializationInfo"/> object that contains the information required to serialize the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
		<param name="context">A <see cref="System.Runtime.Serialization.StreamingContext"/> object that contains the source and destination of the serialized stream associated with the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
		<exception cref="System.ArgumentNullException"><paramref name="info"/> is <see langword="null"/>.</exception>
		<remarks>
			<para>This method can be overridden by a derived class.</para>
		</remarks>
		<seealso cref="System.Runtime.Serialization.ISerializable"/>
		<seealso cref="System.Runtime.Serialization.SerializationInfo"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
	</doc>
	<doc for="NameObjectCollectionBase.OnDeserialization">
		<summary>
			<para>Implements the <see cref="System.Runtime.Serialization.ISerializable"/> interface and raises the
    deserialization event when the deserialization is complete.</para>
		</summary>
		<param name="sender">The source of the deserialization event.</param>
		<exception cref="System.Runtime.Serialization.SerializationException">The <see cref="System.Runtime.Serialization.SerializationInfo" qualify="true"/> object associated with the current <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance is invalid.</exception>
		<remarks>
			<para>This method can be overridden by a derived class.</para>
		</remarks>
		<seealso cref="System.Runtime.Serialization.ISerializable" qualify="true"/>
		<seealso cref="System.Collections.Specialized.NameObjectCollectionBase.GetObjectData"/>
	</doc>
	<doc for="NameObjectCollectionBase.IsReadOnly">
		<summary>
			<para>Gets or sets a value indicating whether the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance is read-only; otherwise, <see langword="false"/>.</para>
		</value>
	</doc>
	<doc for="NameObjectCollectionBase.BaseHasKeys">
		<summary>
			<para>Gets a value indicating whether the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance contains entries whose 
    keys are not <see langword="null"/>.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance contains entries whose 
    keys are not <see langword="null"/>; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="NameObjectCollectionBase.BaseAdd">
		<summary>
			<para>Adds an entry with the specified key and value into the 
    <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry to add. The key can be <see langword="null"/>. </para></param>
		<param name="value"><para>The <see cref="System.Object"/> value of the entry to add. The value can be <see langword="null"/>. </para></param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
	</doc>
	<doc for="NameObjectCollectionBase.BaseRemove">
		<overload>
			<para> Removes the specified entries from the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</overload>
		<summary>
			<para>Removes the entries with the specified key from the 
    <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entries to remove. The key can be <see langword="null"/>. </para></param>
		<exception cref="System.NotSupportedException"><para>The collection is read-only.</para>
			<para>-or-</para>
			<para>The collection has a fixed size.</para></exception>
		<remarks>
			<para>In collections such as lists, queues and stacks, the elements that follow the 
       removed element move up to occupy the vacated spot.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.BaseRemoveAt">
		<summary>
			<para> Removes the entry at the specified index of the 
    <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="index">The zero-based index of the entry to remove.</param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<exception cref="System.NotSupportedException"><para>The collection is read-only.</para>
			<para>-or-</para>
			<para>The collection has a fixed size.</para></exception>
		<remarks>
			<para>In collections such as lists, queues and stacks, the elements that follow the 
       removed element move up to occupy the vacated spot.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.BaseClear">
		<summary>
			<para>Removes all entries from the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<remarks>
			<para><see cref="System.Collections.Specialized.NameObjectCollectionBase.Count"/> is set to zero.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.BaseSet">
		<overload>
			<para>Sets the value of an entry in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</overload>
		<summary>
			<para>Sets the value of the first entry with the specified key in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> 
 instance, if found; otherwise, adds an entry with the specified key and value
 into the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
 instance.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry to set. The key can be <see langword="null"/>. </para></param>
		<param name="value"><para>The <see cref="System.Object"/> that represents the new value of the entry to set. The value can be <see langword="null"/>. </para></param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<remarks>
			<para>If the collection contains multiple entries with the 
       specified key, this method sets only the first entry. To
       set the values of subsequent entries with the same key, use the enumerator to
       iterate through the collection and compare the keys.</para>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator"/>
	</doc>
	<doc for="NameObjectCollectionBase.BaseGetKey">
		<summary>
			<para>Gets the key of the entry at the specified index of the 
    <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> 
    instance.</para>
		</summary>
		<param name="index">The zero-based index of the key to get.</param>
		<returns>
			<para>A <see cref="System.String"/> that represents the key of the entry at the specified index.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
	</doc>
	<doc for="NameObjectCollectionBase.BaseSet1">
		<summary>
			<para>Sets the value of the entry at the specified index of 
       the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="index">The zero-based index of the entry to set.</param>
		<param name="value"><para>The <see cref="System.Object"/> that represents the new value of the entry to set. The value can be <see langword="null"/>. </para></param>
		<exception cref="System.NotSupportedException">The collection is read-only.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
	</doc>
	<doc for="NameObjectCollectionBase.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can iterate through the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>.</para>
		</summary>
		<returns>
			<para> An <see cref="System.Collections.IEnumerator"/> for the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</returns>
		<remarks>
			<para> 
       This enumerator returns the keys of the collection as
       strings.</para>
			<para>Enumerators are intended to be used only to read data in the collection. 
       Enumerators cannot be used to modify the underlying collection.</para>
			<para> The 
       enumerator does not have exclusive access to the collection.</para>
			<para>When an enumerator is instantiated, it takes a snapshot of the current state 
       of the collection. If changes are made to the collection, such as adding,
       modifying or deleting elements, the snapshot gets out of sync and the enumerator
       throws an <see cref="System.InvalidOperationException"/>. Two enumerators instantiated from the same collection
       at the same time can have different snapshots of the collection.</para>
			<para>The enumerator is in an invalid state if it is positioned before the first 
       element in the collection or after the last element in the collection. Whenever
       the enumerator is in an invalid state, calling <see cref="System.Collections.IEnumerator.Current"/> throws an
       exception.</para>
			<para>Initially, the enumerator is positioned before the first element in the 
       collection. <see cref="System.Collections.IEnumerator.Reset"/> also brings the enumerator back
       to this position. Therefore, after an enumerator is created or after a <see cref="System.Collections.IEnumerator.Reset"/>, <see cref="System.Collections.IEnumerator.MoveNext"/> must be called
       to advance the enumerator to the first element of the collection before reading
       the value of <see cref="System.Collections.IEnumerator.Current"/>.</para>
			<para><see cref="System.Collections.IEnumerator.Current"/> returns the same object until 
    either <see cref="System.Collections.IEnumerator.MoveNext"/> or <see cref="System.Collections.IEnumerator.Reset"/> is called.</para>
			<para>Once the end of the collection is passed, the enumerator is again in an 
    invalid state and calling <see cref="System.Collections.IEnumerator.MoveNext"/> returns <see langword="false"/>.
    Calling <see cref="System.Collections.IEnumerator.Current"/> throws an exception if the last
    call to <see cref="System.Collections.IEnumerator.MoveNext"/> returned
 <see langword="false"/>.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.Count">
		<summary>
			<para>Gets the number of key-and-value pairs contained in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<value>
			<para>The number of key-and-value pairs contained in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Collections.Specialized.NameObjectCollectionBase.Count"/> property can set the limits of a 
    loop that iterates through a collection of objects. If the collection is
    zero-based, use "Count-1" as the upper bound of the loop.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.BaseGetAllKeys">
		<summary>
			<para>Returns a <see cref="System.String"/> array that contains all the keys in the 
 <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<returns>
			<para>A <see cref="System.String"/> array that contains all the keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance. </para>
		</returns>
	</doc>
	<doc for="NameObjectCollectionBase.BaseGetAllValues">
		<overload>
			<para>Returns an array that contains all the values in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</overload>
		<summary>
			<para>Returns an <see cref="System.Object"/> array that contains all the values in the 
 <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Object"/> array that contains all the values in the 
 <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance. </para>
		</returns>
	</doc>
	<doc for="NameObjectCollectionBase.BaseGetAllValues1">
		<summary>
			<para>Returns an array of the specified type that contains 
       all the values in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="type">A <see cref="System.Type"/> that represents the type of array to return.</param>
		<returns>
			<para>An array of the specified type that contains all the values 
       in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="type"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><paramref name="type"/> is not a valid <see cref="System.Type"/>.</exception>
		<seealso cref="System.Type"/>
	</doc>
	<doc for="NameObjectCollectionBase.Keys">
		<summary>
			<para>Gets a <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/> instance that contains 
    all the keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/> 
 instance that contains all the keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</value>
	</doc>
	<doc for="NameObjectCollectionBase.KeysCollection">
		<summary>
			<para>Represents a collection of the <see cref="System.String"/> keys of a collection.</para>
		</summary>
	</doc>
	<doc for="NameObjectCollectionBase.KeysCollection.Get">
		<summary>
			<para> Gets the key at the specified index of the collection.</para>
		</summary>
		<param name="index"><para>The zero-based index of the key to get from the collection.</para></param>
		<returns>
			<para>A <see cref="System.String"/> that contains the key at the specified index of the collection.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
	</doc>
	<doc for="NameObjectCollectionBase.KeysCollection.this">
		<summary>
			<para>Gets the entry at the specified index of the collection.</para>
		</summary>
		<param name="index"><para>The zero-based index of the entry to locate in the collection.</para></param>
		<value>
			<para>The <see cref="System.String"/> key of the entry at the specified index of the collection.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
		<exception cref="System.NotSupportedException">The collection is read-only and the operation attempts to modify the collection.</exception>
		<remarks>
			<para>This property provides the ability to access a specific element in the 
       collection by using the following syntax: <c>myCollection[index]</c> (In Visual Basic, <c>myCollection(index)</c>).</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.KeysCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that can iterate through the 
    <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/>.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> for the <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/>.</para>
		</returns>
		<remarks>
			<para> This 
       enumerator returns the keys of the collection as strings.</para>
			<para>Enumerators are intended to be used only to read data in the collection. 
       Enumerators cannot be used to modify the underlying collection.</para>
			<para>The enumerator does not have exclusive access to the collection.</para>
			<para>When an enumerator is instantiated, it takes a snapshot of the current state 
       of the collection. If changes are made to the collection, such as adding,
       modifying or deleting elements, the snapshot gets out of sync and the enumerator
       throws an <see cref="System.InvalidOperationException"/>. Two enumerators
       instantiated from the same collection at the same time can have different
       snapshots of the collection.</para>
			<para>The enumerator is in an invalid state if it is positioned before the first 
       element in the collection or after the last element in the collection. Whenever
       the enumerator is in an invalid state, calling <see cref="System.Collections.IEnumerator.Current"/> throws an
       exception.</para>
			<para>Initially, the enumerator is positioned before the first element in the 
       collection. <see cref="System.Collections.IEnumerator.Reset"/> also brings the enumerator back
       to this position. Therefore, after an enumerator is created or after a <see cref="System.Collections.IEnumerator.Reset"/>, <see cref="System.Collections.IEnumerator.MoveNext"/> must be called
       to advance the enumerator to the first element of the collection before reading
       the value of <see cref="System.Collections.IEnumerator.Current"/>.</para>
			<para><see cref="System.Collections.IEnumerator.Current"/> returns the same object until 
    either <see cref="System.Collections.IEnumerator.MoveNext"/> or <see cref="System.Collections.IEnumerator.Reset"/> is called.</para>
			<para>Once the end of the collection is passed, the enumerator is again in an 
    invalid state and calling <see cref="System.Collections.IEnumerator.MoveNext"/> returns <see langword="false"/>.
    Calling <see cref="System.Collections.IEnumerator.Current"/> throws an exception if the last
    call to <see cref="System.Collections.IEnumerator.MoveNext"/> returned
 <see langword="false"/>.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.KeysCollection.Count">
		<summary>
			<para>Gets the number of keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/>.</para>
		</summary>
		<value>
			<para>The number of keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.Count"/> property can 
    set the limits of a loop that iterates through a collection of objects. If the
    collection is zero-based, use "Count-1" as the upper bound of the loop.</para>
		</remarks>
	</doc>
	<doc for="NameObjectCollectionBase.BaseGet1">
		<summary>
			<para> Gets the value of the entry at the specified index of
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="index">The zero-based index of the value to get.</param>
		<returns>
			<para>An <see cref="System.Object"/> that represents 
   the value of the entry at the specified index.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the valid range of indexes for the collection.</exception>
	</doc><doc for="NameObjectCollectionBase">
		<summary>
			<para>Provides the <see langword="abstract"/> base class for a sorted collection of associated <see cref="System.String"/> keys
   and <see cref="System.Object"/> values that can be accessed either with the hash code of
   the key or with the index.</para>
		</summary>
		<remarks>
			<para> The underlying structure
      for this class is a hashtable.</para>
			<para> The capacity is the number of key-and-value pairs that
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance
      can contain. The default initial capacity is zero. The capacity is increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance. The default hash code
      provider is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal.
      The default comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
			<para><see langword="null"/> is allowed as a key or as a value.</para>
			<note type="caution">
   The <see cref="System.Collections.Specialized.NameObjectCollectionBase.BaseGet"/> method
   does not distinguish between <see langword="null"/> which is returned
   because the specified key is not found and <see langword="null"/> which is
   returned because the value associated with the key is
<see langword="null"/>.
</note>
		</remarks>
		<seealso cref="System.Collections.Hashtable"/>
		<seealso cref="System.Collections.Specialized.NameValueCollection"/>
		<seealso cref="System.String"/>
	</doc><doc for="NameObjectCollectionBase.BaseGet">
		<overload>
			<para>Gets the value of the specified entry from the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</overload>
		<summary>
			<para>Gets the value of the first entry with the specified key from
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para>
		</summary>
		<param name="name"><para>The <see cref="System.String"/> key of the entry to get. The key can be <see langword="null"/>. </para></param>
		<returns>
			<para>An <see cref="System.Object"/> that represents the
   value of the first entry with the specified key, if found; otherwise, <see langword="null"/>.</para>
		</returns>
		<remarks>
			<para>If the collection contains multiple entries with the specified key, this 
      method returns only the first entry. To get the values of subsequent entries
      with the same key, use the enumerator to iterate through the collection and
      compare the keys.</para>
			<note type="caution">
      This method returns <see langword="null"/> in the following cases: 1) if the specified
      key is not found; and 2) if the specified key is found and its associated value
      is <see langword="null"/>. This method does not distinguish
      between the two cases.
   </note>
		</remarks>
		<seealso cref="System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator"/>
	</doc><doc for="NameObjectCollectionBase.NameObjectCollectionBase2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
class that is empty, has the specified
initial capacity and uses the specified case-insensitive hash code provider
and the specified case-insensitive comparer.</para>
		</summary>
		<param name="capacity">The approximate number of entries that the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance can initially contain. </param>
		<param name="hashProvider"><para>The case-insensitive <see cref="System.Collections.IHashCodeProvider"/> that will supply the hash codes for all keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para></param>
		<param name="comparer"><para>The case-insensitive <see cref="System.Collections.IComparer"/> to use to determine whether two keys are equal.</para></param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero. </exception>
		<remarks>
			<para> The capacity is the number of key-and-value pairs that
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
      instance can contain. Specifying the initial capacity eliminates a number
      of resizing operations that are otherwise performed while entries are added to
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
      instance.
      The capacity is increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>instance. The default hash code provider is
   the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default
   comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.IHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.IComparer"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc><doc for="NameObjectCollectionBase.NameObjectCollectionBase">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
class that is empty.</para>
		</summary>
		<remarks>
			<para> The capacity is the number of key-and-value pairs that
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance
      can contain. The default initial capacity is zero.
      The capacity is increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance. The default hash code
      provider is the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal.
      The default comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc><doc for="NameObjectCollectionBase.NameObjectCollectionBase1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> 
class that is empty and uses the specified hash code provider and the specified comparer.</para>
		</summary>
		<param name="hashProvider"><para> The <see cref="System.Collections.IHashCodeProvider"/> that will supply the hash codes for all keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance.</para></param>
		<param name="comparer"><para> The <see cref="System.Collections.IComparer"/> to use to determine whether two keys are equal.</para></param>
		<remarks>
			<para> The capacity is the number of key-and-value pairs that
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance
      can contain. The default initial capacity is zero.
      The capacity is increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>instance. The default hash code provider is
   the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default
   comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.IHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.IComparer"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc><doc for="NameObjectCollectionBase.NameObjectCollectionBase3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>

class that is empty
and has the specified initial capacity.</para>
		</summary>
		<param name="capacity">The approximate number of entries that the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/> instance can initially contain. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero. </exception>
		<remarks>
			<para>The capacity is the number of key-and-value pairs that
      the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
      instance can contain. Specifying the initial capacity eliminates a number of resizing
      operations that are otherwise performed while entries are added to the
   <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>
   instance. The capacity is increased as required.</para>
			<para>The hash code provider dispenses hash codes for keys in the <see cref="System.Collections.Specialized.NameObjectCollectionBase"/>instance. The default hash code provider is
the <see cref="System.Collections.CaseInsensitiveHashCodeProvider"/>.</para>
			<para>The comparer determines whether two keys are equal. The default
   comparer is the <see cref="System.Collections.CaseInsensitiveComparer"/>.</para>
		</remarks>
		<seealso cref="System.Collections.CaseInsensitiveHashCodeProvider"/>
		<seealso cref="System.Collections.CaseInsensitiveComparer"/>
	</doc></docs>
