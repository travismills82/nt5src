/**
 * Process Model: TimeClass defn file
 * 
 * Copyright (c) 1999 Microsoft Corporation
 */

/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

#include "precomp.h"
#include "TimeClass.h"

/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////

TimeClass::TimeClass()
{
    m_fSet = FALSE;
    m_ulTime = 0;
}

/////////////////////////////////////////////////////////////////////////////

void
TimeClass::SnapCurrentTime()
{
    GetSystemTimeAsFileTime((FILETIME *) &m_ulTime);
    m_fSet = TRUE;
}

/////////////////////////////////////////////////////////////////////////////

DWORD
TimeClass::AgeInSeconds()
{
    if (m_fSet == FALSE)
        return 0;

    __int64    ulTime;
    GetSystemTimeAsFileTime((FILETIME *) &ulTime);

    ulTime -= m_ulTime;
    ulTime /= 10000000;

    return DWORD(ulTime & 0xffffffff);
}

/////////////////////////////////////////////////////////////////////////////

DWORD
TimeClass::DiffInSeconds (const TimeClass & t1, const TimeClass & t2)
{
    __int64 uld = t1.m_ulTime - t2.m_ulTime;
    uld /= 10000000;
    return DWORD(uld & 0xffffffff);
}
