<docs>
	<doc for="SimpleWorkerRequest.GetUriPath">
		<summary>
			<para>Returns the virtual path to the requested URI.</para>
		</summary>
		<returns>
			<para>The path to the requested URI.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetQueryString">
		<summary>
			<para>Returns the query string specified in the request URL.</para>
		</summary>
		<returns>
			<para>The request query string.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetRawUrl">
		<summary>
			<para>Returns the URL path contained in the request header 
      with the query string appended.</para>
		</summary>
		<returns>
			<para>The raw URL path of the request header.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetHttpVerbName">
		<summary>
			<para>Returns the specified member of the request header.</para>
		</summary>
		<returns>
   The HTTP verb returned in the request
   header.
</returns>
	</doc><doc for="SimpleWorkerRequest.GetRemoteAddress">
		<summary>
			<para>Returns the IP address of the client.</para>
		</summary>
		<returns>
			<para>The client's IP address.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetRemotePort">
		<summary>
			<para>Returns the client's port number.</para>
		</summary>
		<returns>
			<para>The client's HTTP port number.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetLocalPort">
		<summary>
			<para>Provides access to the specified member of the request header.</para>
		</summary>
		<returns>
			<para>The server port number returned in the request header.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetFilePath">
		<summary>
			<para>Returns the physical path to the requested URI.</para>
		</summary>
		<returns>
			<para>The physical path to the requested URI.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetFilePathTranslated">
		<summary>
			<para>Returns the physical file path to the requested URI (and 
      translates it from virtual path to physical path: for example,
      "/proj1/page.aspx" to "c:\dir\page.aspx")</para>
		</summary>
		<returns>
			<para>The translated physical file path to the requested URI.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetAppPath">
		<summary>
			<para>Returns the virtual path to the currently executing 
      server application.</para>
		</summary>
		<returns>
			<para>The virtual path of the current application.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetAppPathTranslated">
		<summary>
			<para>Returns the UNC-translated path to the currently 
      executing server application.</para>
		</summary>
		<returns>
			<para>The physical path of the current application.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetServerVariable">
		<summary>
			<para>Returns a single server variable from a dictionary of 
      server variables associated with the request.</para>
		</summary>
		<param name="name">The name of the requested server variable.</param>
		<returns>
			<para>The requested server variable.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.SendUnknownResponseHeader">
		<summary>
			<para>Adds a nonstandard HTTP header to the response.</para>
		</summary>
		<param name="name">The name of the header to send.</param>
		<param name=" value">The value of the header.</param>
	</doc><doc for="SimpleWorkerRequest.GetUserToken">
		<summary>
			<para>Returns the client's impersonation token.</para>
		</summary>
		<returns>
			<para>A value representing the client's impersonation token. 
      The default is <see cref="System.IntPtr.Zero"/>
      .</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.SimpleWorkerRequest">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.Hosting.SimpleWorkerRequest"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Hosting.SimpleWorkerRequest"/> class when the target application
   domain has been created using the <see cref="System.Web.Hosting.ApplicationHost.CreateApplicationHost"/>
   method.</para>
		</summary>
		<param name="page"> The page to be requested (or the virtual path to the page, relative to the application directory).</param>
		<param name=" query"> The text of the query string.</param>
		<param name=" output">A <see cref="System.IO.TextWriter"/> that captures output from the response</param>
	</doc><doc for="SimpleWorkerRequest.GetHttpVersion">
		<summary>
			<para> Returns the HTTP version of the request (for
      example, "HTTP/1.1").</para>
		</summary>
		<returns>
			<para>The HTTP version number returned in the request header.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.GetLocalAddress">
		<summary>
			<para>Returns the server IP address that is in the request header.</para>
		</summary>
		<returns>
			<para>The server IP address returned in the request header.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.FlushResponse">
		<summary>
			<para>Sends all pending response data to the client.</para>
		</summary>
		<param name="finalFlush"><see langword="true"/> if this is the last time response data will be flushed; otherwise, <see langword="false"/>.</param>
	</doc><doc for="SimpleWorkerRequest.EndOfRequest">
		<summary>
			<para> Notifies the <see cref="System.Web.HttpWorkerRequest"/>
that request processing for the current request is complete.</para>
		</summary>
	</doc><doc for="SimpleWorkerRequest.SimpleWorkerRequest1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Hosting.SimpleWorkerRequest"/> class for use in an arbitrary application domain, when the
   user code creates an <see cref="System.Web.HttpContext"/> (passing the <see langword="SimpleWorkerRequest"/> as
   an argument to the <see langword="HttpContext"/> constructor)</para>
		</summary>
		<param name="appVirtualDir">The virtual path to the application directory; for example, “/app”.</param>
		<param name=" appPhysicalDir">The physical path to the application directory; for example, "c:\app".</param>
		<param name=" page">The virtual path for the request (relative to the application directory).</param>
		<param name=" query">The text of the query string.</param>
		<param name=" output">A <see cref="System.IO.TextWriter"/> that captures the output from the response.</param>
	</doc><doc for="SimpleWorkerRequest.GetPathInfo">
		<summary>
			<para> Returns additional path information for a resource with
      a URL extension. That is, for the path /virdir/page.html/tail, the return
      value is /tail.</para>
		</summary>
		<returns>
			<para>Additional path information for a resource.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.MapPath">
		<summary>
			<para>Returns the physical path corresponding to the specified virtual path.</para>
		</summary>
		<param name="path">The virtual path.</param>
		<returns>
			<para>The physical path that corresponds to the virtual path 
      specified in the <paramref name="path "/>
      parameter.</para>
		</returns>
	</doc><doc for="SimpleWorkerRequest.SendKnownResponseHeader">
		<summary>
			<para>Adds a standard HTTP header to the response.</para>
		</summary>
		<param name="index">The header index. For example, <see cref="System.Web.HttpWorkerRequest.HeaderContentLength"/>.</param>
		<param name=" value">The header value.</param>
	</doc><doc for="SimpleWorkerRequest.SendResponseFromFile">
		<overload>
			<para>Adds the contents of a file to the response.</para>
		</overload>
		<summary>
			<para> Adds the contents of the file with the specified name to the response and
      specifies the starting position in the file and the number of bytes to send.</para>
		</summary>
		<param name="filename">The name of the file to send.</param>
		<param name=" offset">The starting position in the file.</param>
		<param name=" length">The number of bytes to send.</param>
	</doc><doc for="SimpleWorkerRequest.SendResponseFromFile1">
		<summary>
			<para>Adds the contents of the file with the specified handle to the response and
      specifies the starting position in the file and the number of bytes to send.</para>
		</summary>
		<param name="handle">The handle of the file to send.</param>
		<param name=" offset">The starting position in the file.</param>
		<param name=" length">The number of bytes to send.</param>
	</doc><doc for="SimpleWorkerRequest.MachineConfigPath">
		<summary>
			<para>Gets the full physical path to the Machine.config file.</para>
		</summary>
		<value>
			<para>The physical path to the Machine.config file.</para>
		</value>
		<permission cref="System.Security.Permissions.FileIOPermission">for access to the information in the path itself. This protects sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" qualify="true"/></permission>
	</doc>
	<doc for="SimpleWorkerRequest.MachineInstallDirectory">
		<summary>
			<para>Gets the physical path to the directory where the ASP.NET
      binaries are installed.</para>
		</summary>
		<value>
			<para>The physical directory to the ASP.NET binary files.</para>
		</value>
		<permission cref="System.Security.Permissions.FileIOPermission">for access to the information in the path itself. This protects sensitive information in the path, such as user names, as well as information about the directory structure revealed in the path. This value does not grant access to files or folders represented by the path. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" qualify="true"/></permission>
	</doc>
	<doc for="SimpleWorkerRequest.SendStatus">
		<summary>
			<para>Specifies the HTTP status code and status description of
      the response; for example, SendStatus(200, "Ok").</para>
		</summary>
		<param name="statusCode">The status code to send</param>
		<param name=" statusDescription">The status description to send.</param>
	</doc>
	<doc for="SimpleWorkerRequest.SendResponseFromMemory">
		<summary>
			<para>Adds the contents of a byte array to the response 
      and specifies the number of bytes to send.</para>
		</summary>
		<param name="data">The byte array to send.</param>
		<param name=" length">The number of bytes to send.</param>
	</doc><doc for="SimpleWorkerRequest">
		<summary>
			<para>Provides a simple implementation of the <see cref="System.Web.HttpWorkerRequest"/><see langword=" "/> abstract class that can
   be used to host ASP.NET applications outside an Internet Information Services (IIS)
   application. You can employ <see langword="SimpleWorkerRequest"/> directly or extend it.</para>
		</summary>
		<remarks>
			<para>This simple implementation of <see langword="HttpWorkerRequest"/> provides the
   request URL and the query string and captures body of the output into a
<see cref="System.IO.TextWriter"/>. 
   To achieve richer functionality, such as providing posted content
   and headers and capturing the response headers or response body as binary
   data, you should extend <see langword="SimpleWorkerRequest"/> and override the
   appropriate <see langword="HttpWorkerRequest"/> methods.</para>
		</remarks>
	</doc>
</docs>
