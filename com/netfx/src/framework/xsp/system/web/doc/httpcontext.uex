<docs>
	<doc for="HttpContext.GetConfig1">
		<summary>
			<para>
       Returns requested config information for the current request.
    </para>
		</summary>
		<param name="name">
		</param>
		<param name=" path">
		</param>
	</doc>
	<doc for="HttpContext.Current">
		<summary>
			<para> Gets the <see cref="System.Web.HttpContext"/> object for the current HTTP request.</para>
		</summary>
		<value>
			<para> The <see langword="HttpContext "/>object for the current request.</para>
		</value>
	</doc><doc for="HttpContext.Error">
		<summary>
			<para> Gets the first
      error (if any) accumulated during HTTP request processing.
      </para>
		</summary>
		<value>
			<para> The first <see cref="System.Exception"/> object for the current HTTP
   request/response
   process.</para>
		</value>
	</doc><doc for="HttpContext.Handler">
		<summary>
			<para> Gets or sets the <see cref="System.Web.IHttpHandler"/> object 
   for the current HTTP request.</para>
		</summary>
		<value>
			<para> The <see cref="System.Web.IHttpHandler"/> object for the current HTTP 
   request.</para>
		</value>
	</doc><doc for="HttpContext.IsDebuggingEnabled">
		<summary>
			<para> Gets a value indicating whether the current HTTP request is in debug mode.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if the request is in debug mode; otherwise,
<see langword="false"/>.</para>
		</value>
	</doc><doc for="HttpContext.IsCustomErrorEnabled">
		<summary>
			<para> Gets a value indicating whether custom errors are enabled for the current HTTP request.
      </para>
		</summary>
		<value>
			<para><see langword="true "/>if custom errors are enabled; otherwise
<see langword="false"/>.</para>
		</value>
	</doc><doc for="HttpContext.AddError">
		<summary>
			<para> Adds an exception to the exception collection for the current HTTP request.
      </para>
		</summary>
		<param name="errorInfo">The <see cref="System.Exception"/> object to add to the exception collection. </param>
	</doc><doc for="HttpContext.Timestamp">
		<summary>
			<para>Gets the initial timestamp of the current HTTP request.</para>
		</summary>
		<value>
			<para> The timestamp of the current
      HTTP request.</para>
		</value>
	</doc><doc for="HttpContext.ClearError">
		<summary>
			<para> Clears all errors for the current HTTP request.
      </para>
		</summary>
	</doc><doc for="HttpContext.Items">
		<summary>
			<para> Gets a key-value collection that can be
      used to organize and share data between an <see cref="System.Web.IHttpModule"/> and an <see cref="System.Web.IHttpHandler"/> during
      an HTTP
      request.
      </para>
		</summary>
		<value>
			<para> An <see cref="System.Collections.IDictionary"/> key-value collection that provides access to an individual
   value in the collection by a specified key.
   </para>
		</value>
	</doc><doc for="HttpContext.AllErrors">
		<summary>
			<para> Gets an array of errors accumulated while processing an HTTP
      request.
      </para>
		</summary>
		<value>
			<para> An array of <see cref="System.Exception"/> objects for the current HTTP
   request.</para>
		</value>
	</doc><doc for="HttpContext.HttpContext">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.HttpContext"/>class. </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Web.HttpContext"/> class.
   </para>
		</summary>
		<param name="request">The <see cref="System.Web.HttpRequest"/> object for the current HTTP request. </param>
		<param name=" response">The <see cref="System.Web.HttpResponse"/> object for the current HTTP request. </param>
	</doc><doc for="HttpContext.HttpContext1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Web.HttpContext"/> class.
   </para>
		</summary>
		<param name="wr">The <see cref="System.Web.HttpWorkerRequest"/> object for the current HTTP request. </param>
	</doc><doc for="HttpContext.SkipAuthorization">
		<summary>
			<para>Gets or sets a value that specifies whether the
      URLAuthorization module will skip the authorization check for the
      current request. </para>
		</summary>
		<value>
			<para><see langword="true"/> if the URLAuthorization module
   will skip the authorization check; otherwise, <see langword="false"/>.
   The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para><see langword="SkipAuthorization"/> is for advanced
   use by authentication modules that need to redirect to an anonymous-allowed
   page. The Forms authentication module and Passport authentication module
   both set this property when redirecting to a configured login page.
   Setting this requires the <see langword="ControlPrincipal"/> flag to be set
   in <see cref="System.Security.Permissions.SecurityPermission.Flags"/>.</para>
		</remarks>
	</doc><doc for="HttpContext.IServiceProvider.GetService">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="HttpContext.ApplicationInstance">
		<summary>
			<para> Gets or sets the <see cref="System.Web.HttpApplication"/><see langword=" "/> object for the current HTTP request.</para>
		</summary>
		<value>
			<para> The <see langword="HttpApplication "/>object for the current HTTP request.</para>
		</value>
	</doc><doc for="HttpContext.GetAppConfig">
		<summary>
			<para>Returns requested configuration information for the
      current application</para>
		</summary>
		<param name="name">The application configuration tag that information is requested for.</param>
		<returns>
			<para>An object containing configuration information.</para>
		</returns>
	</doc><doc for="HttpContext.GetConfig">
		<overload>
			<para> Returns requested configuration information for the current HTTP request.
      </para>
		</overload>
		<summary>
			<para>Returns requested configuration information for the current HTTP
      request.</para>
		</summary>
		<param name="name">The configuration tag that information is requested for.</param>
		<returns>
			<para>The object containing the requested configuration information.</para>
		</returns>
	</doc><doc for="HttpContext">
		<summary>
			<para> Encapsulates all HTTP-specific information about an individual HTTP request.</para>
		</summary>
		<remarks>
			<para>Classes that inherit the <see cref="System.Web.IHttpModule"/> and <see cref="System.Web.IHttpHandler"/> interfaces are provided a reference to an <see cref="System.Web.HttpContext"/> object for the 
   current HTTP request. The object provides access to the intrinsic <see cref="System.Web.HttpContext.Request"/>,
<see cref="System.Web.HttpContext.Response"/>, and <see cref="System.Web.HttpContext.Server"/> 
objects for
the request.</para>
		</remarks>
	</doc>
	<doc for="HttpContext.RewritePath1">
		<summary>
			<para>Assigns an internal rewrite path.</para>
		</summary>
		<param name="filePath"><para>The internal ReWrite path.</para></param>
		<param name=" pathInfo">Additional path information for a resource.</param>
		<param name=" queryString">The request query string.</param>
		<exception cref="System.Web.HttpException"><paramref name="filePath"/> is within the current application's root directory.</exception>
		<remarks>
			<para>The <see langword="filePath"/> does not include the
<see langword="pathInfo"/> trailer. For the 
   URL Http://www.microsoft.com/virdir/page.html/tail, the
<see langword="filePath"/> 
is Http://www.microsoft.com/virdir/page.html.
The <see langword="pathInfo"/>
is tail.</para>
		</remarks>
	</doc>
	<doc for="HttpContext.RewritePath">
		<overload>
			<para>Assigns an internal rewrite path.
   <see langword="RewritePath"/> allows for the URL that is requested to differ
      from the internal path to the resource. <see langword="RewritePath"/>
      is used in cookieless session state.</para>
		</overload>
		<summary>
			<para> Assigns an internal rewrite path.</para>
		</summary>
		<param name="path">The internal rewrite path.</param>
		<exception cref="HttpException"><paramref name="path"/> is within the current application's root directory.</exception>
		<example>
			<para>The following example </para>
			<codelink SampleID="HttpContext_RewritePath" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpContext.Application">
		<summary>
			<para> Gets the <see cref="System.Web.HttpApplicationState"/> object for the current
   HTTP request.
   </para>
		</summary>
		<value>
			<para> The <see cref="System.Web.HttpApplicationState"/> object for the current
   HTTP
   request.</para>
		</value>
		<keyword term="Application"/>
	</doc>
	<doc for="HttpContext.Trace">
		<summary>
			<para> Gets the <see cref="System.Web.TraceContext"/> object for the current HTTP
   response.</para>
		</summary>
		<value>
			<para>The <see cref="System.Web.TraceContext"/> object for the current HTTP response.</para>
		</value>
		<keyword term="Trace"/>
	</doc>
	<doc for="HttpContext.Session">
		<summary>
			<para> Gets the <see cref="System.Web.SessionState.HttpSessionState"/> instance for the current HTTP request.
   </para>
		</summary>
		<value>
			<para> The <see langword="HttpSessionState "/> object for the current HTTP request.</para>
		</value>
		<remarks>
			<para>The <see langword="HttpContext.Session"/> property provides programmatic 
   access to the properties and methods of
   the <see langword="HttpSessionState"/> class. Because ASP.NET pages contain
   a default reference to the <see langword="System.Web"/> namespace (which
   contains the <see langword="HttpContext"/> class), you can reference the
   members of <see langword="HttpContext"/> on an .aspx page without the fully
   qualified class reference to <see langword="HttpContext"/>. For example, you can
   use just <c>Session("SessionVariable1")</c> to get or set the value of the session
state variable <c>SessionVariable1</c>. If you want to use the members
of <see langword="HttpResponse"/> from an ASP.NET code-behind module,
however, you must include a reference to the <see langword="System.Web"/>
namespace in the module and also fully qualify the reference to the currently
active request/response context and the class
in <see langword="System.Web"/> you want to use. For example, in a
code-behind page you must specify the full name <c>HttpContext.Current.Session("SessionVariable1").</c></para>
		</remarks>
		<keyword term="Session"/>
	</doc>
	<doc for="HttpContext.Server">
		<summary>
			<para> Gets the <see cref="System.Web.HttpServerUtility"/> object
   that provides methods used
   in processing Web
   requests.</para>
		</summary>
		<value>
			<para> The <see cref="System.Web.HttpServerUtility"/> object for the current
   HTTP
   response.</para>
		</value>
		<remarks>
			<para>The <see langword="HttpContext.Server"/> property provides programmatic 
   access to the properties and methods of
   the <see langword="HttpServerUtility"/> class. Because ASP.NET pages contain
   a default reference to the <see langword="System.Web"/> namespace (which
   contains the <see langword="HttpContext"/> class), you can reference the
   members of <see langword="HttpContext"/> on an .aspx page without the fully
   qualified class reference to <see langword="HttpContext"/>. For example, you can
   use just <c>Server.CreateObject("MyCOMComponent")</c> to create an instance of a
COM object on the server. If you want to use the members of
<see langword="HttpServerUtility"/> from an ASP.NET code-behind module, however, 
you must include a reference to the <see langword="System.Web"/> namespace
in the module and also fully qualify the reference to the currently active
request/response context and the class in <see langword="System.Web"/> you
want to use. For example, in a code-behind page you must specify the full name
<c>HttpContext.Current.Server.CreateObject("MyCOMComponent").</c></para>
		</remarks>
		<keyword term="Server"/>
	</doc>
	<doc for="HttpContext.Request">
		<summary>
			<para> Gets the <see cref="System.Web.HttpRequest"/> object
   for the current HTTP request.</para>
		</summary>
		<value>
			<para> The <see cref="System.Web.HttpRequest"/> object for the current HTTP
   request.</para>
		</value>
		<remarks>
			<para>The <see langword="Request"/>
property provides programmatic access to the properties and methods of
the <see cref="System.Web.HttpRequest"/> class. Because ASP.NET pages contain a default
reference to the <see cref="System.Web"/> namespace (which contains
the <see langword="HttpContext"/> class), you can reference the members
of <see langword="HttpRequest"/> on an .aspx page without the
fully-qualified class reference to <see langword="HttpContext"/>. For example, you can use just <c>Request.Browser</c>
to get the capabilities of the client browser. If you want to use the
members of <see langword="HttpRequest"/> from an ASP.NET code-behind module,
however, you must include a reference to the <see langword="System.Web"/>
namespace in the module and also fully qualify the reference to the currently
active request/response context and the class in <see langword="System.Web"/> you
want to use. For example, in a
code-behind page you must specify the full name <c>HttpContext.Current.Request.Browser.</c></para>
		</remarks>
		<keyword term="Request"/>
	</doc>
	<doc for="HttpContext.Response">
		<summary>
			<para> Gets the <see cref="System.Web.HttpResponse"/> object
   for the current HTTP response.</para>
		</summary>
		<value>
			<para> The <see cref="System.Web.HttpResponse"/> object for the current
   response.</para>
		</value>
		<remarks>
			<para>The <see langword="Response"/> property provides
   programmatic access to the properties and methods of the <see cref="System.Web.HttpResponse"/> class.
   Because ASP.NET pages contain a default reference to the <see cref="System.Web"/> namespace (which
   contains the <see cref="System.Web.HttpContext"/> class), you can reference the members
   of <see langword="HttpContext"/> on an .aspx page without the
   fully-qualified class reference to <see langword="HttpContext"/>. For example,
   you can use just <c>Response.Write("some output")</c>
to write output to an HTTP output stream. If you want to use the members
of <see langword="HttpResponse"/> from an ASP.NET code-behind module,
however, you must include a reference to the <see langword="System.Web"/>
namespace in the module and also fully qualify the reference to the currently
active request/response context and the class in <see langword="System.Web"/> you
want to use. For example, in a code-behind page you must specify the
full name <c>HttpContext.Current.Response.Write("some
output")</c>.</para>
		</remarks>
		<keyword term="Response"/>
	</doc>
	<doc for="HttpContext.User">
		<summary>
			<para> Gets or sets security information for the current HTTP request.
      </para>
		</summary>
		<value>
			<para>Security information for the current HTTP request.</para>
		</value>
		<remarks>
			<para>Setting this property requires the <see langword="ControlPrincipal"/> flag to
   be set in <see cref="System.Security.Permissions.SecurityPermission.Flags"/>.</para>
			<para>The <see langword="HttpContext.User"/> property provides programmatic
access to the properties and methods of the <see langword="IPrincipal"/>
interface. Because ASP.NET pages contain a default reference to
the <see langword="System.Web"/> namespace (which contains
the <see langword="HttpContext"/> class), you can reference the members
of <see langword="HttpContext"/> on an .aspx page without the fully
qualified class reference to <see langword="HttpContext"/>. For example, you can
use just <c>User.Identity.Name</c> to get the name of the user on whose behalf the
current process is running. If you want to use the members
of <see langword="IPrincipal"/> from an ASP.NET code-behind module, however,
you must include a reference to the <see langword="System.Web"/> namespace
in the module and also fully qualify the reference to the currently active
request/response context and the class in <see langword="System.Web"/> you
want to use. For example, in a code-behind page you must specify the full name
<c>HttpContext.Current.User.Identity.Name</c>.</para>
		</remarks>
		<keyword term="User"/>
	</doc>
	<doc for="HttpContext.Cache">
		<summary>
			<para> Gets the <see cref="System.Web.Caching.Cache"/> object for the current HTTP request.
   </para>
		</summary>
		<value>
			<para>The <see cref="System.Web.Caching.Cache"/> object for the current HTTP request.</para>
		</value>
		<keyword term="Cache"/>
	</doc>
</docs>
