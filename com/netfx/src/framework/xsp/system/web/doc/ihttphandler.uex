<docs>
	<doc for="IHttpHandler.IsReusable">
		<summary>
			<para> Gets a value indicating whether another request can use 
      the <see cref="System.Web.IHttpHandler"/>
      instance.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the <see langword="IHttpHandler "/> instance is
   reusable; otherwise, <see langword="false"/>
   .</para>
		</value>
		<remarks>
			<para> You explicitly set the <see langword="IsReusable "/> property to <see langword="true "/>or <see langword="false "/>by code you provide that overrides the
<see langword="IsReusable "/> 
property accessor.</para>
		</remarks>
		<example>
			<para>For a code example, see the Example section of the
      documentation for the <see cref="System.Web.IHttpHandler.ProcessRequest"/>method.</para>
		</example>
	</doc><doc for="IHttpHandler">
		<summary>
			<para> Defines the contract that ASP.NET implements to synchronously process HTTP
      Web requests using custom HTTP handlers.</para>
		</summary>
		<remarks>
			<para>You can write custom HTTP handlers to process specific,
      predefined types of HTTP requests in any Common Language Specification (CLS)
      compliant language. Executable code defined in the <see langword="HttpHandler "/>
      classes, rather
      than conventional ASP or ASP.NET Web pages, responds to these specific requests.
      HTTP handlers give you a means of interacting with the low-level request
      and response services of the IIS Web server and provide functionality much
      like ISAPI extensions but with a simpler programming model. </para>
			<para> If your handler will access session state values, it 
      must implement the <see cref="System.Web.SessionState.IRequiresSessionState"/> interface (a marker
      interface with no methods).</para>
		</remarks>
	</doc>
	<doc for="IHttpHandler.ProcessRequest">
		<summary>
			<para> Enables processing of HTTP Web requests by a custom
   <see langword="HttpHandler "/>
   that implements the <see cref="System.Web.IHttpHandler"/> interface.
   </para>
		</summary>
		<param name="context">An <see cref="System.Web.HttpContext"/> object that provides references to the intrinsic server objects (for example, <see langword="Request"/>, <see langword="Response"/>, <see langword="Session"/>, and <see langword="Server"/>)<see langword=""/> used to service HTTP requests. </param>
		<remarks>
			<para> Place your custom <see langword="HttpHandler "/> code in the
<see langword="ProcessRequest "/>virtual 
   method as shown in the following
   example. </para>
		</remarks>
		<example>
			<para> The following
      example writes four lines of text to the HTTP output stream in response to a
      client request for a page named handler.aspx. All requests for handler.aspx are serviced
      by the MyHttpHandler class in the namespace HandlerExample contained in the assembly HandlerTest.dll.</para>
			<codelink SampleID="Classic IHttpHandler.ProcessRequest Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
