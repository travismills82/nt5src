<docs>
	<doc for="HttpPostedFile.FileName">
		<summary>
			<para> Gets the fully-qualified name of the file on the client's computer (for
       example "C:\MyFiles\Test.txt").</para>
		</summary>
		<value>
			<para>The name of the client's file.</para>
		</value>
		<example>
			<para>The following example assigns the name of an uploaded file (the first file in 
       the file collection) to a string variable.</para>
			<codelink SampleID="Classic HttpPostedFile.FileName Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpPostedFile.ContentType">
		<summary>
			<para> Gets the MIME content type of a file sent by a client.</para>
		</summary>
		<value>
			<para>The MIME content type of the uploaded file.</para>
		</value>
		<example>
			<para>The following example loops through all the files in the 
       uploaded file collection and takes action when the MIME type of a file is
    <see langword="US-ASCII"/>.</para>
			<codelink SampleID="Classic HttpPostedFile.ContentType Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpPostedFile.ContentLength">
		<summary>
			<para>Gets the size in bytes of an uploaded file.</para>
		</summary>
		<value>
			<para>The length of the file.</para>
		</value>
	</doc>
	<doc for="HttpPostedFile.InputStream">
		<summary>
			<para> Gets a <see cref="System.IO.Stream"/> object which points to an uploaded file to prepare for
    reading the contents of the file.</para>
		</summary>
		<value>
			<para>A <see cref="System.IO.Stream"/> pointing to a file.</para>
		</value>
		<example>
			<para>The following example reads the contents of the first file in the client's file collection into a byte array and
       copies the byte array to a string.</para>
			<codelink SampleID="Classic HttpPostedFile.InputStream Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpPostedFile.SaveAs">
		<summary>
			<para> Saves the contents of an uploaded file.</para>
		</summary>
		<param name="filename">The name of the saved file.</param>
		<remarks>
			<para>The maximum allowed uploaded file size is 8MB by default. Maximum file size
      can be specified in the machine.config or Web.config configuration files in the
   <see langword="maxRequestLength"/> attribute of the 
	<see topic="gngrfHttpRuntimeSection"/> element. The
      maximum file size for a specific page can be specified using
      the <see topic="gngrfLocationElement "/>
      element in a Web.config file.</para>
		</remarks>
		<example>
			<para>The following example saves all the files uploaded by the client to a folder named "C:\TempFiles" on the Web
      server's local disk.</para>
			<codelink SampleID="Classic HttpPostedFile.SaveAs Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpPostedFile">
		<summary>
			<para>Provides a way to access individual files that
      have been uploaded by a client.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.HttpFileCollection"/> class provides access to all the files uploaded from
   a client as a file collection. <see cref="System.Web.HttpPostedFile"/> provides properties and methods to get information
   on an individual file and to read and save the file. Files are uploaded in MIME
   multipart/form-data format and are buffered in server memory until explicitly saved to disk.</para>
			<para>The <see cref="System.Web.UI.HtmlControls.HtmlInputFile"/> control can be used to select and
upload files from a client.</para>
			<para>You can specify the maximum allowable upload file size in a
   machine.config or Web.config configuration file in the
<see langword="maxRequestLength"/> attribute of the <see topic="gngrfHttpRuntimeSection"/> 
element. The default is
4 megabytes.</para>
		</remarks>
	</doc>
</docs>
