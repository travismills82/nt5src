<docs>
	<doc for="HttpRequest.IsAuthenticated">
		<summary>
			<para> 
       Gets a
       value indicating whether the user has been authenticated.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if authenticated; otherwise 
 <see langword="false"/>.</para>
		</value>
		<example>
			<para> The following example takes action only if the user has 
       been
       authenticated.</para>
			<codelink SampleID="Classic HttpRequest.IsAuthenticated Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.PhysicalPath">
		<summary>
			<para> Gets the physical
       file
       system path corresponding to the requested URL.</para>
		</summary>
		<value>
			<para>The file system path of the current
       request.</para>
		</value>
		<example>
			<para> The following example assigns the actual file system path for the current 
       URL request to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.PhysicalPath Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ApplicationPoolID">
		<nodoc/>
		<internalonly/>
		<summary>
			<para> Gets the application pool ID for the current URL.</para>
		</summary>
		<value>
			<para>Application pool ID for the current URL.</para>
		</value>
		<example>
			<para> The following example assigns the Application Pool ID for the 
       currently executing application to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.ApplicationPoolID Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.Browser">
		<summary>
			<para> Gets information about the requesting client's browser
       capabilities.</para>
		</summary>
		<value>
			<para>An <see cref="System.Web.HttpBrowserCapabilities"/> object
    listing the capabilities of the client's browser.</para>
		</value>
		<example>
			<para>The following example sends a list of the browser's capabilities back to the client in an HTML 
       page.</para>
			<codelink SampleID="Classic HttpRequest.Browser Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.UserHostName">
		<summary>
			<para> Gets the DNS
       name of the remote client.</para>
		</summary>
		<value>
			<para>The DNS name of the remote client.</para>
		</value>
		<example>
			<para> The following example assigns the DNS name of the remote client to a string 
       variable.</para>
			<codelink SampleID="Classic HttpRequest.UserHostName Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.UserHostAddress">
		<summary>
			<para> Gets the IP
       host address of the remote client.</para>
		</summary>
		<value>
			<para>The IP address of the remote client.</para>
		</value>
		<example>
			<para> The following example assigns the IP address of the remote client to a 
       string variable.</para>
			<codelink SampleID="Classic HttpRequest.UserHostAddress Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.InputStream">
		<summary>
			<para> Gets the contents of the incoming HTTP entity
       body.</para>
		</summary>
		<value>
			<para>A <see cref="System.IO.Stream"/>
 object representing the contents of the
 incoming HTTP content body.</para>
		</value>
		<example>
			<para>This example copies the contents of an <see cref="System.Web.HttpRequest.InputStream"/> into a string.</para>
			<codelink SampleID="Classic HttpRequest.InputStream Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ConnectionID">
		<internalonly/>
		<nodoc/>
		<summary>
			<para> Gets the connection ID of the current request.</para>
		</summary>
		<value>
			<para>The ID of the current request.</para>
		</value>
		<example>
			<para> The following example assigns the value of 
       the content ID of the incoming request to a string variable. </para>
			<codelink SampleID="Classic HttpRequest.ConnectionID Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ClientCertificate">
		<summary>
			<para> Gets the current request's client security certificate.</para>
		</summary>
		<value>
			<para>An <see cref="System.Web.HttpClientCertificate"/> object containing information on client's security
    certificate settings.</para>
		</value>
		<example>
			<para> The following example sends the client's certificate 
       settings back to the client in an HTML
       page.</para>
			<codelink SampleID="Classic HttpRequest.ClientCertificate Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ContentLength">
		<summary>
			<para>Specifies the length, in bytes, of content sent by the client.</para>
		</summary>
		<value>
			<para>The length of content sent by the client.</para>
		</value>
		<example>
			<para>The following example assigns the value representing the content length 
      of the incoming request to an integer variable.</para>
			<codelink SampleID="Classic HttpRequest.ContentLength Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ApplicationPath">
		<summary>
			<para> Gets the ASP.NET
      application's virtual application root path on the server.</para>
		</summary>
		<value>
			<para>The virtual path of the current application.</para>
		</value>
		<example>
			<para> The following example assigns the virtual application root path for the
      current URL request to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.ApplicationPath Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.PhysicalApplicationPath">
		<summary>
			<para> Gets the physical file system path
      of the currently executing server application's root directory.</para>
		</summary>
		<value>
			<para>The file system path of the current application's root
      directory.</para>
		</value>
		<example>
			<para> The following example assigns the physical file system path for
      the currently executing application to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.PhysicalApplicationPath Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.RequestType">
		<summary>
			<para>Gets or sets the HTTP data transfer method 
      (<see langword="GET"/> or <see langword="POST"/> ) used by
      the client.</para>
		</summary>
		<value>
			<para> A String representing the HTTP invocation type sent by the
      client.</para>
		</value>
		<example>
			<para> The following example assigns a value representing the HTTP request type to a
      string variable.</para>
			<codelink SampleID="Classic HttpRequest.RequestType Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.TotalBytes">
		<summary>
			<para> Gets
      the number of bytes in the current input stream.</para>
		</summary>
		<value>
			<para>The number of bytes in the input stream.</para>
		</value>
	</doc>
	<doc for="HttpRequest.UserAgent">
		<summary>
			<para> Gets the raw user agent
      string of the client browser.</para>
		</summary>
		<value>
			<para>The raw user agent string of the
      client browser.</para>
		</value>
		<example>
			<para> The following example assigns the type identification of
      the requesting browser to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.UserAgent Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.UrlReferrer">
		<summary>
			<para> Gets information about the URL of the client's
      previous request that linked to the current URL.</para>
		</summary>
		<value>
			<para>A <see cref="System.Uri"/>
object.</para>
		</value>
		<example>
			<para>The following example writes out two properties of the URL that referred the
      client to the current application.</para>
			<codelink SampleID="Classic HttpRequest.UrlReferrer Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.AcceptTypes">
		<summary>
			<para> Gets a string array of client-supported MIME accept types.</para>
		</summary>
		<value>
			<para>A string array of client-supported MIME accept types.</para>
		</value>
		<example>
			<para> The following example captures the multiple values
      returned by the <see langword="AcceptTypes"/> property into an object variable and writes the
      number and name of each <see langword="AcceptType"/>
      to a separate line of HTTP output.</para>
			<codelink SampleID="Classic HttpRequest.AcceptTypes Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.IsSecureConnection">
		<summary>
			<para> Gets a value indicting whether the HTTP connection uses secure sockets (that is, HTTPS).</para>
		</summary>
		<value>
			<para><see langword="true"/> if the connection is secure; otherwise,
<see langword="false"/>.</para>
		</value>
		<example>
			<para> The following example assigns the value of the <see langword="IsSecureConnection"/> property to a
<see langword="Boolean "/>
variable.</para>
			<codelink SampleID="Classic HttpRequest.IsSecureConnection Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.UserLanguages">
		<summary>
			<para> Gets a sorted
      string array of client language preferences.</para>
		</summary>
		<value>
			<para> A sorted string array of client language preferences.</para>
		</value>
		<example>
			<para>The following example captures the multiple values
      returned by the <see langword="UserLanguages"/>
      property into a string array then writes each individual user language
      name to a separate line of HTTP output.</para>
			<codelink SampleID="Classic HttpRequest.UserLanguages Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.Files">
		<summary>
			<para> Gets
      the collection of client-uploaded files (Multipart MIME format).</para>
		</summary>
		<value>
			<para>An <see cref="System.Web.HttpFileCollection"/>
object
representing a collection of client-uploaded files.</para>
		</value>
		<remarks>
			<para> The file collection is populated only when the HTTP
      request Content-Type is <c>multipart/form-data</c>
   .</para>
		</remarks>
		<example>
			<para> The following example writes out the names of all files
      in the <see langword="Files"/>
      collection.</para>
			<codelink SampleID="Classic HttpRequest.Files Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.BinaryRead">
		<summary>
			<para>Performs a binary read of a specified number of bytes from the current input
      stream.</para>
		</summary>
		<param name="count">Number of bytes to read.</param>
		<returns>
			<para>A <see langword="byte"/> array.</para>
		</returns>
		<exception cref="System.ArgumentException">The value of <paramref name="count "/>is 0 or greater than the number of bytes available.</exception>
		<remarks>
			<para>The <see langword="BinaryRead "/>method is provided for compatibility with previous versions of ASP.</para>
		</remarks>
	</doc><doc for="HttpRequest.HttpMethod">
		<summary>
			<para> Gets the HTTP data transfer method (such as
   <see langword="GET"/>, <see langword="POST"/>, or <see langword="HEAD"/> ) used by the client.</para>
		</summary>
		<value>
			<para> The HTTP data transfer method
      used by the client.</para>
		</value>
		<example>
			<para> The following example assigns a value representing the
   <see langword="HttpMethod"/>
   of the HTTP request to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.HttpMethod Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.Params">
		<summary>
			<para>Gets a combined collection of <see cref="System.Web.HttpRequest.QueryString"/>, <see cref="System.Web.HttpRequest.Form"/>, <see cref="System.Web.HttpRequest.ServerVariables"/>, and <see cref="System.Web.HttpRequest.Cookies"/> 
items.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.NameValueCollection"/> object.</para>
		</value>
	</doc><doc for="HttpRequest.Url">
		<summary>
			<para> Gets Information about the URL of the current request.</para>
		</summary>
		<value>
			<para>A <see cref="System.Uri"/>
object containing
information regarding the URL of the current request.</para>
		</value>
		<example>
			<para> The following example assigns the <see cref="System.Uri"/> object of the current
   request to an object variable and writes two properties of the URL object to
   the HTTP output.</para>
			<codelink SampleID="Classic HttpRequest.Url Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.QueryString">
		<summary>
			<para>Gets the collection of HTTP query string variables.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.NameValueCollection"/><see langword=" "/>
containing
the
collection of query string variables sent by the client.</para>
		</value>
		<example>
			<para>The following example accepts the query string from a
      client form (with a <see langword="GET "/>method attribute) and writes out
      the names and values of each named input element on the form. This code would be
      placed on the ASP.NET page referenced by the form's <see langword=" ACTION "/> attribute.</para>
			<codelink SampleID="Classic HttpRequest.QueryString Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.Form">
		<summary>
			<para> Gets a collection of form variables.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.NameValueCollection"/><see langword=" "/>
representing a collection of form variables.</para>
		</value>
		<remarks>
			<para> Populated when the HTTP request Content-Type is
      either <c>application/x-www-form-urlencoded</c> or <c>multipart/form-data</c>
   .</para>
		</remarks>
		<example>
			<para>The following example captures a client's form collection and writes the name of
      each form to HTTP output.</para>
			<codelink SampleID="Classic HttpRequest.Form Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.Headers">
		<summary>
			<para> Gets a collection of HTTP headers.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.NameValueCollection"/> of headers.</para>
		</value>
		<example>
			<para>The following example writes out the names and values of all headers in the HTTP request.</para>
			<codelink SampleID="Classic HttpRequest.Headers Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.ServerVariables">
		<summary>
			<para> Gets a collection of Web server variables.</para>
		</summary>
		<value>
			<para>A <see cref="System.Collections.Specialized.NameValueCollection"/> of server variables.</para>
		</value>
		<example>
			<para>The following example writes out the names and values of all named server
      variables.</para>
			<codelink SampleID="Classic HttpRequest.ServerVariables Example" SnippetID="1"/>
		</example>
	</doc><doc for="HttpRequest.MapPath">
		<overload>
			<para> Maps the virtual path in the requested URL to a physical path on the server for the
      current request.</para>
		</overload>
		<summary>
			<para>Maps the specified virtual path to a physical path.</para>
		</summary>
		<param name="virtualPath">The virtual path (absolute or relative) for the current request.</param>
		<returns>
			<para>The physical path on the server specified by <paramref name="virtualPath"/>.</para>
		</returns>
		<exception cref="System.Web.HttpException">Attempted to map the path when there is no <see cref="System.Web.HttpContext"/> object defined for the request.</exception>
	</doc><doc for="HttpRequest.MapPath1">
		<summary>
			<para>Maps the specified virtual path to a physical path.</para>
		</summary>
		<param name="virtualPath">The virtual path (absolute or relative) for the current request.</param>
		<param name="baseVirtualDir">The virtual base directory path used for relative resolution.</param>
		<param name="allowCrossAppMapping">If <see langword="true"/>, the <paramref name="virtualPath "/> may belong to another application.</param>
		<returns>
			<para>The physical path on the server.</para>
		</returns>
		<exception cref="System.Web.HttpException"><paramref name="allowCrossMapping "/>is <see langword="false"/>and <paramref name="virtualPath"/> belongs to another application.</exception>
		<exception cref="System.Web.HttpException">Attempted to map the path when there is no <see cref="System.Web.HttpContext"/> object defined for the request.</exception>
	</doc><doc for="HttpRequest.CurrentExecutionFilePath">
		<summary>
			<para>Gets the virtual path of the current request.</para>
		</summary>
		<value>
			<para>The virtual path of the current request.</para>
		</value>
		<remarks>
			<para><see cref="System.Web.HttpRequest.CurrentExecutionFilePath"/> returns the correct file path to
   the currently executing page in redirect scenarios such as <see cref="System.Web.HttpServerUtility.Execute"/>
   and <see cref="System.Web.HttpServerUtility.Transfer"/> When the client is redirected to
   another page, <see cref="System.Web.HttpRequest.FilePath"/> returns the
   path to the original page; <see cref="System.Web.HttpRequest.CurrentExecutionFilePath"/> returns the path to the child
   page.</para>
		</remarks>
	</doc>
	<doc for="HttpRequest.HttpRequest">
		<internalonly/>
		<summary>
			<para>Initializes an <see cref="System.Web.HttpRequest"/> object.</para>
		</summary>
		<param name="filename">The name of the file associated with the request.</param>
		<param name=" url">Information regarding the URL of the current request.</param>
		<param name=" queryString">The entire query string sent with the request (everything after the'?').</param>
		<remarks>
			<para>This member supports the .NET Framework infrastructure and is not intended to 
      be used directly from your code.</para>
			<para>The methods and properties of the <see langword="HttpRequest"/> class are 
   exposed through ASP.NET's intrinsic <see cref="System.Web.HttpContext.Request"/> object.</para>
		</remarks>
	</doc>
	<doc for="HttpRequest">
		<summary>
			<para> Enables ASP.NET to read the HTTP values sent by
      a client during a Web request.</para>
		</summary>
		<remarks>
			<para>The methods and properties of the <see langword="HttpRequest"/> 
class are exposed through the <see langword="Request"/> property of the <see cref="System.Web.HttpApplication"/>,
<see cref="System.Web.HttpContext"/>, 
<see cref="System.Web.UI.Page"/>, 
and <see cref="System.Web.UI.UserControl"/> classes.</para>
		</remarks>
	</doc>
	<doc for="HttpRequest.Cookies">
		<summary>
			<para> Gets a collection of cookies sent by the client.</para>
		</summary>
		<value>
			<para>An <see cref="System.Web.HttpCookieCollection"/> object
   representing
   the client's cookie variables.</para>
		</value>
		<remarks>
			<para>ASP.NET includes two intrinsic cookie collections. The 
      collection accessed through the <see cref="System.Web.HttpRequest.Cookies"/> collection of <see cref="System.Web.HttpRequest"/> contains
      cookies transmitted by the client to the server in the Cookie header. The
      collection accessed through the <see cref="System.Web.HttpResponse.Cookies"/> collection of <see cref="System.Web.HttpResponse"/> contains new cookies created on the server and
      transmitted to the client in the <see langword="Set-Cookie "/>header.</para>
		</remarks>
		<example>
			<para>The following example loops through all cookies sent by the client and sends the name,
      expiration date, security parameter, and values of each cookie to the HTTP
      output.</para>
			<codelink SampleID="Classic HttpRequest.Cookies Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.Filter">
		<summary>
			<para>Gets or sets the filter to use when reading the current input stream.</para>
		</summary>
		<value>
			<para>A <see cref="System.IO.Stream"/> object to be used as the filter.</para>
		</value>
		<exception cref="System.Web.HttpException">Invalid <see langword="Stream"/> object.</exception>
		<example>
			<para>The following example creates two new classes, QQQ1 and QQQ2 that
      filter the <see cref="System.Web.HttpRequest.InputStream"/> . Put the classes into the Global.asa file
      in an ASP.Net application's directory so that all input for all aspx
      pages in the application will be filtered. </para>
			<codelink SampleID="System.Web.HttpRequest.Filter" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ValidateInput">
		<summary>
			<para>Validates data submitted by a client browser and raises 
      an exception if potentially dangerous data is present.</para>
		</summary>
		<exception cref="HttpRequestValidationException">Potentially dangerous data was received from the client.</exception>
		<remarks>
			<para>If the validation feature is enabled by page 
      directive or configuration, this method is called during the Page's
      ProcessRequest processing phase. <see langword="ValidateInput"/> can
      be called by your code if the validation feature is not enabled. Request validation works
      by checking all input data against a hard-coded list of potentially dangerous
      data.</para>
			<para><see cref="System.Web.HttpRequest.QueryString"/>, <see cref="System.Web.HttpRequest.Form"/>, and <see cref="System.Web.HttpRequest.Cookies"/> 
input data is checked during request validation.</para>
		</remarks>
	</doc>
	<doc for="HttpRequest.MapImageCoordinates">
		<summary>
			<para> Maps an incoming image-field form parameter to appropriate x/y
      coordinate values.</para>
		</summary>
		<param name="imageFieldName"> The name of the form image map.</param>
		<returns>
			<para>A two-dimensional array of <see langword="integers"/>.</para>
		</returns>
	</doc>
	<doc for="HttpRequest.SaveAs">
		<summary>
			<para>Saves an HTTP request to disk.</para>
		</summary>
		<param name="filename"> The physical drive path.</param>
		<param name="includeHeaders">A <see langword="Boolean"/> value specifying whether an HTTP header should be saved to disk.</param>
		<remarks>
			<para>Saving the request context to disk can be useful in debugging.</para>
		</remarks>
	</doc>
	<doc for="HttpRequest.Path">
		<summary>
			<para> Gets
      the virtual
      path of the current request.</para>
		</summary>
		<value>
			<para>The
      virtual path of the current
      request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.HttpRequest.FilePath"/> does not include the <see cref="System.Web.HttpRequest.PathInfo"/> 
trailer. For the URL Http://www.contoso.com/virdir/page.html/tail
, the
<see langword="FilePath "/>
is Http://www.contoso.com/virdir/page.html.</para>
		</remarks>
		<example>
			<para> The following example assigns the virtual path for the current request
      to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.Path Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.FilePath">
		<summary>
			<para> Gets the virtual path of the current request.</para>
		</summary>
		<value>
			<para>The virtual path of the current request.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.HttpRequest.FilePath"/> does not include the <see cref="System.Web.HttpRequest.PathInfo"/> 
trailer. For the URL Http://www.contoso.com/virdir/page.html/tail
, the
<see langword="FilePath "/>is Http://www.contoso.com/virdir/page.html
. </para>
		</remarks>
		<example>
			<para> The following example assigns the server's virtual directory path
      for the current request to a string variable.</para>
			<codelink SampleID="SystemWebHttpRequestFilePath" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.PathInfo">
		<summary>
			<para>Gets additional path information for a resource with a
      URL extension.</para>
		</summary>
		<value>
			<para> Additional path information for a resource.</para>
		</value>
		<remarks>
			<para>For the URL Http://www.contoso.com/virdir/page.html/tail,
      the <see langword="PathInfo"/> value is /tail.</para>
		</remarks>
		<example>
			<para> The following example assigns the URL resource extension to a string
      variable.</para>
			<codelink SampleID="Classic HttpRequest.PathInfo Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.RawUrl">
		<summary>
			<para> Gets the raw URL of the current request.</para>
		</summary>
		<value>
			<para>The raw
      URL of the current request.</para>
		</value>
		<remarks>
			<para>The raw URL is defined as the part of the URL following the domain information. In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL
      is /articles/recent.aspx. The raw URL includes
      the query string, if present.</para>
		</remarks>
		<example>
			<para> The following example assigns the raw URL string of
      the current request to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.RawUrl Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.this">
		<summary>
			<para> Gets the specified object in the <see cref="System.Web.HttpRequest.Cookies"/>,
<see cref="System.Web.HttpRequest.Form"/>, <see cref="System.Web.HttpRequest.QueryString"/> or <see cref="System.Web.HttpRequest.ServerVariables"/> 
collections.</para>
		</summary>
		<param name="key">The name of the collection member to get.</param>
		<value>
			<para>The <see langword="QueryString"/>, <see langword="Form"/>,
<see langword="Cookies"/>, or <see langword="ServerVariables"/> 
collection member specified in the <paramref name="key"/> parameter.</para>
		</value>
	</doc>
	<doc for="HttpRequest.ContentType">
		<summary>
			<para> Gets or sets the MIME content type of the incoming request.</para>
		</summary>
		<value>
			<para>A string representing the MIME content type of the incoming request. For example,
      "text/html".</para>
		</value>
		<example>
			<para> The following example assigns the value representing the content type of
      the incoming request to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.ContentType Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="HttpRequest.ContentEncoding">
		<summary>
			<para> Gets or sets the character set of the entity-body.</para>
		</summary>
		<value>
			<para>An <see cref="System.Text.Encoding"/>
object
representing the client's character set.</para>
		</value>
		<remarks>
			<para> Default <see langword="ContentEncoding "/>can be specified in an ASP.NET configuration file in the <see topic="gngrfGlobalizationSection"/>
section. If <see langword="ContentEncoding "/>
is specified by the client, the default
configuration settings are overridden.</para>
		</remarks>
		<example>
			<para> The following example assigns a value representing the description of
      the current HTTP Encoding to a string variable.</para>
			<codelink SampleID="Classic HttpRequest.ContentEncoding Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
