<docs>
	<doc for="HttpWorkerRequest.ReasonResponseCacheMiss">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.ReasonFileHandleCacheMiss">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.ReasonCachePolicy">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.ReasonCacheSecurity">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.ReasonClientDisconnect">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.ReasonDefault">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetBytesRead">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetClientCertificate">
		<summary>
			<para>Defines the base worker class used by ASP.NET managed code for request 
       processing.</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetClientCertificateValidFrom">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetClientCertificateValidUntil">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetClientCertificateBinaryIssuer">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetClientCertificateEncoding">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetClientCertificatePublicKey">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HttpWorkerRequest.GetVirtualPathToken">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="HttpWorkerRequest.GetConnectionID">
		<summary>
			<para>When overridden in a derived class, returns the ID of the current connection.</para>
		</summary>
		<returns>
			<para>Always returns 0.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetUrlContextID">
		<summary>
			<para>When overridden in a derived class, returns the context ID of the current connection.</para>
		</summary>
		<returns>
			<para>Always returns 0.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetQueryStringRawBytes">
		<summary>
			<para>When overridden in a derived class, returns the response query string as an array of bytes.</para>
		</summary>
		<returns>
			<para>An array of bytes containing the response.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetAppPoolID">
		<summary>
			<para>When overridden in a derived class, returns the application pool ID for the current URL.</para>
		</summary>
		<returns>
			<para>Always returns null.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetRequestReason">
		<summary>
			<para>When overridden in a derived class, returns the reason for the request.</para>
		</summary>
		<returns>
			<para> Reason code. The default is ReasonResponseCacheMiss.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.HeadersSent">
		<summary>
			<para>Returns a value indicating whether HTTP response headers 
      have been sent to the client for the current request.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if HTTP response headers have been sent to the client; 
   otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.IsClientConnected">
		<summary>
			<para>Returns a value indicating whether the client 
      connection is still active.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the client connection is still active; otherwise, 
<see langword="false"/>.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.HasEntityBody">
		<summary>
			<para>Returns a value indicating whether the 
      request contains body data.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the request contains body data; otherwise, 
<see langword="false"/>.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.IsEntireEntityBodyIsPreloaded">
		<summary>
			<para>Returns a value indicating whether all request data 
      is available and no further reads from the client are required.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if all request data is available; otherwise, 
<see langword="false"/>.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.SendKnownResponseHeader">
		<summary>
			<para>Adds a standard HTTP header to the response.</para>
		</summary>
		<param name="index">The header index. For example, <see cref="System.Web.HttpWorkerRequest.HeaderContentLength"/>. </param>
		<param name=" value">The value of the header.</param>
	</doc><doc for="HttpWorkerRequest.SendResponseFromMemory">
		<overload>
			<para>Adds the contents of a memory block to the response.</para>
		</overload>
		<summary>
			<para>Adds the specified number of bytes from a byte array to the response.</para>
		</summary>
		<param name="data">The byte array to send.</param>
		<param name=" length">The number of bytes to send, starting at the first byte.</param>
	</doc><doc for="HttpWorkerRequest.SendResponseFromMemory2">
		<summary>
			<para>Adds the specified number of bytes from a block of memory 
      to the response.</para>
		</summary>
		<param name=" data">An unmanaged pointer to the block of memory.</param>
		<param name="length">The number of bytes to send.</param>
	</doc><doc for="HttpWorkerRequest.GetAppPath">
		<summary>
			<para> Returns the virtual path to the
      currently executing server application.</para>
		</summary>
		<returns>
			<para>The virtual path of the current application.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.EndOfRequest">
		<summary>
			<para>Used by the runtime to notify the <see cref="System.Web.HttpWorkerRequest"/> 
that request processing for the current request is complete.</para>
		</summary>
	</doc><doc for="HttpWorkerRequest.CloseConnection">
		<summary>
			<para>Terminates the connection with the client.</para>
		</summary>
	</doc><doc for="HttpWorkerRequest.HeaderCacheControl">
		<summary>
			<para>The index that represents the HTTP
   <see langword="Cache-Control"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderConnection">
		<summary>
			<para> Specifies the index number for the
   <see langword="Connection"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderDate">
		<summary>
			<para>Specifies the index number for
      the <see langword="Date"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderKeepAlive">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Keep-Alive"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderPragma">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Pragma"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderTrailer">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Trailer"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderTransferEncoding">
		<summary>
			<para>Specifies the index number for
      the <see langword="Transfer-Encoding"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderUpgrade">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Upgrade"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderVia">
		<summary>
			<para>Specifies the index number for the <see langword="Via"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderWarning">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Warning"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentLength">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Content-Length"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentType">
		<summary>
			<para>Specifies the index number for
      the <see langword="Content-Type"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentEncoding">
		<summary>
			<para>Specifies the index number for the <see langword="Content-Encoding"/> HTTP 
   header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in the
   <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentLanguage">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Content-Language"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentLocation">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Content-Location"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentMd5">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Content-MD5"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderContentRange">
		<summary>
			<para>Specifies the index number for the 
   <see langword="Content-Range"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderExpires">
		<summary>
			<para>Specifies the index number for
      the <see langword="Expires"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderLastModified">
		<summary>
			<para>Specifies the index number for
      the <see langword="Last-Modified"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAccept">
		<summary>
			<para>Specifies the index number for the
   <see langword="Accept"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAcceptCharset">
		<summary>
			<para>Specifies the index number for
      the <see langword="Accept-Charset"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAcceptEncoding">
		<summary>
			<para>Specifies the index number for
      the <see langword="Accept-Encoding"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAcceptLanguage">
		<summary>
			<para>Specifies the index number for
      the <see langword="Accept-Language"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAuthorization">
		<summary>
			<para>Specifies the index number for
      the <see langword="Authorization"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderCookie">
		<summary>
			<para>Specifies the index number for
      the <see langword="Cookie"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderExpect">
		<summary>
			<para>Specifies the index number for
      the <see langword="Except"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderFrom">
		<summary>
			<para>Specifies the index number for
      the <see langword="From"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderHost">
		<summary>
			<para>Specifies the index number for
      the <see langword="Host"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderIfMatch">
		<summary>
			<para>Specifies the index number for
      the <see langword="If-Match"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderIfModifiedSince">
		<summary>
			<para>Specifies the index number for
      the <see langword="If-Modified-Since"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderIfNoneMatch">
		<summary>
			<para>Specifies the index number for
      the <see langword="If-None-Match"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderIfRange">
		<summary>
			<para>Specifies the index number for
      the <see langword="If-Range"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderIfUnmodifiedSince">
		<summary>
			<para>Specifies the index number for
      the <see langword="If-Unmodified-Since"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderMaxForwards">
		<summary>
			<para>Specifies the index number for
      the <see langword="Max-Forwards"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderProxyAuthorization">
		<summary>
			<para>Specifies the index number for
      the <see langword="Proxy-Authorization"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderReferer">
		<summary>
			<para>Specifies the index number for
      the <see langword="Referer"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderRange">
		<summary>
			<para>Specifies the index number for
      the <see langword="Range"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderTe">
		<summary>
			<para>Specifies the index number for
      the <see langword="TE"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderUserAgent">
		<summary>
			<para>Specifies the index number for the <see langword="User-Agent "/>HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAcceptRanges">
		<summary>
			<para>Specifies the index number for
      the <see langword="Accept-Ranges"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAge">
		<summary>
			<para>Specifies the index number for
      the <see langword="Age"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderEtag">
		<summary>
			<para>Specifies the index number for
      the <see langword="ETag"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderLocation">
		<summary>
			<para>Specifies the index number for
      the <see langword="Location"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderProxyAuthenticate">
		<summary>
			<para>Specifies the index number for
      the <see langword="Proxy-Authenticate "/>HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderRetryAfter">
		<summary>
			<para>Specifies the index number for
      the <see langword="Retry-After"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderServer">
		<summary>
			<para>Specifies the index number for
      the <see langword="Server"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderSetCookie">
		<summary>
			<para>Specifies the index number for
      the <see langword="Set-Cookie "/>HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderVary">
		<summary>
			<para>Specifies the index number for
      the <see langword="Vary"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderWwwAuthenticate">
		<summary>
			<para>Specifies the index number for
      the <see langword="WWW-Authenticate "/>HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.GetHttpVersion">
		<summary>
			<para>Provides access to the HTTP version of the request (for example, "HTTP/1.1").</para>
		</summary>
		<returns>
			<para>The HTTP version returned in the request header.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetFilePath">
		<summary>
			<para>When overridden in a derived class, returns the physical path to the requested URI.</para>
		</summary>
		<returns>
			<para>The path to the requested URI.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetFilePathTranslated">
		<summary>
			<para> Returns the physical file path to the requested URI (and translates it from virtual
      path to physical path: for example, "/proj1/page.aspx" to "c:\dir\page.aspx") </para>
		</summary>
		<returns>
			<para>The translated physical file path to the requested URI.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.MachineConfigPath">
		<summary>
			<para>Gets the full physical path to the Machine.config file.</para>
		</summary>
		<value>
			<para>The physical path to the Machine.config file.</para>
		</value>
	</doc><doc for="HttpWorkerRequest.MachineInstallDirectory">
		<summary>
			<para> Gets the physical path to the directory where the
      ASP.NET binaries are installed.</para>
		</summary>
		<value>
			<para>The physical directory to the ASP.NET binary files.</para>
		</value>
	</doc><doc for="HttpWorkerRequest.FlushResponse">
		<summary>
			<para>Sends all pending response data to the client.</para>
		</summary>
		<param name="finalFlush"><see langword="true"/> if this is the last time response data will be flushed; otherwise, <see langword="false"/> . </param>
	</doc><doc for="HttpWorkerRequest.GetKnownRequestHeaderIndex">
		<summary>
			<para>Returns the index number of the specified HTTP request header.</para>
		</summary>
		<param name="header">The name of the header.</param>
		<returns>
			<para>The index number of the HTTP request 
      header specified in the <paramref name="header"/> parameter.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetKnownRequestHeaderName">
		<summary>
			<para>Returns the name of the specified HTTP request header.</para>
		</summary>
		<param name="index">The index number of the header.</param>
		<returns>
			<para>The name of the HTTP request header specified in the 
   <paramref name="index"/> parameter.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetKnownResponseHeaderIndex">
		<summary>
			<para>Returns the index number of the specified HTTP response header.</para>
		</summary>
		<param name="header">The name of the HTTP header.</param>
		<returns>
			<para>The index number of the HTTP response header specified
      in the <paramref name="header"/> parameter.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetRawUrl">
		<summary>
			<para> Returns the URL path contained in the request header with the query string appended.</para>
		</summary>
		<returns>
			<para>The raw URL path of the request header.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetLocalPort">
		<summary>
			<para>Provides access to the specified member of the request header.</para>
		</summary>
		<returns>
			<para>The server port number returned in the request header.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetRemoteName">
		<summary>
			<para>When overridden in a derived class, returns the name of the client computer.</para>
		</summary>
		<returns>
			<para>The name of the client computer.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetServerName">
		<summary>
			<para>When overridden in a derived class, returns the name of the local server.</para>
		</summary>
		<returns>
			<para>The name of the local server.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetProtocol">
		<summary>
			<para>When overridden in a derived class, returns the HTTP protocol (HTTP or HTTPS).</para>
		</summary>
		<returns>
			<para>HTTPS if the <see cref="System.Web.HttpWorkerRequest.IsSecure"/> method is <see langword="true"/>, otherwise HTTP.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetPathInfo">
		<summary>
			<para> Returns additional path information for a resource with 
      a URL extension. That is, for the path /virdir/page.html/tail, the
   <see langword="GetPathInfo"/>
   
   value is /tail. </para>
		</summary>
		<returns>
			<para>Additional path information for a resource.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetUriPath">
		<summary>
			<para> Returns the virtual path to the requested URI.</para>
		</summary>
		<returns>
			<para> The path to the requested URI.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetUserToken">
		<summary>
			<para>When overridden in a derived class, returns the client's impersonation token.</para>
		</summary>
		<returns>
			<para>A value representing the client's impersonation token. The default is 0.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.IsSecure">
		<summary>
			<para> Returns a value indicating whether the connection is secure (using SSL).</para>
		</summary>
		<returns>
			<para><see langword="true "/>if the connection is secure; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.ReadEntityBody">
		<summary>
			<para>Reads request data from the client (when not preloaded).</para>
		</summary>
		<param name="buffer">The byte array to read data into.</param>
		<param name=" size">The maximum number of bytes to read.</param>
		<returns>
			<para>The number of bytes read.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetUnknownRequestHeader">
		<summary>
			<para>Returns a nonstandard HTTP request header value.</para>
		</summary>
		<param name="name">The header name.</param>
		<returns>
			<para>The header value.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetServerVariable">
		<summary>
			<para> Returns a single server variable from
      a dictionary of server variables associated with the request.</para>
		</summary>
		<param name="name">The name of the requested server variable.</param>
		<returns>
			<para>The requested server variable.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.SendCalculatedContentLength">
		<summary>
			<para>Adds a <see langword="Content-Length"/> HTTP
   header to the response.</para>
		</summary>
		<param name="contentLength">The length of the response, in bytes. </param>
		<remarks>
			<para>When the content length is not explicitly set, this method allows
   <see langword="HttpWorkerRequest"/> to add a <see langword="Content-Length"/> HTTP header to
      the response.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.SendUnknownResponseHeader">
		<summary>
			<para>Adds a nonstandard HTTP header to the response.</para>
		</summary>
		<param name="name">The name of the header to send.</param>
		<param name=" value">The value of the header.</param>
	</doc><doc for="HttpWorkerRequest.GetQueryString">
		<summary>
			<para> Returns the query string specified in the request URL.</para>
		</summary>
		<returns>
			<para> The request query string.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetHttpVerbName">
		<summary>
			<para> Returns the specified member of the request header.</para>
		</summary>
		<returns>
			<para>The HTTP verb returned in the request header.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetRemoteAddress">
		<summary>
			<para> Provides access to the specified member of the request header.</para>
		</summary>
		<returns>
			<para> The client's IP address.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetRemotePort">
		<summary>
			<para> Provides access to the specified member of the request header.</para>
		</summary>
		<returns>
			<para> The client's HTTP port number.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetLocalAddress">
		<summary>
			<para>Provides access to the specified member of the request header.</para>
		</summary>
		<returns>
			<para>The server IP address returned in the request header.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.EndOfSendNotification">
		<summary>
			<para>Represents the method that notifies callers when sending
      of the response is complete.</para>
		</summary>
		<param name="wr">The current <see cref="System.Web.HttpWorkerRequest"/>.</param>
		<param name=" extraData">Any additional data needed to process the request.</param>
		<remarks>
			<para>The host can use this notification to implement buffer recycling.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest">
		<summary>
			<para>This abstract class defines the base worker methods and enumerations used by ASP.NET managed code to process requests.</para>
		</summary>
		<remarks>
			<para>In most cases, your code will not deal
      with <see langword="HttpWorkerRequest"/> directly because request and
      response data are exposed through the <see cref="System.Web.HttpRequest"/> and <see cref="System.Web.HttpResponse"/> classes. Some internal
      ASP.NET classes extend this class. If your code implements its own hosting
      environment, it will need to extend this class to call the <see cref="System.Web.HttpRuntime.ProcessRequest"/> method. In addition, your code could create a derived
      class for the purpose of child-request execution within a given application in
      order to pass its instance to <see cref="System.Web.HttpRuntime.ProcessRequest"/>. In this case, the derived class should keep a
      reference to the current <see langword="HttpWorkerRequest"/> and delegate most of
      the methods to it.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.HeaderAllow">
		<summary>
			<para>Specifies the index number for
      the <see langword="Allow"/> HTTP header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.RequestHeaderMaximum">
		<summary>
			<para>Specifies the index number for
      the <see langword="Maximum"/> HTTP request header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.ResponseHeaderMaximum">
		<summary>
			<para>Specifies the index number for
      the <see langword="Maximum"/> HTTP response header.</para>
		</summary>
		<remarks>
			<para>The .NET Framework assigns an index number to each standard HTTP header type, for use in
      the <see cref="System.Web.HttpWorkerRequest.GetKnownRequestHeader"/> and <see cref="System.Web.HttpWorkerRequest.SendKnownResponseHeader"/> methods.</para>
		</remarks>
	</doc><doc for="HttpWorkerRequest.GetKnownRequestHeader">
		<summary>
			<para>Returns the standard HTTP request header that
      corresponds to the specified index.</para>
		</summary>
		<param name="index">The index of the header. For example, the <see cref="System.Web.HttpWorkerRequest.HeaderAllow"/> field. </param>
		<returns>
			<para>The HTTP request header.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.MapPath">
		<summary>
			<para>Returns the physical path corresponding to the specified virtual path.</para>
		</summary>
		<param name="virtualPath">The virtual path.</param>
		<returns>
			<para>The physical path that corresponds to the virtual path
      specified in the <paramref name="virtualPath"/> parameter.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.SendResponseFromFile">
		<overload>
			<para>Adds the contents of a file to the response.</para>
		</overload>
		<summary>
			<para> Adds the contents of the specified file to the response
      and specifies the starting position in the file and the number of bytes to send.</para>
		</summary>
		<param name="filename">The name of the file to send.</param>
		<param name=" offset">The starting position in the file.</param>
		<param name=" length">The number of bytes to send.</param>
	</doc><doc for="HttpWorkerRequest.SendResponseFromFile1">
		<summary>
			<para> Adds the contents of the specified file to the response and
      specifies the starting position in the file and the number of bytes to send.</para>
		</summary>
		<param name="handle">The handle of the file to send.</param>
		<param name=" offset">The starting position in the file.</param>
		<param name=" length">The number of bytes to send.</param>
	</doc><doc for="HttpWorkerRequest.GetStatusDescription">
		<summary>
			<para>Returns a string that describes the name of the specified
      HTTP status code.</para>
		</summary>
		<param name="code">The HTTP status code.</param>
		<returns>
			<para>The status description. For example,
   <see langword="GetStatusDescription"/> (404) returns “Not
      Found”.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetKnownResponseHeaderName">
		<summary>
			<para>Returns the name of the specified HTTP response header.</para>
		</summary>
		<param name="index">The index number of the header.</param>
		<returns>
			<para>The name of the HTTP response header specified in
      the <paramref name="index"/> parameter.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.SendStatus">
		<summary>
			<para>Specifies the HTTP status code and status description of
      the response; for example SendStatus(200, "Ok").</para>
		</summary>
		<param name="statusCode">The status code to send</param>
		<param name=" statusDescription">The status description to send.</param>
	</doc>
	<doc for="HttpWorkerRequest.SetEndOfSendNotification">
		<summary>
			<para> Registers for an optional notification when all
      the response data is sent.</para>
		</summary>
		<param name="callback">The notification callback that is called when all data is sent (out-of-band).</param>
		<param name=" extraData">An additional parameter to the callback.</param>
		<remarks>
			<para>This method might be helpful when you implement buffer
      recycling.</para>
		</remarks>
	</doc>
	<doc for="HttpWorkerRequest.GetPreloadedEntityBody">
		<summary>
			<para>Returns the portion of the HTTP request body that has already been read.</para>
		</summary>
		<returns>
			<para>The portion of the request body that has been read.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetUnknownRequestHeaders">
		<summary>
			<para>Get all nonstandard HTTP header name-value pairs.</para>
		</summary>
		<returns>
			<para>An array of header name-value pairs.</para>
		</returns>
	</doc><doc for="HttpWorkerRequest.GetAppPathTranslated">
		<summary>
			<para> Returns the physical path to
      the currently executing server application.</para>
		</summary>
		<returns>
			<para> The physical path of the current application.</para>
		</returns>
	</doc>
</docs>
