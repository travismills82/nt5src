<docs>
	<doc for="Xml.AddParsedSubObject"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Xml.Render">
		<nodoc/>
		<summary>
			<para> Renders the results 
      to the output stream.</para>
		</summary>
	</doc><doc for="Xml._identityTransform;">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Xml.Xml">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.Xml"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create an initialize a new 
      instance of the <see cref="System.Web.UI.WebControls.Xml"/>class.</para>
		</remarks>
	</doc><doc for="Xml.DocumentContent">
		<summary>
			<para> Sets a string that contains the XML document to
      display in the <see cref="System.Web.UI.WebControls.Xml"/> control.</para>
		</summary>
		<value>
			<para>A string that contains the XML document to display in the <see cref="System.Web.UI.WebControls.Xml"/> control.</para>
		</value>
		<remarks>
			<para>The XML document to display in the <see cref="System.Web.UI.WebControls.Xml"/> control is specified in one of
   three ways. You can specify a <see cref="System.Xml.XmlDocument" qualify="true"/> object, an XML string, or an XML file by setting the appropriate
   property. The <see cref="System.Web.UI.WebControls.Xml.DocumentContent"/> property is used to specify an XML string (representing an
   XML document) to display in the control. The <see cref="System.Web.UI.WebControls.Xml.DocumentContent"/> property is not typically
   programmatically set, or set as an attribute of the control. Instead, the XML
   string is usually set declaratively by placing text between the
   opening and closing <see langword="&lt;asp:Xml&gt;"/>
   
   tags of the control. </para>
			<note type="note">
   Although the <see cref="System.Web.UI.WebControls.Xml.DocumentContent"/> property contains both
<see langword="get"/> and <see langword="set"/> accessors, only the 
<see langword="set"/> accessor is useful. If you use the <see langword="get"/> 
accessor, <see cref="System.String.Empty" qualify="true"/> is
returned.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.Xml.Document"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentSource"/>
		<seealso cref="System.Web.UI.WebControls.Xml.Transform"/>
		<seealso cref="System.Web.UI.WebControls.Xml.TransformSource"/>
	</doc><doc for="Xml.DocumentSource">
		<summary>
			<para>Gets or sets the path to an XML document to display in the <see cref="System.Web.UI.WebControls.Xml"/> control.</para>
		</summary>
		<value>
			<para>The path to an XML document to display in the <see cref="System.Web.UI.WebControls.Xml"/>
control.</para>
		</value>
		<remarks>
			<para>The XML document to display in the <see cref="System.Web.UI.WebControls.Xml"/> control is
   specified in one of three ways. You can specify a <see cref="System.Xml.XmlDocument" qualify="true"/> object, an XML string, or an XML file by setting the
   appropriate property. The <see cref="System.Web.UI.WebControls.Xml.DocumentSource"/> property is used to specify the
   path to an XML file (representing an XML document) to display in the
   control. You can use a relative or an absolute path. A relative path
   relates the location of the file to the location of the Web Forms page or
   user control, without specifying a complete path on the server. The path is
   relative to the location of the Web page. This makes it easier to move the
   entire site to another directory on the server without updating the path to
   the file in code. An absolute path provides the complete path, so
   moving the site to
   another directory requires updating the code.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.Xml.Document"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentContent"/>
		<seealso cref="System.Web.UI.WebControls.Xml.Transform"/>
		<seealso cref="System.Web.UI.WebControls.Xml.TransformSource"/>
	</doc><doc for="Xml.TransformSource">
		<summary>
			<para> Gets or sets the path to an Extensible Stylesheet Language Transformation (XSLT) style sheet that
      formats the XML
      document before it is written to the output stream.</para>
		</summary>
		<value>
			<para>The path to an XSL Transformation style sheet that formats
      the XML document before it is written to the output stream.</para>
		</value>
		<remarks>
			<para>When using the <see cref="System.Web.UI.WebControls.Xml"/> control to display an XML
   document, you can optionally specify an XSL Transformation style sheet that formats the XML
   document before it is written to the output stream in one of two ways. You can
   either format the XML document with a <see cref="System.Xml.Xsl.XslTransform" qualify="true"/> object or with an XSL Transformation style sheet file. If no XSL Transformation
   style sheet is specified, the XML document is displayed using the default
   format. The <see cref="System.Web.UI.WebControls.Xml.TransformSource"/> property is used to specify the path to
   an XSL Transformation style sheet file (representing an XSL Transformation style sheet) used to
   format the XML document before it is written to the output stream. You can use a
   relative or an absolute path. A relative path relates the location of the file
   to the location of the Web Forms page or user control, without specifying a
   complete path on the server. The path is relative to the location of the Web
   page. This makes it easier to move the entire site to another directory on the server without updating
   the path to the file in code. An absolute path provides the
   complete
   path, so moving the site to another directory requires updating
   the code. </para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.Xml.Transform"/>
		<seealso cref="System.Web.UI.WebControls.Xml.Document"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentContent"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentSource"/>
	</doc><doc for="Xml.TransformArgumentList">
		<summary>
			<para> Gets or sets a <see cref="System.Xml.Xsl.XsltArgumentList" qualify="true"/> that contains a list of
   optional arguments passed
   to the style sheet and used during the Extensible Stylesheet Language Transformation (XSLT).</para>
		</summary>
		<value>
			<para>A <see cref="System.Xml.Xsl.XsltArgumentList" qualify="true"/> that contains a list of
   optional arguments passed to the style sheet and
   used during the XSL Transformation.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Xml.TransformArgumentList"/> 
property to provide the XSL Transformation style sheet with optional arguments. The arguments can
be either XSLT parameters or extension objects.</para>
			<para>For more information about using the
<see cref="System.Xml.Xsl.XsltArgumentList" qualify="true"/>, see <see topic="cpconXsltArgumentListForStylesheetParametersExtensionObjects"/>.</para>
		</remarks>
		<seealso cref="System.Xml.Xsl.XsltArgumentList" qualify="true"/>
		<seealso topic="cpconXsltArgumentListForStylesheetParametersExtensionObjects"/>
	</doc><doc for="Xml">
		<summary>
			<para> Displays an XML document without formatting or
      using Extensible Stylesheet Language Transformations (XSLT).</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Xml"/>
control to display the contents of
an XML document without formatting or using XSL Transformations.</para>
			<para> The XML document to display is specified by setting
   one of three properties. These three properties represent the different types of
   XML documents that can be displayed. You can display a <see cref="System.Xml.XmlDocument" qualify="true"/>, an XML string,
   or
   an
   XML file by setting the appropriate property. The following table lists the properties for
   specifying the XML document.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see cref="System.Web.UI.WebControls.Xml.Document"/></term>
					<description> Sets
      the XML document using a
   <see cref="System.Xml.XmlDocument" qualify="true"/> object.</description>
				</item>
				<item>
					<term><see cref="System.Web.UI.WebControls.Xml.DocumentContent"/></term>
					<description>
						<para>Sets the XML document using a string. </para>
						<note type="note">
      This property is commonly set
      declaratively by placing text between the opening and closing
   <see langword="&lt;asp:Xml&gt;"/> tags of the <see cref="System.Web.UI.WebControls.Xml"/>
   control.
</note></description>
				</item>
				<item>
					<term><see cref="System.Web.UI.WebControls.Xml.DocumentSource"/></term>
					<description>Sets
   the XML document using a file.</description>
				</item>
			</list>
			<note type="note">
   At
   least one of the XML document properties must
   be set to display an XML document. If more than one XML document property is
   set, the XML
   document referenced in the last property set is
   displayed. The documents in the other properties are
   ignored.
</note>
			<para>You can optionally specify an XSL Transformation (XSLT) style sheet that formats
   the XML document before it is written to the output stream by setting one
   of two properties. The two properties represent the different types of XSL
   Transformation style sheets that can be used to format the XML document. You can format the
   XML document with a <see cref="System.Xml.Xsl.XslTransform" qualify="true"/> object or with an
   XSL Transformation style sheet file by setting the
   appropriate property. If no XSL Transformation style sheet is specified, the XML document
   is displayed using the default format. The following table list the properties for specifying an XSL
   Transformation
   style sheet.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see cref="System.Web.UI.WebControls.Xml.Transform"/></term>
					<description>Formats the XML document using the specified <see cref="System.Xml.Xsl.XslTransform" qualify="true"/> object.</description>
				</item>
				<item>
					<term><see cref="System.Web.UI.WebControls.Xml.TransformSource"/></term>
					<description>Formats the XML document using the specified XSL Transformation style sheet file.</description>
				</item>
			</list>
			<note type="note">
   The XSL Transformation style sheet is
   optional. You do not need to set the <see cref="System.Web.UI.WebControls.Xml.Transform"/> or
   the <see cref="System.Web.UI.WebControls.Xml.TransformSource"/> properties. If both XSL Transformation style
   sheet properties are set, the last property set
   determines which XSL Transformation style sheet is used to format the XML
   document. The other property is ignored.
</note>
			<para>The <see cref="System.Web.UI.WebControls.Xml"/> class also provides the <see cref="System.Web.UI.WebControls.Xml.TransformArgumentList"/>
property, which allows you to provide
the XSL Transformation style sheet with optional arguments. The arguments can be either
XSL Transformations(XSLT) parameters or extension objects. </para>
		</remarks>
		<example>
			<codelink SampleID="XmlClassExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.XmlDocument" qualify="true"/>
		<seealso cref="System.Xml.Xsl.XslTransform" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.Xml.Document"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentContent"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentSource"/>
		<seealso cref="System.Web.UI.WebControls.Xml.TransformArgumentList"/>
	</doc>
	<doc for="Xml.Document">
		<summary>
			<para>Gets or sets the <see cref="System.Xml.XmlDocument" qualify="true"/> to display in the <see cref="System.Web.UI.WebControls.Xml"/> control.</para>
		</summary>
		<value>
			<para>The <see cref="System.Xml.XmlDocument" qualify="true"/> to display in the <see cref="System.Web.UI.WebControls.Xml"/> control.</para>
		</value>
		<remarks>
			<para>The XML document to display in the <see cref="System.Web.UI.WebControls.Xml"/> control is
   specified in one of three ways. You can specify a <see cref="System.Xml.XmlDocument" qualify="true"/>
   object, an XML string, or an XML file by setting the appropriate property. The
<see cref="System.Web.UI.WebControls.Xml.Document"/> property is used to specify a 
<see cref="System.Xml.XmlDocument" qualify="true"/> (representing an XML document) to display in the control. </para>
		</remarks>
		<example>
			<codelink SampleID="XmlClassExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.XmlDocument" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentContent"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentSource"/>
		<seealso cref="System.Web.UI.WebControls.Xml.Transform"/>
		<seealso cref="System.Web.UI.WebControls.Xml.TransformSource"/>
	</doc>
	<doc for="Xml.Transform">
		<summary>
			<para>Gets or sets the <see cref="System.Xml.Xsl.XslTransform" qualify="true"/> object that formats the XML document before it is written to
   the output stream.</para>
		</summary>
		<value>
			<para>The <see cref="System.Xml.Xsl.XslTransform" qualify="true"/> object that formats the XML document before it is written to
   the output stream.</para>
		</value>
		<remarks>
			<para>When using the <see cref="System.Web.UI.WebControls.Xml"/> control to display an XML document, you can
   optionally specify an Extensible Stylesheet Language Transformation (XSLT) style sheet that formats the XML
   document, before it is written to the output stream in one of two ways. You can
   format the XML document with either a <see cref="System.Xml.Xsl.XslTransform" qualify="true"/> object or an XSL Transformation style
   sheet file. If no XSL Transform document is specified, the XML document is displayed
   using the default format. The <see cref="System.Web.UI.WebControls.Xml.Transform"/>
   property is used to specify a <see cref="System.Xml.Xsl.XslTransform" qualify="true"/>
   object (representing an XSL Transform
   document) used to format the XML document before it is written to the output
   stream.</para>
		</remarks>
		<example>
			<codelink SampleID="XmlClassExample" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.Xsl.XslTransform" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.Xml.TransformSource"/>
		<seealso cref="System.Web.UI.WebControls.Xml.Document"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentContent"/>
		<seealso cref="System.Web.UI.WebControls.Xml.DocumentSource"/>
	</doc>
</docs>
