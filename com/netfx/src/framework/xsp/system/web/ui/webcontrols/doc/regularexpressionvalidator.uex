<docs>
	<doc for="RegularExpressionValidator.AddAttributesToRender">
		<internalonly/>
		<summary>
    AddAttributesToRender method
 </summary>
	</doc>
	<doc for="RegularExpressionValidator.EvaluateIsValid">
		<internalonly/>
		<summary>
    EvaluateIsValid method
 </summary>
	</doc>
	<doc for="RegularExpressionValidator">
		<summary>
			<para>Validates whether the value of an associated input control matches the pattern
      specified by a regular expression.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.RegularExpressionValidator"/> control checks whether the
   value of an input control matches a pattern defined by a regular expression. This type
   of validation allows you to check for predictable sequences of characters, such as
   those in social security numbers, e-mail addresses, telephone numbers, and
   postal codes.</para>
			<note type="note">
   Validation succeeds if the input control is
   empty. If a value is required for the associated input control, use a <see cref="System.Web.UI.WebControls.RequiredFieldValidator"/> control in addition to the <see cref="System.Web.UI.WebControls.RegularExpressionValidator"/>
   control.
   
</note>
			<para> Both server-side and client-side validation are performed 
   unless the browser does not support client-side validation or client-side
   validation is explicitly disabled (by setting the <see cref="System.Web.UI.WebControls.BaseValidator.EnableClientScript"/> property to <see langword="false"/>). </para>
			<para> The regular expression
   validation implementation is slightly different on the client than on the
   server. On the client, JScript regular expression syntax is used. On the
   server, <see cref="System.Text.RegularExpressions.Regex" qualify="true"/>
   syntax is used. Since JScript regular expression syntax is a subset of
<see cref="System.Text.RegularExpressions.Regex" qualify="true"/>
syntax, it is recommended that
JScript regular expression syntax be used in order to yield the same results on both
the client and the server.</para>
			<para>For additional information on validation controls, see <see cref="System.Web.UI.WebControls.BaseValidator"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.RegularExpressionValidator"/> to validate a five-digit postal
   code.</para>
			<codelink SampleID="Classic RegularExpressionValidator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseValidator"/>
		<seealso cref="System.Web.UI.WebControls.BaseValidator.EnableClientScript"/>
		<seealso cref="System.Text.RegularExpressions.Regex" qualify="true"/>
	</doc><doc for="RegularExpressionValidator.ValidationExpression">
		<summary>
			<para> Gets or sets the regular expression that determines the pattern used to validate a field.</para>
		</summary>
		<value>
			<para> A
      string that specifies the regular expression used to validate
      a field for format. The default is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<exception cref="System.Web.HttpException">The regular expression is not properly formed. </exception>
		<remarks>
			<para>Use this property to specify the pattern used
      to check for predictable sequences of characters, such as those in social
      security numbers, e-mail addresses, telephone numbers, and postal codes.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.RegularExpressionValidator.ValidationExpression"/>
   property to validate a field with five numeric digits.</para>
			<codelink SampleID="Classic RegularExpressionValidator Example" SnippetID="1"/>
		</example>
	</doc></docs>
