<docs>
	<doc for="HtmlInputHidden.EventServerChange">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="HtmlInputHidden.OnPreRender">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="HtmlInputHidden.IPostBackDataHandler.LoadPostData">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="HtmlInputHidden.IPostBackDataHandler.RaisePostDataChangedEvent">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="HtmlInputHidden.ServerChange">
		<summary>
			<para>Occurs when the <see cref="System.Web.UI.HtmlControls.HtmlInputControl.Value"/> property is changed on the server.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/> event is raised when
 the <see cref="System.Web.UI.HtmlControls.HtmlInputControl.Value"/> property is
 changed between posts to
 the server.</para>
			<note type="note">
 The control must have viewstate enabled for
 the <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/>
 event to work correctly.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<seealso cref="System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange"/>
	</doc><doc for="HtmlInputHidden.OnServerChange">
		<summary>
			<para>Raises the <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/> event. This method
 allows you to handle the event directly.</para>
		</summary>
		<param name="e">A <see cref="System.EventArgs" qualify="true"/> that contains event data.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/> event is raised when
 the <see cref="System.Web.UI.HtmlControls.HtmlInputControl.Value"/> property is changed on the
 server.</para>
			<note type="note">
 The control must have viewstate enabled for
 the <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/>
 event to work correctly.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
 information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
 When overriding
<see cref="System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange"/> in a derived class, 
 be sure to call the base class's <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.OnServerChange"/>
 method so that registered delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/>
	</doc><doc for="HtmlInputHidden">
		<summary>
			<para> Allows programmatic access to the HTML <see langword="&lt;input type=hidden&gt; "/> element on the server.</para>
		</summary>
		<remarks>
			<para> You can use the <see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/> control to embed nonvisible
   information within a <see langword="&lt;form&gt;"/> element.
   This information is sent when the Web page is posted back to the server. The
<see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/> control provides a <see cref="System.Web.UI.HtmlControls.HtmlInputHidden.ServerChange"/> event that is raised 
   when the <see cref="System.Web.UI.HtmlControls.HtmlInputControl.Value"/> property changes
   values between posts to the server. This allows you to create an
   
   event handler that performs a custom set of instructions each time the event is
   raised.</para>
			<note type="note">
   The <see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/> control does not provide a built-in way to post back to the server. You must provide another control on the Web page that
   supports posting to the server, such as an <see cref="System.Web.UI.HtmlControls.HtmlButton"/> control, to
   send the value of the control back to the server.
</note>
			<note type="note">
   The Web Forms page framework
   uses this HTML feature to automatically load and persist the view state of
   server controls on a page.
   
</note>
			<para> For a list of initial property values for an instance of 
<see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/>, see the <see cref="M:System.Web.UI.HtmlControls.HtmlInputHidden.#ctor"/> constructor.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use an <see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/> control to store information on the Web page
   between posts to the server.</para>
			<codelink SampleID="Classic HtmlInputHidden Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.HtmlControls.HtmlInputControl"/>
	</doc>
	<doc for="HtmlInputHidden.HtmlInputHidden">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the
   <see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/> class. </para>
			<para>The following table shows initial property values for an instance of <see cref="System.Web.UI.HtmlControls.HtmlInputHidden"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Initial Value </description>
				</listheader>
				<item>
					<term><see langword="TagName"/></term>
					<description>The "hidden" literal
      string.</description>
				</item>
			</list>
		</remarks>
		<example>
			<codelink SampleID="HtmlInputHiddenCtor" SnippetID="1"/>
		</example>
	</doc>
</docs>
