<docs>
	<doc for="ListControl.EventSelectedIndexChanged">
		<internalonly/>
		<summary>
			<para>Represents the index in an <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for 
    the <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event of the
 <see cref="System.Web.UI.WebControls.ListControl"/> class. This field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.ListBox"/>
		<seealso cref="System.Web.UI.WebControls.RadioButtonList"/>
		<seealso cref="System.Web.UI.WebControls.CheckBoxList"/>
		<seealso cref="System.Web.UI.WebControls.DropDownList"/>
	</doc>
	<doc for="ListControl.DataSource">
		<summary>
			<para> 
       Gets or sets the data source
       that populates the items of the list control.</para>
		</summary>
		<value>
			<para> A data source that
       provides data for populating the list control.</para>
		</value>
		<remarks>
			<para>Use this property to specify a source of 
       data to populate a list control.</para>
			<para>The items in the <see cref="System.Web.UI.WebControls.ListControl.Items"/> collection are initialized from <see cref="System.Web.UI.WebControls.ListControl.DataTextField"/> and <see cref="System.Web.UI.WebControls.ListControl.DataValueField"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create 
       and specify a <see cref="System.Web.UI.WebControls.ListControl.DataSource"/> to populate a <see cref="System.Web.UI.WebControls.RadioButtonList"/>
       control. </para>
			<codelink SampleID="Classic ListControl.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListControl.Items"/>
		<seealso cref="System.Web.UI.WebControls.ListControl.DataTextField"/>
		<seealso cref="System.Web.UI.WebControls.ListControl.DataValueField"/>
	</doc>
	<doc for="ListControl.DataValueField">
		<summary>
			<para> Gets or sets the field of the data source that provides the value of each 
       list item.</para>
		</summary>
		<value>
			<para>A <see cref="System.String" qualify="true"/> 
 that specifies the field of the data source that provides the
 value of each list item. The default is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para> Use this property to specify the field 
       that contains the value of each item in a list control. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify the <see cref="System.Web.UI.WebControls.ListControl.DataValueField"/> for the <see cref="System.Web.UI.WebControls.RadioButtonList"/> control. The <see cref="System.Web.UI.WebControls.ListControl.DataValueField"/> is the value for the each 
    item in the <see cref="System.Web.UI.WebControls.RadioButtonList"/>.</para>
			<codelink SampleID="Classic ListControl.DataSource Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ListControl.Items">
		<summary>
			<para> 
       Gets the collection of items
       in the
       list control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.ListItemCollection"/> that represents the items within 
    the list. The default is an empty
    list.</para>
		</value>
		<remarks>
			<para>Use this property to get the properties of items in the list control. This 
       property can be used to determine the selected items in the list control.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the 
    <see cref="System.Web.UI.WebControls.ListControl.Items"/> property to determine the selected 
       items in a <see cref="System.Web.UI.WebControls.CheckBoxList"/>
       control.</para>
			<codelink SampleID="Classic ListControl.Items Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListItemCollection"/>
	</doc>
	<doc for="ListControl.SelectedIndex">
		<summary>
			<para> Gets or sets the lowest ordinal index of the selected items in the 
       list.</para>
		</summary>
		<value>
			<para>The lowest ordinal index of the selected items in the list. The default is -1, which
       indicates that nothing is selected.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The index was set to less than -1, or greater than or equal to the number of items on the list.</exception>
		<remarks>
			<para>Use this property to determine the index of the currently 
       selected item in the list if the list control allows only one selection. If the
       list control supports multiple selections, use this property to determine the lowest index of the selected items.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use <see cref="System.Web.UI.WebControls.ListControl.SelectedIndex"/> to determine the lowest index of the 
    selected items in the <see cref="System.Web.UI.WebControls.CheckBoxList"/>.</para>
			<codelink SampleID="Classic ListControl.SelectedIndex Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.CheckBoxList"/>
	</doc>
	<doc for="ListControl.SelectedIndicesInternal">
		<summary>
			<para> 
       Gets an array of selected indexes within the list.</para>
		</summary>
		<value>
			<para>An array of selected indexes within
       the list.</para>
		</value>
	</doc>
	<doc for="ListControl.SelectedItem">
		<summary>
			<para>Gets the selected item with the lowest index in the list control. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.ListItem"/> that represents the lowest 
    indexed item selected from the list control. The default is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para> If the list control allows only a single selection, use this 
       property to get the individual properties of the selected item. If the list
       control allows multiple selections, use this property to get the properties of the
       lowest indexed item selected from the list control. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use <see cref="System.Web.UI.WebControls.ListControl.SelectedItem"/> 
 to get the individual properties of the currently selected item
 in the <see cref="System.Web.UI.WebControls.RadioButtonList"/> and to display that item and its
 value. </para>
			<codelink SampleID="Classic ListControl.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListItem"/>
		<seealso cref="System.Web.UI.WebControls.RadioButtonList"/>
	</doc>
	<doc for="ListControl.LoadViewState">
		<internalonly/>
		<summary>
    Load previously saved state.
    Overridden to restore selection.
 </summary>
	</doc>
	<doc for="ListControl.TrackViewState">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="ListControl.OnDataBinding">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="ListControl.SaveViewState">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="ListControl.SelectInternal">
		<internalonly/>
		<summary>
			<para>A protected method. Sets items within the
       list to be selected according to the specified array of indexes.</para>
		</summary>
		<param name="selectedIndices">Specifies the item indexes within the list to be set to selected.</param>
	</doc>
	<doc for="ListControl.DataTextField">
		<summary>
			<para> Gets or sets the field of the
      data source that provides the text content of the list items.</para>
		</summary>
		<value>
			<para>A <see cref="System.String" qualify="true"/> that specifies the field of the
   data source that provides the text content of the list items. The default is
<see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use this property to specify a field in the <see cref="System.Web.UI.WebControls.ListControl.DataSource"/> to display
   as the items of the list in a list control.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify the
   <see cref="System.Web.UI.WebControls.ListControl.DataTextField"/> for the <see cref="System.Web.UI.WebControls.RadioButtonList"/> control. The <see cref="System.Web.UI.WebControls.ListControl.DataTextField"/> is the text that is displayed in the
   <see cref="System.Web.UI.WebControls.RadioButtonList"/>.</para>
			<codelink SampleID="Classic ListControl.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListControl.DataSource"/>
		<seealso cref="System.Web.UI.WebControls.RadioButtonList"/>
	</doc>
	<doc for="ListControl.AutoPostBack">
		<summary>
			<para> Gets or
 sets a value indicating whether a postback to the server automatically occurs
 when the user changes the list selection.</para>
		</summary>
		<value>
			<para><see langword="true"/>
if a postback to the server automatically occurs
whenever the user changes the selection of the list; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Set this property to <see langword="true"/> if the server needs to capture the
 selection as soon as it is made. For example, other controls on the Web page can
 be automatically filled depending on the user's selection from a list control. </para>
			<para> This property can be used to allow
 automatic population of other controls on the Web page based on a user's selection from a
 list.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to enable <see cref="System.Web.UI.WebControls.ListControl.AutoPostBack"/> for the <see cref="System.Web.UI.WebControls.ListBox"/> control. </para>
			<codelink SampleID="Classic ListControl.AutoPostBack Example" SnippetID="1"/>
		</example>
	</doc><doc for="ListControl.OnPreRender">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ListControl.SelectedIndexChanged">
		<summary>
			<para> Occurs when the selection from the list control changes between posts to the
      server.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event is raised when the selection from the list control changes between
   posts to the server.</para>
			<note type="note">
   A list control must
   persist some values between posts to the server for
   this event to work correctly. Be sure that view state is enabled for the
   list control.
</note>
			<para>For more information about handling events, see
<see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event to display the selection
      made by the user. </para>
			<codelink SampleID="Classic ListControl.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged"/>
	</doc>
	<doc for="ListControl.OnSelectedIndexChanged">
		<summary>
			<para> Raises the <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.EventArgs" qualify="true"/> that contains the event data. </param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event is raised when the
   selection from the list control changes between posts to the server.</para>
			<note type="note">
   A list control must
   persist some values between posts
   to the server for this event to work correctly. Be sure that
   view state is enabled for the list control.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code a handler for the <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event to display the
      selection made by the user. </para>
			<codelink SampleID="Classic ListControl.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/>
	</doc>
	<doc for="ListControl.SelectedValue">
		<summary>
			<para> Gets the value of the selected item in
      the list control, or selects the item in the list control that contains the specified value.</para>
		</summary>
		<value>
			<para>The value of the selected item in the list control. The default is an empty string ("").</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The <see cref="System.Web.UI.WebControls.ListControl.SelectedValue"/> property is set with a value that does not correspond to an item in the list control.</exception>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ListControl.SelectedValue"/> property is commonly used
   to determine the value of the selected item in the list control. If no item is
   selected, an empty string ("")
   is returned.</para>
			<para>The <see cref="System.Web.UI.WebControls.ListControl.SelectedValue"/> property can also be used to select an
item in the list control by setting it with the value of
the item. If no items in the list control contain the specified value,
a <see cref="System.ArgumentOutOfRangeException" qualify="true"/>
is thrown. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.ListControl.SelectedValue"/> property to select an item in a
<see cref="System.Web.UI.WebControls.ListBox"/> control. 
   Notice that this property can also be used to retrieve the value of
   the selected item.</para>
			<codelink SampleID="ListControlSelectedValue" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListControl.SelectedItem"/>
		<seealso cref="System.Web.UI.WebControls.ListControl.SelectedIndex"/>
		<seealso cref="System.Web.UI.WebControls.ListControl.DataValueField"/>
		<seealso cref="System.Web.UI.WebControls.ListControl.Items"/>
		<seealso cref="System.Web.UI.WebControls.ListItem"/>
		<seealso cref="System.ArgumentOutOfRangeException" qualify="true"/>
	</doc>
	<doc for="ListControl">
		<summary>
			<para> Serves
      as the abstract base class that defines the properties,
      methods, and events common for all list-type controls.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Web.UI.WebControls.ListControl"/> abstract class cannot be instantiated directly. Instead,
   this class is inherited by other classes, such as the <see cref="System.Web.UI.WebControls.CheckBoxList"/>, <see cref="System.Web.UI.WebControls.DropDownList"/>, <see cref="System.Web.UI.WebControls.ListBox"/>, and <see cref="System.Web.UI.WebControls.RadioButtonList"/> classes, to provide common basic
   functionality.</para>
			<para>The properties of the <see cref="System.Web.UI.WebControls.ListControl"/> class allow you to specify the source
of the data to populate the list control. Use the <see cref="System.Web.UI.WebControls.ListControl.DataSource"/> property to specify the
data source to bind to the list control. If the data source contains more than
one table, use the <see cref="System.Web.UI.WebControls.ListControl.DataMember"/> property to specify the table to use. You can bind different fields in the data source to the <see cref="System.Web.UI.WebControls.ListItem.Text" qualify="true"/> and <see cref="System.Web.UI.WebControls.ListItem.Value" qualify="true"/>
properties of the items in the list control by setting the <see cref="System.Web.UI.WebControls.ListControl.DataTextField"/> and <see cref="System.Web.UI.WebControls.ListControl.DataValueField"/> properties, respectively.
The text displayed
for each item in the list control can by formatted by setting the <see cref="System.Web.UI.WebControls.ListControl.DataTextFormatString"/>
property.</para>
			<para> All
   items displayed in the list control are stored in the <see cref="System.Web.UI.WebControls.ListControl.Items"/> collection. You
   can programmatically specify or determine the index of selected item in the
   list control by using the <see cref="System.Web.UI.WebControls.ListControl.SelectedIndex"/> property. The properties of
   the selected item can be accessed
   by using the <see cref="System.Web.UI.WebControls.ListControl.SelectedItem"/>
   property.</para>
			<para> The <see cref="System.Web.UI.WebControls.ListControl"/> class provides the <see cref="System.Web.UI.WebControls.ListControl.SelectedIndexChanged"/> event, which is raised
when the selection in the list control changes between posts to the server. This
allows you to provide a custom handler for this event. For more information
about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="ListControlSelectedValue" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.CheckBoxList"/>
		<seealso cref="System.Web.UI.WebControls.DropDownList"/>
		<seealso cref="System.Web.UI.WebControls.ListBox"/>
		<seealso cref="System.Web.UI.WebControls.RadioButtonList"/>
		<seealso cref="System.Web.UI.WebControls.ListItem"/>
	</doc>
	<doc for="ListControl.ListControl">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.ListControl"/> class.</para>
		</summary>
		<example>
			<codelink SampleID="Classic ListBox.ListBox Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ListControl.DataMember">
		<summary>
			<para>Gets or sets the specific table in the <see cref="System.Web.UI.WebControls.ListControl.DataSource"/> to bind to the
   control.</para>
		</summary>
		<value>
			<para>A string that specifies a table in the <see cref="System.Web.UI.WebControls.ListControl.DataSource"/>.</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Web.UI.WebControls.ListControl.DataSource"/> contains more than one table, use
   this property to specify the exact table to bind to the control. </para>
		</remarks>
		<example>
			<para>
			</para>
		</example>
		<seealso cref="System.Web.UI.WebControls.ListControl.DataSource"/>
	</doc>
	<doc for="ListControl.DataTextFormatString">
		<summary>
			<para> Gets or sets the formatting string used to control how data bound to the
      list control is displayed.</para>
		</summary>
		<value>
			<para>The formatting string for data bound to the control.
      The default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.ListControl.DataTextFormatString"/> property to provide a
   custom display format for the caption of the command buttons in the column. </para>
			<para>The data format string consists of two parts, separated
   by a colon, in the form {<paramref name="A"/>:<paramref name="Bxx"/>}. For example, the formatting
   string {0:F2} would format the cell to display a fixed point number
   with two decimal places.</para>
			<note type="note">
   The entire string must be
   enclosed in braces to indicate that it is a format string and not a literal string.
   Any text outside the braces is displayed as literal text.
</note>
			<para>The value before the colon (<paramref name="A"/> in the general example)
specifies the parameter index in a zero-based list of parameters.</para>
			<note type="note">
   This value can only be set to 0 because there is only one value in each cell.
</note>
			<para>The character after the colon (<paramref name="B "/> in the general example)
specifies the format to display the value in. The following table lists the
common formats.</para>
			<list type="table">
				<listheader>
					<term>Format character</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="C"/></term>
					<description>Displays numeric values in currency
      format.</description>
				</item>
				<item>
					<term><see langword="D"/></term>
					<description>Displays numeric values in decimal
   format.</description>
				</item>
				<item>
					<term><see langword="E"/></term>
					<description>Displays numeric values in scientific
   (exponential) format.</description>
				</item>
				<item>
					<term><see langword="F"/></term>
					<description>Displays numeric values in fixed
   format.</description>
				</item>
				<item>
					<term><see langword="G"/></term>
					<description>Displays numeric values in general
   format.</description>
				</item>
				<item>
					<term><see langword="N"/></term>
					<description>Displays numeric values in number
   format.</description>
				</item>
				<item>
					<term><see langword="X"/></term>
					<description>Displays numeric values in hexadecimal
   format.</description>
				</item>
			</list>
			<note type="note">
   The format character is not
   case-sensitive, except for <see langword="X"/>, which displays the hexadecimal
   characters in the case specified.
</note>
			<para>The value after the format character (<paramref name="xx"/>
in the general example) specifies the number of significant digits or decimal
places to display.</para>
			<para>The following table contains examples of formatting strings and the results.
   It assumes standard English settings.</para>
			<para><list type="table">
					<listheader>
						<term>Numeric Value</term>
						<description>Format String</description>
						<description>Result</description>
					</listheader>
					<item>
						<term> 12345.6789</term>
						<description>"{0:C}"</description>
						<description>$12,345.68</description>
					</item>
					<item>
						<term> -12345.6789</term>
						<description>"{0:C}"</description>
						<description>($12,345.68)</description>
					</item>
					<item>
						<term> 12345</term>
						<description>"{0:D}"</description>
						<description>12345</description>
					</item>
					<item>
						<term> 12345</term>
						<description>"{0:D8}"</description>
						<description>00012345</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"{0:E}"</description>
						<description>1234568E+004</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"{0:E10}"</description>
						<description>1.2345678900E+004</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"{0:F}"</description>
						<description>12345.68</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"{0:F0}"</description>
						<description>12346</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"{0:G}"</description>
						<description>12345.6789</description>
					</item>
					<item>
						<term> 123456789</term>
						<description>"{0:G7}"</description>
						<description>1.234568E8</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"{0:N}"</description>
						<description>12,345.68</description>
					</item>
					<item>
						<term> 123456789</term>
						<description>"{0:N4}"</description>
						<description>123,456,789.0000</description>
					</item>
					<item>
						<term> 12345.6789</term>
						<description>"Total: {0:C}"</description>
						<description>Total:
         $12345.68</description>
					</item>
				</list>
			</para>
			<para>For more information on formatting strings, see
<see topic="cpconformattingoverview"/>.</para>
		</remarks>
		<seealso topic="cpconformattingoverview"/>
	</doc>
	<doc for="ListControl.ClearSelection">
		<internalonly/>
		<summary>
			<para> Clears out the list selection and sets the
   <see cref="System.Web.UI.WebControls.ListItem.Selected"/> property
      of all items to false.</para>
		</summary>
	</doc>
</docs>
