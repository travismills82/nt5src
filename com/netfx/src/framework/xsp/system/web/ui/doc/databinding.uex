<docs>
	<doc for="DataBinding.Equals">
		<summary>
			<para>Determines whether the specified object is the same 
 instance of the <see cref="System.Web.UI.DataBinding"/>
 class as the current object.</para>
		</summary>
		<param name="obj">The object to compare against the current <see langword="DataBinding"/> object.</param>
		<returns>
			<para><see langword="true"/>
if the data binding property names match; otherwise, <see langword="false"/> .</para>
		</returns>
		<seealso cref="System.Web.UI.DataBinding.GetHashCode" qualify="true"/>
	</doc><doc for="DataBinding.GetHashCode">
		<summary>
			<para>Retrieves the hash code for an instance of the <see cref="System.Web.UI.DataBinding"/>
object.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
		<remarks>
			<para><see langword="DataBinding"/> objects are placed in
   a <see cref="System.Web.UI.DataBindingCollection"/> object, accessible
   only at design time. The collection is a hash table that represents
   the bindings on a control. There can only be one binding per property, so
   the hashcode computation matches the <see cref="System.Web.UI.DataBinding.Equals" qualify="true"/>
   implementation and only takes the property name into account.</para>
		</remarks>
		<seealso cref="System.Web.UI.DataBinding.Equals" qualify="true"/>
	</doc><doc for="DataBinding">
		<summary>
			<para>Contains information about a single data-binding expression in an ASP.NET
      server control, which allows rapid-application development (RAD) designers, such as Visual Studio .NET, to
      create data-binding expressions at design time. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para>Each data-binding expression in a server control is represented
      at design time by an instance of the <see langword="DataBinding"/>
      class. Any server control that contains one or more data-binding expressions has
      a <see cref="System.Web.UI.DataBindingCollection"/> object that contains the
   <see langword="DataBinding"/> objects. This collection is
      accessible through the <see cref="System.Web.UI.Control"/> class
      implemention the <see cref="System.Web.UI.IDataBindingsAccessor"/> interface. When you
      create a custom RAD designer, use that implementation to access the collection. Any
   <see langword="DataBinding"/> or <see langword="DataBindingCollection"/> objects associated with
      a server control exist only at design time. They do not
      exist at run time and, therefore, are not accessible during run time.</para>
		</remarks>
		<example>
			<para>The following example creates a <see langword="DataBinding"/> object and sets
   it equal to an existing object in the control's <see cref="System.Web.UI.DataBindingCollection"/> that has a <paramref name="propertyName"/> parameter with a
   value of <c>Text</c>. If the collection contains a <see langword="DataBinding"/> object
with a <paramref name="propertyName"/> value of <c>Text</c>, this code returns the value of the
object's <see cref="System.Web.UI.DataBinding.Expression"/> property. If there is no such object, it returns
an empty string.</para>
			<codelink SampleID="DataBinding_Sample1" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.DataBinder"/>
		<seealso cref="System.Web.UI.DataBindingCollection"/>
		<seealso cref="System.Web.UI.IDataBindingsAccessor"/>
		<keyword term="data binding"/>
	</doc>
	<doc for="DataBinding.DataBinding">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.DataBinding"/> class.</para>
		</summary>
		<param name="propertyName">The property to bind data to.</param>
		<param name=" propertyType">The .NET Framework type of the property to bind data to.</param>
		<param name=" expression">The data-binding expression to be evaluated.</param>
		<example>
			<para>The following example creates a <see langword="DataBinding"/> object and sets
   it equal to an existing object in the control's <see cref="System.Web.UI.DataBindingCollection"/> that has a <paramref name="propertyName"/> parameter with a
   value of <c>Text</c>. If the collection contains a <see langword="DataBinding"/> object
with a <paramref name="propertyName"/> value of <c>Text</c>, this code returns the value of the
object's <see cref="System.Web.UI.DataBinding.Expression"/> property. If there is no such object, it returns
an empty string.</para>
			<codelink SampleID="DataBinding_Sample1" SnippetID="3"/>
		</example>
		<seealso cref="System.Web.UI.DataBinder"/>
	</doc>
	<doc for="DataBinding.Expression">
		<summary>
			<para> Gets or sets the data-binding expression to be evaluated.</para>
		</summary>
		<value>
			<para> The data-binding expression to be evalutated.</para>
		</value>
		<example>
			<para>The following example creates a <see langword="DataBinding"/> object and sets
   it equal to an existing object in the control's <see cref="System.Web.UI.DataBindingCollection"/> that has a <paramref name="propertyName"/> parameter with a
   value of <c>Text</c>. If the collection contains a <see langword="DataBinding"/> object
with a <paramref name="propertyName"/> value of <c>Text</c>, this code returns the value of the
object's <see cref="System.Web.UI.DataBinding.Expression"/> property. If there is no such object, it returns
an empty string.</para>
			<codelink SampleID="DataBinding_Sample1" SnippetID="3"/>
		</example>
		<seealso topic="cpcondatabindingexpressionsyntax"/>
	</doc>
	<doc for="DataBinding.PropertyName">
		<summary>
			<para> Gets the name of the ASP.NET server control property
      to bind data to.</para>
		</summary>
		<value>
			<para> The property to bind data to.</para>
		</value>
		<example>
			<para>The following example declares three variables, <c>dataBindingOutput1</c>,
   <c>dataBindingOutput2</c>, and <c>dataBindingOutput3</c>, that access the different properties
   of a <see cref="System.Web.UI.DataBinding"/> object, <c>myDataBinding2</c>. It then assigns the
value of the <see langword="PropertyName"/> property to <c>dataBindingOutput1</c>,
concatenates it with the string "The property name is ", and writes the value to
a file. </para>
			<codelink SampleID="DataBinding_Sample1" SnippetID="6"/>
		</example>
	</doc>
	<doc for="DataBinding.PropertyType">
		<summary>
			<para> Gets the .NET Framework type of the data-bound ASP.NET server control
      property.</para>
		</summary>
		<value>
			<para> The .NET Framework type of the data-bound property.</para>
		</value>
		<example>
			<para> The following example declares three variables, <c>dataBindingOutput1</c>, <c>dataBindingOutput2</c>, and <c>dataBindingOutput3</c> , that access the
   different properties of a <see cref="System.Web.UI.DataBinding"/> object, <c>myDataBinding2</c>. The
<see langword="PropertyType"/> property value is assigned to <c>dataBindingOutput2</c> 
and concatenated with the string "The property type is ", and writes the value
to a file.</para>
			<codelink SampleID="DataBinding_Sample1" SnippetID="6"/>
		</example>
	</doc>
</docs>
