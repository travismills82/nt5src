<docs>
	<doc for="LosFormatter.DeserializeValueInternal">
		<summary>
     Deserializes a value from tokens, starting at current. When this
     function returns, current will be left at the next token.

     This function is recursive.
 </summary>
	</doc>
	<doc for="LosFormatter.SerializeInternal">
		<summary>
     Serialized value into the writer.
 </summary>
	</doc>
	<doc for="LosFormatter.SerializeValue">
		<summary>
     Recursively serializes value into the writer.
 </summary>
	</doc>
	<doc for="LosFormatter.TypeFromTypeRef">
		<summary>
     Takes a typeRef, and converts it to a Type. Either by returning
     Type.GetType(typeRef), or looking it up.
 </summary>
	</doc>
	<doc for="LosFormatter.WriteEscapedString">
		<summary>
     Escapes and writes the escaped value of str into the writer.
 </summary>
	</doc>
	<doc for="Pair.Pair">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Pair"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Pair"/> class.</para>
		</summary>
		<returns>
			<para>The objects inserted in the server control's view state.</para>
		</returns>
	</doc><doc for="Pair.Pair1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Pair"/> class 
   containing the specifed objects.</para>
		</summary>
		<param name="x">The first object to add to view state.</param>
		<param name=" y">The second object to add to view state.</param>
		<returns>
			<para>The objects to be added to view state.</para>
		</returns>
	</doc><doc for="Triplet.Triplet">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Triplet"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Triplet"/> class.</para>
		</summary>
	</doc><doc for="Triplet.Triplet2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Triplet"/> class 
   that contains three objects.</para>
		</summary>
		<param name="x">The first object to add to view state.</param>
		<param name=" y">The second object to add to view state.</param>
		<param name=" z">The third object to add to view state.</param>
	</doc><doc for="Pair">
		<summary>
			<para>Holds two objects that can be added together to an ASP.NET
      server control's view state.</para>
		</summary>
		<remarks>
			<para>You can add this object to a server control's view state
      in the same way that you add a single object to view state. This class offers a more efficient way of adding groups of objects to a
      server control's view state.</para>
		</remarks>
		<seealso cref="System.Web.UI.Control.ViewState"/>
		<seealso topic="cpconmantainingstateincontrol"/>
	</doc><doc for="Pair.First">
		<summary>
			<para>Represents the first object added to the server control's view state using the <see cref="System.Web.UI.Pair"/> class.</para>
		</summary>
	</doc><doc for="Pair.Second">
		<summary>
			<para>Represents the second object added to the server control's view state using
      the <see cref="System.Web.UI.Pair"/> class.</para>
		</summary>
	</doc><doc for="Triplet.First">
		<summary>
			<para>Represents the first object added to the server control's view state using the <see cref="System.Web.UI.Triplet"/> class.</para>
		</summary>
	</doc><doc for="Triplet.Second">
		<summary>
			<para>Represents the second object added to the server control's view state using the <see cref="System.Web.UI.Triplet"/> class.</para>
		</summary>
	</doc><doc for="Triplet.Third">
		<summary>
			<para>Represents the third object added to the server control's view state using the <see cref="System.Web.UI.Triplet"/> class.</para>
		</summary>
	</doc><doc for="Triplet">
		<summary>
			<para>Holds three objects that can be added together to an
      ASP.NET server control's view state.</para>
		</summary>
		<remarks>
			<para>You can add this object to a server control's view state 
      in the same way that you add a single object to view state. This class offers a
      more efficient way of adding groups of objects to a server control's view state.
      For more information, see <see topic="cpconmantainingstateincontrol"/>
      .</para>
		</remarks>
		<seealso cref="System.Web.UI.Control.ViewState"/>
	</doc><doc for="Triplet.Triplet1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Triplet"/> class that
   contains two objects.</para>
		</summary>
		<param name="x">The first object to add to view state.</param>
		<param name=" y">The second object to add to view state.</param>
		<remarks>
			<para>Use this constructor if you expect to add another object to this instance of
      the <see cref="System.Web.UI.Triplet"/> object at a later time.</para>
		</remarks>
	</doc><doc for="LosFormatter.LosFormatter">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.UI.LosFormatter"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.LosFormatter"/> 
class using default values.</para>
		</summary>
	</doc>
	<doc for="LosFormatter.Deserialize">
		<overload>
			<para>Transforms the specified view state value to a limited 
      object serialization (LOS) formatted object.</para>
		</overload>
		<summary>
			<para> Transforms the view state value contained in a <see cref="System.IO.Stream" qualify="true"/> to a limited 
   object serialization (LOS) formatted object.</para>
		</summary>
		<param name="stream">A <see cref="System.IO.Stream" qualify="true"/> that contains the view state value to transform.</param>
		<returns>
			<para> A LOS-formatted object.</para>
		</returns>
		<remarks>
			<para>This version of the <see cref="System.Web.UI.LosFormatter.Deserialize"/> method is used to tranform the view state value contained in a <see cref="System.IO.Stream" qualify="true"/> 
to a LOS-formatted object. </para>
		</remarks>
		<seealso cref="System.IO.Stream"/>
	</doc>
	<doc for="LosFormatter.Deserialize1">
		<summary>
			<para>Transforms the view state value contained in a <see cref="System.IO.TextReader" qualify="true"/> to a limited
   object serialization (LOS) formatted object.</para>
		</summary>
		<param name="input">A <see langword="TextReader"/> that contains the view state value to transform.</param>
		<returns>
			<para> A LOS-formatted object.</para>
		</returns>
		<remarks>
			<para>This version of the <see cref="System.Web.UI.LosFormatter.Deserialize"/> method is used to tranform the
   view state value contained in a <see cref="System.IO.TextReader" qualify="true"/>
   to a LOS-formatted object.</para>
		</remarks>
		<seealso cref="System.IO.TextReader"/>
	</doc>
	<doc for="LosFormatter.Deserialize2">
		<summary>
			<para>Transforms the specified view state value to a limited object serialization (LOS) formatted object.</para>
		</summary>
		<param name="input">The view state value to transform.</param>
		<returns>
			<para> A LOS-formatted object.</para>
		</returns>
		<exception cref="System.Web.HttpException">The view state is invalid.</exception>
		<remarks>
			<para>This version of the <see cref="System.Web.UI.LosFormatter.Deserialize"/> method is used to transform the specified view state value
   to a LOS-formatted object. </para>
		</remarks>
		<seealso cref="System.Web.UI.LosFormatter.Serialize"/>
	</doc>
	<doc for="LosFormatter.Serialize">
		<overload>
			<para>Transforms a limited object serialization (LOS) formatted
      object into a view state value.</para>
		</overload>
		<summary>
			<para>Transforms a limited object serialization (LOS) formatted 
      object into a view state value and places the results into a
   <see langword="Stream"/>. </para>
		</summary>
		<param name="stream">The <see langword="Stream"/> to receive the transformed value.</param>
		<param name=" value">The LOS-formatted object to transform into a view state value.</param>
		<remarks>
			<para>This version of the <see langword="Serialize"/> 
method is used to transform a LOS formatted object into a view state value. The
results are then placed into <see langword="Stream"/>.</para>
		</remarks>
		<seealso cref="System.IO.Stream"/>
	</doc>
	<doc for="LosFormatter.Serialize1">
		<summary>
			<para>Transforms a limited object serialization (LOS) formatted 
      object into a view state value and places the results into a TextWriter.</para>
		</summary>
		<param name="output">The TextWriter to receive the transformed value.</param>
		<param name=" value">The LOS-formatted object to transform into a view state value.</param>
		<remarks>
			<para>This version of the Serialize method is used to transform 
      a LOS formatted object into a view state value. The results are then placed into
      a TextWriter.</para>
		</remarks>
	</doc>
	<doc for="LosFormatter">
		<summary>
			<para> 
      
      Serializes the view state for a Web Forms page. This
      class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The limited object serialization (LOS) formatter is 
      designed for highly compact ASCII format serialization. This class supports serializing any object graph,
      but is optimized for those containing strings, arrays, and hashtables. It offers second
      order optimization for many of the .NET primitive types.</para>
			<para>This is a private format, and only needs to remain consistent for the 
      lifetime of a Web request. You are not allowed to persist objects serialized
      with this formatter for any significant length of time.</para>
			<note type="note">
      This format may be modified in the
      future.
      
   </note>
		</remarks>
		<example>
			<para>This example creates a new LosFormatter object and sets
      its out</para>
			<codelink SampleID="Classic LosFormatter Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="LosFormatter.LosFormatter1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.LosFormatter"/> class using the specified enable flag and machine authentication code (MAC) key modifier.</para>
		</summary>
		<param name="enableMac"><see langword="true"/> to enable view state MAC; otherwise, <see langword="false"/>. </param>
		<param name=" macKeyModifier">The modifier for the MAC key.</param>
	</doc>
</docs>
