<docs>
	<doc for="BaseParser.Context">
		<summary>
			<para>Gets or sets the <see cref="System.Web.HttpContext"/> object for the current Web request. Parsers can then 
    extract information about request from that object.</para>
		</summary>
		<value>
			<para>The <see langword="HttpContext"/> object for the current 
    Web request.</para>
		</value>
		<seealso cref="System.Web.HttpContext"/>
	</doc>
	<doc for="BaseParser.BaseVirtualDir">
		<summary>
			<para>Gets the root virtual directory of the 
       application in which the currently requested file resides. This is used to calculate relative paths for
       the current request.</para>
		</summary>
		<value>
			<para>The root virtual directory for the currently requested file.</para>
		</value>
	</doc>
	<doc for="BaseParser.CurrentVirtualPath">
		<summary>
			<para>Gets or sets the current virtual path to the requested file.</para>
		</summary>
		<value>
			<para>The current virtual path to the requested file.</para>
		</value>
	</doc>
	<doc for="BaseParser.tagRegex">
		<summary>
			<para>Specifies how an opening tag for an HTML element or 
       ASP.NET control should be parsed. This includes all attribute/value pairs included in the opening tag of the element or
       control. This field is read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.directiveRegex">
		<summary>
			<para>Specifies how a directive should be parsed. This field is read-only. </para>
		</summary>
		<remarks>
			<para>Directives include the <see topic="cpconpage"/>, <see topic="cpconcontroldirective"/>, <see topic="cpconimport"/>, <see topic="cpconregister"/>, <see topic="cpconassembly"/>, and <see topic="cpconoutputcache"/> 
 directives.</para>
		</remarks>
		<seealso topic="cpconpagedirectives"/>
	</doc>
	<doc for="BaseParser.endtagRegex">
		<summary>
			<para> Specifies how an HTML element or ASP.NET control 
       ending tag should be parsed. This field is read-only. </para>
		</summary>
	</doc>
	<doc for="BaseParser.aspCodeRegex">
		<summary>
			<para> Specifies how ASP.NET code render blocks that 
       include one of the <see topic="cpconpagedirectives"/> should be parsed. This field is
       read-only.</para>
		</summary>
		<seealso topic="cpconpagedirectives"/>
	</doc>
	<doc for="BaseParser.aspExprRegex">
		<summary>
			<para>Specifies how ASP.NET code render blocks should be parsed. This field is 
       read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.databindExprRegex">
		<summary>
			<para>Specifies how ASP.NET data binding expressions should be parsed. </para>
		</summary>
	</doc>
	<doc for="BaseParser.commentRegex">
		<summary>
			<para>Specifies how an ASP.NET comment tags should be parsed. This field is 
       read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.includeRegex">
		<summary>
			<para>Specifies how an ASP.NET include statement should be parsed. This field is 
       read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.textRegex">
		<summary>
			<para>Specifies how text-only content on an ASP.NET Web page should be parsed. This 
       field is read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.gtRegex">
		<summary>
			<para>Specifies how to parse the &gt; characeter at the end of a tag. This field is 
       read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.ltRegex">
		<summary>
			<para>Specifies how to parse the &lt; characeter at the beginning of a tag. This 
       field is read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.serverTagsRegex">
		<summary>
			<para>Specifies how to parse any tags that designate an action on the server. This 
       field is read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.runatServerRegex">
		<summary>
			<para>Specifies how the marker that specifies that a control is to run on the 
       server, runat=server, is parsed. This field is read-only.</para>
		</summary>
	</doc>
	<doc for="BaseParser.MapPath">
		<overload>
			<para>Determines the path to the currently requested file.</para>
		</overload>
		<summary>
			<para>Obtains the relative path to the currently requested 
       file.</para>
		</summary>
		<param name="path">The relative path to the currently requested file.</param>
		<returns>
			<para>The path to the newly requested file.</para>
		</returns>
	</doc>
	<doc for="BaseParser.MapPath1">
		<summary>
			<para>Calls the Request.MapPath method for the current Web request to obtain an 
       absolute path to the requested file.</para>
		</summary>
		<param name="path">The path information obtained from the current Web request.</param>
		<param name=" allowCrossAppMapping"><see langword="true"/> to if the crossing application boundaries is permitted; otherwise, <see langword="false"/>.</param>
		<seealso cref="System.Web.HttpRequest"/>
	</doc>
	<doc for="BaseParser.PhysicalPath">
		<summary>
			<para>Resolves the physical paths involved when a relative path is created.</para>
		</summary>
		<param name="path">The relative path to the file that satisfies the current Web request.</param>
		<returns>
			<para>The fully-qualified path to the requested file.</para>
		</returns>
		<seealso cref="System.IO.Path.Combine"/>
		<seealso cref="System.IO.Path.GetFullPath"/>
	</doc>
	<doc for="BaseParser">
		<summary>
			<para> 
      Provides a base set of functionality for classes involved in parsing ASP.NET page
      requests and server controls.</para>
		</summary>
		<remarks>
			<para>Parsing involves all ASP.NET server controls, including 
      pages and user controls.</para>
		</remarks>
	</doc>
</docs>
