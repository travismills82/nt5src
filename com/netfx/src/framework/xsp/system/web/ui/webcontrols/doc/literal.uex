<docs>
	<doc for="Literal.AddParsedSubObject">
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Literal.CreateControlCollection">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Literal.Render">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="LiteralControlBuilder">
		<summary>
			<para>Interacts with the parser to build a <see cref="System.Web.UI.WebControls.Literal"/> control.</para>
		</summary>
		<remarks>
			<note type="inheritinfo">
      To create a
      custom control builder for a <see cref="System.Web.UI.WebControls.Literal"/> derived control, you need to inherit
      from this class.
   </note>
		</remarks>
	</doc><doc for="LiteralControlBuilder.AllowWhitespaceLiterals">
		<summary>
			<para>Determines whether white spaces in the text associated 
      with the <see cref="System.Web.UI.WebControls.Literal"/> control
      are represented by <see cref="System.Web.UI.LiteralControl" qualify="true"/> objects.</para>
		</summary>
		<returns>
			<para><see langword="false"/> for all cases.</para>
		</returns>
		<remarks>
			<para>This method overrides the inherited implementation of 
      the <see cref="System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" qualify="true"/> method to always indicate that
      white spaces in the text associated with the <see cref="System.Web.UI.WebControls.Literal"/> control are not
      represented by <see cref="System.Web.UI.LiteralControl" qualify="true"/> objects.</para>
		</remarks>
		<seealso cref="System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" qualify="true"/>
		<seealso cref="System.Web.UI.ControlBuilder" qualify="true"/>
		<seealso cref="System.Web.UI.LiteralControl" qualify="true"/>
	</doc><doc for="LiteralControlBuilder.AppendSubBuilder">
		<summary>
			<para>Adds the builders of all child
      controls associated with the <see cref="System.Web.UI.WebControls.Literal"/> control to the specified <see cref="System.Web.UI.ControlBuilder" qualify="true"/>
      object.</para>
		</summary>
		<param name="subBuilder">The <see cref="System.Web.UI.ControlBuilder" qualify="true"/> object to add the child control builders to. </param>
		<exception cref="System.Web.HttpException">An attempt is made to use this method.</exception>
		<remarks>
			<note type="caution">
      Do not attempt to use this method.
      This method is inherited from the <see cref="System.Web.UI.ControlBuilder" qualify="true"/> class and is not applicable to the <see cref="System.Web.UI.WebControls.LiteralControlBuilder"/>. It has been overridden to
      always throw an
      exception.
      
   </note>
		</remarks>
		<seealso cref="System.Web.UI.ControlBuilder.AppendSubBuilder" qualify="true"/>
		<seealso cref="System.Web.UI.ControlBuilder" qualify="true"/>
	</doc><doc for="Literal">
		<summary>
			<para>Reserves a location on the Web page to display static text.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Literal" qualify="true"/> control to reserve a location on the
   Web page to display text. The <see cref="System.Web.UI.WebControls.Literal"/> control is similar to the <see cref="System.Web.UI.WebControls.Label"/>
   control, except the <see cref="System.Web.UI.WebControls.Literal"/> control does not allow you to apply a
   style to the displayed text. You can programmatically
   control the text displayed in the control by setting the <see cref="System.Web.UI.WebControls.Literal.Text"/> property.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Literal"/> control to display static text.</para>
			<codelink SampleID="Literal" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Label"/>
		<seealso cref="System.Web.UI.WebControls.Literal.Text"/>
	</doc>
	<doc for="Literal.Text">
		<summary>
			<para>Gets or sets the caption displayed in the <see cref="System.Web.UI.WebControls.Literal"/> control.</para>
		</summary>
		<value>
			<para>The caption displayed in the <see cref="System.Web.UI.WebControls.Literal"/> control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Literal.Text"/> property to specify or
   determine the caption displayed in the <see cref="System.Web.UI.WebControls.Literal"/> control. This
   allows you to programmatically change the caption at run time. </para>
			<para>The caption is HTML decoded depending on how you
   assign a value to this property. If you assign a value through an
   attribute of the <see cref="System.Web.UI.WebControls.Literal"/> control,
   the value is HTML decoded before it is displayed. For example, <c>&lt;asp:Literal id="DisplayLiteral" Text="A&amp;nbsp;B"/&gt;</c> is rendered as "A B" on the browser. However, if
you set this property programmatically or by placing the text between the
opening and closing tags of the control, the caption is not HTML decoded. For
example, <c>&lt;asp:Literal id="DisplayLiteral"&gt; A&amp;nbsp;B &lt;/asp:Literal&gt;</c> is rendered as "A&amp;nbsp;B". </para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Literal.Text"/>
property to programmatically change the caption displayed in the <see cref="System.Web.UI.WebControls.Literal"/>
control.</para>
			<codelink SampleID="Literal" SnippetID="1"/>
		</example>
	</doc>
</docs>
