<docs>
	<doc for="TraceContext.PageOutput">
		<summary>
			<para>Indicates whether trace information should be output to a Web Forms 
       page. This property is used only in application-level tracing situations. You
       can set this property in your application's config.web configuration file which
       resides in the root directory of the application. </para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if application-level information 
    should be output to each page in the application; otherwise,
 <see langword="false"/>. The default is 
 <see langword="true"/> .</para>
		</value>
		<remarks>
			<para>When you enable tracing at the application-level in your config.web file, 
       trace information is gathered for all pages within your application. However,
       this information is not displayed on any of those pages unless you set this
       property to true with the <see topic="cpconpage"/> directive or programmatically.</para>
		</remarks>
		<seealso topic="cpconpage"/>
		<seealso cref="System.Web.UI.Page"/>
		<keyword term="outputting trace messages to a page"/>
		<keyword term="tracing, application-level"/>
		<keyword term="application-level tracing"/>
		<keyword term="trace messages, outputting to a page"/>
	</doc>
	<doc for="TraceContext.Write">
		<overload>
			<para> Writes trace information to the
      trace log.</para>
		</overload>
		<summary>
			<para> Writes a trace message to the trace log.</para>
		</summary>
		<param name="message">The trace message to write to the log.</param>
	</doc><doc for="TraceContext.TraceContext">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.TraceContext"/> class.</para>
		</summary>
		<param name="context">An <see cref="System.Web.HttpContext"/> that contains information about the current Web request.</param>
		<seealso cref="System.Web.HttpContext"/>
	</doc><doc for="TraceContext.IsEnabled">
		<summary>
			<para> Indicates whether tracing is
      enabled for the current Web request. </para>
		</summary>
		<value>
			<para><see langword="true"/> if tracing is enabled; otherwise,
<see langword="false"/>. The default is the 
   setting of the <see langword="enabled"/> attribute in the
<see langword="&lt;trace&gt;"/> section of a 
   configuration file. If <see langword="enabled"/> is not set in a
   configuration file, the default is <see langword="false."/></para>
		</value>
		<remarks>
			<para>Use this flag to check whether your page or application should output tracing information
      before it writes anything to the trace log. You can set this property
      to <see langword="true"/> for a page by including a trace="true" attribute in the
   <see topic="cpconpage"/> directive. To set the property to 
   <see langword="true"/> 
   for an entire application, set it in the application's
   Web.config file.</para>
			<note type="note">
   If you set this property to
<see langword="true"/> for an 
   entire application, you must explicitly set this property to
<see langword="false"/> for any page in the application for which you do not want 
   tracing information displayed.
</note>
		</remarks>
		<example>
			<para> The following example demonstrates how you can check to
      see if tracing is enabled for a page before writing debugging code to it. The
      code iterates through the rows in a dataset, writing trace statements
      for each
      row in that dataset.</para>
			<codelink SampleID="Classic TraceContext.IsEnabled Example" SnippetID="1"/>
		</example>
		<seealso topic="cpconpage"/>
	</doc><doc for="TraceContext.Write2">
		<summary>
			<para> Writes trace information to the trace log, including any user-defined
      categories,trace messages, and error information.</para>
		</summary>
		<param name="category">The trace category that receives the message.</param>
		<param name="message">The trace message to write to the log.</param>
		<param name="errorInfo">An <see cref="System.Exception"/> that contains information about the error.</param>
		<seealso cref="System.Exception"/>
	</doc><doc for="TraceContext.Warn">
		<overload>
			<para> Writes trace information to the trace log. Unlike <see cref="System.Web.TraceContext.Write"/> , all
   warnings appear in the log as red text.</para>
		</overload>
		<summary>
			<para> Writes a trace message to
      the trace log. All warnings appear as in the log as red text.</para>
		</summary>
		<param name="message">The trace message to write to the log.</param>
	</doc><doc for="TraceContext.Warn1">
		<overload>
			<para> Writes trace information to the trace log. All
      warnings appear in the log as red text.</para>
		</overload>
		<summary>
			<para> Writes trace information to the trace log, including any user-defined categories
      and trace messages. All warnings appear in the log as red text.</para>
		</summary>
		<param name="category">The trace category that receives the message.</param>
		<param name="message">The trace message to write to the log.</param>
	</doc><doc for="TraceContext.Warn2">
		<summary>
			<para> Writes trace information to the trace log, including any user-defined categories,trace messages, and error information. All warnings appear in
      the log as red text. </para>
		</summary>
		<param name="category">The trace category that receives the message.</param>
		<param name="message">The trace message to write to the log.</param>
		<param name="errorInfo">An <see cref="System.Exception"/> that contains information about the error.</param>
		<seealso cref="System.Exception"/>
	</doc><doc for="TraceContext.Write1">
		<overload>
			<para> Writes trace information to the
      trace log.</para>
		</overload>
		<summary>
			<para> Writes trace information to the trace log, including
      a message and any user-defined categories.</para>
		</summary>
		<param name="category">The trace category that receives the message.</param>
		<param name="message">The trace message to write to the log.</param>
	</doc><doc for="TraceContext.TraceMode">
		<summary>
			<para> Gets or sets
      the sorted order in which trace messages
      should be output to a requesting browser.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.TraceMode"/> enumeration values. The default is the setting
   specified by the <see langword="traceMode"/> attribute in the
<see langword="&lt;trace&gt;"/> section of a configuration file whose default is 
<see langword="SortByTime"/>.</para>
		</value>
		<remarks>
			<para>Trace messages can be sorted in the order they were processed, or
      alphabetically by user-defined category.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how you can sort a page's trace statements
      alphabetically by categories that you have assigned to the statements. </para>
			<codelink SampleID="Classic TraceContext.TraceMode Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.Page"/>
		<seealso topic="cpconpage"/>
		<keyword term="tracing, sorting trace messages"/>
		<keyword term="sorting trace messages"/>
	</doc><doc for="TraceContext">
		<summary>
			<para>Captures and presents execution details about a Web request. This class
      cannot be inherited.</para>
		</summary>
		<remarks>
			<para> You can use this class to append messages to specific
      trace categories. For example, if you are creating an instance of
      the <see cref="System.Web.UI.WebControls.Calendar"/>
      class for
      your application, you might include the trace message "Starting To Render" in a rendering
      procedure, and "Firing OnChange Event" in an event handler procedure.</para>
			<para> To enable tracing, set the <see langword="Trace "/>attribute in the
<see topic="cpconpage "/> directive or the <see cref="System.Web.TraceContext.IsEnabled"/> property. When tracing is enabled, in addition to
   showing user-provided trace content, the <see cref="System.Web.UI.Page"/> class automatically includes
   performance data, control-tree structure information, and state management
   content.</para>
		</remarks>
	</doc></docs>
