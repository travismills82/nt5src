<docs>
	<doc for="CompareValidator.AddAttributesToRender">
		<internalonly/>
		<summary>
			<para>Adds the attributes of this control to the output stream for rendering on the 
       client.</para>
		</summary>
		<param name="writer">A <see cref="System.Web.UI.HtmlTextWriter" qualify="true"/> that contains the output stream for rendering on the client.</param>
	</doc>
	<doc for="CompareValidator.EvaluateIsValid">
		<internalonly/>
		<summary>
    EvaluateIsValid method
 </summary>
	</doc>
	<doc for="CompareValidator.ControlPropertiesValid">
		<internalonly/>
		<summary>
			<para> Checks the properties of a the control for valid values.</para>
		</summary>
		<returns>
			<para>
				<see langword="true"/> if the control properties are
   valid; otherwise <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="CompareValidator.ValueToCompare">
		<summary>
			<para>Gets or sets a constant value to compare with the value entered by the user into the input control being validated.</para>
		</summary>
		<value>
			<para>The constant value to compare with the value entered by the user into the input control being validated. The default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> property to specify
 a constant value to compare with the value entered by the user into the input
 control being validated. If the constant value specified by this property fails
 to convert to the data type specified by the <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/> property, a exception is thrown.</para>
			<note type="note">
 Do not set both the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> and <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> properties at the
 same time. You can either compare the value of an input control to another input
 control, or to a constant value. If both properties are set, the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> property takes
 precedence.
 
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> property to compare
 the value entered by the user into a <see cref="System.Web.UI.WebControls.TextBox"/> control with a constant value.</para>
			<codelink SampleID="Classic CompareValidator.ValueToCompare Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/>
		<seealso cref="System.Web.UI.WebControls.BaseCompareValidator.Type"/>
		<seealso cref="System.Web.UI.WebControls.BaseValidator.IsValid"/>
		<seealso cref="System.String.Empty" qualify="true"/>
	</doc><doc for="CompareValidator.ControlToCompare">
		<summary>
			<para> Gets or sets the input control to compare with the input control being validated.</para>
		</summary>
		<value>
			<para> The input control to compare with the input control being validated. The
 default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> property to
 specify an input control, such as a <see cref="System.Web.UI.WebControls.TextBox"/>
 , to compare with the input control being validated. If the input control
 specified by this property is not a control on the page, an exception is
 thrown. </para>
			<note type="note">
 Do not set both the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> and <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> properties at the same
 time. You can either compare the value of an input control to another input control,
 or to a constant value. If both properties are set, the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> property takes
 precedence.
</note>
			<para>For additional information, see <see cref="System.Web.UI.WebControls.BaseValidator.ControlToValidate" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> property to specify
 the control to compare with the control being
 validated.</para>
			<codelink SampleID="Classic CompareValidator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseValidator.ControlToValidate" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/>
		<seealso cref="System.Web.UI.WebControls.TextBox"/>
		<seealso cref="System.Web.UI.WebControls.BaseValidator.IsValid"/>
		<seealso cref="System.String.Empty" qualify="true"/>
	</doc><doc for="CompareValidator.Operator">
		<summary>
			<para>Gets or sets the comparison operation to perform.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.ValidationCompareOperator"/> values. The default value is
<see langword="Equal"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The specified comparison operator is not one of the <see cref="System.Web.UI.WebControls.ValidationCompareOperator"/> values. </exception>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.CompareValidator.Operator"/> property to specify the comparison operation to
 perform. The following table lists the comparison operations that are
 possible.</para>
			<list type="table">
				<listheader>
					<term>Operation</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="Equal"/></term>
					<description>A
 comparison
 for equality between the values of the input control being validated
 and another control, or a constant value.</description>
				</item>
				<item>
					<term><see langword="NotEqual"/></term>
					<description>A
 comparison for inequality between the the values of the input control
 being validated and another control, or a constant value.</description>
				</item>
				<item>
					<term><see langword="GreaterThan"/></term>
					<description>A
 comparison
 for greater than between the the values of the input control being
 validated and another control, or a constant value.</description>
				</item>
				<item>
					<term><see langword="GreaterThanEqual"/></term>
					<description>A
 comparison for
 greater than or equal to between the values of the input control
 being validated and another control, or a constant
 value.</description>
				</item>
				<item>
					<term><see langword="LessThan"/></term>
					<description>A
 comparison
 for less than between the values of the input control being validated
 and another control, or a constant value.</description>
				</item>
				<item>
					<term>
						<para><see langword="LessThanEqual"/></para></term>
					<description>A
 comparison for
 less than or equal to between the values of the input control being
 validated and another control, or a constant
 value.</description>
				</item>
				<item>
					<term><see langword="DataTypeCheck"/></term>
					<description>
						<para>A data
 type comparison of the value entered into the input control being
 validated and the data type specified by the <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/> property.
 Validation fails if the value cannot be converted to the specified data
 type.</para>
						<note type="note">
 
 The <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> and <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> properties are
 ignored when this operator is used.
 
 </note></description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.CompareValidator.Operator"/> property
 to specify the comparison operation.</para>
			<codelink SampleID="Classic CompareValidator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ValidationCompareOperator"/>
	</doc><doc for="CompareValidator">
		<summary>
			<para> Compares the value entered by the user into an input control with
      the value entered into another input control or a constant value.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.CompareValidator"/> control to compare the
   value entered by the user into an input control, such as a <see cref="System.Web.UI.WebControls.TextBox"/> control, with the value entered into
   another input control or a constant value. You can also use the <see cref="System.Web.UI.WebControls.CompareValidator"/> control to indicate whether
   the value entered into an input control can be converted to
   the data type specified by the <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/>
   
   property. </para>
			<para>Specify the input control to validate by setting the
<see cref="System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property. If you 
   want to compare a specific input control with another input control, set the
<see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> 
property to specify the control to compare
with. </para>
			<note type="note">
   If the value entered into the
   input control specified by the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> property
   cannot be converted to
   the data type specified by the <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/> property, but
   the value entered
   into the input control specified by the <see cref="System.Web.UI.WebControls.BaseValidator.ControlToValidate"/> property can be converted, the
   input control being validated is considered valid. Therefore, you should
   also place a <see cref="System.Web.UI.WebControls.CompareValidator"/> or <see cref="System.Web.UI.WebControls.RangeValidator"/> control on the input control
   specified by the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/>
   
   property.
</note>
			<para>Instead of comparing the value of an input control with another input
   control, you can compare the value of an input control to a constant value. Specify
   the constant value to compare with by setting the <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> property.</para>
			<note type="note">
   If the value specified by the
<see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> property cannot be converted 
   to the data type specified by the <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/> property, an
   exception is thrown. Be sure to check the data type of a value before
   programmatically assigning it to the <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/>
   property.
</note>
			<note type="note">
   Do not set both the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> and <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> properties at the
   same time. You can either compare the value of an
   input control to another input control, or to a constant value. If both properties are set, the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> property takes precedence.
</note>
			<para> Use the <see cref="System.Web.UI.WebControls.CompareValidator.Operator"/> property to specify
the type of comparison to perform, such as greater than, equal to, and so on. If
you set the <see cref="System.Web.UI.WebControls.CompareValidator.Operator"/> property to
<see langword="ValidationCompareOperator.DataTypeCheck"/>, the 
<see cref="System.Web.UI.WebControls.CompareValidator"/> control ignores the <see cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/> and <see cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/> properties and 
simply indicates whether the value entered into the input control can be
converted to the data type specified by the <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/>
property. </para>
The <see cref="System.Web.UI.WebControls.BaseCompareValidator.Type" qualify="true"/> property is used
to specify the data type of both comparison values. Both values are
automatically converted to this data type before the comparison operation is
performed. The following table lists the various data types that can be
compared.
<list type="table"><listheader>
					<term>Data Type</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="String"/></term>
					<description>A string data type.</description>
				</item>
				<item>
					<term><see langword="Integer"/></term>
					<description>A
   32-bit signed integer data type.</description>
				</item>
				<item>
					<term><see langword="Double"/></term>
					<description>A
   double-precision floating point number data type.</description>
				</item>
				<item>
					<term><see langword="Date"/></term>
					<description>A date data type.</description>
				</item>
				<item>
					<term><see langword="Currency"/></term>
					<description>A decimal data type that can contain currency symbols.</description>
				</item>
			</list>
			<note type="note">
   If the input control is empty,
   no validation functions are called
   and validation succeeds. Use a <see cref="System.Web.UI.WebControls.RequiredFieldValidator"/> control
   to require the user to enter data into the input control.
</note>
			<para>For additional information on validation controls, see <see cref="System.Web.UI.WebControls.BaseValidator"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use a <see cref="System.Web.UI.WebControls.CompareValidator"/> control
   to compare the values in two <see cref="System.Web.UI.WebControls.TextBox"/> controls.</para>
			<codelink SampleID="Classic CompareValidator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseValidator"/>
		<seealso cref="System.Web.UI.WebControls.BaseCompareValidator"/>
		<seealso cref="System.Web.UI.WebControls.TextBox"/>
		<seealso cref="System.Web.UI.WebControls.BaseValidator.ControlToValidate"/>
		<seealso cref="System.Web.UI.WebControls.CompareValidator.ControlToCompare"/>
		<seealso cref="System.Web.UI.WebControls.CompareValidator.ValueToCompare"/>
		<seealso cref="System.Web.UI.WebControls.CompareValidator.Operator"/>
		<seealso cref="System.Web.UI.WebControls.BaseCompareValidator.Type"/>
		<seealso cref="System.Web.UI.WebControls.RequiredFieldValidator"/>
	</doc></docs>
