<docs>
	<doc for="BaseDataList.EventSelectedIndexChanged">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/>for the <see langword="SelectedIndexChanged "/>event for a <see cref="System.Web.UI.WebControls.BaseDataList"/>. This 
    field is read-only. </para>
		</summary>
	</doc>
	<doc for="BaseDataList.CreateChildControls">
		<summary>
			<para>Creates a child control using the view state.</para>
		</summary>
	</doc>
	<doc for="BaseDataList.OnDataBinding">
		<summary>
			<para>Raises the <see langword="DataBinding "/>event of a <see cref="System.Web.UI.WebControls.BaseDataList"/> 
 .</para>
		</summary>
		<param name="e">An <see cref="System.EventArgs" qualify="true"/> that contains the event data.</param>
		<remarks>
			<para>The event is raised when data is bound to the control.</para>
		</remarks>
	</doc>
	<doc for="BaseDataList.Render">
		<summary>
			<para>Displays the control on the client.</para>
		</summary>
		<param name="writer">An <see cref="System.Web.UI.HtmlTextWriter" qualify="true"/> that contains the output stream to render on the client.</param>
	</doc>
	<doc for="BaseDataList.AddParsedSubObject">
		<nodoc/>
		<summary>
			<para> Overridden.</para>
		</summary>
		<param name="obj">The object to add.</param>
	</doc><doc for="BaseDataList.PrepareControlHierarchy">
		<nodoc/>
		<summary>
			<para> Overridden.</para>
		</summary>
	</doc><doc for="BaseDataList.CreateControlHierarchy">
		<nodoc/>
		<summary>
			<para> Overridden.</para>
		</summary>
		<param name="useDataSource"><see langword="true"/> to use the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>; otherwise, <see langword="false"/>.</param>
	</doc><doc for="BaseDataList.BaseDataList">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.BaseDataList"/> class.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Web.UI.WebControls.BaseDataList"/> object is not created directly. This
   constructor is commonly called in the constructor of a derived class to
   initialize the properties defined in the <see cref="System.Web.UI.WebControls.BaseDataList"/> class.</para>
		</remarks>
		<seealso cref="M:System.Web.UI.WebControls.DataList.#ctor"/>
		<seealso cref="M:System.Web.UI.WebControls.DataGrid.#ctor"/>
	</doc><doc for="BaseDataList.DataKeysArray">
		<nodoc/>
		<summary>
			<para>Gets a list of key fields in the data source. </para>
		</summary>
	</doc><doc for="BaseDataList">
		<summary>
			<para>Serves as the abstract base class for data listing controls, such as the <see cref="System.Web.UI.WebControls.DataList"/> and <see cref="System.Web.UI.WebControls.DataGrid"/>. This class provides the methods and properties common to all data
   listing controls.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList"/> class
   provides the common functionality for all data listing controls, such as the <see cref="System.Web.UI.WebControls.DataList"/> and <see cref="System.Web.UI.WebControls.DataGrid"/>. A data listing control is
   used to display the records of a data source, such as a <see cref="System.Data.DataView" qualify="true"/>. Each data listing control can have a unique display
   style and capabilities. Because the <see cref="System.Web.UI.WebControls.BaseDataList"/> class is
   abstract, an
   instance of this class is not created directly. Instead, data listing controls
   inherit the methods and properties common to all data listing
   controls from this class.</para>
			<para>The appearance of a data listing control can be controlled by setting
   certain properties of this class. You can control the amount of spacing between
   the cells of a data listing control by setting the <see cref="System.Web.UI.WebControls.BaseDataList.CellSpacing"/> property. To control the amount of spacing
   between the contents of a cell and the cell's border, set the <see cref="System.Web.UI.WebControls.BaseDataList.CellPadding"/> property. The border between
   the individual cells of a data listing control can be displayed by setting the
<see cref="System.Web.UI.WebControls.BaseDataList.GridLines"/> property. The horizontal alignment of 
   the content in the cells of a data listing control is controlled by
   setting the <see cref="System.Web.UI.WebControls.BaseDataList.HorizontalAlign"/> property. </para>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList"/> class provides methods
and properties that allow you to bind a data source to a data listing control. Use the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
property to specify the data source to
bind to. </para>
			<note type="note">
   The data source must be an object that
   implements the <see cref="System.Collections.IEnumerable" qualify="true"/>
   
   interface (such as <see cref="System.Data.DataView" qualify="true"/>, <see cref="System.Collections.ArrayList" qualify="true"/>, and <see cref="System.Collections.Hashtable" qualify="true"/>) to bind to a control derived from the <see cref="System.Web.UI.WebControls.BaseDataList"/> class.
</note>
			<para> If the data source contains multiple sources of data,
   use the <see cref="System.Web.UI.WebControls.BaseDataList.DataMember"/> property to specify the
   specific source to bind to the control. For example, if you have a <see cref="System.Data.DataSet" qualify="true"/> with
   multiple tables, you must specify which table to bind to the control. After you
   have specified the data source, use the <see cref="System.Web.UI.WebControls.BaseDataList.DataBind"/>
   method to bind the data source to
   the control. </para>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList"/> class
contains a <see cref="System.Web.UI.WebControls.BaseDataList.DataKeys"/> collection that
stores the key field of
each record (displayed as a row) in a data listing control. This allows you to store the key field with a data listing control without displaying it
in the control. The key field is commonly used as part of an update query
string to revise a specific record in the data source. The collection is filled with the values
from the field specified by the <see cref="System.Web.UI.WebControls.BaseDataList.DataKeyField"/>
property. </para>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList"/> class provides a <see cref="System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged"/> event that is raised
when the selected item in the control changes. This allows you to create a
custom event handler that performs
a specific set of instructions when the event
is raised. </para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
		<seealso cref="System.Web.UI.WebControls.DataList"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.CellSpacing"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.CellPadding"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.GridLines"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.HorizontalAlign"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataMember"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataBind"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataKeys"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataKeyField"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged"/>
		<seealso cref="System.Collections.IEnumerable" qualify="true"/>
		<seealso cref="System.Data.DataView" qualify="true"/>
		<seealso cref="System.Collections.ArrayList" qualify="true"/>
		<seealso cref="System.Collections.Hashtable" qualify="true"/>
		<seealso cref="System.Data.DataSet" qualify="true"/>
	</doc>
	<doc for="BaseDataList.CellPadding">
		<summary>
			<para>Gets or sets the amount of space between the contents of a cell and the
      cell's border.</para>
		</summary>
		<value>
			<para>The amount of space (in pixels) between the contents of
      a cell and the cell's border. The default value is -1, which indicates
      that this property is not set.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.CellPadding"/>
property to control the spacing between the contents
of a cell and
the cell's border. The padding amount specified is added to all four sides of the cell.</para>
			<para> All cells in the same column of a data listing control share the
   same cell width. Therefore, if the content of one cell is longer than the content
   other cells in the same column, the padding amount is applied to the widest cell.
   All other cells in the column are also set with this cell width. </para>
			<para> Similarly, all cells in the same row share the same height. The padding amount
   is applied to the height of the tallest cell in the row. All other
   cells in the row are set with this cell height. Individual cell
   sizes cannot be specified.</para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListCellPadding" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.CellSpacing"/>
	</doc>
	<doc for="BaseDataList.DataSource">
		<summary>
			<para> Gets or sets the source containing a list of values used to populate
      the items within the control.</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.IEnumerable" qualify="true"/> implemented object that contains a collection of values used to supply data to this
   control. The default value is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/> property to specify the
   source of values to bind to a data listing control. The data source must be an object that implements the
<see cref="System.Collections.IEnumerable" qualify="true"/> interface (such as <see cref="System.Data.DataView" qualify="true"/>, 
<see cref="System.Collections.ArrayList" qualify="true"/>, and <see cref="System.Collections.Hashtable" qualify="true"/>) to bind to a control 
   derived from the <see cref="System.Web.UI.WebControls.BaseDataList"/>
   class.</para>
		</remarks>
		<example>
			<codelink SampleID="Classic DataGrid Example 2" SnippetID="1"/>
		</example>
		<seealso cref="System.Collections.IEnumerable" qualify="true"/>
		<seealso cref="System.Data.DataView" qualify="true"/>
		<seealso cref="System.Collections.ArrayList" qualify="true"/>
		<seealso cref="System.Collections.Hashtable" qualify="true"/>
		<seealso cref="System.Data.DataSet" qualify="true"/>
	</doc>
	<doc for="BaseDataList.GridLines">
		<summary>
			<para>Gets or sets a value that specifies whether the border between the cells of a data listing control is displayed.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.GridLines"/> values. The default
   value is <see langword="Both"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.GridLines"/> property to specify
   whether the border between the cells of a data listing control is displayed. This
   property is set with one of the <see cref="System.Web.UI.WebControls.GridLines"/> enumeration values. The following
   table lists the possible values.</para>
			<list type="table">
				<listheader>
					<term>Value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="None"/></term>
					<description>No
      cell border is displayed.</description>
				</item>
				<item>
					<term><see langword="Horizontal"/></term>
					<description> Only the upper and lower borders of the cells in a data listing control are
   displayed.</description>
				</item>
				<item>
					<term><see langword="Vertical"/></term>
					<description> Only the left and right borders of the cells in the data
   list control are displayed.</description>
				</item>
				<item>
					<term><see langword="Both"/></term>
					<description>All
   borders of the cells in a data listing control are
   displayed.</description>
				</item>
			</list>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListGridLines" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.GridLines"/>
	</doc>
	<doc for="BaseDataList.IsBindableType">
		<summary>
			<para>Determines whether the specified data type is bindable to a list control that derives from the
   <see cref="System.Web.UI.WebControls.BaseDataList"/> class.</para>
		</summary>
		<param name="type">A <see cref="System.Type" qualify="true"/> object that contains the data type to test.</param>
		<returns>
			<para><see langword="true "/>if the
   specified data type is bindable to a list control that derives from the <see cref="System.Web.UI.WebControls.BaseDataList"/> class; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.IsBindableType"/> static method to determine whether the specified data type is
   bindable to a list control that inherits from the <see cref="System.Web.UI.WebControls.BaseDataList"/> class. The supported data types are
<see cref="System.Boolean" qualify="true"/>, <see cref="System.Byte" qualify="true"/>, <see cref="System.SByte" qualify="true"/>, 
<see cref="System.Int16" qualify="true"/>, <see cref="System.UInt16" qualify="true"/>, <see cref="System.Int32" qualify="true"/>, <see cref="System.UInt32" qualify="true"/>, 
<see cref="System.Int64" qualify="true"/>, <see cref="System.UInt64" qualify="true"/>, <see cref="System.Char" qualify="true"/>, 
<see cref="System.Double" qualify="true"/>, <see cref="System.Single" qualify="true"/>, <see cref="System.DateTime" qualify="true"/>, 
<see cref="System.Decimal" qualify="true"/>, and <see cref="System.String" qualify="true"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListIsBindableType" SnippetID="1"/>
		</example>
		<seealso cref="System.Type" qualify="true"/>
		<seealso cref="System.DateTime" qualify="true"/>
		<seealso cref="System.Decimal" qualify="true"/>
		<seealso cref="System.Type.IsPrimitive" qualify="true"/>
		<seealso cref="System.Boolean" qualify="true"/>
		<seealso cref="System.Byte" qualify="true"/>
		<seealso cref="System.SByte" qualify="true"/>
		<seealso cref="System.Int16" qualify="true"/>
		<seealso cref="System.UInt16" qualify="true"/>
		<seealso cref="System.Int32" qualify="true"/>
		<seealso cref="System.UInt32" qualify="true"/>
		<seealso cref="System.Int64" qualify="true"/>
		<seealso cref="System.UInt64" qualify="true"/>
		<seealso cref="System.Char" qualify="true"/>
		<seealso cref="System.Double" qualify="true"/>
		<seealso cref="System.Single" qualify="true"/>
		<seealso cref="System.DateTime" qualify="true"/>
		<seealso cref="System.Decimal" qualify="true"/>
		<seealso cref="System.String" qualify="true"/>
	</doc>
	<doc for="BaseDataList.Controls">
		<summary>
			<para>Gets a <see cref="System.Web.UI.ControlCollection" qualify="true"/> that contains
   a collection of child controls in a data
   listing control. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ControlCollection" qualify="true"/> that contains
   a collection of child controls in a data listing control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.Controls"/>
collection to manage the child controls contained in a data listing control.
You can add controls, remove controls, or iterate through the server
controls in the collection.</para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListControls" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.ControlCollection" qualify="true"/>
	</doc>
	<doc for="BaseDataList.CellSpacing">
		<summary>
			<para>Gets or sets the amount of space between cells.</para>
		</summary>
		<value>
			<para> The amount of space (in pixels) between cells. The
      default value is 0.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.CellSpacing"/> property to control the spacing between adjacent
   cells in a data listing control. This spacing is applied both vertically and
   horizontally. The cell spacing is uniform for the
   entire data listing control. Individual cell spacing between each row or column
   cannot be specified.</para>
			<note type="note">
   If you set this property to a value
   greater than <see langword="0"/>
   and set the <see cref="System.Web.UI.WebControls.BaseDataList.GridLines"/> property to a value that
   displays the cell borders, a gap is
   displayed between the borders of adjacent cells. In this situation,
   the <see cref="System.Web.UI.WebControls.BaseDataList.CellSpacing"/>
   property controls the size of the gap.
</note>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListCellPadding" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.CellPadding"/>
	</doc>
	<doc for="BaseDataList.DataBind">
		<summary>
			<para> Binds the control and all its child controls to the
      data source specified by the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
      property.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.DataBind"/> method to bind the data
   source specified by the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/> property with the data
   list control. By binding the data source with a data listing control, the information in the data
   source is displayed in a data listing control.</para>
			<para> The <see cref="System.Web.UI.WebControls.BaseDataList.DataBind"/> method is also commonly
used to synchronize the data source and a data listing control after
information in the data source is updated. This allows any changes in the data
source to also be updated in a data listing control.</para>
		</remarks>
		<example>
			<codelink SampleID="Classic DataGrid Example 2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
	</doc>
	<doc for="BaseDataList.DataMember">
		<summary>
			<para> Gets or sets the specific data member in a multimember
      data source to bind to a data listing
      control.</para>
		</summary>
		<value>
			<para> A data member from a multimember data source. The default value is
   <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.DataMember"/> property to specify a member from
   a multimember data source to bind to the list control. For example, if you have
   a data source, with more than one table, specified in the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
   property, use the <see cref="System.Web.UI.WebControls.BaseDataList.DataMember"/> property to specify which table
   to bind to a data listing
   control. </para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListDataMember" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
	</doc>
	<doc for="BaseDataList.DataKeys">
		<summary>
			<para> Gets a <see cref="System.Web.UI.WebControls.DataKeyCollection"/> that stores the key values of each record (displayed
   as a row) in a data listing control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.DataKeyCollection"/> that stores the key values of each record in a data listing control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.DataKeys"/> collection to
   access the key values of each record (displayed as a row) in a data listing control.
   This allows you to store the key field with a data listing control without
   displaying it in the control. This collection
   is automatically filled with the values from the field specified by the <see cref="System.Web.UI.WebControls.BaseDataList.DataKeyField"/> property. </para>
			<para> The key field is commonly used in
   a handler for an event, such as <see langword="ItemCommand"/> or
<see langword="DeleteCommand"/>, as part of an update query
   string to revise a specific record in the data source. The key field
   helps the update query string identify the appropriate record to
   modify. </para>
			<para> For more information on accessing data with ASP.NET, see
<see topic="cpconAccessingDataWithASPNET"/>. </para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListDataKeys" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataKeyCollection"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataKeyField"/>
		<seealso topic="cpconAccessingDataWithASPNET"/>
	</doc>
	<doc for="BaseDataList.DataKeyField">
		<summary>
			<para> Gets or sets the key field in the data source specified by the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/> property.</para>
		</summary>
		<value>
			<para> The name of the key field in the data source specified by
      the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/> property. </para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.DataKeyField"/> property to specify the
   key field in the data source indicated by the <see cref="System.Web.UI.WebControls.BaseDataList.DataSource"/> property. The specified
   field is used to populate the <see cref="System.Web.UI.WebControls.BaseDataList.DataKeys"/> collection. This allows
   you to store the key field with a data listing control without displaying it in
   the control. The key field is commonly used in a handler for an event, such as
<see langword="ItemCommand"/> or <see langword="DeleteCommand"/> 
, as part of an update query
string to revise a specific record in the data source. The key field helps the update
query string identify the appropriate record to
modify.</para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListDataKeys" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataKeys"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataSource"/>
	</doc>
	<doc for="BaseDataList.SelectedIndexChanged">
		<summary>
			<para>Occurs when a different item is selected in a data listing control between posts to the server.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged"/> event is raised when
   a different item is selected in
   a data listing control between posts to the server.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/> .</para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListSelectedIndexChanged" SnippetID="1"/>
			<codelink SampleID="BaseDataListSelectedIndexChanged2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged"/>
		<seealso cref="System.EventHandler" qualify="true"/>
	</doc>
	<doc for="BaseDataList.OnSelectedIndexChanged">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged"/> event of a <see cref="System.Web.UI.WebControls.BaseDataList"/>. This
   allows you to create a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.EventArgs" qualify="true"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged"/> event is raised when
   a different item is selected in a data listing control between posts to the
   server. The <see cref="System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged"/> method allows you to
   create a custom handler for the event. </para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged"/> in a derived class, be 
   sure to call the base class's <see cref="System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListSelectedIndexChanged" SnippetID="1"/>
			<codelink SampleID="BaseDataListSelectedIndexChanged2" SnippetID="1"/>
		</example>
	</doc>
	<doc for="BaseDataList.HorizontalAlign">
		<summary>
			<para> Gets or sets the horizontal alignment of a data listing control within
      its container.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.HorizontalAlign"/> values. The default
   value is <see langword="NotSet"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BaseDataList.HorizontalAlign"/> property to specify the
   horizontal alignment of a data listing control within its container. This
   property is set with one of the <see cref="System.Web.UI.WebControls.HorizontalAlign"/>
   enumeration values. The following table lists the possible values. </para>
			<list type="table">
				<listheader>
					<term>Value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="NotSet"/></term>
					<description>The horizontal alignment is not set.</description>
				</item>
				<item>
					<term><see langword="Left"/></term>
					<description>The data listing control is left justified within
   its container.</description>
				</item>
				<item>
					<term><see langword="Center"/></term>
					<description> The
   data listing control is centered within its container.</description>
				</item>
				<item>
					<term><see langword="Right"/></term>
					<description> The data listing control is right justified
   within its container.</description>
				</item>
			</list>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListHorizontalAlign" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.HorizontalAlign"/>
	</doc>
</docs>
