<docs>
	<doc for="ValidatedControlConverter.GetStandardValues">
		<summary>
			<para>Returns a collection of standard values retrieved from the context specified
       by the specified type descriptor.</para>
		</summary>
		<param name="context">A type descriptor that specifies the location of the context to convert from.</param>
		<returns>
			<para>A StandardValuesCollection that represents the standard values collected from
       the specified context.</para>
		</returns>
	</doc>
	<doc for="ValidatedControlConverter.GetStandardValuesExclusive">
		<summary>
			<para>Gets whether
       or not the context specified contains exclusive standard values.</para>
		</summary>
		<param name="context">A type descriptor that indicates the context to convert from.</param>
		<returns>
			<para><see langword="true"/> if the specified context contains exclusive standard 
    values, otherwise <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="ValidatedControlConverter.GetStandardValuesSupported">
		<summary>
			<para>Gets whether or not the specified context contains supported standard
       values.</para>
		</summary>
		<param name="context">A type descriptor that indicates the context to convert from.</param>
		<returns>
			<para><see langword="true"/> if the specified context conatins supported standard 
    values, otherwise <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="ValidatedControlConverter.ValidatedControlConverter">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.ValidatedControlConverter"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new 
      instance of the <see cref="System.Web.UI.WebControls.ValidatedControlConverter"/>class.</para>
		</remarks>
	</doc><doc for="ValidatedControlConverter">
		<summary>
			<para> Converts a control on the Web Forms page
      that can be validated with a validation control to a
      string.</para>
		</summary>
		<remarks>
			<para>Not all controls can be validated with a validation control.
      This class creates a collection of controls on the Web Forms page that
      can be associated with a validation control. This collection is
      commonly used in a designer to display a list of controls on the Web
      Forms page that can be associated with a validation control.</para>
			<para> When creating your own validation control, you can
      provide the ability for the designer to display a list of controls
      that support validation controls. Simply add an attribute to the string property that represents the control to validate as follows: </para>
			<code lang="VB">&lt;TypeConverter(GetType(ValidatedControlConverter))&gt; _
Public Property ControlToValidate() As String

   Get    

      // Add code to get the name of the control to validate.

   End Get

   Set
  
      // Add code to set the name of the control to validate.
   
   End Set

End Property
   </code>
			<code lang="C#">[TypeConverter(typeof(ValidatedControlConverter))]
public string ControlToValidate
{
   get 
   {
      // Add code to get the name of the control to validate.
   }
   set
   {
      // Add code to set the name of the control to validate.
   }
}
   </code>
		</remarks>
		<seealso cref="System.ComponentModel.TypeConverter" qualify="true"/>
	</doc></docs>
