<docs>
	<doc for="DataList.CreateControlHierarchy">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.CreateControlStyle">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.CreateItem">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.LoadViewState">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.TrackViewState">
		<summary>
			<para>Marks the starting point to begin tracking and saving changes to the 
       control as part of the control viewstate.</para>
		</summary>
	</doc>
	<doc for="DataList.OnBubbleEvent">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.PrepareControlHierarchy">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.RenderContents">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.IRepeatInfoUser.HasFooter">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.IRepeatInfoUser.HasHeader">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.IRepeatInfoUser.HasSeparators">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.IRepeatInfoUser.RepeatedItemCount">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.IRepeatInfoUser.GetItemStyle">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.SaveViewState">
		<summary>
		</summary>
	</doc>
	<doc for="DataList.CreateItem1">
		<nodoc/>
		<summary>
		</summary>
	</doc>
	<doc for="DataList.InitializeItem">
		<nodoc/>
	</doc>
	<doc for="DataList.ToolTip">
		<summary>
			<para>Gets or sets the ToolTip text for the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para> The ToolTip text for the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</value>
	</doc>
	<doc for="DataList.DataList">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Web.UI.WebControls.DataList"/> class.
   </para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.DataList"/> class.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create and
      initialize a new instance of the <see cref="System.Web.UI.WebControls.DataList"/> class.</para>
			<codelink SampleID="Classic DataList.DataList Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataList.IRepeatInfoUser.RenderItem"><nodoc/>
		<summary>
		</summary>
	</doc><doc for="DataList.EventItemCreated">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event of the <see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventDeleteCommand"/>
	</doc><doc for="DataList.EventItemDataBound">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event of the <see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventDeleteCommand"/>
	</doc><doc for="DataList.EventItemCommand">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event of the
<see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventDeleteCommand"/>
	</doc><doc for="DataList.EventEditCommand">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event of the <see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventDeleteCommand"/>
	</doc><doc for="DataList.EventUpdateCommand">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event of the <see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventDeleteCommand"/>
	</doc><doc for="DataList.EventCancelCommand">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event of the <see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventDeleteCommand"/>
	</doc><doc for="DataList.EventDeleteCommand">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the 
<see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event of the <see cref="System.Web.UI.WebControls.DataList"/>. This 
   field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EventCancelCommand"/>
	</doc><doc for="DataList.SelectCommandName">
		<summary>
			<para>Represents the <see langword="Select"/> command name. This field is read-only.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.SelectCommandName"/> field to represent the
<see langword="Select"/> command name.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommandName"/>
	</doc><doc for="DataList.EditCommandName">
		<summary>
			<para>Represents the <see langword="Edit"/> command name. This field is read-only.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.EditCommandName"/> field to represent the
<see langword="Edit"/> command name.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommandName"/>
	</doc><doc for="DataList.UpdateCommandName">
		<summary>
			<para>Represents the <see langword="Update"/> command name. This field is read-only.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.UpdateCommandName"/> field to represent the
<see langword="Update"/> command name.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommandName"/>
	</doc><doc for="DataList.CancelCommandName">
		<summary>
			<para> Represents the <see langword="Cancel"/> command name. This field is read-only.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.CancelCommandName"/> field to represent the
<see langword="Cancel"/> command name.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommandName"/>
	</doc><doc for="DataList.DeleteCommandName">
		<summary>
			<para>Represents the <see langword="Delete"/> command name. This field is read-only.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.DeleteCommandName"/> field to represent the
<see langword="Delete"/> command name.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommandName"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommandName"/>
	</doc><doc for="DataList.ExtractTemplateRows">
		<summary>
			<para>Gets or sets a
      value that indicates whether the rows of a <see cref="System.Web.UI.WebControls.Table"/> control,
      defined in each template of a <see cref="System.Web.UI.WebControls.DataList"/>
      control, are extracted and displayed.</para>
		</summary>
		<value>
			<para><see langword="true"/>
if the rows of a <see cref="System.Web.UI.WebControls.Table"/> control,
defined in each template of a <see cref="System.Web.UI.WebControls.DataList"/>
control, are extracted and displayed; otherwise,
<see langword="false"/>. The 
default value is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The contents of the <see cref="System.Web.UI.WebControls.DataList"/> control are specified by using
   templates. Normally, you list controls that you want to display in the
   templates. You can also place a <see cref="System.Web.UI.WebControls.Table"/>
   control in a template and
   display the rows of the table. </para>
			<para> Use the <see cref="System.Web.UI.WebControls.DataList.ExtractTemplateRows"/>
property to specify whether the rows of a <see cref="System.Web.UI.WebControls.Table"/> control
defined in each template of a <see cref="System.Web.UI.WebControls.DataList"/> control are extracted and displayed.
All rows extracted from the templates of the <see cref="System.Web.UI.WebControls.DataList"/> control are displayed in a
single table. This allows you to create a single table from other smaller
tables and still maintain the features of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   When this property is set to
<see langword="true"/> , you must provide a well-formed <see cref="System.Web.UI.WebControls.Table"/> 
control for each template you want to include in the <see cref="System.Web.UI.WebControls.DataList"/> control.
Only the rows of the tables will be displayed. All other content in the template will be ignored.
You must use a <see cref="System.Web.UI.WebControls.Table"/> control for this feature to work
properly. The <see cref="System.Web.UI.HtmlControls.HtmlTable" qualify="true"/>
control is not compatible with this property.
</note>
			<para>When you create a cell for a <see cref="System.Web.UI.WebControls.Table"/> control in a
template, you can use the <see cref="System.Web.UI.WebControls.TableCell.ColumnSpan"/> property of the <see cref="System.Web.UI.WebControls.TableCell"/> object to
control the number of columns the cell spans. You can also use the <see cref="System.Web.UI.WebControls.TableCell.RowSpan"/>
property to control the number of
rows the cell spans. </para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.RepeatColumns"/>, <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/>, and <see cref="System.Web.UI.WebControls.DataList.RepeatLayout"/> properties do not affect the
   appearance of the <see cref="System.Web.UI.WebControls.DataList"/>
   control when this property is
   set to <see langword="true"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrate how to use the <see cref="System.Web.UI.WebControls.DataList.ExtractTemplateRows"/>
property to extract and display the rows of <see cref="System.Web.UI.WebControls.Table"/> controls defined in the templates
of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="Classic DataList.ExtractTemplateRows Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Table"/>
		<seealso cref="System.Web.UI.WebControls.TableRow"/>
		<seealso cref="System.Web.UI.WebControls.TableCell"/>
		<seealso cref="System.Web.UI.WebControls.DataList.AlternatingItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SeparatorTemplate"/>
	</doc>
	<doc for="DataList.Items">
		<summary>
			<para>Gets a collection of <see cref="System.Web.UI.WebControls.DataListItem"/> objects representing the individual
   items within the control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.DataListItemCollection"/> that contains a
   collection of <see cref="System.Web.UI.WebControls.DataListItem"/> objects representing the individual
   items within the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.Items"/> collection to
   programmatically control the items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The <see cref="System.Web.UI.WebControls.DataList.Items"/> collection does not provide
   any methods to add or remove items to the collection. However, you can control
   the contents of an item by providing a handler for the <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/>
   event. </para>
			<note type="note">
   Only items bound to the data
   source are contained in the <see cref="System.Web.UI.WebControls.DataList.Items"/> collection. The header,
   footer, and separator are not included in the collection.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.DataList.Items"/> collection to display the items in
      the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="Classic DataList.Items Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListItem"/>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnItemCreated"/>
	</doc>
	<doc for="DataList.SelectedItem">
		<summary>
			<para>Gets the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.DataListItem"/> that represents the item
   selected in the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.SelectedItem"/> property to get a <see cref="System.Web.UI.WebControls.DataListItem"/> object that represents the selected
   item in the <see cref="System.Web.UI.WebControls.DataList"/> control. This object can then be used
   to access the properties of the selected item.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.SelectedItem"/> property to display the contents of
   the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="Classic DataList.SelectedItem Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListItem"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedIndex"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/>
	</doc>
	<doc for="DataList">
		<summary>
			<para>A data bound list control that displays items using templates.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList"/> control to display a template-defined data
   bound list. The <see cref="System.Web.UI.WebControls.DataList"/> control supports selecting
   and editing. </para>
			<para>The contents of the <see cref="System.Web.UI.WebControls.DataList"/>
control can be manipulated by using templates. The following table lists
the supported templates.</para>
			<list type="table">
				<listheader>
					<term>Template Name</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.AlternatingItemTemplate"/></term>
					<description>If
         defined, provides the content and layout for
         alternating items in the <see cref="System.Web.UI.WebControls.DataList"/>. If
         not defined, <see langword="ItemTemplate"/> is used.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.EditItemTemplate"/></term>
					<description>If
         defined,
         provides the content and layout for the item
         currently being edited in the <see cref="System.Web.UI.WebControls.DataList"/>. If
         not defined, <see langword="ItemTemplate"/> is used.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.FooterTemplate"/></term>
					<description>If
         defined, provides the content and layout for the footer
         section of the <see cref="System.Web.UI.WebControls.DataList"/>. If not defined, a footer section will
         not be displayed.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/></term>
					<description>If
         defined, provides the content and layout for the header
         section of the <see cref="System.Web.UI.WebControls.DataList"/>. If not defined, a header section will
         not be displayed.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.ItemTemplate"/></term>
					<description>Required template that provides the content and layout
         for items in the <see cref="System.Web.UI.WebControls.DataList"/>.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/></term>
					<description>If
         defined, provides the content and layout for the
         currently selected item in the <see cref="System.Web.UI.WebControls.DataList"/>. If not
         defined, <see cref="System.Web.UI.WebControls.DataList.ItemTemplate"/> is used.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.SeparatorTemplate"/></term>
					<description>If
         defined, provides the content and layout for the
         separator between items in the <see cref="System.Web.UI.WebControls.DataList"/>. If not
         defined, a separator will not be displayed.</description>
				</item>
			</list>
			<para> At the very minimum, the <see cref="System.Web.UI.WebControls.DataList.ItemTemplate"/> needs to be defined to display
the items in the <see cref="System.Web.UI.WebControls.DataList"/>
control. Additional templates can be used to provide a custom look to the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>The appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control may be customized by setting
the style properties for the different parts of the control. The following table
lists the different style properties.</para>
			<list type="table">
				<listheader>
					<term>Style Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/></term>
					<description>Specifies the style for alternating items in
         the <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/></term>
					<description>Specifies the style for the item being
         edited in the <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.FooterStyle"/></term>
					<description>Specifies the style for the footer in the
      <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/></term>
					<description>Specifies the style for the header in the
      <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.ItemStyle"/></term>
					<description>Specifies the style for the items in the
      <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/></term>
					<description>Specifies the style for the selected item in
         the <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.SeparatorStyle"/></term>
					<description>Specifies the style for the separator between the items in the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</description>
				</item>
			</list>
			<para>You can also show or hide different parts of the control.
   The following table lists the properties that control which parts are shown or
   hidden.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.ShowFooter"/></term>
					<description>Shows or hides the footer section of the
      <see cref="System.Web.UI.WebControls.DataList"/> control.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.DataList.ShowHeader"/></term>
					<description>Shows or hides the header section of the
      <see cref="System.Web.UI.WebControls.DataList"/>
      control.</description>
				</item>
			</list>
			<para>The display direction of a <see cref="System.Web.UI.WebControls.DataList"/> control can be
vertical or horizontal. Set the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/> property to specify the
display direction.</para>
			<para>The layout of the <see cref="System.Web.UI.WebControls.DataList"/> control is controlled with the <see cref="System.Web.UI.WebControls.DataList.RepeatLayout"/> property. Setting this
property to <see langword="RepeatLayout.Table"/> will display the <see cref="System.Web.UI.WebControls.DataList"/> in a table format, while
<see langword="RepeatLayout.Flow"/> displays the <see cref="System.Web.UI.WebControls.DataList"/> without a table
structure.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use a <see cref="System.Web.UI.WebControls.DataList"/>
control to
display a list of items from a data source.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataList" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList"/>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
		<seealso cref="System.Web.UI.WebControls.Repeater"/>
	</doc>
	<doc for="DataList.GridLines">
		<summary>
			<para>Gets or sets the grid line style for the <see cref="System.Web.UI.WebControls.DataList"/> control
   when the <see cref="System.Web.UI.WebControls.DataList.RepeatLayout"/>
   property is set to <see langword="RepeatLayout.Table"/>.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.GridLines"/> enumeration values. The default
   value is <see langword="None"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.GridLines"/> property to specify the grid
   line style for the <see cref="System.Web.UI.WebControls.DataList"/> control. The following table lists the possible
   styles.</para>
			<list type="table">
				<listheader>
					<term>Style</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.GridLines.None"/></term>
					<description>No grid lines.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.GridLines.Horizontal"/></term>
					<description>Displays the horizontal grid lines.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.GridLines.Vertical"/></term>
					<description>Displays the vertical grid line.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.GridLines.Both"/></term>
					<description>Displays both the horizontal and vertical grid
         lines.</description>
				</item>
				<item>
					<term>
					</term>
				</item>
			</list>
			<note type="note">
   This property only applies if the <see cref="System.Web.UI.WebControls.DataList.RepeatLayout"/> property
   is set to <see langword="RepeatLayout.Table"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.GridLines"/> property to display the vertical and horizontal
   grid lines of the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListLayout" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.GridLines"/>
	</doc>
	<doc for="DataList.RepeatColumns">
		<summary>
			<para>Gets or sets the number of columns to display in the
   <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>The number of columns to display in the <see cref="System.Web.UI.WebControls.DataList"/> control.
   The default value is <see langword="0"/> , which indicates that the
   items in the <see cref="System.Web.UI.WebControls.DataList"/>
   control are displayed in a single row or column, based on the value of the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/> property.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The specified number of columns is a negative value.</exception>
		<remarks>
			<para>Use this property to specify the number of columns that display items in the
   <see cref="System.Web.UI.WebControls.DataList"/>
   control. For example, if you set this property to <see langword="5"/>, the
<see cref="System.Web.UI.WebControls.DataList"/> control displays its items in five
   columns.</para>
			<note type="note">
   
   If this property is set to <see langword="0"/>,
   the <see cref="System.Web.UI.WebControls.DataList"/> control displays its items in a
   single row or column, based on the value of the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/> property. If the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/> property is set to
<see langword="RepeatDirection.Horizontal"/>, the items are 
   displayed in a single row. If the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/> property is set to
<see langword="RepeatDirection.Vertical"/>, the items are displayed in 
   a single column.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.RepeatColumns"/> property to specify the number
   of columns to display in the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListLayout" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.RepeatDirection"/>
		<seealso cref="System.Web.UI.WebControls.DataList.RepeatLayout"/>
	</doc>
	<doc for="DataList.RepeatDirection">
		<summary>
			<para>Gets or sets whether the <see cref="System.Web.UI.WebControls.DataList"/> control displays vertically or horizontally.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.RepeatDirection"/> values. The default
   is <see langword="Vertical"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The specified value is not one of the <see cref="System.Web.UI.WebControls.RepeatDirection"/> values.</exception>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/> property to specify
   the display direction of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The number of columns displayed is
   always determined by the <see cref="System.Web.UI.WebControls.DataList.RepeatColumns"/> property.
</note>
			<para>If this property is set to <see langword="RepeatDirection.Vertical"/>, the items
in the list are displayed in columns loaded from top to bottom, then left to
right, until all items are rendered. For example, if the <see cref="System.Web.UI.WebControls.DataList.RepeatColumns"/> property is set to
<see langword="3"/>, the items in the <see cref="System.Web.UI.WebControls.DataList"/> control are displayed in
three columns, as in the following table.</para>
			<list type="table">
				<item>
					<term> 1</term>
					<description>4</description>
					<description>7</description>
				</item>
				<item>
					<term> 2 </term>
					<description>5</description>
					<description>8</description>
				</item>
				<item>
					<term> 3</term>
					<description>6</description>
					<description></description>
				</item>
			</list>
			<para>If this property is set to <see langword="RepeatDirection.Horizontal"/>, the items
in the list are displayed in rows loaded from left to right, then top to
bottom, until all items are rendered. For example, if the <see cref="System.Web.UI.WebControls.DataList.RepeatColumns"/> property is set to
<see langword="3"/>, the items of the <see cref="System.Web.UI.WebControls.DataList"/> control are displayed in rows
of three items each, as in the following table.</para>
			<list type="table">
				<item>
					<term> 1</term>
					<description>2</description>
					<description>3</description>
				</item>
				<item>
					<term> 4</term>
					<description>5</description>
					<description>6</description>
				</item>
				<item>
					<term> 7</term>
					<description>8</description>
					<description></description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.RepeatDirection"/>
property to specify
the direction in which the <see cref="System.Web.UI.WebControls.DataList"/> control is displayed.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListLayout" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.RepeatDirection"/>
		<seealso cref="System.Web.UI.WebControls.DataList.RepeatColumns"/>
		<seealso cref="System.Web.UI.WebControls.DataList.RepeatLayout"/>
	</doc>
	<doc for="DataList.RepeatLayout">
		<summary>
			<para> Gets or sets whether the control is displayed in a table
      or flow layout.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.RepeatLayout"/> values. The default
   is <see langword="Table"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The specified value is not one of the <see cref="System.Web.UI.WebControls.RepeatLayout"/> values.</exception>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.RepeatLayout"/> property to specify whether the items
   in the <see cref="System.Web.UI.WebControls.DataList"/> control are displayed in a table. If
   this property is set to <see langword="RepeatLayout.Table"/>, the items in the
   list are displayed in a table. If this property is set to
<see langword="RepeatLayout.Flow"/>, the items in the list are displayed without 
   a table structure.</para>
			<para>When you the <see cref="System.Web.UI.WebControls.DataList"/> control is displayed
in a table, you can use the <see cref="System.Web.UI.WebControls.DataList.GridLines"/>
property to specify a
grid
line style.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.RepeatLayout"/> property to specify the
   layout style of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListLayout" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.RepeatLayout"/>
		<seealso cref="System.Web.UI.WebControls.DataList.RepeatColumns"/>
		<seealso cref="System.Web.UI.WebControls.DataList.RepeatDirection"/>
		<seealso cref="System.Web.UI.WebControls.DataList.GridLines"/>
	</doc>
	<doc for="DataList.HeaderTemplate">
		<summary>
			<para> Gets or sets the template for the heading section of the <see cref="System.Web.UI.WebControls.DataList"/>
control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/>
that contains the template for the
heading section of the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/> property to control
   the contents of the heading section. The appearance of the header section is
   controlled by the <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/>
   property.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.ShowHeader"/> property must be set to
<see langword="true"/> for this property to be visible. 
</note>
			<para>To specify a template for the heading section, place the
<see langword="&lt;HeadingTemplate&gt;"/> tags between the opening and closing 
   tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
   contents of the template between the opening and closing
<see langword="&lt;HeadingTemplate&gt;"/> tags.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/> property to control the
      contents of the heading section of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListLayout" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.HeaderStyle"/>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
	</doc>
	<doc for="DataList.ItemTemplate">
		<summary>
			<para> Gets or sets the template for the items in the <see cref="System.Web.UI.WebControls.DataList"/>
control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that contains the template for the
   items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.ItemTemplate"/>
property to control the contents of the items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The appearance of
the items in the <see cref="System.Web.UI.WebControls.DataList"/> control is controlled by the
<see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> 
property.</para>
			<para>To specify a template for the items of the <see cref="System.Web.UI.WebControls.DataList"/> control, place the
<see langword="&lt;ItemTemplate&gt;"/> tags between the opening and closing tags 
of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
contents of the template between the opening and closing
<see langword="&lt;ItemTemplate&gt;"/> tags.</para>
			<para>You can optionally use the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemTemplate"/>
property to provide a differerent appearance for the alternating items in the <see cref="System.Web.UI.WebControls.DataList"/>
control.</para>
			<note type="caution">
   This control can be used to display
   user input, which might include malicious client script. Check any information
   that is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.ItemTemplate"/> property to control the
   contents of the items in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The
   following code sample uses the single-file code model and may not work correctly if
   copied directly into a code-behind file. This code sample must be copied into an
   empty text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListLayout" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.AlternatingItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemStyle"/>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
	</doc>
	<doc for="DataList.FooterStyle">
		<summary>
			<para>Gets the style properties for the footer section of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that contains the
   style properties for the footer section of the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is an
   empty <see cref="System.Web.UI.WebControls.TableItemStyle"/> object.</para>
		</value>
		<remarks>
			<para>Use this property to provide a custom style for the footer section of the <see cref="System.Web.UI.WebControls.DataList"/> control. Common style attributes that
   can be adjusted include forecolor, backcolor, font, and content alignment within
   the cell. Providing a different style enhances the appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/> property of the <see cref="System.Web.UI.WebControls.DataList"/> control inherits the style settings
of the <see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/> property. For example, if
you specify a red font for the <see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/> property,
the <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/> property will also have a
red font. This allows you to provide a common appearance for the control by
setting a single style property. You can override the inherited style settings
by setting the <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/> property. For example, you
can specify a blue font for the <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/> property,
overriding the red font specified in the <see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/>
property.</para>
			<para>To specify a custom style for the footer section, place the
<see langword="&lt;FooterStyle&gt;"/> tags between the opening and closing tags 
   of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
   attributes within the opening <see langword="&lt;FooterStyle&gt;"/> tag.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.ShowFooter"/> property must be set to
<see langword="true"/> for this property to be visible. 
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/>
property to specify a custom background color for the footer section of the
<see cref="System.Web.UI.WebControls.DataList"/> 
control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListHeaderStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataGrid.ShowFooter"/>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
	</doc>
	<doc for="DataList.FooterTemplate">
		<summary>
			<para> Gets or sets the template for the footer section of the <see cref="System.Web.UI.WebControls.DataList"/>
control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> object that contains the template for the footer
   section of the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.FooterTemplate"/> property to control the
   contents of the footer section. The appearance of the footer section is
   controlled by the <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/>
   property.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.ShowFooter"/> property must be set to
<see langword="true"/> for this property to be visible. 
</note>
			<para>The <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/> property of the <see cref="System.Web.UI.WebControls.DataList"/> control inherits the style settings
of the <see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/> property. For example, if
you specify a red font for the <see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/> property,
the <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/> property will also have a
red font. This allows you to provide a common appearance for the control by
setting a single style property. You can override the inherited style settings
by setting the <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/> property. For example, you
can specify a blue font for the <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/> property,
overriding the red font specified in the <see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/>
property.</para>
			<para>To specify a template for the footer section, place the
<see langword="&lt;FooterTemplate&gt;"/> tags between the opening and closing 
   tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
   contents of the template between the opening and closing
<see langword="&lt;FooterTemplate&gt;"/> tags.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.FooterTemplate"/> property to control
   the contents of the footer section of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListHeaderStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.FooterStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.ShowFooter"/>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
	</doc>
	<doc for="DataList.HeaderStyle">
		<summary>
			<para>Gets the style properties for the heading section of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that contains the
   style properties for the heading section of the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is an
   empty <see cref="System.Web.UI.WebControls.TableItemStyle"/> object.</para>
		</value>
		<remarks>
			<para>Use this property to provide a custom style for the heading of the <see cref="System.Web.UI.WebControls.DataList"/> control. Common style attributes that
   can be adjusted include forecolor, backcolor, font, and content alignment within
   the cell. Providing a different style enhances the appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>To specify a custom style for the heading section, place the
<see langword="&lt;HeaderStyle&gt;"/> tags between the opening and closing tags 
   of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
   attributes within the opening <see langword="&lt;HeaderStyle&gt;"/> tag.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.ShowHeader"/> property must be set to
<see langword="true"/> for this property to be visible. 
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/> property to specify a custom
      background color for the heading section of the <see cref="System.Web.UI.WebControls.DataList"/>
      control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListHeaderStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
		<seealso cref="System.Web.UI.WebControls.DataList.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.ShowHeader"/>
	</doc>
	<doc for="DataList.AlternatingItemStyle">
		<summary>
			<para>Gets the style properties for alternating items in the <see cref="System.Web.UI.WebControls.DataList"/>
control. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that represents the style properties
   for alternating items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is an empty
<see cref="System.Web.UI.WebControls.TableItemStyle"/> 
object.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/> property to
   provide a custom style for the alternating items in the <see cref="System.Web.UI.WebControls.DataList"/> control. Common style attributes that
   can be adjusted include forecolor, backcolor, font, and content alignment within
   the cell. Providing a different style enhances the appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>Item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control are inherited from one item
style property to another through a hierarchy. Item style properties set lower
in the hierarchy are inherited by item style properties higher in the hierarchy.
For example, if you specify a red font for the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property,
all other item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control will also
have a red font. This allows you to provide a common appearance for the control
by setting a single item style property. You can override the inherited style
settings for an item style property that is higher in the hierarchy by setting
its style properties. For example, you can specify a blue font for the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/> property, overriding the red
font specified in the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property. The following
table lists the hierarchy order from highest to lowest. </para>
			<list type="table">
				<listheader>
					<term>Precedence</term>
					<description>Style Property</description>
				</listheader>
				<item>
					<term> 1</term>
					<description><see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/></description>
				</item>
				<item>
					<term> 2</term>
					<description><see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/></description>
				</item>
				<item>
					<term> 3</term>
					<description><see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/></description>
				</item>
				<item>
					<term> 4</term>
					<description><see cref="System.Web.UI.WebControls.DataList.ItemStyle"/></description>
				</item>
				<item>
					<term> 5</term>
					<description><see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/></description>
				</item>
			</list>
			<para>To specify a custom style for the alternating items, place the
<see langword="&lt;AlternatingItemStyle&gt;"/> tags between the opening and 
   closing tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
   attributes within the opening <see langword="&lt;AlternatingItemStyle&gt;"/>
   tag.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/>
property to specify a different background color for alternating items in the
<see cref="System.Web.UI.WebControls.DataList"/> 
control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListItemStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
	</doc>
	<doc for="DataList.ItemStyle">
		<summary>
			<para>Gets the style properties for the items in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that contains the
   style properties for the items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is an
   empty <see cref="System.Web.UI.WebControls.TableItemStyle"/>
   object.</para>
		</value>
		<remarks>
			<para>Use this property to provide a custom style for the
      items of the <see cref="System.Web.UI.WebControls.DataList"/> control. Common style attributes that
      can be adjusted include forecolor, backcolor, font, and content alignment within
      the cell. Providing a different style enhances the appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>Item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control are inherited from one item
   style property to another through a hierarchy. Item style properties set lower
   in the hierarchy are inherited by item style properties higher in the hierarchy.
   For example, if you specify a red font for the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property,
   all other item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control will also
   have a red font. This allows you to provide a common appearance for the control
   by setting a single item style property. You can override the inherited style
   settings for an item style property that is higher in the hierarchy by setting
   its style properties. For example, you can specify a blue font for the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/> property, overriding the red
   font specified in the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property. The following
   table lists the hierarchy order from highest to lowest. </para>
			<list type="table">
				<listheader>
					<term>Precedence</term>
					<description>Style Property</description>
				</listheader>
				<item>
					<term> 1</term>
					<description><see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/></description>
				</item>
				<item>
					<term> 2</term>
					<description><see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/></description>
				</item>
				<item>
					<term> 3</term>
					<description><see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/></description>
				</item>
				<item>
					<term> 4</term>
					<description><see cref="System.Web.UI.WebControls.DataList.ItemStyle"/></description>
				</item>
				<item>
					<term> 5</term>
					<description><see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/></description>
				</item>
			</list>
			<para>To specify a custom style for the items of the <see cref="System.Web.UI.WebControls.DataList"/> control, place the
<see langword="&lt;ItemStyle&gt;"/> tags between the opening and closing tags of 
the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
attributes within the opening <see langword="&lt;ItemStyle&gt;"/> tag.</para>
			<para>You can also use the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/> property to provide an different
appearance for the alternating items in the <see cref="System.Web.UI.WebControls.DataList"/> control. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property to specify a
   different background color for the items in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListItemStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
	</doc>
	<doc for="DataList.ShowFooter">
		<summary>
			<para>Gets or sets a value indicating whether the footer section is
      displayed in the <see cref="System.Web.UI.WebControls.DataList"/>
      control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the footer section is displayed; otherwise,
<see langword="false"/>. 
   The default value is <see langword="true"/>,
   however this property is only examined when the <see cref="System.Web.UI.WebControls.DataList.FooterTemplate"/> property is not
<see langword="null"/>. </para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.ShowFooter"/> property to specify whether the
   footer section is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para> You can control the appearance of the footer section by setting the <see cref="System.Web.UI.WebControls.DataList.FooterStyle"/>
property. The contents of the footer section are controlled by the <see cref="System.Web.UI.WebControls.DataList.FooterTemplate"/> property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.ShowFooter"/> property to display the
   footer section in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListShowHeader" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.FooterStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.FooterTemplate"/>
	</doc>
	<doc for="DataList.ShowHeader">
		<summary>
			<para> Gets or sets a value indicating whether the header section is displayed in the <see cref="System.Web.UI.WebControls.DataList"/>
control.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the
   header is displayed; otherwise,<see langword=" false"/>. The
   default value is <see langword="true"/>, however this property is only examined
   when the <see cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/> property is not
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.ShowHeader"/> property to specify whether the
   header section is displayed in the
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para> You can control appearance of the
   header section by setting the <see cref="System.Web.UI.WebControls.DataList.HeaderStyle"/>
   property. The contents of the header section are controlled by the <see cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/> property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.ShowHeader"/>
property to display the header section in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListShowHeader" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.HeaderStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.HeaderTemplate"/>
	</doc>
	<doc for="DataList.AlternatingItemTemplate">
		<summary>
			<para> Gets or sets the template for alternating items in the <see cref="System.Web.UI.WebControls.DataList"/>.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> object that contains the template for alternating
   items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemTemplate"/> property to control the
   contents of alternating items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The
   appearance of alternating items is controlled by the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/>
   property.</para>
			<para>To specify a template for the alternating items, place the
<see langword="&lt;AlternatingItemTemplate&gt;"/> tags between the opening and 
   closing tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
   contents of the template between the opening and closing
<see langword="&lt;AlternatingItemTemplate&gt;"/> tags.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemTemplate"/> property to
   control the contents of alternating items in the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListAlternatingItemTemplate" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemTemplate"/>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
	</doc>
	<doc for="DataList.SeparatorTemplate">
		<summary>
			<para> Gets or sets the template for the separator between the items of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that contains the template for the
   separator between items in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default
   value is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.SeparatorTemplate"/> property to control the
   contents of the separator between the items of the <see cref="System.Web.UI.WebControls.DataList"/> control.
   The separator allows you to place an element with custom content between each
   item in the <see cref="System.Web.UI.WebControls.DataList"/> control. The appearance of the
   separator between the items of the <see cref="System.Web.UI.WebControls.DataList"/> control is
   controlled by the <see cref="System.Web.UI.WebControls.DataList.SeparatorStyle"/> property.</para>
			<para>To specify a template for the separator, place the
<see langword="&lt;SeparatorTemplate&gt;"/> tags between the opening and closing 
   tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
   contents of the template between the opening and closing
<see langword="&lt;SeparatorTemplate&gt;"/> tags.</para>
			<note type="caution">
   This control can be used to display
   user input, which might include malicious client script. Check any information
   that is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.SeparatorTemplate"/>
property to control the contents of
the separator between each item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListSeparatorStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SeparatorStyle"/>
	</doc>
	<doc for="DataList.SeparatorStyle">
		<summary>
			<para>Gets the style properties of the separator between each item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that contains the style
   properties of the separator between each item in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is an
   empty <see cref="System.Web.UI.WebControls.TableItemStyle"/>
   object.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.SeparatorStyle"/> property to provide a custom style for the
   separator between each item in the <see cref="System.Web.UI.WebControls.DataList"/> control. The separator allows you to
   place an element with custom content between each item in the <see cref="System.Web.UI.WebControls.DataList"/> control. Common
   style attributes that can be adjusted include forecolor, backcolor, font, and
   content alignment within the cell. Providing a different style enhances the
   appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>To specify a custom style for the separator, place the
<see langword="&lt;SeparatorStyle&gt;"/> tags between the opening and closing 
   tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
   attributes within the opening <see langword="&lt;SeparatorStyle&gt;"/> tag.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.DataList.SeparatorStyle"/> property to specify a custom
      background color for the separator between each item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListSeparatorStyle" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.SeparatorTemplate"/>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
	</doc>
	<doc for="DataList.EditItemIndex">
		<summary>
			<para>Gets or sets the index number of the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control to edit.</para>
		</summary>
		<value>
			<para>The index number of the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control
   to edit.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property
   to programmatically specify the item to edit. You can also use this property to
   determine the index of the item
   selected for editing.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property is zero based.
</note>
			<para> To unselect an item, set the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to
<see langword="-1"/>.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to specify the item selected
      by the user for editing.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
	</doc>
	<doc for="DataList.EditItemStyle">
		<summary>
			<para> Gets the style properties for the item selected for
      editing in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that
   contains the style properties for the item selected for editing in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is an
   empty <see cref="System.Web.UI.WebControls.TableItemStyle"/> object.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/> property to provide
   a custom style for the item selected for editing in the <see cref="System.Web.UI.WebControls.DataList"/> control. Common style attributes that
   can be adjusted include forecolor, backcolor, font, and content alignment within
   the cell. Providing a different style enhances the appearance of the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
			<para>Item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control are inherited from one item
style property to another through a hierarchy. Item style properties set lower
in the hierarchy are inherited by item style properties higher in the hierarchy.
For example, if you specify a red font for the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property,
all other item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control will also
have a red font. This allows you to provide a common appearance for the control
by setting a single item style property. You can override the inherited style
settings for an item style property that is higher in the hierarchy by setting
its style properties. For example, you can specify a blue font for the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/> property, overriding the red
font specified in the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property. The following
table lists the hierarchy order from highest to lowest. </para>
			<list type="table">
				<listheader>
					<term>Precedence</term>
					<description>Style Property</description>
				</listheader>
				<item>
					<term> 1</term>
					<description><see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/></description>
				</item>
				<item>
					<term> 2</term>
					<description><see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/></description>
				</item>
				<item>
					<term> 3</term>
					<description><see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/></description>
				</item>
				<item>
					<term> 4</term>
					<description><see cref="System.Web.UI.WebControls.DataList.ItemStyle"/></description>
				</item>
				<item>
					<term> 5</term>
					<description><see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/></description>
				</item>
			</list>
			<para>To specify a custom style for the item selected for editing, place the
<see langword="&lt;EditItemStyle&gt;"/> tags between the opening and closing tags 
   of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
   attributes within the opening <see langword="&lt;EditItemStyle&gt;"/> tag.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/>
property to specify a different appearance for the item
selected by the user for editing.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemIndex"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
	</doc>
	<doc for="DataList.EditItemTemplate">
		<summary>
			<para> Gets or sets the template for the item selected for editing in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/>
object that contains the template for the item
selected for editing in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.EditItemTemplate"/> property to control the contents
   of the item selected for editing in the <see cref="System.Web.UI.WebControls.DataList"/> control. The appearance of the item
   selected for editing is controlled by the <see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/>
   property.</para>
			<para>To specify a template for the item selected for editing, place the
<see langword="&lt;EditItemTemplate&gt;"/> tags between the opening and closing 
   tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
   contents of the template between the opening and closing
<see langword="&lt;EditItemTemplate&gt;"/> tags.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.EditItemTemplate"/> property to control the
   contents of the item selected by the user for editing.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemIndex"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
	</doc>
	<doc for="DataList.CancelCommand">
		<summary>
			<para>Occurs when the <see langword="Cancel"/> button is clicked
   for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event is raised when the <see langword="Cancel"/> button is clicked
   for an item in the <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event sets
the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to
<see langword="-1"/> (to deselect the item) and then rebinds the data to the 
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control. This makes it possible to
   embed script within HTML tags in the text. If the values for the control come
   from user input, be sure to validate the values to prevent security
   vulnerabilities.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify
      and code a handler for the <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event. It cancels any edits
      made to an item in the <see cref="System.Web.UI.WebControls.DataList"/> control when the
   <see langword="Cancel"/> button is clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommand"/>
	</doc>
	<doc for="DataList.DeleteCommand">
		<summary>
			<para>Occurs when the <see langword="Delete"/> button is clicked
   for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event is raised when the
<see langword="Delete"/> button is clicked for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event
removes the selected item from the data source and then rebinds the data to the
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code a handler for the <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/>
      event. It deletes the selected item in the <see cref="System.Web.UI.WebControls.DataList"/>
      control when the <see langword="Delete"/> button is
      clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommand"/>
	</doc>
	<doc for="DataList.EditCommand">
		<summary>
			<para>Occurs when the <see langword="Edit"/> button is clicked
   for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event is raised when the
<see langword="Edit"/> button is clicked for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event sets the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to the selected row
and then rebinds the data to the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control. This makes it possible to
   embed script within HTML tags in the text. If the values for the control come
   from user input, be sure to validate the values to prevent security
   vulnerabilities.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code a handler for the <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event. It allows you to
      edit the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control when the <see langword="Edit"/> button is clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommand"/>
	</doc>
	<doc for="DataList.UpdateCommand">
		<summary>
			<para>Occurs when the <see langword="Update"/> button is clicked
   for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event is raised when
   the <see langword="Update"/> button for an item is clicked.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event
updates the data, sets the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to
<see langword="-1"/> (to deselect the item), and then rebinds the data to the 
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control. This makes it possible to
   embed script within HTML tags in the text. If the values for the control come
   from user input, be sure to validate the values to prevent security
   vulnerabilities.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code a handler for the <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event. It allows you
      to update the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control with the new values entered
      by the user when the <see langword="Update"/> button is
      clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
	</doc>
	<doc for="DataList.OnCancelCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListCommandEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event is raised when the
<see langword="Cancel"/> button is clicked for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event sets
the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to
<see langword="-1"/> (to deselect the item) and then rebinds the data to the 
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control. This makes it possible to
   embed script within HTML tags in the text. If the values for the control come
   from user input, be sure to validate the values to prevent security
   vulnerabilities.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.CancelCommand"/> event. It cancels any edits
      made to an item in the <see cref="System.Web.UI.WebControls.DataList"/> control when the
   <see langword="Cancel"/> button is clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.CancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventArgs"/>
	</doc>
	<doc for="DataList.OnDeleteCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListCommandEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event is raised when the
<see langword="Delete"/> button is clicked for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event
removes the selected item from the data source and then rebinds the data to the
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.DeleteCommand"/> event. It deletes the
      selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control when the
   <see langword="Delete"/> button is clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.DeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventArgs"/>
	</doc>
	<doc for="DataList.OnEditCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListCommandEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnEditCommand"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event is raised when the
<see langword="Edit"/> button is clicked for an item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event sets the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to the selected row
and then rebinds the data to the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control. This makes it possible to
   embed script within HTML tags in the text. If the values for the control come
   from user input, be sure to validate the values to prevent security
   vulnerabilities.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnEditCommand"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnEditCommand"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnEditCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.EditCommand"/> event. It allows you to edit
      the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control when the
   <see langword="Edit"/> button is clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.EditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventArgs"/>
	</doc>
	<doc for="DataList.OnUpdateCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListItemEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event is raised when the
<see langword="Update"/> button for an item is clicked.</para>
			<para>A typical handler for the <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event
updates the data, sets the <see cref="System.Web.UI.WebControls.DataList.EditItemIndex"/> property to
<see langword="-1"/> (to deselect the item), and then rebinds the data to the 
<see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.DataList"/> control. This makes it possible to
   embed script within HTML tags in the text. If the values for the control come
   from user input, be sure to validate the values to prevent security
   vulnerabilities.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnUpdateCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.UpdateCommand"/> event. It allows you to
      update the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control with the new values entered
      by the user when the <see langword="Update"/> button is clicked.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListEdit" SnippetID="1"/>
			<codelink SampleID="DataListEdit2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.UpdateCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnCancelCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnDeleteCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnEditCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventArgs"/>
	</doc>
	<doc for="DataList.ItemCommand">
		<summary>
			<para>Occurs when any button is clicked in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event is raised when any
   button is clicked in the <see cref="System.Web.UI.WebControls.DataList"/>
   control and is commonly used when you have a button control with a
   custom <see langword="CommandName"/> value.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event to select an item from
      the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListItemCommand" SnippetID="1"/>
			<codelink SampleID="DataListItemCommand2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnItemCommand"/>
	</doc>
	<doc for="DataList.OnItemCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListCommandEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnItemCommand"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event is raised when any
button is clicked in the <see cref="System.Web.UI.WebControls.DataList"/>
control and is commonly used when you have a button control with a custom
<see langword="CommandName"/> value, such as 
<see langword="Add"/>, in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnItemCommand"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnItemCommand"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnItemCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.ItemCommand"/> event to select an item from
      the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListItemCommand" SnippetID="1"/>
			<codelink SampleID="DataListItemCommand2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.DataListCommandEventArgs"/>
	</doc>
	<doc for="DataList.SelectedIndex">
		<summary>
			<para> Gets or sets the index of the selected item in the
   <see cref="System.Web.UI.WebControls.DataList"/>
   control.</para>
		</summary>
		<value>
			<para> The index of the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.SelectedIndex"/> property to programmatically
   specify the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control. You can
   also use this property to determine the index of the selected item.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.DataList.SelectedIndex"/> property is zero based.
</note>
			<para>To deselect an item, set the <see cref="System.Web.UI.WebControls.DataList.SelectedIndex"/> property to
<see langword="-1"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.SelectedIndex"/> property to specify the selected item
   in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListItemCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItem"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/>
	</doc>
	<doc for="DataList.SelectedItemStyle">
		<summary>
			<para> Gets the style properties for the selected item
      in the <see cref="System.Web.UI.WebControls.DataList"/>
      control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableItemStyle"/> object that contains
   the style properties for the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default
   value is an empty <see cref="System.Web.UI.WebControls.TableItemStyle"/>
   object.</para>
		</value>
		<remarks>
			<para> Use this property to provide a custom style for
      the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control. Common style attributes that
      can be adjusted include forecolor, backcolor, font, and content alignment within
      the cell. Providing a different style enhances the appearance of the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>Item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control are inherited from one item
   style property to another through a hierarchy. Item style properties set lower
   in the hierarchy are inherited by item style properties higher in the hierarchy.
   For example, if you specify a red font for the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property,
   all other item style properties in the <see cref="System.Web.UI.WebControls.DataList"/> control will also
   have a red font. This allows you to provide a common appearance for the control
   by setting a single item style property. You can override the inherited style
   settings for an item style property that is higher in the hierarchy by setting
   its style properties. For example, you can specify a blue font for the <see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/> property, overriding the red
   font specified in the <see cref="System.Web.UI.WebControls.DataList.ItemStyle"/> property. The following
   table lists the hierarchy order from highest to lowest. </para>
			<list type="table">
				<listheader>
					<term>Precedence</term>
					<description>Style Property</description>
				</listheader>
				<item>
					<term> 1</term>
					<description><see cref="System.Web.UI.WebControls.DataList.EditItemStyle"/></description>
				</item>
				<item>
					<term> 2</term>
					<description><see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/></description>
				</item>
				<item>
					<term> 3</term>
					<description><see cref="System.Web.UI.WebControls.DataList.AlternatingItemStyle"/></description>
				</item>
				<item>
					<term> 4</term>
					<description><see cref="System.Web.UI.WebControls.DataList.ItemStyle"/></description>
				</item>
				<item>
					<term> 5</term>
					<description><see cref="System.Web.UI.WebControls.WebControl.ControlStyle"/></description>
				</item>
			</list>
			<para>To specify a custom style for the selcted item, place the
<see langword="&lt;SelectedItemStyle&gt;"/> tags between the opening and closing
   tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the style
   attributes within the opening <see langword="&lt;SelectedItemStyle&gt;"/>
   tag.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/>
property to
specify a custom background color for the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListItemCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedIndex"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItem"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.TableItemStyle"/>
		<seealso cref="System.Web.UI.WebControls.Style"/>
	</doc>
	<doc for="DataList.SelectedItemTemplate">
		<summary>
			<para> Gets or sets the template for the selected item in the <see cref="System.Web.UI.WebControls.DataList"/>
control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that contains the template for the
   selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control. The default value is
<see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/> property to control the
   contents of the selected item. The appearance of the selected item is
   controlled by the <see cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/> property.</para>
			<para>To specify a template for the selected item, place the
<see langword="&lt;SelectedItemTemplate&gt;"/> tags between the opening and 
   closing tags of the <see cref="System.Web.UI.WebControls.DataList"/> control. You can then list the
   contents of the template between the opening and closing
<see langword="&lt;SelectedItemTemplate&gt;"/> tags.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.DataList.SelectedItemTemplate"/>
property to control the contents
of the selected item in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<note type="note">
   The following
   code sample uses the single-file code model and may not work correctly if copied
   directly into a code-behind file. This code sample must be copied into an empty
   text file that has an .aspx extension. For more information on the Web Forms
   code model, see <see topic="cpconWebFormsCodeModel"/>.
</note>
			<codelink SampleID="DataListItemCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.ITemplate" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedIndex"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItem"/>
		<seealso cref="System.Web.UI.WebControls.DataList.SelectedItemStyle"/>
	</doc>
	<doc for="DataList.ItemCreated">
		<summary>
			<para>Occurs on the server when an item in the <see cref="System.Web.UI.WebControls.DataList"/> control is created.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event is raised when an item
   in the <see cref="System.Web.UI.WebControls.DataList"/> control
   is created, both during round-trips and at
   the time data is bound to the control.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event is commonly used to
control the content and appearance of a row in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event to display the order
      in which items in the <see cref="System.Web.UI.WebControls.DataList"/>
      control are created.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListItemCreated" SnippetID="1"/>
			<codelink SampleID="DataListItemCreated2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListItemEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnItemCreated"/>
	</doc>
	<doc for="DataList.OnItemCreated">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListItemEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnItemCreated"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event is raised when an item
in the <see cref="System.Web.UI.WebControls.DataList"/> control
is created, both during round-trips and
at the time data is bound to the control.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event is commonly used to
control the content and appearance of a row in the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnItemCreated"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnItemCreated"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnItemCreated"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.ItemCreated"/> event to display the order
      in which items in the <see cref="System.Web.UI.WebControls.DataList"/>
      control are created.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListItemCreated" SnippetID="1"/>
			<codelink SampleID="DataListItemCreated2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.DataListItemEventArgs"/>
	</doc>
	<doc for="DataList.OnItemDataBound">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event. This allows you to
   provide a custom handler for the event.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.DataListItemEventArgs"/> that contains event data.</param>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataList.OnItemDataBound"/> method to provide a custom
   handler for the <see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event.</para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event is raised after an item
is data bound to the <see cref="System.Web.UI.WebControls.DataList"/>
control. This event provides you with the last opportunity to access the data
item before it is displayed on the client. After this event is raised, the data
item is nulled out and no longer available.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.DataList.OnItemDataBound"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.DataList.OnItemDataBound"/> in a derived class, be sure 
   to call the base class's <see cref="System.Web.UI.WebControls.DataList.OnItemDataBound"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event to display the order
      in which items in the <see cref="System.Web.UI.WebControls.DataList"/>
      control are bound to the control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListItemDataBound" SnippetID="1"/>
			<codelink SampleID="DataListItemDataBound2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataList.ItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.DataListItemEventArgs"/>
	</doc>
	<doc for="DataList.ItemDataBound">
		<summary>
			<para>Occurs when an item is data bound to the <see cref="System.Web.UI.WebControls.DataList"/> control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event
   is raised after an item is data bound to the <see cref="System.Web.UI.WebControls.DataList"/> control. This event provides you with
   the last opportunity to access the data item before it is displayed on the
   client. After this event is raised, the data item is nulled out and no
   longer available.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.DataList.ItemDataBound"/> event to display the order
      in which items in the <see cref="System.Web.UI.WebControls.DataList"/>
      control are bound to the control.</para>
			<note type="note">
      The following
      code sample uses the single-file code model and may not work correctly if copied
      directly into a code-behind file. This code sample must be copied into an empty
      text file that has an .aspx extension. For more information on the Web Forms
      code model, see <see topic="cpconWebFormsCodeModel"/>.
      
   </note>
			<codelink SampleID="DataListItemDataBound" SnippetID="1"/>
			<codelink SampleID="DataListItemDataBound2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataListItemEventHandler"/>
		<seealso cref="System.Web.UI.WebControls.DataList.OnItemDataBound"/>
	</doc>
</docs>
