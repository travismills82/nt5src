<docs>
	<doc for="ImageButton.EventCommand">
		<internalonly/>
		<summary>
			<para>Represents the <see langword="Command"/> event of an <see cref="System.Web.UI.WebControls.ImageButton"/>.</para>
		</summary>
	</doc>
	<doc for="ImageButton.ImageButton">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.ImageButton"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.ImageButton"/> class.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create and initialize a new 
      instance of the <see cref="System.Web.UI.WebControls.ImageButton"/> class.</para>
			<codelink SampleID="Classic ImageButton.ImageButton Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ImageButton.TagKey">
		<internalonly/>
		<summary>
			<para> Gets a value that represents the tag HtmlTextWriterTag.Input. This property is read-only.</para>
		</summary>
		<value>
			<para>A tag that contains the value HtmlTextWriterTag.Input.</para>
		</value>
		<remarks>
			<para>Overrides the base implementation and returns the tag HtmlTextWriterTag.Input 
       instead of the default HtmlTextWriterTag.Img</para>
		</remarks>
	</doc>
	<doc for="ImageButton.AddAttributesToRender">
		<internalonly/>
		<summary>
			<para>Adds the attributes of an <see cref="System.Web.UI.WebControls.ImageButton"/> to the output
    stream for rendering on the client.</para>
		</summary>
		<param name="writer">The output stream to render on the client.</param>
	</doc>
	<doc for="ImageButton.IPostBackDataHandler.LoadPostData">
		<summary>
			<para>Processes posted data for the <see cref="System.Web.UI.WebControls.ImageButton"/> control.</para>
		</summary>
		<param name="postDataKey">The key value used to index an entry in the collection.</param>
		<param name=" postCollection">A <see cref="System.Collections.Specialized.NameValueCollection" qualify="true"/> that contains post information.</param>
		<returns>
			<para>Returns <see langword="false"/> for all cases.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ImageButton"/> will check to see if the x and y 
    values were posted, which indicates that the image was clicked by the user. The
 <see cref="System.Web.UI.WebControls.ImageButton"/> will then register with the Page that 
    it wants to raise an event during the event processing phase.</para>
		</remarks>
	</doc>
	<doc for="ImageButton.OnPreRender">
		<internalonly/>
		<summary>
			<para> 
       Determine
       if the image has been clicked prior to rendering on the client. </para>
		</summary>
	</doc>
	<doc for="ImageButton.IPostBackEventHandler.RaisePostBackEvent">
		<summary>
			<para>Raises events on post back for the <see cref="System.Web.UI.WebControls.ImageButton"/> 
 control.</para>
		</summary>
		<param name="eventArgument">The argument for the event.</param>
		<remarks>
			<para>
				<see cref="System.Web.UI.WebControls.ImageButton"/> fires a <see langword="Click"/> 
 event.</para>
		</remarks>
	</doc>
	<doc for="ImageButton.IPostBackDataHandler.RaisePostDataChangedEvent">
		<summary>
    Raised when posted data for a control has changed.
 </summary>
		<remarks>
			<para>Specific controls may fire change events.</para>
		</remarks>
	</doc>
	<doc for="ImageButton.Click">
		<summary>
			<para>Occurs when the <see cref="System.Web.UI.WebControls.ImageButton"/> is clicked.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ImageButton.Click"/> event is raised when
   the <see cref="System.Web.UI.WebControls.ImageButton"/>
   control is clicked.</para>
			<note type="note">
   This event causes the page to be
   posted back to the server.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the <see cref="System.Web.UI.WebControls.ImageButton.Click"/> event to display
   the coordinates where the user clicks the image.</para>
			<codelink SampleID="Classic ImageButton.Click Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ImageButton.OnClick"/>
		<seealso cref="System.Web.UI.ImageClickEventHandler" qualify="true"/>
	</doc>
	<doc for="ImageButton.EventClick">
		<internalonly/>
		<summary>
			<para>Represents the <see langword="Click"/> event of the <see cref="System.Web.UI.WebControls.ImageButton"/>.</para>
		</summary>
	</doc><doc for="ImageButton">
		<summary>
			<para> A control that displays an image and responds
      to mouse clicks on the image.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.ImageButton"/> control to display an image
   that responds to mouse clicks. </para>
			<para>Both the <see cref="System.Web.UI.WebControls.ImageButton.Click"/> and <see cref="System.Web.UI.WebControls.ImageButton.Command"/> events are raised when
the <see cref="System.Web.UI.WebControls.ImageButton"/>
control is clicked. </para>
			<para> By using the <see cref="System.Web.UI.WebControls.ImageButton.OnClick"/> event handler, you
can programmatically determine the coordinates where the image is clicked. You can then code
a response, based on the values of the coordinates. Note the origin (0, 0)
is located at the upper left corner of
the image.</para>
			<para> You can use the <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/>
event handler to make the <see cref="System.Web.UI.WebControls.ImageButton"/> control
behave like a command button. A command name can be associated with the control
by using the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> property. This allows
multiple <see cref="System.Web.UI.WebControls.ImageButton"/> controls to be placed on the same Web
page. The value of the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> property can then
be programmatically identified in the <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> event
handler to determine the appropriate action to perform when each <see cref="System.Web.UI.WebControls.ImageButton"/> control
is clicked. The <see cref="System.Web.UI.WebControls.ImageButton.CommandArgument"/> property can also be used to
pass additional
information about the command, such as specifying ascending order. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create an <see cref="System.Web.UI.WebControls.ImageButton"/>
control that displays
the coordinates where an image is clicked.</para>
			<codelink SampleID="Classic ImageButton.Click Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button"/>
		<seealso cref="System.Web.UI.WebControls.Image"/>
	</doc><doc for="ImageButton.CommandName">
		<summary>
			<para>Gets or sets the command name associated with the <see cref="System.Web.UI.WebControls.ImageButton"/>
control.</para>
		</summary>
		<value>
			<para> The command name associated with the <see cref="System.Web.UI.WebControls.ImageButton"/> control. The default value is <see cref="System.String.Empty" qualify="true"/>. </para>
		</value>
		<remarks>
			<para>Use this property to specify the command to perform when the <see cref="System.Web.UI.WebControls.ImageButton"/> control is
   clicked, such as <see langword="Sort"/>, <see langword="Cancel"/>, and
<see langword="Edit"/>. This allows multiple <see cref="System.Web.UI.WebControls.ImageButton"/>
controls to be placed on the same Web page. The value in this property can
then be programmatically identified in the <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> event handler
to determine the appropriate action to perform when each <see cref="System.Web.UI.WebControls.ImageButton"/>
control is clicked.</para>
			<para>Supplemental information about the command, such as
   specifying ascending sort order, can be included
   by using the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/>
property to associate
a command name with an <see cref="System.Web.UI.WebControls.ImageButton"/> control.</para>
			<codelink SampleID="Classic ImageButton.CommandName Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.CommandArgument"/>
		<seealso cref="System.Web.UI.WebControls.ImageButton.OnClick"/>
	</doc><doc for="ImageButton.CommandArgument">
		<summary>
			<para>Gets or sets an optional argument that provides
      additional information about the
   <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/>
   property.</para>
		</summary>
		<value>
			<para>An optional argument that supplements the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> property.</para>
		</value>
		<remarks>
			<para>Sometimes, multiple <see cref="System.Web.UI.WebControls.ImageButton"/> controls are related and share
   the same value for the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> property, such as
<see langword="Sort"/>. Use this property to supplement the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> property with additional 
   information about the command to perform, such as <see langword="Ascending"/>. The values of the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> and <see cref="System.Web.UI.WebControls.ImageButton.CommandArgument"/> properties are typically used in the <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> event handler to
   determine the action to perform when the <see cref="System.Web.UI.WebControls.ImageButton"/>
   control is clicked.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.ImageButton.CommandArgument"/> property to associate a
   command argument with an <see cref="System.Web.UI.WebControls.ImageButton"/>
   control.</para>
			<codelink SampleID="Classic ImageButton.CommandArgument Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ImageButton.CommandName"/>
		<seealso cref="System.Web.UI.WebControls.ImageButton.OnCommand"/>
		<seealso cref="System.Web.UI.WebControls.Button"/>
		<seealso cref="System.Web.UI.WebControls.Image"/>
	</doc><doc for="ImageButton.OnClick">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.ImageButton.Click"/> event
   and allows you to handle the <see cref="System.Web.UI.WebControls.ImageButton.Click"/> event directly.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.ImageClickEventArgs" qualify="true"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ImageButton.Click"/> event is raised when the
<see cref="System.Web.UI.WebControls.ImageButton"/> control 
   is clicked. By using the <see cref="System.Web.UI.WebControls.ImageButton.OnClick"/> event
   handler, you can programmatically determine the coordinates where the image is clicked.
   You can then code a response, based on the values of these coordinates. Note
   the origin (0, 0) is located at the upper left corner of the image.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.ImageButton.OnClick"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.ImageButton.OnClick"/> in a derived class, be 
   sure to call the base class's <see cref="System.Web.UI.WebControls.ImageButton.OnClick"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.ImageButton.Click"/> event to
      display the coordinates where the user clicks the image.</para>
			<codelink SampleID="Classic ImageButton.Click Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ImageButton.Click"/>
		<seealso cref="System.Web.UI.ImageClickEventArgs" qualify="true"/>
	</doc><doc for="ImageButton.Command">
		<summary>
			<para>Occurs when the <see cref="System.Web.UI.WebControls.ImageButton"/> is clicked.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event
   is raised when an <see cref="System.Web.UI.WebControls.ImageButton"/>
   control is clicked. </para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event is raised through
   the control hierarchy in the form of the <see langword="BubbleEvent"/>.
</note>
			<note type="note">
   This event causes the page to
   post back to the server.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code a handler for the <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event to determine which
   <see cref="System.Web.UI.WebControls.ImageButton"/> control is
      clicked.</para>
			<codelink SampleID="Classic ImageButton.CommandArgument Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ImageButton.OnCommand"/>
		<seealso cref="System.Web.UI.WebControls.CommandEventHandler"/>
	</doc><doc for="ImageButton.OnCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event
   and allows you to handle the <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event directly.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.CommandEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event is raised when the
<see cref="System.Web.UI.WebControls.ImageButton"/> control 
   is clicked. The <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> event handler is used to
   make the <see cref="System.Web.UI.WebControls.ImageButton"/> control
   behave
   like a command button. A command name can be associated with the control by
   using the <see cref="System.Web.UI.WebControls.ImageButton.CommandName"/> property. This allows
   multiple <see cref="System.Web.UI.WebControls.ImageButton"/>
   controls to be placed on the Web page. The value in this property can
   then be programmatically identified in the <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> event
   handler to determine the appropriate action to perform when each <see cref="System.Web.UI.WebControls.ImageButton"/> control is clicked. The <see cref="System.Web.UI.WebControls.ImageButton.CommandArgument"/> property can also be used
   to pass additional information about the command, such as specifying ascending order.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event is raised through
   the control hierarchy in the form of the <see langword="BubbleEvent"/>.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> in a derived class, be 
   sure to call the base class's <see cref="System.Web.UI.WebControls.ImageButton.OnCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code a handler for the <see cref="System.Web.UI.WebControls.ImageButton.Command"/> event to determine which
   <see cref="System.Web.UI.WebControls.ImageButton"/> control is clicked.</para>
			<codelink SampleID="Classic ImageButton.CommandArgument Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.ImageButton.Command"/>
		<seealso cref="System.Web.UI.WebControls.CommandEventArgs"/>
	</doc><doc for="ImageButton.CausesValidation">
		<summary>
			<para>Gets or sets a value indicating whether validation is
      performed when the <see cref="System.Web.UI.WebControls.ImageButton"/>
      control is clicked.</para>
		</summary>
		<value>
			<para><see langword="true"/> if validation is performed when
   the <see cref="System.Web.UI.WebControls.ImageButton"/> control is
   clicked; otherwise, <see langword="false"/>. The default
   value is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para>By default, page validation is performed when a <see cref="System.Web.UI.WebControls.ImageButton"/> control is
   clicked. Page validation determines whether the input controls
   associated with a validation control on the page all pass the validation
   rules specified by the validation control. </para>
			<para>You can specify or determine whether validation is
   performed on both the client and the server when a <see cref="System.Web.UI.WebControls.ImageButton"/> control is clicked by using the
<see cref="System.Web.UI.WebControls.ImageButton.CausesValidation"/> property. To prevent 
   validation from being performed, set the <see cref="System.Web.UI.WebControls.ImageButton.CausesValidation"/> property to <see langword="false"/>.</para>
			<para>This property is commonly set to <see langword="false"/> for a
<see langword="reset"/> or <see langword="clear"/> button to prevent 
validation from being performed when the button is clicked.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.ImageButton.CausesValidation"/> property to prevent page
   validation from occurring. Notice how the <see cref="System.Web.UI.WebControls.BaseValidator.Validate"/> method
   activates each validation control independently.</para>
			<codelink SampleID="ImageButtonCausesValidation" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.Page.Validate" qualify="true"/>
	</doc>
</docs>
