<docs>
	<doc for="Table.AddAttributesToRender">
		<internalonly/>
		<summary>
			<para>A protected method. Adds information about the border
       color and border width HTML attributes to the list of attributes to render.</para>
		</summary>
		<param name="writer">The output stream that renders HTML content to the client.</param>
	</doc>
	<doc for="Table.CreateControlStyle">
		<internalonly/>
		<summary>
			<para>A protected method. Creates a table control style.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Web.UI.WebControls.Style"/> that specifies the
    table control style.</para>
		</returns>
	</doc>
	<doc for="Table.RenderContents">
		<internalonly/>
		<summary>
    A protected method.
 </summary>
		<param name="writer">The output stream that renders HTML content to the client.</param>
	</doc>
	<doc for="Table.CreateControlCollection">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="Table.RowControlCollection.AddAt">
		<summary>
			<para>Adds the specified <see cref="System.Web.UI.Control"/> object to the collection. The new control is added
    to the array at the specified index location.</para>
		</summary>
		<param name=" index">The location in the array to add the child control.</param>
		<param name="child">The <see langword="Control"/> object to add to the collection.</param>
		<exception cref="HttpException">Thrown if the control does not allow child controls.</exception>
		<exception cref="ArgumentException">Thrown if the child value is null.</exception>
	</doc>
	<doc for="Table.RowControlCollection.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Table.RowControlCollection">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Table.Table">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Web.UI.WebControls.Table"/> class.
   </para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.Table"/> 
class.</para>
		</remarks>
	</doc>
	<doc for="Table.BackImageUrl">
		<summary>
			<para>Gets or sets the URL of the background image to
      display behind the <see cref="System.Web.UI.WebControls.Table"/>
      control.</para>
		</summary>
		<value>
			<para> 
      The URL of the background image for the <see cref="System.Web.UI.WebControls.Table"/>
      control. The default
      value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Table.BackImageUrl"/> property to specify the
   location of an image to display in the background of the <see cref="System.Web.UI.WebControls.Table"/>
   control. You can use a relative or an absolute URL. A relative URL relates the location
   of the image to the location of the Web page or user control
   without specifying a complete path on the server. The path is relative to the location of the
   Web page. This makes it easier to move the entire site to another directory
   on the server without updating the path to the image in code. An
   absolute URL provides the complete path, so moving the site to another directory requires updating the
   code.</para>
			<note type="note">
   If the image is smaller than the <see cref="System.Web.UI.WebControls.Table"/>
   control, it will be tiled.
</note>
		</remarks>
	</doc>
	<doc for="Table.CellSpacing">
		<summary>
			<para> Gets or sets the amount of space between cells.</para>
		</summary>
		<value>
			<para>The amount of space, in pixels, between cells. The default value is -1, which indicates that the property has not been set.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Table.CellSpacing"/> property to control the spacing
   between adjacent cells in the <see cref="System.Web.UI.WebControls.Table"/> control. This spacing is applied both
   vertically and horizontally. The cell spacing is uniform for the entire table.
   Individual cell spacing between each row or column cannot be specified.</para>
			<note type="note">
   If you set this property to a value greater
   than<see langword=" "/>0 and set the <see cref="System.Web.UI.WebControls.Table.GridLines"/>
   property to a value that displays the cell borders, a gap is displayed between
   the borders of adjacent cells. In this situation, the <see cref="System.Web.UI.WebControls.Table.CellSpacing"/> property controls the
   size of the gap.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.Table.CellPadding"/>
	</doc>
	<doc for="Table.CellPadding">
		<summary>
			<para>Gets or sets
      the amount of space between the contents of
      a cell and the cell's border.</para>
		</summary>
		<value>
			<para>The amount of space, in pixels, between the contents of a cell and the cell's border.
      The default value is -1, which indicates that the property has not
      been set.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Table.CellPadding"/> property to control the spacing
   between the contents of a cell and the cell's border. The padding amount
   specified is added to all four sides of the cell.</para>
			<para>All cells in the same column of a <see cref="System.Web.UI.WebControls.Table"/> 
control have the same width. The padding amount is
applied to the widest cell and all other cells in the column have this cell width. </para>
			<para> Similarly, all cells in the same
   row havethe same height. The padding amount is applied to the tallest cell in the row
   and all other cells in the row have this cell height. Individual cell sizes cannot be
   specified.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.Table.CellSpacing"/>
	</doc>
	<doc for="Table.GridLines">
		<summary>
			<para> Gets or sets the grid line style to display in the <see cref="System.Web.UI.WebControls.Table"/>
control.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.GridLines"/> enumeration values. The default value
   is <see langword="None"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Table.GridLines"/> property to
   specify which cell borders are displayed in the <see cref="System.Web.UI.WebControls.Table"/>
   control. The following table lists the different grid line styles. </para>
			<list type="table">
				<listheader>
					<term> GridLine value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="None"/></term>
					<description>No
      cell borders are displayed.</description>
				</item>
				<item>
					<term><see langword="Horizontal"/></term>
					<description>Only
   the horizontal cell borders are displayed.</description>
				</item>
				<item>
					<term><see langword="Vertical"/></term>
					<description>Only
   the vertical cell borders are displayed.</description>
				</item>
				<item>
					<term><see langword="Both"/></term>
					<description>Both
   the horizontal and vertical cell borders are
   displayed.</description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Table.GridLines"/>
property to specify the grid line style.</para>
			<codelink SampleID="Classic Table.GridLines Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.GridLines"/>
	</doc>
	<doc for="Table.HorizontalAlign">
		<summary>
			<para>Gets or sets the horizontal alignment of the <see cref="System.Web.UI.WebControls.Table"/> control on the page.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.UI.WebControls.HorizontalAlign"/> enumeration values. The default value is
<see langword="NotSet"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Table.HorizontalAlign"/> property to specify the
   horizontal alignment of the <see cref="System.Web.UI.WebControls.Table"/>
   control within the
   page. The following table lists the different horizontal alignment styles. </para>
			<list type="table">
				<listheader>
					<term>HorizontalAlign value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="NotSet"/></term>
					<description>The horizontal alignment of the <see cref="System.Web.UI.WebControls.Table"/> control has not been set.</description>
				</item>
				<item>
					<term><see langword="Left"/></term>
					<description>The <see cref="System.Web.UI.WebControls.Table"/>control is left justified on the
page.</description>
				</item>
				<item>
					<term><see langword="Center"/></term>
					<description>The <see cref="System.Web.UI.WebControls.Table"/> control is centered on the
page.</description>
				</item>
				<item>
					<term><see langword="Right"/></term>
					<description>The <see cref="System.Web.UI.WebControls.Table"/> control is right justified
on the page.</description>
				</item>
				<item>
					<term><see langword="Justify"/></term>
					<description>The <see cref="System.Web.UI.WebControls.Table"/> control
is aligned with both the left and right margins of
the page.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.HorizontalAlign"/>
	</doc>
	<doc for="Table.Rows">
		<summary>
			<para> Gets the collection rows in the <see cref="System.Web.UI.WebControls.Table"/>
control.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.WebControls.TableRowCollection"/> that
   contains the <see cref="System.Web.UI.WebControls.TableRow"/> objects in the <see cref="System.Web.UI.WebControls.Table"/>
   control.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Table.Rows"/> collection to programmatically
   manage the <see cref="System.Web.UI.WebControls.TableRow"/> objects in the <see cref="System.Web.UI.WebControls.Table"/>
   control. A <see cref="System.Web.UI.WebControls.TableRow"/>
   represents a row in the table.</para>
			<note type="note">
   This property is normally used only
   when building tables programmatically. At design time, it is set by
   declaring <see cref="System.Web.UI.WebControls.TableRow"/> objects between the opening and
   closing tags of the <see cref="System.Web.UI.WebControls.Table"/> control.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how use the <see cref="System.Web.UI.WebControls.Table.Rows"/> collection to construct a table 
   programmatically. Creating a table dynamically consists of three steps. First,
   create <see cref="System.Web.UI.WebControls.TableCell"/> objects to represent the cells in a
   row. Content for the cells is added by either setting the <see cref="System.Web.UI.WebControls.TableCell.Text"/> property or by adding
   controls to the <see cref="System.Web.UI.Control.Controls" qualify="true"/> collection of the <see cref="System.Web.UI.WebControls.TableCell"/>. Next, create a <see cref="System.Web.UI.WebControls.TableRow"/> to represent a row in the table. Add
   the <see cref="System.Web.UI.WebControls.TableCell"/> objects created earlier to the
<see cref="System.Web.UI.WebControls.TableRow.Cells"/> collection of the <see cref="System.Web.UI.WebControls.TableRow"/>. Finally, add the <see cref="System.Web.UI.WebControls.TableRow"/> to the <see cref="System.Web.UI.WebControls.Table.Rows"/> collection of 
   the <see cref="System.Web.UI.WebControls.Table"/>
   control. Repeat this process for each
   row in the table.</para>
			<codelink SampleID="Classic Table Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.TableRow"/>
		<seealso cref="System.Web.UI.WebControls.TableRowCollection"/>
	</doc>
	<doc for="Table">
		<summary>
			<para> Displays a table on a Web page.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Web.UI.WebControls.Table"/>
control allows you to build an
HTML table and specify its characteristics in a straightforward manner. A table can be
built at design time given some static content, but the power of a <see cref="System.Web.UI.WebControls.Table"/>
Web
server
control is often realized when the table is built programmatically with dynamic
contents.</para>
			<para> It is important to remember that any programmatic
   addition or modification of table rows or cells will not persist across
   postbacks. This is because table rows and cells are controls of their own, and
   not properties of the <see cref="System.Web.UI.WebControls.Table"/>
   
   control. To persist any changes to the table, rows and cells must be reconstructed
   after each postback. In fact, if substantial modifications are expected,
   it is recommended that a <see cref="System.Web.UI.WebControls.DataList"/> or <see cref="System.Web.UI.WebControls.DataGrid"/> control
   be used instead of the <see cref="System.Web.UI.WebControls.Table"/> control. As a result, the <see cref="System.Web.UI.WebControls.Table"/> class is primarily used by control
   developers.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to
      create a table at design time. The table contains two rows of two cells each.</para>
			<codelink SampleID="Classic Table Example" SnippetID="1"/>
			<para> The following example demonstrates 
how to construct a table programmatically. Creating a table 
dynamically consists of three steps. First, create <see cref="System.Web.UI.WebControls.TableCell"/> objects to represent the cells in a row. Content for the 
cells is added by either setting the <see cref="System.Web.UI.WebControls.TableCell.Text"/> 
property or by adding controls to the <see cref="System.Web.UI.Control.Controls" qualify="true"/> collection of the <see cref="System.Web.UI.WebControls.TableCell"/>. Next, create a <see cref="System.Web.UI.WebControls.TableRow"/> to represent a row in the table. 
Add the <see cref="System.Web.UI.WebControls.TableCell"/> objects 
created earlier to the <see cref="System.Web.UI.WebControls.TableRow.Cells"/> 
collection of the <see cref="System.Web.UI.WebControls.TableRow"/>. Finally, add the <see cref="System.Web.UI.WebControls.TableRow"/> to the <see cref="System.Web.UI.WebControls.Table.Rows"/> 
collection of the <see cref="System.Web.UI.WebControls.Table"/> 
control. 
Repeat this process for each row in the table.</para>
			<codelink SampleID="Classic Table Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.TableCell"/>
		<seealso cref="System.Web.UI.WebControls.TableRow"/>
		<seealso cref="System.Web.UI.WebControls.TableCellCollection"/>
		<seealso cref="System.Web.UI.WebControls.TableRowCollection"/>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
		<seealso cref="System.Web.UI.WebControls.DataList"/>
	</doc>
</docs>
