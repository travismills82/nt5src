<docs>
	<doc for="Repeater.EventItemCreated">
		<internalonly/>
		<summary>
			<para>Represents the index referencing an event handler for 
       the <see cref="System.Web.UI.WebControls.Repeater.ItemCreated"/>
       event.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.OnItemCreated"/>
	</doc>
	<doc for="Repeater.EventItemDataBound">
		<internalonly/>
		<summary>
			<para>Represents the index referencing an event handler for 
       the <see cref="System.Web.UI.WebControls.Repeater.ItemDataBound"/>
       event.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.OnItemDataBound"/>
	</doc>
	<doc for="Repeater.EventItemCommand">
		<internalonly/>
		<summary>
			<para>Represents the index referencing an event handler for 
       the <see cref="System.Web.UI.WebControls.Repeater.ItemCommand"/>
       event.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.OnItemCommand"/>
	</doc>
	<doc for="Repeater.Repeater">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.Repeater"/> class.</para>
		</summary>
	</doc>
	<doc for="Repeater.DataMember">
		<summary>
			<para>Gets or sets the specific table in the <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> to bind to the 
    control.</para>
		</summary>
		<value>
			<para>A string that specifies a table in the <see cref="System.Web.UI.WebControls.Repeater.DataSource"/>.</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> contains multiple 
    tables, use this property to specify the table to bind to the <see cref="System.Web.UI.WebControls.Repeater"/>. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Repeater.DataMember"/> property to specify a table in 
    the <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> to bind to the <see cref="System.Web.UI.WebControls.Repeater"/> control. </para>
			<codelink SampleID="Classic Repeater.DataMember Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.DataSource"/>
	</doc>
	<doc for="Repeater.ItemCommand">
		<summary>
			<para>Occurs when a button is clicked in the <see cref="System.Web.UI.WebControls.Repeater"/> control.</para>
		</summary>
		<remarks>
			<para>This event is raised when a button in the <see cref="System.Web.UI.WebControls.Repeater"/> is clicked.</para>
			<para>This event causes a round-trip from the
    client to occur.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the <see cref="System.Web.UI.WebControls.Repeater.ItemCommand"/> 
 event of the <see cref="System.Web.UI.WebControls.Repeater"/>. Information about the
 button is displayed when a <see cref="System.Web.UI.WebControls.Button"/> control within the
 <see cref="System.Web.UI.WebControls.Repeater"/> 
 is clicked.</para>
			<codelink SampleID="Classic Repeater.ItemCommand Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.OnItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterCommandEventArgs"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterCommandEventHandler"/>
	</doc>
	<doc for="Repeater.ItemCreated">
		<summary>
			<para> Occurs when an item is created in the <see cref="System.Web.UI.WebControls.Repeater"/> control.</para>
		</summary>
		<remarks>
			<para>This event is raised when an item is created in the <see cref="System.Web.UI.WebControls.Repeater"/>.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the 
    <see cref="System.Web.UI.WebControls.Repeater.ItemCreated"/> event of the <see cref="System.Web.UI.WebControls.Repeater"/>. A 
       new line of text indicating the item type is displayed whenever a <see cref="System.Web.UI.WebControls.Repeater"/> item is created.</para>
			<codelink SampleID="Classic Repeater.ItemCreated Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.OnItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventArgs"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventHandler"/>
	</doc>
	<doc for="Repeater.CreateChildControls">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="Repeater.CreateControlHierarchy">
		<internalonly/>
		<summary>
    A protected method. Creates a control
    hierarchy, with or without the data source as specified.
 </summary>
		<param name="useDataSource">Indicates whether to use the data source or not.</param>
	</doc>
	<doc for="Repeater.CreateItem">
		<summary>
		</summary>
	</doc>
	<doc for="Repeater.DataBind">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="Repeater.InitializeItem">
		<internalonly/>
		<summary>
			<para>A protected method. Populates iteratively the specified <see cref="System.Web.UI.WebControls.RepeaterItem"/> with a 
    sub-hierarchy of child controls.</para>
		</summary>
		<param name="item">The control to be initialized from an inline template.</param>
	</doc>
	<doc for="Repeater.OnBubbleEvent">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="Repeater.OnDataBinding">
		<internalonly/>
		<summary>
			<para>A protected method. Raises the <see langword="DataBinding"/> event.</para>
		</summary>
	</doc>
	<doc for="Repeater.OnItemCommand">
		<summary>
			<para> Raises the <see cref="System.Web.UI.WebControls.Repeater.ItemCommand"/> event.</para>
		</summary>
		<param name="e">The <see cref="System.Web.UI.WebControls.RepeaterCommandEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
       When overriding
    <see cref="System.Web.UI.WebControls.Repeater.OnItemCommand"/> in a derived class, be sure 
       to call the base class's <see cref="System.Web.UI.WebControls.Repeater.OnItemCommand"/> method.
    </note>
		</remarks>
		<example>
			<para>The following example illustrates a way to handle an <see cref="System.Web.UI.WebControls.Repeater.ItemCommand"/> event of the <see cref="System.Web.UI.WebControls.Repeater"/>. Information about the button is 
    displayed whenever a <see cref="System.Web.UI.WebControls.Button"/> control within the <see cref="System.Web.UI.WebControls.Repeater"/> is clicked.</para>
			<codelink SampleID="Classic Repeater.ItemCommand Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemCommand"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterCommandEventArgs"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterCommandEventHandler"/>
	</doc>
	<doc for="Repeater.OnItemCreated">
		<summary>
			<para> Raises the <see cref="System.Web.UI.WebControls.Repeater.ItemCreated"/> event.</para>
		</summary>
		<param name="e">The <see cref="System.Web.UI.WebControls.RepeaterItemEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
       When overriding
    <see cref="System.Web.UI.WebControls.Repeater.OnItemCreated"/> in a derived class, be sure 
       to call the base class's <see cref="System.Web.UI.WebControls.Repeater.OnItemCreated"/> method.
    </note>
		</remarks>
		<example>
			<para>The following example illustrates a way to handle the <see cref="System.Web.UI.WebControls.Repeater.ItemCreated"/> event of the <see cref="System.Web.UI.WebControls.Repeater"/> . A new line of text indicating the 
    item type is displayed whenever a <see cref="System.Web.UI.WebControls.Repeater"/> item is
    created.</para>
			<codelink SampleID="Classic Repeater.ItemCreated Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemCreated"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventArgs"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventHandler"/>
	</doc>
	<doc for="Repeater.OnItemDataBound">
		<summary>
			<para> Raises the <see cref="System.Web.UI.WebControls.Repeater.ItemDataBound"/>
 event.</para>
		</summary>
		<param name="e">The <see cref="System.Web.UI.WebControls.RepeaterItemEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>Raising an event invokes the event handler through a delegate. For more 
       information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
       When overriding
    <see cref="System.Web.UI.WebControls.Repeater.OnItemDataBound"/> in a derived class, be sure 
       to call the base class's <see cref="System.Web.UI.WebControls.Repeater.OnItemDataBound"/>
       method.
    </note>
		</remarks>
		<example>
			<para>The following example illustrates a way to handle the <see cref="System.Web.UI.WebControls.Repeater.ItemDataBound"/> event of the <see cref="System.Web.UI.WebControls.Repeater"/>. The 
    data is modified after it is bound to an item in the <see cref="System.Web.UI.WebControls.Repeater"/> but before it is rendered on the
    page.</para>
			<codelink SampleID="Classic Repeater.ItemDataBound Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventArgs"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventHandler"/>
	</doc>
	<doc for="Repeater.CreateItem1">
		<internalonly/>
		<summary>
			<para>A protected method. Creates a <see cref="System.Web.UI.WebControls.RepeaterItem"/> with the specified item type and
   location within the <see cref="System.Web.UI.WebControls.Repeater"/>.</para>
		</summary>
		<param name=" itemIndex">The specified location within the <see cref="System.Web.UI.WebControls.Repeater"/> to place the created item.</param>
		<param name=" itemType">A <see cref="System.Web.UI.WebControls.ListItemType"/> that represents the specified type of the <see cref="System.Web.UI.WebControls.Repeater"/> item to create.</param>
	</doc>
	<doc for="Repeater.Items">
		<summary>
			<para> Gets a collection of <see cref="System.Web.UI.WebControls.RepeaterItem"/> objects in the <see cref="System.Web.UI.WebControls.Repeater"/>.</para>
		</summary>
		<value>
			<para>A collection of <see cref="System.Web.UI.WebControls.RepeaterItem"/> objects. The default is an empty
<see cref="System.Web.UI.WebControls.RepeaterItemCollection"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.Repeater"/> populates the <see cref="System.Web.UI.WebControls.Repeater.Items"/> collection by enumerating every
   object in its <see cref="System.Web.UI.WebControls.Repeater.DataSource"/>. The <see cref="System.Web.UI.WebControls.Repeater.Items"/> collection is then used by
   the <see cref="System.Web.UI.WebControls.Repeater"/> to render each item in
   the control.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Repeater.Items"/> property to determine the index of
   the item selected from the <see cref="System.Web.UI.WebControls.Repeater"/> control.</para>
			<codelink SampleID="Classic Repeater.Items Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemCollection"/>
	</doc><doc for="Repeater.Controls">
		<summary>
			<para> Gets a <see cref="System.Web.UI.ControlCollection" qualify="true"/> that contains the 
   child controls of the <see cref="System.Web.UI.WebControls.Repeater"/>.</para>
		</summary>
		<value>
			<para> A <see cref="System.Web.UI.ControlCollection" qualify="true"/> that contains the 
   child controls of the <see cref="System.Web.UI.WebControls.Repeater"/> control.
   </para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Repeater.Controls"/> collection to manage the 
   child controls of the <see cref="System.Web.UI.WebControls.Repeater"/>
   control. It is commonly used to retrieve a child control
   from the collection. You can also add and remove child
   controls from the
   collection.</para>
		</remarks>
		<seealso cref="System.Web.UI.ControlCollection" qualify="true"/>
	</doc><doc for="Repeater.ItemDataBound">
		<summary>
			<para>Occurs after an item in the <see cref="System.Web.UI.WebControls.Repeater"/> is data-bound but before it is
   rendered on the page.</para>
		</summary>
		<remarks>
			<para>This event is raised when an item in the <see cref="System.Web.UI.WebControls.Repeater"/> is data-bound.</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code a handler for the
   <see cref="System.Web.UI.WebControls.Repeater.ItemDataBound"/> event of the <see cref="System.Web.UI.WebControls.Repeater"/>. The data
      is modified after it is bound to an item in the <see cref="System.Web.UI.WebControls.Repeater"/>
      but before it is rendered on the page.</para>
			<codelink SampleID="Classic Repeater.ItemDataBound Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.OnItemDataBound"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventArgs"/>
		<seealso cref="System.Web.UI.WebControls.RepeaterItemEventHandler"/>
	</doc><doc for="Repeater.DataSource">
		<summary>
			<para> Gets or sets the data source that provides data for
      populating the list.</para>
		</summary>
		<value>
			<para> A data source that provides data
      for populating the list. The default is <see langword="null"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> specified is not a supported source of data for the <see cref="System.Web.UI.WebControls.Repeater"/>.</exception>
		<remarks>
			<para>Use this property to specify the source of data to
      populate the <see cref="System.Web.UI.WebControls.Repeater"/> control.
      The <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> can be any <see cref="System.Collections.IEnumerable" qualify="true"/> derived object such as a <see cref="System.Data.DataView" qualify="true"/> for
      accessing databases, a <see cref="System.Collections.ArrayList" qualify="true"/>, a <see cref="System.Collections.Hashtable" qualify="true"/>, or an array. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify the <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> of the <see cref="System.Web.UI.WebControls.Repeater"/>
when the page is loaded.</para>
			<codelink SampleID="Classic Repeater.DataSource Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.DataMember"/>
	</doc>
	<doc for="Repeater">
		<summary>
			<para> A data-bound list control that allows custom layout by repeating
      a specified template for each item
      displayed in the
      list.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.Repeater"/>
is a basic templated data-bound list. It has no built-in layout or
styles, so you must explicitly declare all HTML layout, formatting, and style tags
within the control's templates.</para>
			<para>The <see cref="System.Web.UI.WebControls.Repeater"/>
is the only control that allows the developers to split HTML tags across the
templates. To create a table using templates, include the begin table tag
(<see langword="&lt;table&gt;"/>) in the <see cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>, a single table row tag
(<see langword="&lt;tr&gt;"/>)
in the <see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>, and the end table tag
(<see langword="&lt;/table&gt;"/>) in the <see cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>.</para>
			<para>The <see cref="System.Web.UI.WebControls.Repeater"/> has no built-in selection
or editing support. The user may use the <see cref="System.Web.UI.WebControls.Repeater.ItemCommand"/>
event to
process control events that are raised from the templates to the control.</para>
			<para>A <see cref="System.Web.UI.WebControls.Repeater"/> binds its <see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/> and <see cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/> to a data model declared
and referenced by its <see cref="System.Web.UI.WebControls.Repeater.DataSource"/> property. The
<see cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>, <see cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>, and <see cref="System.Web.UI.WebControls.Repeater.SeparatorTemplate"/>
are not data-bound. </para>
			<para>If the data source of the <see cref="System.Web.UI.WebControls.Repeater"/> is set but no data is returned, the
control renders the <see cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/> and <see cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/> with no items. If the data
source is <see langword="null"/>, the <see cref="System.Web.UI.WebControls.Repeater"/> is not rendered.</para>
			<para>At a minimum, every <see cref="System.Web.UI.WebControls.Repeater"/> must define an <see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>. However, other
optional templates described in
the following table can be used to customize the appearance of the list.</para>
			<list type="table">
				<listheader>
					<term>Template Name</term>
					<description>Description</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/></term>
					<description>Defines the content and layout of items
         within the list. This template is required.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/></term>
					<description>If
         defined, this determines the content and layout of alternating (zero-based
         odd-indexed) items. If not defined, <see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>
         is
         used.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.Repeater.SeparatorTemplate"/></term>
					<description>If defined, this is rendered between items
         (and alternating items). If not defined, a separator is not
         rendered.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/></term>
					<description>If
         defined, this determines the content and layout
         of the list header. If not defined, a header is not
         rendered.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/></term>
					<description>If
         defined, this determines the content and layout
         of the list footer. If not defined, a footer is not
         rendered.</description>
				</item>
			</list>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates the use of some simple <see cref="System.Web.UI.WebControls.Repeater"/> controls. The first <see cref="System.Web.UI.WebControls.Repeater"/> displays its items in a table;
   the second <see cref="System.Web.UI.WebControls.Repeater"/> displays its items in a comma-separated
   list.</para>
			<codelink SampleID="Classic Repeater Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
		<seealso cref="System.Web.UI.WebControls.DataList"/>
	</doc>
	<doc for="Repeater.AlternatingItemTemplate">
		<summary>
			<para> Gets or sets the <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how alternating items in the control
   are displayed. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how alternating items are
   displayed. The default value is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use this property to provide a different appearance for
      alternating items in the <see cref="System.Web.UI.WebControls.Repeater"/> control from what is specifed in
      the <see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>. </para>
			<note type="caution">
      This control can be used to display user
      input, which might include malicious client script. Check any information that
      is sent from a client for executable script, SQL statements, or other code
      before displaying it in your application. ASP.NET provides an input request
      validation feature to block script and HTML in user input. Validation server
      controls are also provided to assess user input. For more information, see
   <see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
   <see cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/>
   to display alternating items of the <see cref="System.Web.UI.WebControls.Repeater"/> in a light
   blue cell with bold font.</para>
			<codelink SampleID="Classic Repeater.AlternatingItemTemplate Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.SeparatorTemplate"/>
	</doc>
	<doc for="Repeater.FooterTemplate">
		<summary>
			<para>Gets or sets the <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how the footer section of the
<see cref="System.Web.UI.WebControls.Repeater"/> control is
   displayed. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how the footer section of the
<see cref="System.Web.UI.WebControls.Repeater"/> control is displayed. The
   default value is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para>Use this property to create a template that controls how the
      footer section of a <see cref="System.Web.UI.WebControls.Repeater"/>
      control is displayed.</para>
			<note type="caution">
      This control can be used to display user
      input, which might include malicious client script. Check any information that
      is sent from a client for executable script, SQL statements, or other code
      before displaying it in your application. ASP.NET provides an input request
      validation feature to block script and HTML in user input. Validation server
      controls are also provided to assess user input. For more information, see
   <see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para> The following example demonstrates how to
      use the <see cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/> to control the appearance of the
      footer for the <see cref="System.Web.UI.WebControls.Repeater"/> control. Notice that the <see cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>
      contains the table's end tag (<see langword="&lt;/table&gt;"/>).</para>
			<codelink SampleID="Classic Repeater.FooterTemplate Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.SeparatorTemplate"/>
	</doc>
	<doc for="Repeater.HeaderTemplate">
		<summary>
			<para> Gets or sets the <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how the header section of the
<see cref="System.Web.UI.WebControls.Repeater"/> control is displayed. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how the header section of the
<see cref="System.Web.UI.WebControls.Repeater"/> control is displayed.
   The default value is <see langword="null"/>. </para>
		</value>
		<remarks>
			<para>Use this property to create a template that controls how the
      header section of a <see cref="System.Web.UI.WebControls.Repeater"/> control is
      displayed.</para>
			<note type="caution">
      This control can be used to display user
      input, which might include malicious client script. Check any information that
      is sent from a client for executable script, SQL statements, or other code
      before displaying it in your application. ASP.NET provides an input request
      validation feature to block script and HTML in user input. Validation server
      controls are also provided to assess user input. For more information, see
   <see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/> to control the appearance of
   the header for the <see cref="System.Web.UI.WebControls.Repeater"/> control. Notice that the <see cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>
   contains the table's start tag (<see langword="&lt;table&gt;"/>).</para>
			<codelink SampleID="Classic Repeater.FooterTemplate Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.SeparatorTemplate"/>
	</doc>
	<doc for="Repeater.ItemTemplate">
		<summary>
			<para> Gets or sets the <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how items in the <see cref="System.Web.UI.WebControls.Repeater"/> control are displayed. </para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how items in the <see cref="System.Web.UI.WebControls.Repeater"/> control are displayed. The default value
   is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para> Use this property to create a template that
      controls how items in the <see cref="System.Web.UI.WebControls.Repeater"/> control
      are displayed. </para>
			<note type="caution">
      This control can be used to display user
      input, which might include malicious client script. Check any information that
      is sent from a client for executable script, SQL statements, or other code
      before displaying it in your application. ASP.NET provides an input request
      validation feature to block script and HTML in user input. Validation server
      controls are also provided to assess user input. For more information, see
   <see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example illustrates how to use a simple <see cref="System.Web.UI.WebControls.Repeater"/> control
   to display a table of items. Notice the use of the <see cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/> to display each item in the data
   source.</para>
			<codelink SampleID="Classic Repeater.ItemTemplate Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.SeparatorTemplate"/>
	</doc>
	<doc for="Repeater.SeparatorTemplate">
		<summary>
			<para> Gets or sets the <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how the
   separator between items are displayed.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.UI.ITemplate" qualify="true"/> that defines how the separator between items are displayed.
   The default value is <see langword="null"/>.</para>
		</value>
		<remarks>
			<para> Use this property to create a template that controls how the separator between items are
      displayed.</para>
			<note type="caution">
      This control can be used to display user
      input, which might include malicious client script. Check any information that
      is sent from a client for executable script, SQL statements, or other code
      before displaying it in your application. ASP.NET provides an input request
      validation feature to block script and HTML in user input. Validation server
      controls are also provided to assess user input. For more information, see
   <see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para> The following example demonstrates how to
      create a template to control how separators between items are displayed.</para>
			<codelink SampleID="Classic Repeater.SeparatorTemplate Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Repeater.HeaderTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.FooterTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.ItemTemplate"/>
		<seealso cref="System.Web.UI.WebControls.Repeater.AlternatingItemTemplate"/>
	</doc>
</docs>
