<docs>
	<doc for="PagedDataSource.EnumeratorOnICollection">
		<summary>
		</summary>
	</doc>
	<doc for="PagedDataSource.EnumeratorOnIList">
		<summary>
		</summary>
	</doc>
	<doc for="PagedDataSource.EnumeratorOnArray">
		<summary>
		</summary>
	</doc>
	<doc for="PagedDataSource.AllowCustomPaging">
		<summary>
			<para> Gets or sets a
      value indicating whether custom paging is enabled.</para>
		</summary>
		<value>
			<para><see langword="true "/> 
if custom paging is enabled;
otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging"/> property to specify whether custom 
   paging is enabled. For more information about custom paging, see <see cref="System.Web.UI.WebControls.DataGrid.AllowCustomPaging"/>.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataGrid.AllowCustomPaging"/>
	</doc><doc for="PagedDataSource.AllowPaging">
		<summary>
			<para> Gets or sets a value indicating whether paging is enabled.</para>
		</summary>
		<value>
			<para><see langword="true "/> 
if paging is enabled; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.AllowPaging"/> property to specify 
   whether custom paging is enabled. For more information about custom paging, see
<see cref="System.Web.UI.WebControls.DataGrid.AllowPaging"/>.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataGrid.AllowPaging"/>
	</doc><doc for="PagedDataSource.CurrentPageIndex">
		<summary>
			<para> Gets or sets the index of the current page.</para>
		</summary>
		<value>
			<para>The index of the current page.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex"/> property to specify or determine the 
   index of the current page.</para>
		</remarks>
	</doc><doc for="PagedDataSource.DataSource">
		<summary>
			<para> Gets or sets the data source.</para>
		</summary>
		<value>
			<para> A <see cref="System.Collections.IEnumerable" qualify="true"/> implemented object that 
   represents
   the data source.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/> property to specify or determine the 
   data source being paged.</para>
		</remarks>
		<seealso cref="System.Collections.IEnumerable" qualify="true"/>
	</doc><doc for="PagedDataSource.IsLastPage">
		<summary>
			<para>Gets a value indicating whether the current page is the last page.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the current page is the last
   page; otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.IsLastPage"/> property to determine whether the 
   current page is the last page.</para>
		</remarks>
	</doc><doc for="PagedDataSource.IsSynchronized">
		<summary>
			<para>Gets a value indicating whether access to the data source is
      synchronized (thread-safe).</para>
		</summary>
		<value>
			<para><see langword="false"/> for all cases.</para>
		</value>
		<remarks>
			<para>This property is derived from the <see cref="System.Collections.ICollection" qualify="true"/> class and is overridden to 
   always return <see langword="false"/> to indicate that this class is not thread
   safe.</para>
			<para>For more information on the <see cref="System.Web.UI.WebControls.PagedDataSource.IsSynchronized"/> 
property, see the <see cref="System.Collections.ICollection.IsSynchronized" qualify="true"/> property of the <see cref="System.Collections.ICollection" qualify="true"/> interface.</para>
		</remarks>
		<seealso cref="System.Collections.ICollection" qualify="true"/>
		<seealso cref="System.Collections.ICollection.IsSynchronized" qualify="true"/>
	</doc><doc for="PagedDataSource.GetEnumerator">
		<summary>
			<para>Returns a <see cref="System.Collections.IEnumerator" qualify="true"/> implemented object that contains all items in the data source.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Collections.IEnumerator" qualify="true"/> implemented object that contains
   all items in the data source.</para>
		</returns>
		<remarks>
			<para>Use this method to create a <see cref="System.Collections.IEnumerator" qualify="true"/> that can be iterated 
   through to get each item in the data source.</para>
			<para>Use the <see cref="System.Collections.IEnumerator.Current" qualify="true"/> property to get the item 
currently pointed to in the collection.</para>
			<para>Use the <see cref="System.Collections.IEnumerator.MoveNext" qualify="true"/> method to move to the next item 
in the collection.</para>
			<para>Use the <see cref="System.Collections.IEnumerator.Reset" qualify="true"/> method to move the enumerator 
back to the initial position.</para>
			<note type="note">
   After you create a <see cref="System.Collections.IEnumerator" qualify="true"/> object or use the <see cref="System.Collections.IEnumerator.Reset" qualify="true"/> method to move the enumerator to
   the first item in the collection, you must call the <see cref="System.Collections.IEnumerator.MoveNext" qualify="true"/> method. Otherwise, the item
   represented by the <see cref="System.Collections.IEnumerator.Current" qualify="true"/> property is undefined.
</note>
		</remarks>
		<seealso cref="System.Collections.IEnumerable"/>
		<seealso cref="System.Collections.IEnumerator.Reset" qualify="true"/>
		<seealso cref="System.Collections.IEnumerator.MoveNext" qualify="true"/>
		<seealso cref="System.Collections.IEnumerator.Current" qualify="true"/>
	</doc><doc for="PagedDataSource.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the data source is read-only.</para>
		</summary>
		<value>
			<para><see langword="false"/> for all cases.</para>
		</value>
		<remarks>
			<para>This property is implemented to always return <see langword="false"/>, which
   indicates that the data source can be modified in all cases.</para>
		</remarks>
	</doc><doc for="PagedDataSource.PageSize">
		<summary>
			<para>Gets or sets the number of items to display on a single page.</para>
		</summary>
		<value>
			<para>The number of items to display on a single page.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.PageSize"/> property to specify 
   or determine the number of items to display on a single page.</para>
		</remarks>
	</doc><doc for="PagedDataSource.DataSourceCount">
		<summary>
			<para> Gets the number of items in the data source.</para>
		</summary>
		<value>
			<para>The number of items in the data source.</para>
		</value>
		<exception cref="System.Web.HttpException">The data source is not an <see cref="System.Collections.ICollection" qualify="true"/> implemented object.</exception>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSourceCount"/> property to
   determine the number of items in the data source. If custom paging is used, the
   value of the <see cref="System.Web.UI.WebControls.PagedDataSource.VirtualCount"/> property is returned;
   otherwise, the total number of items in the data
   source is returned.</para>
			<note type="note">
   If the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/> property contains
<see langword="null"/>, <see langword="0 "/> is
   returned.
</note>
		</remarks>
	</doc><doc for="PagedDataSource.FirstIndexInPage">
		<summary>
			<para>Gets the first index in the page.</para>
		</summary>
		<value>
			<para>The first index in the page.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage"/> property to determine
   the index of the first item on the current page.</para>
			<note type="note">
   If the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property is set to <see langword="false"/> or the <see cref="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled"/> property is set to
<see langword="true"/>
or the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/> property contains <see langword="null"/>, <see langword="0"/> is returned.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/>
	</doc><doc for="PagedDataSource.PageCount">
		<summary>
			<para>Gets the total number of pages necessary to display all
      items in the data source.</para>
		</summary>
		<value>
			<para>The number of pages necessary to display all items in the data source.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.PageCount"/> property to determine
   the number of pages necessary to display all items in the data source. </para>
			<note type="note">
   
   If the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/> property is
<see langword="null"/>,
<see langword="0"/> is returned. If the
<see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property is set to 
<see langword="false"/> or the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSourceCount"/> property is set to 
<see langword="0"/>, <see langword="1"/> 
is returned.
</note>
		</remarks>
	</doc><doc for="PagedDataSource.IsFirstPage">
		<summary>
			<para>Gets a value indicating whether the current page
      is the first page.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the current page is the first
   page; otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.IsFirstPage"/> property to determine whether the
   current page is the first page.</para>
		</remarks>
	</doc><doc for="PagedDataSource.SyncRoot">
		<summary>
			<para> Gets the object that can be
      used to synchronize access to the collection.</para>
		</summary>
		<value>
			<para>An object that can be used to synchronize access to the collection.</para>
		</value>
		<remarks>
			<para>The object returned in this implementation is the <see cref="System.Web.UI.WebControls.PagedDataSource"/> object itself.</para>
			<para>For more information on the <see cref="System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot"/> property,
see the <see cref="System.Collections.ICollection.SyncRoot" qualify="true"/> property of the <see cref="System.Collections.ICollection" qualify="true"/> interface.</para>
		</remarks>
		<seealso cref="System.Object" qualify="true"/>
		<seealso cref="System.Collections.ICollection.SyncRoot" qualify="true"/>
		<seealso cref="System.Collections.ICollection" qualify="true"/>
	</doc><doc for="PagedDataSource.VirtualCount">
		<summary>
			<para>Gets or sets the virtual number of items in the data
      source when custom paging is used.</para>
		</summary>
		<value>
			<para>The virtual number of items in the data source when
      custom paging is used.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.VirtualCount"/> property when custom
   paging is used to determine the virtual number of items in the data source. For
   more information on the <see cref="System.Web.UI.WebControls.PagedDataSource.VirtualCount"/> property, see <see cref="System.Web.UI.WebControls.DataGrid.VirtualItemCount" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataGrid.VirtualItemCount"/>
	</doc><doc for="PagedDataSource.CopyTo">
		<summary>
			<para>Copies all the items from the data source to the
      specified <see cref="System.Array" qualify="true"/>, starting at the specified index in the <see cref="System.Array" qualify="true"/>.</para>
		</summary>
		<param name=" array">A zero-based <see cref="System.Array" qualify="true"/> that receives the copied items from the data source.</param>
		<param name=" index">The first position in the specified <see cref="System.Array" qualify="true"/> to receive the copied contents.</param>
		<remarks>
			<para>Use this method to copy the contents of the data source into the specified
   <see cref="System.Array" qualify="true"/>,
      starting at the specified index.</para>
			<note type="note">
      The <paramref name="array"/> parameter must be a
      zero-based <see cref="System.Array" qualify="true"/> object.
      
   </note>
		</remarks>
		<seealso cref="System.Array" qualify="true"/>
	</doc><doc for="PagedDataSource">
		<summary>
			<para>Encapsulates the properties of the <see cref="System.Web.UI.WebControls.DataGrid"/> control
   that allow
   it to perform paging. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.PagedDataSource"/> class encapsulates the properties of the <see cref="System.Web.UI.WebControls.DataGrid"/> control
   that allow the <see cref="System.Web.UI.WebControls.DataGrid"/>
   to perform paging. This class is primarily used by control developers.</para>
			<para>This class uses the best available interface to
   enumerate over the data belonging to the current page. If the underlying data
   source supports indexed access (like <see cref="System.Array" qualify="true"/> and <see cref="System.Collections.IList" qualify="true"/> ), this class
   uses it. Otherwise, it uses <see cref="System.Collections.IEnumerable" qualify="true"/>.</para>
			<para>For a list of initial
   property values for an instance of <see cref="System.Web.UI.WebControls.PagedDataSource"/>, see
   the <see cref="M:System.Web.UI.WebControls.PagedDataSource.#ctor"/> constructor.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
		<seealso cref="System.Collections.ICollection" qualify="true"/>
		<seealso cref="System.Array" qualify="true"/>
		<seealso cref="System.Collections.IList" qualify="true"/>
		<seealso cref="System.Collections.IEnumerable" qualify="true"/>
	</doc><doc for="PagedDataSource.PagedDataSource">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.PagedDataSource"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.PagedDataSource"/> class.</para>
			<para>The following table shows initial property values for an
   instance of <see cref="System.Web.UI.WebControls.PagedDataSource"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Initial Value</description>
				</listheader>
				<item>
					<term><see langword="PageSize"/></term>
					<description><see langword="10"/></description>
				</item>
				<item>
					<term><see langword="AllPaging"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see langword="CurrentPageIndex"/></term>
					<description><see langword="0"/></description>
				</item>
				<item>
					<term><see langword="AllCustomPaging"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see langword="VirtualCount"/></term>
					<description><see langword="0"/></description>
				</item>
			</list>
		</remarks>
	</doc><doc for="PagedDataSource.Count">
		<summary>
			<para> Gets
      the number of items to
      be used from the data source.</para>
		</summary>
		<value>
			<para>The number of items to be used from the
      data source.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.Count"/> property to determine
   the number of items to be used from the data source. The value returned depends
   on whether paging is enabled and whether custom paging is used: </para>
			<list type="bullet"><item>
					<term>
      
      If paging is disabled (by setting the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property to
   <see langword="false"/>), the value of the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSourceCount"/> property is 
      returned.</term>
				</item>
				<item>
					<term>
      
      If paging is enabled (by setting the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property to
   <see langword="true"/>) and custom paging is enabled (by setting the <see cref="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled"/> property set to
   <see langword="true"/>), the value of the <see cref="System.Web.UI.WebControls.PagedDataSource.PageSize"/> property is 
      returned.</term>
				</item>
				<item>
					<term>
      
      If paging is enabled (by setting the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property to
   <see langword="true"/>) and the <see cref="System.Web.UI.WebControls.PagedDataSource.IsLastPage"/> 
   property is set to <see langword="false"/>, the value of the <see cref="System.Web.UI.WebControls.PagedDataSource.PageSize"/> property is
   returned.</term>
				</item>
				<item>
					<term>
      
      If paging is enabled (by setting the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property to
   <see langword="true"/>), custom paging is disabled
      
      (by setting the <see cref="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled"/>
      property <see langword="false"/>), and the <see cref="System.Web.UI.WebControls.PagedDataSource.IsLastPage"/> property is set to
   <see langword="true"/>, the value of the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSourceCount"/>
   property is subtracted from the value of the <see cref="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage"/> property before it
   is returned.</term>
				</item>
			</list>
			<note type="note">
   If the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/> property contains <see langword="null"/>, <see langword="0"/> is returned.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.DataSourceCount"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.IsLastPage"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.PageSize"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/>
	</doc><doc for="PagedDataSource.IsCustomPagingEnabled">
		<summary>
			<para>Gets a value indicating whether custom
      paging is enabled.</para>
		</summary>
		<value>
			<para><see langword="true "/>if custom paging is enabled;
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled"/> property to determine
   whether custom paging is enabled.</para>
			<note type="note">
   
   Both the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> and <see cref="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging"/> properties must be
<see langword="true"/> for this property to return 
<see langword="true"/>.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging"/>
	</doc><doc for="PagedDataSource.IsPagingEnabled">
		<summary>
			<para>Gets a value indicating whether paging is enabled.</para>
		</summary>
		<value>
			<para><see langword="true"/> if paging is
   enabled; otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled"/> property to determine
   whether paging is enabled.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.PagedDataSource.AllowPaging"/> property must be
<see langword="true"/> and the <see cref="System.Web.UI.WebControls.PagedDataSource.PageSize"/> property cannot 
   be set to <see langword="0"/> for
   this property to return <see langword="true"/>.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.AllowPaging"/>
		<seealso cref="System.Web.UI.WebControls.PagedDataSource.PageSize"/>
	</doc><doc for="PagedDataSource.GetItemProperties">
		<summary>
			<para>Returns the <see cref="System.ComponentModel.PropertyDescriptorCollection" qualify="true"/>
that represents the properties on each item used to bind data.</para>
		</summary>
		<param name="listAccessors">An array of <see cref="System.ComponentModel.PropertyDescriptor" qualify="true"/> objects, which contains the list name returned. This can be <see langword="null"/>.</param>
		<returns>
			<para> The <see cref="System.ComponentModel.PropertyDescriptorCollection" qualify="true"/> that
   represents the properties on each item used to bind data.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.PagedDataSource.GetItemProperties"/> method to create a
<see cref="System.ComponentModel.PropertyDescriptorCollection" qualify="true"/> 
that represents the properties on each item used to bind data. If the <see cref="System.Web.UI.WebControls.PagedDataSource.DataSource"/> property is <see langword="null"/> or is not a <see cref="System.ComponentModel.ITypedList" qualify="true"/>
implemented object, <see langword="null"/>
is returned. For more information
on the <see cref="System.Web.UI.WebControls.PagedDataSource.GetItemProperties"/> method, see <see cref="System.ComponentModel.ITypedList.GetItemProperties" qualify="true"/>.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ITypedList" qualify="true"/>
		<seealso cref="System.ComponentModel.PropertyDescriptorCollection" qualify="true"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor" qualify="true"/>
		<seealso cref="System.ComponentModel.ITypedList.GetItemProperties" qualify="true"/>
	</doc>
	<doc for="PagedDataSource.GetListName">
		<summary>
			<para>Returns the name of the list. This method does not apply to this class.</para>
		</summary>
		<param name="listAccessors">An array of <see cref="System.ComponentModel.PropertyDescriptor" qualify="true"/> objects, that contains the list name returned. This can be <see langword="null"/>.</param>
		<returns>
			<para><see cref="System.String.Empty" qualify="true"/> for all cases.</para>
		</returns>
		<remarks>
			<para>This method is inherited from <see cref="System.ComponentModel.ITypedList" qualify="true"/> and is not applicable to this class. It
   has been implemented to return
<see cref="System.String.Empty" qualify="true"/> for all cases.</para>
		</remarks>
		<seealso cref="System.ComponentModel.ITypedList"/>
		<seealso cref="System.ComponentModel.PropertyDescriptor" qualify="true"/>
		<seealso cref="System.ComponentModel.ITypedList.GetListName"/>
	</doc>
</docs>
