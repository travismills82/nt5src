<docs>
	<doc for="DataBoundLiteralControl.Render">
		<summary>
			<para>Writes the content of the <see cref="System.Web.UI.DataBoundLiteralControl"/> object to an output stream.</para>
		</summary>
		<param name="output">The output stream that renders HTML content to the client.</param>
	</doc><doc for="DataBoundLiteralControl.DataBoundLiteralControl">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="LiteralControl.LiteralControl">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.UI.LiteralControl"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.LiteralControl"/> class that contains a literal string to be rendered on the requested ASP.NET page.</para>
		</summary>
	</doc><doc for="LiteralControl.LiteralControl1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.LiteralControl"/> class with
   the specified text.</para>
		</summary>
		<param name="text">The text to be rendered on the requested Web page.</param>
		<seealso cref="System.Web.UI.LiteralControl.Text" qualify="true"/>
	</doc><doc for="LiteralControl.CreateControlCollection">
		<summary>
			<para>Creates an <see cref="System.Web.UI.EmptyControlCollection"/> object for the current instance of the <see cref="System.Web.UI.LiteralControl"/> .</para>
		</summary>
		<returns>
			<para>The <see langword="EmptyControlCollection"/> object for
   the current control.</para>
		</returns>
		<remarks>
			<para>By default, <see langword="LiteralControl"/> objects contain only text and no 
   child server controls. If you want to change this behavior, you must override
   this method.</para>
		</remarks>
		<seealso cref="System.Web.UI.Control.CreateControlCollection" qualify="true"/>
		<seealso cref="System.Web.UI.EmptyControlCollection"/>
	</doc><doc for="LiteralControl.Text">
		<summary>
			<para>Gets or sets the text content of the <see cref="System.Web.UI.LiteralControl"/> object.</para>
		</summary>
		<value>
			<para>A <see cref="System.String" qualify="true"/> that represents
   the text content of the literal control. The default is <see cref="System.String.Empty" qualify="true"/>
   .</para>
		</value>
	</doc><doc for="LiteralControl.Render">
		<summary>
			<para>Writes the content of the <see cref="System.Web.UI.LiteralControl"/>
object to the ASP.NET page.</para>
		</summary>
		<param name="output">An <see cref="System.Web.UI.HtmlTextWriter"/> object that renders the content of the <see langword="LiteralControl"/> object to the requesting client. </param>
		<remarks>
			<para>When you create a custom server control and want to render specific HTML or
      text to a client, you can improve the performance of the control by passing the
      value of the <see cref="System.Web.UI.LiteralControl.Text" qualify="true"/> property to the <see cref="System.Web.UI.Control.Render" qualify="true"/> method rather than calling the
   <see langword="LiteralControl.Render"/>
   method.</para>
		</remarks>
		<seealso cref="System.Web.UI.HtmlTextWriter"/>
		<keyword term="writing text strings to a Web Forms page"/>
		<keyword term="Web Forms, writing text to a page"/>
	</doc><doc for="LiteralControl">
		<summary>
			<para> Represents HTML elements, text, and any other strings in 
 an ASP.NET page that do not require
 processing on the
 server. </para>
		</summary>
		<remarks>
			<para>ASP.NET compiles all HTML elements and readable text
 that do not require server-side processing into instances of this class. For
 example, an HTML element that does not contain a <see langword="runat=&quot;server&quot;"/>
 attribute/value pair in its opening tag is compiled into a <see langword="LiteralControl"/>
 object. </para>
			<para>Literal controls behave as text holders, meaning that you
 can extract text from the literal control and remove the literal control from the
 parent server control's <see cref="System.Web.UI.ControlCollection"/> through the parent's <see cref="System.Web.UI.Control.Controls"/> property.
 Therefore, when you
 develop a custom control derived from
 the <see langword="LiteralControl"/> class, make sure your control
 performs any required
 preprocessing steps itself, rather than using a call
 to the <see cref="System.Web.UI.LiteralControl.Render" qualify="true"/>
 method call to accomplish them. Typically you would do this
 to improve the response time of your Web
 application. </para>
			<para>You can add or remove literal controls from a page or
 server control programmatically using the <see cref="System.Web.UI.ControlCollection.Add" qualify="true"/>
 or <see cref="System.Web.UI.ControlCollection.Remove" qualify="true"/> method,
 respectively. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the
 overloaded <see langword="LiteralControl"/> constructor when overriding
 the <see cref="System.Web.UI.Control.CreateChildControls" qualify="true"/> method. The code adds two new
 <see langword="LiteralControl"/> objects and a <see cref="System.Web.UI.WebControls.TextBox"/> Web server control to the current
 server control's <see cref="System.Web.UI.Control.Controls" qualify="true"/> property.</para>
			<codelink SampleID="SystemWebUILiteralControl" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.Control"/>
		<keyword term="Web Forms, literal content in"/>
		<keyword term="literal content in Web Forms"/>
		<keyword term="Web Forms, text not processed on the server"/>
		<keyword term="text strings in Web Forms"/>
	</doc><doc for="DataBoundLiteralControl.SetStaticString">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataBoundLiteralControl.SetDataBoundString">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataBoundLiteralControl.LoadViewState">
		<summary>
		</summary>
		<param name="savedState">The previously saved view state.</param>
	</doc><doc for="DataBoundLiteralControl.SaveViewState">
	</doc><doc for="DesignerDataBoundLiteralControl.DesignerDataBoundLiteralControl"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DesignerDataBoundLiteralControl.CreateControlCollection"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DesignerDataBoundLiteralControl.LoadViewState"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DesignerDataBoundLiteralControl.Render"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DesignerDataBoundLiteralControl.SaveViewState">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataBoundLiteralControl.Text">
		<summary>
			<para> Gets the text content of the <see cref="System.Web.UI.DataBoundLiteralControl"/> object. This is
 a read-only property.</para>
		</summary>
		<value>
			<para>A <see cref="System.String" qualify="true"/> that represents
 the text content of the <see cref="System.Web.UI.DataBoundLiteralControl"/> object.</para>
		</value>
		<example>
			<para>The following example creates a user control that takes the text of the
 <see cref="System.Web.UI.DataBoundLiteralControl"/> object and displays it
 on the Web page. The following is the command line used to build the executable. </para>
			<para lang="VB"><c> vbc /r:System.dll /r:System.Web.dll /t:library /out:myWebAppPath/bin/vb_myDataBoundLiteralControl.dll myDataBoundLiteralControl.vb</c>
			</para>
			<para lang="C#"><c>csc /t:library /out:myWebAppPath/bin/cs_myDataBoundLiteralControl.dll myDataBoundLiteralControl.cs</c>
			</para>
			<codelink SampleID="SystemWebUI_DataBoundLiteralControl" SnippetID="1"/>
			<para> The following example uses the previous
 custom control. Notice, the values shown in the <see langword="Register "/>directive reflect the previous command line.
 </para>
			<code lang="VB">&lt;%@ Register TagPrefix="MyControlSample" Namespace="MyUserControl" Assembly="vb_myDataBoundLiteralControl" %&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;script language="VB" runat="server"&gt;
 Sub Page_Load(Sender As Object, e As EventArgs) 
 Page.DataBind()
 End Sub
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;h3&gt;
 DataBoundLiteralControl Example
 &lt;/h3&gt;
 &lt;form method="post" runat="server" ID="Form1"&gt;
 &lt;asp:Label id="Label1" Text="This is a string retrieved from 'DataBoundLiteralControl'" Runat="server" Visible="False"&gt;&lt;/asp:Label&gt;
 &lt;MyControlSample:MyControlVB id="MyControl" runat="server"&gt;
 &lt;%# Label1.Text %&gt;
 &lt;/MyControlSample:MyControlVB&gt;
 &lt;/form&gt;
 &lt;/body&gt;
&lt;/html&gt;
</code>
			<code lang="C#">&lt;%@ Register TagPrefix="MyControlSample" Namespace="MyUserControl" Assembly="cs_myDataBoundLiteralControl" %&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;script language="C#" runat="server"&gt;
 void Page_Load(Object Sender, EventArgs e)
 {
 Page.DataBind();
 }
 &lt;/script&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;h3&gt;
 DataBoundLiteralControl Example
 &lt;/h3&gt;
 &lt;form method="post" runat="server" ID="Form1"&gt;
 &lt;asp:Label id="Label1" Text="This is a string retrieved from 'DataBoundLiteralControl'" Runat="server" Visible="False"&gt;&lt;/asp:Label&gt;
 &lt;MyControlSample:MyControl id="MyControl" runat="server"&gt;
 &lt;%# Label1.Text %&gt;
 &lt;/MyControlSample:MyControl&gt;
 &lt;/form&gt;
 &lt;/body&gt;
&lt;/html&gt;
</code>
		</example>
	</doc><doc for="DataBoundLiteralControl.CreateControlCollection">
		<summary>
			<para>Creates an <see cref="System.Web.UI.EmptyControlCollection"/> object for the current instance
 of the <see cref="System.Web.UI.DataBoundLiteralControl"/> .</para>
		</summary>
		<returns>
			<para>The <see langword="EmptyControlCollection"/> object
 for an instance of <see langword="DataBoundLiteralControl"/> class.</para>
		</returns>
	</doc><doc for="DesignerDataBoundLiteralControl.Text">
		<summary>
			<para>Gets or sets the text content of the <see cref="System.Web.UI.DataBoundLiteralControl"/>.</para>
		</summary>
		<value>
			<para> The text that appears in the &lt;%# … %&gt;
      data-binding expression.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.UI.DesignerDataBoundLiteralControl.Text"/> property is used by
   the designer to specify or determine the text that appears in the &lt;%# …
   %&gt; data-binding expression.</para>
			<note type="note">
   
   If you attempt to set this property to <see langword="null"/>, it will
   automatically be set to an empty string ("") instead.
</note>
		</remarks>
		<seealso cref="System.Web.UI.DataBoundLiteralControl"/>
	</doc>
	<doc for="DesignerDataBoundLiteralControl">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataBoundLiteralControl">
		<summary>
			<para>Creates a control for HTML text to allow the handling of &lt;%# … %&gt; data-binding expressions that
      are processed by the server. It persists the value of its <see cref="System.Web.UI.DataBoundLiteralControl.Text"/>
      property to view state. This class cannot be inherited. </para>
		</summary>
		<remarks>
			<para>This class allows the &lt;%# ... %&gt; data binding syntax to be
      implemented.</para>
		</remarks>
		<example>
			<codelink SampleID="SystemWebUI_DataBoundLiteralControl" SnippetID="1"/>
		</example>
	</doc>
</docs>
