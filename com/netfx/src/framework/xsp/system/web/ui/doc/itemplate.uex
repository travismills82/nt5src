<docs>
	<doc for="ITemplate">
		<summary>
			<para> Defines the method to implement for populating an ASP.NET server control with child controls when using a control
      with inline templates when declared in an .aspx file.</para>
		</summary>
		<remarks>
			<para>This interface is used by custom server controls, but never implemented by
      them. ASP.NET always implements it. </para>
		</remarks>
		<example>
			<para>The following example demonstrates a simple templated server control that uses the
   <see langword="ITemplate"/>
   interface to create a templated property.</para>
			<codelink SampleID="Classic ITemplate Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.Control"/>
		<keyword term="ASP.NET server controls, templates"/>
		<keyword term="server controls, templates"/>
		<keyword term="templates, ASP.NET server controls"/>
	</doc>
	<doc for="ITemplate.InstantiateIn">
		<summary>
			<para>When implemented by a class, defines the <see cref="System.Web.UI.Control"/> object that child
   controls and templates belong to. These child controls
   are in turn defined within an inline template.</para>
		</summary>
		<param name="container">The <see langword="Control"/> object to contain the instantiated controls from the inline template.</param>
		<remarks>
			<para>When developing templated server controls you do not need to implement this
      method, the .NET Framework provides the implementation for you.</para>
		</remarks>
		<example>
			<codelink SampleID="ITemplate_Interface" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.Control"/>
		<seealso cref="System.Web.UI.ControlCollection"/>
		<keyword term="ASP.NET server controls, templates"/>
		<keyword term="server controls, templates"/>
		<keyword term="templates, ASP.NET server controls"/>
	</doc>
</docs>
