<docs>
	<doc for="DataKeyCollection.DataKeyCollection">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.DataKeyCollection"/> class.</para>
		</summary>
		<param name="keys">A <see cref="System.Collections.ArrayList" qualify="true"/> that contains key fields from the data source.</param>
		<remarks>
			<para>Use this constructor to create and initialize a new 
      instance of the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>class.</para>
		</remarks>
	</doc><doc for="DataKeyCollection.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether items in the <see cref="System.Web.UI.WebControls.DataKeyCollection"/> 
can be modified.</para>
		</summary>
		<value>
			<para><see langword="false"/> for all cases.</para>
		</value>
		<remarks>
			<para>This property always returns <see langword="false"/> to 
   indicate that the <see cref="System.Web.UI.WebControls.DataKeyCollection"/> can be written to in all cases.</para>
		</remarks>
	</doc><doc for="DataKeyCollection.SyncRoot">
		<summary>
			<para>Gets the object used to synchronize access to the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>.</para>
		</summary>
		<value>
			<para>A <see cref="System.Object" qualify="true"/> that can be used to synchronize access to the collection.</para>
		</value>
		<remarks>
			<para>The object returned in this implementation is the <see cref="System.Web.UI.WebControls.DataKeyCollection"/> object itself.</para>
			<para>For more information on the <see cref="System.Web.UI.WebControls.DataKeyCollection.SyncRoot"/> property, see the 
<see cref="System.Collections.ICollection.SyncRoot" qualify="true"/> property of the <see cref="System.Collections.ICollection" qualify="true"/> interface.</para>
		</remarks>
		<seealso cref="System.Object" qualify="true"/>
		<seealso cref="System.Collections.ICollection.SyncRoot" qualify="true"/>
		<seealso cref="System.Collections.ICollection" qualify="true"/>
	</doc><doc for="DataKeyCollection.GetEnumerator">
		<summary>
			<para>Creates a <see cref="System.Collections.IEnumerator" qualify="true"/> implemented object that contains all 
   key fields in the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>.</para>
		</summary>
		<returns>
			<para> A <see cref="System.Collections.IEnumerator" qualify="true"/> implemented object that contains all 
   key fields in the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>.</para>
		</returns>
		<remarks>
			<para>Use this method to create a <see cref="System.Collections.IEnumerator" qualify="true"/> implemented object that can be
   iterated through to get each item in the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>.</para>
			<para>Use the <see cref="System.Collections.IEnumerator.Current" qualify="true"/> property to get the item
currently pointed to in the collection.</para>
			<para>Use the <see cref="System.Collections.IEnumerator.MoveNext" qualify="true"/> method to move to the next item
in the collection.</para>
			<para>Use the <see cref="System.Collections.IEnumerator.Reset" qualify="true"/> method to move the
enumerator to its initial position.</para>
			<note type="note">
   After you
   create a <see cref="System.Collections.IEnumerator" qualify="true"/> implemented object or use the <see cref="System.Collections.IEnumerator.Reset" qualify="true"/> method to move the enumerator to
   the first item in the collection, you must call the <see cref="System.Collections.IEnumerator.MoveNext" qualify="true"/>
   method. Otherwise, the item represented by the <see cref="System.Collections.IEnumerator.Current" qualify="true"/> property is undefined.
</note>
		</remarks>
		<seealso cref="System.Collections.IEnumerator" qualify="true"/>
		<seealso cref="System.Collections.IEnumerator.Current" qualify="true"/>
		<seealso cref="System.Collections.IEnumerator.MoveNext" qualify="true"/>
		<seealso cref="System.Collections.IEnumerator.Reset" qualify="true"/>
	</doc><doc for="DataKeyCollection.Count">
		<summary>
			<para> Gets the number of items in the collection.</para>
		</summary>
		<value>
			<para> The number of items in the collection.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.DataKeyCollection.Count"/> 
property to determine the number of items in the collection. This property
is commonly used when iterating through the collection to determine the upper
bound.</para>
		</remarks>
	</doc><doc for="DataKeyCollection.IsSynchronized">
		<summary>
			<para> Gets a value indicating whether the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>
is synchronized (thread-safe).</para>
		</summary>
		<value>
			<para><see langword="false"/> for all cases.</para>
		</value>
		<remarks>
			<para>This property is derived from the <see cref="System.Collections.ICollection" qualify="true"/> interface and is overridden to always
   return <see langword="false"/> to indicate that the
<see cref="System.Web.UI.WebControls.DataKeyCollection"/> is not thread-safe.</para>
			<para>For more information on the <see cref="System.Web.UI.WebControls.DataKeyCollection.IsSynchronized"/> property, see the <see cref="System.Collections.ICollection.IsSynchronized" qualify="true"/>
property of the <see cref="System.Collections.ICollection" qualify="true"/> interface.</para>
		</remarks>
		<seealso cref="System.Collections.ICollection.IsSynchronized" qualify="true"/>
		<seealso cref="System.Collections.ICollection" qualify="true"/>
	</doc><doc for="DataKeyCollection.CopyTo">
		<summary>
			<para>Copies all the items from the <see cref="System.Web.UI.WebControls.DataKeyCollection"/> to the specified <see cref="System.Array" qualify="true"/> object,
   starting at the specified index in the <see cref="System.Array" qualify="true"/> object.</para>
		</summary>
		<param name="array">A zero-based <see cref="System.Array" qualify="true"/> object that receives the copied items from the <see cref="System.Web.UI.WebControls.DataKeyCollection"/>.</param>
		<param name=" index">The first position in the specified <see cref="System.Array" qualify="true"/> object to receive the copied contents.</param>
		<remarks>
			<para>Use this method to copy the contents of the <see cref="System.Web.UI.WebControls.DataKeyCollection"/> into the specified <see cref="System.Array" qualify="true"/> object,
   starting at the specified index.</para>
			<note type="note">
   The <paramref name="array"/> parameter must be a
   zero-based <see cref="System.Array" qualify="true"/> object.
</note>
		</remarks>
		<seealso cref="System.Array" qualify="true"/>
	</doc><doc for="DataKeyCollection">
		<summary>
			<para>Represents a collection that contains the key field of each record in a data source. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.DataKeyCollection"/> class represents a collection
   of the key fields in the data source. The key field of each record in the
   data source is stored in this collection. This allows you to store the key field
   with a data listing control without displaying it in the control. This collection is
   automatically filled with the values from the field specified by the <see cref="System.Web.UI.WebControls.BaseDataList.DataKeyField" qualify="true"/> property. This
   collection does not allow you to manually add or remove items from the
   collection.</para>
			<para>The key field is commonly used in a handler for an event, such as
<see langword="ItemCommand"/> or <see langword="DeleteCommand"/>, as part of an 
   update query string to revise a specific record in the data source. The key
   field helps the update query string identify the appropriate record to
   modify.</para>
			<para>Use the <see cref="System.Web.UI.WebControls.DataKeyCollection.Count"/> property to
determine the number of items in the collection. To programmatically retrieve a
key field from a <see cref="System.Web.UI.WebControls.DataKeyCollection"/>, use one of following
methods:</para>
			<list type="bullet"><item>
					<term>
      
      Use the indexer to get a single key field from the
      collection, using array notation.</term>
				</item>
				<item>
					<term>
      
      Use the <see cref="System.Web.UI.WebControls.DataKeyCollection.CopyTo"/> method to
      copy the contents of the collection to a <see cref="System.Array" qualify="true"/> object, which can then be used to get items from the
      collection.</term>
				</item>
				<item>
					<term>
      
      Use the <see cref="System.Web.UI.WebControls.DataKeyCollection.GetEnumerator"/> method to
      create a <see cref="System.Collections.IEnumerator" qualify="true"/> implemented
      object, which can then be used to get
      items from the collection.</term>
				</item>
			</list>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListDataKeys" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.BaseDataList"/>
		<seealso cref="System.Web.UI.WebControls.BaseDataList.DataKeyField" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.DataKeyCollection.Count"/>
		<seealso cref="System.Web.UI.WebControls.DataKeyCollection.CopyTo"/>
		<seealso cref="System.Array" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.DataKeyCollection.GetEnumerator"/>
		<seealso cref="System.Collections.IEnumerator" qualify="true"/>
	</doc>
	<doc for="DataKeyCollection.this">
		<summary>
			<para> Gets the key field at the specified index in the collection.</para>
		</summary>
		<param name="index">The zero-based index of the key field to retrieve from the collection.</param>
		<value>
			<para> The key field at the specified index in
      the collection.</para>
		</value>
		<remarks>
			<para>Use this indexer to get the key field from the
   <see cref="System.Web.UI.WebControls.DataKeyCollection"/> at the specified index, using array
      notation.</para>
		</remarks>
		<example>
			<codelink SampleID="BaseDataListDataKeys" SnippetID="1"/>
		</example>
	</doc>
</docs>
