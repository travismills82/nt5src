<docs>
	<doc for="Button.AddAttributesToRender">
		<internalonly/>
		<summary>
			<para>Adds the attributes of the <see cref="System.Web.UI.WebControls.Button"/> control to the output stream for rendering
    on the client.</para>
		</summary>
		<param name="writer">An <see cref="System.Web.UI.HtmlTextWriter" qualify="true"/> that contains the output stream to render on the client.</param>
	</doc>
	<doc for="Button.LoadPostData">
		<internalonly/>
		<summary>
			<para>Processes posted data for the <see cref="System.Web.UI.WebControls.Button"/> 
 control.</para>
		</summary>
		<param name="postDataKey">The key value used to index an entry in the collection.</param>
		<param name="postCollection">A <see cref="System.Collections.NameValueCollection" qualify="true"/> that contains post information.</param>
		<returns>
			<para>Returns <see langword="false"/> for all cases.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.Button"/> will examine the posted data to 
    determine if the user clicked this button to instigate the postback. If that is
    the case, the <see cref="System.Web.UI.WebControls.Button"/> will register with the Page that it
    wants to raise an event during the event processing phase.</para>
		</remarks>
	</doc>
	<doc for="Button.IPostBackEventHandler.RaisePostBackEvent">
		<internalonly/>
		<summary>
			<para>Raises events for the <see cref="System.Web.UI.WebControls.Button"/> 
 control on post back.</para>
		</summary>
		<param name="eventArgument">The argument for the event.</param>
		<remarks>
			<para>
				<see cref="System.Web.UI.WebControls.Button"/> 
 fires a <see cref="System.Web.UI.WebControls.Button.Click"/> event and a <see cref="System.Web.UI.WebControls.Button.Command"/> event if <see cref="System.Web.UI.WebControls.Button.Command"/> is
 defined.</para>
		</remarks>
	</doc>
	<doc for="Button.RenderContents">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="Button.Text">
		<summary>
			<para>Gets or sets the text caption displayed in the <see cref="System.Web.UI.WebControls.Button"/> control.</para>
		</summary>
		<value>
			<para>The text caption displayed in the <see cref="System.Web.UI.WebControls.Button"/> control. The default value is
<see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Button.Text"/> property to specify or determine the caption to display in the <see cref="System.Web.UI.WebControls.Button"/>
control.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Button.Text"/>
property to specify the caption displayed in the <see cref="System.Web.UI.WebControls.Button"/> control.</para>
			<codelink SampleID="Classic Button.Click Example" SnippetID="1"/>
		</example>
		<seealso cref="System.String.Empty" qualify="true"/>
	</doc><doc for="Button.EventCommand">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for the
<see cref="System.Web.UI.WebControls.Button.Command"/> 
event of the <see cref="System.Web.UI.WebControls.Button"/>
control. This field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.Button.EventClick"/>
	</doc><doc for="Button.EventClick">
		<summary>
			<para>Represents the index in a <see cref="System.ComponentModel.EventHandlerList" qualify="true"/> for
   the <see cref="System.Web.UI.WebControls.Button.Click"/>
   event of the <see cref="System.Web.UI.WebControls.Button"/> control.
   This field is
   read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.Button.EventCommand"/>
	</doc><doc for="Button.CausesValidation">
		<summary>
			<para>Gets or sets a value indicating whether validation is
      performed when the <see cref="System.Web.UI.WebControls.Button"/> control is clicked.</para>
		</summary>
		<value>
			<para><see langword="true"/> if validation
   is performed when the <see cref="System.Web.UI.WebControls.Button"/>
   control is clicked; otherwise, <see langword="false"/>. The default value is
<see langword="true"/>.</para>
		</value>
		<remarks>
			<para>By default, page validation is performed when
      a <see cref="System.Web.UI.WebControls.Button"/> control is clicked. Page
      validation determines whether the input controls associated with a validation control
      on the page all pass the validation rules specified by the validation
      control. </para>
			<para> You can specify or determine whether validation
      is performed
      on both the client and the server when a <see cref="System.Web.UI.WebControls.Button"/> control is clicked by using the <see cref="System.Web.UI.WebControls.Button.CausesValidation"/>
      property. To prevent validation from being performed, set the
   <see cref="System.Web.UI.WebControls.Button.CausesValidation"/>
   property to <see langword="false"/>. </para>
			<para>This property is commonly set to <see langword="false"/> for a
<see langword="reset"/> or <see langword="clear"/> button to prevent 
validation from being performed when the button is clicked.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Button.CausesValidation"/> property to prevent page 
   validation from occurring. Notice how the <see cref="System.Web.UI.WebControls.BaseValidator.Validate"/> method
   activates each validation control independently.</para>
			<codelink SampleID="ButtonControlCausesValidation" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.Page.Validate" qualify="true"/>
	</doc>
	<doc for="Button.CommandName">
		<summary>
			<para>Gets or sets the command name associated with the <see cref="System.Web.UI.WebControls.Button"/> control that
   is passed to the <see cref="System.Web.UI.WebControls.Button.Command"/>
   event.</para>
		</summary>
		<value>
			<para>The command name of the <see cref="System.Web.UI.WebControls.Button"/> control. The
   default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>When you have multiple <see cref="System.Web.UI.WebControls.Button"/> controls on a Web
   page, use the <see cref="System.Web.UI.WebControls.Button.CommandName"/>
   property to specify or determine the command name associated with each <see cref="System.Web.UI.WebControls.Button"/>
   control. You can set the <see cref="System.Web.UI.WebControls.Button.CommandName"/>
   property with any string that identifies the command to perform. You can
   then programmatically determine the command name of the <see cref="System.Web.UI.WebControls.Button"/>
   control and perform the appropriate actions.</para>
			<para>Additional information about the command, such as
<see langword="Ascending"/>, may be specified by using the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Button.CommandName"/>
property to create a <see cref="System.Web.UI.WebControls.Button"/> control that sorts a list.</para>
			<codelink SampleID="ButtonCommandNameArgument" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.Command"/>
		<seealso cref="System.Web.UI.WebControls.Button.OnCommand"/>
		<seealso cref="System.Web.UI.WebControls.Button.CommandArgument"/>
	</doc>
	<doc for="Button.CommandArgument">
		<summary>
			<para> Gets or sets an optional parameter passed to the <see cref="System.Web.UI.WebControls.Button.Command"/>
event along with the associated <see cref="System.Web.UI.WebControls.Button.CommandName"/>.</para>
		</summary>
		<value>
			<para>An optional parameter passed to the <see cref="System.Web.UI.WebControls.Button.Command"/>
event along with the associated <see cref="System.Web.UI.WebControls.Button.CommandName"/>. The default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para> Use the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property to specify an parameter that
   compliments the <see cref="System.Web.UI.WebControls.Button.CommandName"/>
   property.</para>
			<note type="note">
   
   Although you can set
   the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/>
   property by itself, it is normally only used when the
<see cref="System.Web.UI.WebControls.Button.CommandName"/> property is also set.
</note>
			<para> The <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property
complements the <see cref="System.Web.UI.WebControls.Button.CommandName"/>
property by allowing you to
provide additional information about the command to perform. For example, if you set the
<see cref="System.Web.UI.WebControls.Button.CommandName"/> property to 
<see langword="Sort"/> and the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property to 
<see langword="Ascending"/>, you specify a command to sort in 
ascending order.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property to create a <see cref="System.Web.UI.WebControls.Button"/> control that sorts a list in
   ascending order.</para>
			<codelink SampleID="ButtonCommandNameArgument" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.Command"/>
		<seealso cref="System.Web.UI.WebControls.Button.OnCommand"/>
		<seealso cref="System.Web.UI.WebControls.Button.CommandName"/>
	</doc>
	<doc for="Button.Button">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.Button"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the
   <see cref="System.Web.UI.WebControls.Button"/> class.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create and
      initialize a new instance of the <see cref="System.Web.UI.WebControls.Button"/>class.</para>
			<codelink SampleID="ButtonCtor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Button.Click">
		<summary>
			<para>Occurs when the <see cref="System.Web.UI.WebControls.Button"/> control is clicked.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.Button.Click"/> event is raised when
   the <see cref="System.Web.UI.WebControls.Button"/> control
   is clicked. This event is commonly used when no command name is associated with
   the <see cref="System.Web.UI.WebControls.Button"/> control
   (for instance, with a <see langword="submit"/>
   button).</para>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code an event handler for the <see cref="System.Web.UI.WebControls.Button.Click"/> event in order to display
      a message on the Web page when the <see cref="System.Web.UI.WebControls.Button"/> control
      is clicked.</para>
			<codelink SampleID="Classic Button.Click Example" SnippetID="1"/>
			<codelink SampleID="ButtonClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.OnClick"/>
		<seealso cref="System.Web.UI.WebControls.CommandEventHandler"/>
	</doc>
	<doc for="Button.OnClick">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.Button.Click"/> event of the <see cref="System.Web.UI.WebControls.Button"/> control.</para>
		</summary>
		<param name="e">A <see cref="System.EventArgs" qualify="true"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.Button.Click"/> event is raised when the
<see cref="System.Web.UI.WebControls.Button"/> control 
   is clicked. This event is commonly used when no command name is associated with
   the <see cref="System.Web.UI.WebControls.Button"/> control
   (for instance, with a <see langword="submit"/> button).</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.Button.OnClick"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.Button.OnClick"/> in a derived class, be sure to 
   call the base class's <see cref="System.Web.UI.WebControls.Button.OnClick"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code an event handler for the <see cref="System.Web.UI.WebControls.Button.Click"/> event in order to display a
      simple message on the Web page.</para>
			<codelink SampleID="Classic Button.Click Example" SnippetID="1"/>
			<codelink SampleID="ButtonClick" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.Click"/>
		<seealso cref="System.EventArgs" qualify="true"/>
	</doc>
	<doc for="Button.Command">
		<summary>
			<para>Occurs when the <see cref="System.Web.UI.WebControls.Button"/> control is clicked.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Web.UI.WebControls.Button.Command"/> event is raised when the
<see cref="System.Web.UI.WebControls.Button"/> control 
   is clicked. This event is commonly used when a command name, such as
<see langword="Sort"/>, is associated with
   the <see cref="System.Web.UI.WebControls.Button"/> control. This allows you to create
   multiple <see cref="System.Web.UI.WebControls.Button"/> controls on a Web page and
   programmatically determine which <see cref="System.Web.UI.WebControls.Button"/> control is clicked. </para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.Button.Command"/> event is raised through the
   control hierarchy in the form of the <see langword="BubbleEvent"/>.
</note>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and
      code an event handler for the <see cref="System.Web.UI.WebControls.Button.Command"/> event to sort a
      list when the <see cref="System.Web.UI.WebControls.Button"/> control is clicked.</para>
			<codelink SampleID="ButtonCommandNameArgument" SnippetID="1"/>
			<codelink SampleID="ButtonCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.OnCommand"/>
		<seealso cref="System.Web.UI.WebControls.CommandEventHandler"/>
	</doc>
	<doc for="Button.OnCommand">
		<summary>
			<para>Raises the <see cref="System.Web.UI.WebControls.Button.Command"/> event of the <see cref="System.Web.UI.WebControls.Button"/>
control.</para>
		</summary>
		<param name="e">A <see cref="System.Web.UI.WebControls.CommandEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.Button.Command"/>
event is raised when the <see cref="System.Web.UI.WebControls.Button"/>
control is clicked. This event is commonly used when a command name, such as
<see langword="Sort"/>, is associated with the <see cref="System.Web.UI.WebControls.Button"/> control. This allows you to create 
multiple <see cref="System.Web.UI.WebControls.Button"/> controls on a Web page and
programmatically determine which <see cref="System.Web.UI.WebControls.Button"/> control is clicked.</para>
			<note type="note">
   The <see cref="System.Web.UI.WebControls.Button.Command"/> event is raised through the
   control hierarchy in the form of the <see langword="BubbleEvent"/>.
</note>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Web.UI.WebControls.Button.OnCommand"/> method also allows derived
classes to handle the event without attaching a delegate. This is the preferred
technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Web.UI.WebControls.Button.OnCommand"/> in a derived class, be sure to 
   call the base class's <see cref="System.Web.UI.WebControls.Button.OnCommand"/> method so that registered
   delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to specify and code an event handler
      for the <see cref="System.Web.UI.WebControls.Button.Command"/> event to sort a list when the
   <see cref="System.Web.UI.WebControls.Button"/> control is clicked.</para>
			<codelink SampleID="ButtonCommandNameArgument" SnippetID="1"/>
			<codelink SampleID="ButtonCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.Command"/>
		<seealso cref="System.Web.UI.WebControls.CommandEventArgs"/>
	</doc>
	<doc for="Button">
		<summary>
			<para>Displays a push button control on the Web page.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Button"/>
control to create a push button on the Web page. You can create either a
<see langword="submit"/> button or a <see langword="command"/>
button. </para>
			<para>A <see langword="submit"/> button does not have a command name (specified
by the <see cref="System.Web.UI.WebControls.Button.CommandName"/> property) associated
with the button and simply posts the Web page back to the server. By
default, a <see cref="System.Web.UI.WebControls.Button"/> control is
a submit button. You can provide an event handler for the <see cref="System.Web.UI.WebControls.Button.Click"/> event to programmatically control the
actions performed when the submit button is
clicked.</para>
			<para>A <see langword="command"/> button has a command name associated with
the button, such as <see langword="Sort"/>, by setting the
<see cref="System.Web.UI.WebControls.Button.CommandName"/> 
property. This allows you to create multiple <see cref="System.Web.UI.WebControls.Button"/> controls on a Web
page and programmatically determine which <see cref="System.Web.UI.WebControls.Button"/> control is clicked. You can also use
the <see cref="System.Web.UI.WebControls.Button.CommandArgument"/> property with a command button to
provide additional information about the command to perform, such as
<see langword="Ascending"/>. You can 
provide an event handler for the <see cref="System.Web.UI.WebControls.Button.Command"/> event to programmatically
control the actions performed when the <see langword="command"/>
button is clicked. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create a
      submit <see cref="System.Web.UI.WebControls.Button"/> control
      that
      posts the Web page content back to the server.</para>
			<codelink SampleID="Classic Button Example" SnippetID="1"/>
			<para>The following example demonstates how to create a sort
 command <see cref="System.Web.UI.WebControls.Button"/> control
 that sorts a list.</para>
			<codelink SampleID="ButtonCommandNameArgument" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Button.CommandName"/>
		<seealso cref="System.Web.UI.WebControls.Button.CommandArgument"/>
		<seealso cref="System.Web.UI.WebControls.Button.Click"/>
		<seealso cref="System.Web.UI.WebControls.Button.Command"/>
	</doc>
</docs>
