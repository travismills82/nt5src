<docs>
	<doc for="TemplateControl.EventError">
		<summary>
			<para>Represents the <see langword="Error"/> event. This field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.TemplateControl.Error"/>
	</doc>
	<doc for="AutomaticHandlerMethodInfos">
		<summary>
		</summary>
	</doc>
	<doc for="TemplateControl.EventCommitTransaction">
		<summary>
			<para>Represents the <see langword="CommitTransaction"/> event. This field is read-only.</para>
		</summary>
		<seealso cref="System.Web.UI.TemplateControl.CommitTransaction"/>
		<seealso topic="cpconprocessingtransactions"/>
	</doc><doc for="TemplateControl.EventAbortTransaction">
		<summary>
			<para>Represents the <see langword="AbortTransaction"/> event. This field is
   read-only.</para>
		</summary>
		<seealso topic="cpconprocessingtransactions"/>
	</doc><doc for="TemplateControl.LoadCachedControl">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TemplateControl.TemplateControl">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.TemplateControl"/> class.</para>
		</summary>
	</doc><doc for="TemplateControl.WriteUTF8ResourceString">
	</doc><doc for="TemplateControl.ReadStringResource">
	</doc><doc for="TemplateControl.CreateResourceBasedLiteralControl">
	</doc><doc for="TemplateControl.SetStringResourcePointer">
	</doc><doc for="TemplateControl.AutoHandlers">
	</doc><doc for="TemplateControl.InstantiateIn">
		<param name="control">The <see cref="System.Web.UI.Control"/> object to contain the control tree.</param>
		<remarks>
			<para>The controls contained in this tree are generated for an .aspx or .ascx file
 when it is requested.</para>
		</remarks>
	</doc><doc for="TemplateControl.FrameworkInitialize">
		<internalonly/>
		<summary>
		</summary>
	</doc><doc for="TemplateControl.SupportAutoEvents">
		<summary>
		</summary>
		<value>
			<para><see langword="true"/> if automatic events are supported; otherwise
<see langword="false"/>.</para>
		</value>
	</doc><doc for="TemplateControl.OnError">
		<summary>
			<para>Raises the <see langword="Error"/> event.
 </para>
		</summary>
		<param name="e">An <see langword="EventArgs"/> object that contains the event data.</param>
		<example>
			<para>The following example demonstrates a possible use of the
 method <see cref="System.Web.UI.TemplateControl.OnError"/>. It creates a string with some invalid arguments,
 which leads to an exception. Notice that since <see cref="System.Web.UI.TemplateControl"/>
 is abstract, this sample has been written using the <see cref="System.Web.UI.Page"/>
 
 class, which derives from
 it.</para>
			<code lang="VB">&lt;%@ Page language="VB" %&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;script language="VB" runat="server"&gt;
 Sub Page_Load( sender as object, e as System.EventArgs)
 AddHandler Page.Error, AddressOf Error_Handler
 try
 Dim myString as string = "Hello"
 'An exception is raised as the length of 'myString' is less than '6'.
 Dim mySubString as string= myString.Substring(0,6)
 catch e1 As Exception
 OnError (EventArgs.Empty)
 End try
 End Sub
 
 Sub Error_Handler( sender as object,e as System.EventArgs )
 Response.Write("&lt;br&gt;&lt;b&gt;An Error was raised&lt;/b&gt;")
 End Sub
 &lt;/script&gt;
 &lt;/head&gt;
&lt;/html&gt;
 </code>
			<code lang="C#">&lt;%@ Page language="c#" %&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;script language="C#" runat="server"&gt;
 void Page_Load(object sender, System.EventArgs e)
 {
 Page.Error += new System.EventHandler(Error_Handler);
 try
 {
 string myString = "Hello";
 // An exception is raised as the length of 'myString' is less than '6'.
 string mySubString = myString.Substring(0,6);
 }
 catch(Exception)
 {
 OnError(EventArgs.Empty);
 }
 }
 
 void Error_Handler(object sender,System.EventArgs e)
 {
 Response.Write("&lt;br&gt;&lt;b&gt;An Error was raised&lt;/b&gt;");
 }
 &lt;/script&gt;
 &lt;/head&gt;
&lt;/html&gt;
 </code>
		</example>
	</doc><doc for="TemplateControl.LoadTemplate">
		<summary>
			<para> Obtains an instance of the <see langword="ITemplate"/> interface from an
   external file.
   </para>
		</summary>
		<param name="virtualPath">The virtual path to a user control file. </param>
		<returns>
			<para> An instance of the specified template.
      </para>
		</returns>
		<example>
			<para>The following example uses the <see langword="LoadTemplate"/> method to add a 
   user control as an alternating item to a <see cref="System.Web.UI.WebControls.DataList"/> Web server control
   named <c>DataList1</c>. The user control implements the <see cref="System.Web.UI.ITemplate"/>
   interface and is contained in a file named Newtemplate.ascx.</para>
			<codelink SampleID="System.Web.UI.TemplateControl_LoadTemplate" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TemplateControl.ParseControl">
		<summary>
			<para>Parses an input string into a <see cref="System.Web.UI.Control"/> on the
   Web Forms page or user control. <see langword=" "/>
			</para>
		</summary>
		<param name="content">A <see cref="System.String"/> that contains a user control.</param>
		<returns>
			<para>Returns the parsed <see cref="System.Web.UI.Control"/> .</para>
		</returns>
		<remarks>
			<para>The content string parameter contains a user control,
      as you would find in an .ascx file. This string cannot contain any code, since
      this method never causes compilation.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Web.UI.WebControls.Button"/> Web server control 
   using the <see langword="ParseControl"/> method and then adds the result to
   the <see cref="System.Web.UI.ControlCollection"/> of a <see cref="System.Web.UI.WebControls.PlaceHolder"/> Web server control
   named myPlaceholder. </para>
			<codelink SampleID="System.Web.UI.TemplateControl.ParseControl" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TemplateControl.CommitTransaction">
		<summary>
			<para> Occurs when a transaction completes.</para>
		</summary>
		<example>
			<codelink SampleID="TemplateControl_OnCommitTransaction" SnippetID="2"/>
		</example>
		<seealso topic="cpconprocessingtransactions"/>
	</doc>
	<doc for="TemplateControl.OnCommitTransaction">
		<summary>
			<para>Raises the <see langword="CommitTransaction"/>
event.</para>
		</summary>
		<param name="e">An <see langword="EventArgs"/> object that contains the event data.</param>
		<remarks>
			<para>You can use this method for any transaction processing logic in which your
      page or user control participates.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the methods <see cref="System.Web.UI.TemplateControl.OnAbortTransaction"/>,
   and <see cref="System.Web.UI.TemplateControl.OnCommitTransaction"/>. Note that since <see cref="System.Web.UI.TemplateControl"/>
   is abstract, this example uses the <see cref="System.Web.UI.Page"/> class, which
   derives from it. <c>Account</c> is
a class that supports a <c>Debit</c>
operation, which is transactional and
has to execute as a unit. If any exception is raised during this
operation, the transaction is aborted. </para>
			<codelink SampleID="TemplateControl_OnCommitTransaction" SnippetID="2"/>
		</example>
		<seealso topic="cpconprocessingtransactions"/>
	</doc>
	<doc for="TemplateControl.AbortTransaction">
		<summary>
			<para>Occurs when a user aborts a transaction.</para>
		</summary>
		<example>
			<codelink SampleID="TemplateControl_OnCommitTransaction" SnippetID="1"/>
		</example>
		<seealso topic="cpconprocessingtransactions"/>
	</doc>
	<doc for="TemplateControl.OnAbortTransaction">
		<summary>
			<para>Raises the <see langword="AbortTransaction"/> event.</para>
		</summary>
		<param name="e">An <see langword="EventArgs"/> object that contains the event data.</param>
		<example>
			<codelink SampleID="TemplateControl_OnCommitTransaction" SnippetID="3"/>
		</example>
		<seealso topic="cpconprocessingtransactions"/>
	</doc>
	<doc for="TemplateControl.Error">
		<summary>
			<para>Occurs when an unhandled exception is thrown.</para>
		</summary>
	</doc>
	<doc for="TemplateControl">
		<summary>
			<para>Provides the <see cref="System.Web.UI.Page"/> class and the <see cref="System.Web.UI.UserControl"/> class with a base set of functionality.</para>
		</summary>
		<example>
			<codelink SampleID="TemplateControl_Sample1" SnippetID="1"/>
		</example>
	</doc>
	<doc for="TemplateControl.Construct">
		<summary>
			<para> Performs construction time logic.</para>
		</summary>
		<remarks>
			<para>This method allows <see cref="System.Web.UI.Page"/> and <see cref="System.Web.UI.UserControl"/> authors to execute code at
   construction time without having to write a true constructor.</para>
		</remarks>
		<example>
			<codelink SampleID="TemplateControl_Sample1" SnippetID="2"/>
		</example>
	</doc>
	<doc for="TemplateControl.LoadControl">
		<summary>
			<para>Obtains a <see cref="System.Web.UI.UserControl"/> object from a user control file.</para>
		</summary>
		<param name="virtualPath">The virtual path to a user control file.</param>
		<returns>
			<para> Returns the specified <see langword="UserControl"/> object.</para>
		</returns>
		<remarks>
			<para>If the user control supports caching, the object returned from this method is
      not actually a <see cref="System.Web.UI.UserControl"/>, but a <see cref="System.Web.UI.PartialCachingControl"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see langword="LoadControl"/> method to add a
   user control, <c>LogOnControl</c>, to an ASP.NET page. <c>LogOnControl</c> is contained in the
<c> Logonformcs.ascx</c> file, for C#, or the <c>Logonformvb.ascx</c> file, for Visual Basic.
The user control is then added to the <see cref="System.Web.UI.Control.Controls"/>
property of a <see cref="System.Web.UI.WebControls.PlaceHolder"/> Web server control named
<c> myPlaceholder</c>.</para>
			<codelink SampleID="TemplateControl_Sample1" SnippetID="3"/>
		</example>
	</doc>
</docs>
