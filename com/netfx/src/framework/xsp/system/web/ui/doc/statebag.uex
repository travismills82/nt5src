<docs>
	<doc for="StateBag.IsTrackingViewState">
		<summary>
			<para>Determines if state changes in the StateBag object's store are being tracked.</para>
		</summary>
	</doc>
	<doc for="StateBag.LoadViewState">
		<summary>
			<para>Loads the specified previously saved state information</para>
		</summary>
		<param name="state">The state information to be loaded.</param>
	</doc>
	<doc for="StateBag.TrackViewState">
		<summary>
			<para>Initiates the tracking of state changes for items stored in the 
    <see langword="StateBag"/> object.</para>
		</summary>
	</doc>
	<doc for="StateBag.SaveViewState">
		<summary>
			<para>Returns an object that contains all state changes for items stored in the 
    <see langword="StateBag"/> object.</para>
		</summary>
	</doc>
	<doc for="StateBag.SetItemDirty">
		<summary>
		</summary>
	</doc><doc for="StateBag.this">
		<summary>
			<para> Gets or sets the value of an item stored in
      the <see cref="System.Web.UI.StateBag"/>
      object.</para>
		</summary>
		<param name="key">The key for the item.</param>
		<value>
			<para>The specified item in the <see langword="StateBag"/> object.</para>
		</value>
		<remarks>
			<para> Using this member is the simplest way to save and retrieve view-state values for a control or a page.</para>
			<para> If an item is not already stored in the <see cref="System.Web.UI.StateBag"/> object when you set this property, its key/value pair
   is added to the collection. If you set this property to <see langword="null"/>
   before the <see cref="System.Web.UI.Control.TrackViewState"/> method is
   called on an item, it is removed from the <see langword="StateBag"/>
   object. Otherwise,
   when you set this property to <see langword="null"/> the key is saved to allow tracking of
   the item's view state.</para>
		</remarks>
		<example>
			<para>The following example demonstrates a property that saves
      its name and value as a key/value pair to the <see cref="System.Web.UI.Control.ViewState" qualify="true"/> property. The
   <see langword="Control.ViewState"/> property is an instance of the <see langword="StateBag"/>class.</para>
			<codelink SampleID="SysWebUIControlViewState" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.StateBag.Add"/>
		<seealso cref="System.Web.UI.StateBag.Remove"/>
		<seealso cref="System.Web.UI.Control.ViewState"/>
		<seealso topic="cpconintroductiontowebformsstatemanagement"/>
		<keyword term="server controls, adding view state values"/>
		<keyword term="ASP.NET server controls, adding view state values"/>
		<keyword term="ASP.NET server controls, retrieving view state values"/>
		<keyword term="server controls, retrieving view state values"/>
	</doc><doc for="StateBag">
		<summary>
			<para> Manages the view state of ASP.NET server controls,
 including pages. This class cannot
 be inherited. </para>
		</summary>
		<remarks>
			<para>View state for a page or control is the cumulative propery values, or view, of that page or
 control. You can access this class through the <see cref="System.Web.UI.Control.ViewState" qualify="true"/> property.</para>
			<para>This class is the primary storage mechanism for all HTML and
 Web server controls. It stores attribute/value pairs as strings associated with
 the control. It tracks changes to these attributes only after the<see cref="System.Web.UI.Control.OnInit"/> method
 is executed for a page request, and save the changes to the page's or
 control's view state.</para>
			<para>You can read from this class during any stage of the control processing lifecycle,
 but you should not write to it while the control is rendering.</para>
			<para> This class implements a dictionary,
 and you can add or remove items from it as you would any
 dictionary object. For more information about data collections, such as dictionaries, see <see topic="cpcongroupingdataincollections"/>
 . </para>
		</remarks>
		<example>
			<para>The following example demonstrates a composite <see langword="Label"/> control
 that has <see langword="Text"/> and <see langword="FontSize"/> properties. These properties are
 saved to and retrieved from view state when the <see cref="System.Web.UI.Control.Render" qualify="true"/>
 method is called on the control. </para>
			<codelink SampleID="SysWebUIControlViewState" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.IStateManager"/>
		<seealso cref="System.Collections.IDictionary"/>
		<seealso cref="System.Web.UI.Control.ViewState"/>
		<seealso topic="cpconintroductiontowebformsstatemanagement"/>
		<seealso topic="cpcongroupingdataincollections"/>
		<seealso cref="System.Web.UI.AttributeCollection" qualify="true"/>
		<keyword term="ASP.NET server controls, saving property values across requests"/>
		<keyword term="server controls, saving property values across requests"/>
	</doc><doc for="StateBag.IDictionary.this">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IDictionary.Add">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IDictionary.Remove">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IDictionary.IsFixedSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IDictionary.IsReadOnly">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IDictionary.Contains">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IEnumerable.GetEnumerator">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IStateManager.IsTrackingViewState">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IStateManager.LoadViewState">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IStateManager.TrackViewState">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.IStateManager.SaveViewState">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="StateBag.Count">
		<summary>
			<para>Gets the number of <see cref="System.Web.UI.StateItem"/> objects in the <see cref="System.Web.UI.StateBag"/>
object.</para>
		</summary>
		<value>
			<para>The number of items in the <see langword="StateBag"/> object.</para>
		</value>
		<example>
			<para>The following example demonstrates using the <see langword="Count "/>property.</para>
			<codelink SampleID="Web.UI.StateBag" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.Control.ViewState"/>
	</doc><doc for="StateBag.Keys">
		<summary>
			<para>Gets a collection of keys representing the items in the <see cref="System.Web.UI.StateBag"/>
object.</para>
		</summary>
		<value>
			<para>The collection of keys.</para>
		</value>
		<remarks>
			<para>These keys are the names of the control properties. For example, if you
      created a <see langword="BGColor"/> property on a <see langword="Table"/> control that
      you customized, a <see langword="BGColor"/> entry is created in this collection
      representing that property on your <see langword="Table"/>
      control.</para>
			<para>These keys correspond to the names of the <see cref="System.Web.UI.StateItem"/> objects stored in the
<see langword="StateBag"/> for 
   the current page or server control.</para>
			<para>You can iterate over this collection using
   the <see cref="System.Web.UI.StateBag.GetEnumerator" qualify="true"/>
   method.</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see langword="Keys "/>property.</para>
			<codelink SampleID="Web.UI.StateBag" SnippetID="2"/>
		</example>
		<seealso cref="System.Collections.ICollection"/>
		<seealso cref="System.Web.UI.Control.ViewState"/>
	</doc><doc for="StateBag.Values">
		<summary>
			<para> Gets a collection of the view-state values stored in the <see cref="System.Web.UI.StateBag"/>
object.</para>
		</summary>
		<value>
			<para> The collection of view-state values.</para>
		</value>
		<remarks>
			<para> This is a collection that contains the values for all the <see cref="System.Web.UI.StateItem"/> objects in the
   specified page or control. You can iterate through these values by using
   the <see cref="System.Web.UI.StateBag.GetEnumerator" qualify="true"/>
   method. </para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see langword="Values "/>property.</para>
			<codelink SampleID="Web.UI.StateBag" SnippetID="2"/>
		</example>
		<seealso cref="System.Collections.ICollection"/>
		<seealso cref="System.Web.UI.Control.ViewState"/>
	</doc><doc for="StateBag.Add">
		<summary>
			<para>Adds a new <see cref="System.Web.UI.StateItem"/> object to the <see cref="System.Web.UI.StateBag"/>
object. If the item already exists in the <see langword="StateBag"/>, it updates the
value of the item.</para>
		</summary>
		<param name="key">The attribute name for the <see langword="StateItem"/> object.</param>
		<param name=" value">The value of the item to add to the <see langword="StateBag"/> .</param>
		<returns>
			<para>Returns a <see cref="System.Web.UI.StateItem"/> object that represents the object added to
   view state.</para>
		</returns>
		<exception cref="ArgumentException">Thrown when <paramref name="key"/> is null or when the number of characters in <paramref name="key"/> is 0. </exception>
		<example>
			<para>The following example demonstrates using the <see langword="Add "/>method.</para>
			<codelink SampleID="Web.UI.StateBag" SnippetID="1"/>
		</example>
		<seealso topic="cpconintroductiontowebformsstatemanagement"/>
		<seealso cref="System.Web.UI.StateBag.this"/>
		<seealso cref="System.Web.UI.StateBag.Clear"/>
		<seealso cref="System.Web.UI.StateBag.Remove"/>
		<keyword term="ASP.NET server controls, saving view state values"/>
		<keyword term="server controls, saving view state values"/>
	</doc><doc for="StateBag.Remove">
		<summary>
			<para>Removes the specified key/value pair from the <see cref="System.Web.UI.StateBag"/> object.</para>
		</summary>
		<param name="key">The item to remove.</param>
		<example>
			<para>The following example demonstrates using the <see langword="Remove "/>method.</para>
			<codelink SampleID="Web.UI.StateBag" SnippetID="3"/>
		</example>
		<seealso cref="System.Web.UI.Control.ViewState"/>
		<seealso cref="System.Web.UI.StateBag.Clear"/>
		<seealso cref="System.Web.UI.StateBag.this"/>
		<seealso cref="System.Web.UI.StateBag.Add"/>
		<keyword term="ASP.NET server controls, removing view state values"/>
		<keyword term="server controls, removing view state values"/>
	</doc><doc for="StateBag.StateBag">
		<overload>
			<para>Initializes a new instance
      of the <see cref="System.Web.UI.StateBag"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.StateBag"/> class. This is the default constructor for this
   class.</para>
		</summary>
		<example>
			<para>The following example demonstrates using this version of
      the <see langword="StateBag"/> constructor.</para>
			<codelink SampleID="StateItem_Samples1" SnippetID="3"/>
		</example>
		<seealso cref="System.Web.UI.Control.ViewState"/>
	</doc>
	<doc for="StateBag.GetEnumerator">
		<summary>
			<para> Returns an enumerator that iterates over all the
      key/value pairs of the <see cref="System.Web.UI.StateItem"/> objects stored in
      the <see langword="StateBag"/>.</para>
		</summary>
		<returns>
			<para>The enumerator to iterate through the state bag.</para>
		</returns>
		<example>
			<codelink SampleID="StateItem_Samples1" SnippetID="3"/>
		</example>
		<seealso cref="System.Collections.IDictionaryEnumerator"/>
		<keyword term="view state, iterating through values"/>
		<keyword term="ASP.NET server controls, iterating through view state values"/>
		<keyword term="server controls, iterating through view state values"/>
	</doc>
	<doc for="StateBag.Clear">
		<summary>
			<para>Removes all items from the current <see cref="System.Web.UI.StateBag"/> object.</para>
		</summary>
		<example>
			<para>The following example demonstrates using the
   <see langword="Clear "/>method.</para>
			<codelink SampleID="StateBag_IStateManager_Sample1" SnippetID="4"/>
		</example>
		<seealso cref="System.Web.UI.StateBag.Remove"/>
		<seealso cref="System.Web.UI.StateBag.Add"/>
		<keyword term="ASP.NET server controls, removing all view state values"/>
		<keyword term="server controls, removing all view state values"/>
	</doc>
	<doc for="StateBag.StateBag1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.StateBag"/> class that allows stored state
   values to be case-insensitive.</para>
		</summary>
		<param name="ignoreCase"><see langword="true"/> to ignore case; otherwise, <see langword="false"/>.</param>
		<seealso cref="System.Web.UI.Control.ViewState"/>
	</doc>
	<doc for="StateBag.IsItemDirty">
		<summary>
			<para>Checks a <see cref="System.Web.UI.StateItem"/> object stored in the <see cref="System.Web.UI.StateBag"/> to evaluate if it has been modified since the call to
<see cref="System.Web.UI.Control.TrackViewState" qualify="true"/> 
.</para>
		</summary>
		<param name="key">The key of the item to check.</param>
		<returns>
			<para><see langword="true"/> if the item has been modified; otherwise,
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>This method also returns <see langword="false"/> if the key parameter does not exist in the
<see langword="StateBag"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates using the <see langword="IsItemDirty "/>method.</para>
			<codelink SampleID="StateBag_IStateManager_Sample1" SnippetID="4"/>
		</example>
		<seealso cref="System.Web.UI.Control.ViewState"/>
		<keyword term="ASP.NET server controls, tracking view state changes"/>
		<keyword term="server controls, tracking view state changes"/>
	</doc>
</docs>
