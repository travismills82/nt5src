<docs>
	<doc for="BoundColumn.OnDataBindColumn">
		<summary>
		</summary>
	</doc>
	<doc for="BoundColumn.thisExpr">
		<summary>
			<para> Represents the string "!". This field is read-only. </para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BoundColumn.thisExpr"/> field to represent the 
   "!" string. </para>
		</remarks>
	</doc><doc for="BoundColumn.DataField">
		<summary>
			<para> Gets or sets the field name from the data source to
      bind to the <see cref="System.Web.UI.WebControls.BoundColumn"/>.</para>
		</summary>
		<value>
			<para>The name of the field to bind to the <see cref="System.Web.UI.WebControls.BoundColumn"/>. The default value
   is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BoundColumn.DataField"/> 
property to specify the field to bind to the <see cref="System.Web.UI.WebControls.BoundColumn"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.BoundColumn.DataField"/> property to specify the name of
   the field in the data source to bind to the <see cref="System.Web.UI.WebControls.BoundColumn"/>.</para>
			<codelink SampleID="Classic BoundColumn Example" SnippetID="1"/>
		</example>
		<seealso cref="System.String.Empty" qualify="true"/>
	</doc><doc for="BoundColumn.Initialize">
		<summary>
			<para> Resets the <see cref="System.Web.UI.WebControls.BoundColumn"/> to its initial state.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BoundColumn.Initialize"/> method to reset the <see cref="System.Web.UI.WebControls.BoundColumn"/> to its
   initial state. </para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.BoundColumn.InitializeCell"/>
	</doc><doc for="BoundColumn.InitializeCell">
		<summary>
			<para> Resets the specified cell in the <see cref="System.Web.UI.WebControls.BoundColumn"/>
to its initial state.</para>
		</summary>
		<param name="cell">A <see cref="System.Web.UI.WebControls.TableCell"/> object that represents the cell to reset.</param>
		<param name=" columnIndex">The column number where the cell is located.</param>
		<param name=" itemType">One of the <see cref="System.Web.UI.WebControls.ListItemType"/> values.</param>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.BoundColumn.InitializeCell"/> method resets the specified cell in the <see cref="System.Web.UI.WebControls.BoundColumn"/> to its
   initial state.</para>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.BoundColumn.Initialize"/>
	</doc><doc for="BoundColumn.DataFormatString">
		<summary>
			<para>Gets or sets the string that specifies the display format for items in the
      column.</para>
		</summary>
		<value>
			<para>A formatting string that specifies the display format of items in the
      column. The default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para> Use the <see cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/> property to provide a custom format for the items in the
   column. </para>
			<para>The data format string consists of two parts, separated by
   a colon, in the form {<paramref name="A"/>:<paramref name="Bxx"/>}. For example, the formatting string {0:F2}
   displays a fixed-point number with two decimal places.</para>
			<note type="note">
   The entire string must
   be enclosed in braces to indicate that it is a format string and not a literal string.
   Any text outside the braces is displayed as literal text.
</note>
			<para>The value before the colon (<paramref name="A"/>
in the general example)
specifies the parameter index in a zero-based list of parameters.</para>
			<note type="note">
   
   This value can only be set to 0 because there is only one value in each
   cell.
</note>
			<para>The character after the colon (<paramref name="B"/> in the
general example) specifies the format to display the value in. The following table lists the common
formats.</para>
			<list type="table">
				<listheader>
					<term>Format character</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="C"/></term>
					<description>Displays numeric values in currency
      format.</description>
				</item>
				<item>
					<term><see langword="D"/></term>
					<description>Displays numeric values in decimal
   format.</description>
				</item>
				<item>
					<term><see langword="E"/></term>
					<description>Displays numeric values in scientific
   (exponential) format.</description>
				</item>
				<item>
					<term><see langword="F"/></term>
					<description>Displays numeric values in fixed
   format.</description>
				</item>
				<item>
					<term><see langword="G"/></term>
					<description>Displays numeric values in general
   format.</description>
				</item>
				<item>
					<term><see langword="N"/></term>
					<description>Displays numeric values in number
   format.</description>
				</item>
				<item>
					<term><see langword="X"/></term>
					<description>Displays numeric values in hexadecimal
   format.</description>
				</item>
			</list>
			<note type="note">
   The format character is not case-sensitive, except
   for <see langword="X"/>, which
   displays the hexadecimal characters in the case specified.
</note>
			<para>The value after the format character (<paramref name="xx"/>
in the general example) specifies the number of significant digits or
decimal places to display. </para>
			<para>For more information on formatting strings, see
<see topic="cpconformattingoverview"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/>
property to specify currency format for the column in the <see cref="System.Web.UI.WebControls.DataGrid"/> control that displays prices.</para>
			<codelink SampleID="Classic BoundColumn Example" SnippetID="1"/>
		</example>
		<seealso cref="System.String.Empty" qualify="true"/>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
		<seealso topic="cpconformattingoverview"/>
	</doc>
	<doc for="BoundColumn">
		<summary>
			<para>A column type for the <see cref="System.Web.UI.WebControls.DataGrid"/> control that is bound to a field in a data
   source.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BoundColumn"/> column type in a <see cref="System.Web.UI.WebControls.DataGrid"/> control to display the contents of a field in
   the data source. The values are listed in a single column. The field is linked to
   the <see cref="System.Web.UI.WebControls.BoundColumn"/>, so any updates in the data source will reflect in the corresponding cells of the <see cref="System.Web.UI.WebControls.DataGrid"/> control.</para>
			<note type="note">
   This column type is the default for the <see cref="System.Web.UI.WebControls.DataGrid"/> control.
</note>
			<para> To control appearance of this column, use the style
   properties of the <see cref="System.Web.UI.WebControls.DataGrid"/>
   control. </para>
			<note type="caution">
   Text is not HTML encoded
   before it is displayed in the <see cref="System.Web.UI.WebControls.BoundColumn"/>.
   This makes it possible to embed script within HTML tags
   in the text. If the values for this column come from user input, be sure
   to validate the values to prevent security vulnerabilities.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to use a <see cref="System.Web.UI.WebControls.BoundColumn"/> column type in the <see cref="System.Web.UI.WebControls.DataGrid"/> control to display the fields in a
   data source.</para>
			<codelink SampleID="Classic BoundColumn Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataGrid"/>
	</doc>
	<doc for="BoundColumn.ReadOnly">
		<summary>
			<para>Gets or sets a value that indicates whether the items
      in the <see cref="System.Web.UI.WebControls.BoundColumn"/>
      can be edited.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the
   items in the
<see cref="System.Web.UI.WebControls.BoundColumn"/> cannot be edited; otherwise,
<see langword="false"/>. The
   default value is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BoundColumn.ReadOnly"/> property to specify whether the items
   in the <see cref="System.Web.UI.WebControls.BoundColumn"/>
   
   can be edited. This property can also be used to programmatically determine whether
   the
   column is read-only.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use the <see cref="System.Web.UI.WebControls.BoundColumn.ReadOnly"/> property to specify
   that a <see cref="System.Web.UI.WebControls.BoundColumn"/> is read-only.</para>
			<codelink SampleID="BoundColumnReadOnly" SnippetID="1"/>
		</example>
	</doc>
	<doc for="BoundColumn.FormatDataValue">
		<summary>
			<para>Converts the specified value to the format indicated by
      the <see cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/> property.</para>
		</summary>
		<param name="dataValue">The value to format.</param>
		<returns>
			<para>The specified value converted to the format indicated by
      the <see cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/> property.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.BoundColumn.FormatDataValue"/> method to convert the specified value to the format indicated by
   the <see cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/> property.</para>
			<note type="note">
   This method returns the string equivalent of the value if
   the <see cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/> property is not set.
</note>
		</remarks>
		<seealso cref="System.Web.UI.WebControls.BoundColumn.DataFormatString"/>
	</doc>
	<doc for="BoundColumn.BoundColumn">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.BoundColumn"/> class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.BoundColumn"/> class.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to create and
      initialize a new instance of the <see cref="System.Web.UI.WebControls.BoundColumn"/> class and add it to
      the <see cref="System.Web.UI.WebControls.DataGrid.Columns"/> collection.</para>
			<codelink SampleID="DataGridCtor" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.DataGrid.Columns"/>
	</doc>
</docs>
