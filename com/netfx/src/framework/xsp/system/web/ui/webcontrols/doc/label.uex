<docs>
	<doc for="Label.Label1">
		<summary>
		</summary>
		<param name="tag">The name of the specified tag to render.</param>
		<example>
			<para>The following example illustrates how to instantiate a new 
       instance of the <see cref="System.Web.UI.WebControls.Label"/> control and render it as
       &lt;TextArea&gt;.</para>
			<codelink SampleID="Classic Label.Label1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Label.AddParsedSubObject">
		<summary>
		</summary>
		<param name="obj">
		</param>
	</doc>
	<doc for="Label.LoadViewState">
		<summary>
			<para>Load previously saved state.
       Overridden to synchronize Text property with LiteralContent.</para>
		</summary>
		<param name="savedState">Represents the previously saved state.</param>
	</doc>
	<doc for="Label.RenderContents">
		<summary>
			<para>Renders the contents of the <see cref="System.Web.UI.WebControls.Label"/> into the specified writer.</para>
		</summary>
		<param name="writer">The output stream that renders HTML content to the client.</param>
	</doc>
	<doc for="LabelControlBuilder.AllowWhitespaceLiterals">
		<summary>
			<para>Specifies whether white space literals are allowed.</para>
		</summary>
		<returns>
			<para><see langword="false"/> for all cases.</para>
		</returns>
		<remarks>
			<para>This method overrides the <see cref="System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" qualify="true"/>
property to
ignore white
space in the <see cref="System.Web.UI.WebControls.Label"/> control.</para>
		</remarks>
		<seealso cref="System.Web.UI.ControlBuilder.AllowWhitespaceLiterals" qualify="true"/>
	</doc><doc for="Label.Label">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.Label"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.WebControls.Label"/>
class.</para>
		</summary>
		<remarks>
			<para>Use this constructor to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.Label"/>
class.</para>
		</remarks>
		<example>
			<para>The following example shows how to create and initialize a new instance of the <see cref="System.Web.UI.WebControls.Label"/>
control.</para>
			<codelink SampleID="Classic Label.Label Example" SnippetID="1"/>
		</example>
	</doc><doc for="LabelControlBuilder">
		<summary>
			<para>Interacts with the parser to build a <see cref="System.Web.UI.WebControls.Label"/>
control.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.UI.WebControls.LabelControlBuilder"/> 
causes the parser to ignore inner text if it contains only white space characters.</para>
			<note type="inheritinfo">
   To create a
   custom control builder for a <see cref="System.Web.UI.WebControls.Label"/> derived control, you need to inherit
   from this class.
   
</note>
		</remarks>
		<seealso cref="System.Web.UI.ControlBuilder"/>
	</doc>
	<doc for="Label">
		<summary>
			<para> Represents a label control, which displays text on a Web
      page.</para>
		</summary>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Label"/>
control to display text in a set location on the page. Unlike static text, you can customize the
displayed text through the <see cref="System.Web.UI.WebControls.Label.Text"/>
property. </para>
			<para> You can also use the <see cref="System.Web.UI.WebControls.Literal"/> and <see cref="System.Web.UI.WebControls.PlaceHolder"/> controls to display text on the Web
Forms page. However, unlike the <see cref="System.Web.UI.WebControls.Label"/> control, these controls do not render
any additional tags.</para>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates how to create a <see cref="System.Web.UI.WebControls.Label"/> control on
   a Web
   page.</para>
			<codelink SampleID="Classic Label Example 2" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.UI.WebControls.Label.Text"/>
	</doc>
	<doc for="Label.Text">
		<summary>
			<para>Gets or sets the text content of the <see cref="System.Web.UI.WebControls.Label"/>
control.</para>
		</summary>
		<value>
			<para> The text content of the control.
      The default value is <see cref="System.String.Empty" qualify="true"/>.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Web.UI.WebControls.Label.Text"/> property to specify or determine the text content of the <see cref="System.Web.UI.WebControls.Label"/> control. This property is commonly used
   to programmatically customize the text that is displayed in the
<see cref="System.Web.UI.WebControls.Label"/> control.</para>
			<note type="note">
   Setting the <see cref="System.Web.UI.WebControls.Label.Text"/> property will clear any other
   controls contained in the <see cref="System.Web.UI.WebControls.Label"/> control.
</note>
			<note type="caution">
   This control can be used to display user
   input, which might include malicious client script. Check any information that
   is sent from a client for executable script, SQL statements, or other code
   before displaying it in your application. ASP.NET provides an input request
   validation feature to block script and HTML in user input. Validation server
   controls are also provided to assess user input. For more information, see
<see topic="cpconASPNETSyntaxForValidationControls"/>.
</note>
		</remarks>
		<example>
			<para> The following example demonstrates how to create a new instance of
      the <see cref="System.Web.UI.WebControls.Label"/> control and set its <see cref="System.Web.UI.WebControls.Label.Text"/> property.</para>
			<codelink SampleID="Classic Label.Text Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
