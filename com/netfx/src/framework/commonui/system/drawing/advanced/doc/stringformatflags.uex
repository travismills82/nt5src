<docs>
   <doc for="StringFormatFlags">
 <summary>
    Specifies the display and layout
    information for text strings.
 </summary>
   </doc>
   <doc for="StringFormatFlags.DirectionRightToLeft">
 <summary>
    Specifies that text is right to left.
 </summary>
   </doc>
   <doc for="StringFormatFlags.DirectionVertical">
 <summary>
    Specifies that text is vertical.
 </summary>
   </doc>
   <doc for="StringFormatFlags.FitBlackBox">
 <summary>
    Specifies that no part of any glyph
    overhangs the bounding rectangle. By default some glyphs overhang the rectangle
    slightly where necessary to appear at the edge visually. For example when an
    italic lower case letter f in a font such as Garamond is aligned at the far left
    of a rectangle, the lower part of the f will reach slightly further left than
    the left edge of the rectangle. Setting this flag will ensure no painting
    outside the rectangle but will cause the aligned edges of adjacent lines of text
    to appear uneven.
 </summary>
   </doc>
   <doc for="StringFormatFlags.DisplayFormatControl">
 <summary>
    Causes control characters such as the
    left-to-right mark to be shown in the output with a representative glyph.
 </summary>
   </doc>
   <doc for="StringFormatFlags.NoFontFallback">
 <summary>
    Disables fallback to alternate fonts for
    characters not supported in the requested font. Any missing characters are
    displayed with the fonts missing glyph, usually an open square.
 </summary>
   </doc>
   <doc for="StringFormatFlags.MeasureTrailingSpaces">
 <summary>
    <para>[To be supplied.]</para>
 </summary>
   </doc>
   <doc for="StringFormatFlags.NoWrap">
 <summary>
    <para>[To be supplied.]</para>
 </summary>
   </doc>
   <doc for="StringFormatFlags.LineLimit">
 <summary>
    <para>[To be supplied.]</para>
 </summary>
   </doc>
   <doc for="StringFormatFlags.NoClip">
 <summary>
    <para>[To be supplied.]</para>
 </summary>
   </doc>
</docs>

