<docs>
	<doc for="Blend.Blend">
		<overload>
			<para>
       Initializes a new instance
       of the <see cref="System.Drawing.Drawing2D.Blend"/> class.
    </para>
		</overload>
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Drawing.Drawing2D.Blend"/>
       class.
    </para>
		</summary>
	</doc>
	<doc for="Blend.Blend1">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Drawing.Drawing2D.Blend"/>
       class with the specified number of factors and positions.
    </para>
		</summary>
		<param name="count">
    The number of elements in the <see cref="System.Drawing.Drawing2D.Blend.Factors"/> and <see cref="System.Drawing.Drawing2D.Blend.Positions"/> arrays.
 </param>
	</doc>
	<doc for="Blend.Factors">
		<summary>
    Specifies an array of blend factors for the
    gradient.
 </summary>
		<remarks>
    Typically, this is a value between 0 and 1. It
    specifies the percentages of the starting color and the ending color to use at
    the corresponding blend position.For example, a value of .2 indicates that at that
    position, the color is composed of 20% of the starting color and 80% of the
    ending color.
 </remarks>
	</doc>
	<doc for="Blend.Positions">
		<summary>
			<para>
       Specifies an array of blend positions for the gradient.
    </para>
		</summary>
		<remarks>
    The elements of this array specify
    percentages of distance along the gradient line. This defines an array of points
    along the line where the corresponding blend factors are applied to generate the
    colors that make up the gradient.
 </remarks>
	</doc>
	<doc for="Blend">
		<summary>
			<para> Defines a blend pattern for a <see cref="System.Drawing.Drawing2D.LinearGradientBrush"/>.</para>
		</summary>
		<remarks>
			<para> Gradients are commonly used to smooth shade the
      interiors of shapes. Gradient colors are blended based on their component values
      in the RGBA color space. The blend factor determines the mixing of two colors.
      It is typically in the range [0..1]. For example, if b is the blend factor at a
      given point along a line from end color A to end color B as shown in Figure 7,
      then the color C at the point is given by Ci = b * Ai + (1 - b) * Bi , where i
      represents each component value of the color in the RGBA color space. If the
      blend factor is 1, it produces color A. If it is 0, it produces color B. An application can specify blend factors using one of
      the two methods described below. In the first method, a power function based on
      distance defines the blend factors at points along the line between two end
      colors. The falloff value specifies the power of the function and must be a
      non-negative number. It controls how rapidly blend factors change from 1 to 0,
      and colors transit from one end color to another. The color C at a point between
      two end colors A and B is given by Ci = (1 ? d)n * Ai + (1 - (1 ? d)n) * Bi ,
      where n is the falloff value, d is the distance ratio of a point along the line
      from A to B, and i represents each component value of the color in the RGBA
      color space. If the falloff value is greater than 1, the color transition occurs
      rapidly; if it is less than 1, the transition occurs more slowly. A falloff
      value of 1 specifies linear blending, or smooth shading between end colors. A
      falloff value of 0 specifies the constant blend factor 1, or constant color. By
      default, gradient colors are linearly blended. In the second method, a blend
      factor array specifies the blend factors along the line between two end colors.
      The array elements specify blend factors at evenly distributed points along the
      line between two end colors. Blend factors between two neighboring points are
      linearly interpolated from the two neighboring blend factors. The array must
      have at least one element. If there is only one element, it defines a constant
      blend factor. The graphics engine may scale the number of elements to a
      manageable size if there are too many elements. Like image fills, an application
      specifies the mapping of a gradient to the world coordinate space with the fill
      transform. Gradients are scalable. They are applied to shape interiors in the
      world coordinate space, and are scaled by the current transforms in the graphics
      context to the device space.
      </para>
		</remarks>
	</doc></docs>
