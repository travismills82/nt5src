<docs>
	<doc for="IToolboxService.AddLinkedTool">
		<overload>
			<para>Adds a new tool to the toolbox under the default category.</para>
		</overload>
		<summary>
			<para>Adds a new tool to the toolbox under the default category.</para>
		</summary>
		<param name="toolboxItem">The toolbox item to add.</param>
		<param name="host">The designer host this tool is linked to.</param>
		<remarks>
			<para>This tool will be "linked" to the specified designer host. A linked tool is removed from 
       the toolbox when the project that owns the designer is closed. It is automatically
       re-added when the project is opened again.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.AddLinkedTool1">
		<summary>
			<para> 
       Adds a
       new tool to the toolbox under the specified category.</para>
		</summary>
		<param name="toolboxItem">The toolbox item to add.</param>
		<param name="category">The category under which to add the tool.</param>
		<param name="host">The designer host this tool is linked to.</param>
		<remarks>
			<para>This tool will be "linked" to the specified designer host. A linked tool is removed from 
       the toolbox when the project that owns the designer is closed. It is automatically
       re-added when the project is opened again.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.AddTool">
		<overload>
			<para>Adds a new tool to the toolbox under the default category.</para>
		</overload>
		<summary>
			<para> 
       Adds a new tool
       to the toolbox under the default category.</para>
		</summary>
		<param name="toolboxItem">The tool to add.</param>
		<remarks>
			<para>Exceptions will be thrown if the tool already exists or if you are adding a 
       class that should not be placed on the toolbox. For a class to exist on the
       toolbox, it must be a .NET Framework component and have a ToolboxItemAttribute
       set.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.AddTool1">
		<summary>
			<para>Adds a new tool to the toolbox under the specified category.</para>
		</summary>
		<param name="toolboxItem">The tool to add.</param>
		<param name="category">The category under which to add the tool.</param>
		<remarks>
			<para>Exceptions will be thrown if the tool already exists or if you are adding a 
       class that should not be placed on the toolbox. For a class to exist on the
       toolbox, it must be a .NET Framework component and have a ToolboxItemAttribute
       set.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.GetDataObjectForTool">
		<summary>
			<para>Gets a data object representing the specified toolbox item.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Windows.Forms.IDataObject"/> containing the tool.</para>
		</returns>
		<remarks>
			<para>The data object can then be used to save the item to the clipboard, or for 
       drag and drop.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.GetSelectedTool">
		<summary>
			<para>Gets the currently selected tool.</para>
		</summary>
		<returns>
			<para>The class of the currently selected tool, or 
    <see langword="null"/> if no tool
       is selected.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetSelectedTool1">
		<summary>
			<para>Gets the currently selected tool.</para>
		</summary>
		<param name="host"> The designer host that is making this request.</param>
		<returns>
			<para>The class of the currently selected tool, or 
    <see langword="null"/> if no tool
       is selected.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetToolboxItem">
		<summary>
			<para>Gets a toolbox item from a data object.</para>
		</summary>
		<param name="dataObject">The data object that contains the toolbox item.</param>
		<returns>
			<para> The toolbox item that is inside the data 
       object, or <see langword="null"/>
       if the data object doesn't contain a toolbox item.</para>
		</returns>
		<remarks>
			<para>This is useful if you are implementing your own drag and drop functionality 
       for toolbox items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Design.IToolboxService.IsToolboxItem"/>
	</doc>
	<doc for="IToolboxService.GetToolboxItem1">
		<summary>
			<para>Gets a toolbox item from a data object.</para>
		</summary>
		<param name="dataObject">The data object that contains the toolbox item.</param>
		<param name="host"> The designer host that is making this request.</param>
		<returns>
			<para> The toolbox item that is inside the data 
       object, or <see langword="null"/>
       if the data object doesn't contain a toolbox item.</para>
		</returns>
		<remarks>
			<para>This is useful if you are implementing your own drag and drop functionality 
       for toolbox items.</para>
		</remarks>
		<seealso cref="System.Windows.Forms.Design.IToolboxService.IsToolboxItem"/>
	</doc>
	<doc for="IToolboxService.GetTools">
		<overload>
			<para>Gets all .NET Framework tools on the toolbox.</para>
		</overload>
		<summary>
			<para>Gets all .NET Framework tools on the toolbox.</para>
		</summary>
		<returns>
			<para>An array of class objects representing all .NET Framework components that are
       currently on the toolbox.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetTools1">
		<overload>
			<para>Gets all .NET Framework tools on the toolbox.</para>
		</overload>
		<summary>
			<para>Gets all .NET Framework tools on the toolbox.</para>
		</summary>
		<param name="host"> The designer host that is making this request.</param>
		<returns>
			<para>An array of class objects representing all .NET Framework components that are
       currently on the toolbox.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetTools2">
		<summary>
			<para>Gets all .NET Framework tools on the specified toolbox category.</para>
		</summary>
		<param name="category">The category name to retrieve the tools from.</param>
		<returns>
			<para>An array of class objects representing all .NET Framework components that are
       currently on the toolbox category.</para>
		</returns>
		<remarks>
			<para>An exception is thrown if category is not a valid category name.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.GetTools3">
		<summary>
			<para>Gets all .NET Framework tools on the specified toolbox category.</para>
		</summary>
		<param name="category">The category name to retrieve the tools from.</param>
		<param name="host"> The designer host that is making this request.</param>
		<returns>
			<para>An array of class objects representing all .NET Framework components that are
       currently on the toolbox category.</para>
		</returns>
		<remarks>
			<para>An exception is thrown if category is not a valid category name.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.Refresh">
		<summary>
			<para> Refreshes the state of the toolbox items.</para>
		</summary>
	</doc>
	<doc for="IToolboxService.ResetDefaultTools">
		<summary>
			<para>Causes the toolbox to reset to its default contents.</para>
		</summary>
	</doc>
	<doc for="IToolboxService.RemoveTool">
		<overload>
			<para>Removes the specified tool from the toolbox.</para>
		</overload>
		<summary>
			<para>Removes the specified tool from the toolbox.</para>
		</summary>
		<param name="toolboxItem">The tool to remove.</param>
		<remarks>
			<para>This will throw an exception if the tool does not exist on the toolbox.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.RemoveTool1">
		<summary>
			<para>Removes the specified tool from the toolbox.</para>
		</summary>
		<param name="toolboxItem">The tool to remove.</param>
		<param name="category">The category (tab) which contains the component</param>
		<remarks>
			<para>This will throw an exception if the tool does not exist on the toolbox.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.SelectedToolUsed">
		<summary>
			<para>Notifies the toolbox that the selected tool has been used.</para>
		</summary>
		<remarks>
			<para>Generally after a tool is selected and used, it is automatically 
       unselected.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.SetSelectedTool">
		<summary>
			<para> 
       Sets the currently selected tool in the toolbox.</para>
		</summary>
		<param name="toolboxItem">The tool to select on the toolbox.</param>
		<remarks>
			<para>This will throw an exception if the class you are requesting is not on the 
       toolbox.</para>
		</remarks>
	</doc>
	<doc for="INewToolboxService.Refresh">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="INewToolboxService.SetCursor">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="INewToolboxService.CategoryNames">
		<summary>
			<para>Gets or sets the collection of toolbox item category names.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Design.CategoryNameCollection"/> that contains the names of the toolbox 
   item categories.</para>
		</value>
		<remarks>
			<para>This property contains a collection of names for categories of toolbox 
      items that are displayed as category titles in the toolbox.</para>
		</remarks>
	</doc><doc for="INewToolboxService.SelectedCategory">
		<summary>
			<para>Gets or sets the currently selected category of toolbox items.</para>
		</summary>
		<value>
			<para>The name of the currently selected toolbox item category.</para>
		</value>
		<remarks>
			<para>The currently selected category of toolbox items will be the category of 
      toolbox items that is currently expanded in the toolbox window. </para>
		</remarks>
	</doc><doc for="INewToolboxService.AddLinkedToolboxItem">
		<overload>
			<para>Adds the specified designer-linked toolbox item to the service.</para>
		</overload>
		<summary>
			<para>Adds the specified designer-linked toolbox item of the specified type to the 
      service, using the specified designer host.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to add to the service.</param>
		<param name=" host">The current designer host.</param>
		<remarks>
			<para>A designer-linked toolbox item will be persisted with the designer, and 
      removed from the toolbox when the designer is no longer active.</para>
		</remarks>
	</doc><doc for="INewToolboxService.AddLinkedToolboxItem1">
		<summary>
			<para>Adds the specified designer-linked toolbox item of the specified type to the service, using the 
      specified toolbox item category and designer host.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to add to the service.</param>
		<param name=" category">The toolbox item category for the toolbox item.</param>
		<param name=" host"><para> The current designer host.</para></param>
		<remarks>
			<para>A designer-linked toolbox item will be persisted with the designer, and removed from the 
      toolbox when the designer is no longer active.</para>
		</remarks>
	</doc><doc for="INewToolboxService.AddToolboxItem">
		<overload>
			<para>Adds a toolbox item to the service.</para>
		</overload>
		<summary>
			<para>Adds the specified toolbox item to the service.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to add to the service.</param>
	</doc><doc for="INewToolboxService.AddToolboxItem1">
		<summary>
			<para>Adds the specified toolbox item to the service using the 
      specified toolbox item category.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to add to the service.</param>
		<param name=" category">The toolbox item category for the toolbox item. </param>
	</doc><doc for="INewToolboxService.DeserializeToolboxItem">
		<overload>
			<para>Deserializes the specified object.</para>
		</overload>
		<summary>
			<para>Deserializes the specified object.</para>
		</summary>
		<param name="serializedObject">The object to deserialize.</param>
		<returns>
			<para>The <see cref="System.Drawing.Design.ToolboxItem"/> that was deserialized.</para>
		</returns>
	</doc><doc for="INewToolboxService.DeserializeToolboxItem1">
		<summary>
			<para>Deserializes the specified object, using the specified designer host.</para>
		</summary>
		<param name="serializedObject">The object to deserialize.</param>
		<param name=" host">The current designer host.</param>
		<returns>
			<para>The <see cref="System.Drawing.Design.ToolboxItem"/> that was deserialized.</para>
		</returns>
	</doc><doc for="INewToolboxService.GetSelectedToolboxItem">
		<overload>
			<para>Gets the selected toolbox item.</para>
		</overload>
		<summary>
			<para>Gets the selected toolbox item.</para>
		</summary>
		<returns>
			<para>The selected <see cref="System.Drawing.Design.ToolboxItem"/>.</para>
		</returns>
	</doc><doc for="INewToolboxService.GetSelectedToolboxItem1">
		<summary>
			<para>Gets the selected toolbox item, using the specified designer host.</para>
		</summary>
		<param name="host">The current designer host.</param>
		<returns>
			<para>The selected <see cref="System.Drawing.Design.ToolboxItem"/>.</para>
		</returns>
	</doc><doc for="INewToolboxService.GetToolboxItems2">
		<summary>
			<para>Gets the toolbox items that have been added to the 
      service and are within the specified toolbox item category.</para>
		</summary>
		<param name="categpry">The category to retrieve the toolbox items within.</param>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the toolbox items.</para>
		</returns>
	</doc><doc for="INewToolboxService.GetToolboxItems3">
		<summary>
			<para>Gets the toolbox items that have been added to the 
      service and are within the specified toolbox item category.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the toolbox items.</para>
		</returns>
	</doc><doc for="INewToolboxService.IsSupported">
		<summary>
			<para>Indicates whether the specified toolbox item is supported.</para>
		</summary>
		<param name="serializedObject">The serialized object to determine the toolbox support for.</param>
		<param name=" host">The current designer host.</param>
	</doc><doc for="INewToolboxService.IsToolboxItem">
		<overload>
			<para>Indicates whether the specified object is a toolbox item.</para>
		</overload>
		<summary>
			<para>Indicates whether the specified object is a toolbox item.</para>
		</summary>
		<param name="serializedObject"> The object to test.</param>
		<returns>
			<para><see langword="true"/> if the object is a toolbox item; otherwise, 
<see langword="false"/>.</para>
		</returns>
	</doc><doc for="INewToolboxService.IsToolboxItem1">
		<summary>
			<para>Indicates whether the specified object is a toolbox item.</para>
		</summary>
		<param name="serializedObject">The object to test.</param>
		<param name=" host">The current designer host.</param>
		<returns>
			<para><see langword="true"/> if the object is a toolbox item; otherwise, 
<see langword="false"/>.</para>
		</returns>
	</doc><doc for="INewToolboxService.AddCreator">
		<overload>
			<para>Adds the specified toolbox item creator.</para>
		</overload>
		<summary>
			<para>Adds the specified toolbox item creator using the 
      specified format string.</para>
		</summary>
		<param name="creator">A <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/> to add to the service.</param>
		<param name=" format">The format of the creator callback function's method signature.</param>
	</doc><doc for="INewToolboxService.AddCreator1">
		<summary>
			<para>Adds the specified toolbox item creator using the 
      specified format string and designer host</para>
		</summary>
		<param name="creator">A <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/> to add to the service.</param>
		<param name=" format">The format of the creator callback function's method signature.</param>
		<param name=" host">The current designer host.</param>
	</doc><doc for="INewToolboxService.RemoveCreator">
		<overload>
			<para>Removes the specified toolbox item creator. </para>
		</overload>
		<summary>
			<para>Removes the toolbox item creator that matches the 
      specified method signature.</para>
		</summary>
		<param name="format">The format of the method signature of the creator callback function to remove.</param>
	</doc><doc for="INewToolboxService.RemoveCreator1">
		<summary>
			<para>Removes the toolbox item creator that matches the 
      specified method signature and designer host.</para>
		</summary>
		<param name="format"></param>
		<param name=" host"></param>
	</doc><doc for="INewToolboxService.RemoveToolboxItem">
		<overload>
			<para>Removes the specified toolbox item from the service.</para>
		</overload>
		<summary>
			<para>Removes the specified toolbox item from the service.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to remove.</param>
	</doc><doc for="INewToolboxService.RemoveToolboxItem1">
		<summary>
			<para>Removes the specified toolbox item from the service.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to remove.</param>
		<param name=" category">The category of the toolbox item to remove.</param>
	</doc><doc for="INewToolboxService.SelectedToolboxItemUsed">
		<summary>
			<para>Sets a flag that indicates that the selected toolbox 
      item has been used.</para>
		</summary>
	</doc><doc for="INewToolboxService.SerializeToolboxItem">
		<summary>
			<para>Serializes the specified toolbox item.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to serialize.</param>
		<returns>
			<para>The serialized object.</para>
		</returns>
	</doc><doc for="INewToolboxService.SetSelectedToolboxItem">
		<summary>
			<para>Selects the specified toolbox item.</para>
		</summary>
		<param name="toolboxItem">The toolbox item to select.</param>
	</doc><doc for="INewToolboxService.GetToolboxItems1">
		<summary>
			<para>Gets the toolbox items that have been added to the service.</para>
		</summary>
		<param name="host"></param>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the toolbox items.</para>
		</returns>
		<remarks>
			<para>This method will retrieve the toolbox items that have been added to the 
      service, including those toolbox items which have a custom format and have been
      provided by the specified designer host.</para>
		</remarks>
	</doc><doc for="INewToolboxService.GetToolboxItems">
		<overload>
			<para> Gets the toolbox items that have been added to the service.</para>
		</overload>
		<summary>
			<para> Gets the toolbox items that have been added to the service.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the toolbox items.</para>
		</returns>
		<remarks>
			<para>This method will retrieve the toolbox items that have been added to the 
      service except those that are dependent upon a custom designer.</para>
		</remarks>
	</doc><doc for="IToolboxService.SelectedToolboxItemUsed">
		<summary>
			<para>Notifies the toolbox service that the selected tool has been used.</para>
		</summary>
	</doc><doc for="IToolboxService.GetToolboxItems">
		<overload>
			<para>Gets a collection of toolbox items from the toolbox.</para>
		</overload>
		<summary>
			<para> Gets the entire collection of toolbox items 
      from the toolbox.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items.</para>
		</returns>
	</doc><doc for="IToolboxService.GetToolboxItems1">
		<summary>
			<para> Gets the collection of toolbox items that are associated 
      with the specified designer host from the toolbox.</para>
		</summary>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> that is associated with the toolbox items to retrieve.</param>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items 
   that are associated with the specified designer host.</para>
		</returns>
	</doc><doc for="IToolboxService.GetToolboxItems2">
		<summary>
			<para>Gets a collection of toolbox items from the toolbox that match the specified category.</para>
		</summary>
		<param name="category">The toolbox item category to retrieve all the toolbox items from.</param>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items
   that are associated with the specified category.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetToolboxItems3">
		<summary>
			<para>Gets the collection of toolbox items that are associated
      with the specified designer host and category from the toolbox.</para>
		</summary>
		<param name="category">The toolbox item category to retrieve the toolbox items from.</param>
		<param name=" host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> that is associated with the toolbox items to retrieve.</param>
		<returns>
			<para>A <see cref="System.Drawing.Design.ToolboxItemCollection"/> that contains the current toolbox items
   that are associated with the specified category and designer host.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.SetCursor">
		<summary>
			<para>Sets the current application's cursor to a cursor that represents the
      currently selected tool.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the cursor is set by the
   currently selected tool, <see langword="false"/>
   if there is no tool selected and the cursor is set
   to the standard windows cursor.</para>
		</returns>
		<remarks>
			<para>If no tool is selected, the cursor will default to the standard Windows cursor.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.AddToolboxItem1">
		<summary>
			<para>Adds the specified toolbox item to the toolbox in the specified category.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
		<param name=" category">The toolbox item category to add the <see cref="System.Drawing.Design.ToolboxItem"/> to.</param>
	</doc>
	<doc for="IToolboxService.DeserializeToolboxItem1">
		<summary>
			<para>Gets a toolbox item from the specified object that 
      represents a toolbox item in serialized
      form, using the specified designer host.</para>
		</summary>
		<param name="serializedObject">The object that contains the <see cref="System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
		<param name=" host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> to associate with this <see cref="System.Drawing.Design.ToolboxItem"/>. </param>
		<returns>
			<para>The <see cref="System.Drawing.Design.ToolboxItem"/> created from deserialization.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.IsSupported">
		<overload>
			<para>Gets a value indicating whether the specified object 
      which represents a serialized toolbox item can be used by the
      specified designer host.</para>
		</overload>
		<summary>
			<para>Gets a value indicating whether the specified object 
      which represents a serialized toolbox item can
      be used by the specified designer host.</para>
		</summary>
		<param name="serializedObject">The object that contains the <see cref="System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
		<param name=" host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> to test for support for the <see cref="System.Drawing.Design.ToolboxItem"/>.</param>
		<returns>
			<para><see langword="true"/> if the specified object is compatible with the
   specified designer host; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.IsSupported1">
		<summary>
			<para>Gets a value indicating whether the specified object 
      which represents a serialized toolbox item
      matches the specified attributes.</para>
		</summary>
		<param name="serializedObject">The object that contains the <see cref="System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
		<param name=" filterAttributes">An <see cref="System.Collections.ICollection"/> that contains the attributes to test the serialized object for.</param>
		<returns>
			<para><see langword="true"/> if the object matches the specified attributes;
   otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.IsToolboxItem">
		<overload>
			<para>Gets a value indicating whether the specified object is 
      a serialized toolbox item.</para>
		</overload>
		<summary>
			<para>Gets a value indicating whether the specified object is 
      a serialized toolbox item.</para>
		</summary>
		<param name="serializedObject">The object to inspect.</param>
		<returns>
			<para><see langword="true"/> if the object contains a
   toolbox item object; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.IsToolboxItem1">
		<summary>
			<para>Gets a value indicating whether the specified object is 
      a serialized toolbox item, using the specified designer host.</para>
		</summary>
		<param name="serializedObject">The object to inspect.</param>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> that is making this request.</param>
		<returns>
			<para><see langword="true"/> if the object contains a
   toolbox item object; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.RemoveToolboxItem">
		<overload>
			<para>Removes the specified toolbox item from the toolbox.</para>
		</overload>
		<summary>
			<para>Removes the specified toolbox item from the toolbox.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to remove from the toolbox.</param>
	</doc>
	<doc for="IToolboxService.RemoveToolboxItem1">
		<summary>
			<para>Removes the specified toolbox item from the toolbox.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to remove from the toolbox.</param>
		<param name=" category">The toolbox item category to remove the <see cref="System.Drawing.Design.ToolboxItem"/> from.</param>
	</doc>
	<doc for="IToolboxService.SerializeToolboxItem">
		<summary>
			<para>Gets a serializable object that represents the specified 
      toolbox item.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to serialize.</param>
		<returns>
			<para>An object that represents the specified <see cref="System.Drawing.Design.ToolboxItem"/>.</para>
		</returns>
		<remarks>
			<para>This method serializes the
      specified <see cref="System.Drawing.Design.ToolboxItem"/> to an object that can
      be persisted. The returned object can be stored in a stream or passed around in a
      drag-and-drop or clipboard operation.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.SetSelectedToolboxItem">
		<summary>
			<para>Selects the specified toolbox item.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to select.</param>
	</doc>
	<doc for="IToolboxService.CategoryNames">
		<summary>
			<para>Gets the names of all the tool categories currently on the toolbox.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Design.CategoryNameCollection"/> containing the tool categories.</para>
		</value>
		<seealso cref="System.Drawing.Design.CategoryNameCollection"/>
	</doc>
	<doc for="IToolboxService.SelectedCategory">
		<summary>
			<para>Gets or sets the name of the currently selected tool category from the toolbox.</para>
		</summary>
		<value>
			<para>The name of the currently selected category.</para>
		</value>
	</doc>
	<doc for="IToolboxService.AddLinkedToolboxItem">
		<overload>
			<para> Adds a project-linked toolbox item to the toolbox.</para>
		</overload>
		<summary>
			<para>Adds the specified project-linked toolbox item
      to the toolbox.</para>
		</summary>
		<param name="toolboxItem">The linked <see cref="System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
		<param name=" host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> for the current design document. </param>
		<remarks>
			<para>A linked toolbox item is a toolbox item that is only available for a specific 
      project.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService.AddToolboxItem">
		<overload>
			<para>Adds the specified toolbox item to the toolbox.</para>
		</overload>
		<summary>
			<para>Adds the specified toolbox item to the toolbox.</para>
		</summary>
		<param name="toolboxItem">The <see cref="System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
	</doc>
	<doc for="IToolboxService.DeserializeToolboxItem">
		<overload>
			<para>Gets a toolbox item from the specified object that
      represents a toolbox item in serialized
      form.</para>
		</overload>
		<summary>
			<para>Gets a toolbox item from the specified object that
      represents a toolbox item in serialized form.</para>
		</summary>
		<param name="serializedObject">The object that contains the <see cref="System.Drawing.Design.ToolboxItem"/> to retrieve.</param>
		<returns>
			<para>The <see cref="System.Drawing.Design.ToolboxItem"/> created from the serialized object.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetSelectedToolboxItem">
		<overload>
			<para>Gets the currently selected toolbox item.</para>
		</overload>
		<summary>
			<para>Gets the currently selected toolbox item.</para>
		</summary>
		<returns>
			<para> The <see cref="System.Drawing.Design.ToolboxItem"/> that is currently selected, 
   or <see langword="null"/> if no toolbox item has been selected.</para>
		</returns>
	</doc>
	<doc for="IToolboxService.GetSelectedToolboxItem1">
		<summary>
			<para> Gets the currently selected toolbox item if it is available
      to all designers, or if it supports the specified designer.</para>
		</summary>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> that the selected tool must be associated with for it to be returned.</param>
		<returns>
			<para> The <see cref="System.Drawing.Design.ToolboxItem"/> that is currently selected, 
   or <see langword="null"/> if no toolbox item is currently selected.</para>
		</returns>
		<remarks>
			<para>This method returns the currently selected
   <see cref="System.Drawing.Design.ToolboxItem"/> if it is not designer specific,
      and only returns a designer-specific currently selected
   <see cref="System.Drawing.Design.ToolboxItem"/> if the type of the designer host specified
      in the <paramref name="host"/> parameter matches the
      type of designer that the currently selected <see cref="System.Drawing.Design.ToolboxItem"/> supports. </para>
		</remarks>
	</doc>
	<doc for="IToolboxService.RemoveCreator">
		<overload>
			<para>Removes a previously added toolbox item creator.</para>
		</overload>
		<summary>
			<para>Removes a previously added toolbox item creator of the specified data format.</para>
		</summary>
		<param name="format">The data format of the creator to remove. </param>
	</doc>
	<doc for="IToolboxService.RemoveCreator1">
		<summary>
			<para> Removes a previously added toolbox creator that
      is associated with the specified data format and the specified designer host.</para>
		</summary>
		<param name="format">The data format of the creator to remove. </param>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> that is associated with the creator to remove. </param>
	</doc>
	<doc for="IToolboxService.AddCreator">
		<overload>
			<para>Adds a new toolbox item creator for a specified data format.</para>
		</overload>
		<summary>
			<para>Adds a new toolbox item creator for a specified data format.</para>
		</summary>
		<param name="creator">A <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/> that can create a component when the toolbox item is invoked.</param>
		<param name="format"> The data format that the creator handles.</param>
		<remarks>
			<para> A toolbox item creator can convert data of a particular
      data format that has been pasted or dropped on the toolbox into a <see cref="System.Drawing.Design.ToolboxItem"/>. If a creator
      handles more than one format, call <see cref="System.Drawing.Design.IToolboxService.AddCreator"/> more
      than once. Unexpected behavior may result if you add more than one creator for
      the same format. </para>
		</remarks>
		<seealso cref="System.Drawing.Design.ToolboxItemCreatorCallback"/>
	</doc>
	<doc for="IToolboxService.AddCreator1">
		<summary>
			<para> Adds a new toolbox item creator for a specified data format and
      designer host.</para>
		</summary>
		<param name="creator">A <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/> that can create a component when the toolbox item is invoked.</param>
		<param name="format"> The data format that the creator handles.</param>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> that represents the designer host to associate with the creator.</param>
		<remarks>
			<para> A toolbox item creator can convert data of a particular
      data format that has been pasted or dropped on the toolbox into a
   <see cref="System.Drawing.Design.ToolboxItem"/> . If a creator handles more than one format, call <see cref="System.Drawing.Design.IToolboxService.AddCreator"/> more than once. 
      Unexpected behavior may result if you add more than one creator for the same
      format.</para>
			<para> If the <paramref name="host"/> parameter is set to <see langword="null"/>, the creator will be available to all 
   designers. If a designer host is supplied, the creator will only be available to
   designers using the specified host.</para>
		</remarks>
		<seealso cref="System.Drawing.Design.ToolboxItemCreatorCallback"/>
	</doc>
	<doc for="IToolboxService.AddLinkedToolboxItem1">
		<summary>
			<para>Adds the specified project-linked toolbox item to the toolbox in the specified category.</para>
		</summary>
		<param name="toolboxItem">The linked <see cref="System.Drawing.Design.ToolboxItem"/> to add to the toolbox.</param>
		<param name=" category">The toolbox item category to add the toolbox item to.</param>
		<param name=" host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
		<remarks>
			<para>A linked toolbox item is a toolbox item that is only available for a specific
      project.</para>
		</remarks>
	</doc>
	<doc for="IToolboxService">
		<summary>
			<para> Provides methods and properties to manage and query the toolbox in the development environment.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Drawing.Design.IToolboxService"/> interface provides properties and methods
   for adding and removing toolbox items and toolbox creator callback delegates,
   serializing and deserializing toolbox items, and retrieving toolbox
   state information and managing toolbox state.</para>
You can retrieve information about
the contents of the toolbox with the following methods:
<list type="bullet"><item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.CategoryNames"/> property indicates the
      categories currently available on the toolbox.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.SelectedCategory"/> property indicates the
      currently selected toolbox category.</term>
				</item>
				<item>
					<term>
      The <see cref="System.Drawing.Design.IToolboxService.GetToolboxItems"/> method retrieves the
      items on the toolbox, optionally filtered by a specified toolbox category.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.GetSelectedToolboxItem"/> method retrieves the
      currently selected <see cref="System.Drawing.Design.ToolboxItem"/>.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.SetSelectedToolboxItem"/> method selects the
      specified <see cref="System.Drawing.Design.ToolboxItem"/> as the
      current toolbox item.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.IsSupported"/> method indicates
      whether the specified serialized object, if it is a <see cref="System.Drawing.Design.ToolboxItem"/>, is supported by the specified designer
      host, or whether it matches the specified attributes.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.IsToolboxItem"/> method indicates
      whether the specified serialized object is a <see cref="System.Drawing.Design.ToolboxItem"/>.</term>
				</item>
			</list>
			<para> You can add and remove toolbox items with
   the following methods:</para>
			<list type="bullet"><item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.AddToolboxItem"/> method adds a <see cref="System.Drawing.Design.ToolboxItem"/> to the
      toolbox, creating the optionally specified category if it does not exist.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.AddLinkedToolboxItem"/> method adds a <see cref="System.Drawing.Design.ToolboxItem"/> that is
      only enabled for the current project to the toolbox.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.RemoveToolboxItem"/> method removes the
      specified <see cref="System.Drawing.Design.ToolboxItem"/>.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.AddCreator"/> method adds
      a <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/> delegate
      capable of converting some type of data
      stored on the toolbox to a <see cref="System.Drawing.Design.ToolboxItem"/>.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.RemoveCreator"/> method removes any
   <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/>
   delegates for the specified data type.</term>
				</item>
			</list>
			<para> You can refresh the toolbox, mark a toolbox item as
   used, or set the mouse cursor to a cursor that represents the current
   toolbox item using the following methods:</para>
			<list type="bullet"><item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.Refresh"/> method refreshes the
      toolbox display to reflect the current state of the toolbox items.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.SelectedToolboxItemUsed"/> method signals the
      toolbox that the selected toolbox item has been used.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.SetCursor"/> method sets the mouse
      cursor to a cursor that represents the current toolbox item.</term>
				</item>
			</list>
			<para> You can use the toolbox to
   serialize or deserialize a toolbox item using the following methods:</para>
			<list type="bullet"><item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.DeserializeToolboxItem"/> method attemps to
      return a <see cref="System.Drawing.Design.ToolboxItem"/> from the
      specified serialized toolbox item object.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Drawing.Design.IToolboxService.SerializeToolboxItem"/> method returns a
      serialized object representing the specified <see cref="System.Drawing.Design.ToolboxItem"/>.</term>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example control demonstrates use of the <see cref="System.Drawing.Design.IToolboxService"/> in design mode to list and select toolbox
   categories and items, and to create components or controls from toolbox
   items and add them to a <see cref="System.Windows.Forms.Form"/> using code. Build the code and add it
   to the toolbox using the <SpecialLocalizableItem kind="UIElement">Customize Toolbox</SpecialLocalizableItem> command on the <SpecialLocalizableItem kind="UIElement">Tools</SpecialLocalizableItem> menu
in Visual Studio .NET. Create an instance of the <c>IToolboxServiceControl</c> on a form to test its behavior.</para>
			<codelink SampleID="IToolboxServiceExample1" SnippetID="1"/>
			<para>The following example provides a component that uses 
the <see cref="System.Drawing.Design.IToolboxService"/> to add a "Text" data format handler, 
or <see cref="System.Drawing.Design.ToolboxItemCreatorCallback"/>, to the 
toolbox. The data creator callback delegate passes any text 
data pasted to the toolbox and dragged onto a form to a custom <see cref="System.Drawing.Design.ToolboxItem"/> that creates a <see cref="System.Windows.Forms.TextBox"/> 
containing the text.</para>
			<codelink SampleID="ToolboxCreatorCallbackSample" SnippetID="1"/>
		</example>
	</doc>
</docs>
