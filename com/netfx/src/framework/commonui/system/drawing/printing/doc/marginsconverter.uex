<docs>
	<doc for="MarginsConverter">
		<summary>
			<para>Provides a <see cref="System.Drawing.Printing.MarginsConverter"/> for <see cref="System.Drawing.Printing.Margins"/>.</para>
		</summary>
		<remarks>
			<para><see cref="System.Drawing.Printing.MarginsConverter"/> provides methods that can convert a 
    string to a <see cref="System.Drawing.Printing.Margins"/>.</para>
			<note type="note">
    You should never access a type converter
    directly. Instead, call the appropriate converter by using <see cref="T:System.ComponentModel.TypeDescriptor"/>. For more information, see the
    examples in the <see cref="T:System.ComponentModel.TypeConverter"/> base class.
 </note>
			<para> For more information about type converters, see the 
 <see cref="T:System.ComponentModel.TypeConverter"/> base class and
 <see topic="cpconImplementingTypeConverter"/>. </para>
			<para>For more information on printing, see the <see cref="System.Drawing.Printing"/> 
 namespace overview.</para>
		</remarks>
		<seealso cref="System.Drawing.Printing.Margins"/>
		<seealso cref="System.Drawing.Printing.PageSettings"/>
		<seealso cref="System.Drawing.Printing.PrintDocument"/>
		<keyword term="conversions"/>
		<keyword term="print"/>
		<keyword term="printing"/>
	</doc>
	<doc for="MarginsConverter.ConvertTo">
		<overload>
			<para>Converts the given value object to the specified destination type.</para>
		</overload>
		<summary>
			<para>Converts the given value object to
       the specified destination type using the specified context and arguments.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name=" culture">A <see cref="T:System.Globalization.CultureInfo"/> that provides the language to convert to.</param>
		<param name="value">The <see cref="T:System.Object"/> to convert.</param>
		<param name="destinationType">The <see cref="T:System.Type"/> to which to convert the value.</param>
		<returns>
			<para>An <see cref="T:System.Object"/> that represents 
    the converted value.</para>
		</returns>
		<exception cref="T:System.ArgumentNullException">The <paramref name="destinationType "/>is <see langword="null"/>.</exception>
		<exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information about 
    the environment from which this converter is being invoked. This can be
 <see langword="null"/>, so always check. Also, properties on the context object 
    can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="T:System.Globalization.CultureInfo"/>
		<seealso cref="T:System.ComponentModel.ITypeDescriptorContext"/>
		<seealso cref="T:System.Object"/>
		<seealso cref="T:System.Type"/>
	</doc>
	<doc for="MarginsConverter.CanConvertTo">
		<overload>
			<para>Returns whether this converter can convert an object to the given destination type.</para>
		</overload>
		<summary>
			<para> Returns whether this converter can
      convert an object to the given destination type using the context.</para>
		</summary>
		<param name="context"><para>An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that provides a format context. </para></param>
		<param name="destinationType">A <see cref="System.Type"/> that represents the type to which you want to convert.</param>
		<returns>
			<para><see langword="true "/>if this converter can perform the conversion; otherwise,
   <see langword="false"/>. </para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional information about
   the environment from which this converter is being invoked. This can be
   <see langword="null"/>, so always check. Also, properties on the context object
   can return <see langword="null"/>.</para>
			<note type="inheritinfo">
   Override this method to provide your own conversion requirements.
   </note>
		</remarks>
		<seealso cref="System.ComponentModel.ITypeDescriptorContext"/>
	</doc><doc for="MarginsConverter.CanConvertFrom">
		<overload>
			<para> Returns whether this converter can convert an object of the specified source type to the native type of the converter.</para>
		</overload>
		<summary>
			<para> Returns whether this converter can convert an object of the specified source type to the native
 type of the converter using the specified context.</para>
		</summary>
		<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
		<param name="sourceType">A <see cref="T:System.Type"/> that represents the type from which you want to convert.</param>
		<returns>
			<para><see langword="true "/>if an object can perform the
 conversion; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional
 information about the environment from which this converter is being
 invoked. This can be <see langword="null"/>, so always check.
 Also, properties on the context object can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="T:System.Globalization.CultureInfo"/>
		<seealso cref="T:System.ComponentModel.ITypeDescriptorContext"/>
		<seealso cref="T:System.Type"/>
	</doc>
	<doc for="MarginsConverter.ConvertFrom">
		<overload>
			<para>Converts the specified object to the converter's native type.</para>
		</overload>
		<summary>
			<para>Converts the specified object to the converter's native type.</para>
		</summary>
		<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
		<param name=" culture">A <see cref="T:System.Globalization.CultureInfo"/> that provides the language to convert to.</param>
		<param name="value">The <see cref="T:System.Object"/> to convert.</param>
		<returns>
			<para>An <see cref="T:System.Object"/> that
 represents the converted value.</para>
		</returns>
		<exception cref="T:System.ArgumentException">The <paramref name="value"/> parameter did not contain values for all four margins. For example, "100,100,100,100" specifies 1 inch for the left, right, top, and bottom margins.</exception>
		<exception cref="T:System.NotSupportedException">The conversion could not be performed.</exception>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional
 information about the environment from which this converter is being
 invoked. This can be <see langword="null"/>, so always check.
 Also, properties on the context object can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="T:System.Globalization.CultureInfo"/>
		<seealso cref="T:System.ComponentModel.ITypeDescriptorContext"/>
		<seealso cref="T:System.Object"/>
	</doc>
	<doc for="MarginsConverter.CreateInstance">
		<overload>
			<para>Creates an <see cref="T:System.Object"/>.</para>
		</overload>
		<summary>
			<para>Creates an <see cref="T:System.Object"/> given a set
 of property values for the object.</para>
		</summary>
		<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
		<param name="propertyValues">An <see cref="T:System.Collections.IDictionary"/> of new property values.</param>
		<returns>
			<para>An <see cref="T:System.Object"/> representing
 the specified <see cref="T:System.Collections.IDictionary"/>; or <see langword="null"/> if the object cannot be created.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional
 information about the environment from which this converter is being
 invoked. This can be <see langword="null"/>, so always check.
 Also, properties on the context object can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="T:System.Collections.IDictionary"/>
		<seealso cref="T:System.ComponentModel.ITypeDescriptorContext"/>
		<seealso cref="T:System.Object"/>
	</doc>
	<doc for="MarginsConverter.GetCreateInstanceSupported">
		<overload>
			<para> Returns whether changing a value on this
 object requires a call to <see cref="System.Drawing.Printing.MarginsConverter.CreateInstance"/> to create a
 new value.</para>
		</overload>
		<summary>
			<para> Returns whether changing a value on this
 object requires a call to <see cref="System.Drawing.Printing.MarginsConverter.CreateInstance"/> to create a
 new value, using the specified context.</para>
		</summary>
		<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
		<returns>
			<para><see langword="true"/> if changing a property on this
 object requires a call to <see cref="System.Drawing.Printing.MarginsConverter.CreateInstance"/> to create a new
 value; otherwise, <see langword="false"/>. This method always returns
<see langword="true"/>.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> parameter can be used to extract additional
 information about the environment from which this converter is being
 invoked. This can be <see langword="null"/>, so always check. Also,
 properties on the context object can return <see langword="null"/>.</para>
		</remarks>
		<seealso cref="System.Drawing.Printing.MarginsConverter.CreateInstance"/>
		<seealso cref="T:System.ComponentModel.ITypeDescriptorContext"/>
	</doc>
</docs>
