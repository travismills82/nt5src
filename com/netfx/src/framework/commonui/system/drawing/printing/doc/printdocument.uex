<docs>
	<doc for="PrintDocument.ToString">
		<internalonly/>
		<summary>
			<para>
       Provides some interesting information about the PrintDocument in
       String form.
    </para>
		</summary>
		<returns>
			<para>
       A String.
    </para>
		</returns>
	</doc>
	<doc for="PrintDocument.PrintController">
		<summary>
			<para> Gets or sets the print controller
      that guides the printing process.</para>
		</summary>
		<value>
			<para>The <see cref="System.Drawing.Printing.PrintController"/> that guides the printing process. The
   default is a new instance of the <see cref="T:System.Windows.Forms.PrintControllerWithStatusDialog"/> class.</para>
		</value>
		<remarks>
			<para>A print controller guides the printing process in several ways. For example, to print a document, you need to
      convert it to a <see cref="T:System.Drawing.Graphics"/> object. A <see cref="System.Drawing.Printing.PrintController"/>
      specifies where to draw the graphic in an image
      for a print preview or on a printer to actually print the
      document. A print controller can also specify whether to print a document immediately, or wait
      a specified interval.</para>
		</remarks>
		<permission cref="System.Drawing.Printing.PrintingPermission">for safe printing from a restricted dialog box. Associated enumeration: <see cref="System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" qualify="true"/></permission>
		<example>
			<para>The following example assumes you have created an instance of the <see cref="System.Drawing.Printing.PrintDocument"/> 
class that is named <c>myPrintDocument</c> .
The example creates a new instance of the <see cref="System.Drawing.Printing.PrintController"/> class,
assigns it to the <see cref="System.Drawing.Printing.PrintDocument.PrintController"/> property of
myPrintDocument, and prints the
document.</para>
			<para>Use the <see cref="System.Drawing.Printing"/> and <see cref="N:System.Windows.Forms"/> namespaces for
this example.</para>
			<codelink SampleID="Classic PrintDocument.PrintController Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Printing.PrintDocument.DefaultPageSettings"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.DocumentName"/>
		<seealso cref="System.Drawing.Printing.PreviewPrintController"/>
		<seealso cref="System.Drawing.Printing.PrintController"/>
		<seealso cref="T:System.Windows.Forms.PrintControllerWithStatusDialog"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.PrinterSettings"/>
		<seealso cref="System.Drawing.Printing.StandardPrintController"/>
	</doc>
	<doc for="PrintDocument.PrinterSettings">
		<summary>
			<para> Gets or sets the printer that
      prints the document.</para>
		</summary>
		<value>
			<para>A <see cref="System.Drawing.Printing.PrinterSettings"/> that specifies
   where and how the document is printed. The default is a
<see cref="System.Drawing.Printing.PrinterSettings"/> with its properties set to their default values.</para>
		</value>
		<remarks>
			<para> You can specify several printer settings
      through the <see cref="System.Drawing.Printing.PrintDocument.PrinterSettings"/> property. For
      example, use the <see cref="System.Drawing.Printing.PrinterSettings.Copies" qualify="true"/> property to specify the number of
      copies you want to print, the <see cref="System.Drawing.Printing.PrinterSettings.PrinterName" qualify="true"/> property to specify the printer to use,
      and the <see cref="System.Drawing.Printing.PrinterSettings.PrintRange" qualify="true"/> property to specify the range of
      pages you want to print.</para>
		</remarks>
		<example>
			<para> The following example prints a
      document on the specified printer. The example makes three assumptions: that
      a variable names <c>filePath</c> has
   been set to the path of the file to print; that a method named <c>pd_PrintPage</c>, which handles the
<see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> event, has been defined; and that a
variable named <c>printer</c> has been set to the
printer's name. </para>
			<para>Use the <see cref="N:System.Drawing"/>, <see cref="N:System.Drawing.Printing"/>, and
<see cref="N:System.IO"/> namespaces for
this example. </para>
			<codelink SampleID="Classic PrintDocument.PrinterSettings Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Printing.PrintDocument.DefaultPageSettings"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.DocumentName"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.PrintController"/>
		<seealso cref="System.Drawing.Printing.PrinterSettings"/>
	</doc>
	<doc for="PrintDocument.OnBeginPrint">
		<summary>
			<para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint"/> event.
   It is called after the <see cref="System.Drawing.Printing.PrintDocument.Print"/> method is called and
   before the first page of the document
   prints.</para>
		</summary>
		<param name="e">A <see cref="System.Drawing.Printing.PrintEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Drawing.Printing.PrintDocument.OnBeginPrint"/> method allows
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<para>When a derived class calls the <see cref="System.Drawing.Printing.PrintDocument.OnBeginPrint"/> method,
it raises the <see cref="E:System.Drawing.Printing.PrintDocument.BeginPrint"/> event by invoking the
event handler through a delegate. For more information, see
<see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Drawing.Printing.PrintDocument.OnBeginPrint"/> in a derived class, be
   sure to call the base class's <see cref="System.Drawing.Printing.PrintDocument.OnBeginPrint"/> method
   so that registered delegates receive the event. This method is a good place for
   initialization.
   
</note>
		</remarks>
		<seealso cref="System.Drawing.Printing.PrintDocument.BeginPrint"/>
		<seealso cref="System.Drawing.Printing.PrintEventArgs"/>
	</doc>
	<doc for="PrintDocument.OnEndPrint">
		<summary>
			<para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint"/> event. It is called
   when the last page of the document has
   printed.</para>
		</summary>
		<param name="e">A <see cref="System.Drawing.Printing.PrintEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Drawing.Printing.PrintDocument.OnEndPrint"/> method allows derived
   classes to handle the event without attaching a delegate. This is the preferred
   technique for handling the event in a derived class. The <see cref="System.Drawing.Printing.PrintDocument.OnEndPrint"/>
   method is also called if the printing process is
   canceled or an exception occurs during the printing process. </para>
			<para>When a derived class calls the <see cref="System.Drawing.Printing.PrintDocument.OnEndPrint"/> method,
it raises the <see cref="E:System.Drawing.Printing.PrintDocument.EndPrint"/> event by invoking the
event handler through a delegate. For more information, see
<see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
   When overriding <see cref="System.Drawing.Printing.PrintDocument.OnEndPrint"/> in a derived class, be
   sure to call the base class's <see cref="System.Drawing.Printing.PrintDocument.OnEndPrint"/> method so that registered
   delegates receive the event. This method is a good place for
   uninitialization.
</note>
		</remarks>
		<seealso cref="System.Drawing.Printing.PrintDocument.EndPrint"/>
		<seealso cref="System.Drawing.Printing.PrintEventArgs"/>
	</doc>
	<doc for="PrintDocument.OnQueryPageSettings">
		<summary>
			<para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings"/> event. It is called
   immediately before each <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.Drawing.Printing.QueryPageSettingsEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Drawing.Printing.PrintDocument.OnQueryPageSettings"/> method also allows
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<para>When a derived class calls the <see cref="System.Drawing.Printing.PrintDocument.OnQueryPageSettings"/> method, it raises the
<see cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings"/> event by invoking the event handler through a delegate. For more 
information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Drawing.Printing.PrintDocument.OnQueryPageSettings"/> in a derived class, be
   sure to call the base class's <see cref="System.Drawing.Printing.PrintDocument.OnQueryPageSettings"/> method
   so that registered delegates receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Drawing.Printing.QueryPageSettingsEventArgs"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.QueryPageSettings"/>
	</doc>
	<doc for="PrintDocument.DefaultPageSettings">
		<summary>
			<para> Gets or sets page settings
      that are
      used
      as defaults for all pages to be printed.</para>
		</summary>
		<value>
			<para> A <see cref="System.Drawing.Printing.PageSettings"/> that specifies the default page settings for the document.</para>
		</value>
		<remarks>
			<para> You can specify several default page settings through the <see cref="System.Drawing.Printing.PrintDocument.DefaultPageSettings"/> property. For example, the <see cref="System.Drawing.Printing.PageSettings.Color" qualify="true"/> property specifies whether the page
   prints in color, the <see cref="System.Drawing.Printing.PageSettings.Landscape" qualify="true"/>
   property
   specifies landscape or portrait orientation, and the <see cref="System.Drawing.Printing.PageSettings.Margins" qualify="true"/> property specifies the
   margins of the page. </para>
			<para> To specify settings on a page-by-page basis, handle the <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> or <see cref="System.Drawing.Printing.PrintDocument.QueryPageSettings"/> event and modify the
<see cref="System.Drawing.Printing.PrintPageEventArgs.PageSettings"/> 
argument included in the <see cref="System.Drawing.Printing.PrintPageEventArgs"/> or <see cref="System.Drawing.Printing.QueryPageSettingsEventArgs"/>, respectively.</para>
			<note type="note">
   After printing has started, changes to page settings through the <see cref="System.Drawing.Printing.PrintDocument.DefaultPageSettings"/> property will not
   affect pages being printed.
</note>
		</remarks>
		<example>
			<para>The following example sets a document's page orientation
      to landscape, and prints the document. The example makes three assumptions: that
      a variable named <c>filePath</c> has
   been set to the path of the file to print; that a method named <c>pd_PrintPage</c>, which handles the
<see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> event, has been defined; 
and that a variable named <c>printer</c> has been set to
the printer's name.</para>
			<para>Use the <see cref="N:System.Drawing"/>, <see cref="N:System.Drawing.Printing"/>, and
<see cref="N:System.IO"/> namespaces for
this example. </para>
			<codelink SampleID="Classic PrintDocument.PrintDocument Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Drawing.Printing.PageSettings"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.PrintController"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.PrinterSettings"/>
	</doc>
	<doc for="PrintDocument.BeginPrint">
		<summary>
			<para>Occurs when the <see cref="System.Drawing.Printing.PrintDocument.Print"/> method is called and
   before the first page
   of
   the document prints.</para>
		</summary>
		<remarks>
			<para>Typically, you handle the <see cref="System.Drawing.Printing.PrintDocument.BeginPrint"/> event to initialize 
   fonts, file streams,
   and other resources used during the printing process.</para>
			<para>To associate the event with your event handler, add an instance of the
<see cref="System.Drawing.Printing.PrintEventHandler"/> delegate to the event. The event 
   handler is called whenever the event occurs. For more information about handling
   events with delegates, see <see topic="cpconEventsDelegates"/> .</para>
		</remarks>
		<seealso cref="T:System.Drawing.Printing.PrintEventHandler"/>
		<seealso cref="System.Drawing.Printing.PrintEventArgs"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.EndPrint"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings"/>
	</doc>
	<doc for="PrintDocument.EndPrint">
		<summary>
			<para>Occurs when the
      last page of the document has printed.</para>
		</summary>
		<remarks>
			<para>Typically, you handle the <see cref="System.Drawing.Printing.PrintDocument.EndPrint"/> event to release fonts, file streams, and other
   resources used during the printing process, like fonts.</para>
			<para>You indicate that there are no more pages to print by
   setting the <see cref="System.Drawing.Printing.PrintPageEventArgs.HasMorePages" qualify="true"/> property to
<see langword="false"/> in the <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> event. The <see cref="System.Drawing.Printing.PrintDocument.EndPrint"/> event also occurs if the 
   printing process is canceled or an exception occurs during the printing
   process.</para>
			<para>To associate the event with your event handler, add an
   instance of the <see cref="System.Drawing.Printing.PrintEventHandler"/> delegate to the event. The event
   handler is called whenever the event occurs. For more information about handling
   events with delegates, see <see topic="cpconEventsDelegates"/>
   .</para>
		</remarks>
		<seealso cref="System.Drawing.Printing.PrintEventHandler"/>
		<seealso cref="System.Drawing.Printing.PrintEventArgs"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.BeginPrint"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings"/>
	</doc>
	<doc for="PrintDocument.PrintPage">
		<summary>
			<para>Occurs when the output to print for the current page is needed. </para>
		</summary>
		<remarks>
			<para>To specify the output to print, use the <see cref="T:System.Drawing.Graphics"/> included in the <see cref="System.Drawing.Printing.PrintPageEventArgs"/> . For example, to specify a line of text
   that should be printed, draw the text using the <see cref="M:System.Drawing.Graphics.DrawString" qualify="true"/> method.</para>
			<para>In addition to specifying the ouput, you can indicate if
   there are additional pages to print by setting the <see cref="System.Drawing.Printing.PrintPageEventArgs.HasMorePages" qualify="true"/> property to
<see langword="true"/>. Individual page settings can also be modified 
   through the <see cref="System.Drawing.Printing.PageSettings"/> and the print job can be
   canceled by setting the <see cref="System.Drawing.Printing.PrintPageEventArgs.Cancel" qualify="true"/> property to
<see langword="true"/>. The default is <see langword="false"/>, which 
   indicates that there are no more pages to print. To print each page of a document using different page
   settings, handle the <see cref="System.Drawing.Printing.PrintDocument.QueryPageSettings"/> event. </para>
			<para>To associate the event with your event handler, add an instance of the
<see cref="System.Drawing.Printing.PrintPageEventHandler"/> delegate to the event. The event 
   handler is called whenever the event occurs. For more information about handling
   events with delegates, see <see topic="cpconEventsDelegates"/> .</para>
		</remarks>
		<example>
			<para>The following example prints the file that is specified
      through the command line to the default printer.</para>
			<note type="note">
      The example assumes that each line
      fits within the page width.
      
   </note>
			<para>Use the <see cref="N:System.ComponentModel"/>, <see cref="N:System.Drawing"/>, <see cref="N:System.Drawing.Printing"/>,
<see cref="N:System.IO"/>, and <see cref="N:System.Windows.Forms"/> namespaces for this example.</para>
			<codelink SampleID="Classic PrintDocument.PrintPage Example" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Drawing.Printing.PrintPageEventHandler"/>
		<seealso cref="System.Drawing.Printing.PrintPageEventArgs"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.BeginPrint"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.EndPrint"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.QueryPageSettings"/>
		<seealso cref="T:System.Drawing.Graphics"/>
	</doc>
	<doc for="PrintDocument.QueryPageSettings">
		<summary>
			<para>Occurs immediately before each <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> event.</para>
		</summary>
		<remarks>
			<para> It is possible to print each page of a document using
      different page settings. You set page settings by modifying individual
      properties of the <see cref="System.Drawing.Printing.QueryPageSettingsEventArgs.PageSettings" qualify="true"/> property or by setting the property to
      a <see cref="System.Drawing.Printing.PageSettings"/> . Changes made to the <see cref="System.Drawing.Printing.PageSettings"/>
      affect only the current page, not the document's default
      page settings. The print job can also be
      canceled by setting the <see cref="System.ComponentModel.CancelEventArgs.Cancel"/> property to
   <see langword="true"/> for the <see cref="System.Drawing.Printing.QueryPageSettingsEventArgs"/>
   .</para>
			<para>To associate the event with your event handler, add an instance of the
<see cref="System.Drawing.Printing.QueryPageSettingsEventHandler"/> delegate to the event. The event 
   handler is called whenever the event occurs. For more information about handling
   events with delegates, see <see topic="cpconEventsDelegates"/> .</para>
		</remarks>
		<example>
			<para> The following example prints a document with the first
      page in color, if the printer supports it. The example assumes that a <see cref="System.Drawing.Printing.PrintDocument"/> variable named <c> printDoc </c> has been created, and
   the <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> and <see cref="System.Drawing.Printing.PrintDocument.QueryPageSettings"/> events are handled. The
   <c>currentPageNumber</c> variable is
   incremented after every page is printed in the <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> event, which is not shown.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Drawing.Printing"/> namespaces for
this example. </para>
			<codelink SampleID="PaperSource and PaperSize Example with Resolution" SnippetID="6"/>
		</example>
		<seealso cref="System.Drawing.Printing.QueryPageSettingsEventHandler"/>
		<seealso cref="System.Drawing.Printing.PrintPageEventArgs"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.BeginPrint"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.EndPrint"/>
		<seealso cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/>
	</doc>
	<doc for="PrintDocument.OnPrintPage">
		<summary>
			<para>Raises the <see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/> event. It is
   called before a page
   prints.</para>
		</summary>
		<param name="e">A <see cref="System.Drawing.Printing.PrintPageEventArgs"/> that contains the event data.</param>
		<remarks>
			<para>The <see cref="System.Drawing.Printing.PrintDocument.OnPrintPage"/> method allows
   derived classes to handle the event without attaching a delegate. This is the
   preferred technique for handling the event in a derived class.</para>
			<para>When a derived class calls the <see cref="System.Drawing.Printing.PrintDocument.OnPrintPage"/> method, it raises the
<see cref="E:System.Drawing.Printing.PrintDocument.PrintPage"/> event by invoking the event handler through a delegate. For more 
information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Drawing.Printing.PrintDocument.OnPrintPage"/> in a derived class, be
   sure to call the base class's <see cref="System.Drawing.Printing.PrintDocument.OnPrintPage"/> method
   so that registered delegates receive the event.
   
</note>
		</remarks>
		<seealso cref="System.Drawing.Printing.PrintDocument.PrintPage"/>
		<seealso cref="System.Drawing.Printing.PrintPageEventArgs"/>
	</doc>
	<doc for="PrintDocument.DocumentName">
		<summary>
			<para> Gets or sets the document name to display (for example, in a
      print status dialog box or printer queue) while printing the
      document.</para>
		</summary>
		<value>
			<para> The
      document name to display while printing the document. The default is "document".</para>
		</value>
		<remarks>
			<para>The <see cref="System.Drawing.Printing.PrintDocument.DocumentName"/> property does not specify
   the file to print. Rather, you specify the output to print by handling the
<see cref="System.Drawing.Printing.PrintDocument.PrintPage"/>
event. For an example
of this, see the <see cref="System.Drawing.Printing.PrintDocument"/>
class overview.</para>
		</remarks>
		<example>
			<para> The following example prints a document with the first
      page in color, if the printer supports it, and sets the <see cref="System.Drawing.Printing.PrintDocument.DocumentName"/>
      to a user-friendly name. The example assumes that a <see cref="System.Drawing.Printing.PrintDocument"/> variable named <c> printDoc </c> has been created, and
   the <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> and <see cref="System.Drawing.Printing.PrintDocument.QueryPageSettings"/> events are handled.</para>
			<para>Use the <see cref="N:System.Drawing"/> and <see cref="N:System.Drawing.Printing"/> namespaces for
this example. </para>
			<codelink SampleID="PaperSource and PaperSize Example with Resolution" SnippetID="6"/>
		</example>
		<seealso cref="System.Drawing.Printing.PrintDocument"/>
		<seealso cref="System.Drawing.Printing.PrintDocument.PrintPage"/>
	</doc>
	<doc for="PrintDocument.Print">
		<summary>
			<para>Starts the document's printing process.</para>
		</summary>
		<exception cref="System.Drawing.Printing.InvalidPrinterException">The printer named in the <see cref="System.Drawing.Printing.PrinterSettings.PrinterName" qualify="true"/> property does not exist.</exception>
		<remarks>
			<para> Specify the output to print by handling the <see cref="System.Drawing.Printing.PrintDocument.PrintPage"/>
event and by using the <see cref="T:System.Drawing.Graphics"/>
included in the <see cref="System.Drawing.Printing.PrintPageEventArgs"/>
.</para>
			<para>Use the <see cref="System.Drawing.Printing.PrinterSettings.PrinterName" qualify="true"/> property to specify
which printer should print the document.</para>
			<para> The <see cref="System.Drawing.Printing.PrintDocument.Print"/> method prints the
document without using a print dialog. Use a <see cref="T:System.Windows.Forms.PrintDialog"/> when you want to offer the user the ability to choose print settings.</para>
			<note type="note">
   If an exception that is not handled by the
<see cref="System.Drawing.Printing.PrintDocument.Print"/>
method is thrown during
printing, the printing of the document is aborted.
</note>
		</remarks>
		<permission cref="System.Drawing.Printing.PrintingPermission">for safe printing from a restricted dialog box. Associated enumeration: <see cref="System.Drawing.Printing.PrintingPermissionLevel.SafePrinting" qualify="true"/></permission>
		<example>
			<para> The following example prints the file that is specified through the
      command line to the default printer.</para>
			<note type="note">
      The example assumes that each line
      fits within the page width.
      
   </note>
			<para>Use the <see cref="N:System.ComponentModel"/>, <see cref="N:System.Drawing"/>, <see cref="N:System.Drawing.Printing"/>,
<see cref="N:System.IO"/>, and <see cref="N:System.Windows.Forms"/> 
namespaces for this example.</para>
			<codelink SampleID="Classic PrintDocument.PrintPage Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="PrintDocument">
		<summary>
			<para> Defines a reusable object that sends output to a
      printer.</para>
		</summary>
		<remarks>
			<para> Typically, you create an instance of the <see cref="System.Drawing.Printing.PrintDocument"/> class, set the properties
   that describe how to print, and call the <see cref="System.Drawing.Printing.PrintDocument.Print"/> method to start the
   printing process. Handle the
<see cref="System.Drawing.Printing.PrintDocument.PrintPage"/> 
event where you specify the output to print, by using the <see cref="T:System.Drawing.Graphics"/> included in the
<see cref="System.Drawing.Printing.PrintPageEventArgs"/>.</para>
			<para>For more information on printing, see the <see cref="System.Drawing.Printing"/>
namespace overview.</para>
		</remarks>
		<example>
			<para>The following example prints the file named C:\My
      Documents\MyFile.txt on the default printer. To run the example, change the
      path to the file you want to print. You can also modify the <c>InitializeComponent</c>
   procedure through the Windows Forms
   Designer.</para>
			<note type="note">
   The example assumes that each line
   fits within the page width.
</note>
			<para>Use the <see cref="N:System.ComponentModel"/>, <see cref="N:System.Windows.Forms"/>, <see cref="N:System.Drawing"/>, <see cref="N:System.Drawing.Printing"/>,
and <see cref="N:System.IO"/>
namespaces for this example.</para>
			<codelink SampleID="Classic PrintDocument Example" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Drawing.Graphics"/>
		<seealso cref="System.Drawing.Printing.PageSettings"/>
		<seealso cref="System.Drawing.Printing.PrintController"/>
		<seealso cref="System.Drawing.Printing.PrinterSettings"/>
	</doc>
	<doc for="PrintDocument.OriginAtMargins">
		<summary>
			<para>Gets or sets a value indicating whether the position of a graphics object associated with a page is located just inside the user-specified margins or at the top-left corner of the printable area of the page.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the graphics origin starts at
   the page margins; <see langword="false"/> if the graphics origin is at the top-left
   corner of the printable page. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Calculating the area available to print requires knowing
      the physical size of the paper, the margins for the page, and the location of the <see cref="T:System.Drawing.Graphics"/> object origin.
      When <see cref="System.Drawing.Printing.PrintDocument.OriginAtMargins"/> is <see langword="true"/>, the
   <see cref="System.Drawing.Graphics"/>
   object location takes into account the <see cref="System.Drawing.Printing.PageSettings.Margins" qualify="true"/>
   property value and the printable area of the page.
   When <see cref="System.Drawing.Printing.PrintDocument.OriginAtMargins"/> is <see langword="false"/>, only the printable are of the page is used to determine the location of the <see cref="T:System.Drawing.Graphics"/>
   object origin, the <see cref="System.Drawing.Printing.PageSettings.Margins" qualify="true"/> value
   is ignored.</para>
			<para>For example, if <see cref="System.Drawing.Printing.PrintDocument.OriginAtMargins"/> is
<see langword="true"/>, and <see cref="System.Drawing.Printing.PageSettings.Margins" qualify="true"/> is set for 1 inch on each side, the <see cref="System.Drawing.Graphics"/> 
object included in the <see cref="System.Drawing.Printing.PrintPageEventArgs"/>
is located
1 inch from the left and top of the page. If the printable area of the
page is .25 of an inch on
each side and <see cref="System.Drawing.Printing.PrintDocument.OriginAtMargins"/> is <see langword="false"/>, the <see cref="System.Drawing.Graphics"/> object is located .25 of an inch from the left and top
of the page.</para>
			<note type="note">
   The printable area of a page varies
   from printer to printer and is not guaranteed to be symmetrical.
</note>
		</remarks>
	</doc>
	<doc for="PrintDocument.PrintDocument">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Drawing.Printing.PrintDocument"/>
class.</para>
		</summary>
		<remarks>
			<para>The default constructor initializes all fields based upon the default
      printer. Typically, after creating a new <see cref="System.Drawing.Printing.PrintDocument"/>, you set printer
      and page settings that affect the output through the <see cref="System.Drawing.Printing.PrintDocument.PrinterSettings"/> and <see cref="System.Drawing.Printing.PrintDocument.DefaultPageSettings"/> properties, respectively.</para>
		</remarks>
		<example>
			<para>The following example sets a document's page orientation to landscape, and
      prints the document.</para>
			<para>Use the <see cref="N:System.Drawing"/>, <see cref="N:System.Drawing.Printing"/>, and
<see cref="N:System.IO"/> namespaces for
   this example. </para>
			<codelink SampleID="Classic PrintDocument Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
