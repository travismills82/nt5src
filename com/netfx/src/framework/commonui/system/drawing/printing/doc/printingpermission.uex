<docs>
	<doc for="PrintingPermission.Copy">
		<summary>
			<para>Creates and returns an identical copy of the current permission
       object.</para>
		</summary>
		<returns>
			<para>A copy of the current permission object.</para>
		</returns>
		<remarks>
			<para>A copy of the permission object represents the same access to resources as 
       the original permission object.</para>
		</remarks>
	</doc>
	<doc for="PrintingPermission.ToXml">
		<summary>
			<para>Creates an XML encoding of the security object and its current
       state.</para>
		</summary>
		<returns>
			<para>An XML encoding of the security object, including any state
       information.</para>
		</returns>
	</doc>
	<doc for="PrintingPermission.FromXml">
		<summary>
			<para>Reconstructs a security object with a specified state from an XML
       encoding.</para>
		</summary>
		<param name="esd">The XML encoding to use to reconstruct the security object.</param>
		<returns>
			<para>None.</para>
		</returns>
	</doc>
	<doc for="PrintingPermission.PrintingPermission">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Drawing.Printing.PrintingPermission"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Drawing.Printing.PrintingPermission"/> class with either fully restricted
   or unrestricted access, as specified.</para>
		</summary>
		<param name="state"><para>One of the <see cref="T:System.Security.Permissions.PermissionState"/> values. </para></param>
		<exception cref="T:System.ArgumentException"><paramref name="state"/> is not a valid <see cref="T:System.Security.Permissions.PermissionState"/>.</exception>
		<remarks>
			<para>This constructor creates either the fully restricted
      (<see langword="None"/>) or the <see langword="Unrestricted"/> form of the
      permission.</para>
		</remarks>
	</doc><doc for="PrintingPermission.PrintingPermission1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Drawing.Printing.PrintingPermission"/> class with 
   the level of printing access specified.</para>
		</summary>
		<param name="printingLevel">One of the <see cref="System.Drawing.Printing.PrintingPermissionLevel"/> values.</param>
		<seealso cref="System.Drawing.Printing.PrintingPermissionLevel"/>
	</doc><doc for="PrintingPermission.Level">
		<summary>
			<para> Gets or sets the code's level of printing access.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Drawing.Printing.PrintingPermissionLevel"/> values.</para>
		</value>
		<seealso cref="System.Drawing.Printing.PrintingPermissionLevel"/>
	</doc><doc for="PrintingPermission.Intersect">
		<summary>
			<para>Creates and returns a permission that is the intersection of the current
      permission object and a target permission object.</para>
		</summary>
		<param name="target">A permission object of the same type as the current permission object. </param>
		<returns>
			<para> A new permission object that represents the intersection of
      the current object and the specified target. This object is <see langword="null"/> if
      the intersection is empty.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target"/> is an object that is not of the same type as the current permission object. </exception>
		<remarks>
			<para> The intersection of two
      permissions is a permission that describes the set of operations they both
      hold in common. Specifically, it represents the minimum permissions required for
      a demand to pass both permissions.</para>
		</remarks>
	</doc><doc for="PrintingPermission.Union">
		<summary>
			<para> Creates a permission that combines the permission
      object and the target permission object.</para>
		</summary>
		<param name="target">A permission object of the same type as the current permission object. </param>
		<returns>
			<para>A new permission object that represents the union of the current permission
      object and the specified permission object.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target"/> is an object that is not of the same type as the current permission object. </exception>
		<remarks>
			<para>The result of a call to <see cref="System.Security.Permissions.UIPermission.Union"/><see langword=" "/> is
   a permission that represents all the operations represented by the
   current permission object, and all the operations represented by the specified
   permission object.</para>
		</remarks>
	</doc><doc for="PrintingPermission">
		<summary>
			<para> Controls access to printers. This class cannot be inherited.</para>
		</summary>
		<seealso topic="cpconpermissions"/>
		<seealso topic="cpconrequestingpermissions"/>
	</doc><doc for="PrintingPermission.IsSubsetOf">
		<summary>
			<para>Determines whether the current permission object is a subset of
 the specified permission.</para>
		</summary>
		<param name="target">A permission object that is to be tested for the subset relationship. This object must be of the same type as the current permission object.</param>
		<returns>
			<para><see langword="true"/> if the current permission object
 is a subset of <paramref name="target"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="target"/> is an object that is not of the same type as the current permission object.</exception>
		<seealso cref="System.Drawing.Printing.PrintingPermissionLevel"/>
	</doc><doc for="PrintingPermission.IsUnrestricted">
		<summary>
			<para> Gets a value
      indicating whether the permission is unrestricted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if permission is unrestricted;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>An unrestricted permission object represents access to any and
      all resources protected by the permission.</para>
		</remarks>
	</doc></docs>
