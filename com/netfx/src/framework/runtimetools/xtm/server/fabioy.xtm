<schedule team='WFC.Server'>
  <person name='fabioy'>
    <area name='Managed properties'>
      <task name='Sub-class Collection value editor' milestone='cut' cost='3d' priority='cut' added='yannc@6/23/99@2:57:44 PM'>
        Add support to add new values of any primitive of type.
      </task>
      <task name='attribute/metadata' milestone='cut' cost='1d' priority='cut' added='erikc@2/16/99@3:26:32 PM'>
        Add a new attribute to mark a property as auto-managed.
      </task>
      <task name='Finish property browser UI' milestone='m4' cost='4d' status='done' priority='1' added='yannc@6/23/99@10:58:38 AM'>
        <progress milestone='m4' week='2' spent='2.5d'>
          Coding up initial UI design.
        </progress>
        <progress milestone='m4' week='3' spent='2.5d'>
          More managed properties.
        </progress>
        <progress milestone='m4' week='4' spent='2d'>
          Unfruitful time revising due to changes from WFC folks.
        </progress>
        <progress milestone='m4' week='6' spent='0.5d'>
          Continue working with WFC folks to try and unblock self.
        </progress>
        <progress milestone='m4' week='8' spent='3d'>
          UI is done, only minor tune ups left.
        </progress>
      </task>
      <task name='Hookup code-spit' milestone='m4' cost='1d' status='done' priority='1' added='yannc@6/23/99@10:58:39 AM'>
        <progress milestone='m4' week='10' spent='1d'>
          Got code spitter part done.  Absorbing code spit is blocked with some work
          needed to be done on ValueProvider.
        </progress>
      </task>
      <task name='test suite' milestone='m4' cost='1d' priority='1' added='yannc@6/23/99@10:58:42 AM'/>
    </area>
    <area name='Security' priority='1'>
      Support for Com+ security.
      <issue name='events'>
        What does this mean for server events, such as msmq, where there is no
        particular &quot;invoker&quot;. could just be that the &quot;system account&quot;
        is used. probably needs to be flexible.  HOW DOES ROLES AND MESSAGE CORRESPOND.
        DO WE ADD A ROLE TO A MESSAGE?  Security on a subscription.
      </issue>
      <task name='ACL object' milestone='cut' cost='10d' priority='cut' added='erikc@2/16/99@3:22:33 PM'>
        An NT ACL abstraction.
      </task>
      <task name='Integrate into WFC objects' milestone='cut' cost='5d' priority='cut' added='erikc@2/16/99@3:22:34 PM'>
        Integrate ACL object into WFC File and other objects
      </task>
      <task name='XSP role security' milestone='m4' cost='3d' priority='1' added='erikc@2/16/99@3:25:49 PM'>
        Unspecified work to support XSP role security in the design time UI.
      </task>
      <task name='impersonation' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:25:51 PM'>
        Object model for doing security yourself, manually, e.g. not using roles.
        COM+ code-access security will take care of this.
      </task>
    </area>
    <area name='OSInfo component'>
      <issue name='com+'>
        Understand what COM+ runtime team is doing here.  How do we get events
        such as shutdown/logoff.
      </issue>
      <issue name='wfc'>
        WFC already has a SystemInfo class under Microsoft.WFC.App. It gets UI
        information, as well as user information. There is no server specific information.
        Should we expand this class, should we create another class that meets
        the specific server needs, or should we consolidate the information somewhere
        else?
      </issue>
      <task name='Extend WFC&apos;s SystemInfo class' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:22:54 PM'>
        Add server-specific information to WFC.
      </task>
      <task name='test suites' milestone='cut' cost='1d' priority='cut' added='erikc@2/16/99@3:23:02 PM'>
        test suites
      </task>
    </area>
    <area name='Hiring' priority='1'>
      Time to hire 1 dev and 1 contractor.
      <task name='hire tbh1' milestone='m1' cost='9w' status='done' priority='1' added='erikc@2/16/99@3:25:35 PM'>
        <progress milestone='m1' week='all' spent='9w'/>
      </task>
    </area>
    <area name='Com+ services'>
      <task name='dcom properties' milestone='cut' cost='5d' priority='cut' added='erikc@2/16/99@3:25:36 PM'>
        Support DCOM configuration information in the tool natively as properties.
        This is probably related to the Instancing property listed elsewhere. &lt;b&gt;Use
        the com explorer for this&lt;/b&gt;
      </task>
    </area>
    <area name='Buffer'>
      <task name='holidays' milestone='m3' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:25:37 PM'>
        Placeholder for holidays.
        <progress milestone='m3' week='8' spent='1d'>
          Memorial Day Holiday!
        </progress>
      </task>
    </area>
    <area name='DirectoryWatcher' priority='1'>
      This component fires an event when a file or directory changes.
      <task name='File/folder change component' milestone='m2' cost='6d' status='done' priority='3' added='erikc@2/16/99@3:25:40 PM'>
        Implement base component that uses threadpool, caches files that it&apos;s
        seen, fires intelligent event (event information includes add/remove/change
        for each file, all as one event).
        <progress milestone='m2' week='1' spent='5d'>
          All features complete, some minor object model/naming issues to be resolved
          with PM.
        </progress>
        <progress milestone='m3' week='5' spent='2d'>
          Design review, misc work trying to close this object.
        </progress>
        <progress milestone='m3' week='4' spent='2d'>
          More user model changes due to design reviews.
        </progress>
        <progress milestone='m3' week='6' spent='2.5d'>
          New object model, designer support, and support files checked in.
        </progress>
        <progress milestone='m3' week='7' spent='1d'>
          Small cleanups for port effort.  Remove old code.  Spec review.
        </progress>
      </task>
      <task name='listener service' milestone='m2' cost='4d' priority='3' added='erikc@2/16/99@3:25:41 PM'>
        Implement a listener service that listens to various directories.  Add
        management api to add/remove listeners.
        <progress milestone='m2' week='2' spent='2d'>
          Implementation done, blocked by COM+ bug.  New drop should have resolved
          it, so will get back on it.
        </progress>
      </task>
      <task name='test suite' milestone='m3' cost='2d' status='done' priority='3' added='erikc@2/16/99@3:25:42 PM'>
        implement a test suite that tests this functionality
        <progress milestone='m3' week='1' spent='1d'>
          Done, checked in, working ok.
        </progress>
      </task>
      <task name='server explorer node' milestone='cut' cost='2d' priority='cut' added='erikc@2/16/99@3:25:43 PM'>
        implement a node that can manipulate the list of nofications
      </task>
      <task name='WaitForChange method' milestone='m5' cost='0.5d' status='done' priority='3' added='yannc@11/9/1999@2:34:41 PM'>
        Add WaitForChange method.
        <progress milestone='m5' week='3' spent='1d'/>
      </task>
    </area>
    <area name='Performance/Stress/Scalability'>
      <task name='suites' milestone='m3' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:25:45 PM'>
        Performance/stress/scalability suites.
        <progress milestone='m3' week='5' spent='2d'>
          Perf tests in Directory watcher.
        </progress>
        <progress milestone='m3' week='10' spent='0d'/>
      </task>
    </area>
    <area name='Directory services'>
      <task name='ADSI in the Server Explorer' milestone='cut' cost='8d' priority='cut' added='yannc@3/17/99@11:48:56 AM'>
        Server Explorer nodes to explore the active directory.   Read the ADSI
        schema and create PropertyInfos to support browsing.  Drag source for ADSI
        component.
      </task>
      <task name='ADSI access component' milestone='m3' cost='2d' status='done' priority='1' added='yannc@3/17/99@11:50:06 AM'>
        A very simple ADSI component that has a Path property (a moniker) and an
        Object property that returns the ADSI COM object that the Path resolves
        to.   Can be created from the ADSI Server Explorer node.
        <progress milestone='m3' week='3' spent='1d'>
          Got API, doing lots of reading.  I&apos;m sure it&apos;s only a few lines
          of code, but a matter of finding out which few...
        </progress>
        <progress milestone='m3' week='4' spent='1d'>
          Blocked on N/Direct mapping issues to the ADSI API.  Waiting on response
          from COM+ Interop folks.
        </progress>
        <progress milestone='m3' week='10' spent='0d'/>
      </task>
    </area>
    <area name='Perf Counter component'>
      <task name='Performance improvements, code cleanup' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/24/99@4:02:02 PM'>
        <progress milestone='m4' week='1' spent='3.5d'>
          New counter data parser; new user model added.
        </progress>
        <progress milestone='m4' week='2' spent='1d'>
          Misc cleanups, tests.
        </progress>
        <progress milestone='m4' week='3' spent='2d'>
          Continued cleanup, add type support.
        </progress>
        <progress milestone='m4' week='5' spent='1d'>
          Finally, cleanup and testing done.  Passing my set of scenarios.
        </progress>
        <progress milestone='m4' week='6' spent='1d'>
          Checkin, tracking down of bugs and issues.
        </progress>
      </task>
      <task name='Support counter types' milestone='cut' cost='2d' priority='cut' added='yannc@6/24/99@4:02:03 PM'/>
      <task name='Support rate of change counters' milestone='m4' cost='1d' status='done' priority='2' added='yannc@6/24/99@4:02:04 PM'>
        This task is to automatically calculate rate of change values like requests/second.
        <progress milestone='m4' week='2' spent='1d'>
          Added support for all counter types.
        </progress>
        <progress milestone='m4' week='5' spent='1d'>
          Done.
        </progress>
      </task>
      <task name='Split with COM+' milestone='m5' cost='0.5d' status='done' priority='1' added='yannc@11/9/1999@2:34:44 PM'>
        ClassInfo/attributes issue for dealing with split between WFC and COM+.
        <progress milestone='m5' week='4' spent='2d'>
          Since the split with COM+ is moot, used this time to ensure proper attributes
          were used instead of class info, porting/moving over of unmanaged and the
          service classes from WFC to DNA, decoupling from old registry classes,
          testing and server explorer changes.
        </progress>
      </task>
      <task name='Category read' milestone='m5' cost='2d' status='done' priority='2' added='yannc@11/9/1999@2:34:45 PM'>
        Support reading the counter values for an entire category so that you can
        get a consistent set of data (time wise).
        <progress milestone='m5' week='1' spent='0.5d'>
          Spent time with PM in design and various discussions.
        </progress>
        <progress milestone='m5' week='3' spent='2.5d'>
          Done.
        </progress>
      </task>
      <task name='Get rid of service' milestone='cut' cost='5d' priority='cut' added='yannc@11/9/1999@2:34:46 PM'>
        Get rid of the performance counter service,  use a file instead.
      </task>
      <task name='Parameterized inc/dec' milestone='m5' cost='1d' status='done' priority='2' added='yannc@11/9/1999@2:34:47 PM'>
        Make sure parameterized inc/dec are as efficient as possible.
        <progress milestone='m5' week='3' spent='1.5d'/>
      </task>
      <task name='Remote create' milestone='m5' cost='1d' status='done' priority='1' added='yannc@11/9/1999@2:34:49 PM'>
        Support creating a counter/category on a remote machine.
        <progress milestone='m5' week='8' spent='1d'>
          Done.
        </progress>
      </task>
      <task name='Launch perfmon' milestone='m5' cost='1d' status='done' priority='2' added='yannc@11/9/1999@2:34:51 PM'>
        Launch perfmon from the server explorer.  Open perfmon .ocx inside of Visual
        Studio.
        <progress milestone='m5' week='8' spent='1d'>
          Only launching perfmon.  No hosting of OCX in VS for now.
        </progress>
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='generate strongly typed subclasses' milestone='m3' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:25:48 PM'>
        Generate strongly typed subclasses for each class in a server project.
        <progress milestone='m3' week='6' spent='1d'>
          Got initial requirements; did a short design and started coding.
        </progress>
        <progress milestone='m3' week='7' spent='2.5d'>
          Initial cut of code and check in.  Generates VB and Cool code.
        </progress>
        <progress milestone='m3' week='9' spent='3d'>
          Added Type to MML, MML to VB, MML to Cool, XSP file generator, DCD extractor
          from MML and MML URL pusher.
        </progress>
      </task>
      <task name='WebPublic attributes' milestone='m5' cost='3d' status='done' priority='1' added='yannc@6/23/99@11:07:13 AM'>
        Define a custom attribute WebPublic to mark methods as web remoteable.
        Should support this on the class as well (should auto-add it to class).
        Add support to recognize it in the design time and runtime code. Define
        custom attributes for parameter and return value handlers.   Implement
        a dialog to bring up when WebPublic is set to true to help the user pick
        the request and return handlers.
        <adjustment milestone='m5' week='4' cost='-2d'>
          No further designer work should be needed.
        </adjustment>
        <progress milestone='m5' week='1' spent='1d'>
          Created WebPublic, RequestHandle and ResponseHandler attributes.  Added
          initial support for WebPublic attribute into MML post-processor.
        </progress>
      </task>
      <task name='Pre-, Post-processor errors' milestone='m5' cost='1d' priority='1' added='yannc@11/9/1999@2:34:52 PM'>
        Improve errors for pre and post processors.  Support line numbers if possible.
        Only run post-processor on web projects.
      </task>
      <task name='Code generation issues' milestone='m5' cost='4d' priority='1' added='yannc@11/9/1999@2:34:53 PM'>
        Recognize and merge duplicate struct and enum generated types in proxy
        generation.   Generate Hot Commands in the proxy.  Create a namespace per
        .MML   Reference existing DataCache if its already in the project.
      </task>
      <task name='Web Method references' milestone='m5' cost='5d' priority='1' added='yannc@11/9/1999@2:34:57 PM'>
        Support web methods references.  Must support multi-import and class name
        casing (preserving it) correctly.
        <progress milestone='m5' week='5' spent='2d'>
          Tracking down web methods tab issues (hosting it in managed code, etc).
        </progress>
        <progress milestone='m5' week='6' spent='3d'>
          Wrestling with VS to get managed tab showing in Add References dialog.
        </progress>
        <progress milestone='m5' week='7' spent='1d'>
          Got managed component completely hosted within unmanaged dialog box.  Discussions
          and meetings on UI design issues.
        </progress>
      </task>
      <task name='MML generator' milestone='m4' cost='3d' status='done' priority='1' added='yannc@6/23/99@11:07:15 AM'>
        Update the MML generator as the spec evolves.   Minimally the interface
        to the project system will change.
        <progress milestone='m4' week='4' spent='1d'>
          Synched up on M3 fixes.
        </progress>
        <progress milestone='m4' week='6' spent='1d'>
          Refining end-to-end scenario and bug fixes.
        </progress>
        <progress milestone='m4' week='8' spent='1d'>
          New MML Format work
        </progress>
        <progress milestone='m4' week='9' spent='2d'>
          Get new handler stuff done.
        </progress>
        <progress milestone='m4' week='10' spent='1d'>
          Testing, adding void handler.
        </progress>
      </task>
      <task name='Proxy generator' milestone='m4' cost='3d' status='done' priority='1' added='yannc@6/23/99@11:07:16 AM'>
        Update the Proxy generator as the spec evolves for both VB and COOL.  Minimally
        the interface to the project system will change and we will add attribute
        support.
        <progress milestone='m4' week='5' spent='1d'>
          Hammering out http remote call requirements and XSP file format issues.
        </progress>
        <progress milestone='m4' week='6' spent='1d'>
          Refining end-to-end scenario tasks list; bug fixes.
        </progress>
        <progress milestone='m4' week='9' spent='2d'>
          Consume new MML format.
        </progress>
        <progress milestone='m4' week='10' spent='1d'>
          Testing, adding void handler.
        </progress>
      </task>
      <task name='Proxy builder' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/24/99@4:02:05 PM'>
        <progress milestone='m4' week='6' spent='1.5d'>
          Reworked code from data builder into a proxy builder.  Blocked by project
          bug.
        </progress>
        <progress milestone='m4' week='10' spent='0.5d'>
          Got fix from project/BC.
        </progress>
      </task>
      <task name='Generate build errors' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/24/99@4:02:06 PM'>
        Output build errors during MML and proxy generation.
        <progress milestone='m4' week='10' spent='2d'/>
      </task>
    </area>
    <area name='Tracing'>
      <task name='Internal tracing support' milestone='m2' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:25:26 PM'>
        This task is to add debug infrastructure to our system so we can debug
        it.   It will not be exposed,  it might only be in debug builds.  Print
        method and trace levels implemented.  Trace to a local file using async
        write.  Minor instrumentation of existing compoents.  Ability to set tracing
        levels for an app.   Possibly support modification at runtime by using
        the file change notification component.
        <progress milestone='m2' week='2' spent='5d'>
          Initial implementation done in a few days.  Post checkin, discussions with
          others led to more revisions and design changes.  Have few more tasks and
          then will turn it over to intern.
        </progress>
        <progress milestone='m3' week='5' spent='1.5d'>
          Design review, work due to changes in directory watcher and schema.
        </progress>
        <progress milestone='m3' week='6' spent='1.5d'>
          Added level support for switches; removed Type support.
        </progress>
      </task>
    </area>
    <area name='Event log'>
      <task name='.MC files in the project' milestone='cut' cost='1d' priority='cut' added='erikc@2/16/99@3:24:50 PM'>
        Julia&apos;s team (specifically EricKn) will incorporate building the dll
        from the .mc into their post-build process. This will occur in M3. John
        Rivard has some code that can take a stub executable and put new resources
        in it.
      </task>
    </area>
    <area name='Win9X support'>
      <task name='Win9X component issues' milestone='m3' cost='2d' status='done' priority='1' added='yannc@3/18/99@3:04:44 PM'>
        Instrument all server components to check for Win9X and throw a readable
        exception in the constructor.  Improve OSInfo component with static property
        for OS version info.
        <progress milestone='m3' week='2' spent='2d'>
          Initial work to disable was completed on time.  But, huge can of worms
          were opened just prior to checkin.  WFC framework folks seem to agree uniformly
          that an OS-only check is bad and doing an API feature check is the right
          way to go.  Cost of this will go up accordingly for everyone, since each
          component writer will have to do this.
        </progress>
        <progress milestone='m3' week='3' spent='2d'>
          More work stemming from last week.  Initial thoughts was to do a one time
          check during static initialization, but patterns seems to be for late detection
          as possible.  Need some resolution on this.
        </progress>
        <progress milestone='m3' week='4' spent='1d'>
          Pushed big reset button on previous work, revisited issues and started
          again.  Will continue on for a while.
        </progress>
        <progress milestone='m3' week='8' spent='0.5d'>
          Design paper work.
        </progress>
      </task>
    </area>
    <area name='Tracing'>
      <task name='Exception integration' milestone='cut' cost='1.5d' priority='cut' added='erikc@2/16/99@3:25:27 PM'>
        Every time an exception occurs, it can be optionally traced.  DEPEND ON
        INSTRUMENTING COMPONENTS INSTEAD.
      </task>
      <task name='Service for logging trace calls' milestone='cut' cost='4d' priority='cut' added='erikc@2/16/99@3:25:29 PM'>
        Service will have shared memory that can be written to from the Trace object.
        It will separate the logging to the file (slow) from the call to Trace
        (fast).
      </task>
      <task name='Test suite for tracing' milestone='m3' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:25:30 PM'>
        Write a test suite to test tracing.
        <progress milestone='m3' week='1' spent='1d'>
          Done and checked in.  Working well.
        </progress>
      </task>
      <task name='Cross-machine tracing' milestone='cut' cost='2d' priority='cut' added='yannc@3/17/99@11:33:11 AM'>
        Add support in trace service to listen cross-machine (named pipes or something).
      </task>
      <task name='Trace administration' milestone='cut' cost='1d' priority='cut' added='yannc@3/17/99@11:35:15 AM'>
        API to remotely administer the trace setting of an app while it is running.
        Console app or server explorer node to administer the trace setting of
        a deployed application (running or not running). Use Managed Properties
        and WMI administration.
      </task>
      <task name='Monitoring trace output in VisualStudio' milestone='cut' cost='3d' priority='cut' added='yannc@3/17/99@12:15:30 PM'>
        Trace window in VisualStudio to monitor trace output of the trace service
        or services (multiple machines).   Also support OutputDebugString.
      </task>
      <task name='Cleanup' milestone='m3' cost='2d' status='done' priority='1' added='yannc@4/14/99@5:46:57 PM'>
        <progress milestone='m3' week='2' spent='1d'>
          Break up of current implementation, shift stuff around to Debug class and
          make XML config parser and FCN listener separate objects.  A bit more work
          and will shift this over to intern.
        </progress>
        <progress milestone='m3' week='4' spent='1.5d'>
          Finished cleanup work for Trace.  No issues here.  Spent extra time due
          to XML schema augmentation and tests.
        </progress>
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='generate xsp file' milestone='m3' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:25:58 PM'>
        Generate the xsp file for each class, based on property settings.
        <progress milestone='m3' week='9' spent='1d'/>
      </task>
    </area>
    <area name='Buffer'>
      <task name='buffer' milestone='m3' cost='6d' status='done' priority='1' added='yannc@3/17/99@1:50:34 PM'>
        buffer, vacation, sick leave
        <adjustment milestone='m3' week='5' cost='-2d'/>
        <progress milestone='m3' week='2' spent='2d'>
          Out sick recovering from wisdom teeth removal.  Took longer than expected.
        </progress>
        <progress milestone='m3' week='3' spent='2d'>
          Still out recovering from wisdom teeth.  Ouch!
        </progress>
        <progress milestone='m3' week='8' spent='2d'>
          Jury duty
        </progress>
      </task>
      <task name='bug fixing' milestone='m4' cost='5d' status='done' priority='1' added='yannc@3/17/99@1:54:54 PM'>
        <progress milestone='m4' week='1' spent='1.5d'>
          VBPS bug fixes
        </progress>
        <progress milestone='m4' week='2' spent='0.5d'>
          More VBPS bug tracking.
        </progress>
        <progress milestone='m4' week='3' spent='0.5d'>
          VBPS bug fixing.
        </progress>
        <progress milestone='m4' week='4' spent='1d'>
          M3 MML bug fixes
        </progress>
        <progress milestone='m4' week='7' spent='4d'>
          Fixing bugs and getting http remote scenarios working
        </progress>
        <progress milestone='m4' week='8' spent='1d'>
          Tracking bugs down with QA folks.
        </progress>
        <progress milestone='m4' week='10' spent='0.5d'>
          NOW bug fixing.
        </progress>
      </task>
      <task name='buffer' milestone='m4' cost='5d' status='done' priority='1' added='yannc@3/17/99@6:59:28 PM'>
        vacation, sick leave, labor day
        <progress milestone='m4' week='4' spent='1d'>
          Vacation.
        </progress>
        <progress milestone='m4' week='5' spent='2d'>
          One day sick and one day of vacation.
        </progress>
        <progress milestone='m4' week='9' spent='1d'>
          Labor Day
        </progress>
        <progress milestone='m4' week='10' spent='1d'>
          Company meeting
        </progress>
      </task>
      <task name='bug fixing' milestone='m3' cost='2d' status='done' priority='1' added='yannc@3/17/99@6:41:42 PM'>
        <progress milestone='m3' week='8' spent='0.5d'>
          Hunted down some ReadDirectoryChangesW weirdnesses.  DirectoryWatcher component
          uses this API.
        </progress>
        <progress milestone='m3' week='9' spent='1.5d'>
          Fixed misc. perf counter bugs.
        </progress>
      </task>
      <task name='SafeC port' milestone='m3' cost='5d' status='done' priority='1' added='yannc@3/17/99@6:54:06 PM'>
        <adjustment milestone='m3' week='8' cost='-4d'/>
        <progress milestone='m3' week='7' spent='1.5d'>
          Small cleanups.  Deletion of unused classes.
        </progress>
        <progress milestone='m3' week='8' spent='1d'>
          Sync, build and test to ensure correct porting.
        </progress>
      </task>
    </area>
    <area name='Perf Counter component'>
      <task name='Performance Counter Test Suite' milestone='m4' cost='1d' status='done' priority='1' added='fabioy@8/31/99@2:22:27 PM'>
        Adding test suites for the performance counter component.
        <progress milestone='m4' week='7' spent='1d'/>
      </task>
    </area>
    <area name='Buffer'>
      <task name='Buffer' milestone='m5' cost='10d' priority='1' added='yannc@11/22/1999@5:27:21 PM'>
        Vacation, sick, bug fixing.
        <progress milestone='m5' week='1' spent='1d'>
          Getting things started after vacation, synching, etc.
        </progress>
        <progress milestone='m5' week='2' spent='2d'>
          Bug fixes to get out of bug hell
        </progress>
        <progress milestone='m5' week='4' spent='1d'>
          Bug fixes, trying to lower overall count.
        </progress>
        <progress milestone='m5' week='5' spent='3d'>
          Spent 2 days fixing bugs and one day ill at home.
        </progress>
        <progress milestone='m5' week='7' spent='1d'>
          Bug fixes, BVT test fixes and checkin.
        </progress>
        <progress milestone='m5' week='8' spent='2d'>
          Fixing bugs while waiting to be unblocked by external issues.
        </progress>
      </task>
    </area>
    <area name='Side by Side'>
      <task name='perf counter, dir watcher' milestone='m5' cost='2d' priority='1' added='yannc@12/8/1999@12:59:24 AM'/>
    </area>
    <area name='Perf Counter component'>
      <task name='Get rid of PerfCounter.dll' milestone='m5' cost='0.5d' priority='2' added='yannc@12/8/1999@11:11:26 AM'>
        Get rid of perfcounter.dll,  move it into microsoft.wfc.dll (or whereever
        this stuff lives).  Requires COOL/COM+ support for dll entry points.
      </task>
    </area>
    <area name='Server Explorer'>
      <task name='Use COM+ Serialization' milestone='m5' cost='3d' status='done' priority='1' added='fabioy@1/13/2000@6:11:52 PM'>
        Switch to using COM+ serialization for all nodes.
        <progress milestone='m5' week='1' spent='1.5d'>
          Took a look at COM+ serialization and their status.  Initial exploratory
          coding and design on how to switch over.
        </progress>
        <progress milestone='m5' week='2' spent='3d'>
          Converted all the nodes over.  Ran into COM+ serialization issues (bugs,
          design changes on their part) that added a bit of overhead.
        </progress>
      </task>
    </area>
    <area name='Perf Counter component'>
      <task name='Make service optional' milestone='m5' cost='2d' status='done' priority='1' added='fabioy@1/31/2000@1:35:15 PM'>
        Make the perf counter service an &quot;extra&quot; feature that holds on
        to shared memory handles created by perf counter users.
        <progress milestone='m5' week='4' spent='2d'/>
      </task>
    </area>
    <area name='Directory services'>
      <task name='Add select managed interfaces' milestone='m5' cost='1d' priority='2' added='fabioy@1/31/2000@1:43:34 PM'>
        Add select ADSI interfaces to framework.  Also, any small, misc work to
        improve feature reach.
        <progress milestone='m5' week='6' spent='2d'>
          Design and implementation of revised ADSI objects.
        </progress>
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='Discovery' milestone='m5' cost='5d' priority='1' added='fabioy@2/15/2000@5:41:41 PM'>
        Implement discovery algorithm on server.  Command line tools, design time
        generation of files (.disco, etc), and install issues.
        <progress milestone='m5' week='7' spent='3d'>
          Wrote object wrapper for discovery file; implemented discovery algorithm;
          command line tools to fetch; and a web request handler for discovery files.
        </progress>
        <progress milestone='m5' week='8' spent='1d'>
          Some more code cleanup.
        </progress>
      </task>
    </area>
  </person>
</schedule>
