<schedule team='WFC.Server'>
  <person name='stefanph'>
    <area name='Deployment'>
      <task name='Main menu' milestone='m5' cost='1.5d' status='done' priority='1' added='yannc@11/9/1999@2:35:51 PM'>
        Add the menus that are in the context menu today to the main menu bar in
        the shell (under the Actions menu, like the other deployment editors).
        Implement IOleCommandTarget
        <progress milestone='m5' week='4' spent='1.5d'>
          Got most of the code working, but still wrestling with CTC files. The menu
          is not showing up on the menu bar yet.
        </progress>
        <progress milestone='m5' week='5' spent='1.5d'>
          Got the menu showing up. Everything works now.
        </progress>
      </task>
    </area>
    <area name='NT Service framework'>
      <task name='Object model' milestone='m5' cost='5d' status='done' priority='1' added='yannc@11/9/1999@2:35:13 PM'>
        Numerous object model changes.   Move install code into an installer.
        <progress milestone='m5' week='1' spent='4d'>
          ServiceInstaller and ServiceProcessInstaller. Most changes to other classes.
        </progress>
        <progress milestone='m5' week='2' spent='3d'>
          finished
        </progress>
      </task>
    </area>
    <area name='Loosely Coupled Events Architecture'>
      <task name='Single service' milestone='cut' cost='1d' priority='cut' added='yannc@11/9/1999@2:35:15 PM'>
        merge our services into a single .exe.  Make our service classes public
        so users can roll their own service .exes based on ours.
      </task>
    </area>
    <area name='Managed properties'>
      <task name='Caching and notification' milestone='m3' cost='4d' status='done' priority='1' added='yannc@3/17/99@11:16:00 AM'>
        Figure out requirements and design for cache coherency of the resource
        at runtime.   Is it updated at object lifetime or transaction boundaries?
        Is it writable?   Support event notifications for when a value changes.
        <progress milestone='m3' week='1' spent='1d'>
          Wrote cache for XML file based on file-change notification. Just an early
          implementation.
        </progress>
        <progress milestone='m3' week='2' spent='1.5d'>
          Good progress after discussion with Erik
        </progress>
        <progress milestone='m3' week='3' spent='1d'>
          I think I have all the requirements now.
        </progress>
        <progress milestone='m3' week='4' spent='0.5d'>
          I think we have this figured out after the design review.
        </progress>
      </task>
      <task name='Per-user settings' milestone='cut' cost='2d' priority='cut' added='yannc@11/9/1999@2:35:44 PM'>
        DCR: Implement per-user settings. The per-user settings file will initially
        exist in the app directory, but the component will copy it to the user
        directory if it is not already there. (If it is, it will only load that
        one.) The component will have a property that lets you choose if it’s in
        per-user mode or app mode; that mode will determine what the default settings
        file is.
      </task>
      <task name='Category and Description' milestone='cut' cost='1d' priority='cut' added='yannc@11/9/1999@2:35:46 PM'>
        Add two more things stored with each key in the file: Category and Description.
        Description will be entered by the user; Category will be gleaned from
        the property being managed. The gleaning mechanism should probably work
        like this: If a property has a Category attribute, use that. Otherwise
        make it up based on the component’s type - producing something like Microsoft.WFC.Components.MessageQueue.Path.
      </task>
      <task name='Perf and scalability' milestone='cut' cost='5d' priority='cut' added='yannc@11/9/1999@2:35:47 PM'>
        Perf and scalability for reading properties in XSP environment.
      </task>
    </area>
    <area name='Dataview in Server Explorer' priority='1'>
      This is the cost of moving the dataview into the server explorer.  Some
      of this work is good generic work that makes us more shell-friendly, and
      will probably benefit us in the long run indepdent of the dataview feature
      itself.
      <task name='persistence' milestone='m2' cost='2d' priority='1' added='erikc@2/16/99@3:24:21 PM'>
        Need to persist the attached IVsHierarchy.  This is probably just connection
        stuff.
      </task>
    </area>
    <area name='Encryption component'>
      <issue name='commerce server'>
        Figure out what commerce server ships in terms of this kind of support.
      </issue>
      <task name='Crypto stream' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:22:49 PM'>
        Write an implementation of a stream that encrypts using either the current
        user key or a specified one.
      </task>
      <task name='Crypto key' milestone='cut' cost='2d' priority='cut' added='erikc@2/16/99@3:22:50 PM'>
        An object that encapsulates a crypto key.  This allows the user to create
        a key, a default key, get the default key for a user, etc.
      </task>
      <task name='Crypto buffer' milestone='cut' cost='1d' priority='cut' added='erikc@2/16/99@3:22:51 PM'>
        Add static helper methods to the crypto stream that allow the user to very
        simply encode and decode memory buffers.  These should be more efficient
        than just using the stream stuff.
      </task>
      <task name='test suites' milestone='cut' cost='1d' priority='cut' added='erikc@2/16/99@3:22:52 PM'>
        Write a test suite for the encryption functionality.
      </task>
      <task name='Crypto API wrapper' milestone='cut' cost='4d' priority='cut' added='erikc@2/16/99@3:22:53 PM'>
        A simple component that does Encrypt/Decrypt and Sign/Verify operations
        using the Win32 CryptoAPI.   Should work with COM+ IO Streams.  Should
        support byte array.
      </task>
    </area>
    <area name='Deployment'>
      <task name='Sample code for setting up existing components' milestone='m2' cost='2.5d' status='done' priority='1' added='erikc@2/16/99@3:24:16 PM'>
        Write some sample code that dev/testing can use to manually install the
        server components they use in their test suites.
        <adjustment milestone='m2' week='9' cost='-1.5d'/>
        <progress milestone='m2' week='s2' spent='1d'>
          Sent mail with sample code to wfcsrv alias.
        </progress>
      </task>
      <task name='Framework for MSI custom acctions' milestone='m3' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:24:17 PM'>
        This is similar to what we were planning to do with IConfigurable.
        <progress milestone='m3' week='2' spent='1d'>
          Design
        </progress>
        <progress milestone='m3' week='3' spent='0.5d'>
          more design
        </progress>
        <progress milestone='m3' week='4' spent='0.5d'>
          Reviewed and made comments on MDay&apos;s custom action spec
        </progress>
        <progress milestone='m3' week='5' spent='1d'>
          We&apos;re shutting the design of this down...soon.
        </progress>
      </task>
      <task name='test suite' milestone='m4' cost='1d' priority='1' added='erikc@2/16/99@3:24:18 PM'>
        While application configuration will get tested in the component-specific
        test suites we may need one that specifically targets application configuration
        to get some edge cases.
      </task>
      <task name='Native code Exe launch and Dll launch custom actions' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/24/99@4:02:28 PM'>
        <progress milestone='m4' week='10' spent='0.5d'>
          Done
        </progress>
      </task>
      <task name='IInstaller and Installer' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/23/99@10:58:28 AM'>
        Finish up IInstaller interface and Installer abstract base class.   Consider
        adding utility functions to Installer to give managed code access to MSI
        functions.
        <progress milestone='m4' week='2' spent='6h'>
          The design is good now.
        </progress>
        <progress milestone='m4' week='3' spent='1d6h'>
          checked in.
        </progress>
      </task>
      <task name='Custom Action Editor' milestone='m4' cost='7.5d' status='done' priority='1' added='yannc@6/23/99@10:58:29 AM'>
        Design and implement the UI for adding and editing custom actions to the
        deployment project.   Implement list view to display custom actions. Order
        them based on extender installorder property.  Push selection to the property
        browser.  Implement IContainer.
        <adjustment milestone='m4' week='5' cost='6h'>
          stupid COM+ bugs
        </adjustment>
        <adjustment milestone='m4' week='6' cost='3d'>
          Discussions and negotiations on threading bug in deployment
        </adjustment>
        <adjustment milestone='m4' week='8' cost='6h'>
          past slippage
        </adjustment>
        <adjustment milestone='m4' week='8' cost='3d'>
          expected future slippage
        </adjustment>
        <progress milestone='m4' week='1' spent='3.5d'>
          Got COM-interop interfaces working, got a fake CA editor showing up in
          a deployment project.
        </progress>
        <progress milestone='m4' week='5' spent='3d2h'>
          Didn&apos;t make much progress, but got things showing in the IDE
        </progress>
        <progress milestone='m4' week='6' spent='3.5d'>
          Some progress on UI. Lots of discussion regarding what ended up being a
          threading bug in deployment
        </progress>
        <progress milestone='m4' week='7' spent='6h'>
          Got things working again after deployment fixed their threading. Worked
          a little with file picker dialog.
        </progress>
        <progress milestone='m4' week='8' spent='1d'>
          Got UI checked in (though not complete); now working correctly with File
          Picker dialog.
        </progress>
        <progress milestone='m4' week='9' spent='2d'>
          Save to project done. Remaining task is validation.
        </progress>
        <progress milestone='m4' week='10' spent='6h'>
          Got build working
        </progress>
      </task>
      <task name='UI to add custom action to editor' milestone='m4' cost='0.5d' status='done' priority='1' added='stefanph@8/2/99@10:54:29 AM'>
        Right-click to add an installer (either DLL, EXE, or from a project) to
        the CA editor.
        <progress milestone='m4' week='8' spent='1d'>
          Got file picker working
        </progress>
      </task>
      <task name='Update MSI tables' milestone='m4' cost='1.5d' status='done' priority='1' added='stefanph@8/2/99@1:34:56 PM'>
        Write entries in the custom action table (?) and the sequence table.
        <progress milestone='m4' week='9' spent='1d'/>
      </task>
      <task name='Add Installer hotlink' milestone='m4' cost='1.5d' status='done' priority='1' added='stefanph@8/2/99@11:21:13 AM'>
        Hotlink that shows up when a component with an associated installer is
        selected on the designer.
        <adjustment milestone='m4' week='4' cost='4d'>
          Too many undone dependencies.
        </adjustment>
        <adjustment milestone='m4' week='7' cost='2d'>
          Many issues remain.
        </adjustment>
        <adjustment milestone='m4' week='10' cost='-0.5d'>
          only thing remaining is COOL support
        </adjustment>
        <progress milestone='m4' week='4' spent='4d'>
          Too many dependencies are not done ready. Need to be able to get IDesignerHost
          for a given DTE Document.
        </progress>
        <progress milestone='m4' week='7' spent='1d'>
          Got it working, but mostly with temporary code. Many issues remain.
        </progress>
        <progress milestone='m4' week='10' spent='1d2h'>
          Still only works for Basic projects
        </progress>
      </task>
      <task name='State services for installers' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/24/99@4:02:29 PM'>
        Provide a way for the installers to save off state during install/commit
        that they might need later during rollback/uninstall.
        <progress milestone='m4' week='2' spent='6h'>
          This is just part of the Installer base class.
        </progress>
        <progress milestone='m4' week='3' spent='1d2h'>
          checked in. Part of AssemblyInstaller.
        </progress>
      </task>
      <task name='Managed Property integration' milestone='m5' cost='2d' priority='1' added='yannc@6/23/99@10:58:30 AM'>
        Want custom action settings to have access to the same setting store. UI
        modifications, deployment issues.
      </task>
      <task name='Respond to project being added to deployment' milestone='m4' cost='3d' status='done' priority='1' added='yannc@6/23/99@10:58:31 AM'>
        Automatically add a project&apos;s installers to the CA editor when the
        project&apos;s outputs are added to the deployment.
        <adjustment milestone='m4' week='6' cost='-3d'>
          Cut. The user has to manually add an assembly to the CA editor.
        </adjustment>
      </task>
      <task name='Individual installer components' milestone='m4' cost='2.5d' status='done' priority='1' added='stefanph@8/2/99@11:16:35 AM'>
        <progress milestone='m4' week='5' spent='2h'>
          began QueueInstaller
        </progress>
        <progress milestone='m4' week='6' spent='2h'>
          A tiny bit of work on EvenLogInstaller
        </progress>
        <progress milestone='m4' week='6' spent='0.5d'>
          Finished EventLogInstaller component
        </progress>
        <progress milestone='m4' week='10' spent='1d'/>
      </task>
      <task name='Install.exe' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/23/99@10:58:32 AM'>
        At runtime MSI calls this shim which in turn calls IInstaller on all the
        custom actions in the deployment project. If not running in MSI, does transactional
        work for installing.
        <progress milestone='m4' week='2' spent='0.5d'/>
        <progress milestone='m4' week='3' spent='1d'>
          checked in. MSI mode still not implemented.
        </progress>
        <progress milestone='m4' week='10' spent='0.5d'>
          MSI mode done
        </progress>
      </task>
      <task name='Squiggles' milestone='cut' cost='1d' priority='cut' added='yannc@11/9/1999@2:35:48 PM'>
        Consider putting squiggles in the CA editor. Other deployment editors show
        red squiggles in the place where a build error has occurred. Not high-priority.
      </task>
      <task name='Skip property for EXE CA' milestone='m5' cost='0.5d' status='done' priority='1' added='yannc@11/9/1999@2:35:49 PM'>
        Put a Boolean property on the EXE CA’s arguments properties. If it’s false,
        don’t invoke the exe for that stage of deployment at all.
        <progress milestone='m5' week='4' spent='0.5d'>
          done
        </progress>
      </task>
      <task name='CA editor/editee split' milestone='m5' cost='1d' priority='3' added='yannc@11/9/1999@2:35:50 PM'>
        Separate the CA editor from the things it edits. (Right now the listbox
        is the container, and without the listbox I don’t know what CAs there are.)
      </task>
      <task name='Run installers in-process' milestone='m5' cost='1d' priority='2' added='yannc@11/9/1999@2:35:52 PM'>
        Switch MSI deployment of managed installers to run in-process with Darwin
        instead of out-of-process. This is blocked until we get entrypoints in
        COM+ dlls.
      </task>
      <task name='Background compile' milestone='cut' cost='1d' priority='cut' added='yannc@11/9/1999@2:35:53 PM'>
        Consider implementing validation in the CA plugin, which basically runs
        in the background looking for build errors. It’s not feasible to look for
        all errors (reading in a whole DLL and checking entrypoints, for example,
        probably shouldn’t happen in the background), so this feature may not be
        worth the effort.
      </task>
    </area>
    <area name='Dataview in Server Explorer'>
      <task name='switch to IVsHierarchy' milestone='m2' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:24:22 PM'>
        Implement IVsHierarchy and use VsUiHierarchy to implement the treeview.
        Continue to support the WFC treeview when running in the selfhost.
        <adjustment milestone='m2' week='2' cost='1d'/>
        <adjustment milestone='m2' week='3' cost='3.5d'/>
        <adjustment milestone='m2' week='5' cost='2d'/>
        <adjustment milestone='m2' week='6' cost='2.5d'/>
        <progress milestone='m2' week='1' spent='1.5d'>
          The nodes show up, but there&apos;s a lot more work left.
        </progress>
        <progress milestone='m2' week='2' spent='2d'/>
        <progress milestone='m2' week='3' spent='2.5d'/>
        <progress milestone='m2' week='4' spent='0.5d'/>
        <progress milestone='m2' week='5' spent='2d'/>
        <progress milestone='m2' week='6' spent='3d'>
          checked in! Still some minor bugs to fix
        </progress>
      </task>
      <task name='command bar toolbar' milestone='m2' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:24:23 PM'>
        Use command bar stuff for the refresh and stop buttons on the server explorer.
        Figure out some way to do the spinning thing using a command bar.  Continue
        to use the old toolbar code when running in the selfhost.
        <progress milestone='m2' week='2' spent='1d'/>
        <progress milestone='m2' week='3' spent='0.5d'/>
        <progress milestone='m2' week='5' spent='0.5d'/>
      </task>
      <task name='IOleCommandTarget' milestone='m2' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:24:24 PM'>
        Route command bar items to server explorer nodes.  This allows them to
        participate in menus already in the shell.  Use command bars for the popups.
        Continue to make things work in the selfhost.
        <adjustment milestone='m2' week='3' cost='-1d'/>
        <progress milestone='m2' week='2' spent='2d'/>
      </task>
    </area>
    <area name='Com+ integration'>
      Work specific to moving from the java vm to com+ runtime.
      <issue name='port now?'>
        Is it worth it to port the server explorer at all? We can&apos;t yet because
        EE features are still missing.  There are also other issues..
      </issue>
      <task name='com+ port' milestone='m1' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:24:25 PM'>
        <progress milestone='m1' week='s1' spent='5d'/>
      </task>
      <task name='com+ port' milestone='m2' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:24:26 PM'>
        port server explorer and class designer to com+
        <adjustment milestone='m2' week='7' cost='2d'>
          Port C++ code in ShellHost to Java
        </adjustment>
        <adjustment milestone='m2' week='8' cost='4.5d'>
          too many bugs in COM+
        </adjustment>
        <adjustment milestone='m2' week='9' cost='1d'>
          too many bugs
        </adjustment>
        <progress milestone='m2' week='7' spent='2.5d'>
          Everything is ported; still need to get COM+ SE running in the shell.
        </progress>
        <progress milestone='m2' week='7' spent='2d'>
          Port C++ code in ShellHost to java
        </progress>
        <progress milestone='m2' week='8' spent='3d'/>
        <progress milestone='m2' week='9' spent='2d'/>
      </task>
    </area>
    <area name='Suites architecture' priority='1'>
      This is &lt;b&gt;not&lt;/b&gt; the development of specific suites, but
      rather work to make the suite infrastructure better.
      <task name='suites infrastructure' milestone='m1' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:24:27 PM'>
        <progress milestone='m1' week='s1' spent='5d'/>
      </task>
    </area>
    <area name='Class Designer' priority='1'>
      The class designer allows you to visual compose a class containing components.
      <issue name='ui'>
        UI for the Class Designer is still being worked out.
      </issue>
      <issue name='Integration with Context Window'>
        How will the Class Designer use the Context Window?
      </issue>
      <issue name='protected fields'>
        Does the Property Browser show protected fields and properties of the base-class
        when browsing the class being designed?
      </issue>
      <issue name='Integration with Project Window'>
        Does the Class Designer need to offer up the components to the Property
        Browser when its not viewable on the screen, in other words is the Property
        Browser active when selecting a class in the project window?
      </issue>
      <issue name='Integration with Project Window'>
        When does Class Designer get displayed instead of source window when class
        project items are opened.
      </issue>
      <issue name='Integration with Project Window'>
        Does Class Designer support all classes?  Who negotiates which designer
        gets opened? is there support in the shell for a default designer that
        is if no designer use the Class designer?
      </issue>
      <task name='ui' milestone='m1' cost='8d' status='done' priority='1' added='erikc@2/16/99@3:24:28 PM'>
        This task is specific to the UI for the class designer.  2nd generation
        UI checked in. We&apos;ll likely make this a simple, 2D-layout UI based
        heavily on the WFC.UI designer. &lt;b&gt;more in m2&lt;/b&gt;
        <progress milestone='m1' week='1' spent='5d'/>
        <progress milestone='m1' week='2' spent='1d'>
          First pass of Class Designer Next Generation checked in
        </progress>
        <progress milestone='m1' week='7' spent='2d'>
          Reverted designer to form-like look
        </progress>
      </task>
    </area>
    <area name='Server Explorer' priority='1'>
      UI for browsing and editing back office objects within the IDE.
      <issue name='Event node grouping'>
        Are events grouped together by specific source instance, or by source type?
        Is there a way we could do both?
      </issue>
      <issue name='Localization'>
        Make sure explorer nodes can be localized.
      </issue>
      <issue name='Accessibility'>
        Will the IVsHierarchy give us all we need for accessibility? Make sure
        user-authored nodes can conform.
      </issue>
      <issue name='SKUs'>
        Is the server explorer in the pro box or just the enterprise? How is it
        disabled for the SKUs it shouldn&apos;t be in?
      </issue>
      <issue name='Auto refresh'>
        Do we want to do auto refresh? Right now, it seems to have too many issues
        to make it worthwhile.
      </issue>
      <issue name='Multiple property browsers'>
        The server explorer has to be able to change the property browser on the
        fly. The shell must be modified to support this.
      </issue>
      <task name='Top-level UI' milestone='m1' cost='7d' status='done' priority='1' added='erikc@2/16/99@3:24:37 PM'>
        Overall architecture; machine nodes; add machine; global, async refresh;
        find.
        <adjustment milestone='m1' week='7' cost='4d'/>
        <adjustment milestone='m1' week='8' cost='1.5d'>
          new refresh
        </adjustment>
        <progress milestone='m1' week='3' spent='1d'/>
        <progress milestone='m1' week='4' spent='3d'/>
        <progress milestone='m1' week='5' spent='2d'>
          background refresh; rearchitecture
        </progress>
        <progress milestone='m1' week='6' spent='4d'>
          final (!) rearchitecture; events
        </progress>
        <progress milestone='m1' week='7' spent='1d'>
          event subscriptions
        </progress>
        <progress milestone='m1' week='8' spent='1d'>
          bug fixes
        </progress>
      </task>
      <task name='Designer interop' milestone='m1' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:24:38 PM'>
        Create designer component on double click; add event handler when user
        clicks on &apos;lightning-bolt&apos; node.
        <progress milestone='m1' week='3' spent='1d'>
          create component
        </progress>
        <progress milestone='m1' week='8' spent='2d'>
          events hookup
        </progress>
      </task>
      <task name='Per-component UI' milestone='m1' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:24:39 PM'>
        &lt;b&gt;These tasks have now been moved into the individual components.&lt;/b&gt;
        <progress milestone='m1' week='3' spent='1d'>
          Queue
        </progress>
        <progress milestone='m1' week='5' spent='1d'>
          Event log
        </progress>
      </task>
      <task name='shell integration' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:24:40 PM'>
        <adjustment milestone='m1' week='8' cost='3d'>
          not originally on schedule
        </adjustment>
        <adjustment milestone='m1' week='9' cost='1d'/>
        <progress milestone='m1' week='8' spent='1d'/>
        <progress milestone='m1' week='9' spent='3d'/>
      </task>
      <task name='SDK' milestone='cut' cost='1.5d' priority='cut' added='erikc@2/16/99@3:24:42 PM'>
        Documentation and sample code. Do an NT Services node for the sample? &lt;b&gt;we
        will do this after the milestones&lt;/b&gt;
      </task>
      <task name='Error reporting' milestone='m2' cost='1.5d' status='done' priority='1' added='erikc@2/16/99@3:24:44 PM'>
        1) Change the icon to indicate that an error occurred; 2) special-case
        the selection of the node so that when the user clicks it, we show an ErrorInformation
        component in the property browser; 3) Leave the plus next to the node so
        they can click it and try again.
        <adjustment milestone='m2' week='1' cost='-0.5d'/>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Enhanced refresh' milestone='m2' cost='1.5d' status='done' priority='1' added='erikc@2/16/99@3:24:45 PM'>
        Spec change: only refresh visible items to avoid confusing user model.
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Node/ExplorerNode merge' milestone='m2' cost='1.5d' status='done' priority='1' added='erikc@2/16/99@3:24:46 PM'>
        Get rid of the 3-level tree architecture by merging the ExplorerNode with
        its container. This means that IExplorerNode will go away.
        <progress milestone='m2' week='1' spent='1.5d'/>
      </task>
      <task name='test suite' milestone='m2' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:24:47 PM'>
        a test with more coverage than the checkin test we have today. This test
        will access a known server, and it will exercise all the different explorer
        nodes we have.
        <adjustment milestone='m2' week='9' cost='-2d'>
          Will be re-scheduled later.
        </adjustment>
      </task>
    </area>
    <area name='Event log'>
      Ability to read and write the NT event log, as well as listen to changes
      to it.
      <task name='Event log writer component' milestone='m2' cost='4.5d' status='done' added='erikc@2/16/99@3:24:51 PM'>
        Write entries to the event log. Also implement root EventLog object
        <progress milestone='m2' week='4' spent='1d'/>
        <progress milestone='m2' week='8' spent='1d'/>
        <progress milestone='m2' week='9' spent='1.5d'/>
        <progress milestone='m1' week='4' spent='1d'>
          Overall design ideas
        </progress>
      </task>
      <task name='EventLogReader enhancements' milestone='m2' cost='3.5d' status='done' added='erikc@2/16/99@3:24:52 PM'>
        Clear event log; rename some properties; property sets so it can be used
        on the designer; advanced, high-performance algorithm to get more than
        just the requested entry at one time; use thread pool when listening for
        events.
        <adjustment milestone='m2' week='5' cost='1d'/>
        <progress milestone='m2' week='4' spent='3d'>
          Improvements are complete, but perf analysis can&apos;t be done until we
          have a profiler on COM+.
        </progress>
        <progress milestone='m2' week='5' spent='1d'/>
        <progress milestone='m2' week='8' spent='0.5d'/>
      </task>
      <task name='UI for editing messages' milestone='cut' cost='5d' priority='cut' added='erikc@2/16/99@3:24:53 PM'>
        Let user specify .MC files that contain messages that will show up in the
        event log. ISSUE: What is the UI for the designer: could just be a .MC
        file. We also could put this in wfc&apos;s resource stuff to use instead
        of STRINGTABLE (optionally).
      </task>
      <task name='Class to make creating message source DLLs easy' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:24:54 PM'>
        This class would be run as part of the deployment step to produce a DLL.
      </task>
      <task name='Event log reader component' milestone='m1' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:24:55 PM'>
        <progress milestone='m1' week='5' spent='2d'/>
        <progress milestone='m1' week='6' spent='1d'>
          Events
        </progress>
        <progress milestone='m1' week='7' spent='1d'>
          LCEs, event filter class
        </progress>
      </task>
      <task name='Event log activator Exe' milestone='m1' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:24:56 PM'>
        <progress milestone='m1' week='7' spent='1d'/>
      </task>
      <task name='test suite' milestone='m2' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:24:57 PM'>
        more extensive test than the one there today.
        <progress milestone='m2' week='9' spent='1d'/>
      </task>
      <task name='Cleanup' milestone='m3' cost='2d' status='done' priority='1' added='yannc@3/17/99@11:02:46 AM'>
        Check OS version,  error handling pass, deployment, support clearing the
        event log,  integrate with new threadpool. Update Entries property to collections
        spec, make GetAllEntries private.
        <progress milestone='m3' week='7' spent='2d'>
          Up to spec now.
        </progress>
      </task>
      <task name='Auto-gen or get rid of WFCEventLogMessageLib.dll' milestone='m5' cost='2d' priority='1' added='yannc@11/9/1999@2:35:54 PM'>
        Need to either merge the event log resource into WFC (a small version of
        it) or auto-generate one on demand.
      </task>
      <task name='Add category strings' milestone='cut' cost='0.5d' priority='cut' added='yannc@11/9/1999@2:35:55 PM'>
        Add some canned category strings that can be used when writing events.
      </task>
      <task name='Create EventLog from SE' milestone='cut' cost='3d' priority='cut' added='yannc@11/9/1999@2:35:57 PM'>
        Add a dialog to server explorer node to create an event log from the server
        explorer. Support local and remote machines.
      </task>
      <task name='machine start/stop events' milestone='cut' cost='1d' priority='cut' added='yannc@11/9/1999@2:36:00 PM'>
        Investigate if we can run code during the machine start/stop event log
        events.  Would require a web event.
      </task>
    </area>
    <area name='Designer BasicParser' priority='1'>
      Tasks specific to the basic parser in the designer architecture.
      <issue name='Code Editor support'>
        How is designer code viewed in the code editor? Read-only, hidden, colorized?
      </issue>
      <issue name='BasicWriter code formatting'>
        Does CodeSense handle formatting designer-generated code according to Editor
        settings?
      </issue>
      <task name='Basic keyword changes' milestone='m1' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:24:58 PM'>
        Inherits --&amp;gt; Extends&lt;br&gt; Super --&amp;gt; MyBase&lt;br&gt;
        new Overrides keyword
        <progress milestone='m1' week='3' spent='1d'/>
      </task>
      <task name='Basic code-spit for Forms' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:24:59 PM'>
        Generate run-time Basic code necessary to generate (including de-persist)
        the runtime instance of the Form or Composition.
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Support for @designTime properties' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:01 PM'>
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Implement writeSelectComponents in BasicWriter' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:05 PM'>
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Anonymous array support' milestone='m1' cost='0d' status='done' priority='2' added='erikc@2/16/99@3:25:07 PM'>
        We would like to create arrays anonymously when they are only needed as
        a parameter to a method/prop/constructor like in Java.   currently we have
        to Dim Array1(). Status: feature request not accepted.
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Fields must be declared at top of file' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:08 PM'>
        Basic doesn&apos;t allow class fields to be declared anywhere except at
        the top of a source file.  BasicParser and BasicWriter need to accommodate
        this.
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
    </area>
    <area name='Designer Architecture'>
      Tasks relating to the designer architecture that are not specific to the
      class designer.
      <issue name='File change notifications'>
        The Class designer should react to file changes to the class file from
        outside the IDE.   Its possible the designer handles this already today?
      </issue>
      <issue name='Should we have disabled/grayed out code in editor window for designer spitted code?'/>
      <issue name='How does the shell recognize whether to enable the form designer for a given file?'>
        I think the project model people are taking care of this.
      </issue>
      <issue name='Referencing components' status='blocked: spec'>
        In VJ all of wfc.ui is automatically referenced. Will the same apply for
        VB? What about wfc.server? Need PM for this.
      </issue>
      <issue name='Project model, ProjItem management' status='blocked: spec'>
        What project items do the designers generate?  What files on disk?  How
        are the files on disk managed?  What items appear in Project...Add Component
        dialog?
      </issue>
      <issue name='Persisting references to objects outside the class being designed' status='blocked: spec'>
        With the WFC forms designer, it&apos;s possible to set the property of
        one component to refer to another component on the form.  But there&apos;s
        no mechanism to refer to an object that resides outside of the form (but
        still in the project.)  This is absolutely necessary for things like DataConnections,
        and it will be a huge issue for the composition designer.
      </issue>
      <issue name='How flexible should parser be about where class fields are declared?' status='done'>
        field must be declared at top of file.
      </issue>
      <task name='Project...Add WFC Form in VB Shell' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:10 PM'>
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Toolbox for WFC Form designer in VB' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:11 PM'>
        Toolbox now works with WFC controls, but not ActiveX controls.  Toolbox
        things will be rearchitected in the near future (moving functionality to
        the designer out of the shell package).
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Drag back to toolbox' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:25:12 PM'>
        Implement drag back.
      </task>
      <task name='Cut-n-Paste' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:13 PM'>
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Accept parsed code that does not contain an initForm method' milestone='m1' cost='0d' status='done' priority='2' added='erikc@2/16/99@3:25:16 PM'>
        Rather than throwing an error and giving up, the parser should simply use
        default values for all component properties if there is no initForm method.
        Still inform the user that something&apos;s amiss, however.
        <progress milestone='m1' week='0' spent='0d'/>
      </task>
      <task name='Event persistence in SelfHost' milestone='m1' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:25:17 PM'>
        Self host app doesn&apos;t allow an event to be chosen when using Basic
        language.  Figure out why not, fix it, and test event persistence.
        <progress milestone='m1' week='4' spent='1d'/>
      </task>
    </area>
    <area name='Accessibility'>
      <task name='Accessibility of designer' milestone='m1' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:25:18 PM'>
        Research accessibility support in Class Designer.
        <progress milestone='m1' week='3' spent='1d'>
          Determined requirements
        </progress>
      </task>
    </area>
    <area name='Design'>
      <task name='design' milestone='m2' cost='4.5d' status='done' priority='1' added='erikc@2/16/99@3:25:19 PM'>
        <progress milestone='m2' week='4' spent='0.5d'/>
        <progress milestone='m2' week='5' spent='0.5d'/>
        <progress milestone='m2' week='6' spent='2d'/>
        <progress milestone='m2' week='7' spent='0.5d'/>
        <progress milestone='m2' week='8' spent='0.5d'/>
        <progress milestone='m2' week='9' spent='0.5d'/>
      </task>
    </area>
    <area name='Buffer'>
      <task name='buffer' milestone='cut' cost='5d' priority='cut' added='erikc@2/16/99@3:25:20 PM'>
        buffer, vacation, sick leave
      </task>
      <task name='buffer' milestone='m4' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:25:21 PM'>
        buffer, vacation, sick leave, Labor Day
        <adjustment milestone='m4' week='8' cost='-6h'>
          reallocating to other tasks
        </adjustment>
        <progress milestone='m4' week='2' spent='6h'>
          Discussions on managed properties runtime &amp; design-time
        </progress>
        <progress milestone='m4' week='3' spent='2h'>
          managed properties stuff
        </progress>
        <progress milestone='m4' week='5' spent='6h'>
          Managed properties meetings and discussions. build lab suite failures.
        </progress>
        <progress milestone='m4' week='6' spent='6h'>
          2h managed properties work, 4h server explorer debugging
        </progress>
        <progress milestone='m4' week='7' spent='0.5d'>
          managed properties and server explorer issues
        </progress>
        <progress milestone='m4' week='7' spent='1d'>
          Labor Day
        </progress>
        <progress milestone='m4' week='8' spent='2h'>
          Debates with COM+, shell, VSDB teams.
        </progress>
        <progress milestone='m4' week='9' spent='1d2h'>
          Company meeting, misc time sinks like interviews
        </progress>
        <progress milestone='m4' week='10' spent='0.5d'>
          interviews
        </progress>
      </task>
      <task name='mentor' milestone='m4' cost='4d' status='done' priority='1' added='yannc@6/24/99@4:02:30 PM'>
        <progress milestone='m4' week='1' spent='6h'/>
        <progress milestone='m4' week='2' spent='1d'/>
        <progress milestone='m4' week='3' spent='6h'/>
        <progress milestone='m4' week='4' spent='6h'/>
        <progress milestone='m4' week='5' spent='6h'>
          SE as shell service design help
        </progress>
        <progress milestone='m4' week='7' spent='0.5d'/>
        <progress milestone='m4' week='7' spent='0.5d'>
          Helped with configuration drop down, bugs
        </progress>
        <progress milestone='m4' week='7' spent='6h'>
          more help for npchow
        </progress>
        <progress milestone='m4' week='9' spent='6h'/>
        <progress milestone='m4' week='10' spent='0.5d'/>
      </task>
      <task name='bug fixing' milestone='m4' cost='5d' status='done' priority='1' added='yannc@6/24/99@4:01:58 PM'>
        <progress milestone='m4' week='1' spent='6h'>
          VBPS, COM+ bugs
        </progress>
        <progress milestone='m4' week='2' spent='1d2h'>
          tracking down XmlSettingsStore suite failures in build lab; VBPS bug
        </progress>
        <progress milestone='m4' week='4' spent='2h'>
          COM+ assert in build lab run of XmlSettingsStore2 suite
        </progress>
        <progress milestone='m4' week='6' spent='2d6h'>
          Server explorer bugs, bug hell
        </progress>
      </task>
      <task name='recruiting' milestone='m1' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:25:22 PM'>
        Recruiting trip 9/28-10/2
        <progress milestone='m1' week='2' spent='4d'/>
      </task>
      <task name='holidays' milestone='m3' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:25:23 PM'>
        Placeholder for holidays.
        <progress milestone='m3' week='7' spent='1d'>
          Memorial day
        </progress>
      </task>
      <task name='bug fixing' milestone='m2' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:25:33 PM'>
        Unscheduled bug fixing as a result of bug hell
        <progress milestone='m2' week='3' spent='2d'/>
        <progress milestone='m2' week='5' spent='1d'/>
      </task>
    </area>
    <area name='Managed properties'>
      <task name='test suites' milestone='m3' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:26:38 PM'>
        Test suite for administerable properties.
        <adjustment milestone='m3' week='9' cost='1d'>
          Need more time for design-time suite
        </adjustment>
        <progress milestone='m3' week='4' spent='1.5d'>
          Wrote the suite, but it&apos;s not working yet
        </progress>
        <progress milestone='m3' week='5' spent='0.5d'>
          Runtime suites in place.
        </progress>
      </task>
      <task name='Design-time UI' milestone='m3' cost='5d' status='done' priority='1' added='yannc@3/17/99@11:10:53 AM'>
        Design.
        <adjustment milestone='m3' week='9' cost='3d'/>
        <progress milestone='m3' week='4' spent='1.5d'>
          Stuff from GioDL works, though it needed a couple improvements, which I
          was able to make. Got a little code running, but nothing to show off yet.
        </progress>
        <progress milestone='m3' week='5' spent='0.5d'>
          Got PropertyTab to take an IDesignerHost if it needs it. (Which mine does.)
        </progress>
        <progress milestone='m3' week='6' spent='2.5d'>
          First pass checked in. Still very buggy.
        </progress>
        <progress milestone='m3' week='9' spent='2.5d'/>
      </task>
      <task name='IResourceManager,  Implementation over XML file' milestone='m3' cost='5d' status='done' priority='1' added='yannc@3/17/99@11:13:45 AM'>
        Design the IResourceManager interface and do an implementation over an
        XML file.   Most of the time here will be spent on design, this needs to
        be coordinated with other resource-like requirements.  Add design time
        support so the resource can be updated and managed at design-time.   Create
        a project-wide redistributable file.  The resource manager implementation
        should be fully pluggable in the design and runtime environements.
        <adjustment milestone='m3' week='3' cost='3.5d'>
          slippage over the last 2 weeks
        </adjustment>
        <adjustment milestone='m3' week='4' cost='1d'>
          Design review changes, general slippage
        </adjustment>
        <adjustment milestone='m3' week='5' cost='2.5d'>
          My approach was wrong, needed a re-work.
        </adjustment>
        <progress milestone='m3' week='1' spent='2d'>
          Wrote IValueStore. Wrote implementation over XML file. Not all requirements
          are collected yet.
        </progress>
        <progress milestone='m3' week='2' spent='2d'>
          Close to a more-or-less final version
        </progress>
        <progress milestone='m3' week='3' spent='3.5d'>
          Checked in first pass
        </progress>
        <progress milestone='m3' week='4' spent='1d'>
          Changes from design review
        </progress>
        <progress milestone='m3' week='5' spent='3d'>
          Refined after meetings. Almost done.
        </progress>
        <progress milestone='m3' week='6' spent='2d'>
          It&apos;s now code-complete.
        </progress>
      </task>
      <task name='Categories' milestone='cut' cost='3d' priority='cut' added='yannc@3/17/99@11:20:34 AM'>
        Support categorizing properties by Class.Property.  So all Queue.Path resources
        are displayed from the Queue.Path resource ID editor.
      </task>
      <task name='Default settings file' milestone='cut' cost='1d' priority='cut' added='yannc@6/23/99@10:58:35 AM'>
        Create a default settings file for an app.  Add method to load the default
        settings file based on its name assemblyname.settings
      </task>
      <task name='fix SettingChanged event model' milestone='cut' cost='0.5d' priority='cut' added='yannc@6/23/99@10:58:36 AM'>
        Go back to two events SettingChanged and SettingStoreChanged.  We will
        hide SettingChanged event in the XmlSettingStore since it is never fired.
      </task>
      <task name='runtime issues' milestone='cut' cost='3d' priority='cut' added='yannc@6/23/99@10:58:37 AM'>
        Look for a default settings file next to the assembly. Change timeout default
        to 1 second. Make sure BeginUpdate and Item[]= throw if DetectStoreChanges
        is false.  Refresh method.  Add Enabled property.
      </task>
    </area>
    <area name='Buffer'>
      <task name='SafeC port' milestone='m3' cost='10d' status='done' priority='1' added='yannc@3/17/99@1:54:36 PM'>
        <progress milestone='m3' week='8' spent='5d'/>
      </task>
      <task name='bug fixing' milestone='m3' cost='4d' status='done' priority='1' added='yannc@3/17/99@1:55:56 PM'>
        <progress milestone='m3' week='1' spent='1d'/>
        <progress milestone='m3' week='6' spent='0.5d'/>
        <progress milestone='m3' week='7' spent='2d'/>
        <progress milestone='m3' week='9' spent='0.5d'>
          brief dealings with server explorer now bugs
        </progress>
      </task>
      <task name='COM+ Issues' milestone='m3' cost='3d' status='done' priority='1' added='yannc@3/17/99@1:56:38 PM'>
        <adjustment milestone='m3' week='5' cost='-2.5d'/>
        <progress milestone='m3' week='1' spent='0.5d'/>
        <progress milestone='m3' week='9' spent='2d'>
          tracking down bugs related to cool port
        </progress>
      </task>
      <task name='Buffer' milestone='m3' cost='5d' status='done' priority='1' added='yannc@3/17/99@7:10:46 PM'>
        buffer, sick leave, vacation
        <adjustment milestone='m3' week='5' cost='-4d'>
          Buffer used for managed properties.
        </adjustment>
        <progress milestone='m3' week='1' spent='0.5d'>
          Helped Greg/Paul with server explorer issues. Server Explorer spec reviews.
        </progress>
        <progress milestone='m3' week='2' spent='0.5d'>
          More server explorer help
        </progress>
      </task>
    </area>
    <area name='Deployment'>
      <task name='Adjustment' milestone='m4' cost='1.5d' status='done' priority='1' added='stefanph@8/2/99@1:38:01 PM'>
        I broke out deployment tasks into smaller tasks, and they added up to less
        than what was costed before.
      </task>
    </area>
    <area name='Buffer'>
      <task name='Buffer' milestone='m5' cost='10d' priority='1' added='yannc@11/22/1999@5:27:45 PM'>
        Vacation, sick, bug fixing.
        <progress milestone='m5' week='1' spent='1d'>
          Sick 1/3/00
        </progress>
        <progress milestone='m5' week='2' spent='1d'>
          checkin hell
        </progress>
        <progress milestone='m5' week='3' spent='5d'>
          bugs, managed properties UI discussions.
        </progress>
        <progress milestone='m5' week='4' spent='2.5d'>
          bugs
        </progress>
        <progress milestone='m5' week='5' spent='2d'>
          General distractions, mentoring, bug fixing.
        </progress>
        <progress milestone='m5' week='6' spent='4d'>
          bugs, bugs, bugs
        </progress>
        <progress milestone='m5' week='8' spent='3d'>
          Now bugs, setup new machine, VS/URT interop problems
        </progress>
      </task>
    </area>
    <area name='Side by Side'>
      <task name='deployment' milestone='m5' cost='1d' priority='1' added='yannc@12/8/1999@12:59:57 AM'/>
    </area>
    <area name='NT Service framework'>
      <task name='Dependent services' milestone='m5' cost='1d' status='done' priority='2' added='yannc@12/8/1999@4:22:39 PM'>
        Need method in ServiceControl to get children. Need to recursively shut
        down all children and their children. Need to then shut down parent. Optionally
        put up a dialog to list the child services and ask the question as to whether
        or not the user wants to continue shutting down, etc. just like the control
        panel applet.
        <progress milestone='m5' week='2' spent='1d'/>
      </task>
    </area>
    <area name='Managed properties'>
      <task name='Update ISettingsStore' milestone='m5' cost='1d' priority='1' added='stefanph@2/14/2000@5:14:54 PM'>
        Design ISettingsStore to include a single level of categories.
        <progress milestone='m5' week='7' spent='0.5d'>
          Spent some time thinking about the object model. No conclusive results,
          because it was put on hold.
        </progress>
      </task>
      <task name='temporary runtime component' milestone='m5' cost='3d' priority='1' added='stefanph@2/14/2000@5:16:15 PM'>
        Write a runtime component implementing the new ISettingsStore. It can us
        an arbitrary store for now (ADO+ and IConfigItem are candidates.)
        <progress milestone='m5' week='7' spent='1d'>
          Simple: use ADO+.
        </progress>
      </task>
      <task name='Bindings editor dialog' milestone='m5' cost='1.5d' priority='1' added='stefanph@2/14/2000@5:16:41 PM'>
        Code up a dialog for the bindings editor
        <progress milestone='m5' week='6' spent='0.5d'>
          got a simple UI based on KCwalina&apos;s sample going
        </progress>
        <progress milestone='m5' week='7' spent='0.5d'>
          refined the UI to be more functional. Also attended a meeting on the UI.
        </progress>
        <progress milestone='m5' week='8' spent='1d'>
          Changing designer code around a little to support databinding-like UI
        </progress>
      </task>
      <task name='code-spit' milestone='m5' cost='2d' status='done' priority='1' added='stefanph@2/14/2000@5:17:13 PM'>
        manage the code-spit data (IValueProvider implementation). Also do the
        actual code-spit.
        <progress milestone='m5' week='6' spent='0.5d'>
          Got the data classes written
        </progress>
        <progress milestone='m5' week='7' spent='1.5d'>
          Got the right code spitting.
        </progress>
      </task>
      <task name='update cfg file' milestone='m5' cost='2.5d' priority='1' added='stefanph@2/14/2000@5:19:02 PM'>
        Use ADO+ to write the real values to the shell buffer. (At time of code-spit?
        Or immediately when the value changes?) Also write changes to the schema.
        <progress milestone='m5' week='7' spent='1.5d'>
          Got the ADO+ parts figured out and working. Worked on VS editor parts,
          but ran into bugs.
        </progress>
      </task>
      <task name='decide on runtime' milestone='m5' cost='1d' priority='1' added='stefanph@2/14/2000@5:20:03 PM'>
        Decide on the store to use. Work out issues, if any, wiht using it.
      </task>
      <task name='final runtime component' milestone='m5' cost='2.5d' priority='1' added='stefanph@2/14/2000@5:20:53 PM'>
        Gut the temporary runtime component and rework it to use the new store
      </task>
      <task name='databinding-like value editor' milestone='m5' cost='1d' priority='2' added='stefanph@2/14/2000@5:21:49 PM'>
        Possibly write a value editor to mimic the databinding UI.
        <progress milestone='m5' week='8' spent='1d'>
          got about 75% working
        </progress>
      </task>
      <task name='schema schema' milestone='m5' cost='0.5d' priority='2' added='stefanph@2/14/2000@5:22:40 PM'>
        Possibly compose a schema for the schema, restricting what the user can
        do in the file to what the config system supports
      </task>
      <task name='Build processor' milestone='m5' cost='1d' priority='1' added='stefanph@2/14/2000@5:23:10 PM'>
        Write a build processor to verify the settings file contents
      </task>
      <task name='update schedule' milestone='m5' cost='2d' status='done' priority='1' added='stefanph@2/14/2000@6:06:05 PM'>
        work to update the MP schedule and hash out other issues. Done before rescheduling.
        <progress milestone='m5' week='4' spent='0.5d'>
          discussions with kcwalina, markush, yannc
        </progress>
        <progress milestone='m5' week='5' spent='1.5d'>
          rework schedule for this feature. meetings, discussions
        </progress>
      </task>
    </area>
    <area name='Tracing'>
      <issue name='Vista'>
        Make sure we don&apos;t want to use Vista technology for this
      </issue>
    </area>
    <area name='Extensibility'>
      Extensibility interfaces for shell related features.
      <issue name='Extensiblity of server explorer' status='Requirements Unknown'>
        Does this shell do this automatically because we are using IVsHierarchy?
      </issue>
    </area>
  </person>
</schedule>
