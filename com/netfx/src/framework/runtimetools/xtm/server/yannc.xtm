<schedule team='WFC.Server'>
  <person name='yannc'>
    <area name='HTTP Method Calls' priority='1'>
      This is the work necessary to make method calls from a client to business
      objects on an IIS server.  This includes generating specific classes as
      well as the generic base proxy class.  It uses HTTP functionality from
      wfc.net.
      <task name='Async proxy, runtime' milestone='m5' cost='5d' priority='1' added='yannc@8/2/99@11:50:43 AM'>
        Async support in proxy generation.  Support async in the runtime classes,
        specifically HttpInvoke.
      </task>
      <task name='Async server class' milestone='m5' cost='3d' priority='2' added='yannc@8/2/99@11:50:44 AM'>
        Develop programming model and runtime support to enable async WebPublic
        methods.   Most of the work should fall on URT and XSP.
      </task>
      <task name='BaseProxy object model' milestone='m5' cost='3d' priority='1' added='yannc@11/9/1999@2:34:56 PM'>
        Expose request/response on BaseProxy object model.   Timeout property.
        Security issues for Basic, Digest, NT authentication, and Passport.
      </task>
      <task name='Command line build' milestone='m5' cost='2d' priority='1' added='yannc@11/9/1999@2:36:07 PM'>
        Need command line build to supply URL for web-projects in Basic.  Support
        COOL command line build with command line pre- and post- processors. Fix
        post-processor to only run for web projects
      </task>
    </area>
    <area name='Threading issues' priority='1'>
      <task name='Marshal to UI thread' milestone='m5' cost='3d' priority='1' added='yannc@11/9/1999@2:36:14 PM'>
        Auto-marshal events to the UI thread if the component is sited on a rich
        control.
        <progress milestone='m5' week='2' spent='2d'/>
      </task>
    </area>
    <area name='Scheduler'>
      <task name='One timer' milestone='m5' cost='1d' priority='2' added='yannc@6/24/99@4:02:24 PM'>
        Merge WFC timer and server timer components
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='Remote debugging' milestone='m5' cost='4d' priority='1' added='yannc@11/9/1999@2:36:02 PM'>
        Make calls to support remote debugging:  step-in,  logical callstack.
        <progress milestone='m5' week='3' spent='0.5d'/>
      </task>
    </area>
    <area name='NT Service framework'>
      <task name='No UI flag' milestone='m5' cost='0d' priority='1' added='yannc@11/9/1999@2:35:10 PM'>
        Need WFC flag or some way to detect if it is valid to bring up UI,  for
        service applications this should be false.
      </task>
    </area>
    <area name='Transactions'>
      <task name='AutoSetComplete attribute for methods' milestone='m5' cost='0d' priority='1' added='erikc@2/16/99@3:23:57 PM'>
        URT owns this.  When to complete transaction property.  Metadata attribute
        for whether transactions complete after each method call or can span method
        calls (autosetcomplete). Need equivalent for errors: autosetabort. Autosetcomplete
        will be the default. Talk to COM+ about this.
      </task>
    </area>
    <area name='Loosely Coupled Events Architecture'>
      <task name='Integrate WebMethods and WebEvents' milestone='cut' cost='4d' priority='cut' added='yannc@11/9/1999@2:35:26 PM'/>
    </area>
    <area name='HTTP Method Calls'>
      <task name='Cookie support in BaseProxy' milestone='m5' cost='2d' priority='1' added='yannc@11/9/1999@2:34:55 PM'>
        Manage a per-proxy-instance cookie.
      </task>
    </area>
    <area name='Suites architecture'>
      <task name='Driver app, base framework (#1)' milestone='m2' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:25:46 PM'>
        Write driver app.  Setup basic framework,  test directories.  Including
        support for getting test-code built, deployed and executing on multiple
        machines.   Listen for completion signal in the driver app.   Support killing
        the test from the driver app.  Monitor test progress from the driver app.
        <progress milestone='m2' week='2' spent='1d'>
          More driver work.
        </progress>
        <progress milestone='m2' week='1' spent='3d'>
          Base framework for suites.
        </progress>
      </task>
      <task name='Correctness tests (#2)' milestone='m2' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:25:47 PM'>
        Add additional support required for correctness tests.  Log test output
        and compare against baselines (one per participating machine).  Add support
        for automatic nightly runs including nightly mailer.  Driver app improvements.
        <adjustment milestone='m2' week='4' cost='1d'/>
        <progress milestone='m2' week='2' spent='3d'>
          Lots of work in the test driver.  Baseline support,  many new driver options,
          config file.  Switched to NT build.
        </progress>
        <progress milestone='m2' week='3' spent='1d'/>
        <progress milestone='m2' week='4' spent='1d'>
          Completed and checked in stage 2.
        </progress>
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='runtime classes' milestone='m4' cost='4d' status='done' priority='1' added='yannc@6/23/99@11:07:08 AM'>
        Finish implementation of IWebParameterHandler, IWebReturnHandler, HttpClientRequest,
        WebParameters HttpClientResponse, HttpInvokeStub, HttpInvokeStubFactory,
        HttpInvoke. HttpClientRequest and HttpClientResponse should be very simple.
        <progress milestone='m4' week='3' spent='4d'/>
      </task>
      <task name='MediaType classes' milestone='m4' cost='2d' status='done' priority='1' added='yannc@6/24/99@4:02:31 PM'>
        <progress milestone='m4' week='7' spent='1d'>
          updated design spec.
        </progress>
      </task>
      <task name='DataSetXmlHandler' milestone='m4' cost='3d' status='done' priority='1' added='yannc@6/23/99@11:07:09 AM'>
        This handler deals with arguments of type DataSet.
        <progress milestone='m4' week='1' spent='3d'/>
      </task>
      <task name='ScalarXmlHandler, FormHandler, QueryHandler' milestone='m4' cost='3d' status='done' priority='1' added='yannc@6/23/99@11:07:10 AM'>
        Handle methods with scalar types.  support xml, form post and query string.
        <progress milestone='m4' week='3' spent='3d'/>
      </task>
      <task name='ScalarXmlHandler primitive array support' milestone='m4' cost='2d' priority='1' added='yannc@6/23/99@11:07:11 AM'/>
      <task name='ScalarXmlHandler primitive struct support' milestone='m4' cost='2d' priority='2' added='yannc@6/24/99@4:01:59 PM'/>
      <task name='ScalarXmlHandler complex struct support' milestone='m4' cost='1d' priority='2' added='yannc@6/24/99@4:02:33 PM'/>
      <task name='DataSetXmlHandler enhanced features' milestone='cut' cost='5d' priority='cut' added='yannc@6/23/99@11:07:12 AM'>
        Add support for methods with DataSet and primitive arguments.
      </task>
      <task name='access to HttpContext' milestone='m5' cost='0d' priority='2' added='yannc@8/2/99@11:50:35 AM'>
        Make sure access to HttpContext works
      </task>
      <task name='Write some real-world MML' milestone='m5' cost='0d' priority='1' added='yannc@11/9/1999@2:36:08 PM'/>
    </area>
    <area name='Com+ integration'>
      <task name='com+ port' milestone='m1' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:25:59 PM'>
        <progress milestone='m1' week='s1' spent='5d'/>
      </task>
    </area>
    <area name='Design'>
      <task name='design' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:26:00 PM'>
        <adjustment milestone='m1' week='7' cost='2d'/>
        <progress milestone='m1' week='6' spent='1d'>
          Meetings for Basic attributes, VB6 class module support, Application state,
          code review, interview.
        </progress>
        <progress milestone='m1' week='7' spent='1d'>
          Meetings for new IIS architecture (thread pooling), services, MSML format,
          code review, morale event, project model, RADBU,
        </progress>
      </task>
    </area>
    <area name='Threading issues'>
      <task name='Async programming model' milestone='m5' cost='0d' priority='1' added='yannc@11/9/1999@2:36:15 PM'>
        What is the async programming model for components?
      </task>
      <task name='Thread attribute' milestone='m5' cost='1d' priority='1' added='yannc@11/9/1999@2:36:16 PM'>
        Determine if our components should be marked &quot;application domain bound&quot;(forces
        proxy generation, stops inlining), or &quot;unbound&quot; (marshall by
        value).  Or  mark it &quot;unbound&quot; and &quot;not marshallable&quot;
        requiring the user to write a sub-class that can be marshaled.
      </task>
    </area>
    <area name='Persistence' priority='1'>
      There is  the ability to load and save any object using a standard XML
      format defined by Microsoft. In addition, you can load and save objects
      to a custom XML format by supplying additional information via XmlMap.
      <issue name='M2 XmlObjectReader XmlObjectWriter'>
        Should the persister filter out read-only properties that are not-marked
        as transient?   in some cases might want to persist these out when the
        xml is intended for a different consumer.
      </issue>
      <issue name='Marshaling vs. persistence' status='done'>
        Talk to COM+ folks about the future of marshaling vs. persistence. It&apos;s
        possible to write a &apos;formatter&apos; that will save the binary state
        of any object, which is what is required for marshalling, so these have
        been unified.
      </issue>
      <issue name='XmlMap UI and design time support'>
        Verify that XmlMap designer doesn&apos;t need to work on the Form designer.
      </issue>
      <issue name='COM+ dependency' status='dependency'>
        Dependent on efficient object walking API from COM+.
      </issue>
      <task name='XML Parser' milestone='m1' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:26:01 PM'>
        Take our existing XML Parser and modify it to read a schema-less XML format
        for class persistence.
        <progress milestone='m1' week='1' spent='2d'/>
      </task>
      <task name='M1 XML format design' milestone='m1' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:26:02 PM'>
        Continuing discussion and refinement for the class persistence format plus
        merging the formats and design issues with MSML.
        <adjustment milestone='m1' week='8' cost='1d'>
          Need review of design and COM+ component model.
        </adjustment>
        <adjustment milestone='m1' week='9' cost='-1d'>
          Moved to &apos;M2 Xml format design&apos; task.
        </adjustment>
        <progress milestone='m1' week='1' spent='2d'/>
        <progress milestone='m1' week='2' spent='1d'>
          Experimented with some more formats and defined some design goals to help
          drive our discussion.  Met with MSML but made little progress with them.
          Discussed options with ErikC and picked a specific format which I am currently
          targetting.
        </progress>
        <progress milestone='m1' week='3' spent='1d'>
          More experimentation, finalized some key aspects of the format for propertied
          objects, arrays, primitives, cross-references.
        </progress>
        <progress milestone='m1' week='5' spent='1d'/>
      </task>
      <task name='M1 XmlObjectReader XmlObjectWriter' milestone='m1' cost='12d' status='done' priority='1' added='erikc@2/16/99@3:26:03 PM'>
        <progress milestone='m1' week='1' spent='1d'/>
        <progress milestone='m1' week='2' spent='4d'>
          Rewrote this twice due to format changes.   Gave up on sub-class design
          between ObjectReader and XMLObjectReader since it was too confusing.  Will
          work out user-custom persistence later (a different work-item).
        </progress>
        <progress milestone='m1' week='3' spent='4d'>
          More changes to support a more-reflection oriented approach.  Some optimizations
          to reduce expense of IDREFs.  The optimizations were more complex then
          originally anticipated,  probably should have waited to do some profiling.
        </progress>
        <progress milestone='m1' week='4' spent='4d'/>
      </task>
      <task name='M2 XmlObjectReader XmlObjectWriter' milestone='m2' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:26:04 PM'>
        New format will require significant changes to the reader/writer.  Format
        is going to completely change to one that is verifiable.  Need to redo
        the design and have it reviewed and approved.
        <progress milestone='m2' week='3' spent='2.5d'>
          Rewrote XmlObjectReader and XmlObjectWriter to support new MSML format.
        </progress>
        <progress milestone='m2' week='4' spent='1.5d'>
          More design work and coding completed.
        </progress>
      </task>
      <task name='Pluggable persistence format model' milestone='m1' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:26:06 PM'>
        While the focus is on the XML format our persistence model should be pluggable
        so that other formats can be used.
        <progress milestone='m1' week='5' spent='4d'/>
        <progress milestone='m1' week='6' spent='1d'>
          Redesign and simplification of the persistence object model after WFC design
          review.   Object naming/hierarchies is now XML format specific and not
          considered a core feature.   Users can XQL to extract sub-trees (inner
          objects) out of the XML tree and de-persist from the sub-tree
        </progress>
        <progress milestone='m1' week='7' spent='1d'>
          Spec&apos;ed out most of the persistence object model and XML persistence,
          need to add current state of affairs. Evaluated COM+ persistence proposal
          in more detail,  will need to meet with them to discuss design conflicts.
        </progress>
      </task>
      <task name='XmlMap: Runtime objects' milestone='m1' cost='7d' status='done' priority='1' added='erikc@2/16/99@3:26:07 PM'>
        The map should be fully defined at design time by the user so at runtime
        the map objects only need to supply information and allow navigation of
        the map. The user can make runtime changes to the map but it is not designed
        to be simple nor optimal.
        <adjustment milestone='m1' week='8' cost='5d'>
          Need to refactor UI and runtime objects,  Push inferrence and consistency
          methods back into runtime objects. Code-spit of runtime objects. Fast lookup
          of ElementTypes and Elements based on Tag or PropertyName.   Use sorted
          arrays and binary search.   Have flag to set sort order (by tag or property
          name, tag or class name). Infer from class FreeText,  Attributes support
        </adjustment>
        <progress milestone='m1' week='6' spent='1d'>
          Initial thoughts on XML mapping.   Studied XSL to see how it fit in. It
          looks too complicated.	 Read some more  XML whitepapers to get a better
          understanding of the spirit of XML and to get an idea of the kinds of documents
          users will have to map objects too.
        </progress>
        <progress milestone='m1' week='7' spent='3d'>
          Studied XML, XSL, XQL, XML-Data specs in more detail to better understand
          the technologies that will be available, and how our users might expect
          to use XML.  Spec&apos;ed out initial design and requirements for XmlMap:
          GUI designer, mapping customizations,	persistence format of map information,
          schema guesser (xml doc importer).
        </progress>
        <progress milestone='m1' week='8' spent='4.5d'>
          Created runtime object hierarchy,  schema guesser,  map consistency checker.
          Explored UI possibilities using value editors in the property grid,  that
          didn&apos;t work.   Switched to using server explorer as temporary host
          for TreeView part of designer.
        </progress>
        <progress milestone='m1' week='9' spent='4.5d'>
          Checked in runtime objects.
        </progress>
      </task>
      <task name='XmlMap UI and design time support' milestone='cut' cost='10d' priority='cut' added='erikc@2/16/99@3:26:08 PM'>
        XmlMap UI consists of a TreeView to navigate the map hierarchy plus the
        property browser to edit the properties of each object in the map.   The
        TreeView will be hosted in a designer that can be hosted inside the Class
        Designer. Needs to support sinking component changed modifications from
        the pbrs and drive schema guessing and consistency in the map.   Will also
        drive selection in the property browser.  Support add new ElementType and
        new Element.  Need to make numerous design decisions about inferring the
        schema from existing documents and classes,  and how consistency in the
        map is enforced when the user makes changes (propagating a change).
      </task>
      <task name='Component defined custom persistence' milestone='m1' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:26:09 PM'>
        Components need a mechanism to participate in the persistence process perhaps
        with multiple options. For now supporting PropertyBag, IConstructable,
        IPersistable.
        <adjustment milestone='m1' week='8' cost='-1d'>
          Consolidated COM+ work.
        </adjustment>
        <progress milestone='m1' week='6' spent='2d'>
          Added basic property bag support in XML reader and writer.
        </progress>
        <progress milestone='m1' week='8' spent='0.5d'>
          Took 4h to do a checkin.
        </progress>
        <progress milestone='m1' week='9' spent='0.5d'>
          Added IPersistable and IConstructable.
        </progress>
      </task>
      <task name='Resolve with COM+ model' milestone='m3' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:26:10 PM'>
        <progress milestone='m3' week='4' spent='1d'>
          COM+ serialization engine is underway.   MSML formatter will be supplied
          by PDeJong.   I will be monitoring it closely.
        </progress>
        <progress milestone='m3' week='6' spent='2d'/>
      </task>
      <task name='Persistence perf suites and test suites' milestone='m1' cost='5d' status='done' priority='1' added='erikc@2/16/99@3:26:11 PM'>
        Since this will be the first time I will be perf or test suites this will
        take longer then normal.
        <adjustment milestone='m1' week='9' cost='-3d'>
          Spent some time on this during bug fix period.
        </adjustment>
        <progress milestone='m1' week='4' spent='1d'>
          Wrote some tests for common persistence scenarios.
        </progress>
        <progress milestone='m1' week='s1' spent='4d'/>
      </task>
      <task name='Encryption' milestone='cut' cost='2d' priority='cut' added='erikc@2/16/99@3:26:12 PM'>
        How does encryption work?   Need to work this into the persistence object
        model.  &lt;b&gt;people can layer encryption on top of the xml format.
        we will have an encrypting stream&lt;/b&gt;
      </task>
    </area>
    <area name='XML Manipulation component' priority='1'>
      Xml files in the directory on the server will automatically have an XML
      Document Object Model (DOM) associated with them.  This allows you to use
      the data easily from code.  There will be an optional mapping of xml to
      a set of objects as well (see persistence).  &lt;b&gt;some other group
      will produce this&lt;/b&gt;
      <task name='dom' milestone='cut' cost='10d' priority='cut' added='erikc@2/16/99@3:26:14 PM'>
        Is the iis dom going to be good enough or do we need to do some work to
        make it perform on com+.
      </task>
      <task name='project integration' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:26:15 PM'>
        Make an xml file in the project look like an object.  May be simple Extends
        XmlDom and then code spit to load from the file in	the project.
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='Recycling' milestone='cut' cost='3d' priority='cut' added='erikc@2/16/99@3:26:17 PM'>
        The user would write code to recyle the object, if they want more performance.
        This uses IRecycle, which should have a method that fires right before
        you get cached away.  Need to work on IIS with this design.  ISSUE: Do
        we even want this programming model?
      </task>
    </area>
    <area name='NT Service framework'>
      <task name='IDE integration' milestone='m4' cost='2d' priority='2' added='yannc@6/24/99@4:02:34 PM'>
        Determine IDE debugging integration. This includes F5 behavior.
      </task>
    </area>
    <area name='Buffer'>
      <task name='vacation' milestone='m3' cost='11d' status='done' priority='1' added='erikc@2/16/99@3:26:26 PM'>
        Place holder for vacation
        <adjustment milestone='m3' week='m1' cost='1d'/>
        <adjustment milestone='m3' week='9' cost='1d'/>
        <progress milestone='m3' week='1' spent='2d'/>
        <progress milestone='m3' week='2' spent='5d'/>
        <progress milestone='m3' week='3' spent='5d'/>
        <progress milestone='m3' week='9' spent='1d'/>
      </task>
    </area>
    <area name='Persistence'>
      <task name='VSForms requirements' milestone='m2' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:26:27 PM'>
        Add support for external references.   For write need to know which objects
        to not persist and what id to use for the external reference.   During
        read need the set of external objects and there ids.   Will cause changes
        to the object model.  Also,  fix class entry caching in the reader.
        <adjustment milestone='m2' week='6' cost='-1d'>
          cut for this milestone.
        </adjustment>
      </task>
    </area>
    <area name='Com+ integration'>
      <task name='port to com+,  better utilize com+' milestone='m2' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:26:28 PM'>
        2nd port from Ironwood to WFC tree including conversion to COM+ reflection
        API.   Use sorted list COM+ class in XmlMap.  Switch from using ClassInfo
        to metadata (eg. Persistable attribute).  Add support to persist public
        fields (should be easier with COM+ reflection).
        <progress milestone='m2' week='6' spent='1d'/>
        <progress milestone='m2' week='7' spent='2d'>
          Port was slower due to overhead of getting debugger to work.
        </progress>
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='generic proxy' milestone='m2' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:26:29 PM'>
        This is the base class for each specific class proxy.  It can also be used
        standalone, in cases where the reference is not known statically.
        <adjustment milestone='m2' week='s1' cost='1d'/>
        <progress milestone='m2' week='8' spent='2d'/>
        <progress milestone='m2' week='9' spent='2d'/>
      </task>
      <task name='test suites' milestone='m4' cost='1d' priority='1' added='erikc@2/16/99@3:26:30 PM'>
        Do a test suite for the generic and subclassed http proxy.
        <progress milestone='m4' week='5' spent='0.5d'>
          added a simple test that uses xsptool.
        </progress>
      </task>
    </area>
    <area name='Managed properties' priority='1'>
      Need support to allow specific component properties to have their persisted
      values be editable at runtime.   Should be able edit the values in notepad
      or through remote admin tools.
      <task name='Runtime component' milestone='m2' cost='4d' status='done' priority='1' added='erikc@2/16/99@3:26:33 PM'>
        This component is used during initialization (the code-spitter) and by
        user-code to read values out of the data file.   The values are cached
        in memory.  The cache is shared across transactions/threads in a process.
        There is support for updating the cache when the data file is changed.
        There is possibly support for keeping the cache consistent for the lifetime
        of a transaction,  even if the file gets updated.
        <adjustment milestone='m2' week='6' cost='-2d'>
          Simplified deliverable for this milestone.
        </adjustment>
        <progress milestone='m2' week='9' spent='1d'/>
      </task>
      <task name='Generate data files (.xml),  deployment' milestone='m2' cost='2d' status='done' priority='1' added='erikc@2/16/99@3:26:34 PM'>
        Generate design and runtime files containing persisted data for Managed
        properties.   Support for class and project level files.   Merge the files
        for runtime.  Incorporate into project deployment.
        <adjustment milestone='m2' week='9' cost='-1d'/>
        <progress milestone='m2' week='9' spent='1d'/>
      </task>
    </area>
    <area name='Design'>
      <task name='Design' milestone='m2' cost='10d' status='done' priority='1' added='erikc@2/16/99@3:26:39 PM'>
        <adjustment milestone='m2' week='5' cost='4d'/>
        <adjustment milestone='m2' week='6' cost='6d'/>
        <progress milestone='m2' week='1' spent='2d'>
          Much schedule work, meetings for most m2 areas.
        </progress>
        <progress milestone='m2' week='2' spent='1d'/>
        <progress milestone='m2' week='3' spent='1.5d'>
          Meetings and designing for MSML, HTTP method calls, Managed properties,
          remote management/keeping state, state services.
        </progress>
        <progress milestone='m2' week='4' spent='1.5d'/>
        <progress milestone='m2' week='5' spent='4d'>
          Design work/coming up to speed/meetings with Fusion, COM+ security, SOAP,
          server components/patterns, COM+ serialization.  Stefan&apos;s review,
          my review.
        </progress>
        <progress milestone='m2' week='6' spent='4d'>
          http proxy design,  MSML/SOAP,  managed properties.
        </progress>
        <progress milestone='m2' week='7' spent='3d'/>
        <progress milestone='m2' week='8' spent='2d'/>
        <progress milestone='m2' week='9' spent='1d'/>
      </task>
    </area>
    <area name='Buffer'>
      <task name='vacation' milestone='m2' cost='3d' status='done' priority='1' added='erikc@2/16/99@3:26:40 PM'>
        Need to ski.
        <adjustment milestone='m2' week='6' cost='-1d'/>
        <progress milestone='m2' week='8' spent='1d'/>
      </task>
    </area>
    <area name='Persistence'>
      <task name='test suites' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:26:41 PM'>
        test suites
      </task>
    </area>
    <area name='Buffer'>
      <task name='holidays' milestone='m3' cost='1d' status='done' priority='1' added='erikc@2/16/99@3:26:43 PM'>
        Placeholder for holidays.
        <progress milestone='m3' week='8' spent='1d'/>
      </task>
    </area>
    <area name='Design'>
      <task name='Design' milestone='m3' cost='3w1d' status='done' priority='1' added='erikc@2/16/99@3:26:44 PM'>
        General design work.  Manage team-wide issues including coding standards,
        coding patterns, component model,  COM+/SafeC/Basic issues,  error handling,
        serialization design,  XML usage, state services
        <progress milestone='m3' week='1' spent='3d'>
          http remoting design work,  MSML spec update.  spec reviews
        </progress>
        <progress milestone='m3' week='4' spent='4d'>
          remoting format work and object model,  reviewing element normal form for
          MSML,  wfc server issues.
        </progress>
        <progress milestone='m3' week='7' spent='5d'/>
        <progress milestone='m3' week='8' spent='5d'/>
      </task>
    </area>
    <area name='Persistence'>
      <task name='MSML' milestone='m2' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:26:45 PM'>
        Drive MSML working group,  drive dependencies on serialization API,  COM+
        xml parser,  co-define MSML format object extensions.
        <adjustment milestone='m2' week='4' cost='2d'/>
        <progress milestone='m2' week='4' spent='1d'>
          MSML working group formed,  meetings on SOAP and MSML,  spec work.
        </progress>
        <progress milestone='m2' week='5' spent='1d'>
          More meetings with SOAP and MSML.
        </progress>
      </task>
    </area>
    <area name='Buffer'>
      <task name='COM+ issues' milestone='m3' cost='3d' status='done' priority='1' added='yannc@3/17/99@1:29:50 PM'>
        <progress milestone='m3' week='6' spent='3d'/>
      </task>
    </area>
    <area name='Async programming'>
      <task name='IAsyncResult AsyncResult' milestone='cut' cost='3d' priority='cut' added='yannc@6/24/99@4:02:35 PM'>
        Provide basic IAsyncResult and AsyncResult abstract base class implementation.
        CUT: We will use the URT async programming model.
      </task>
    </area>
    <area name='SQL trigger' priority='2'>
      Run basic code on a trigger.
      <task name='event' milestone='cut' cost='8d' priority='cut' added='erikc@2/16/99@3:25:34 PM'>
        Fire a server event when a trigger runs in SQL.  Initially we will try
        to get SQL to deliver this.
      </task>
    </area>
    <area name='Server Framework'>
      <task name='Product setup' milestone='m5' cost='0d' priority='1' added='yannc@8/2/99@11:50:51 AM'>
        Visual Studio setup of server framework components and design time support.
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='QueryStringHandler' milestone='m4' cost='1.5d' status='done' priority='1' added='yannc@8/2/99@11:57:52 AM'>
        do an HTTP Get with parameters in the query string of the URL.   handle
        an HTTP Get on the server.
        <progress milestone='m4' week='1' spent='1.5d'/>
      </task>
    </area>
    <area name='Tracing'>
      <task name='Merge into settings file' milestone='m5' cost='2d' priority='2' added='yannc@11/9/1999@2:36:19 PM'>
        Merge the switch settings into the settings file.
      </task>
      <task name='Cleanup Debug class and Switches' milestone='m5' cost='2d' priority='1' added='yannc@11/9/1999@2:36:20 PM'>
        general cleanup.  hookup to Output window if debugger is attached.  reconcile
        with System.Diagnostics.Trace.  Cleanup WFCSwitches
        <progress milestone='m5' week='3' spent='0.5d'/>
      </task>
    </area>
    <area name='Code Window Attribute Editing'>
      <task name='Design' milestone='m1' cost='0d' status='done' priority='1' added='erikc@2/16/99@3:26:13 PM'>
        Need a design for supporting VB6 class module properties and events.
        <progress milestone='m1' week='9' spent='0d'>
          Design doc written.
        </progress>
      </task>
    </area>
    <area name='Web Applications'>
      <task name='Web applications' milestone='m5' cost='4d' priority='1' added='yannc@11/9/1999@5:06:29 PM'>
        Improve the web application experience at design time.  Application class
        support, security configuration support.
      </task>
    </area>
    <area name='Buffer'>
      <task name='Buffer' milestone='m5' cost='3w4.5d' priority='1' added='yannc@11/22/1999@5:28:13 PM'>
        Vacation, sick, bug fixing, management.
        <progress milestone='m5' week='1' spent='5d'>
          design issues.
        </progress>
        <progress milestone='m5' week='2' spent='3d'>
          design issues
        </progress>
        <progress milestone='m5' week='3' spent='4d'/>
      </task>
    </area>
    <area name='HTTP Method Calls'>
      <task name='Namespaces' milestone='m5' cost='3d' priority='1' added='yannc@12/8/1999@12:55:43 AM'>
        Preserve namespaces of classes, structs, enums in MML.   Only allow user-defined
        structs and enums.  Honor namespaces in client generated proxy.
      </task>
    </area>
    <area name='State services' priority='1'>
      Storing state that is temporary (not stored permanently in a database or
      whatever) is done via IIS state services, such as &quot;application&quot;
      or &quot;session&quot; or &quot;user&quot;.   Session is only available
      during an http request, application is always available.  &lt;b&gt;Note:&lt;/b&gt;
      WFC is driving the client side object model,  server-side object model
      should be the same or similar.  Also the IIS re-architecture team will
      be providing COM+ wrappers of IIS 4.0 state services (in their M2) and
      may also provide a lite version of the Kevlar state-services (Kevlar is
      the IIS shipping with NT5.0).
      <issue name='com+'>
        Are the api&apos;s com+ized?
      </issue>
      <issue name='language support'>
        Do something more, e.g. dim x as integer per user?
      </issue>
      <issue name='objects as state'>
        What about persisting objects as xml as state?
      </issue>
      <issue name='spam vs imdb vs iis'>
        What is the role of the MTS shared property manager (SPAM) What about IMDB?
        WHAT IS THE PROGRAMMING MODEL?  ADO?   WHAT IS THE RELATIONSHIP BETWEEN
        THE IIS SERVICES AND THE IMDB. WHEN WOULD I USE SPAM?  We are in the process
        of reconciling these state services with the IIS mechanisms.
      </issue>
      <issue name='components or globals'>
        Perhaps we could have a &quot;user variable&quot;, &quot;session variable&quot;,
        and &quot;application variable&quot; components that have setValue/getValue
        and a property to name them.  These would delegate to the session/application/user
        intrinsics, but the user would not have to type strings all over their
        code.
      </issue>
      <issue name='expandos'>
        Should we support expandos on User/Session/Application?  Talk to scottwil
        about support for expandos.
      </issue>
      <issue name='client state'>
        The client needs to store state that identifies what functionality is available
        on the client, for example, the set of URLs and the fancy names for them.
        You need to be able to have this invalidated when something happens. Ken
        is driving this.
      </issue>
    </area>
  </person>
</schedule>
