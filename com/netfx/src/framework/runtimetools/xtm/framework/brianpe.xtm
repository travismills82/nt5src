<schedule team='WFC'>
  <person name='BrianPe'>
    <area name='Designer : Base Architecture'>
      <task name='Designer package interfaces' milestone='m1' cost='5d' status='done' priority='1' added='chrisan@2/17/99@8:54:07 AM'>
        <progress milestone='m1' week='1' spent='5d'/>
      </task>
    </area>
    <area name='Designer : Architecture'>
      <issue name='Designer documentation requirements'>
        We need someone to work with UE for documenting the designer architecture
        -- this is supposed to be exposed to 3rd parties.
      </issue>
      <issue name='Need reference attribute'>
        Need to support an attribute int he text of the template that tells the
        compiler to ask the prject to add a reference.
      </issue>
      <issue name='designer interface review'>
        need to take a good look at all the designer interfaces and clean them
        up.
      </issue>
      <task name='Shadow and design time properties' milestone='m1' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:08 AM'>
        <progress milestone='m1' week='2' spent='3d'/>
      </task>
      <task name='Property merging' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:09 AM'>
        <progress milestone='m1' week='2' spent='2d'/>
      </task>
      <task name='Improve toolbox/DD support for server explorer' milestone='m5' cost='1d' status='done' priority='1' added='brianpe@11/17/99@4:31:08 AM'>
        Some items in the server explorer are droppable to WFC forms.  We only
        have support for ToolboxItems here today, but some teams need to also generate
        HTML for other drop targets.  Work to generalize our support for OLE DD
        here so we can add additonal types to the data object.
        <progress milestone='m5' week='9' spent='2d'>
          We have a decent story for this now.  I have added a spec to the VS specserver
          that covers this, under DesignerExtensibility.doc.
        </progress>
      </task>
    </area>
    <area name='Designer : Hosting'>
      <task name='Component / designer mapping' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:10 AM'>
        <progress milestone='m1' week='3' spent='1d'/>
      </task>
      <task name='Event notifications' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:11 AM'>
        <progress milestone='m1' week='3' spent='1d'/>
      </task>
      <task name='Service mapping' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:12 AM'>
        <progress milestone='m1' week='3' spent='1d'/>
      </task>
      <task name='Component creation / destruction' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:13 AM'>
        <progress milestone='m1' week='3' spent='2d'/>
      </task>
      <task name='Remove formcore dependencies from CodeMan' milestone='m1' cost='4d' status='done' priority='1' added='chrisan@2/17/99@8:54:14 AM'>
        <progress milestone='m1' week='4' spent='4d'/>
      </task>
    </area>
    <area name='Designer : Services'>
      <task name='Implement IOverlayService' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:15 AM'>
        <progress milestone='m1' week='4' spent='1d'/>
        <progress milestone='m1' week='5' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Hosting'>
      <task name='Implement win-in-win support' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:16 AM'>
        <progress milestone='m1' week='5' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Services'>
      <task name='Implement ISelection Service' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:17 AM'>
        <progress milestone='m1' week='5' spent='2d'/>
      </task>
      <task name='Implement ISelectionUIService' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:18 AM'>
        <progress milestone='m1' week='5' spent='1d'/>
        <progress milestone='m1' week='6' spent='1d'/>
      </task>
    </area>
    <area name='Designer : VSShell'>
      <task name='Implement ISelectionContainer' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:19 AM'>
        <progress milestone='m1' week='6' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Services'>
      <task name='Remove Selection Manager dependencies on Win32.Control' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:20 AM'>
        <progress milestone='m1' week='6' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Hosting'>
      <task name='DocumentManager base class' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:21 AM'>
        <progress milestone='m1' week='6' spent='2d'/>
      </task>
    </area>
    <area name='Designer : VSShell'>
      <task name='Base ShellDocumentManager' milestone='m1' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:22 AM'>
        <progress milestone='m1' week='7' spent='2d'/>
      </task>
    </area>
    <area name='Designer : Hosting'>
      <task name='Base SelfDocumentManager' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:23 AM'>
        <progress milestone='m1' week='7' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Persistence'>
      <issue name='SrcSafe integration issues'>
        Need to define all issues with the new project model / source safe integration.
      </issue>
      <issue name='Persistence review'>
        we have a lot of persistence support that was thrown in.  need to clean
        this up, since it will be the way people augment designer code generation.
      </issue>
      <task name='Implement ICodeStream' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:24 AM'>
        <progress milestone='m1' week='7' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Services'>
      <task name='Implement ICodeNavigatorService' milestone='m1' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:27 AM'>
        <progress milestone='m1' week='7' spent='1d'/>
      </task>
    </area>
    <area name='Component Model'>
      <issue name='Surface events as properties'>
        Question as to whether or not we need this.
      </issue>
      <task name='Port to COM+' milestone='m1' cost='10d' status='done' priority='1' added='chrisan@2/17/99@8:54:28 AM'>
        <progress milestone='m1' week='8' spent='5d'/>
        <progress milestone='m1' week='9' spent='5d'/>
      </task>
    </area>
    <area name='Designer : VSShell'>
      <task name='Implement VsPackage' milestone='m2' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:29 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
        <progress milestone='m2' week='1' spent='0.5d'/>
      </task>
      <task name='Implement VsRegistry' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:30 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='WFC Designer package' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:31 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='WFC Designer service' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:32 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
    </area>
    <area name='Designer : VSForms'>
      <task name='COM+ Aggregation support' milestone='m2' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:33 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
        <progress milestone='m2' week='1' spent='1d'/>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='DocObject aggregate for TriDesign' milestone='m2' cost='5d' status='done' priority='1' added='chrisan@2/17/99@8:54:34 AM'>
        <progress milestone='m2' week='1' spent='2d'/>
        <progress milestone='m2' week='1' spent='1d'/>
        <progress milestone='m2' week='2' spent='4d'/>
        <progress milestone='m2' week='3' spent='1d'/>
      </task>
      <task name='Document property browsing' milestone='m2' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:35 AM'>
        <progress milestone='m2' week='3' spent='2d'/>
      </task>
      <task name='Design time element factory' milestone='m2' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:37 AM'>
        <progress milestone='m2' week='2' spent='1d'/>
        <progress milestone='m2' week='3' spent='0.5d'/>
      </task>
      <task name='FormDoc win-in-win' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:38 AM'>
        <progress milestone='m2' week='4' spent='1d'/>
        <progress milestone='m2' week='4' spent='1d'/>
      </task>
      <task name='FormDoc menu editor support' milestone='cut' cost='4d' status='done' priority='cut' added='chrisan@2/17/99@8:54:39 AM'>
        Cutting all vsforms client support.
      </task>
      <task name='BrowserDoc support' milestone='m2' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:41 AM'>
        <progress milestone='m2' week='2' spent='1d'/>
        <progress milestone='m2' week='3' spent='1d'/>
      </task>
      <task name='Support for instance based attributes' milestone='cut' cost='2d' status='done' priority='cut' added='chrisan@2/17/99@8:54:42 AM'>
        We need these so we can mark an instance as non-persistable or read-only.
        I have moved this under the more generic requirement that vsforms support
        non-named elements.
      </task>
    </area>
    <area name='Designer : Win32'>
      <task name='UI.Win32 framework message routing' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:43 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Control designer component drag support' milestone='m2' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:44 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Control designer keyboard support' milestone='m2' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:45 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Frame designer selection UI Handler' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:46 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Frame designer grid' milestone='m2' cost='1d' status='done' priority='1' added='chrisan@2/17/99@8:54:47 AM'>
        <progress milestone='m2' week='1' spent='1d'/>
      </task>
      <task name='Form designer invisible component support' milestone='m2' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:49 AM'>
        <progress milestone='m2' week='1' spent='2d'/>
        <progress milestone='m2' week='1' spent='0.5d'/>
      </task>
    </area>
    <area name='Designer : Persistence'>
      <task name='Remove special case code from parsers / writers' milestone='m3' cost='4d' status='done' priority='3' added='chrisan@2/17/99@8:54:51 AM'>
        Shouldn&apos;t have special cases for &quot;setNewControls&quot;, etc.
        Possible to cut -- diminished need for generalizing the parsers &amp; writers.
        <adjustment milestone='m3' week='9' cost='-4d'>
          This work was taken care of when we implemented COM+ code sense
        </adjustment>
      </task>
      <task name='Remove CodeManager calls from code streams' milestone='m3' cost='2d' status='done' priority='3' added='chrisan@2/17/99@8:54:52 AM'>
        Possible to cut -- diminished need for generalizing for multiple languages.
        <adjustment milestone='m3' week='9' cost='-2d'>
          This was taken care of when COM+ codesense was implemented.
        </adjustment>
      </task>
      <task name='Move import mapper to CodeStream' milestone='m3' cost='0.5d' status='done' priority='1' added='chrisan@2/17/99@8:54:53 AM'>
        <progress milestone='m2' week='3' spent='0.5d'/>
      </task>
      <task name='Document how to write a code stream' milestone='cut' cost='3d' status='done' priority='cut' added='chrisan@2/17/99@8:54:54 AM'/>
      <task name='Server forms persistence support' milestone='m4' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:54:55 AM'>
        Just need to extend WFCComponentModelParser to read/write whatever format
        JohnKa has for us.
        <progress milestone='m3' week='1' spent='0d'>
          this was done on the server forms team, according to johnkal and brianpe.
        </progress>
      </task>
    </area>
    <area name='Designer : Services'>
      <task name='Implement ICommandService' milestone='m2' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:54:56 AM'>
        <progress milestone='m2' week='2' spent='1d'/>
      </task>
    </area>
    <area name='Designer : Hosting'>
      <task name='Extensibility' milestone='cut' cost='5d' status='done' priority='cut' added='chrisan@2/17/99@8:54:59 AM'>
        We get this for free using the designer architecture -  the WFC.UI designer
        is entirely implemented using extensibility.
      </task>
    </area>
    <area name='Designer : VSShell'>
      <task name='Implement VsToolWindow' milestone='cut' cost='2d' status='done' priority='cut' added='chrisan@2/17/99@8:55:00 AM'>
        Base class used to host tool windows.  Do we still need this? Server explorer
        uses IVsUIHierarchy.  If the property browser will end up using the same
        toolwindow the shell provides, we can probably cut this. -- cutting this.
        Nobody needs it today.
      </task>
      <task name='Service interop with IServiceProvider' milestone='m2' cost='0.5d' status='done' priority='1' added='chrisan@2/17/99@8:55:01 AM'>
        <progress milestone='m2' week='5' spent='0.5d'/>
      </task>
    </area>
    <area name='Designer : Hosting'>
      <task name='Remove UI.Win32 dependencies' milestone='m2' cost='1d' status='done' priority='3' added='chrisan@2/17/99@8:55:02 AM'>
        Assuming we&apos;re shipping Win32Forms as at least a runtime component
        for the designer...This is a really easy thing to do that we should do
        during cleanup of M2.
        <progress milestone='m2' week='10' spent='1d'/>
      </task>
    </area>
    <area name='Designer : VSShell'>
      <task name='Context window integration' milestone='m3' cost='3d' status='done' priority='3' added='chrisan@2/17/99@8:55:04 AM'>
        Needed for designer and pbrs.
        <progress milestone='m2' week='10' spent='3d'>
          This was done along with some big document activation fixes.  Hence, the
          three days of work.
        </progress>
      </task>
    </area>
    <area name='General'>
      <task name='SP3 Bugfixing' milestone='m2' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:55:07 AM'>
        <progress milestone='m2' week='3' spent='2d'/>
      </task>
    </area>
    <area name='Time Off'>
      <task name='Vacation' milestone='m3' cost='0d' status='done' added='chrisan@2/17/99@8:55:08 AM'>
        BrianPe Vacation: 6/14 - 6/22 during stabilization
      </task>
      <task name='Holiday' milestone='m3' cost='1d' status='done' added='chrisan@2/17/99@8:55:09 AM'>
        Memorial Day
        <progress milestone='m3' week='8' spent='1d'/>
      </task>
      <task name='Vacation' milestone='cut' cost='2d' status='done' priority='cut' added='chrisan@2/17/99@8:55:11 AM'>
        BrianPe Vacation: 8/6 - 8/9
      </task>
      <task name='Vacation' milestone='cut' cost='2d' status='done' priority='cut' added='chrisan@2/17/99@8:55:12 AM'>
        BrianPe Vacation: 9/8 - 9/12.  This is beyond M4..but in case we slip.
      </task>
    </area>
    <area name='COM+ Port'>
      <issue name='COM+ COM Classic support needs enhancements'>
        We have created a C++ DLL named &quot;wfccor.dll&quot; to handle those
        COM Classic / COM+ interop cases that COM+ cannot do.  All of this stuff
        should be implemented in COM+.
      </issue>
      <task name='Port UI Designer to COM+' milestone='m2' cost='3d' status='done' priority='1' added='chrisan@2/17/99@8:55:13 AM'>
        <adjustment milestone='m2' week='7' cost='4d'>
          Bugs in COM+ are slowing this.  Also, we chose to move a large workitem
          on SBurkes plate into this milestone, which added more code to port to
          COM+.
        </adjustment>
        <progress milestone='m2' week='5' spent='4d'>
          Simple forms can be shown and properties edited.  Still unable to save/load
          complex files or add controls.
        </progress>
        <progress milestone='m2' week='8' spent='1d'>
          UI designer is alive in the shell!
        </progress>
      </task>
      <task name='Port VSForms Designer to COM+' milestone='m2' cost='2d' status='done' priority='1' added='chrisan@2/17/99@8:55:14 AM'>
        <adjustment milestone='m2' week='7' cost='4d'>
          Bugs in COM+ are slowing this.  Also, we chose to move a large workitem
          on SBurkes plate into this milestone, which added more code to port to
          COM+.
        </adjustment>
        <progress milestone='m2' week='6' spent='4d'>
          Can show VSForms designer.  Aggregation works, but missing pieces from
          Sreeram and Shawn to do much else.
        </progress>
        <progress milestone='m2' week='8' spent='4d'>
          We can now show VSForms.  Porting is done -- we&apos;re over the hump.
          There are still a lot of bugs to slog through, but we had these in the
          old tree as well.
        </progress>
      </task>
    </area>
    <area name='Designer : Win32'>
      <task name='Change VB&apos;s editor factory to support COM+ designer' milestone='m2' cost='1d' status='done' priority='2' added='brianpe@3/5/99@6:38:08 PM'>
        <progress milestone='m2' week='9' spent='1d'/>
      </task>
      <task name='Designer shell interop' milestone='m2' cost='3d' status='done' priority='1' added='brianpe@3/5/99@6:40:53 PM'>
        General interop for the shell.  This includes syncing IVsTextBuffer for
        file persistence and registry / shell work to convert a file to a codestream.
        <progress milestone='m2' week='4' spent='3d'/>
      </task>
      <task name='Form designer tab order UI' milestone='m3' cost='2d' status='done' priority='1' added='brianpe@3/19/99@11:07:39 AM'>
        Need to move this from the legacy codebase to the new designer base.  Simple
        to do, but the only complexity lies in the eventing problems.  This worked
        in the old codebase because we subclassed everything.  We don&apos;t do
        this anymore, but somehow we still need to get all form messages up to
        the tab order layer.  I&apos;d like something not too hacky.
        <progress milestone='m3' week='3' spent='1.5d'>
          Overestimated -- a bunch of this work was fixing COM+ integration issues.
        </progress>
      </task>
    </area>
    <area name='Designer : VSForms'>
      <task name='Move clientforms aggregation to server side' milestone='cut' cost='1d' status='done' priority='cut' added='brianpe@3/19/99@11:13:32 AM'>
        Need to move the clientforms aggregation code to the serverforms directory.
        Should also rip all instances of element factory, etc -- this will just
        be an aggregate and we will layer server designer functionality on top
        of it.
      </task>
      <task name='Support for anonomous components' milestone='cut' cost='5d' status='done' priority='cut' added='brianpe@3/19/99@11:30:40 AM'>
        When we click on a non-server ID&apos;d element, we want to be able to
        cough up a temporary element.  This element must participate completely
        in the design process, except that when it is de-selected it should be
        destroyed.  Creation, destruction and property changes on this element
        should not effect the underlying code, and adding an event handler either
        shouldn&apos;t be allowed or the element should be given a server ID on
        demand.  One way to do this is for us to implement the parser with the
        designer (this is already the model, though we don&apos;t have it done
        this way yet).  The parser whould then be responsible for creating new
        names and validating existing names.  It could create &lt;Unnamed&gt;,
        for example, and then key off of this either by using the naming pattern
        or by adding extra information to the component&apos;s dictionary service.
        The rest of the parser / writer would then use this extra tag to modify
        its persistence support for the component. [moved to johnkal&apos;s schedule]
      </task>
    </area>
    <area name='Ruby'>
      <task name='Ruby work placeholder' milestone='m3' cost='5w' status='done' priority='1' added='chadr@4/20/99@11:08:02 AM'>
        placeholder on WFC schedule for the ruby work
        <adjustment milestone='m3' week='3' cost='5d'>
          brian really needs more ruby time.
        </adjustment>
        <progress milestone='m3' week='1' spent='5d'>
          spent weekon ruby analysis &amp; planning
        </progress>
        <progress milestone='m3' week='2' spent='5d'>
          Lots of meetings and thinking about user model.  Worked on generation of
          EXEPROJINFO resource files and handed this to StephWe.
        </progress>
        <progress milestone='m3' week='3' spent='3.5d'>
          Met a lot to discuss user model.  Fleshed out runtime spec in document.
          Began implementing runtime startup code.
        </progress>
        <progress milestone='m3' week='4' spent='4d'>
          Worked on runtime.  Got a ruby form with controls to appear running on
          COM+ EE.
        </progress>
        <progress milestone='m3' week='5' spent='2d'>
          Cleaned up and checked in form code.  Filed COM+ bug and worked around
          it.
        </progress>
        <progress milestone='m3' week='6' spent='4d'>
          Templates. end-to-end scenarios.
        </progress>
        <progress milestone='m3' week='8' spent='2d'>
          Got .oca files into project save.  Still need to work out how to make these
          play nice with WFC.
        </progress>
        <progress milestone='m3' week='9' spent='4.5d'>
          Complete.
        </progress>
      </task>
    </area>
    <area name='Designer : UC / Inheritance'>
      <task name='Access to in-project assemblies' milestone='m4' cost='7d' status='done' priority='1' added='brianpe@6/7/99@8:54:11 AM'>
        User controls and visual inheritance need to access assemblies that may
        be a part of the solution.  These assemblies may need to be built on the
        fly.  Accessing the assembly must be versioned, so that when a form is
        up and a user makes a change the user can rebuild and see the change in
        other forms.  Closing a form should release the assembly, allowing it to
        be garbage collected.  Need to get this level of support fromt he Cool
        and VB project systems and compilers.  There is little work for WFC to
        do here other than connect to these services when they are completed, but
        the WFC team will need to drive the requirements and design the services.
        <progress milestone='m4' week='7' spent='1d'>
          Reworked type loader.  Project guys are changing this..for the better,
          but it will take more time.
        </progress>
        <progress milestone='m4' week='8' spent='4d'>
          Well, this is as baked as we are probably going to get for M4.  We are
          restricted now to putting project assemblies into the primary app domain
          because COM+ doesn&apos;t have app domain marshaling done yet (typeof(Control)
          != typeof(Control) without marshaling).  With this restriction, we can
          only access a class in the assembly once.
        </progress>
        <progress milestone='m4' week='9' spent='2d'>
          Finally ready to check this puppy in.
        </progress>
        <progress milestone='m3' week='2' spent='0.5d'>
          Met with COM+ to hash out our requirements for unloading controls.
        </progress>
        <progress milestone='m3' week='4' spent='1d'>
          Investigation and specing of user controls.  Project and compiler interop
          requirements, etc.
        </progress>
        <progress milestone='m3' week='5' spent='3d'>
          Wrote spec designating how we will load classes in the IDE.
        </progress>
      </task>
      <task name='Cross hatch over out of data user controls' milestone='cut' cost='2d' status='done' priority='cut' added='brianpe@6/7/99@8:55:30 AM'>
        Add support so when a user control changes, all designers that have an
        instance of that user control on them will visually show that the version
        running on the designer is out-of-date.  This was done in VB with a cross-hatch.
        Cut -- new user model doesn&apos;t use this.
      </task>
      <task name='User control toolbox support' milestone='m4' cost='4d' status='done' priority='1' added='brianpe@6/7/99@8:57:58 AM'>
        User controls need to be placed on the toolbox immediately after their
        designer is closed.  These user controls should be saved with the solution,
        rather than always being present on the toolbox.  Accessing the class for
        a user control may cause the control to be built.  This will require a
        private toolbox format.  Also, any project with a user control on it will
        have to have WFC added into the project&apos;s startup services.
        <progress milestone='m4' week='9' spent='2d'>
          Done and in.  Not totally safe and perfect, but pretty good for Alpha.
        </progress>
      </task>
      <task name='Allow manipulation of inherited form objects' milestone='m4' cost='4d' status='done' priority='1' added='brianpe@6/7/99@9:01:06 AM'>
        For inherited forms, we should have access to all public and protected
        fields on the form.  These fields will be added as components to our container
        and flagged in such a way so they do not contribute to new elements in
        the derived class.  Instead, only their properties should be manipulated.
        <progress milestone='m4' week='7' spent='2d'>
          Visual inheritance is on line.
        </progress>
      </task>
      <task name='Selection model changes for visual inheritance' milestone='m4' cost='2d' status='done' priority='2' added='brianpe@6/7/99@9:02:54 AM'>
        This is a placeholder for any selection model UI changes we want to make
        in order to signal what items on a form are visually inherited.  Also,
        currently we will need to signal items that we do not have access to (such
        as private buttons, etc), because today they just won&apos;t be selectable.
        <progress milestone='m4' week='7' spent='2d'>
          Visual inheritance is on line
        </progress>
      </task>
      <task name='Disable child controls' milestone='m3' cost='1d' status='done' priority='1' added='brianpe@6/7/99@9:10:29 AM'>
        Need to disable child controls for user controls.  This should also cover
        child hwnds of native controls, such as the combo box.
        <progress milestone='m3' week='6' spent='1d'>
          We now subclass child hwnds that have no control associated with them and
          we have a &quot;child window target&quot; that handles child controls.
          All the messages for these are funneled into the main control window target
          so end users see the same stream and can call DefWndProc as before.
        </progress>
      </task>
      <task name='App domain unloading' milestone='m5' cost='5d' status='done' priority='1' added='chadr@11/3/99@2:17:32 PM'>
        Need to unload app domains each time the designer is recycled.  This depends
        on the COM+ domain marshaling coming on line.
        <adjustment milestone='m5' week='9' cost='3d'>
          There was a lot more to sort out architecturally than I thought on this.
          I think I have a good project story (althout the COOL guys are not totally
          bought in), and the COM+ / Fusion story is still a mess.  I&apos;m gessing
          that there is about three days of work on my side to get something working
          for Beta 1 using the project interfaces.  This will probably need to change
          for ship because of class and assembly leaks.
        </adjustment>
        <progress milestone='m5' week='6' spent='1d'>
          Wrote a spec for this and met with the COM+ folks on it.
        </progress>
        <progress milestone='m5' week='7' spent='3d'>
          Spent three days working with CBrumme.  Their story for app domain marshaling
          does not look like it will work for us.  We are working on another proposal.
          I also spent time testing Fusion shadow copy.  This also has some issues
          if we don&apos;t use app domains.  This looks like it will turn into less
          of a coding item for me and more of a design issue between us and COM+.
          Risk risk risk.
        </progress>
        <progress milestone='m5' week='11' spent='1d'>
          This is spec&apos;d.  Spent time with Chris reviewing the spec and preparing
          to code.  Started coding.
        </progress>
        <progress milestone='m5' week='12' spent='2d'>
          Done, just waiting for the cookie to be lifted so I can checkin.
        </progress>
      </task>
    </area>
    <area name='Time Off'>
      <task name='Sick time' milestone='m3' cost='2d' status='done' priority='3' added='brianpe@6/7/99@5:36:59 PM'>
        Out sick for two days during W8
        <progress milestone='m3' week='8' spent='2d'/>
      </task>
    </area>
    <area name='General'>
      <task name='Bug fixing' milestone='m3' cost='5d' status='done' priority='2' added='brianpe@6/7/99@6:32:07 PM'>
        Bug fixing time.
        <progress milestone='m3' week='7' spent='5d'>
          Fixed a half dozen bugs on my plate as well as some of Sreeram&apos;s.
        </progress>
      </task>
    </area>
    <area name='Ruby'>
      <task name='Ruby work items' milestone='m4' cost='6w' status='done' priority='1' added='brianpe@7/26/99@9:11:15 PM'>
        Covers all Ruby work items for M4
        <progress milestone='m4' week='1' spent='1.5d'>
          Cleaned up load of EXE / Dll projects.  Shutdown not quite right yet.
        </progress>
        <progress milestone='m4' week='2' spent='5d'>
          Spent da whole week on Ruby
        </progress>
        <progress milestone='m4' week='3' spent='3d'>
          References are done.
        </progress>
        <progress milestone='m4' week='4' spent='1.5d'/>
        <progress milestone='m4' week='5' spent='4d'>
          Startup / shutdown work
        </progress>
        <progress milestone='m4' week='6' spent='2d'>
          EXEPROJECTINFO reading from binary PE.
        </progress>
        <progress milestone='m4' week='9' spent='2d'>
          Code spot for vbproject.cls
        </progress>
        <progress milestone='m4' week='9' spent='3d'>
          Finished up wfc / ruby interop.
        </progress>
      </task>
      <task name='Ruby work items' milestone='cut' cost='9d' priority='cut' added='chadr@11/3/99@1:44:15 PM'/>
    </area>
    <area name='Process'>
      <task name='Buffer' milestone='m4' cost='0d' status='done' priority='2' added='brianpe@7/26/99@9:15:37 PM'>
        No time on the schedule for this, but I wanted to have somewhere to record
        it.
        <progress milestone='m4' week='1' spent='3.5d'>
          Bug fixing and perf work.  In-Project assemby support severly cut into
          my bug time, so it was offset here.
        </progress>
        <progress milestone='m4' week='3' spent='2d'>
          Bug fixing in composition designer
        </progress>
        <progress milestone='m4' week='4' spent='3.5d'>
          Bug fixing
        </progress>
        <progress milestone='m4' week='5' spent='1d'>
          Bug fixing
        </progress>
        <progress milestone='m4' week='6' spent='3d'>
          Bugs bugs bugs
        </progress>
      </task>
      <task name='App building' milestone='cut' cost='5d' priority='cut' added='chadr@11/3/99@1:44:10 PM'>
        Spend a couple of days, twice during the milestone, to use the product
        to build an actual application.
      </task>
      <task name='Doc reviews' milestone='cut' cost='3d' priority='cut' added='chadr@11/3/99@1:44:11 PM'/>
      <task name='Buffer' milestone='m5' cost='5d' status='done' priority='1' added='chadr@11/3/99@1:44:12 PM'>
        <progress milestone='m5' week='1' spent='3d'>
          Bug fixing
        </progress>
        <progress milestone='m5' week='2' spent='2d'>
          Bug fixes
        </progress>
      </task>
      <task name='Buffer' milestone='m5' cost='5d' status='done' priority='1' added='chadr@11/3/99@1:44:13 PM'>
        <progress milestone='m5' week='2' spent='3d'>
          Bug fixes, editor factory fixes
        </progress>
        <progress milestone='m5' week='3' spent='2d'>
          Value editor conversion
        </progress>
      </task>
      <task name='Buffer' milestone='m5' cost='5d' status='done' priority='1' added='chadr@11/3/99@1:44:14 PM'>
        <adjustment milestone='m5' week='4' cost='5d'>
          We&apos;re still way over our but quotas.
        </adjustment>
        <progress milestone='m5' week='3' spent='3d'>
          Value editor conversion
        </progress>
        <progress milestone='m5' week='4' spent='2d'>
          Value editors -- new API is here and checked in.
        </progress>
        <progress milestone='m5' week='4' spent='3d'>
          Bugs
        </progress>
        <progress milestone='m5' week='5' spent='3d'>
          More bug fixing
        </progress>
        <progress milestone='m5' week='6' spent='4d'>
          Bug fixing -- did breaking change bugs + a few others.
        </progress>
        <progress milestone='m5' week='7' spent='1d'>
          Spent close to a day working with setup about how I broke install on Win98
          and NT4 only to find that they were only copying 14 of the 34 files we
          need for an install.
        </progress>
        <progress milestone='m5' week='8' spent='4d'>
          Fixed keyboard bugs -- we were handling keystrokes the wrong way.  Had
          to change this to use command targets, which took some time.  Resolved
          six bugs this way though.
        </progress>
        <progress milestone='m5' week='9' spent='1d'>
          Meeting overhead, and checkin suite investigation.
        </progress>
        <progress milestone='m5' week='10' spent='2d'>
          Spent two days picking through build issues, setup issues, and meetings.
          Fun.
        </progress>
        <progress milestone='m5' week='12' spent='0d'>
          No more buffer!
        </progress>
      </task>
      <task name='Performance work' milestone='cut' cost='10d' priority='cut' added='chadr@11/3/99@1:44:16 PM'>
        Covers perf improvements to services architecture, as well as general design-time
        perf.
        <progress milestone='m5' week='5' spent='1d'>
          Perf work on TypeDescriptor -- big win.
        </progress>
      </task>
      <task name='Suites work' milestone='cut' cost='2d' priority='cut' added='chadr@11/3/99@1:44:17 PM'>
        Place holder for a specific suite scenario, TBD.
      </task>
    </area>
    <area name='Time Off'>
      <task name='Labor day' milestone='m4' cost='1d' status='done' added='brianpe@9/17/1999@8:42:39 PM'>
        <progress milestone='m4' week='8' spent='1d'/>
      </task>
      <task name='Company meeting' milestone='m4' cost='1d' status='done' added='brianpe@9/17/1999@8:44:32 PM'>
        <progress milestone='m4' week='9' spent='1d'/>
      </task>
    </area>
    <area name='Win32Forms : AX Sourcing'>
      <task name='Implement core activeX sourcing interfaces' milestone='m4' cost='3d' status='done' priority='1' added='brianpe@9/27/1999@10:03:26 AM'>
        Implementation IOleInPlaceActiveObject, IOleInPlaceObject, IOleObject and
        IOleControl.  Just enough to get us visible.
        <progress milestone='m4' week='10' spent='3d'/>
      </task>
      <task name='Hookup ambient properties' milestone='m4' cost='2d' status='done' priority='1' added='brianpe@9/27/1999@10:04:34 AM'>
        Hook ambient properties for colors, fonts, locales, etc.
        <progress milestone='m4' week='10' spent='2d'/>
      </task>
      <task name='Hook extender properties' milestone='m5' cost='2d' status='done' priority='2' added='brianpe@9/27/1999@10:08:20 AM'>
        Hook extended properties for visible, parent, default and cancel.  Investigate:
        what do we do with extenders that have the same name as existing properties?
        <progress milestone='m5' week='12' spent='0.5d'>
          Turns out there is nothing to do here.  The container implements these
          properties and automatically shadows properties of our own name.  The implementation
          of these properties comes in through direct manipulation of our window
          handle or our extents, and this causes us to keep our internal state. I
          did spend some time to properly implement UIDead and acts like button.
        </progress>
      </task>
      <task name='Tag rich control properties with standard dispids' milestone='cut' cost='0.5d' priority='cut' added='brianpe@9/27/1999@10:09:49 AM'>
        Need to do this so standard properties like ForeColor use the known, predefined
        dispids.
      </task>
      <task name='Implement marshalers for OLE-&gt;COM+ objects' milestone='m5' cost='3d' status='blocked' priority='1' added='brianpe@9/27/1999@10:10:28 AM'>
        Need to implement custom marshalers for IFont, IPicture, OLECOLOR, etc.
      </task>
      <task name='Investigate: Control persistence' milestone='cut' cost='1d' priority='cut' added='brianpe@9/27/1999@10:24:13 AM'>
        This is an investigation work item to see what it will take to implement
        OCX persistence for controls.  It will spawn additional work-items.
      </task>
    </area>
    <area name='Win32Forms : Application'>
      <task name='Print method maps to COM+ textwriter' milestone='cut' cost='0.5d' priority='cut' added='chadr@11/3/99@2:27:51 PM'>
        DCR 36305, related to DCR 27722 -- DCR was closed as Won&apos;t Fix, so
        we don&apos;t need this.
      </task>
    </area>
    <area name='Time Off'>
      <task name='Vacation' milestone='m5' cost='2d' status='done' priority='1' added='chadr@11/8/99@9:16:29 AM'>
        taking off 1/3 and 1/4.
        <progress milestone='m5' week='1' spent='2d'/>
      </task>
    </area>
    <area name='Component Model'>
      <task name='Value editor fixup' milestone='m5' cost='4d' status='done' priority='1' added='chadr@1/24/00@3:12:15 PM'>
        migrate the core value editors to the new value edit architecture, per
        brianpe/chrisan; data, server, web forms will have to do their own; we
        should rip compat wrapper code before the end of the milestone.
        <adjustment milestone='m5' week='10' cost='4d'>
          Need to add another 4 days to this.  There was a lot more work here than
          I expected.
        </adjustment>
        <progress milestone='m5' week='9' spent='2d'>
          Got most of compmod except collections, and all of Drawing.  Should be
          able to get collections and winforms in a day.
        </progress>
        <progress milestone='m5' week='10' spent='3d'>
          I had hoped to have this done under, not over, but here I am.  I have obsoleted
          all value editors in the code base and staged a breaking change for 3/22
          to rip them.  I have also moved over nearly all of WinForms and all of
          component model.  Perf of Designer1 increased 28% with the work.  There
          is still about three days left to go to finish this job and clean out the
          code.  I have put it on everyone else&apos;s shoulder to finish the clean
          up and if they do not I will #ifdef their code -- we must end this.
        </progress>
        <progress milestone='m5' week='11' spent='4d'>
          Got the remainder of WinForms and compmod ready for the 3/22 date.  All
          that is left is a delfile / checkin on Tuesday.
        </progress>
      </task>
    </area>
    <area name='Designer : Architecture'>
      <task name='Collection conversion' milestone='m5' cost='2d' status='done' priority='3' added='chadr@1/24/00@3:23:33 PM'>
        move all the array-based stuff in the designer arch over to collections
        -- no real scenario impact for customers, and onl affects the select few
        who deal with designer architecture.
        <progress milestone='m5' week='5' spent='1d'>
          Took the day to checkin, but I did this over the weekend.
        </progress>
      </task>
    </area>
    <area name='Time Off'>
      <task name='Personal day' milestone='m5' cost='1d' status='done' added='brianpe@2/21/2000@11:49:44 AM'>
        Went to Vegas.  Lost my shirt.
        <progress milestone='m5' week='7' spent='1d'/>
      </task>
    </area>
    <area name='Win32Forms : AX Sourcing'>
      <task name='Control persistence' milestone='m5' cost='3d' status='done' priority='1' added='chadr@3/20/00@8:27:05 AM'>
        Stream-based resource support (prop bags already done) to support scenarios
        like control with resources, embedding, etc.
        <progress milestone='m5' week='12' spent='1d'>
          Ok, this was a lot easier than I thought.  We now have full implementations
          for IPersistStreamInit, IPersistPropertyBag, and IPersistStorage
        </progress>
      </task>
    </area>
    <area name='Designer : Property Browser'>
      <issue name='Ensure 1 property browser'>
        We need to make sure that we end up with only one property browser for
        the entire product, VSShell, Tridesign, VSForms Designer, Ruby, etc...
      </issue>
    </area>
  </person>
</schedule>
