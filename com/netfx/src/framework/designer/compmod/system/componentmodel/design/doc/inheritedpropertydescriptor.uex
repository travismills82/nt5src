<docs>
   <doc for="InheritedPropertyDescriptor">
 
 <summary>
    <para>Describes and represents inherited properties in an inherited
       class.</para>
 </summary>
 <remarks>
    <para>An inherited property descriptor is used to replace all properties on a
       component that is being inherited. An inherited property descriptor is identical
       to the component's original property descriptor except for two things. First,
       you can tie additional attributes into this property descriptor, such as
       ReadOnly if the property should not be accessible on an inherited component.
       Second, this property descriptor stores a new default value attribute for the
       property that is the current value of this property on the component. This
       override is important because the inherited component may have different values
       for its defaults than its inherited from property descriptor states.</para>
 </remarks>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.InheritedPropertyDescriptor">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.InheritedPropertyDescriptor'/> class.
    </para>
 </summary>
 <param name='propertyDescriptor'>
    The property descriptor to inherit from.
 </param>
 <param name='component'>
    The component to initialize this inherited property descriptor to represent.
 </param>
 <param name='rootComponent'>
    The root component of the component to initialize this inherited property descriptor to represent.
 </param>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.InheritedPropertyDescriptor1">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.InheritedPropertyDescriptor'/> class.
    </para>
 </summary>
 <param name='propertyDescriptor'>
    The property descriptor to inherit from.
 </param>
 <param name='component'>
    The compnent to create this inherited property descriptor for.
 </param>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.InheritedPropertyDescriptor2">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.InheritedPropertyDescriptor'/> class.
    </para>
 </summary>
 <param name='propertyDescriptor'>
    The property descriptor to inherit from.
 </param>
 <param name='component'>
    The compnent to create this inherited property descriptor for.
 </param>
 <param name='a1'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.InheritedPropertyDescriptor3">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.InheritedPropertyDescriptor'/> class.
    </para>
 </summary>
 <param name='propertyDescriptor'>
    The property descriptor to inherit from.
 </param>
 <param name='component'>
    The compnent to create this inherited property descriptor for.
 </param>
 <param name='a1'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <param name='a2'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.InheritedPropertyDescriptor4">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.InheritedPropertyDescriptor'/> class.
    </para>
 </summary>
 <param name='propertyDescriptor'>
    The property descriptor to inherit from.
 </param>
 <param name='component'>
    The compnent to create this inherited property descriptor for.
 </param>
 <param name='a1'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <param name='a2'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <param name='a3'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.InheritedPropertyDescriptor5">
 <summary>
    <para>
       Initializes a new instance of the <see cref='System.ComponentModel.Design.InheritedPropertyDescriptor'/> class.
    </para>
 </summary>
 <param name='propertyDescriptor'>
    The property descriptor to inherit from.
 </param>
 <param name='component'>
    The compnent to create this inherited property descriptor for.
 </param>
 <param name='a1'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <param name='a2'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <param name='a3'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <param name='a4'>
    An additional attribute to merge into the property's attribute set.
 </param>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.ComponentType">
 <summary>
    <para>
       Gets or sets the type of the component this property descriptor is bound to.
    </para>
 </summary>
 <value>
    <para>
       The type of the component.
    </para>
 </value>
   </doc>
   <doc for="InheritedPropertyDescriptor.DefaultValue">
 <summary>
    <para>
       Gets or sets the default value for this property.
    </para>
 </summary>
 <value>
    <para>
       The default value for the property.
    </para>
 </value>
   </doc>
   <doc for="InheritedPropertyDescriptor.IsReadOnly">
 <summary>
    <para>
       Gets or sets a value indicating whether this property is read only.
    </para>
 </summary>
 <value>
    <para>
    <see langword='true'/> if the property is read only; 
       otherwise, <see langword='false'/>.
    </para>
 </value>
   </doc>
   <doc for="InheritedPropertyDescriptor.PropertyType">
 <summary>
    <para>
       Gets or sets the type of the property.
    </para>
 </summary>
 <value>
    <para>
       The type of the property.
    </para>
 </value>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.CanResetValue">
 <summary>
    <para>Indicates whether reset will change
       the value of the component.</para>
 </summary>
 <param name='component'>The component that owns the property that will be tested for resetability.</param>
 <returns>
 <para><see langword='true'/> if the value would be changed by a reset, the value of 
    shouldPersist if this method exists; otherwise, <see langword='false'/>.</para>
 </returns>
 <remarks>
    <para>If there is a DefaultValueAttribute, then this will return
    <see langword='true'/> if getValue returns something different than the default 
       value. If there is a reset method and a shouldPersist method, this will return
       what shouldPersist returns. If there is just a reset method, this always returns
    <see langword='true'/>. If none of these cases apply, this returns 
    <see langword='false'/>.</para>
 </remarks>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.GetValue">
 <summary>
    <para> Gets the current value of the property on the component,
       invoking the getXXX method.</para>
 </summary>
 <param name='component'>The component that owns the property to retrieve the value for.</param>
 <returns>
    <para>The value of the property of the specified component.</para>
 </returns>
 <remarks>
    <para>An exception in the getXXX method will pass through.</para>
 </remarks>
   </doc>
   <doc for="InheritedPropertyDescriptor.ResetValue">
 <summary>
    <para>Resets the default value for this property
       on the component.</para>
 </summary>
 <param name='component'>The component that owns the property which will have its value reset.</param>
 <remarks>
    <para>If there was a default value passed in as a DefaultValueAttribute, that value
       will be set as the value of the property on the component. If there was no
       default value passed in, a ResetXXX method will be looked for. If one is found,
       it will be invoked. If one is not found, this is a nop.</para>
 </remarks>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.SetValue">
 <summary>
    <para>
       Sets the value to be the new value of this property
       on the component by invoking the setXXX method on the component.
    </para>
 </summary>
 <param name='component'>
    The component to set the property's value on.
 </param>
 <param name='value'>
    The new value for the property on the component.
 </param>
 <remarks>
    <para>
       If the value specified is invalid, the component should throw an exception
       which will be passed up. The component designer should design the property so
       that getXXX following a setXXX should return the value passed in if no exception
       was thrown in the setXXX call.
    </para>
 </remarks>
 <seealso cref='System.ComponentModel.PropertyDescriptor'/>
   </doc>
   <doc for="InheritedPropertyDescriptor.ShouldSerializeValue">
 <summary>
    <para>Indicates whether the value of this property needs to be persisted.</para>
 </summary>
 <param name='component'>The component that owns the property to be examined to determine the need for its persistance.</param>
 <returns>
 <para><see langword='true'/> if the property should be 
    persisted; otherwise, <see langword='false'/>.</para>
 </returns>
 <remarks>
    <para>In other words, it indicates whether the state of the property is distinct
       from when the component is first instantiated. If there is a default value
       specified in this PropertyDescriptor, it will be compared against the property's
       current value to determine this. If there is't, the shouldPersistXXX method is
       looked for and invoked if found. If both these routes fail,
    <see langword='true'/> will be returned. If this returns <see langword='false'/>, 
       a tool should not persist this property's value.</para>
 </remarks>
   </doc>
</docs>

