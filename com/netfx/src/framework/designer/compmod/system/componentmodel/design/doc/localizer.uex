<docs>
	<doc for="LocalizationExtenderProvider.Dispose">
		<summary>
			<para>Disposes of the resources (other than memory) used by the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/>.</para>
		</summary>
		<remarks>
			<para>Call <see langword="Dispose"/> when you are finished 
    using the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/>. The <see langword="Dispose"/>
    method leaves the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/> in an unusable state. After
    calling <see langword="Dispose"/>, you must release all references to
    the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/>
    so the memory it was occupying
    can be reclaimed by garbage collection. </para>
			<note type="note">
    Always call <see langword="Dispose"/>
    before you release your last reference to the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/>. Otherwise, the
    resources the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/> is using will not be freed until
    garbage collection calls the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/>
    object's destructor.
 </note>
		</remarks>
	</doc>
	<doc for="LocalizationExtenderProvider.GetLocalizable">
		<summary>
			<para> Gets a value indicating whether the specified object supports resource
      localization.</para>
		</summary>
		<param name="o"> The object to check for localization support.</param>
		<returns>
			<para><see langword="true"/> if the specified object supports resource 
   localization; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="LocalizationExtenderProvider.CanExtend">
		<summary>
			<para>Indicates whether this object can provide its extender properties to the 
      specified object.</para>
		</summary>
		<param name="o">The object to receive the extender properties.</param>
		<returns>
			<para><see langword="true"/> if this object can provide extender properties to the 
   specified object; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="LocalizationExtenderProvider.GetLanguage">
		<summary>
			<para> Gets the current resource culture for the specified object.</para>
		</summary>
		<param name="o">The object to get the current resource culture for.</param>
		<returns>
			<para>A <see cref="System.Globalization.CultureInfo"/> indicating the resource variety.</para>
		</returns>
		<remarks>
			<para>This method returns the current resource culture used to
      access resource data for the specified object.</para>
		</remarks>
	</doc>
	<doc for="LocalizationExtenderProvider.SetLanguage">
		<summary>
			<para> Sets the current resource culture for the
      specified object to the specified
      resource culture.</para>
		</summary>
		<param name="o">The base component to set the resource culture for. </param>
		<param name=" language">A <see cref="System.Globalization.CultureInfo"/> that indicates the resource culture to use.</param>
	</doc>
	<doc for="LocalizationExtenderProvider.SetLocalizable">
		<summary>
			<para> Sets a value indicating whether the specified object supports
      localized resources.</para>
		</summary>
		<param name=" o">The base component to set as localizable or not localizable. </param>
		<param name="localizable"><see langword="true"/> if the object supports resource localization; otherwise, <see langword="false"/>. </param>
	</doc>
	<doc for="LocalizationExtenderProvider.ShouldSerializeLanguage">
		<summary>
			<para> Gets a value indicating whether the specified object must have its localizable values persisted in a resource. </para>
		</summary>
		<param name="o">The object to get the language support persistence flag for.</param>
		<returns>
			<para><see langword="true"/> if 
   the localizable values should be persisted in resources; otherwise,
<see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="LocalizationExtenderProvider.ResetLanguage">
		<summary>
			<para> Resets the resource culture for the specified
      object.</para>
		</summary>
		<param name="o">The object to reset the resource culture for.</param>
		<remarks>
			<para> If the specified object was initialized with localized 
      resources when the designer loaded, this method sets the resource culture for
      the specified object to the resource culture used to initialize the values of
      the specified object when the designer loaded. If the specified object had no previous resource culture
      setting, the current resource culture is set to <see cref="System.Globalization.CultureInfo.InvariantCulture"/>
      
      .</para>
		</remarks>
	</doc>
	<doc for="LocalizationExtenderProvider.GetLoadLanguage">
		<summary>
			<para> Gets the default resource culture to use when initializing the values of a localized object at design time.</para>
		</summary>
		<param name="o">The object to get the resource culture for.</param>
		<returns>
			<para>A <see cref="System.Globalization.CultureInfo"/> indicating the resource culture to 
   use to initialize the values of the specified object.</para>
		</returns>
	</doc>
	<doc for="LocalizationExtenderProvider">
		<summary>
			<para> Provides design-time support for localization
      features to a root designer.</para>
		</summary>
		<remarks>
			<para><see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/> can
   extend an <see cref="System.ComponentModel.Design.IRootDesigner"/> with a
   set of properties and methods that provide support for the .NET Framework
   localization architecture. For more about using resources, see the <see topic="cpconlocalization"/>
   
   topic. </para>
			<para>The localization support architecture enables designers
   to initialize component properties using resource files that can be swapped at
   run time to support a variety of languages, culture-specific
   styles and dynamically configurable features. You can use the methods of this class
   to enable designers and code generating serializers to load from resources and build
   initialization code that uses localization features. </para>
			<para>The default serializers that ship with Visual Studio .NET
   are already capable of localizing components and controls, but they only do so
   if they locate support for the .NET Framework localization architecture. To
   detect the presence of localization support, the serialization system must
   locate a public <see cref="System.Boolean"/>
   property named “Localizable” on the root designer component. If
   a serializer finds this property, it searches for a property of type <see cref="System.Globalization.CultureInfo"/> named
   "Language" to determine the current resouce configuration. Default serializers use these properties to determine
   if it should localize any localizable resources of the component, and if
   so, what <see cref="System.Globalization.CultureInfo"/> format the resource information should be
   saved in. </para>
		</remarks>
		<example>
			<codelink SampleID="LocalizationExtenderProviderExample" SnippetID="2"/>
			<codelink SampleID="LocalizationExtenderProviderExample" SnippetID="1"/>
		</example>
	</doc>
	<doc for="LocalizationExtenderProvider.LocalizationExtenderProvider">
		<summary>
			<para>Initializes a new instance of the <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/> class using the
   specified service provider and base component.</para>
		</summary>
		<param name="serviceProvider">A service provider for the specified component.</param>
		<param name=" baseComponent">The base component to localize.</param>
		<remarks>
			<para>By default, a new <see cref="System.ComponentModel.Design.LocalizationExtenderProvider"/> sets the
   current language to <see cref="System.Globalization.CultureInfo.InvariantCulture"/>, which is the generic and default language
   resource setting. This setting causes a designer to generate code that
   references the generic language resource. You can create other <see cref="System.Globalization.CultureInfo"/> objects to represent and
   identify other localized resource data that a program can use at run time.</para>
		</remarks>
		<example>
			<codelink SampleID="LocalizationExtenderProviderExample" SnippetID="2"/>
		</example>
	</doc>
</docs>
