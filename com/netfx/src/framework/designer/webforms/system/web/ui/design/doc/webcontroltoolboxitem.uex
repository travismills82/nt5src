<docs>
	<doc for="WebControlToolboxItem.Flags">
		<summary>
			<para>Gets the capability flags of this item.</para>
		</summary>
		<value>
			<para>The info flags for this item, from ToolboxItemInfoEnum.</para>
		</value>
	</doc>
	<doc for="WebControlToolboxItem.TagPrefix">
		<summary>
			<para>Gets the XSP tag prefix that uniquely identifies a managed namespace and an assembly.</para>
		</summary>
	</doc>
	<doc for="WebControlToolboxItem.ToolType">
		<summary>
			<para>Gets or sets the type of the tool.</para>
		</summary>
		<value>
			<para>The type of the tool.</para>
		</value>
	</doc>
	<doc for="WebControlToolboxItem.ToolHTML">
		<summary>
			<para>Gets or sets the HTML that represents the corresponding Web server control in Trident.</para>
		</summary>
	</doc>
	<doc for="WebControlToolboxItem.CanBeHostedBy">
		<summary>
			<para>Allows this ToolboxItem to determine whether it can be hosted by a given IDesignerHost designer.  Default implementation returns true</para>
		</summary>
	</doc>
	<doc for="WebControlToolboxItem.Deserialize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="WebControlToolboxItem.Serialize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="WebControlToolboxItem.GetToolAttributeValue">
		<summary>
			<para> Gets the value of the specified type of attribute of the toolbox item.</para>
		</summary>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
		<param name=" attributeType">The type of attribute to retrieve the value of.</param>
		<returns>
			<para>The value of the specified type of attribute.</para>
		</returns>
		<exception cref="T:System.ArgumentException">The <paramref name="attributeType"/> parameter is not a PersistChildrenAttribute.</exception>
		<remarks>
			<para>The default implementation will throw an <see cref="System.ArgumentException"/> 
if the <paramref name="attributeType"/> parameter is anything other than a
<see cref="System.Web.UI.PersistChildrenAttribute"/> 
.</para>
		</remarks>
	</doc><doc for="WebControlToolboxItem.GetToolType">
		<summary>
			<para>Gets the type of this toolbox item.</para>
		</summary>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
		<returns>
			<para>The Type of this toolbox item.</para>
		</returns>
	</doc><doc for="WebControlToolboxItem.GetToolHtml">
		<summary>
			<para>Gets the HTML for the Web control that the tool creates.</para>
		</summary>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
		<returns>
			<para>The HTML for the Web control that the tool creates.</para>
		</returns>
	</doc>
	<doc for="WebControlToolboxItem.CreateComponentsCore"><nodoc/>
		<summary>
			<para> Creates objects from each Type contained in this <see cref="System.Drawing.Design.ToolboxItem"/>, and adds
   them to the specified designer.</para>
		</summary>
		<param name="host">The <see cref="System.ComponentModel.Design.IDesignerHost"/> for the current design document.</param>
		<returns>
			<para>An array of created <see cref="IComponent"/> objects.</para>
		</returns>
		<remarks>
			<note type="inheritinfo">
      You can override this
      method to alter the way that components are created.
      </note>
		</remarks>
	</doc>
	<doc for="WebControlToolboxItem.Initialize">
		<nodoc/>
		<summary>
			<para>Initializes this toolbox item.</para>
		</summary>
		<param name="type">The Type of the Web server control toolbox item.</param>
	</doc>
	<doc for="WebControlToolboxItem.WebControlToolboxItem">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Design.WebControlToolboxItem"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Design.WebControlToolboxItem"/> class.</para>
		</summary>
		<remarks>
			<para>The display name will be a short version of the type name.</para>
		</remarks>
	</doc>
	<doc for="WebControlToolboxItem.WebControlToolboxItem1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.UI.Design.WebControlToolboxItem"/> class.</para>
		</summary>
		<param name="type">The Type of the tool for this toolbox item</param>
	</doc>
	<doc for="WebControlToolboxItem">
		<summary>
			<para>Provides a base class for a Web server control <see cref="System.Drawing.Design.ToolboxItem"/>.</para>
		</summary>
		<remarks>
			<para><see cref="System.Web.UI.Design.WebControlToolboxItem"/> provides a base class for toolbox items that create Web server controls.
   This class extends ToolboxItem and provides the following additional
   methods:</para>
			<list type="bullet"><item>
					<term>
						<see cref="System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue"/> gets the value of 
      an attribute of the toolbox item.</term>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.Design.WebControlToolboxItem.GetToolHtml"/> gets the HTML that 
      represents the initial state of the control.</term>
				</item>
				<item>
					<term>
						<see cref="System.Web.UI.Design.WebControlToolboxItem.GetToolType"/> gets the type of
      the associated runtime component.</term>
				</item>
			</list>
		</remarks>
	</doc>
</docs>
