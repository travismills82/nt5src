<docs>
	<doc for="ITemplateEditingService">
		<summary>
			<para>Provides services for editing control templates at design time.</para>
		</summary>
	</doc>
	<doc for="ITemplateEditingService.SupportsNestedTemplateEditing">
		<summary>
			<para>Indicates whether the service supports nested template editing.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the service supports nested template editing;
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para> This
      property indicates whether a template editor can be invoked from a component of a
      parent template editor's templated control. This is called nested
      template editing, because a template editor is invoked for a component of a control
      for which a template editor is already operating.</para>
		</remarks>
	</doc>
	<doc for="ITemplateEditingService.CreateFrame">
		<overload>
			<para>Creates a new template editing frame.</para>
		</overload>
		<summary>
			<para>Creates a new template editing frame for the specified 
      templated control designer, using the specified name and templates.</para>
		</summary>
		<param name="designer">The <see cref="System.Web.UI.Design.TemplatedControlDesigner"/> that will use the template editing frame.</param>
		<param name=" frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="System.ComponentModel.Design.DesignerVerb.Text"/> property used as the menu text for the <see cref="System.Web.UI.Design.TemplateEditingVerb"/> that is invoked to create the frame.</param>
		<param name=" templateNames">An array of names for the templates that the template editing frame will contain.</param>
		<returns>
			<para>The new <see cref="System.Web.UI.Design.ITemplateEditingFrame"/>.</para>
		</returns>
	</doc>
	<doc for="ITemplateEditingService.CreateFrame1">
		<summary>
			<para>Creates a new template editing frame for the specified
   <see cref="System.Web.UI.Design.TemplatedControlDesigner"/>, using the specified name, template names, control
      style, and template styles.</para>
		</summary>
		<param name="designer">The <see cref="System.Web.UI.Design.TemplatedControlDesigner"/> that will use the template editing frame.</param>
		<param name=" frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="System.ComponentModel.Design.DesignerVerb.Text"/> property used as the menu text for the <see cref="System.Web.UI.Design.TemplateEditingVerb"/> that is invoked to create the frame.</param>
		<param name=" templateNames">An array of names for the templates that the template editing frame will contain.</param>
		<param name=" controlStyle">The control <see cref="System.Web.UI.WebControls.Style"/> for the editing frame.</param>
		<param name=" templateStyles">An array of type <see cref="System.Web.UI.WebControls.Style"/> that represents the template styles for the editing frame.</param>
		<returns>
			<para>The new <see cref="System.Web.UI.Design.ITemplateEditingFrame"/>.</para>
		</returns>
	</doc>
	<doc for="ITemplateEditingService.GetContainingTemplateName">
		<summary>
			<para>Gets the name of the parent template.</para>
		</summary>
		<param name="control">The <see cref="System.Web.UI.Control"/> for which to get the name of the parent template.</param>
		<returns>
			<para>The name of the parent template.</para>
		</returns>
	</doc>
</docs>
