<docs>
	<doc for="CalendarAutoFormatDialog.CalendarAutoFormatDialog">
		<summary>
    Create a new AutoFormatPage instance
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.DoDelayLoadActions">
		<summary>
    Executes any initialization that was delayed until the first idle time
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.GetPreviewCalendar">
		<summary>
    Create a new Calendar object for previewing
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.InitForm">
		<summary>
    Initialize the UI of this page
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.OnClickHelp">
		<summary>
		</summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.OnSelChangedScheme">
		<summary>
    Handle changes in the pre-defined schema choices
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.OnOKClicked">
		<summary>
    Handle changes in the pre-defined schema choices
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.SaveComponent">
		<summary>
    Save any changes into the component
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.UpdateSchemePreview">
		<summary>
    Update scheme preview
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.WCScheme">
		<summary>
    WCScheme: abstract base class for scheme
    Each scheme is a class instance. To create a new scheme, derive a class from
    WCScheme and implement GetDescription and Apply, and add one to the list in 
    InitForm. 
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.WCScheme.GetDescription">
		<summary>
   This is the string that will appear in the list box
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.WCScheme.Apply">
		<summary>
   This routine should apply whatever changes constitute the sheme to the given calendar
   
   Do not change the following properties: SelectionMode, 
                                           ShowTitle, 
                                           ShowDayHeader, 
                                           ShowNextPrevMonth
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.WCScheme.ToString">
		<summary>
   Override ToString to allow use in a ListBox
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.WCScheme.ClearCalendar">
		<summary>
   Helper routine to get the calendar to a consistent state
   Should change only appearance properties
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog.WCSchemeNone">
		<summary>
   Returns calendar to the default look
 </summary>
	</doc>
	<doc for="CalendarAutoFormatDialog">
		<summary>
			<para>Provides an AutoFormat page for a <see cref="System.Web.UI.WebControls.Calendar"/> Web server
 control.</para>
		</summary>
		<seealso cref="System.Web.UI.WebControls.Calendar"/>
	</doc><doc for="CalendarAutoFormatDialog.OnActivated">
		<overload>
			<para>Occurs when the <see cref="System.Web.UI.Design.WebControls.CalendarAutoFormatDialog"/> 
is activated.</para>
		</overload>
		<summary>
			<para>Occurs when the <see cref="System.Web.UI.Design.WebControls.CalendarAutoFormatDialog"/> 
is activated.</para>
		</summary>
		<param name="source">The source of the event.</param>
		<param name=" e">An <see cref="System.EventArgs"/> that provides information about the event.</param>
		<remarks>
			<note type="inheritinfo">
      This method provides
      an opportunity to perform processing after a Calendar AutoFormat dialog box has been
      activated.
      
   </note>
		</remarks>
	</doc></docs>
