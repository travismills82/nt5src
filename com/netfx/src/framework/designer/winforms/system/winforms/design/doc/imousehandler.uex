<docs>
   <doc for="IMouseHandler">
 <summary>
    <para> Provides an interface to specify handling methods for mouse events.</para>
 </summary>
   </doc>
   <doc for="IMouseHandler.OnMouseDoubleClick">
 <summary>
    <para>This is called when the user double clicks on a component. The typical 
       behavior is to create an event handler for the component's default event and
       navigate to the handler.</para>
 </summary>
 <param name='component'>The component that recieved the double click.</param>
   </doc>
   <doc for="IMouseHandler.OnMouseDown">
 <summary>
     This is called when a mouse button is depressed.  This will perform
     the default drag action for the selected components,  which is to
     move those components around by the mouse.
 </summary>
 <param name='component'>
     The compnent that the mouse was over when the user
     pressed the button down.
 </param>
 <param name='button'>
     The button that was pressed.
 </param>
 <param name='x'>
     The location of the mouse, in screen coordinates.
 </param>
 <param name='y'>
     The location of the mouse, in screen coordinates.
 </param>
   </doc>
   <doc for="IMouseHandler.OnMouseHover">
 <summary>
     This is called when the mouse momentarially hovers over the
     view for the given component.
 </summary>
 <param name='component'>
     The component the mouse is hovering over.
 </param>
   </doc>
   <doc for="IMouseHandler.OnMouseMove">
 <summary>
     This is called for each movement of the mouse.
 </summary>
 <param name='component'>
     The component the mouse is over.
 </param>
 <param name='x'>
     The location of the mouse, in screen coordinates.
 </param>
 <param name='y'>
     The location of the mouse, in screen coordinates.
 </param>
   </doc>
   <doc for="IMouseHandler.OnMouseUp">
 <summary>
     This is called when the user releases the mouse from a component.
     This will update the UI to reflect the release of the mouse.

 </summary>
 <param name='component'>
     The component that recieved the click.
 </param>
 <param name='button'>
     The button that has been released.
 </param>
   </doc>
   <doc for="IMouseHandler.OnSetCursor">
 <summary>
     This is called when the cursor for the given component should be updated.
     The mouse is always over the given component's view when this is called.
 </summary>
 <param name='component'>
     The component to update the cursor for.
 </param>
   </doc>
</docs>

