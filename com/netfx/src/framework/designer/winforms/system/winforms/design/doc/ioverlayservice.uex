<docs>
   <doc for="IOverlayService">
 
 <summary>
    <para>
       IOverlayService is a service that supports adding simple overlay windows to a
       design surface. Overlay windows can be used to paint extra glyphs on top of
       existing controls. Once an overlay is added, it will be forced on top of
       the Z-order for the other controls and overlays. If you want the overlay
       to be transparent, then you must do this work yourself. A typical way to
       make an overlay control transparent is to use the method setRegion
       on the control class to define the non-transparent portion of the contro.
    </para>
 </summary>
   </doc>
   <doc for="IOverlayService.PushOverlay">
 <summary>
     Pushes the given control on top of the overlay list.  This is a "push"
     operation, meaning that it forces this control to the top of the existing
     overlay list.

 </summary>
 <param name='control'>
     The control to push to the top of the overlay list.  An
     exception will be thrown if this control is already in
     the list.
 </param>
   </doc>
   <doc for="IOverlayService.RemoveOverlay">
 <summary>
     Removes the given control from the overlay list.  Unlike pushOverlay,
     this can remove a control from the middle of the overlay list.

 </summary>
 <param name='control'>
     The control to remove.  An exception will be thrown if this
     control is not currently in the list.
 </param>
   </doc>
</docs>

