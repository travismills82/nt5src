<docs>
	<doc for="ContentAlignmentEditor.EditValue">
		<summary>
			<para>
       Edits the given object value using
       the editor style provided by GetEditStyle.
    </para>
		</summary>
		<param name="context">
    An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
 </param>
		<param name="provider">
			<para>An <see cref="IServiceProvider"/> through which editing services may be obtained.</para>
		</param>
		<param name="value">
    An instance of the value being edited.
 </param>
		<returns>
			<para>
       The new value of the object. If the value of the object hasn't
       changed, this should return the same object it was passed.
    </para>
		</returns>
		<remarks>
			<para>
       A service provider is provided so that any required editing services can be
       obtained.
    </para>
		</remarks>
		<seealso cref="System.ComponentModel.ITypeDescriptorContext"/>
		<seealso cref="T:System.IServiceProvider"/>
	</doc>
	<doc for="ContentAlignmentEditor.GetEditStyle">
		<summary>
			<para>
       Gets the editing style of the Edit method.
    </para>
		</summary>
		<param name="context">
    An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
 </param>
		<returns>
			<para>
       A <see cref="System.Drawing.Design.UITypeEditorEditStyle"/> value indicating the
       provided editing style. If the method to retrieve the edit style is not
       supported, this will return <see cref="System.Drawing.Design.UITypeEditorEditStyle.None"/>.
    </para>
		</returns>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI">
		<summary>
      Control we use to provide the content alignment UI.
 </summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.ContentUI">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.Align">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.Value">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.End">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.InitComponent">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.OptionClick">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.Start">
		<summary>
		</summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.ProcessDialogKey">
		<summary>
     Here, we handle the return, tab, and escape keys appropriately
 </summary>
	</doc>
	<doc for="ContentAlignmentEditor.ContentUI.CheckedControl">
		<summary>
     Gets/Sets the checked control value of our editor
 </summary>
	</doc>
	<doc for="ContentAlignmentEditor">
		<internalonly/>
		<summary>
			<para> Provides a <see cref="System.Drawing.Design.UITypeEditor"/> for
   visually editing content alignment.</para>
		</summary>
	</doc></docs>
