<docs>
	<doc for="ImageEditor.LoadFromStream">
		<summary>
			<para>Loads an image from the specified stream.</para>
		</summary>
		<param name="stream">A stream that contains the image to load.</param>
		<returns>
			<para>The <see cref="System.Drawing.Image"/> that has been loaded.</para>
		</returns>
	</doc><doc for="ImageEditor.CreateExtensionsString">
		<summary>
			<para>Creates a string of file name extensions using the specified array of file
      extensions and the specified separator.</para>
		</summary>
		<param name="extensions">The extensions to filter for.</param>
		<param name=" sep">The separator to use.</param>
		<returns>
			<para>A string containing the specified file name 
      extensions, each separated by the specified separator.</para>
		</returns>
		<remarks>
			<para> The specified extensions indicate the file types for
      the open file dialog to filter the file list for by
      default.</para>
		</remarks>
	</doc><doc for="ImageEditor.CreateFilterEntry">
		<summary>
			<para>Creates a filter entry for a file dialog box's file list.</para>
		</summary>
		<param name="e">The image editor to get the filter entry from.</param>
		<returns>
			<para>The new filter entry string.</para>
		</returns>
	</doc><doc for="ImageEditor.GetFileDialogDescription">
		<summary>
			<para> Gets the description for the default file list filter provided by
      this editor.</para>
		</summary>
		<returns>
			<para> The description for the default type of files to filter the file list
      for.</para>
		</returns>
		<remarks>
			<para> The
      file dialog box description appears in the file list
      filter drop-down.</para>
		</remarks>
	</doc><doc for="ImageEditor.GetExtensions">
		<summary>
			<para> Gets the extensions for the file list filter that this editor initially uses to filter the file list.</para>
		</summary>
		<returns>
			<para> A set of file extensions used to filter the file list.</para>
		</returns>
	</doc><doc for="ImageEditor.GetPaintValueSupported">
		<overload>
			<para>Gets a value indicating whether this editor supports painting a representation of an object's value.</para>
		</overload>
		<summary>
			<para> Gets a value indicating whether this editor supports painting a representation
      of an object's value.</para>
		</summary>
		<param name="context">An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
		<returns>
			<para><see langword="true"/>
if <see cref="System.Drawing.Design.ImageEditor.PaintValue"/>
is implemented;
otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="ImageEditor.EditValue">
		<overload>
			<para>Edits the specified object value using the edit style 
      provided by <see langword="GetEditStyle"/>.</para>
		</overload>
		<summary>
			<para> Edits the specified object value using the edit style
      provided by <see cref="System.Drawing.Design.ImageEditor.GetEditStyle"/>.</para>
		</summary>
		<param name="context">An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
		<param name="provider">A service provider object through which editing services can be obtained.</param>
		<param name="value">An instance of the value being edited.</param>
		<returns>
			<para>The new value of the object. If the value of the object has not changed,
      this method should return the same object passed to it.</para>
		</returns>
		<remarks>
			<para> This editor uses a service provider to obtain any necessary editing
      services.</para>
		</remarks>
	</doc>
	<doc for="ImageEditor.GetEditStyle">
		<overload>
			<para> Gets the editing style of 
      the <see langword="EditValue"/>
      method.</para>
		</overload>
		<summary>
			<para> Gets the editing style of the <see cref="System.Drawing.Design.ImageEditor.EditValue"/>
method.</para>
		</summary>
		<param name="context">An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
		<returns>
			<para>A <see cref="System.Drawing.Design.UITypeEditorEditStyle"/> enumeration value indicating the supported editing style.</para>
		</returns>
		<remarks>
			<para>If the <see cref="System.Drawing.Design.ImageEditor.EditValue"/> method is not supported, this
   method will return <see cref="System.Drawing.Design.UITypeEditorEditStyle.None"/> .</para>
		</remarks>
	</doc>
	<doc for="ImageEditor.PaintValue">
		<overload>
			<para>Paints a value indicated by the specified 
   <see cref="System.Drawing.Design.PaintValueEventArgs"/>.</para>
		</overload>
		<summary>
			<para>Paints a value indicated by the specified <see cref="System.Drawing.Design.PaintValueEventArgs"/>.</para>
		</summary>
		<param name="e">A <see cref="System.Drawing.Design.PaintValueEventArgs"/> indicating what to paint and where to paint it.</param>
		<remarks>
			<para> Paint within the boundaries of
      the <see cref="System.Drawing.Rectangle"/> contained within the
      specified <see cref="System.Drawing.Design.PaintValueEventArgs"/> in
      order to display the representation of the value in typical Properties window
      format.</para>
		</remarks>
	</doc>
	<doc for="ImageEditor">
		<summary>
			<para>Provides a user interface for selecting an image for a property in a property grid.</para>
		</summary>
		<remarks>
			<para><see cref="System.Drawing.Design.ImageEditor"/> is
   a <see cref="System.Drawing.Design.UITypeEditor"/>
   that provides a user interface for selecting an
   image for a property. Starting the editor displays an open file dialog
   box that allows directory navigation and selecting a file. The file list is initially filtered by the default file
   name extensions for the editor.</para>
		</remarks>
		<example>
			<codelink SampleID="EditorAttributesExample" SnippetID="3"/>
		</example>
		<seealso cref="System.Drawing.Design.UITypeEditor"/>
	</doc>
</docs>
