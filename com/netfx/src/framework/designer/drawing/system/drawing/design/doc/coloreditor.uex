<docs>
	<doc for="ColorEditor.EditValue">
		<summary>
			<para>
       Edits the given object value using the editor style
       provided by <see cref="System.Drawing.Design.ColorEditor.GetEditStyle"/>
       .
    </para>
		</summary>
		<param name="context">
    An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
 </param>
		<param name="provider">
    An <see cref="System.IServiceProvider"/> through which editing services may be obtained.
 </param>
		<param name="value">
    An instance of the value being edited.
 </param>
		<returns>
			<para>
       The new value of the object. If the value of the object hasn't
       changed, this should return the same object it was passed.
    </para>
		</returns>
		<remarks>
			<para>
       A service provider is provided so that any required editing services can be
       obtained.
    </para>
		</remarks>
	</doc>
	<doc for="ColorEditor.GetEditStyle">
		<summary>
			<para>
       Gets the editing style of the Edit method. If the method
       is not supported, this will return <see cref="System.Drawing.Design.UITypeEditorEditStyle.None"/>.
    </para>
		</summary>
		<param name="context">
    An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
 </param>
		<returns>
			<para>
       An enum value indicating the provided editing style.
    </para>
		</returns>
	</doc>
	<doc for="ColorEditor.GetPaintValueSupported">
		<summary>
			<para>
       Gets a value indicating if this editor supports the painting of a representation
       of an object's value.
    </para>
		</summary>
		<param name="context">
    An <see cref="System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.
 </param>
		<returns>
			<para>
				<see langword="true"/> if PaintValue is implemented; 
       otherwise, <see langword="false"/> .
    </para>
		</returns>
	</doc>
	<doc for="ColorEditor.PaintValue">
		<summary>
			<para>
       Paints a representative value of the given object to the provided
       canvas. Painting should be done within the boundaries of the
       provided rectangle.
    </para>
		</summary>
		<param name="e">
    What to paint and where to paint it.
 </param>
	</doc>
	<doc for="ColorEditor.ColorPalette">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI">
		<summary>
      Editor UI for the color editor.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.ColorUI">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.ColorValues">
		<summary>
      Array of standard colors.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.CustomColors">
		<summary>
      Retrieves the array of custom colors for our use.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.EditorService">
		<summary>
      Allows someone else to close our dropdown.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.SystemColorValues">
		<summary> 
      Array of system colors.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.Value">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.End">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.GetBestColor">
		<summary>
      Takes the given color and looks for an instance in the ColorValues table.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.GetConstants">
		<summary>
      Retrieves an array of color constants for the given object.
 </summary>
	</doc>
	<doc for="ColorEditor.ColorUI.GetCurrentComponent">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.InitializeComponent">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.OnListClick">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.OnListDrawItem">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.OnListKeyDown">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.OnPalettePick">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.OnTabControlResize">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.ColorUI.Start">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.CustomColorDialog">
		<summary>
		</summary>
	</doc>
	<doc for="ColorEditor.SystemColorComparer">
		<summary>
      Comparer for system colors.
 </summary>
	</doc>
	<doc for="ColorEditor.StandardColorComparer">
		<summary>
      Comparer for standard colors
 </summary>
	</doc>
	<doc for="ColorPaletteAccessibleObject.ColorPaletteAccessibleObject">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorPaletteAccessibleObject.GetChildCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorPaletteAccessibleObject.GetChild">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorPaletteAccessibleObject.HitTest">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject.ColorCellAccessibleObject">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject.Bounds">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject.Name">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject.Parent">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject.Role">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject.Value">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorPaletteAccessibleObject"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorCellAccessibleObject">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ColorEditor">
		<summary>
			<para>Provides a <see cref="System.Drawing.Design.UITypeEditor"/> for visually picking a color.</para>
		</summary>
	</doc></docs>
