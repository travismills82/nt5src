<docs>
	<doc for="RegexCompilationInfo">
		<summary>
			<para> Provides information that the compiler uses to
      compile a regular expression to a stand-alone assembly.
      </para>
		</summary>
	</doc><doc for="RegexCompilationInfo.Name">
		<summary>
			<para> Gets or sets the name of the type to
      use for the compiled regular expression.
      </para>
		</summary>
		<value>
			<para>The name of the new type.</para>
		</value>
		<remarks>
			<para>The <see langword="Name"/> and <see cref="System.Text.RegularExpressions.RegexCompilationInfo.Namespace"/> properties refer to the new type 
   in your code. If <see langword="Name"/> is <c>MyCompiledRegex</c> and <see langword="Namespace"/> is
<c>MyRegexNamespace</c>, you would 
refer to the compiled regular expression in code as <c>MyRegexNamespace.MyCompiledRegex</c>

.</para>
		</remarks>
	</doc><doc for="RegexCompilationInfo.IsPublic">
		<summary>
			<para> Gets or sets a
      value indicating whether the compiled regular expression has public
      visibility.
      </para>
		</summary>
		<value>
			<para><see langword="true "/> if the regular expression
   has public visibility; otherwise, <see langword="false"/> .</para>
		</value>
	</doc><doc for="RegexCompilationInfo.Pattern">
		<summary>
			<para> Gets or sets the regular expression to compile.
      </para>
		</summary>
		<value>
			<para> The regular expression to compile.</para>
		</value>
		<remarks>
			<para>The <see langword="Pattern"/> property can contain any valid regular expression.</para>
		</remarks>
	</doc><doc for="RegexCompilationInfo.Options">
		<summary>
			<para> Gets or sets the compiler options to
      use when compiling the regular expression.
      </para>
		</summary>
		<value>
			<para> A bitwise combination of <see cref="System.Text.RegularExpressions.RegexOptions"/> 
values.</para>
		</value>
		<remarks>
			<para><see langword="RegexOptions.Compiled"/> is ignored because all regular expressions are
   compiled through this mechanism.</para>
		</remarks>
	</doc><doc for="RegexCompilationInfo.Namespace">
		<summary>
			<para> Gets or sets the namespace
      to add the new type to.
      </para>
		</summary>
		<value>
			<para>The namespace of the new type.</para>
		</value>
		<remarks>
			<para> The <see cref="System.Text.RegularExpressions.RegexCompilationInfo.Name"/> and <see langword="Namespace"/>
properties are used to refer to the new type in your code. If
<see langword="Name"/> is <c>MyCompiledRegex</c> and <see langword="Namespace"/> is <c>MyRegexNamespace</c>, you would refer 
to the compiled regular expression in code as <c>MyRegexNamespace.MyCompiledRegex</c>
.</para>
		</remarks>
	</doc><doc for="RegexCompilationInfo.RegexCompilationInfo">
		<summary>
			<para> Creates a <see cref="System.Text.RegularExpressions.RegexCompilationInfo"/> object containing the
   information the compiler needs to create the assembly.
   </para>
		</summary>
		<param name="pattern">The regular expression to compile.</param>
		<param name="options">The compiler options to use when compiling the regular expression.</param>
		<param name="name">The name of the type to use for the compiled regular expression.</param>
		<param name="fullnamespace">The namespace to add to the new type to. </param>
		<param name="ispublic"><see langword="true"/> to make the compiled regular expression publicly visible; otherwise, <see langword="false"/> .</param>
		<example>
			<codelink SampleID="Regex Compilation, Matches, Groups, and Captures" SnippetID="11"/>
		</example>
	</doc>
</docs>
