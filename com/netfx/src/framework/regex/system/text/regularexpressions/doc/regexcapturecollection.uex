<docs>
	<doc for="CaptureCollection">
		<summary>
			<para> Represents a sequence of capture substrings.
   <see langword="CaptureCollection "/>
   returns the set of captures done by a single capturing group.
   </para>
		</summary>
		<remarks>
			<para> The collection is immutable (read-only) and has
      no public constructor. Instances are returned in the <see cref="System.Text.RegularExpressions.Group.Captures"/>
      collection.
      </para>
		</remarks>
	</doc><doc for="CaptureCollection.Count">
		<summary>
			<para> Gets the number of substrings captured by the group.
      </para>
		</summary>
		<value>
			<para>The number of items in the CaptureCollection.</para>
		</value>
	</doc><doc for="CaptureCollection.SyncRoot">
		<summary>
			<para>Gets an object that can be used to synchronize access to the collection.</para>
		</summary>
		<value>
			<para>An object that can be used to synchronize access to the collection.</para>
		</value>
	</doc><doc for="CaptureCollection.GetEnumerator">
		<summary>
			<para> Provides an enumerator in the same order as Item[i].
      </para>
		</summary>
		<returns>
			<para>A <see cref="System.Collections.IEnumerator"/> object that contains all <see langword="Capture "/>objects within the <see langword="CaptureCollection"/>.</para>
		</returns>
	</doc><doc for="CaptureCollection.CopyTo">
		<summary>
			<para> Copies all the elements of the collection to the given array
      beginning at the given index.
      </para>
		</summary>
		<param name="array">The array the collection is to be copied into. </param>
		<param name="arrayIndex">The position in the destination array where copying is to begin. </param>
		<remarks>
			<para> 
      Because the entire collection is copied into the array starting at the
      given index, the destination array must be at least as large as the collection.
      </para>
		</remarks>
	</doc><doc for="CaptureCollection.IsSynchronized">
		<summary>
			<para>Gets a value indicating whether access to the collection is synchronized
 (thread-safe).</para>
		</summary>
		<value>
			<para>The value of this property is always 
 <see langword="false"/>.</para>
		</value>
	</doc><doc for="CaptureCollection.IsReadOnly">
		<summary>
			<para>Gets a value that indicates whether the collection is read only.</para>
		</summary>
		<value>
			<para>The value of this property is always 
 <see langword="true"/>.</para>
		</value>
	</doc><doc for="CaptureCollection.this">
		<summary>
			<para> Gets an individual member of the collection.
 </para>
		</summary>
		<param name="i">Index into the capture collection. </param>
		<value>
			<para> The captured substring at position <paramref name="i"/> in the collection.
 </para>
		</value>
		<exception cref="ArgumentOutOfRangeException"><paramref name="i"/> is less than 0 or greater than <see cref="System.Text.RegularExpressions.CaptureCollection.Count"/>.</exception>
	</doc></docs>
