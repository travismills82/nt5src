<docs>
	<doc for="MatchCollection.CopyTo">
		<summary>
			<para>
       Copies all the elements of the collection to the given array
       starting at the given index.
    </para>
		</summary>
		<param name="array">
    The array the collection is to be copied into.
 </param>
		<param name="arrayIndex">
    The position in the array where copying is to begin.
 </param>
		<remarks>
			<para>
       Since the collection is copied into the array starting at the
       given index, the destination array must be at least as large as the entire
       collection.
    </para>
		</remarks>
	</doc>
	<doc for="MatchCollection.Count">
		<summary>
			<para> Gets the number of captures.
      </para>
		</summary>
		<value>
			<para>The number of captures.</para>
		</value>
		<remarks>
			<para> Note that as soon as the Count property is accessed,
      the regular expression engine must be run to find all matches. But if
   <see cref="System.Text.RegularExpressions.MatchCollection.GetEnumerator"/>
   
   is used to enumerate the matches, the engine will only
   execute the matches that are required.
   </para>
		</remarks>
	</doc><doc for="MatchCollection">
		<summary>
			<para> Represents the set of successful matches found by iteratively applying a regular expression
      pattern to the input string.
      </para>
		</summary>
		<remarks>
			<para>The collection is immutable (read-only) and has no
      public constructor. Instances are returned through the <see cref="System.Text.RegularExpressions.Regex.Matches"/>method.</para>
		</remarks>
	</doc><doc for="MatchCollection.GetEnumerator">
		<summary>
			<para> Provides an enumerator in the same order as Item[i].
      </para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> object that contains all <see langword="Match "/>objects within the <see langword="MatchCollection"/>.</para>
		</returns>
	</doc><doc for="MatchCollection.SyncRoot">
		<summary>
			<para>Gets an object that can be used to synchronize access to the collection.</para>
		</summary>
		<value>
			<para>An object that can be used to synchronize access to the collection. This property always returns the object itself.</para>
		</value>
	</doc><doc for="MatchCollection.IsSynchronized">
		<summary>
			<para>Gets a value indicating whether access to the collection
 is synchronized (thread-safe).</para>
		</summary>
		<value>
			<para>The value of this property is always 
 <see langword="false"/> .</para>
		</value>
	</doc><doc for="MatchCollection.IsReadOnly">
		<summary>
			<para>Gets a value that indicates whether the collection is read only.</para>
		</summary>
		<value>
			<para>This value of this property is 
 always <see langword="true."/>
			</para>
		</value>
	</doc><doc for="MatchCollection.this">
		<summary>
			<para> Gets an individual member of the collection.
 </para>
		</summary>
		<param name="i">Index into the Match collection. </param>
		<value>
			<para>The captured substring at position <paramref name="i"/> in the collection.</para>
		</value>
		<exception cref="ArgumentOutOfRangeException"><paramref name="i"/> is less than 0 or greater than <see cref="System.Text.RegularExpressions.MatchCollection.Count"/> .</exception>
	</doc></docs>
