<docs>
	<doc for="DataSetDom">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.GetTypeName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.ChildRelationFollowable">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.InitializeNamespace">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.CreateTypedTable">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.CreateTypedRow">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.CreateTypedRowEvent">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.CreateTypedRowEventHandler">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.CreateTypedDataSet">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataSetDom.Generate">
		<summary>
			<para>Generates a strongly-typed <see cref="System.Data.DataSet"/> .</para>
		</summary>
		<param name="dataSet"></param>
		<param name="packageName"></param>
		<param name="codeProvider"></param>
		<param name="domNamespace"></param>
	</doc><doc for="DataSetDom.Generate2">
		<summary>
			<para>Generates a strongly-typed <see cref="System.Data.DataSet"/> .</para>
		</summary>
		<param name="dataSet"></param>
		<param name="packageName"></param>
		<param name="codeProvider"></param>
		<param name="domCompileUnit"></param>
		<param name="useExtendedNaming"></param>
	</doc><doc for="DataSetDom.Generate1">
		<summary>
			<para>Generates a strongly-typed <see cref="System.Data.DataSet"/> .</para>
		</summary>
		<param name="dataSet"></param>
		<param name="packageName"></param>
		<param name="codeProvider"></param>
		<param name="domNamespace"></param>
		<param name="useExtendedNaming"></param>
	</doc><doc for="TypedDataSetGenerator">
		<summary>
			<para>Used to create a strongly-typed <see cref="System.Data.DataSet"/> 
.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Data.TypedDataSetGenerator"/> class is not intended for use as a 
   stand alone component, but as a class from which other classes derive standard functionality.</para>
		</remarks>
	</doc><doc for="TypedDataSetGenerator.Generate">
		<overload>
			<para>Generates a strongly-typed <see cref="System.Data.DataSet"/>.</para>
		</overload>
		<summary>
			<para>Generates a strongly-typed <see cref="System.Data.DataSet"/> .</para>
		</summary>
		<param name="dataSet">The source <see cref="System.Data.DataSet"/> that specifies the metadata for the typed <see cref="System.Data.DataSet"/> .</param>
		<param name="codeNamespace">The CodeNamespace that provides the target Namespace for the typed <see cref="System.Data.DataSet"/> .</param>
		<param name="codeGen">The CodeGenerator used to create the typed <see cref="System.Data.DataSet"/> .</param>
		<remarks>
			<para>The <see cref="System.Data.TypedDataSetGenerator"/> class is not intended for use as a stand alone 
   component, but as a class from which other classes derive standard
   functionality.</para>
		</remarks>
	</doc><doc for="TypedDataSetGenerator.GenerateIdName">
		<summary>
			<para> Transforms a string in a valid typed <see cref="System.Data.DataSet"/> name.</para>
		</summary>
		<param name="name">The source name to transform into a valid typed <see cref="System.Data.DataSet"/> name.</param>
		<param name="codeGen">The CodeGenerator used to perform the conversion.</param>
		<returns>
			<para>A string that is the converted name.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Data.TypedDataSetGenerator"/> class is not intended for use as 
   a stand alone component, but as a class from which other classes
   derive standard functionality.</para>
		</remarks>
	</doc></docs>
