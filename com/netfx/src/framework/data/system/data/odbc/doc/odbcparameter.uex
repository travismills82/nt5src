<docs><doc for="OdbcParameter.Finalize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="OdbcParameter.ToString">
		<summary>
			<para>Gets a string containing the <see cref="System.Data.Odbc.OdbcParameter.ParameterName"/>.</para>
		</summary>
		<returns>
			<para>A string containing the <see cref="System.Data.Odbc.OdbcParameter.ParameterName"/>.</para>
		</returns>
	</doc><doc for="OdbcParameter.OdbcParameter">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/>
class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/>
class.</para>
		</summary>
		<remarks>
			<para>The base constructor initializes all fields to their default values.</para>
		</remarks>
		<example>
			<para> The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its
 properties.
 </para>
			<codelink SampleID="Classic WebData OdbcParameter.OdbcParameter" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.ICloneable.Clone">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OdbcParameter.ParameterName">
		<summary>
			<para>Gets or sets the name of the <see cref="System.Data.Odbc.OdbcParameter"/>.</para>
		</summary>
		<value>
			<para>The name of the <see cref="System.Data.Odbc.OdbcParameter"/>. The default is an empty string ("").</para>
		</value>
		<remarks>
			<para> Instead of named parameters, the ODBC .NET Provider uses positional parameters that are marked with a question mark (?) in the
      syntax of the command text. Parameter objects in the <see cref="System.Data.Odbc.OdbcParameterCollection"/> and the actual parameters accepted by the
      stored procedure or parameterized SQL statement correspond to each other based on the order in which the <see cref="System.Data.Odbc.OdbcParameter"/>
      objects are inserted into the collection rather than by parameter name. Parameter names can be supplied, but will be ignored during parameter object binding.
      </para>
		</remarks>
		<example>
			<para>The following example assumes that the data source has a table name MyTable and a stored procedure named MyProc, that is defined as:</para>
			<code>
create table MyTable (col1 int, col2 smallmoney, col3 decimal)
create proc MyProc (@p1 int, @p2 smallmoney, @p3 decimal) as insert into MyTable values (@p1, @p2, @p3)
   </code>
			<para>The example creates parameters and calls the MyProc stored procedure.</para>
			<codelink SampleID="Classic WebData OdbcParameter.DbType" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OdbcParameter.OdbcType">
		<summary>
			<para>Gets or sets the <see cref="System.Data.Odbc.OdbcType"/> of the parameter.</para>
		</summary>
		<value>
			<para>An <see cref="System.Data.Odbc.OdbcType"/> value that is the <see cref="System.Data.Odbc.OdbcType"/> of the parameter. The default
   is <see langword="Nchar"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/> and <see cref="System.Data.Odbc.OdbcParameter.DbType"/> are linked. Therefore, setting
   the <see cref="System.Data.Odbc.OdbcParameter.DbType"/> changes the <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/> to a supporting <see cref="System.Data.Odbc.OdbcType"/>.</para>
			<para>For a list of the supported data types, see the appropriate <see cref="System.Data.Odbc.OdbcType"/>
member. For more information, see
<see topic="cpconUsingParametersWithDataAdapters"/>.</para>
		</remarks>
	</doc>
	<doc for="OdbcParameter">
		<summary>
			<para>Represents a parameter to an <see cref="System.Data.Odbc.OdbcCommand"/> and optionally, its mapping to a
<see cref="System.Data.DataColumn"/>. This class
   cannot be inherited.</para>
		</summary>
		<remarks>
			<para> Parameter
      names are not case-sensitive.</para>
		</remarks>
		<example>
			<para>The following example creates multiple instances of <see cref="System.Data.Odbc.OdbcParameter"/>
through the <see cref="System.Data.Odbc.OdbcParameterCollection"/> within the <see cref="System.Data.Odbc.OdbcDataAdapter"/>. These
parameters are used to select data from the data source and place the data in
the <see langword="DataSet"/>. This example assumes that a
<see cref="System.Data.DataSet"/>
and an <see cref="System.Data.Odbc.OdbcDataAdapter"/> have already been created with the appropriate
schema, commands, and connection.</para>
			<codelink SampleID="Classic WebData OdbcParameter" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OdbcParameter.IsNullable">
		<summary>
			<para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
		</summary>
		<value>
			<para><see langword="true"/> if null values are accepted; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Null values are handled using the <see cref="System.DBNull"/> class.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.IsNullable" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OdbcParameter.SourceVersion">
		<summary>
			<para>Gets or sets the DataRowVersion to use when loading <see cref="System.Data.Odbc.OdbcParameter.Value"/>.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DataRowVersion"/> values. The default is
<see langword="Current"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The property was not set to one of the <see cref="System.Data.DataRowVersion"/> values.</exception>
		<remarks>
			<para>The <see cref="System.Data.Odbc.OdbcParameter.SourceVersion"/> is used by
<see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/> during an <see cref="System.Data.Common.DbDataAdapter.Update"/> operation to 
   determine whether the parameter value is set to <see langword="Current"/> or
<see langword="Original"/>. This allows primary keys to be 
   updated. </para>
			<para>This property is set to the version of the
<see cref="System.Data.DataRow"/> used by either the <see langword="Item"/> 
property (<see cref="System.Data.DataRow"/> indexer), or the <see cref="System.Data.DataRow.GetChildRows"/> method.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.SourceVersion" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OdbcParameter.OdbcParameter2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/> class with the parameter name and data
   type.
   </para>
		</summary>
		<param name="name">The name of the parameter. </param>
		<param name="type">One of the <see cref="System.Data.Odbc.OdbcType"/> values. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="type"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData OdbcParameter.OdbcParameter1" SnippetID="1"/>
		</example>
	</doc>
	<doc for="OdbcParameter.OdbcParameter3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/> class with the
   parameter name, data type,
   and length.
   </para>
		</summary>
		<param name="name"> The name of the parameter. </param>
		<param name="type">One of the <see cref="System.Data.Odbc.OdbcType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="type"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData OdbcParameter.OdbcParameter2" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.OdbcParameter4">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/> class with the parameter
   name, data type, length, and source column
   name.
   </para>
		</summary>
		<param name="name"> The name of the parameter. </param>
		<param name="type">One of the <see cref="System.Data.Odbc.OdbcType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<param name="sourcecolumn">The name of the source column. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="type"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData OdbcParameter.OdbcParameter3" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.OdbcParameter5">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/> class
   with the parameter name, data type, length, source column name, parameter direction, numeric precision,
   and other
   properties.
   </para>
		</summary>
		<param name="parameterName">The name of the parameter. </param>
		<param name="odbcType">One of the <see cref="System.Data.Odbc.OdbcType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<param name="parameterDirection">One of the <see langword="System.Data.ParameterDirection"/> values. </param>
		<param name="isNullable"><see langword="true"/> if the value of the field can be null; otherwise, <see langword="false"/>. </param>
		<param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="System.Data.Odbc.OdbcParameter.Value"/> is resolved. </param>
		<param name="scale">The total number of decimal places to which <see cref="System.Data.Odbc.OdbcParameter.Value"/> is resolved. </param>
		<param name="srcColumn">The name of the source column. </param>
		<param name="srcVersion">One of the <see langword="System.Data.DataRowVersion"/> values. </param>
		<param name="value">An <see cref="System.Object"/> that is the value of the <see cref="System.Data.Odbc.OdbcParameter"/>. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="type"/> parameter is an invalid back-end data type. </exception>
		<example>
			<para> The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and displays the <see cref="System.Data.Odbc.OdbcParameter.ParameterName"/>.
   </para>
			<codelink SampleID="Classic WebData OdbcParameter.OdbcParameter4" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.Direction">
		<summary>
			<para>Gets or sets a value indicating whether the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
		</summary>
		<value>
			<para>One of the
   <see cref="System.Data.ParameterDirection"/> values. The default is <see langword="Input"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The property was not set to one of the valid <see cref="System.Data.ParameterDirection"/> values.</exception>
		<remarks>
			<para>If the <see cref="System.Data.ParameterDirection"/> is <see langword="Output"/>, and execution of the
   associated <see cref="System.Data.Odbc.OdbcCommand"/> does not return a value, the
<see cref="System.Data.Odbc.OdbcParameter"/> will contain a 
   null value. Null values are handled using the <see langword="DBNull"/>
   class. </para>
			<para>
				<see langword="Output"/>, <see langword="InputOut"/>, and <see langword="ReturnValue "/>parameters returned by 
   calling <see cref="System.Data.Odbc.OdbcCommand.ExecuteReader"/> cannot be accessed until you
   call <see cref="System.Data.Odbc.OdbcDataReader.Close"/> or <SpecialLocalizableItem kind="UIElement">Dispose</SpecialLocalizableItem> on the <see cref="System.Data.Odbc.OdbcDataReader"/> .</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.DbType" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.Precision">
		<summary>
			<para>Gets or sets the maximum number of digits used to
      represent the <see cref="System.Data.Odbc.OdbcParameter.Value"/>
      property.</para>
		</summary>
		<value>
			<para>The maximum number of digits used to represent the
      <see cref="System.Data.Odbc.OdbcParameter.Value"/> property. The default
      value is 0, which indicates that the data provider sets the precision for
      <see cref="System.Data.Odbc.OdbcParameter.Value"/>. Setting the <see cref="System.Data.Odbc.OdbcParameter.Precision"/>
   property has no effect.</para>
		</value>
		<remarks>
			<para>Setting the <see cref="System.Data.Odbc.OdbcParameter.Precision"/> property has no effect.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.Precision" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcParameter.Scale"/>
		<seealso cref="System.Data.Odbc.OdbcParameter.Size"/>
	</doc><doc for="OdbcParameter.DbType">
		<summary>
			<para> Gets or sets the <see cref="System.Data.DbType"/> of the
   parameter.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DbType"/> values.
   The default is <see cref="System.String"/>.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="System.Data.DbType"/>.</exception>
		<remarks>
			<para>The <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/> and <see cref="System.Data.Odbc.OdbcParameter.DbType"/> are linked. Therefore, setting
   the <see cref="System.Data.Odbc.OdbcParameter.DbType"/> changes the <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/> to a supporting <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/>.</para>
			<para>For a list of the supported data types, see the appropriate <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/>
member. For more information, see
<see topic="cpconUsingParametersWithDataAdapters"/>
.</para>
			<note type="note">
				<see cref="System.Data.DbType.Object"/>
is not supported by the .NET Framework Data Provider for ODBC.
</note>
		</remarks>
		<example>
			<para>The following example creates an OdbcParameter and sets 
      some of its properties, including the <see langword="DbType"/> Property.</para>
			<codelink SampleID="Classic WebData OdbcParameter.DbType" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcType"/>
	</doc><doc for="OdbcParameter.OdbcParameter1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.Odbc.OdbcParameter"/> class with the parameter name and
   an <see cref="System.Data.Odbc.OdbcParameter"/>
   object.
   </para>
		</summary>
		<param name="name">The name of the parameter. </param>
		<param name="value">An <see cref="System.Data.Odbc.OdbcParameter"/> object. </param>
		<remarks>
			<para> Use caution when using this overload of the <see cref="System.Data.Odbc.OdbcParameter"/> constructor to specify
   integer parameter values. Because this overload takes a <paramref name="value"/>
   of type <see cref="System.Object"/>, you must
   convert the integral value to an <see cref="System.Object"/> type when the value is zero, as the following C# example demonstrates. </para>
			<code>
Parameter = new OdbcParameter("@pname", Convert.ToInt32(0));
</code>
			<para>If you do not perform this conversion, the compiler will
   assume you are attempting to call the <see langword="OdbcParameter "/>(<see langword="string"/>, <see langword="OdbcType"/>) constructor overload.</para>
		</remarks>
	</doc><doc for="OdbcParameter.Scale">
		<summary>
			<para>Gets or sets the number of decimal places to
      which <see cref="System.Data.Odbc.OdbcParameter.Value"/>
      is resolved.</para>
		</summary>
		<value>
			<para>The number of decimal places to which <see cref="System.Data.Odbc.OdbcParameter.Value"/>
is resolved. The default is
0.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.Odbc.OdbcParameter.Scale"/> property is used
   only for decimal and numeric input parameters.</para>
			<note type="note">
   .NET Framework data providers that ship with
   .NET Framework version 1.0 do not verify the <see cref="System.Data.Odbc.OdbcParameter.Scale"/> of <see cref="System.Decimal"/> parameter values. This can result in altered data being
   inserted at the data source. If you are using .NET Framework version 1.0,
   validate the <see cref="System.Data.Odbc.OdbcParameter.Scale"/> of <see cref="System.Decimal"/> values before setting the
   parameter value. When using .NET Framework version 1.1 or later,
<see cref="System.Data.Odbc.OdbcParameter.Scale"/> values that exceed the 
<see cref="System.Decimal"/> parameter scale 
   might only be truncated in scale (if that is the behavor of undelying ODBC
   driver).
</note>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.Precision" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcParameter.Precision"/>
		<seealso cref="System.Data.Odbc.OdbcParameter.Size"/>
	</doc><doc for="OdbcParameter.Size">
		<summary>
			<para> Gets or sets
      the maximum size of the data within the column.</para>
		</summary>
		<value>
			<para> The maximum size of the data within
      the column. The default value is inferred from the parameter
      value.</para>
		</value>
		<remarks>
			<para> The <see cref="System.Data.Odbc.OdbcParameter.Size"/> property is used for binary and string types.</para>
			<para>For nonstring data types and ANSI string data, the <see cref="System.Data.Odbc.OdbcParameter.Size"/> property refers to the
number of bytes. For Unicode string data, <see cref="System.Data.Odbc.OdbcParameter.Size"/>
refers to the number of characters. The count for strings does not include the
terminating character.</para>
			<para>For variable-length data types, <see cref="System.Data.Odbc.OdbcParameter.Size"/> describes the maximum
amount of data to transmit to the server. For example, for a Unicode string
value, <see cref="System.Data.Odbc.OdbcParameter.Size"/> could be used to limit
the amount of data sent to the server to the first one hundred characters.</para>
			<para>For bidirectional and output parameters, and return values, you must set the 
   value of <see cref="System.Data.Odbc.OdbcParameter.Size"/>. This is not required
   for input parameters, and if not explicitly set, the value of is inferred from
   the actual size of the specified parameter when a parameterized statement is
   executed.</para>
			<para>The <see cref="System.Data.Odbc.OdbcParameter.DbType"/>, <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/>, and <see cref="System.Data.Odbc.OdbcParameter.Size"/> properties of a 
parameter can be inferred by setting <see cref="System.Data.Odbc.OdbcParameter.Value"/>.
Therefore, you are not required to specify them. However, they are not exposed
in <see cref="System.Data.Odbc.OdbcParameter"/> property settings. For example, if the
size of the parameter has been inferred, <see cref="System.Data.Odbc.OdbcParameter.Size"/> does
not contain inferred value after statement execution.</para>
			<note type="note">
   For an <see cref="System.Data.Odbc.OdbcParameter"/> with a <see cref="System.Data.Odbc.OdbcParameter.Direction"/> of
<see langword="ParameterDirection.Output"/>, 
<see langword="ParameterDirection.InputOutput"/>, or 
<see langword="ParameterDirection.ReturnValue"/>, an exception is thrown when the 
   command is executed if the size of the value returned by the data source exceeds
   the specified <see cref="System.Data.Odbc.OdbcParameter.Size"/>
   
   of the <see cref="System.Data.Odbc.OdbcParameter"/>.
</note>
			<para>For fixed-length data types, the
   value of <see cref="System.Data.Odbc.OdbcParameter.Size"/>
   is ignored. It can be retrieved
   for informational purposes, and returns the maximum amount of bytes the provider
   uses when transmitting the value of the parameter to the server.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.Size" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.SourceColumn">
		<summary>
			<para>Gets or sets the name of the source column mapped to the
   <see cref="System.Data.DataSet"/>
   and used for loading or returning the <see cref="System.Data.Odbc.OdbcParameter.Value"/>.</para>
		</summary>
		<value>
			<para>The name of the source column that will be used to set the value of this parameter. The default is an empty
      string ("").</para>
		</value>
		<remarks>
			<para>When <see cref="System.Data.Odbc.OdbcParameter.SourceColumn"/> is set to anything other than an empty string, the value of the parameter is retrieved from the column with the <see cref="System.Data.Odbc.OdbcParameter.SourceColumn"/> name.
   If <see cref="System.Data.Odbc.OdbcParameter.Direction"/>
   is set to <see langword="Input"/> , the value is taken from the <see cref="System.Data.DataSet"/>. If <see cref="System.Data.Odbc.OdbcParameter.Direction"/>
   is set to <see langword="Output"/> , the value is taken from the
   data source. A <see cref="System.Data.Odbc.OdbcParameter.Direction"/>
   of <see langword="InputOutput"/> is a combination of both.</para>
			<para>For more information about using the <see cref="System.Data.Odbc.OdbcParameter"/> property, see <see topic="cpconusingparameterswithdataadapters"/> and <see topic="cpconupdatingdatabasewithdataadapterdataset"/>.</para>
		</remarks>
		<example>
			<para>The following example creates an 
   <see cref="System.Data.Odbc.OdbcParameter.SourceColumn"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.SourceColumn" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcParameter.Value">
		<summary>
			<para>Gets or sets the value of the parameter.</para>
		</summary>
		<value>
			<para>An <see cref="System.Object"/> that is the value
   of the parameter. The default value is null.</para>
		</value>
		<remarks>
			<para> For input parameters, the
      value is bound to the <see cref="System.Data.Odbc.OdbcCommand"/>
      that is sent to the server. For output and return-value parameters, the value is
      set on completion of the <see cref="System.Data.Odbc.OdbcCommand"/> and after the <see cref="System.Data.Odbc.OdbcDataReader"/> is closed.</para>
			<para>When sending a null parameter value to the server, the
      user must specify <see cref="System.DBNull"/>, not null. A null value in the
      system is an empty object that has no value. <see cref="System.DBNull"/> is used to represent null values. If the parameter is
      used to call a stored procedure with parameters that have default values,
      setting <see cref="System.Data.Odbc.OdbcParameter.Value"/> to null causes
      the default value to be used.</para>
			<para> If the application specifies the database
      type, the bound value is converted to that type when the provider sends the
      data to the server. The provider attempts to convert any type of
      value if it supports the <see cref="System.IConvertible"/> interface. Conversion errors may
      result if the specified type is not compatible with the value.</para>
			<para> Both the <see cref="System.Data.Odbc.OdbcParameter.DbType"/> and <see cref="System.Data.Odbc.OdbcParameter.OdbcType"/> properties can be inferred by setting
<see cref="System.Data.Odbc.OdbcParameter.Value"/>. 
   If applicable, the size, precision and scale will also be inferred from
<see cref="System.Data.Odbc.OdbcParameter.Value"/> when the parameterized statement 
   is executed. Inferred values, however, will not be exposed to the user.</para>
			<para> The <see cref="System.Data.Odbc.OdbcParameter.Value"/> property is overwritten by
the <see langword="Update"/> method.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcParameter.Value" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcParameter.OdbcType"/>
		<seealso cref="System.Data.Odbc.OdbcParameter.DbType"/>
	</doc></docs>
