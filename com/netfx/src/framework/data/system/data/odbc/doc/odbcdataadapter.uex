<docs>
	<doc for="OdbcDataAdapter.Dispose">
		<overload>
			<para>Releases the resources used by the <see cref="System.Data.Odbc.OdbcDataAdapter"/> .</para>
		</overload>
		<summary>
			<para>Releases the resources used by the 
 <see cref="System.Data.Odbc.OdbcDataAdapter"/> .</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources. </param>
		<remarks>
			<para>This method is called by the public <see topic="frlrfSystemComponentModelComponentClassDisposeTopic1" title="Dispose()"/> method and the <see cref="System.Object.Finalize"/> method.
<see langword="Dispose()"/> invokes the protected 
<see langword="Dispose(Boolean)"/> method with the <paramref name="disposing"/> parameter 
 set to <see langword="true"/>. <see cref="System.Object.Finalize"/> invokes <see langword="Dispose"/> with
<paramref name="disposing"/> set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is <see langword="true"/>, this method
releases all resources held by any managed objects that this <see cref="System.Data.Odbc.OdbcDataAdapter"/> references. It does this by invoking the
<see langword="Dispose()"/> method of each referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called multiple times by other objects. When
 overriding <see langword="Dispose(Boolean)"/>, be careful not to reference
 objects that have been previously disposed of in an earlier call to
<see langword="Dispose"/>. For more information about how to implement 
<see langword="Dispose(Boolean)"/>, see <see topic="cpconImplementingDisposeMethod"/>.
</note>
			<para>For more information about <see langword="Dispose"/> and <see cref="System.Object.Finalize"/>, see
<see topic="cpconCleaningUpUnmanagedResources "/> and <see topic="cpconOverridingFinalizeMethod "/>. </para>
		</remarks>
		<example>
			<para> The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and then disposes of it.
 </para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.Dispose" SnippetID="1"/>
		</example>
	</doc><doc for="OdbcDataAdapter.IDbDataAdapter.DeleteCommand">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="OdbcDataAdapter.IDbDataAdapter.InsertCommand">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="OdbcDataAdapter.IDbDataAdapter.SelectCommand">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="OdbcDataAdapter.IDbDataAdapter.UpdateCommand">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="OdbcDataAdapter.OdbcDataAdapter">
		<overload>
			<para>Initializes a new
      instance of the <see cref="System.Data.Odbc.OdbcDataAdapter"/>
      class.</para>
		</overload>
		<summary>
			<para>Initializes a new
      instance of the <see cref="System.Data.Odbc.OdbcDataAdapter"/>
      class.</para>
		</summary>
		<remarks>
			<para>When you create an instance of
      <see cref="System.Data.Odbc.OdbcDataAdapter"/>, the following read/write properties are set to their default values, as shown in the table.</para>
			<list type="table">
				<listheader>
					<term>Properties</term>
					<description>Default Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Data.Common.DataAdapter.MissingMappingAction"/></term>
					<description><see langword="MissingMappingAction.Passthrough"/></description>
				</item>
				<item>
					<term>
						<see cref="System.Data.Common.DataAdapter.MissingSchemaAction"/></term>
					<description><see langword="MissingSchemaAction.Add"/></description>
				</item>
			</list>
			<para>You can change the value of any of these properties through a separate call
   to the property.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets some of
   its properties.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.OdbcDataAdapter" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.MissingMappingAction"/>
		<seealso cref="System.Data.MissingSchemaAction"/>
	</doc><doc for="OdbcDataAdapter.OdbcDataAdapter1">
		<summary>
			<para>Initializes a new instance
      of the <see cref="System.Data.Odbc.OdbcDataAdapter"/> class with the specified SQL SELECT
      statement.</para>
		</summary>
		<param name="selectCommand">An <see cref="System.Data.Odbc.OdbcCommand"/> that is an SQL SELECT statement or stored procedure, and is set as the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property of the <see cref="System.Data.Odbc.OdbcDataAdapter"/>.</param>
		<remarks>
			<para> 
      This implementation of the <see cref="System.Data.Odbc.OdbcDataAdapter"/> constructor sets the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property to the value
      specified in the <paramref name="selectCommand"/> parameter.</para>
			<para>When you create an instance of <see cref="System.Data.Odbc.OdbcDataAdapter"/>, the following read/write properties are set to their default values, as shown
   in the table.</para>
			<list type="table">
				<listheader>
					<term>Properties</term>
					<description>Initial Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Data.Common.DataAdapter.MissingMappingAction"/></term>
					<description><see langword="MissingMappingAction.Passthrough"/></description>
				</item>
				<item>
					<term>
						<see cref="System.Data.Common.DataAdapter.MissingSchemaAction"/></term>
					<description><see langword="MissingSchemaAction.Add"/></description>
				</item>
			</list>
			<para>You can change the value of any of these properties through a separate call
   to the property.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.OdbcDataAdapter1" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.MissingMappingAction"/>
		<seealso cref="System.Data.MissingSchemaAction"/>
	</doc>
	<doc for="OdbcDataAdapter.OdbcDataAdapter2">
		<summary>
			<para>Initializes a new instance
      of the <see cref="System.Data.Odbc.OdbcDataAdapter"/> class with an SQL SELECT statement and an
   <see cref="System.Data.Odbc.OdbcConnection"/>.</para>
		</summary>
		<param name="selectCommandText">A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property of the <see cref="System.Data.Odbc.OdbcDataAdapter"/>.</param>
		<param name="selectConnection">An <see cref="System.Data.Odbc.OdbcConnection"/> that represents the connection.</param>
		<remarks>
			<para> This implementation of the <see cref="System.Data.Odbc.OdbcDataAdapter"/>
can be useful in an
application that must call the <see langword="Fill"/> method for two or more
<see cref="System.Data.Odbc.OdbcDataAdapter"/> 
objects.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.OdbcDataAdapter3" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.MissingMappingAction"/>
		<seealso cref="System.Data.MissingSchemaAction"/>
	</doc>
	<doc for="OdbcDataAdapter.OdbcDataAdapter3">
		<summary>
			<para>Initializes a new instance of the
   <see cref="System.Data.Odbc.OdbcDataAdapter"/> class with an SQL SELECT statement and a connection string.</para>
		</summary>
		<param name="selectCommandText">A string that is a SQL SELECT statement or stored procedure to be used by the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property of the <see cref="System.Data.Odbc.OdbcDataAdapter"/>.</param>
		<param name="selectConnectionString">The connection string.</param>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.OdbcDataAdapter2" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.MissingMappingAction"/>
		<seealso cref="System.Data.MissingSchemaAction"/>
	</doc>
	<doc for="OdbcDataAdapter.RowUpdated">
		<summary>
			<para>Occurs during an update
      operation after a command is executed against the data source.</para>
		</summary>
		<remarks>
			<para>When using <see cref="System.Data.Common.DbDataAdapter.Update"/>, there are two events that
   occur per data row updated. The order of execution is as follows:</para>
			<list type="number">
				<item>
					<term>The values in the <see cref="System.Data.DataRow"/> are moved to the parameter values.</term>
				</item>
				<item>
					<term>The <see cref="System.Data.Common.DbDataAdapter.OnRowUpdating"/> event is raised.</term>
				</item>
				<item>
					<term>The command executes.</term>
				</item>
				<item>
					<term>If the command is set to FirstReturnedRecord, then the first returned
      result is placed in the <see cref="System.Data.DataRow"/>.</term>
				</item>
				<item>
					<term>If there are output parameters, they are placed in the <see cref="System.Data.DataRow"/>.</term>
				</item>
				<item>
					<term>The <see cref="System.Data.Common.DbDataAdapter.OnRowUpdated"/> event is
   raised.<see langword=""/></term>
				</item>
				<item>
					<term>
						<see cref="System.Data.DataRow.AcceptChanges"/> is called.</term>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="OdbcDataAdapter.RowUpdating">
		<summary>
			<para>Occurs during <see cref="System.Data.Common.DbDataAdapter.Update"/>
before a command is executed against the data
source.</para>
		</summary>
		<remarks>
			<para>When using <see cref="System.Data.Common.DbDataAdapter.Update"/>, there are two events that
   occur per data row updated. The order of execution is as follows:</para>
			<list type="number"><item>
					<term>
      
      The values in the <see cref="System.Data.DataRow"/> are moved to the parameter values.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Data.Common.DbDataAdapter.OnRowUpdating"/> event is raised.</term>
				</item>
				<item>
					<term>
      
      The command executes.</term>
				</item>
				<item>
					<term>
      
      If the command is set to FirstReturnedRecord, then the first returned
      result is placed in the <see cref="System.Data.DataRow"/>.</term>
				</item>
				<item>
					<term>
      
      If there are output parameters, they are placed in the <see cref="System.Data.DataRow"/>.</term>
				</item>
				<item>
					<term>
      
      The <see cref="System.Data.Common.DbDataAdapter.OnRowUpdated"/> event is
      raised.<see langword=""/></term>
				</item>
				<item>
					<term>
						<see cref="System.Data.DataRow.AcceptChanges"/> is called.</term>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="OdbcDataAdapter.OnRowUpdated">
		<summary>
			<para> Raises the <see cref="System.Data.Odbc.OdbcDataAdapter.RowUpdated"/> event using a <see cref="System.Data.Common.RowUpdatedEventArgs"/> 
object.</para>
		</summary>
		<param name="value">A <see cref="System.Data.Common.RowUpdatedEventArgs"/> object that contains the event data. </param>
		<remarks>
			<para> Raising an event invokes the event handler
      through a delegate. For an overview, see <see topic="cpconProvidingEventFunctionality"/>.
      </para>
			<note type="inheritinfo">
      When
      overriding <see cref="System.Data.Odbc.OdbcDataAdapter.OnRowUpdated"/> in a derived class,
      be sure to call the <see cref="System.Data.Odbc.OdbcDataAdapter.OnRowUpdated"/> method of the base class.
      
   </note>
		</remarks>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.OnRowUpdating"/>
	</doc>
	<doc for="OdbcDataAdapter.OnRowUpdating">
		<summary>
			<para> Raises the <see cref="System.Data.Odbc.OdbcDataAdapter.RowUpdating"/> event using a 
<see cref="System.Data.Common.RowUpdatingEventArgs"/> object, whether
   or not the update operation is successful.</para>
		</summary>
		<param name="value">A <see cref="System.Data.Common.RowUpdatingEventArgs"/> object that contains the event data. </param>
		<remarks>
			<para> Raising an event invokes the event handler
      through a delegate. For an overview, see <see topic="cpconProvidingEventFunctionality"/>.
      </para>
			<note type="inheritinfo">
      When
      overriding <see cref="System.Data.Odbc.OdbcDataAdapter.OnRowUpdating"/> in a derived class,
      be sure to call the <see cref="System.Data.Odbc.OdbcDataAdapter.OnRowUpdating"/> method of the base class.
      
   </note>
		</remarks>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.OnRowUpdated"/>
	</doc>
	<doc for="OdbcDataAdapter.CreateRowUpdatedEvent">
		<summary>
			<para>Initializes a new instance of the
      <see cref="System.Data.Common.RowUpdatedEventArgs"/> class,
      regardless of whether the update is successful.</para>
		</summary>
		<param name="dataRow">The <see cref="System.Data.DataRow"/> used to update the data source.</param>
		<param name="command">The <see cref="System.Data.Odbc.OdbcCommand"/> executed during the update operation.</param>
		<param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
		<param name="tableMapping">A <see cref="System.Data.Common.DataTableMapping"/> object.</param>
		<returns>
			<para>A new instance of the
      <see cref="System.Data.Common.RowUpdatedEventArgs"/> class.</para>
		</returns>
		<remarks>
			<note type="inheritinfo">
      When overriding <see cref="System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent"/>
      in
      a derived class, be sure to call the <see cref="System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent"/> method of the
      base class.
      
      </note>
		</remarks>
	</doc>
	<doc for="OdbcDataAdapter.CreateRowUpdatingEvent">
		<summary>
			<para>Initializes a new instance of the
      <see cref="System.Data.Common.RowUpdatingEventArgs"/> class.</para>
		</summary>
		<param name="dataRow">The <see cref="System.Data.DataRow"/> that updates the data source.</param>
		<param name="command">The <see cref="System.Data.Odbc.OdbcCommand"/> to execute during the update operation.</param>
		<param name="statementType">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</param>
		<param name="tableMapping">A <see cref="System.Data.Common.DataTableMapping"/> object.</param>
		<returns>
			<para>A new instance of the
      <see cref="System.Data.Common.RowUpdatingEventArgs"/> class.</para>
		</returns>
		<remarks>
			<note type="inheritinfo">
      When overriding <see cref="System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent"/>
      in
      a derived class, be sure to call the <see cref="System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent"/>
      
      method of the
      base class.
      
      </note>
		</remarks>
	</doc>
	<doc for="OdbcDataAdapter.ICloneable.Clone">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="OdbcDataAdapter.DeleteCommand">
		<summary>
			<para>Gets or sets an SQL statement or stored procedure used to delete records in the data source.</para>
		</summary>
		<value>
			<para>An <see cref="System.Data.Odbc.OdbcCommand"/> used during an update operation to delete
   records in the data source that correspond to deleted rows in the
<see cref="System.Data.DataSet"/>.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/> property is assigned to a
   previously created <see cref="System.Data.Odbc.OdbcCommand"/>, the <see cref="System.Data.Odbc.OdbcCommand"/> is not cloned. Instead, the
<see cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/> maintains a reference to the 
   previously created <see cref="System.Data.Odbc.OdbcCommand"/>.</para>
			<para>During an update operation, if
<see cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/> is not set and primary key 
   information is present in the <see cref="System.Data.DataSet"/>, you can use the <see cref="System.Data.Odbc.OdbcCommandBuilder"/> class to automatically
   generate the <see cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/> , and additional
   commands needed to reconcile the <see cref="System.Data.DataSet"/> to the data source. To do this, set the
<see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property of the the <see cref="System.Data.Odbc.OdbcDataAdapter"/>. The generation logic also requires key column 
   information to be present in the <see cref="System.Data.DataSet"/>. For more information
   see <see topic="cpconAutomaticallyGeneratedCommands"/>.</para>
		</remarks>
		<example>
			<para>The following example creates an
      <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> and <see cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/> properties. It assumes
      you have already created an <see cref="System.Data.Odbc.OdbcConnection"/> object.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.DeleteCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/>
	</doc>
	<doc for="OdbcDataAdapter.InsertCommand">
		<summary>
			<para>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</para>
		</summary>
		<value>
			<para>An <see cref="System.Data.Odbc.OdbcCommand"/> used during an update operation to insert
   records in the data source that correspond to new rows in the
<see cref="System.Data.DataSet"/>.</para>
		</value>
		<remarks>
			<para>When the <see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/> property is assigned to a
   previously created <see cref="System.Data.Odbc.OdbcCommand"/> object, the <see cref="System.Data.Odbc.OdbcCommand"/> is not cloned. Instead,
<see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/> maintains a reference to the 
   previously created <see cref="System.Data.Odbc.OdbcCommand"/>.</para>
			<para>During an update operation, if
<see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/> is not set and primary key 
   information is present in the <see cref="System.Data.DataSet"/>, you can use the <see cref="System.Data.Odbc.OdbcCommandBuilder"/>class to automatically
   generate <see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/> , and additional
   commands needed to reconcile the <see cref="System.Data.DataSet"/> to the data source. To do this, set the
<see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property of the 
<see cref="System.Data.Odbc.OdbcDataAdapter"/>. 
   The generation logic also requires key column information to be present in the
<see cref="System.Data.DataSet"/>. For more information
   see <see topic="cpconAutomaticallyGeneratedCommands"/>.</para>
			<note type="note">
   If execution of this command returns rows,
   these rows may be added to the <see cref="System.Data.DataSet"/> depending upon how you set the <see cref="System.Data.Odbc.OdbcCommand.UpdatedRowSource"/> property of the <see cref="System.Data.Odbc.OdbcCommand"/> object.
   
</note>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> and <see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/> properties. It assumes you
   have already created an <see cref="System.Data.Odbc.OdbcConnection"/> object.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.InsertCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/>
	</doc>
	<doc for="OdbcDataAdapter.SelectCommand">
		<summary>
			<para>Gets or sets an SQL statement
      or stored procedure used to select records in the data source.</para>
		</summary>
		<value>
			<para>An <see cref="System.Data.Odbc.OdbcCommand"/> that is used during a fill operation to
   select records from data source for placement in the
<see cref="System.Data.DataSet"/>.</para>
		</value>
		<remarks>
			<para>When <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> is assigned to a previously created <see cref="System.Data.Odbc.OdbcCommand"/>,
   the <see cref="System.Data.Odbc.OdbcCommand"/> is not cloned. Instead, the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> maintains a reference to the previously
   created <see cref="System.Data.Odbc.OdbcCommand"/>
   object.</para>
			<para> If <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> does not return any rows,
no tables are added to the <see cref="System.Data.DataSet"/>, and no exception is raised.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets the
<see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> and <see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/> properties. It assumes 
   you have already created an <see cref="System.Data.Odbc.OdbcConnection"/> object.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.SelectCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/>
	</doc>
	<doc for="OdbcDataAdapter">
		<summary>
			<para>Represents a set of data commands and a connection to a
      data source that are used to fill the <see cref="System.Data.DataSet"/>
      and update the data source. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Data.Odbc.OdbcDataAdapter"/> serves as a bridge between a
<see langword="DataSet"/> 
and data source for retrieving and saving
data. The <see cref="System.Data.Odbc.OdbcDataAdapter"/> provides this bridge by using <see cref="System.Data.Common.DbDataAdapter.Fill"/> to load data from the data source
into the <see cref="System.Data.DataSet"/>, and
using <see cref="System.Data.Common.DbDataAdapter.Update"/>
to send changes made in the <see cref="System.Data.DataSet"/>
back to the data
source.</para>
			<para>When the <see cref="System.Data.Odbc.OdbcDataAdapter"/> fills a 
<see cref="System.Data.DataSet"/> , it will create the 
necessary tables and columns for the returned data if they do not already exist.
However, primary key information will not be included in the implicitly created
schema unless the <see cref="System.Data.Common.DataAdapter.MissingSchemaAction"/>
property is set to <see cref="System.Data.MissingSchemaAction.AddWithKey"/> . You may also have the <see cref="System.Data.Odbc.OdbcDataAdapter"/> create the schema
of the <see cref="System.Data.DataSet"/> , including primary key
information, before filling it with data using <see cref="System.Data.Common.DbDataAdapter.FillSchema"/>. For more information, see
<see topic="cpconaddingexistingconstraintstodataset"/>.</para>
			<note type="note">
   When you call the <see langword="Fill"/>
   method on a data source that does not have a primary key column, the <see cref="System.Data.Odbc.OdbcDataAdapter"/> attempts
   to promote the unique constraint column to the primary key. In the process, the <see cref="System.Data.Odbc.OdbcDataAdapter"/> marks the
   unique constraint as not nullable. This behavior works unless there is a null
   value in the unique constraint column. If there is a null value, the
<see langword="Fill"/> 
method fails with a constraint violation.
To avoid this situation, do not allow null values in the unique constraint column.
</note>
			<note type="note">
   Due to the limitations of native ODBC
   drivers, only one <see cref="System.Data.DataTable"/>
   is ever returned when you
   call <see cref="System.Data.Common.DbDataAdapter.FillSchema" qualify="true"/>. This is true even when executing SQL batch statements
   from which multiple <see cref="System.Data.DataTable"/> objects would be expected.
</note>
			<para>The <see cref="System.Data.Odbc.OdbcDataAdapter"/>also includes the
<see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/>, <see cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/>, <see cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/>, <see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/>, and 
<see langword="TableMappings"/>
properties to facilitate loading and updating of data.</para>
		</remarks>
		<example>
			<para>The following example uses <see cref="System.Data.Odbc.OdbcCommand"/>, <see cref="System.Data.Odbc.OdbcDataAdapter"/> and
<see cref="System.Data.Odbc.OdbcConnection"/> to select records, 
   and populate a <see langword="DataSet"/>
   with the
   selected rows. The filled <see cref="System.Data.DataSet"/> is then returned. To accomplish this, the method is
   passed an initialized <see cref="System.Data.DataSet"/>, with the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> set with the specified SQL SELECT statement and a connection to the data source.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcConnection"/>
		<seealso cref="System.Data.Odbc.OdbcCommand"/>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataTable"/>
	</doc>
	<doc for="OdbcDataAdapter.UpdateCommand">
		<summary>
			<para>Gets or sets an SQL
      statement or stored procedure used to update records in the data source.</para>
		</summary>
		<value>
			<para>An <see cref="System.Data.Odbc.OdbcCommand"/> used during an update operation to update
   records in the data source that correspond to modified rows in the
<see cref="System.Data.DataSet"/>.</para>
		</value>
		<remarks>
			<para>When <see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/> is assigned to a previously
   created <see cref="System.Data.Odbc.OdbcCommand"/>, the <see cref="System.Data.Odbc.OdbcCommand"/> is not cloned. Instead, the
<see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/> maintains a reference to the 
   previously created <see cref="System.Data.Odbc.OdbcCommand"/> object.</para>
			<para>During an update operation, if
<see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/> is not set and primary key 
   information is present in the DataSet, you can use the <see cref="System.Data.Odbc.OdbcCommandBuilder"/> class to automatically
   generate <see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/>, and additional
   commands needed to reconcile the <see cref="System.Data.DataSet"/>to the data source. To do this, set the
<see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> property of the 
<see cref="System.Data.Odbc.OdbcDataAdapter"/>. 
   The generation logic also requires key column information to be present in the
<see cref="System.Data.DataSet"/>. For more information
   see <see topic="cpconAutomaticallyGeneratedCommands"/>.</para>
			<note type="note">
   If execution of this command returns rows,
   these rows may be merged with the <see cref="System.Data.DataSet"/> depending upon how you set the
<see cref="System.Data.Odbc.OdbcCommand.UpdatedRowSource"/> property of the <see cref="System.Data.Odbc.OdbcCommand"/> object.
   
</note>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Data.Odbc.OdbcDataAdapter"/> and sets the <see cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/> and <see cref="System.Data.Odbc.OdbcDataAdapter.UpdateCommand"/> properties. It assumes
   you have already created an <see cref="System.Data.Odbc.OdbcConnection"/> object.</para>
			<codelink SampleID="Classic WebData OdbcDataAdapter.UpdateCommand" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.DeleteCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.InsertCommand"/>
		<seealso cref="System.Data.Odbc.OdbcDataAdapter.SelectCommand"/>
	</doc>
</docs>
