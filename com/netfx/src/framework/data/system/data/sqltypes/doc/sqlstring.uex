<docs>
	<doc for="SqlString.IsNull">
		<summary>
			<para>Indicates whether the <see cref="System.Data.SqlTypes.SqlString.Value"/> of the <see cref="System.Data.SqlTypes.SqlString"/> is <see cref="System.Data.SqlTypes.SqlString.Null"/>.</para>
		</summary>
		<value>
			<para><see langword="true"/> if <see cref="System.Data.SqlTypes.SqlString.Value"/> is <see cref="System.Data.SqlTypes.SqlString.Null"/>, otherwise 
 <see langword="false"/> .</para>
		</value>
	</doc>
	<doc for="SqlString.CompareFlag">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SqlString.GetBytes">
		<summary>
			<para>Returns an array of bytes representing the contents of the
   <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<returns>
			<para>An array of bytes representing the contents of the <see cref="System.Data.SqlTypes.SqlString"/>.</para>
		</returns>
	</doc>
	<doc for="SqlString.ToString1">
		<summary>
			<para> Converts a <see cref="System.Data.SqlTypes.SqlString"/> object to a <see cref="System.String"/> .
   </para>
		</summary>
		<param name="value">An instance of <see cref="System.Data.SqlTypes.SqlString"/> to convert. </param>
		<returns>
			<para>A new <see cref="System.String"/> object whose contants are the same as 
   those of the <see cref="System.Data.SqlTypes.SqlString"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.EQ">
		<summary>
			<para>The EQ method compares two instances of <see cref="System.Data.SqlTypes.SqlString"/> for equality.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that
   is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
   or <see cref="System.Data.SqlTypes.SqlBoolean.False"/>
   if the two instances are
   not equal. If either instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the Value of the
   SqlBoolean will be Null.</para>
		</returns>
	</doc>
	<doc for="SqlString.CompareTo">
		<summary>
			<para>Compares this instance of <see cref="System.Data.SqlTypes.SqlString"/> 
to the supplied object and returns an indication of their relative values.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para>A signed number indicating the relative values of the instance and the
      object.</para>
			<list type="table">
				<listheader>
					<term>Return Value</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>This instance is less than
            object.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This instance is the same as
            object.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description>
						<para>This instance is greater than object</para>
						<para>-or-</para>
						<para>object is a null reference
               (<see langword="Nothing"/>)</para></description>
				</item>
			</list>
		</returns>
	</doc><doc for="SqlString.Equals">
		<summary>
			<para>Compares the supplied object parameter to the <see cref="System.Data.SqlTypes.SqlString.Value"/> property of the <see cref="System.Data.SqlTypes.SqlString"/> object.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para>Equals will return <see langword="true "/>if the object is an instance of <see cref="System.Data.SqlTypes.SqlString"/> and the two are equal; otherwise <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SqlString.GetHashCode">
		<summary>
			<para>Gets the hash code for this instance.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc><doc for="SqlString.NE">
		<summary>
			<para> The NE method compares two <see cref="System.Data.SqlTypes.SqlString"/> objects 
   for equality.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two 
   instances are equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlString.LE">
		<summary>
			<para>The LE method compares two <see cref="System.Data.SqlTypes.SqlString"/> objects to
   determine if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
   A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either
   instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
</returns>
	</doc><doc for="SqlString.LT">
		<summary>
			<para> The LT method compares the two <see cref="System.Data.SqlTypes.SqlString"/> 
parameters to determine if the first is less than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
   A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either
   instance of<see cref="System.Data.SqlTypes.SqlSingle"/> is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
</returns>
	</doc><doc for="SqlString.GT">
		<summary>
			<para>The GT method compares two <see cref="System.Data.SqlTypes.SqlString"/> 
objects to determine if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlString.GE">
		<summary>
			<para>The GE method compares two <see cref="System.Data.SqlTypes.SqlString"/> 
objects to determine if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlString.Clone">
		<summary>
			<para>Creates a copy of this <see cref="System.Data.SqlTypes.SqlString"/> object.</para>
		</summary>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> object in which all 
   property values are the same as the original.</para>
		</returns>
	</doc><doc for="SqlString.Null">
		<summary>
			<para> Represents a null value that can be assigned to the <see cref="System.Data.SqlTypes.SqlString.Value"/> property of an instance of
   the <see cref="System.Data.SqlTypes.SqlString"/> structure.
   </para>
		</summary>
		<remarks>
			<para><see langword="Null"/> functions as 
   a constant for the <see langword="SqlString"/> structure.
   </para>
		</remarks>
	</doc><doc for="SqlCompareOptions.None">
		<summary>
			<para> Specifies the default option settings for 
   <see langword="SqlString"/> comparisons.</para>
		</summary>
	</doc><doc for="SqlCompareOptions.BinarySort">
		<summary>
			<para>Specifies that sorts should be based on a characters 
      numeric value rather than its alphabetic value.</para>
		</summary>
	</doc><doc for="SqlString.IgnoreCase">
		<summary>
			<para> Specifies that 
   <see langword="SqlString"/> comparisons should ignore case.</para>
		</summary>
		<remarks>
			<para><see cref="System.Data.SqlTypes.SqlString.IgnoreCase"/> functions as a constant for
   the <see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</remarks>
	</doc><doc for="SqlString.IgnoreWidth">
		<summary>
			<para>Specifies that the string comparison must ignore the character width. For 
      example, Japanese katakana characters can be written as full-width or half-width
      and, if this value is selected, the katakana characters written as full-width
      are considered equal to the same characters written in half-width.</para>
		</summary>
		<remarks>
			<para><see cref="System.Data.SqlTypes.SqlString.IgnoreWidth"/> functions as a constant for the
<see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</remarks>
	</doc><doc for="SqlString.IgnoreNonSpace">
		<summary>
			<para>Specifies that the string comparison must ignore nonspace combining 
      characters, such as diacritics. The Unicode Standard defines combining
      characters as characters that are combined with base characters to produce a new
      character. Non-space combining characters do not take up character space by
      themselves when rendered. For more information on non-space combining
      characters, see the Unicode Standard at http://www.unicode.org.</para>
		</summary>
		<remarks>
			<para><see cref="System.Data.SqlTypes.SqlString.IgnoreNonSpace"/> functions as a constant for the
<see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</remarks>
	</doc><doc for="SqlString.IgnoreKanaType">
		<summary>
			<para>Specifies that the string comparison must ignore the Kana type. Kana type 
      refers to Japanese hiragana and katakana characters, which represent phonetic
      sounds in the Japanese language. Hiragana is used for native Japanese
      expressions and words, while katakana is used for words borrowed from other
      languages, such as "computer" or "internet". A phonetic sound can be expressed
      in both hiragana and katakana. If this value is selected, the hiragana character
      for one sound is considered equal to the katakana character for the same
      sound.</para>
		</summary>
		<remarks>
			<para><see cref="System.Data.SqlTypes.SqlString.IgnoreKanaType"/> functions as a constant for the
<see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</remarks>
	</doc><doc for="SqlString.BinarySort">
		<summary>
			<para>Specifies that sorts should be based on a characters numeric value rather 
      than its alphabetic value.</para>
		</summary>
		<remarks>
			<para><see cref="System.Data.SqlTypes.SqlString.BinarySort"/> functions as a constant for the
<see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</remarks>
	</doc><doc for="SqlString.SqlString3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</summary>
		<param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString"/> structure. </param>
		<param name="compareOptions">Specifies the compare options for the new <see langword="SqlString"/> structure.</param>
		<param name="data">The data array to store. </param>
		<param name="index">The starting index within the array. </param>
		<param name="count">The number of characters from index to copy. </param>
		<param name="fUnicode"><see langword="true"/> if Unicode encoded, otherwise <see langword="false"/>. </param>
	</doc><doc for="SqlString.SqlString2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</summary>
		<param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString"/> structure. </param>
		<param name="compareOptions">Specifies the compare options for the new <see langword="SqlString"/> structure.</param>
		<param name="data">The data array to store. </param>
		<param name="fUnicode"><see langword="true"/> if Unicode encoded, otherwise <see langword="false"/>. </param>
	</doc><doc for="SqlString.SqlString">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> class.
   </para>
		</summary>
		<param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString"/> structure. </param>
		<param name="compareOptions">Specifies the compare options for the new <see langword="SqlString"/> structure.</param>
		<param name="data">The data array to store. </param>
		<param name="index">The starting index within the array. </param>
		<param name="count">The number of characters from index to copy. </param>
	</doc><doc for="SqlString.SqlString1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> structure using the specified
   locale id, compare options, and data.
   </para>
		</summary>
		<param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString"/> structure. </param>
		<param name="compareOptions">Specifies the compare options for the new <see langword="SqlString"/> structure.</param>
		<param name="data">The data array to store. </param>
	</doc><doc for="SqlString.SqlString4">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> structure using the specified string, 
   locale id, and compare option values.
   </para>
		</summary>
		<param name="data">The string to store. </param>
		<param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString"/> structure. </param>
		<param name="compareOptions">Specifies the compare options for the new <see langword="SqlString"/> structure.</param>
	</doc><doc for="SqlString.SqlString5">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> structure using the specified string and 
   locale id values.
   </para>
		</summary>
		<param name="data">The string to store. </param>
		<param name="lcid">Specifies the geographical locale and language for the new <see langword="SqlString"/> structure. </param>
	</doc><doc for="SqlString.SqlString6">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlString"/> 
structure using the specified string.
</para>
		</summary>
		<param name="data">The string to store. </param>
	</doc><doc for="SqlString.LCID">
		<summary>
			<para>Specifies the geographical locale and language for the 
   <see langword="SqlString"/> structure.</para>
		</summary>
		<value>
			<para>The locale id for the string stored in the <see cref="System.Data.SqlTypes.SqlString.Value"/> property.</para>
		</value>
	</doc><doc for="SqlString.Value">
		<summary>
			<para> Gets the string that is stored in this
   <see cref="System.Data.SqlTypes.SqlString"/> structure. This property is 
      read-only.</para>
		</summary>
		<value>
			<para> The string that is stored.</para>
		</value>
		<exception cref="System.Data.SqlTypes.SqlNullValueException">The value of the string is <see cref="System.Data.SqlTypes.SqlString.Null"/>.</exception>
	</doc><doc for="SqlCompareOptions.IgnoreCase">
		<summary>
			<para>Specifies that <see cref="System.Data.SqlTypes.SqlString"/> comparisons must ignore case.</para>
		</summary>
	</doc>
	<doc for="SqlCompareOptions.IgnoreNonSpace">
		<summary>
			<para>Specifies that <see cref="System.Data.SqlTypes.SqlString"/> comparisons must ignore
   nonspace combining characters, such as diacritics. The Unicode Standard defines
   combining characters as characters that are combined with base characters to
   produce a new character. Non-space combining characters do not take up character
   space by themselves when rendered. For more information on non-space combining
   characters, see the Unicode Standard at http://www.unicode.org
   
   .</para>
		</summary>
	</doc>
	<doc for="SqlCompareOptions.IgnoreKanaType">
		<summary>
			<para>Specifies that <see cref="System.Data.SqlTypes.SqlString"/> comparisons must ignore the
   Kana type. Kana type refers to Japanese hiragana and katakana characters, which
   represent phonetic sounds in the Japanese language. Hiragana is used for native
   Japanese expressions and words, while katakana is used for words borrowed from
   other languages, such as "computer" or "internet". A phonetic sound can be
   expressed in both hiragana and katakana. If this value is selected, the hiragana
   character for one sound is considered equal to the katakana character for the same sound.</para>
		</summary>
	</doc>
	<doc for="SqlCompareOptions.IgnoreWidth">
		<summary>
			<para>Specifies that <see cref="System.Data.SqlTypes.SqlString"/> comparisons must ignore the
   character width. For example, Japanese katakana characters can be written as
   full-width or half-width and, if this value is selected, the katakana characters
   written as full-width are considered equal to the same characters written in half-width.</para>
		</summary>
	</doc>
	<doc for="SqlString.GetUnicodeBytes">
		<summary>
			<para> Gets an array of bytes, containing the contents of
      the <see cref="System.Data.SqlTypes.SqlString"/> in
      Unicode format.</para>
		</summary>
		<returns>
			<para>An byte array, containing the contents of
      the <see cref="System.Data.SqlTypes.SqlString"/> in Unicode format.</para>
		</returns>
	</doc>
	<doc for="SqlString.GetNonUnicodeBytes">
		<summary>
			<para> Gets an array of bytes, containing the contents of
      the <see cref="System.Data.SqlTypes.SqlString"/>in ANSI format.</para>
		</summary>
		<returns>
			<para>An byte array, containing the contents of the <see cref="System.Data.SqlTypes.SqlString"/>
in ANSI format.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString2">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlByte"/>
structure to <see cref="System.Data.SqlTypes.SqlString"/>.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlByte.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlByte"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> object containing the
   string representation of the <see cref="System.Data.SqlTypes.SqlByte"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString3">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlInt16"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt16.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlInt16"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> object containing the
   string representation of the <see cref="System.Data.SqlTypes.SqlInt16"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString4">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlInt32"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt32.ToSqlString"/>
		<param name="x">The SqlInt32 structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> object containing the
   string representation of the <see cref="System.Data.SqlTypes.SqlInt32"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString5">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlInt64"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt64.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlInt64"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> object containing the
   string representation of the <see cref="System.Data.SqlTypes.SqlInt64"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString6">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlSingle"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlSingle.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlSingle"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> containing the string
   representation of the <see cref="System.Data.SqlTypes.SqlSingle"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString7">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlDouble"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlDouble"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> containing the string
   representation of the <see cref="System.Data.SqlTypes.SqlDouble"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString9">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlMoney"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlMoney"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> containing the string
   representation of the <see cref="System.Data.SqlTypes.SqlMoney"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.operatorSqlString10">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlDateTime"/> parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDateTime.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlDateTime"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> containing the string
   representation of the <see cref="System.Data.SqlTypes.SqlDateTime"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlString.Concat">
		<summary>
			<para>Concatenates the two specified <see cref="System.Data.SqlTypes.SqlString"/> structures.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlString"/> containing the newly concatenated value
   representing the contents of the two <see cref="System.Data.SqlTypes.SqlString"/> parameters.</para>
		</returns>
	</doc>
	<doc for="SqlString.Equals1">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if they are equal.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
   A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
   or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
</returns>
	</doc>
	<doc for="SqlString.LessThan">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is less than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc>
	<doc for="SqlString.GreaterThan">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc>
	<doc for="SqlString.LessThanOrEqual">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
   A<see cref="System.Data.SqlTypes.SqlBoolean"/> that is<see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than or equal to the second instance, otherwise<see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either
   instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the<see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be<see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.
</returns>
	</doc>
	<doc for="SqlString.ToSqlBoolean">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlBoolean"/> .</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see cref="System.Data.SqlTypes.SqlString.Value"/> is non-zero; 
<see langword="false"/> if zero; otherwise Null.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlDouble">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlDouble"/> structure whose <see langword="Value"/> equals 1 if the <see langword="SqlString"/> structure's Value was <see langword="true"/>; otherwise the <see langword="Value"/> of the new <see langword="SqlDouble"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlDecimal">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlDecimal"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlDecimal"/> structure whose 
<see langword="Value"/> equals 1 if the <see langword="SqlString"/> structure's Value was <see langword="true"/>; otherwise the <see langword="Value"/> of the new <see langword="SqlDecimal"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlInt16">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlInt16"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt16"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlString"/> structure's <see langword="Value "/>was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt16"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlInt32">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlInt32"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt32"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlString"/> structure's <see langword="Value "/>was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt32"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlInt64">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlInt64"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt64"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlString"/> structure's <see langword="Value "/>was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt64"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlMoney">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<returns>
			<para><see langword="true"/> if this structure has a value of 1; 
<see langword="false"/> if 0; otherwise <see cref="System.Data.SqlTypes.SqlMoney.Null"/>.</para>
		</returns>
	</doc><doc for="SqlString.CompareInfo">
		<summary>
			<para>Gets the <see cref="System.Globalization.CompareInfo"/> object that defines how string
   comparisons should be performed for this <see cref="System.Data.SqlTypes.SqlString"/> structure.</para>
		</summary>
		<value>
			<para>A <see langword="CompareInfo"/> object that defines
   string comparison for this <see langword="SqlString"/> structure.</para>
		</value>
	</doc><doc for="SqlString.CultureInfo">
		<summary>
			<para>Gets the <see cref="System.Globalization.CultureInfo"/> structure that represents 
   information about the culture of this <see cref="System.Data.SqlTypes.SqlString"/> object.</para>
		</summary>
		<value>
			<para>A <see langword="CultureInfo"/> structure that describes 
   information about the culture of this SqlString structure including the names of
   the culture, the writing system, and the calendar used, as well as access to
   culture-specific objects that provide methods for sommon operations, such as
   formatting dates and sorting strings.</para>
		</value>
	</doc><doc for="SqlString.SqlCompareOptions">
		<summary>
			<para>A combination of one or more of the <see cref="System.Data.SqlTypes.SqlCompareOptions"/> enumeration values that represent the way 
   in which this <see cref="System.Data.SqlTypes.SqlString"/> should be compared to other
<see langword="SqlString"/> structures.</para>
		</summary>
		<value>
			<para>A value specifying how this 
   <see langword="SqlString"/> should be compared to other 
   <see langword="SqlString"/> structures. </para>
		</value>
	</doc><doc for="SqlString.operatorSqlString">
		<summary>
			<para>Converts the <see cref="System.String"/> parameter to a <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<param name="x">The <see cref="System.String"/>to be converted.</param>
		<returns>
			<para>A <see langword="SqlString"/> containing the value of the specified 
<see langword="String"/>.</para>
		</returns>
	</doc><doc for="SqlString.operatorString">
		<summary>
			<para>Converts a <see cref="System.Data.SqlTypes.SqlString"/> to a <see cref="System.String"/>
			</para>
		</summary>
		<param name="x">The <see langword="SqlString"/> to be converted.</param>
		<returns>
			<para>A <see langword="String"/>, whose contents are the same as
   the <see cref="System.Data.SqlTypes.SqlString.Value"/>
   property of the <see langword="SqlString"/> parameter.</para>
		</returns>
	</doc><doc for="SqlString.operatorSqlString1">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlBoolean"/> structure to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBoolean.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlBoolean"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlString"/> containing the string
   representation of the <see cref="System.Data.SqlTypes.SqlBoolean"/> parameter.</para>
		</returns>
	</doc><doc for="SqlString.CompareOptionsFromSqlCompareOptions">
		<summary>
			<para>Gets the <see cref="System.Globalization.CompareOptions"/> enumeration equilvalent of the
   specified <see cref="System.Data.SqlTypes.SqlCompareOptions"/> value.</para>
		</summary>
		<param name="compareOptions">A <see langword="SqlCompareOptions"/> value that describes the comparison options for this <see cref="System.Data.SqlTypes.SqlString"/> structure.</param>
		<returns>
			<para>A <see langword="CompareOptions"/> value that corresponds 
   to the <see langword="SqlCompareOptions"/> for this <see cref="System.Data.SqlTypes.SqlString"/>
   structure.</para>
		</returns>
	</doc><doc for="SqlString.operatorSqlString8">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlDecimal"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDecimal.ToSqlString"/>
		<param name="x">The <see langword="SqlDecimal"/> structure to be converted.</param>
		<returns>
			<para>A new <see langword="SqlString"/> containing the 
   string representation of the <see langword="SqlDecimal"/> parameter.</para>
		</returns>
	</doc><doc for="SqlString.operatorSqlString11">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlGuid"/>
parameter to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlGuid.ToSqlString"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlGuid"/> structure to be converted.</param>
		<returns>
			<para>A <see langword="SqlString"/> whose value is the string representation of 
   the specified <see langword="SqlGuid"/>.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlByte">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlByte"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlByte"/> 
structure whose <see cref="System.Data.SqlTypes.SqlByte.Value"/> equals the number represented by
this <see langword="SqlString"/> structure.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlDateTime">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlDateTime"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlDateTime"/> structure containing 
   the date value represented by this <see langword="SqlString"/> structure. </para>
		</returns>
	</doc><doc for="SqlString.ToSqlGuid">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlGuid"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlGuid"/> structure whose <see cref="System.Data.SqlTypes.SqlGuid.Value"/> is the <see langword="Guid"/> 
represented by this <see langword="SqlString"/> structure.</para>
		</returns>
	</doc><doc for="SqlString.ToSqlSingle">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlString"/> structure to <see cref="System.Data.SqlTypes.SqlSingle"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlSingle"/> structure whose <see cref="System.Data.SqlTypes.SqlSingle.Value"/> is the numeric equivalent of 
   this <see langword="SqlString"/> structure.</para>
		</returns>
	</doc><doc for="SqlString.ToString">
		<overload>
			<para> Converts a <see cref="System.Data.SqlTypes.SqlString"/> object to a <see cref="System.String"/> .
   </para>
		</overload>
		<summary>
			<para> Converts a <see langword="SqlString"/> object to
   a <see langword="String"/> .
   </para>
		</summary>
		<returns>
			<para>A <see langword="String"/> with the same value as this 
<see langword="SqlString"/> structure.</para>
		</returns>
	</doc><doc for="SqlString.GreaterThanOrEqual">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
   A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is
   greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
</returns>
	</doc>
	<doc for="SqlString.NotEquals">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/> operands 
   to determine if they are not equal.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are not
   equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc>
	<doc for="SqlCompareOptions">
		<summary>
			<para>Specifies the compare option values for a <see cref="System.Data.SqlTypes.SqlString"/> structure.</para>
		</summary>
	</doc>
	<doc for="SqlString">
		<summary>
			<para> Represents a variable-length stream of characters to be stored in or retrieved from the database.
      </para>
		</summary>
		<remarks>
			<para>When using <see cref="System.Data.SqlTypes.SqlString"/> comparison operators, note that if
   the LCIDs of arguments are different, comparison functions throw an
   exception because they cannot be compared. For example, the statement</para>
			<code>
SqlString mySqlString = new SqlString(“abc”);
</code>
			<para>is equivalent to</para>
			<code>
SqlString mySqlString = new SqlString(‘abc”, CultureInfo.CurrentCulture.LCID);
</code>
		</remarks>
		<seealso cref="System.Globalization.CultureInfo.CurrentCulture"/>
	</doc>
	<doc for="SqlString.operator==">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if they are equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.Equals"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
   or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlString.operator!=">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/> operands
   to determine if they are not equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.NotEquals"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are not
   equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlString.operatorLT">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is less than the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.LessThan"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlString.operator&gt;">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is greater than the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.GreaterThan"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlString.operatorLE">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is less than or equal to the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.LessThanOrEqual"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A<see cref="System.Data.SqlTypes.SqlBoolean"/> that is<see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than or equal to the second instance, otherwise<see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either
   instance of <see cref="System.Data.SqlTypes.SqlString"/> is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the<see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be<see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlString.operator&gt;=">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlString"/>
operands to determine if the first is greater than or equal to the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.GreaterThanOrEqual"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is
   greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlString"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlString.operator+">
		<summary>
			<para>Concatenates the two specified <see cref="System.Data.SqlTypes.SqlString"/> structures.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.Concat"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlString"/>.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlString"/> containing the newly concatenated value
   representing the contents of the two <see cref="System.Data.SqlTypes.SqlString"/> parameters.</para>
		</returns>
	</doc></docs>
