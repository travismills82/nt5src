<docs>
	<doc for="SqlBinary.SqlBinary1">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlBinary"/>
       class with a binary object to store and boolean indicating
       whether or not to create a new binary array.
    </para>
		</summary>
		<param name="value">
    The binary object to be stored or retrieved.
 </param>
		<param name="fNewCopy">
			<see langword="true"/> if creating a new binary array, otherwise <see langword="false"/>.
 </param>
	</doc>
	<doc for="SqlBinary.ToString1">
		<summary>
			<para>
       Converts the <see cref="System.Data.SqlTypes.SqlBinary"/> parameter to a string.
    </para>
		</summary>
		<param name="value">
    A <see cref="System.Data.SqlTypes.SqlBinary"/>.
 </param>
		<returns>
			<para>
       A string containing the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> of the
    <see cref="System.Data.SqlTypes.SqlBinary"/> . If the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> is null the 
       string will contain
       "null".
    </para>
		</returns>
	</doc>
	<doc for="SqlBinary">
		<summary>
			<para> Represents a variable-length
      stream of binary data to be stored in or retrieved from a
      database.
      </para>
		</summary>
	</doc>
	<doc for="SqlBinary.LT">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> objects to determine if the first is less 
   than the second.
   </para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> object.</param>
		<param name="y">A <see langword="SqlBinary"/> object.</param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first
instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance
of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.SqlTypes.SqlBinary.NE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.EQ"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GE"/>
	</doc><doc for="SqlBinary.GT">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> objects to determine if the first is 
   greater than the second.
   </para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlBinary"/>. </param>
		<param name="y">A <see cref="System.Data.SqlTypes.SqlBinary"/>. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the
<see cref="System.Data.SqlTypes.SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.SqlTypes.SqlBinary.NE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.EQ"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GE"/>
	</doc><doc for="SqlBinary.LE">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> objects to determine if the first is less than or equal to the second.
   </para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/>. </param>
		<param name="y">A <see langword="SqlBinary"/>. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first instance is less than
or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If
either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.SqlTypes.SqlBinary.NE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.EQ"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GE"/>
	</doc><doc for="SqlBinary.EQ">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> objects to determine if they are
   equal.
   </para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/>
that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
equal. If either instance of <see langword="SqlBinary"/>
is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see langword="Null"/> .</para>
		</returns>
		<seealso cref="System.Data.SqlTypes.SqlBinary.NE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GE"/>
	</doc><doc for="SqlBinary.NE">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> objects to determine if they 
   are equal.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
   </para>
		</returns>
		<seealso cref="System.Data.SqlTypes.SqlBinary.EQ"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GE"/>
	</doc><doc for="SqlBinary.GE">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> objects to determine if the first is 
   greater than or equal to the second.
   </para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first instance is greaater than
or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If
either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
		<seealso cref="System.Data.SqlTypes.SqlBinary.NE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.LE"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.GT"/>
		<seealso cref="System.Data.SqlTypes.SqlBinary.EQ"/>
	</doc><doc for="SqlBinary.operatorbyte">
		<summary>
			<para> Gets the contents of the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> property of the <see cref="System.Data.SqlTypes.SqlBinary"/> 
parameter as an array of bytes.
</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlBinary"/>. </param>
		<returns>
			<para> An array of bytes.
      </para>
		</returns>
		<remarks>
			<para lang="VB">In Visual
      Basic, you can use the conversions defined by the class, but you cannot override
      them or create your own. If Option Strict is set, you must use the &lt;CType
      operator&gt; to convert the <see cref="System.Data.SqlTypes.SqlBinary"/>
      to a binary object.
      </para>
		</remarks>
	</doc><doc for="SqlBinary.SqlBinary">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlBinary"/> structure.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of 
      the <see langword="SqlBinary"/> structure, setting the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> property to the contents of the supplied byte array.
      </para>
		</summary>
		<param name="value">The byte array to be stored or retrieved. </param>
	</doc><doc for="SqlBinary.GetHashCode">
		<summary>
			<para>Returns the hash code for this <see cref="System.Data.SqlTypes.SqlBinary"/> structure.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc><doc for="SqlBinary.operatorSqlBinary">
		<summary>
			<para> Converts an array of bytes to a <see cref="System.Data.SqlTypes.SqlBinary"/> structure.
   </para>
		</summary>
		<param name="x">The array of bytes to be converted. </param>
		<returns>
			<para> A <see langword="SqlBinary"/> 
structure that represents the converted array of bytes.
</para>
		</returns>
	</doc><doc for="SqlBinary.IsNull">
		<summary>
			<para>Gets a value indicating whether whether the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> property of the <see cref="System.Data.SqlTypes.SqlBinary"/> structure is 
   null. This property is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/>
if <see langword="Value"/> is null, otherwise
<see langword="false"/> .</para>
		</value>
	</doc><doc for="SqlBinary.ToString">
		<overload>
			<para> Converts a <see cref="System.Data.SqlTypes.SqlBinary"/> to a string.
   </para>
		</overload>
		<summary>
			<para> Converts this <see cref="System.Data.SqlTypes.SqlBinary"/> object to a string.
   </para>
		</summary>
		<returns>
			<para> A string containing the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> of the 
<see langword="SqlBinary"/> . If the <see langword="Value"/> is null the
   string will contain
   "null".
   </para>
		</returns>
	</doc><doc for="SqlBinary.Value">
		<summary>
			<para> Gets the value of the <see cref="System.Data.SqlTypes.SqlBinary"/> structure. This property is read-only.</para>
		</summary>
		<value>
			<para>The value of the <see langword="SqlBinary"/> structure.</para>
		</value>
		<exception cref="System.Data.SqlTypes.SqlNullValueException">The <see langword="Value"/> property is read when the property contains <see cref="System.Data.SqlTypes.SqlBinary.Null"/> .</exception>
		<remarks>
			<para> To avoid raising a SqlNullValueException, always check the <see cref="System.Data.SqlTypes.SqlBinary.IsNull"/> property before reading the 
<see langword="Value"/> property.</para>
		</remarks>
	</doc>
	<doc for="SqlBinary.Length">
		<summary>
			<para>Gets the length in bytes of the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> property. This property is 
   read-only.</para>
		</summary>
		<value>
			<para>The length of the binary data in
      the <see langword="Value"/> property.</para>
		</value>
		<exception cref="System.Data.SqlTypes.SqlNullValueException">The <see langword="Length"/> property is read when the <see langword="Value"/> property contains <see cref="System.Data.SqlTypes.SqlBinary.Null"/> .</exception>
		<remarks>
			<para>To avoid raising a SqlNullValueException, always check the <see cref="System.Data.SqlTypes.SqlBinary.IsNull"/> property before reading the 
<see langword="Length"/> property.</para>
		</remarks>
	</doc>
	<doc for="SqlBinary.Concat">
		<summary>
			<para> Concatenates two <see cref="System.Data.SqlTypes.SqlBinary"/>
structures to create a new <see langword="SqlBinary"/> structure.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>The concatenated values of the <paramref name="x"/> and <paramref name="y"/> parameters.</para>
		</returns>
	</doc>
	<doc for="SqlBinary.Equals1">
		<overload>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if they are equal. </para>
		</overload>
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine 
   if they are equal.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two 
   instances are equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlBinary.LessThan">
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine 
   if the first is less than the second.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance of
<see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the 
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlBinary.GreaterThan">
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine 
   if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
   A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is
   greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either
   instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
</returns>
	</doc>
	<doc for="SqlBinary.LessThanOrEqual">
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/>
structures to determine if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is less than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of
<see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the 
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlBinary.CompareTo">
		<summary>
			<para>Compares this <see cref="System.Data.SqlTypes.SqlBinary"/> object to the supplied object and
   returns an indication of their relative values.</para>
		</summary>
		<param name="value">The object to be compared to this <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>A signed number indicating the relative values of
      this <see langword="SqlBinary"/>
      structure and the object.</para>
			<list type="table">
				<listheader>
					<term>Return Value</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>The value of this <see langword="SqlBinary"/>object is less than the
         object.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This <see langword="SqlBinary"/> object is the same as object.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description>
						<para>This <see langword="SqlBinary"/> object is greater than object.</para>
						<para>-or-</para>
						<para>The object is a null
      reference.</para></description>
				</item>
			</list>
		</returns>
	</doc>
	<doc for="SqlBinary.Equals">
		<summary>
			<para>Compares the supplied object parameter to
      the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> property of the <see cref="System.Data.SqlTypes.SqlBinary"/> object.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para><see langword="true "/>if object is
   an instance of <see cref="System.Data.SqlTypes.SqlBinary"/> and the two are
   equal; otherwise <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="SqlBinary.Null">
		<summary>
			<para> Represents a null value that can be assigned to
      the <see cref="System.Data.SqlTypes.SqlBinary.Value"/>
      property of a <see cref="System.Data.SqlTypes.SqlBinary"/> structure.
      </para>
		</summary>
		<remarks>
			<para><see langword="Null "/>functions as a constant for 
   the <see langword="SqlBinary"/> structure.
   </para>
		</remarks>
		<seealso cref="System.Data.SqlTypes.SqlBinary.IsNull"/>
	</doc>
	<doc for="SqlBinary.operator+">
		<summary>
			<para> Concatenates the two <see cref="System.Data.SqlTypes.SqlBinary"/> parameters to create a 
   new <see langword="SqlBinary"/> structure.
   </para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.Concat"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para>The concatenated values of the <paramref name="x"/> and <paramref name="y"/> parameters.</para>
		</returns>
		<remarks>
			<para><paramref name="x"/> will appear first in the
   resulting <see langword="SqlBinary"/> ,
   followed by <paramref name="y"/>.
   </para>
			<para lang="VB">In Visual Basic, you can use the
   operators defined by a class, but you cannot override them or create your
   own.
   </para>
		</remarks>
	</doc>
	<doc for="SqlBinary.operatorSqlBinary1">
		<summary>
			<para> Converts a <see cref="System.Data.SqlTypes.SqlGuid"/> structure to a <see cref="System.Data.SqlTypes.SqlBinary"/> structure.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.ToSqlGuid"/>
		<param name="x">The <see langword="SqlGuid"/> structure to be converted. </param>
		<returns>
			<para> A <see langword="SqlBinary"/> structure.
   </para>
		</returns>
		<remarks>
			<para lang="VB">In Visual Basic, you can use the
      conversions defined by the class, but you cannot override them or create your
      own. If Option Strict is set, you must use the &lt;CType operator&gt; to convert
      the <see cref="System.Data.SqlTypes.SqlGuid"/> to a <see cref="System.Data.SqlTypes.SqlBinary"/>.
      </para>
		</remarks>
	</doc>
	<doc for="SqlBinary.ToSqlGuid">
		<summary>
			<para>Converts this instance of <see cref="System.Data.SqlTypes.SqlBinary"/>
to <see cref="System.Data.SqlTypes.SqlGuid"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlGuid"/> structure.</para>
		</returns>
	</doc><doc for="SqlBinary.GreaterThanOrEqual">
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/>
structues to determine if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is
   greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of
<see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the 
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlBinary.NotEquals">
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if they are not
   equal.</para>
		</summary>
		<param name="x">A <see langword="SqlBinary"/> structure.</param>
		<param name=" y">A <see langword="SqlBinary"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the
<see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlBinary.this">
		<summary>
			<para>Gets the single byte from the
   <see langword="Value"/> property located at the position indicated by the integer
      parameter, <paramref name="index"/>. If <paramref name="index"/> indicates a position beyond the end of the byte
      array, a <see cref="System.Data.SqlTypes.SqlNullValueException"/> will
      be raised. This property is read-only.</para>
		</summary>
		<param name="index">The position of the byte to be retrieved.</param>
		<value>
			<para>The byte located at the position indicated by the
      integer parameter.</para>
		</value>
		<exception cref="System.Data.SqlTypes.SqlNullValueException"><para> The property is read when the <see cref="System.Data.SqlTypes.SqlBinary.Value"/> property contains <see cref="System.Data.SqlTypes.SqlBinary.Null"/></para>
			<para>- or -</para>
			<para>The <paramref name="index"/> parameter indicates a position byond the length of the byte array as indicated by the <see cref="System.Data.SqlTypes.SqlBinary.Length"/> property.</para></exception>
		<remarks>
			<para> To avoid raising a SqlNullValueException, always check the <see cref="System.Data.SqlTypes.SqlBinary.IsNull"/> property and the
<see langword="Length"/> property before 
   reading this property.</para>
		</remarks>
	</doc>
	<doc for="SqlBinary.operator==">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if they are
   equal.
   </para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.Equals"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/>
that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
equal. If either instance of <see langword="SqlBinary"/>
is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlBinary.operator!=">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if they are
   not equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.NotEquals"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .
   </para>
		</returns>
	</doc><doc for="SqlBinary.operatorLT">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if the first is less
   than the second.
   </para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.LessThan"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first
instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance
of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlBinary.operator&gt;">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if the first
   is greater than the second.
   </para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.GreaterThan"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance
of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlBinary.operatorLE">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structures to determine if the first is less
   than or equal to the second.
   </para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.LessThanOrEqual"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first instance is less than
or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If
either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlBinary.operator&gt;=">
		<summary>
			<para> Compares two <see cref="System.Data.SqlTypes.SqlBinary"/> structues to determine if the first
   is greater than or equal to the second.
   </para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual"/>
		<param name="x">A <see langword="SqlBinary"/> object. </param>
		<param name="y">A <see langword="SqlBinary"/> object. </param>
		<returns>
			<para> A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/>
if the first instance is greater than
or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If
either instance of <see langword="SqlBinary"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
the <see langword="SqlBoolean"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc></docs>
