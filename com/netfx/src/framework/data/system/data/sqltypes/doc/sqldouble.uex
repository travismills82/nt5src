<docs>
	<doc for="SqlDouble">
		<summary>
			<para>
       Represents a floating-point number within the range of
       -1.79E
       +308 through 1.79E +308 to be stored in or retrieved from
       a database.
    </para>
		</summary>
	</doc>
	<doc for="SqlDouble.EQ">
		<summary>
   Compares two instances of SqlDouble for equality.
</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two 
   instances are equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlDouble.NE">
		<summary>
   Compares two instances of SqlDouble for equality.
</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two 
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlDouble.MinValue">
		<summary>
			<para>A constant representing the minimum possible value of 
   <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<remarks>
			<para>This value is -1.79E+308</para>
		</remarks>
	</doc><doc for="SqlDouble.MaxValue">
		<summary>
			<para>A constant representing the maximum value for 
      a <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</para>
		</summary>
		<remarks>
			<para>This value is 1.79E+308</para>
		</remarks>
	</doc><doc for="SqlDouble.IsNull">
		<summary>
			<para>Indicates whether or not <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is null.</para>
		</summary>
		<value>
			<para><see langword="true"/> if <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is null, 
   otherwise <see langword="false"/> .</para>
		</value>
	</doc><doc for="SqlDouble.ToString1">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlDouble"/> 
structure to a string.</para>
		</summary>
		<param name="value">A SqlDouble structure to convert to a string.</param>
		<returns>
			<para>A string representing the <see cref="System.Data.SqlTypes.SqlDouble.Value"/> of this <see cref="System.Data.SqlTypes.SqlDouble"/> 
.</para>
		</returns>
	</doc><doc for="SqlDouble.FromString">
		<summary>
			<para>Converts the supplied <see cref="System.String"/> to a <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<param name="s">The <see cref="System.String"/> to be converted.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlDouble"/> whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is the number 
   represented by the <see cref="System.String"/> parameter.</para>
		</returns>
	</doc><doc for="SqlDouble.operator%">
		<summary>
			<para>The modulus operator computes the remainder after 
      dividing the first <see cref="System.Data.SqlTypes.SqlDouble"/> operator by the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>The remainder of the division operation.</para>
		</returns>
	</doc><doc for="SqlDouble.LT">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/> 
to determine if the first is less than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance of<see cref="System.Data.SqlTypes.SqlDouble"/>
   is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.LE">
		<summary>
			<para>Compares two instances of SqlDouble to determine if the 
      first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is less than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.GE">
		<summary>
			<para>Compares two <see cref="System.Data.SqlTypes.SqlDouble"/> structures to determine 
   if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is greaater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.GT">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/> 
to determine if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first 
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/> is
   null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>. </para>
		</returns>
	</doc><doc for="SqlDouble.CompareTo">
		<summary>
			<para>Compares this instance to the supplied object and returns an indication of
      their relative values.</para>
		</summary>
		<param name="value">The object to compare.</param>
		<returns>
			<para>A signed number indicating the relative values of the instance and the 
      object.</para>
			<list type="table">
				<listheader>
					<term>Return Value</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term>Less than zero</term>
					<description>This instance is less than 
            object.</description>
				</item>
				<item>
					<term>Zero</term>
					<description>This instance is the same as 
            object.</description>
				</item>
				<item>
					<term>Greater than zero</term>
					<description>
						<para>This instance is greater than object</para>
						<para>-or-</para>
						<para>object is a null reference 
               (<see langword="Nothing"/>)</para></description>
				</item>
			</list>
		</returns>
	</doc><doc for="SqlDouble.Equals">
		<summary>
			<para>Compares the supplied object parameter to the <see cref="System.Data.SqlTypes.SqlDateTime.Value"/> property of 
   the <see cref="System.Data.SqlTypes.SqlDouble"/> object.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para><see langword="true "/>if object is an instance of <see cref="System.Data.SqlTypes.SqlByte"/> 
and the two are equal; otherwise <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SqlDouble.Value">
		<summary>
			<para> Gets the value of the <see cref="System.Data.SqlTypes.SqlDouble"/> structure. This property is read-only.</para>
		</summary>
		<value>
			<para>The value of the <see langword="SqlDouble"/> structure.</para>
		</value>
	</doc><doc for="SqlDouble.ToString">
		<overload>
			<para>Converts a <see cref="System.Data.SqlTypes.SqlDouble"/> structure to a string.</para>
		</overload>
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to a string.</para>
		</summary>
		<returns>
			<para>A string representing the <see cref="System.Data.SqlTypes.SqlDouble.Value"/> of 
   this <see langword="SqlDouble"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.Parse">
		<summary>
			<para>Converts the <see cref="System.String"/> representation of a number to 
   its double-precision floating point number equivalent.</para>
		</summary>
		<param name="s">The <see langword="String"/> to be parsed.</param>
		<returns>
			<para>A <see langword="SqlDouble"/> containing the value 
   represented by the <see langword="String"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.Equals1">
		<summary>
			<para>Performs a logical comparison on two instances
      of <see cref="System.Data.SqlTypes.SqlDouble"/> to determine if they are equal.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name="y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para><see langword="true "/>if the two values are equal, otherwise
<see langword="false"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.LessThan">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is less than the second.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance
   of <see langword="SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.GreaterThan">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance
   of <see langword="SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlBoolean">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlBoolean"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlBoolean"/> structure 
   whose <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> will be <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if
   the <see langword="SqlDouble"/> structure's <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is non-zero, <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the
<see langword="SqlDouble"/> is zero and <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> if 
   the <see langword="SqlDouble"/> structure is <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.GetHashCode">
		<summary>
			<para>Returns the hash code for this <see cref="System.Data.SqlTypes.SqlDouble"/> structre.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc><doc for="SqlDouble.Null">
		<summary>
			<para>Represents a null value that can be assigned to the <see cref="System.Data.SqlTypes.SqlDouble.Value"/> property of an instance of the
<see cref="System.Data.SqlTypes.SqlDouble"/> structure.</para>
		</summary>
		<remarks>
			<para><see langword="Null "/>functions as a constant for 
   the <see langword="SqlDouble"/> structure.</para>
		</remarks>
	</doc><doc for="SqlDouble.Zero">
		<summary>
			<para>Represents a zero value that can be assigned to the
   <see cref="System.Data.SqlTypes.SqlDouble.Value"/> property of an instance of the
   <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</para>
		</summary>
		<remarks>
			<para>The <see langword="Zero"/> field is a constant for 
   the <see langword="SqlDouble"/> structure.</para>
		</remarks>
	</doc><doc for="SqlDouble.LessThanOrEqual">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A<see cref="System.Data.SqlTypes.SqlBoolean"/> that is<see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than or equal to the second instance, otherwise<see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If
   either instance of <see langword="SqlDouble"/>
   is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be<see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operator/">
		<summary>
			<para>The division operator divides the first <see cref="System.Data.SqlTypes.SqlDouble"/>
operand by the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Divide"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see langword="SqlDouble"/> structure containing the results of the division operation.</para>
		</returns>
	</doc><doc for="SqlDouble.operator*">
		<summary>
			<para>The multiplication operator computes the product of the
      two <see cref="System.Data.SqlTypes.SqlDouble"/> operands.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Multiply"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>The product of the two <see langword="SqlDouble"/> operands.</para>
		</returns>
	</doc><doc for="SqlDouble.Divide">
		<summary>
			<para>The division operator divides the first <see cref="System.Data.SqlTypes.SqlDouble"/>
operand by the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Divide"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see langword="SqlDouble"/> structure containing the results of the division operation.</para>
		</returns>
	</doc><doc for="SqlDouble.Multiply">
		<summary>
			<para>The multiplication operator computes the product of the
      two <see cref="System.Data.SqlTypes.SqlDouble"/> operands.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Multiply"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>The product of the two <see langword="SqlDouble"/> operands.</para>
		</returns>
	</doc><doc for="SqlDouble.operator-1">
		<summary>
			<para>The subtraction operator the second <see cref="System.Data.SqlTypes.SqlDouble"/>
operand from the first.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Subtract"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>The results of the subtraction operation.</para>
		</returns>
	</doc><doc for="SqlDouble.Subtract">
		<summary>
			<para>The subtraction operator the second <see cref="System.Data.SqlTypes.SqlDouble"/>
operand from the first.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>The results of the subtraction operation.</para>
		</returns>
	</doc><doc for="SqlDouble.operator+">
		<summary>
			<para>The addition operator computes the sum of the two <see cref="System.Data.SqlTypes.SqlDouble"/> operands.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Add"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>The sum of the two <see langword="SqlDouble"/> operands.</para>
		</returns>
	</doc><doc for="SqlDouble.Add">
		<summary>
			<para>The addition operator computes the sum of the two <see cref="System.Data.SqlTypes.SqlDouble"/> operands.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>The sum of the two <see langword="SqlDouble"/> operands.</para>
		</returns>
	</doc><doc for="SqlDouble.SqlDouble">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlDouble"/> structure using the supplied double
   parameter to set the new SqlDouble structure's <see cref="System.Data.SqlTypes.SqlDouble.Value"/> property.</para>
		</summary>
		<param name="value">A double whose value will be used for the new <see langword="SqlDouble"/>.</param>
	</doc><doc for="SqlDouble.operatorSqlDouble2">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlByte"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlByte.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlDouble"/> structure whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the <see cref="System.Data.SqlTypes.SqlByte.Value"/> of the <see cref="System.Data.SqlTypes.SqlByte"/> parameter. If 
   the <see langword="SqlByte"/> is <see cref="System.Data.SqlTypes.SqlByte.Null"/>, then the
<see langword="SqlDouble"/> 
structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/>
.</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble4">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlInt32"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt32.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlInt32"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to
   the <see cref="System.Data.SqlTypes.SqlInt32.Value"/> of the <see cref="System.Data.SqlTypes.SqlInt32"/> parameter. If
   the <see langword="SqlInt32"/> is <see cref="System.Data.SqlTypes.SqlInt32.Null"/>, then the
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble5">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlInt64"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt64.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlInt64"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the <see cref="System.Data.SqlTypes.SqlInt64.Value"/> of the <see cref="System.Data.SqlTypes.SqlInt64"/> parameter. If 
   the <see langword="SqlInt64"/> is <see cref="System.Data.SqlTypes.SqlInt64.Null"/>, then the
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble6">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlSingle"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlSingle.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlSingle"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> structure
   whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the <see cref="System.Data.SqlTypes.SqlSingle.Value"/> of the <see cref="System.Data.SqlTypes.SqlSingle"/> parameter. If the
<see langword="SqlSingle"/> is <see cref="System.Data.SqlTypes.SqlSingle.Null"/>, then the 
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble7">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlMoney"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> of the <see cref="System.Data.SqlTypes.SqlMoney"/> parameter. If the 
<see langword="SqlMoney"/> is <see cref="System.Data.SqlTypes.SqlMoney.Null"/>, then the 
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble8">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlDecimal"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDecimal.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDecimal"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> structure
   whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the <see cref="System.Data.SqlTypes.SqlDecimal.Value"/> of the <see cref="System.Data.SqlTypes.SqlDecimal"/> parameter. If the
<see langword="SqlDecimal"/> is <see cref="System.Data.SqlTypes.SqlDecimal.Null"/>, then the 
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble9">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlString"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.ToSqlDouble"/>
		<param name="x">A <see langword="SqlString"/> object.</param>
		<returns>
			<para>A new <see langword="SqlDouble"/> whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the value of the 
   number represented by the <see langword="SqlString"/>. If the <see langword="SqlString"/> is
<see cref="System.Data.SqlTypes.SqlString.Null"/>, then the 
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlByte">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlByte"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlByte"/> structure whose <see langword="Value"/> equals the <see langword="Value"/> of this <see langword="SqlDouble"/> structure. If the 
<see langword="SqlDouble"/> structure's Value is <see langword="true"/>, then the <see langword="SqlByte"/> structure's <see langword="Value"/> will be 1, otherwise the <see langword="SqlByte"/> structure's <see langword="Value"/> will be 0.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlString">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlString"/> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlDouble"/> structure.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlDecimal">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlDecimal"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlDecimal"/> structure whose <see langword="Value"/> equals 1 if the <see langword="SqlDouble"/> structure's Value was <see langword="true"/>; otherwise the <see langword="Value"/> of the new <see langword="SqlDecimal"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlInt16">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlInt16"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt16"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlDouble"/> structure's <see langword="Value"/> was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt16"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlInt32">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlInt32"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt32"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlDouble"/> structure's <see langword="Value"/> was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt32"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlInt64">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlInt64"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt64"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlDouble"/> structure's <see langword="Value"/> was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt64"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlDouble.operatordouble">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlDouble"/>
structure to double.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A double equivalent to the specified <see langword="SqlDouble"/> structure's 
   value.</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble">
		<summary>
			<para>Converts the supplied double value to a <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<param name="x">The double value to convert.</param>
		<returns>
			<para>A <see langword="SqlDouble"/> with the same value as the specified double 
   parameter.</para>
		</returns>
	</doc><doc for="SqlDouble.operator-">
		<summary>
			<para>Returns the negated value of the specified <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see langword="SqlDouble"/> structure containing the negated value.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlMoney">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<returns>
			<para><see langword="true"/> if this structure has a value of 1; 
<see langword="false"/> if 0; otherwise <see cref="System.Data.SqlTypes.SqlMoney.Null"/>.</para>
		</returns>
	</doc><doc for="SqlDouble.ToSqlSingle">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlDouble"/> structure to <see cref="System.Data.SqlTypes.SqlSingle"/> .</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see langword="SqlDouble"/>
structure's <see langword="Value"/> is 1; otherwise <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble1">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlBoolean"/> parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBoolean.ToSqlDouble"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlBoolean"/> to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> structure
   whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is either 0 or 1, depending on
   the <see cref="System.Data.SqlTypes.SqlBoolean.ByteValue"/> property of the <see cref="System.Data.SqlTypes.SqlBoolean"/> parameter. If the
<see langword="SqlBoolean"/> 
is <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>, then the
<see langword="SqlDouble"/> structure
will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorSqlDouble3">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlInt16"/>
parameter to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt16.ToSqlDouble"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlInt16"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlDouble"/> structure
   whose <see cref="System.Data.SqlTypes.SqlDouble.Value"/> is equal to the <see cref="System.Data.SqlTypes.SqlInt16.Value"/> of the <see cref="System.Data.SqlTypes.SqlInt16"/> parameter. If
   the <see langword="SqlInt16"/> is <see cref="System.Data.SqlTypes.SqlInt16.Null"/>, then the
<see langword="SqlDouble"/> structure will be <see cref="System.Data.SqlTypes.SqlDouble.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.GreaterThanOrEqual">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlDouble.NotEquals">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/> to determine if they are notequal.</para>
		</summary>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="SqlDouble"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlDouble.operator==">
		<summary>
			<para>Performs a logical comparison on two instances
      of <see cref="System.Data.SqlTypes.SqlDouble"/> to determine if they are equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.Equals"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name="y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para><see langword="true "/>if the two values are equal, otherwise
<see langword="false"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operator!=">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/> to
   determine if they are not equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.NotEquals"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see langword="SqlDouble"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operatorLT">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is less than the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.LessThan"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance
   of <see langword="SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operator&gt;">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is greater than the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.GreaterThan"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance
   of <see langword="SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlDouble.operatorLE">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is less than or equal to the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.LessThanOrEqual"/>
		<param name="x">A <see langword="SqlDouble"/> structure.</param>
		<param name=" y">A <see langword="SqlDouble"/> structure.</param>
		<returns>
			<para>A<see cref="System.Data.SqlTypes.SqlBoolean"/> that is<see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than or equal to the second instance, otherwise<see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If
   either instance of <see langword="SqlDouble"/>
   is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of
   the <see langword="SqlBoolean"/>
   will be<see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlDouble.operator&gt;=">
		<summary>
			<para>Compares two instances of <see cref="System.Data.SqlTypes.SqlDouble"/>
to determine if the first is greater than or equal to the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.GreaterThanOrEqual"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlDouble"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlDouble"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc></docs>
