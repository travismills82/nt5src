<docs>
	<doc for="SqlMoney">
		<summary>
			<para>
       Represents a currency value ranging from
       -2<superscript term="63"/> (or -922,337,203,685,477.5808) to 2<superscript term="63"/> -1 (or
       +922,337,203,685,477.5807) with an accuracy to
       a ten-thousandth of currency unit to be stored in or retrieved from a
       database.
    </para>
		</summary>
		<remarks>
			<para>
       The actual value of the <see cref="System.Data.SqlTypes.SqlMoney"/>
       object is stored in <see cref="System.Data.SqlTypes.SqlMoney.Value"/>.
    </para>
		</remarks>
	</doc>
	<doc for="SqlMoney.Null">
		<summary>
			<para>
       Represents a null value that can be assigned to
       the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of an instance of
       the <see cref="System.Data.SqlTypes.SqlMoney"/>class.
    </para>
		</summary>
		<remarks>
			<para>
				<see cref="System.Data.SqlTypes.SqlMoney.Null"/> functions as a constant for 
       the <see cref="System.Data.SqlTypes.SqlMoney"/> class.
    </para>
		</remarks>
	</doc>
	<doc for="SqlMoney.Zero">
		<summary>
			<para>
       Represents the zero value that can be assigned to the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of an instance of
       the <see cref="System.Data.SqlTypes.SqlMoney"/> class.
    </para>
		</summary>
		<remarks>
			<para>
				<see cref="System.Data.SqlTypes.SqlMoney.Zero"/> functions as a constant for 
       the <see cref="System.Data.SqlTypes.SqlMoney"/> class.
    </para>
		</remarks>
	</doc>
	<doc for="SqlMoney.ToDecimal">
		<summary>
			<para> Converts the Value of this instance of <see cref="System.Data.SqlTypes.SqlMoney"/> as 
   a <see cref="System.Decimal"/> structure.</para>
		</summary>
		<returns>
			<para>A <see cref="System.Decimal"/> structure whose value equals the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of this <see cref="System.Data.SqlTypes.SqlMoney"/> 
structure.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.ToInt32">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to integer.</para>
		</summary>
		<returns>
			<para>A 32-bit integer whose value equals the integer portion of this <see cref="System.Data.SqlTypes.SqlMoney"/> 
structure.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.ToDouble">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to a double.</para>
		</summary>
		<returns>
			<para>A double with a value equal to this <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.ToString1">
		<summary>
			<para>Converts the supplied <see cref="System.Data.SqlTypes.SqlMoney"/> 
parameter to <see cref="System.String"/> .</para>
		</summary>
		<param name="value">The <see cref="System.Data.SqlTypes.SqlMoney"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.String"/> whose value is the string 
   representation of the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of the <see cref="System.Data.SqlTypes.SqlMoney"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.FromString">
		<summary>
			<para>Converts the supplied <see cref="System.String"/> parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<param name="s">SqlMoney</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure 
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property contains the value
   represented by the <see cref="System.String"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operator-">
		<summary>
			<para>The unary minus operator negates the <see cref="System.Data.SqlTypes.SqlMoney"/> 
parameter.</para>
		</summary>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlMoney"/> structure to be negated.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlMoney"/> structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the results of the negation.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.CompareTo">
		<summary>
			<para>Compares this instance to the supplied object and returns 
      an indication of their relative values.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para>A signed number indicating the relative values of the instance and the
      object.</para>
			<list type="table">
				<listheader>
					<term>Return Value</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>This instance is less than
            object.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This instance is the same as
            object.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description>
						<para>This instance is greater than object</para>
						<para>-or-</para>
						<para>object is a null reference
               (<see langword="Nothing"/>)</para></description>
				</item>
			</list>
		</returns>
	</doc>
	<doc for="SqlMoney.GetHashCode">
		<summary>
			<para>Gets the hash code for this instance.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.MinValue">
		<summary>
			<para> Represents the minimum value that can be assigned
      to <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of an instance of
      the <see cref="System.Data.SqlTypes.SqlMoney"/>
      class.
      </para>
		</summary>
		<remarks>
			<para> The value of this constant is 
      -922,337,203,685,477.5808
      </para>
		</remarks>
	</doc>
	<doc for="SqlMoney.MaxValue">
		<summary>
			<para> Represents the maximum value that can be assigned to
      the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of an instance of
      the <see cref="System.Data.SqlTypes.SqlMoney"/>
      class.
      </para>
		</summary>
		<remarks>
			<para>The value of this constant is 922,337,203,685,475.5807</para>
		</remarks>
	</doc>
	<doc for="SqlMoney.Equals">
		<summary>
			<para>Compares the supplied object parameter to the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of the <see cref="System.Data.SqlTypes.SqlMoney"/> object.</para>
		</summary>
		<param name="value">The object to be compared.</param>
		<returns>
			<para>Equals will return <see langword="true "/>if the object is an instance of <see cref="System.Data.SqlTypes.SqlMoney"/> and the two
   are equal; otherwise <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.EQ">
		<summary>
			<para>The EQ method compares two <see cref="System.Data.SqlTypes.SqlMoney"/> structures for equality.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> . </para>
		</returns>
	</doc><doc for="SqlMoney.NE">
		<summary>
			<para>The NE method compares two <see cref="System.Data.SqlTypes.SqlMoney"/> structures for equality.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
   or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlMoney.LT">
		<summary>
			<para>The LT method compares two <see cref="System.Data.SqlTypes.SqlMoney"/> structures to determine if the
   first is less than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either instance of<see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlMoney.LE">
		<summary>
			<para>The LE method compares two <see cref="System.Data.SqlTypes.SqlMoney"/> structures to determine
   if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either
   instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlMoney.GT">
		<summary>
			<para>The GT method compares two <see cref="System.Data.SqlTypes.SqlMoney"/> structures to determine
   if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.GE">
		<summary>
			<para>The GE method compares two <see cref="System.Data.SqlTypes.SqlMoney"/> structures to determine
   if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greaater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlMoney.Value">
		<summary>
			<para> Gets the monetary value of an instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> structure. 
   This property is read-only.</para>
		</summary>
		<value>
			<para>The monetary value of an instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</para>
		</value>
		<exception cref="System.Data.SqlTypes.SqlNullValueException">The property is set to null.</exception>
	</doc><doc for="SqlMoney.SqlMoney">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> class with the specified integer value.
   </para>
		</summary>
		<param name="value">The monetary value to initialize. </param>
	</doc><doc for="SqlMoney.SqlMoney1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> class with the specified long integer value.
   </para>
		</summary>
		<param name="value">The monetary value to initialize. </param>
	</doc><doc for="SqlMoney.SqlMoney2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> class with the specified <see cref="System.Decimal"/> value.
   </para>
		</summary>
		<param name="value">The monetary value to initialize. </param>
	</doc><doc for="SqlMoney.SqlMoney3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlTypes.SqlMoney"/> class with specified double value.
   </para>
		</summary>
		<param name="value">The monetary value to initialize. </param>
	</doc><doc for="SqlMoney.IsNull">
		<summary>
			<para>Returns a value indicating whether the <see cref="System.Data.SqlTypes.SqlMoney.Value"/>
property contains null.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> is assigned to null, otherwise
<see langword="false"/> .</para>
		</value>
	</doc><doc for="SqlMoney.ToInt64">
		<summary>
			<para>Converts the Value of this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to a long integer.</para>
		</summary>
		<returns>
			<para>A 64-bit integer whose value equals the integer portion of this <see cref="System.Data.SqlTypes.SqlMoney"/>
structure.</para>
		</returns>
	</doc><doc for="SqlMoney.ToString">
		<overload>
			<para>Converts a <see cref="System.Data.SqlTypes.SqlMoney"/>structure to string.</para>
		</overload>
		<summary>
			<para>Converts this instance of <see cref="System.Data.SqlTypes.SqlMoney"/> to string.</para>
		</summary>
		<returns>
			<para>A string whose value is the string representation of
      the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property of this <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</para>
		</returns>
	</doc><doc for="SqlMoney.Add">
		<summary>
			<para>Calculates the sum of the two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> stucture whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the sum of the
   two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters.</para>
		</returns>
	</doc><doc for="SqlMoney.Subtract">
		<summary>
			<para>The subtraction operator subtracts the
      second <see cref="System.Data.SqlTypes.SqlMoney"/> parameter from the first.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name="y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure containing the
   resuls of the subtraction.</para>
		</returns>
	</doc><doc for="SqlMoney.Multiply">
		<summary>
			<para>The multiplicaion operator calculates the product of the
      two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the product of the
   multiplication.</para>
		</returns>
	</doc><doc for="SqlMoney.Divide">
		<summary>
			<para>The division operator divides the first <see cref="System.Data.SqlTypes.SqlMoney"/>
parameter by the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the results of the division.</para>
		</returns>
	</doc><doc for="SqlMoney.Equals1">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if they are equal.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
   or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlMoney.LessThan">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is less than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
   A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either
   instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.
</returns>
	</doc><doc for="SqlMoney.operator+">
		<summary>
			<para>Calculates the sum of the two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.Add"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> stucture whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the sum of the
   two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operator-1">
		<summary>
			<para>The subtraction operator subtracts the
      second <see cref="System.Data.SqlTypes.SqlMoney"/> parameter from the first.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.Subtract"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name="y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure containing the
   resuls of the subtraction.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operator*">
		<summary>
			<para>The multiplicaion operator calculates the product of the
      two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.Multiply"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the product of the
   multiplication.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operator/">
		<summary>
			<para>The division operator divides the first <see cref="System.Data.SqlTypes.SqlMoney"/>
parameter by the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.Divide"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> contains the results of the division.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney2">
		<summary>
			<para>This implicit operator converts the supplied <see cref="System.Data.SqlTypes.SqlByte"/> parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlByte.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlByte"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property is equal to
   the <see cref="System.Data.SqlTypes.SqlByte.Value"/> of the <see cref="System.Data.SqlTypes.SqlByte"/>
   parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney3">
		<summary>
			<para>This implicit operator converts the supplied <see cref="System.Data.SqlTypes.SqlInt16"/>
parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt16.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlInt16"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlInt16.Value"/> of the <see cref="System.Data.SqlTypes.SqlInt16"/>
parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney4">
		<summary>
			<para>This implicit operator converts the supplied <see cref="System.Data.SqlTypes.SqlInt32"/>
parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt32.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlInt32"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlInt32.Value"/> of the <see cref="System.Data.SqlTypes.SqlInt32"/>
parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney5">
		<summary>
			<para>This implicit operator converts the supplied <see cref="System.Data.SqlTypes.SqlInt64"/>
parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlInt64.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlInt64"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/>
structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlInt64.Value"/> of the <see cref="System.Data.SqlTypes.SqlInt64"/>
parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney6">
		<summary>
			<para> This operator converts the supplied <see cref="System.Data.SqlTypes.SqlSingle"/>
parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlSingle.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlSingle"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/>
structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlSingle.Value"/> of the <see cref="System.Data.SqlTypes.SqlSingle"/>
parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney7">
		<summary>
			<para> This operator converts the supplied <see cref="System.Data.SqlTypes.SqlDouble"/>
parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDouble.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlDouble"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/>
structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlDouble.Value"/> of the <see cref="System.Data.SqlTypes.SqlDouble"/>
parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney8">
		<summary>
			<para> This operator converts the supplied <see cref="System.Data.SqlTypes.SqlDecimal"/>
parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlDecimal.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlDecimal"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/>
structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlDecimal.Value"/> of the <see cref="System.Data.SqlTypes.SqlDecimal"/>
parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney9">
		<summary>
			<para> This operator converts the <see cref="System.Data.SqlTypes.SqlString"/> parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlString.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlString"/> object to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/>
structure whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the value
represented by the <see cref="System.Data.SqlTypes.SqlString"/> parameter.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.GreaterThan">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is greater than the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.LessThanOrEqual">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is less than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A<see cref="System.Data.SqlTypes.SqlBoolean"/> that is<see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than or equal to the second instance, otherwise<see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the<see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be<see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.ToSqlBoolean">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlBoolean"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlBoolean"/> structure. If the 
   value of the <see langword="SqlMoney"/> structure is zero, then
   the <see langword="SqlBoolean"/> structure's value will be <see cref="System.Data.SqlTypes.SqlBoolean.False"/>, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.True"/> .</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operatorSqlMoney">
		<summary>
			<para>Converts the <see cref="System.Decimal"/> parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<param name="x">The <see langword="Decimal"/> value to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> equals the value of
   the <see cref="System.Decimal"/> parameter.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlByte">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlByte"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlByte"/> structure whose <see langword="Value"/> equals the <see langword="Value"/> of this <see langword="SqlMoney"/> structure. If the 
<see langword="SqlMoney"/> structure's Value is <see langword="true"/>, then the <see langword="SqlByte"/> structure's <see langword="Value"/> will be 1, otherwise the <see langword="SqlByte"/> structure's <see langword="Value"/> will be 0.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlString">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlString"/> .</para>
		</summary>
		<returns>
			<para>A <see langword="SqlString"/> structure whose value is a string representing 
   the date and time contained in this <see langword="SqlMoney"/> structure.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlDouble">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlDouble"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlDouble"/> structure whose <see langword="Value"/> equals 1 if the <see langword="SqlMoney"/> structure's Value was <see langword="true"/>; otherwise the <see langword="Value"/> of the new <see langword="SqlDouble"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlDecimal">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlDecimal"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlDecimal"/> structure whose 
<see langword="Value"/> equals 1 if the <see langword="SqlMoney"/> structure's Value was <see langword="true"/>; otherwise the <see langword="Value"/> of the new <see langword="SqlDecimal"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlInt16">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlInt16"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt16"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlMoney"/> structure's <see langword="Value "/>was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt16"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlInt32">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlInt32"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt32"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlMoney"/> structure's <see langword="Value "/>was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt32"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlInt64">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlInt64"/> .</para>
		</summary>
		<returns>
			<para>A new <see langword="SqlInt64"/> structure whose <see langword="Value"/> equals 
   1 if the <see langword="SqlMoney"/> structure's <see langword="Value "/>was
<see langword="true"/>, otherwise the <see langword="Value"/> of the new 
<see langword="SqlInt64"/> structure is 0.</para>
		</returns>
	</doc><doc for="SqlMoney.ToSqlSingle">
		<summary>
			<para>Converts this <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Data.SqlTypes.SqlSingle"/> .</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the <see langword="SqlMoney"/> 
structure's <see langword="Value"/> is 1; otherwise <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.operatorDecimal">
		<summary>
			<para>Converts the specified <see cref="System.Data.SqlTypes.SqlMoney"/> structure to <see cref="System.Decimal"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.ToDecimal"/>
		<param name="x">A <see langword="SqlMoney"/> structure.</param>
		<returns>
			<para>A new <see langword="Decimal"/> structure whose value equals
   the <see cref="System.Data.SqlTypes.SqlMoney.Value"/> of
   the <see langword="SqlMoney"/> parameter.</para>
		</returns>
	</doc><doc for="SqlMoney.operatorSqlMoney1">
		<summary>
			<para>This implicit operator converts the supplied <see cref="System.Data.SqlTypes.SqlBoolean"/> parameter to <see cref="System.Data.SqlTypes.SqlMoney"/> .</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlBoolean.ToSqlMoney"/>
		<param name="x">The <see cref="System.Data.SqlTypes.SqlBoolean"/> structure to be converted.</param>
		<returns>
			<para>A new <see cref="System.Data.SqlTypes.SqlMoney"/> structure
   whose <see cref="System.Data.SqlTypes.SqlMoney.Value"/> property equals the <see cref="System.Data.SqlTypes.SqlBoolean.ByteValue"/> property of the <see cref="System.Data.SqlTypes.SqlBoolean"/> parameter.</para>
		</returns>
	</doc><doc for="SqlMoney.GreaterThanOrEqual">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is greater than or equal to the second.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc>
	<doc for="SqlMoney.Parse">
		<summary>
			<para>Converts the <see cref="System.String"/> representation of a number to
   its <see cref="System.Data.SqlTypes.SqlMoney"/>
   equivalent.</para>
		</summary>
		<param name="s">The <see langword="String"/> to be parsed.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlMoney"/> equivalent to the value
   contained in the specified <see cref="System.String"/>.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.NotEquals">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters 
   to determine if they are not equal.</para>
		</summary>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc>
	<doc for="SqlMoney.operator==">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if they are equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.Equals"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two instances are equal
   or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are not
   equal. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc><doc for="SqlMoney.operator!=">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/> parameters
   to determine if they are not equal.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.NotEquals"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the two
   instances are not equal or <see cref="System.Data.SqlTypes.SqlBoolean.False"/> if the two instances are equal.
   If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.operatorLT">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is less than the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.LessThan"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first instance is less
   than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/> . If either
   instance of <see cref="System.Data.SqlTypes.SqlMoney"/> is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.operator&gt;">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is greater than the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.GreaterThan"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.operatorLE">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is less than or equal to the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.LessThanOrEqual"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A<see cref="System.Data.SqlTypes.SqlBoolean"/> that is<see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is less than or equal to the second instance, otherwise<see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the<see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the<see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be<see cref="System.Data.SqlTypes.SqlBoolean.Null"/>.</para>
		</returns>
	</doc><doc for="SqlMoney.operator&gt;=">
		<summary>
			<para>Performs a logical comparison of the two <see cref="System.Data.SqlTypes.SqlMoney"/>
parameters to determine if the first is greater than or equal to the second.</para>
		</summary>
		<altmember cref="System.Data.SqlTypes.SqlMoney.GreaterThanOrEqual"/>
		<param name="x">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<param name=" y">A <see cref="System.Data.SqlTypes.SqlMoney"/> structure.</param>
		<returns>
			<para>A <see cref="System.Data.SqlTypes.SqlBoolean"/> that is <see cref="System.Data.SqlTypes.SqlBoolean.True"/> if the first
   instance is greater than or equal to the second instance, otherwise <see cref="System.Data.SqlTypes.SqlBoolean.False"/>. If either instance of <see cref="System.Data.SqlTypes.SqlMoney"/>
   is null, the <see cref="System.Data.SqlTypes.SqlBoolean.Value"/> of the <see cref="System.Data.SqlTypes.SqlBoolean"/>
   will be <see cref="System.Data.SqlTypes.SqlBoolean.Null"/> .</para>
		</returns>
	</doc></docs>
