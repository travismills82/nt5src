<docs>
	<doc for="SqlParameter.ToString">
		<summary>
			<para>Gets a string containing the <see cref="System.Data.SqlClient.SqlParameter.ParameterName"/>.</para>
		</summary>
		<returns>
			<para>A string containing the <see cref="System.Data.SqlClient.SqlParameter.ParameterName"/> .</para>
		</returns>
		<example>
		</example>
	</doc>
	<doc for="SqlParameter.ICloneable.Clone">
		<summary>
			<para>
       Creates a copy of this <see cref="System.Data.SqlClient.SqlParameter"/> object.
    </para>
		</summary>
		<returns>
			<para>
       A new <see cref="System.Data.SqlClient.SqlParameter"/> object that is a copy of this instance.
    </para>
		</returns>
		<remarks>
		</remarks>
		<example>
		</example>
	</doc>
	<doc for="SqlParameter.SetParentObject">
		<summary>
		</summary>
		<param name="parent">
		</param>
	</doc>
	<doc for="SqlParameter.IsNullable">
		<summary>
			<para>Gets
      or sets a value indicating whether the parameter accepts null values.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if null values are accepted; otherwise,
<see langword="false"/>. The default is <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>Null values are handled using the <see cref="System.DBNull"/> class.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.IsNullable Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SqlParameter.ParameterName">
		<summary>
			<para>Gets or sets the name of the <see cref="System.Data.SqlClient.SqlParameter"/>
.</para>
		</summary>
		<value>
			<para>The name of the <see cref="System.Data.SqlClient.SqlParameter"/> . The default is an empty string.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.ParameterName"/> 
is specified in the form @paramname. You must set <see cref="System.Data.SqlClient.SqlParameter.ParameterName"/> before executing
a <see cref="System.Data.SqlClient.SqlCommand"/> that relies on parameters.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.ParameterName Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SqlParameter.DataType">
		<summary>
			<para>Gets or sets the <see cref="System.Type"/> of the parameter native
   to the system.</para>
		</summary>
		<value>
			<para>The <see cref="System.Type"/> of the parameter
   native to the system.</para>
		</value>
		<remarks>
			<para> There is an implicit association between a specifc <see cref="System.Type"/> and <see cref="System.Data.SqlClient.SqlParameter.DataType"/>. However, you can override this
   association by explicitly setting the <see cref="System.Data.SqlClient.SqlParameter.DbType"/> property.</para>
			<para> The <see cref="System.Data.SqlClient.SqlParameter.DataType"/> and <see cref="System.Data.SqlClient.SqlParameter.DbType"/> are linked. Therefore,
setting the <see cref="System.Data.SqlClient.SqlParameter.DataType"/> changes the <see cref="System.Data.SqlClient.SqlParameter.DbType"/> to a supporting
<see cref="System.Data.SqlClient.SqlDbType"/>.</para>
			<para>For a list of the supported data types, see the
   appropriate <see cref="System.Data.SqlClient.SqlDbType"/> member. For more information, see <see topic="cpconUsingParametersWithDataAdapters"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.DataType Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.SqlClient.SqlParameter.DbType"/>
	</doc>
	<doc for="SqlParameter">
		<summary>
			<para>Represents a parameter to a <see cref="System.Data.SqlClient.SqlCommand"/>, and optionally, its mapping
   to <see cref="System.Data.DataSet"/> columns. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>Parameter names
      are not case sensitive.</para>
		</remarks>
		<example>
			<para>The following example creates multiple instances
      of <see cref="System.Data.SqlClient.SqlParameter"/> through the <see cref="System.Data.SqlClient.SqlParameterCollection"/>
      collection within the <see cref="System.Data.SqlClient.SqlDataAdapter"/> . These parameters are used to select
      data from the data source and place the data in the <see cref="System.Data.DataSet"/> . This example assumes that
      a <see cref="System.Data.DataSet"/> and a <see cref="System.Data.SqlClient.SqlDataAdapter"/>
      have already been created with the appropriate schema, commands, and connection.</para>
			<codelink SampleID="Classic WebData SqlParameter Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.SqlClient.SqlParameterCollection"/>
		<seealso cref="System.Data.SqlClient.SqlCommand"/>
	</doc>
	<doc for="SqlParameter.Value">
		<summary>
			<para>Gets or sets the value of the parameter.</para>
		</summary>
		<value>
			<para>An <see cref="System.Object"/> that is the value
   of the parameter. The default value is null.</para>
		</value>
		<remarks>
			<para> For input parameters, the
      value is bound to the <see cref="System.Data.SqlClient.SqlCommand"/>
      that is sent to the server. For output and return value parameters, the value is
      set on completion of the <see cref="System.Data.SqlClient.SqlCommand"/> and after the <see cref="System.Data.SqlClient.SqlDataReader"/> is closed.</para>
			<para>When sending a null parameter value to the server, the
      user must specify <see langword="DBNull"/>, not null. The null value in the
      system is an empty object that has no value. <see langword="DBNull "/>
      is used to represent null values.</para>
			<para> If the application specifies the database
      type, the bound value is converted to that type when the provider sends the
      data to the server. The provider attempts to convert any type of
      value if it supports the <see cref="System.IConvertible"/> interface. Conversion errors may
      result if the specified type is not compatible with the value.</para>
			<para> Both the <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/> and <see cref="System.Data.SqlClient.SqlParameter.DbType"/> properties can be inferred by setting the
<see cref="System.Data.SqlClient.SqlParameter.Value"/>.</para>
			<para> The <see cref="System.Data.SqlClient.SqlParameter.Value"/> property is overwritten by <see cref="System.Data.Common.DbDataAdapter.Update"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.Value Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.SqlClient.SqlParameter.SqlDbType"/>
		<seealso cref="System.Data.SqlClient.SqlParameter.DbType"/>
	</doc><doc for="SqlParameter.SqlParameter">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/>
class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/> class.
   </para>
		</summary>
		<example>
			<para> The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its
   properties.
   </para>
			<codelink SampleID="Classic WebData SqlParameter.SqlParameter Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.DbType1">
		<summary>
			<para> Gets or sets the <see cref="System.Data.DbType"/> of the
   parameter.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DbType"/> values. The default is <see cref="System.Data.DbType.String"/>.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="System.Data.DbType"/>.</exception>
		<remarks>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/> and <see cref="System.Data.SqlClient.SqlParameter.DbType"/> are linked. Therefore, setting
   the <see cref="System.Data.SqlClient.SqlParameter.DbType"/> changes the <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/> to a supporting <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/>.</para>
			<para>For a list of the supported data types, see the appropriate <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/>
member. For more information, see
<see topic="cpconUsingParametersWithDataAdapters"/>.</para>
		</remarks>
	</doc><doc for="SqlParameter.DbType">
		<summary>
			<para> Gets or sets the <see cref="System.Data.SqlDbType"/>
of the parameter.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.SqlDbType"/> values. The default is
<see langword="NVarChar"/>
.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/> and <see cref="System.Data.SqlClient.SqlParameter.DbType"/> are linked. Therefore, setting
   the <see cref="System.Data.SqlClient.SqlParameter.DbType"/> changes the <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/> to a supporting <see cref="System.Data.SqlDbType"/>.</para>
			<para>For a list of the supported data types, see the appropriate <see cref="System.Data.SqlDbType"/>
member. For more information, see
<see topic="cpconUsingParametersWithDataAdapters"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.IsNullable Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.SqlClient.SqlParameter.DbType"/>
	</doc><doc for="SqlParameter.SourceColumn">
		<summary>
			<para>Gets or sets the name of the source column that is mapped to
      the <see cref="System.Data.DataSet"/> and used for loading or returning the <see cref="System.Data.SqlClient.SqlParameter.Value"/>
      .</para>
		</summary>
		<value>
			<para>The name of the source column that is mapped to the <see cref="System.Data.DataSet"/> . The default is an
   empty string.</para>
		</value>
		<remarks>
			<para>When <see cref="System.Data.SqlClient.SqlParameter.SourceColumn"/> is set to 
   anything other than an empty string, the value of the parameter is retrieved
   from the column with the <see cref="System.Data.SqlClient.SqlParameter.SourceColumn"/> name. If <see cref="System.Data.SqlClient.SqlParameter.Direction"/> is set to <see langword="Input"/>
   , the value is taken from the <see cref="System.Data.DataSet"/>. If <see cref="System.Data.SqlClient.SqlParameter.Direction"/> is set to
<see langword="Output"/> , the value is taken from the data source. A <see cref="System.Data.SqlClient.SqlParameter.Direction"/> of <see langword="InputOutput"/> 
is a combination of
both.</para>
			<para>For more information about using the <see cref="System.Data.SqlClient.SqlParameter.SourceColumn"/> property, see <see topic="cpconusingparameterswithdataadapters"/> and <see topic="cpconupdatingdatabasewithdataadapterdataset"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.SourceColumn Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SqlParameter.SourceVersion">
		<summary>
			<para>Gets or sets the <see cref="System.Data.DataRowVersion"/> to use when loading <see cref="System.Data.SqlClient.SqlParameter.Value"/> .</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DataRowVersion"/> values. The default is
<see langword="Current"/> .</para>
		</value>
		<exception cref="System.ArgumentException">The property was not set one of the <see cref="System.Data.DataRowVersion"/> values.</exception>
		<remarks>
			<para>This property is used by
      the <see cref="System.Data.SqlClient.SqlDataAdapter.UpdateCommand"/>
      during the <see cref="System.Data.Common.DbDataAdapter.Update"/> to determine whether the
      original or current value is used for a parameter value. This allows primary
      keys to be updated. This property is set to
      the version of the <see cref="System.Data.DataRow"/> used by the <see cref="System.Data.DataRow.this"/> property, or the <see cref="System.Data.DataRow.GetChildRows"/> method of the <see cref="System.Data.DataRow"/>
      object.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.SourceVersion Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SqlParameter.Scale">
		<summary>
			<para>Gets or sets the number of decimal places to
      which <see cref="System.Data.SqlClient.SqlParameter.Value"/>
      is resolved.</para>
		</summary>
		<value>
			<para>The number of decimal places to which <see cref="System.Data.SqlClient.SqlParameter.Value"/>
is resolved. The default is
0.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.Scale"/> property is used by parameters which have a <see cref="System.Data.SqlDbType"/> of
<see langword="Decimal"/>.</para>
			<note type="note">
   .NET Framework data providers
   that ship with .NET Framework version 1.0 do not verify
   the <see cref="System.Data.SqlClient.SqlParameter.Precision"/> or <see cref="System.Data.SqlClient.SqlParameter.Scale"/> of <see cref="System.Decimal"/> parameter values. This can
   result in truncated data being inserted at the data source. If you are
   using .NET Framework version 1.0, validate the <see cref="System.Data.SqlClient.SqlParameter.Precision"/> and <see cref="System.Data.SqlClient.SqlParameter.Scale"/> of <see cref="System.Decimal"/> values before setting the
   parameter value. When using .NET Framework version 1.1 or later,
   an exception is thrown if a <see cref="System.Decimal"/>
   parameter value is set with an invalid <see cref="System.Data.SqlClient.SqlParameter.Precision"/>. <see cref="System.Data.SqlClient.SqlParameter.Scale"/> values that exceed
   the <see cref="System.Decimal"/> parameter scale are still
   truncated.
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.Precision Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SqlParameter.SqlParameter2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/> class with the parameter name and
   the data
   type.</para>
		</summary>
		<param name="parameterName">The name of the parameter to map.</param>
		<param name="dbType">One of the <see cref="System.Data.SqlDbType"/> values.</param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="dbType"/> parameter is an invalid back-end data type. </exception>
		<remarks>
			<para>The data type, and if appropriate, <see cref="System.Data.SqlClient.SqlParameter.Size"/> and <see cref="System.Data.SqlClient.SqlParameter.Precision"/> are inferred from the value of
   the <paramref name="dbType "/> parameter.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.SqlParameter2 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SqlParameter.SqlParameter4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/> class with the parameter name, the <see cref="System.Data.SqlDbType"/> , and
   the size.</para>
		</summary>
		<param name="parameterName">The name of the parameter to map.</param>
		<param name=" dbType">One of the <see cref="System.Data.SqlDbType"/> values.</param>
		<param name="size">The length of the parameter.</param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="dbType"/> parameter is an invalid back-end data type. </exception>
		<remarks>
			<para> The <see cref="System.Data.SqlClient.SqlParameter.Size"/> is inferred from the value of
   the <paramref name="dbType "/>parameter if it is not explicitly
   set in the <paramref name="size "/> parameter.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.SqlParameter4 Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.SqlParameter5">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/> class with the parameter name, the <see cref="System.Data.SqlDbType"/> , the size, and the
   source column
   name.</para>
		</summary>
		<param name="parameterName">The name of the parameter to map. </param>
		<param name=" dbType">One of the <see cref="System.Data.SqlDbType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<param name="sourceColumn">The name of the source column. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="dbType"/> parameter is an invalid back-end data type. </exception>
		<remarks>
			<para> The <see cref="System.Data.SqlClient.SqlParameter.Size"/> is inferred from the value of
   the <paramref name="dbType "/>parameter if it is not explicitly
   set in the <paramref name="size "/> parameter.
   </para>
		</remarks>
		<example>
			<para> The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData SqlParameter.SqlParameter5 Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.SqlParameter1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/> class with the parameter name, the type of the
   parameter, the size of the parameter, a <see cref="System.Data.ParameterDirection"/>, the precision of the
   parameter, the scale of the parameter, the source column,
   a <see cref="System.Data.DataRowVersion"/> to use, and the value of the
   parameter.
   </para>
		</summary>
		<param name="parameterName">The name of the parameter to map. </param>
		<param name="dbType">One of the <see cref="System.Data.SqlDbType"/> values. </param>
		<param name="size">The length of the parameter. </param>
		<param name="direction">One of the <see cref="System.Data.ParameterDirection"/> values. </param>
		<param name="isNullable"><see langword="true"/> if the value of the field can be null, otherwise <see langword="false"/>. </param>
		<param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="System.Data.SqlClient.SqlParameter.Value"/> is resolved. </param>
		<param name="scale">The total number of decimal places to which <see cref="System.Data.SqlClient.SqlParameter.Value"/> is resolved. </param>
		<param name="sourceColumn">The name of the source column. </param>
		<param name="sourceVersion">One of the <see cref="System.Data.DataRowVersion"/> values. </param>
		<param name="value">An <see cref="System.Object"/> that is the value of the <see cref="System.Data.SqlClient.SqlParameter"/>. </param>
		<exception cref="System.ArgumentException">The value supplied in the <paramref name="dbType"/> parameter is an invalid back-end data type. </exception>
		<remarks>
			<para> The <see cref="System.Data.SqlClient.SqlParameter.Size"/> and <see cref="System.Data.SqlClient.SqlParameter.Precision"/> are inferred from the value of
   the <paramref name="dbType "/>parameter if they are not explicitly set
   in the <paramref name="size "/>and <paramref name="precision "/> parameters.</para>
		</remarks>
		<example>
			<para> The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.
   </para>
			<codelink SampleID="Classic WebData SqlParameter.SqlParameter1 Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.Direction">
		<summary>
			<para> Gets or sets a value indicating whether
      the parameter
      is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.ParameterDirection"/> values. The default is <see langword="Input"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The property was not set to one of the valid <see cref="System.Data.ParameterDirection"/> values.</exception>
		<remarks>
			<para>If the <see cref="System.Data.ParameterDirection"/> is output, and execution of
   the associated <see cref="System.Data.SqlClient.SqlCommand"/> does not return
   a value, the <see cref="System.Data.SqlClient.SqlParameter"/> contains a null value. </para>
			<para><see langword="Output"/>, <see langword="InputOut"/>, and <see langword="ReturnValue "/>parameters returned by 
calling <see cref="System.SqlClient.SqlCommand.ExecuteReader"/> cannot be accessed until you
call <see cref="System.SqlClient.SqlDataReader.Close"/> or <SpecialLocalizableItem kind="UIElement">Dispose</SpecialLocalizableItem> on the <see cref="System.Data.SqlClient.SqlDataReader"/>. </para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.Direction Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.Precision">
		<summary>
			<para>Gets or sets the maximum number of digits used to
      represent the <see cref="System.Data.SqlClient.SqlParameter.Value"/>
      property.</para>
		</summary>
		<value>
			<para>The maximum number of digits used to represent the
      <see cref="System.Data.SqlClient.SqlParameter.Value"/> property.  The default 
      value is 0, which indicates that the data provider sets the precision for
   <see cref="System.Data.SqlClient.SqlParameter.Value"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.Precision"/> property is used by parameters which have a <see cref="System.Data.SqlDbType"/> of
<see langword="Decimal"/>.</para>
			<note type="note">
   .NET Framework data providers
   that ship with .NET Framework version 1.0 do not verify
   the <see cref="System.Data.SqlClient.SqlParameter.Precision"/> or <see cref="System.Data.SqlClient.SqlParameter.Scale"/> of <see cref="System.Decimal"/> parameter values. This can
   result in truncated data being inserted at the data source. If you are
   using .NET Framework version 1.0, validate the <see cref="System.Data.SqlClient.SqlParameter.Precision"/> and <see cref="System.Data.SqlClient.SqlParameter.Scale"/> of <see cref="System.Decimal"/> values before setting the
   parameter value. When using .NET Framework version 1.1 or later,
   an exception is thrown if a <see cref="System.Decimal"/>
   parameter value is set with an invalid <see cref="System.Data.SqlClient.SqlParameter.Precision"/>. <see cref="System.Data.SqlClient.SqlParameter.Scale"/> values that exceed
   the <see cref="System.Decimal"/> parameter scale are still
   truncated.
</note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.Precision Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.SqlParameter3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.SqlClient.SqlParameter"/> class with the parameter name and a value of the
   new <see cref="System.Data.SqlClient.SqlParameter"/>
   . </para>
		</summary>
		<param name="parameterName">The name of the parameter to map. </param>
		<param name="value">An <see cref="System.Object"/> that is the value of the <see cref="System.Data.SqlClient.SqlParameter"/>. </param>
		<remarks>
			<para>When you specify an <see cref="System.Object"/> in the <paramref name="value "/>parameter, the <see cref="System.Data.SqlClient.SqlParameter.SqlDbType"/> is inferred
   from the .NET Framework type of the <see cref="System.Object"/>.</para>
			<para> Use caution when using this overload of the <see cref="System.Data.SqlClient.SqlParameter"/> constructor to specify
   integer parameter values. Because this overload takes a <paramref name="value"/>
   of type <see cref="System.Object"/>, you must
   convert the integral value to an <see cref="System.Object"/> type when the value is zero, as the following C# example demonstrates. </para>
			<code>
Parameter = new SqlParameter("@pname", Convert.ToInt32(0));
</code>
			<para>If you do not perform this conversion, the compiler will
   assume you are attempting to call the <see langword="SqlParameter "/>(<see langword="string"/>, <see langword="SqlDbType"/>) constructor overload.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.SqlParameter6 Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.Size">
		<summary>
			<para>Gets or sets the maximum
      size, in bytes, of the data within the column.</para>
		</summary>
		<value>
			<para>The maximum size, in bytes, of the data within the
      column. The default value is
      inferred from the parameter value.</para>
		</value>
		<remarks>
			<para>Setting <see cref="System.Data.SqlClient.SqlParameter.Size"/> affects only the input value 
   of a parameter. Return values and output parameters are not affected by
   this property.</para>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.Size"/> 
property is used for binary and string types.</para>
			<para>For nonstring data types and ANSI string data, the <see cref="System.Data.SqlClient.SqlParameter.Size"/> property refers to the
number of bytes. For Unicode string data, <see cref="System.Data.SqlClient.SqlParameter.Size"/>
refers to the number of characters. The count for strings does not include the
terminating character.</para>
			<para>For variable-length data types, <see cref="System.Data.SqlClient.SqlParameter.Size"/> describes the maximum
amount of data to transmit to the server. For example, for a Unicode string
value, <see cref="System.Data.SqlClient.SqlParameter.Size"/> could be used to limit
the amount of data sent to the server to the first one hundred characters.</para>
			<para>If not explicitly set, the size is inferred from the actual size of the
   specified parameter value.</para>
			<para>For fixed length data types, the value of <see cref="System.Data.SqlClient.SqlParameter.Size"/> is ignored. It can be retrieved
for informational purposes, and returns the maximum amount of bytes the provider
uses when transmitting the value of the parameter to the server.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.Size Example" SnippetID="1"/>
		</example>
	</doc><doc for="SqlParameter.Offset">
		<summary>
			<para>Gets or sets the offset to the <see cref="System.Data.SqlClient.SqlParameter.Value"/> property.</para>
		</summary>
		<value>
			<para>The offset to the <see cref="System.Data.SqlClient.SqlParameter.Value"/> . The default is 0.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.SqlClient.SqlParameter.Offset"/> property is used for
   client-side chunking of binary and string data. For example, in order to insert
   10MB of text into a column on a server, a user might execute 10 parameterized
   inserts of 1MB chunks, shifting the value of <see cref="System.Data.SqlClient.SqlParameter.Offset"/> on each
   iteration by 1MB.</para>
			<para> This property is used for binary and string types. It 
   returns the number of bytes for binary types, and the number of characters for
   strings. The count for strings does not include the terminating character.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.SqlClient.SqlParameter"/> and sets some of its properties.</para>
			<codelink SampleID="Classic WebData SqlParameter.Offset Example" SnippetID="1"/>
		</example>
	</doc></docs>
