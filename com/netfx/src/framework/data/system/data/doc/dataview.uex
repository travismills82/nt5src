<docs>
	<doc for="DataView.DataView">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.DataView"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DataView"/> class.</para>
		</summary>
		<example>
			<para>The following example creates a new <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataView.DataView Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataViewManager"/>
	</doc>
	<doc for="DataView.AllowDelete">
		<summary>
			<para>
       Sets or gets a value indicating whether deletes are
       allowed.
    </para>
		</summary>
		<value>
			<para>
				<see langword="true"/>, if deletes are allowed; 
       otherwise, <see langword="false"/> .
    </para>
		</value>
		<example>
			<para>
       The following example checks the <see cref="System.Data.DataView.AllowDelete"/> property before deleting a
    <see cref="System.Data.DataRow"/> 
    from a <see cref="System.Data.DataView"/>.
 </para>
			<codelink SampleID="Classic WebData DataView.AllowDelete Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataView.ApplyDefaultSort">
		<summary>
			<para>Gets or sets a value indicating whether to use the default sort.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>, if the default sort is used; 
    otherwise, <see langword="false"/> .</para>
		</value>
	</doc>
	<doc for="DataView.AllowEdit">
		<summary>
			<para>Gets or sets a value indicating whether edits are allowed.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>, if edits are allowed; otherwise, 
 <see langword="false"/>.</para>
		</value>
		<example>
			<para>The following example invokes the <see cref="System.Data.DataView.AllowEdit"/> method before editing a row in a <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataView.AllowEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataView.AllowDelete"/>
		<seealso cref="System.Data.DataView.AllowNew"/>
		<seealso cref="System.Data.DataRowView.BeginEdit"/>
	</doc>
	<doc for="DataView.AllowNew">
		<summary>
			<para>Gets or sets a value indicating whether the new rows can
       be added using the <see cref="System.Data.DataView.AddNew"/>
       method.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>, if new rows can be added; otherwise, 
 <see langword="false"/>.</para>
		</value>
		<example>
			<para>The following example sets the <see cref="System.Data.DataView.AllowNew"/>
 property to true before adding a new row with the <see cref="System.Data.DataView.AddNew"/>method.</para>
			<codelink SampleID="Classic WebData DataView.AllowNew Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataView.AddNew"/>
		<seealso cref="System.Data.DataRowView"/>
	</doc>
	<doc for="DataView.RowFilter">
		<summary>
			<para>Gets or sets the expression used to filter which rows are viewed in the
    <see cref="System.Data.DataView"/>.</para>
		</summary>
		<value>
			<para>A string that specifies how rows are to be filtered. For
       more details, see the
       Remarks below.</para>
		</value>
		<remarks>
			<para>To form a <see cref="System.Data.DataView.RowFilter"/>
 value, specify the name of a column
 followed by an operator and a value to filter on. The value must be in
 quotes. For example:</para>
			<para>"LastName = 'Smith'"</para>
			<para>See the <see cref="System.Data.DataColumn"/> class's <see cref="System.Data.DataColumn.Expression"/>
 property for more information.</para>
			<para>To return only those columns with null values, use the following
    expression:</para>
			<para>"Isnull(Col1,'Null Column') = 'Null Column'"</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.DataView"/> and sets
    its <see cref="System.Data.DataView.RowFilter"/> property.</para>
			<codelink SampleID="Classic WebData DataView.RowFilter Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn.Expression"/>
		<seealso cref="System.Data.DataView.Sort"/>
	</doc>
	<doc for="DataView.ResetSort">
		<summary>
			<para>
       Resets the <see cref="System.Data.DataView.Sort"/> property to its default state.
    </para>
		</summary>
		<seealso cref="System.Data.DataView.Sort"/>
	</doc>
	<doc for="DataView.ShouldSerializeSort">
		<summary>
			<para>
       Indicates whether the <see cref="System.Data.DataView.Sort"/> property should be persisted.
    </para>
		</summary>
		<returns>
			<para>
				<see langword="true "/>if the property value has been changed from its 
       default; otherwise, <see langword="false"/>.
    </para>
		</returns>
		<remarks>
			<para>
       You typically use this method only if you are either creating a designer for
       the <see cref="System.Data.DataView"/>, or creating your own control incorporating the
    <see cref="System.Data.DataView"/>. 
    </para>
		</remarks>
	</doc>
	<doc for="DataView.this">
		<summary>
			<para>Gets a row of data from a specified table.</para>
		</summary>
		<param name="recordIndex">The index of a record in the <see cref="System.Data.DataTable"/>.</param>
		<value>
			<para>A <see cref="System.Data.DataRowView"/> of the
    desired
    row.</para>
		</value>
	</doc>
	<doc for="DataView.AddNew">
		<summary>
			<para>Adds a new row to the <see cref="System.Data.DataView"/> .</para>
		</summary>
		<returns>
			<para>A <see cref="System.Data.DataRowView"/>
 .</para>
		</returns>
		<example>
			<para>The following example uses the <see cref="System.Data.DataView.AddNew"/> method to return a new
 <see cref="System.Data.DataRowView"/> that has been added to the <see cref="System.Data.DataTable"/>.</para>
			<codelink SampleID="Classic WebData DataView.AddNew Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataView.AllowNew"/>
		<seealso cref="System.Data.DataRowView"/>
	</doc>
	<doc for="DataView.PropertyChanged">
		<summary>
			<para>Occurs when a property value changes.</para>
		</summary>
		<remarks>
			<para>For more information about handling events, see <see topic="cpconEventsOverview"/>.</para>
		</remarks>
	</doc>
	<doc for="DataView.CreateChildView">
		<overload>
			<para>
       Creates a <see cref="System.Data.DataView"/> on
       a related table filtered on the specified relation and index.
    </para>
		</overload>
		<summary>
			<para>
       Creates a <see cref="System.Data.DataView"/> on a related
       table filtered on the relation specified by name, and index.
    </para>
		</summary>
		<param name="relationName">
    The name of the <see cref="System.Data.DataRelation"/> to use.
 </param>
		<param name=" recordIndex">
    The index of the record to use.
 </param>
		<returns>
			<para>
       A <see cref="System.Data.DataView"/> on the child table.
    </para>
		</returns>
		<remarks>
			<para>
       Use this method to create a <see cref="System.Data.DataView"/> on the child table for a particular row in the
          parent table.
       </para>
		</remarks>
		<example>
			<para>
          The following example uses a <see cref="System.Data.DataRelation"/> of
          the <see cref="System.Data.DataTable"/> to create a child <see cref="System.Data.DataView"/>.
       </para>
			<codelink SampleID="Classic WebData DataView.CreateChildView Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
	</doc>
	<doc for="DataView.CreateChildView1">
		<summary>
			<para>
       Creates a <see cref="System.Data.DataView"/> on a related table filtered on
       the specified <see cref="System.Data.DataRelation"/>, and index.
    </para>
		</summary>
		<param name="relation">
    The <see cref="System.Data.DataRelation"/> to use.
 </param>
		<param name="recordIndex">
    The index of the record to use.
 </param>
		<returns>
			<para>
       A <see cref="System.Data.DataView"/> on the child table.
    </para>
		</returns>
	</doc>
	<doc for="DataView.Delete">
		<summary>
			<para>Deletes a row at the specified index.</para>
		</summary>
		<param name="index">The index of the row to delete.</param>
		<remarks>
			<para>After deleting a <see cref="System.Data.DataRow"/>
 , its state changes to
 <see langword="DataViewRowState.Deleted"/>. You can roll back the 
 deletion by calling <see cref="System.Data.DataTable.RejectChanges"/> on the <see cref="System.Data.DataTable"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataView.Delete"/>
 method to delete a row.</para>
			<codelink SampleID="Classic WebData DataView.Delete Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataViewRowState"/>
		<seealso cref="System.Data.DataView.Find"/>
	</doc>
	<doc for="DataView.GetElement">
		<summary>
 gets an element from the dataView.  Only for Web Forms Interfaces.
 </summary>
		<param name="index">
		</param>
	</doc>
	<doc for="DataView.GetEnumerator">
		<summary>
			<para>Gets an enumerator for this <see cref="System.Data.DataView"/>.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> for navigating through
    the list.</para>
		</returns>
	</doc>
	<doc for="DataView.GetFilter">
		<summary>
			<para>Gets the filter for the <see cref="System.Data.DataView"/>.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Data.IFilter"/> interface.</para>
		</returns>
	</doc>
	<doc for="DataView.OnListChanged">
		<summary>
			<para>
       Raises the <see cref="E:System.Data.DataView.ListChanged"/> event.
    </para>
		</summary>
		<param name="e">
    A <see cref="System.ComponentModel.ListChangedEventArgs"/> that contains the event data.
 </param>
	</doc>
	<doc for="DataView.OnPropertyChanged">
		<summary>
			<para>
       Raises the <see cref="E:System.Data.DataView.PropertyChanged"/> event.
    </para>
		</summary>
		<param name="pcevent">
    A <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.
 </param>
	</doc>
	<doc for="DataView.RaisePropertyChanged">
		<summary>
			<para>
       Raises the <see cref="System.Data.DataView.OnPropertyChanged"/>
       event.
    </para>
		</summary>
		<param name="name">
    Name of the changed property.
 </param>
	</doc>
	<doc for="DataView.SetIndex">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataView.RelationCollectionChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataView.Disposed">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataView.CopyTo">
		<summary>
			<para> Copies items into
      an array. Only for Web Forms Interfaces.
      </para>
		</summary>
		<param name="array">array to copy into. </param>
		<param name="index">index to start at. </param>
	</doc>
	<doc for="DataView.Table">
		<summary>
			<para>Gets or sets the source <see cref="System.Data.DataTable"/>.</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.DataTable"/> that provides the data for this view.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.DataTable"/> also has a <see cref="System.Data.DataTable.DefaultView"/> property which returns the default <see cref="System.Data.DataView"/> for the
   table. For example, if you wish to create a custom view on the table, set the
<see cref="System.Data.DataView.RowFilter"/> on the <see cref="System.Data.DataView"/> returned by the <see cref="System.Data.DataTable.DefaultView"/>.</para>
			<para>You can only set the <see cref="System.Data.DataView.Table"/> property if the current value is null.</para>
		</remarks>
		<example>
			<para>The following example gets the <see cref="System.Data.DataTable"/> of the current <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataView.Table Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable"/>
	</doc><doc for="DataView.RowStateFilter">
		<summary>
			<para>Gets or sets the row state filter used in the <see cref="System.Data.DataView"/>.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DataViewRowState"/> values.</para>
		</value>
		<remarks>
			<para>Only rows that have been deleted using the <see cref="System.Data.DataView.Delete"/>
method will have their <see cref="System.Data.DataView.RowStateFilter"/> value set to
<see langword="Deleted"/>. Those rows added using the <see cref="System.Data.DataView.AddNew"/>
method will similarly have the property set to <see langword="Added"/>.</para>
			<note type="note">
   Using the <see cref="System.Data.DataRowCollection.Remove"/> method of the <see cref="System.Data.DataRowCollection"/> class does not mean that a row
   will be marked as <see langword="Deleted"/>. Use the <see cref="System.Data.DataView.Delete"/>
   method instead to ensure such rows can be viewed in the <see cref="System.Data.DataView"/>.
   
</note>
			<para>New rows will also be visible when the <see cref="System.Data.DataView.RowStateFilter"/> is set to <see langword="ModifiedCurrent "/>or
<see langword="CurrentRows"/>.</para>
			<para>Deleted rows will also be visible when the <see cref="System.Data.DataView.RowStateFilter"/> is set to <see langword="ModifiedOriginal "/>and
<see langword="OriginalRows"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.DataTable"/> with a
   single column, then changes the data and sets the <see cref="System.Data.DataView.RowStateFilter"/> of the <see cref="System.Data.DataView"/> to display different row sets,
   depending on the <see cref="System.Data.DataViewRowState"/>
   .</para>
			<codelink SampleID="Classic WebData DataView.RowStateFilter Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataViewRowState"/>
		<seealso cref="System.Data.DataView.AddNew"/>
		<seealso cref="System.Data.DataView.Delete"/>
	</doc><doc for="DataView.UpdateIndex">
		<overload>
			<para>Reserved for internal use only.</para>
		</overload>
		<summary>
			<para>Reserved for internal use only.</para>
		</summary>
	</doc><doc for="DataView.UpdateIndex1">
		<summary>
			<para>Reserved for internal use only.</para>
		</summary>
		<param name="force">Reserved for internal use only.</param>
	</doc><doc for="DataView.Reset">
		<summary>
			<para>Reserved for internal use only.</para>
		</summary>
	</doc><doc for="DataView.IsOpen">
		<summary>
			<para>Gets a value indicating whether the data source is currently open and
      projecting views of data on the <see cref="System.Data.DataTable"/>.</para>
		</summary>
		<value>
			<para><see langword="true"/>, if the source is open; otherwise,
<see langword="false"/> .</para>
		</value>
		<remarks>
			<para>A <see cref="System.Data.DataView"/> is a "view" on a <see cref="System.Data.DataTable"/> because it provides custom
   sorting and filtering of the data. The <see cref="System.Data.DataView.IsOpen"/> property can be queried to
   determine if a <see cref="System.Data.DataView"/> has been opened using the <see cref="System.Data.DataView.Open"/>
   method.</para>
			<para>This property is designed for internal use only.</para>
		</remarks>
		<seealso cref="System.Data.DataView.Open"/>
	</doc><doc for="DataView.Open">
		<summary>
			<para> Opens a <see cref="System.Data.DataView"/>.
   </para>
		</summary>
		<remarks>
			<para> The method allows you to manually open the <see cref="System.Data.DataView"/> in derived classes. Use the
   corresponding <see cref="System.Data.DataView.Close"/> method to close the <see cref="System.Data.DataView"/>.
   </para>
			<para>This property is designed for internal use only.</para>
		</remarks>
		<example>
			<para> The following example checks the <see cref="System.Data.DataView.IsOpen"/>
property before invoking the <see cref="System.Data.DataView.Open"/>method.</para>
			<codelink SampleID="Classic WebData DataView.Open Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataView.IndexListChanged">
		<summary>
			<para>Occurs after a <see cref="System.Data.DataView"/> has been changed successfully.</para>
		</summary>
		<param name="sender">The source of the event.</param>
		<param name=" e">A <see cref="System.ComponentModel.ListChangedEventArgs"/> that contains the event data.</param>
	</doc><doc for="DataView.ColumnCollectionChanged">
		<summary>
			<para>Occurs after a <see cref="System.Data.DataColumnCollection"/> has been changed successfully.</para>
		</summary>
		<param name="sender">The source of the event.</param>
		<param name=" e">A <see cref="System.ComponentModel.ListChangedEventArgs"/> that contains the event data.</param>
	</doc><doc for="DataView.this1">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView">
		<summary>
			<para>Represents a databindable, customized view of a <see cref="System.Data.DataTable"/>
for sorting, filtering, searching, editing, and navigation.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded read operations. You must synchronize any 
      write operations.</para>
		</threadsafe>
		<remarks>
			<para>A major function of the <see cref="System.Data.DataView"/> is to allow data binding on both Windows Forms and Web
   Forms.</para>
			<para>Additionally, a <see cref="System.Data.DataView"/> can be
customized to present a subset of data from the <see cref="System.Data.DataTable"/>. This capability allows you to have two
controls bound to the same <see cref="System.Data.DataTable"/>, but showing different versions of the data. For
example, one control may be bound to a <see cref="System.Data.DataView"/> showing all of the rows in the
table, while a second may be configured to display only the rows that have been
deleted from the <see cref="System.Data.DataTable"/>. The <see cref="System.Data.DataTable"/> also has
a <see cref="System.Data.DataTable.DefaultView"/> property which returns the default <see cref="System.Data.DataView"/> for the
table. For example, if you wish to create a custom view on the table, set the
<see cref="System.Data.DataView.RowFilter"/> on the <see cref="System.Data.DataView"/> returned by the <see cref="System.Data.DataTable.DefaultView"/>.</para>
			<para>To create a filtered and sorted view of data, set the
<see cref="System.Data.DataView.RowFilter"/> and <see cref="System.Data.DataView.Sort"/> properties. Then use the <see cref="System.Data.DataView.this"/>
property to return a single <see cref="System.Data.DataRowView"/>
.</para>
			<para>You can also add and delete from the set of rows using
   the <see cref="System.Data.DataView.AddNew"/> and <see cref="System.Data.DataView.Delete"/> methods. When you use those
   methods, the <see cref="System.Data.DataView.RowStateFilter"/> property can set to specify that only deleted rows
   or new rows be displayed by the <see cref="System.Data.DataView"/>
   .</para>
		</remarks>
		<example>
			<para>The following example creates a single <see cref="System.Data.DataTable"/> with one
   column and five rows. Two <see cref="System.Data.DataView"/> objects are created and the <see cref="System.Data.DataView.RowStateFilter"/> is set on each to show different views of the table data. The values are then
   printed.</para>
			<codelink SampleID="Classic WebData DataView Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataViewManager"/>
	</doc><doc for="DataView.ListChanged">
		<summary>
			<para> Occurs when the list managed by the <see cref="System.Data.DataView"/> changes.
   </para>
		</summary>
		<example>
			<para>The following example adds a handler for the the <see cref="System.Data.DataView.ListChanged"/>
event of a <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataView.ListChanged Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataView.Dispose">
		<summary>
			<para>Disposes of the resources (other than memory) used
      by the <see cref="System.Data.DataView"/> object.</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<remarks>
			<para>Property change notifications between the <see cref="System.Data.DataView"/> and
   the underlying <see cref="System.Data.DataTable"/> stop after this method is called.
<see cref="System.Data.DataView.Dispose"/> 
should be called for all <see cref="System.Data.DataView"/> objects.</para>
		</remarks>
	</doc><doc for="DataView.Find">
		<overload>
			<para> Finds a row in the <see cref="System.Data.DataView"/> by the specified sort key value.
   </para>
		</overload>
		<summary>
			<para> Finds a row in the <see cref="System.Data.DataView"/> by the specified sort key
   value.
   </para>
		</summary>
		<param name="key">The object to search for.</param>
		<returns>
			<para> The index of the row in the <see cref="System.Data.DataView"/> containing the sort key value specified;
   otherwise a null value if the sort key value does not exist.</para>
		</returns>
		<example>
			<para> The following example uses the <see cref="System.Data.DataView.Find"/> method to return the
   index of the row containing the desired value in the sort key column.
   </para>
			<codelink SampleID="Classic WebData DataView.Find Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataView.Delete"/>
	</doc><doc for="DataView.Count">
		<summary>
			<para>Gets the number of records in the <see cref="System.Data.DataView"/>
after <see cref="System.Data.DataView.RowFilter"/> and <see cref="System.Data.DataView.RowStateFilter"/>
have been applied.</para>
		</summary>
		<value>
			<para>The number of records in the <see cref="System.Data.DataView"/>.</para>
		</value>
	</doc><doc for="DataView.Find1">
		<summary>
			<para> Finds an array of rows in the <see cref="System.Data.DataView"/> by the specified sort key values.
   </para>
		</summary>
		<param name="key">An array of values, typed as <see cref="System.Object"/>. </param>
		<returns>
			<para> The array of row indexes in the <see cref="System.Data.DataView"/> containing the sort key values specified;
   otherwise a null value if the sort key values do not exist.
   </para>
		</returns>
		<example>
			<para> The following example uses the <see cref="System.Data.DataView.Find"/>
method to return the index of a row that contains specified values in its
sort key columns.</para>
			<codelink SampleID="Classic WebData DataView.Find1 Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataView.FindRows">
		<overload>
			<para>Returns an array of <see cref="System.Data.DataRowView"/> objects whose columns match the specified sort key value. </para>
		</overload>
		<summary>
			<para>Returns an array of <see cref="System.Data.DataRowView"/> objects whose columns match the specified sort key 
   value. </para>
		</summary>
		<param name="key">The column value, typed as <see cref="System.Object"/>, to search for.</param>
		<returns>
			<para>An array of <see langword="DataRowView"/> objects whose columns match the 
   specified sort key value; or, if no rows contain the specified sort key values,
   an empty <see langword="DataRowView"/> array. </para>
		</returns>
	</doc><doc for="DataView.FindRows1">
		<summary>
			<para>Returns an array of <see cref="System.Data.DataRowView"/> objects whose columns match the specified sort key 
   value. </para>
		</summary>
		<param name="key">An array of column values, typed as <see cref="System.Object"/> , to search for.</param>
		<returns>
			<para>An array of <see langword="DataRowView"/> objects whose columns match the 
   specified sort key value; or, if no rows contain the specified sort key values,
   an empty <see langword="DataRowView"/> array. </para>
		</returns>
	</doc><doc for="DataView.BeginInit">
		<summary>
			<para>Begins the initialization of a <see cref="System.Data.DataView"/> that is used on a form or used by another component. The initialization occurs at runtime.</para>
		</summary>
		<remarks>
			<para>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component. The <see cref="System.Data.DataView.EndInit"/>
method ends the initialization. Using the <see langword="BeginInit "/>and
<see langword="EndInit "/> methods prevents the control from being used before it is fully initialized.</para>
		</remarks>
	</doc><doc for="DataView.EndInit">
		<summary>
			<para>Ends the initialization of a <see cref="System.Data.DataView"/> that is used on a form or used by another component. The initialization occurs at runtime.</para>
		</summary>
		<remarks>
			<para>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component. The <see cref="System.Data.DataView.BeginInit"/>
method starts the initialization. Using the <see langword="BeginInit "/>and
<see langword="EndInit "/> methods prevents the control from being used before it is fully initialized.</para>
		</remarks>
	</doc><doc for="DataView.DataViewManager">
		<summary>
			<para>Gets the <see cref="System.Data.DataViewManager"/> associated with this view.</para>
		</summary>
		<value>
			<para>The <see langword="DataViewManager"/> that created this
   view. If this is the default <see cref="System.Data.DataView"/> for a <see cref="System.Data.DataTable"/>, the
<see langword="DataViewManager"/> property returns the default 
<see langword="DataViewManager"/> for the <see langword="DataSet"/>. Otherwise, if 
   the <see langword="DataView"/> was created without a
<see langword="DataViewManager"/> , this property is 
<see langword="null"/>.</para>
		</value>
	</doc><doc for="DataView.DataView1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DataView"/> class with the
   specified <see cref="System.Data.DataTable"/>.</para>
		</summary>
		<param name="table">A <see cref="System.Data.DataTable"/> to add to the <see cref="System.Data.DataView"/>.</param>
		<example>
			<para>The following example creates a new <see cref="System.Data.DataView"/> with the specified <see cref="System.Data.DataTable"/>.</para>
			<codelink SampleID="Classic WebData DataView.DataView1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataView.DataView2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DataView"/> class with the
   specified <see cref="System.Data.DataTable"/>, <see cref="System.Data.DataView.RowFilter"/>, <see cref="System.Data.DataView.Sort"/>, and <see cref="System.Data.DataViewRowState"/>.</para>
		</summary>
		<param name="table">A <see cref="System.Data.DataTable"/> to add to the <see cref="System.Data.DataView"/>.</param>
		<param name="RowFilter">A <see cref="System.Data.DataView.RowFilter"/> to apply to the <see cref="System.Data.DataView"/>.</param>
		<param name="Sort">A <see cref="System.Data.DataView.Sort"/> to apply to the <see cref="System.Data.DataView"/>.</param>
		<param name="RowState">A <see cref="System.Data.DataViewRowState"/> to apply to the <see cref="System.Data.DataView"/>.</param>
		<example>
			<para>The following example creates a new <see cref="System.Data.DataView"/> with the specified <see cref="System.Data.DataTable"/>.</para>
			<codelink SampleID="Classic WebData DataView.DataView2 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataView.Close">
		<summary>
			<para> Closes the <see cref="System.Data.DataView"/>
.</para>
		</summary>
		<remarks>
			<para> The method allows you to manually close the <see cref="System.Data.DataView"/> in derived classes. Use the
   corresponding <see cref="System.Data.DataView.Open"/> method to open the <see cref="System.Data.DataView"/>.
   </para>
			<para>This property is designed for internal use only. </para>
		</remarks>
		<seealso cref="System.Data.DataView.Open"/>
	</doc>
	<doc for="DataView.Sort">
		<summary>
			<para>Gets
      or sets the sort column or columns, and sort order for the <see cref="System.Data.DataView"/>.</para>
		</summary>
		<value>
			<para>A string containing the column name followed by "ASC"
      (ascending) or "DESC" (descending). Columns are sorted ascending by default.
      Multiple columns can be separated by commas.</para>
		</value>
		<remarks>
			<para>For more information, see <see topic="cpconcreatingusingdataviews"/> .</para>
		</remarks>
		<example>
			<para>The following example instructs the <see cref="System.Data.DataView"/> to sort
   the table by two columns.</para>
			<codelink SampleID="Classic WebData DataView.Sort Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataView.RowFilter"/>
		<seealso cref="System.Data.DataColumn.Expression"/>
	</doc>
	<doc for="DataView.ICollection.IsSynchronized"><nodoc/>
		<summary>
   private implementation.
   </summary>
	</doc><doc for="DataView.ICollection.SyncRoot"><nodoc/>
		<summary>
   private implementation.
   </summary>
	</doc><doc for="DataView.IList.this"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.IsReadOnly"><nodoc/>
		<summary>
   private implementation.
   </summary>
	</doc><doc for="DataView.IList.IsFixedSize"><nodoc/>
		<summary>
   private implementation.
   </summary>
	</doc><doc for="DataView.IList.Add"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.Clear"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.Contains"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.IndexOf"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.Insert"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.Remove"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IList.RemoveAt"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.AllowNew"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.AddNew"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.AllowEdit"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.AllowRemove"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.SupportsChangeNotification"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.SupportsSearching"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.SupportsSorting"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.IsSorted"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.SortProperty"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.SortDirection"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.AddIndex"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.ApplySort">
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.RemoveIndex"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataView.IBindingList.RemoveSort"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc></docs>
