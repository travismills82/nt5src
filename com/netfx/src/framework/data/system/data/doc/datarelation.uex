<docs>
	<doc for="DataRelation.nested">
		<summary>
 this stores whether the  child element appears beneath the parent in the XML persised files.
 </summary>
	</doc>
	<doc for="DataRelation.group">
		<summary>
 this stores whether the the relationship was created for a group or for a true nested tablet in the XML persised files.
 </summary>
	</doc>
	<doc for="DataRelation.createConstraints">
		<summary>
 this stores whether the the relationship should make sure that KeyConstraints and ForeignKeyConstraints
 exist when added to the ConstraintsCollections of the table.
 </summary>
	</doc>
	<doc for="DataRelation.ChildKey">
		<summary>
 The internal Key object for the child table.
 </summary>
	</doc>
	<doc for="DataRelation.ChildTable">
		<summary>
			<para>Gets the child table of this relation.</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.DataTable"/> that is the child table of the relation.</para>
		</value>
		<example>
			<para>The following example gets the child <see cref="System.Data.DataTable"/> of a <see cref="System.Data.DataRelation"/>.</para>
			<codelink SampleID="Classic WebData DataRelation.ChildTable Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataRelation.ParentTable"/>
	</doc>
	<doc for="DataRelation.GetChildRows">
		<summary>
 Gets the child rows for the parent row across the relation using the version given
 </summary>
	</doc>
	<doc for="DataRelation.GetParentRows">
		<summary>
 Gets the parent rows for the given child row across the relation using the version given
 </summary>
	</doc>
	<doc for="DataRelation.SetDataSet">
		<summary>
 Internally sets the DataSet pointer.
 </summary>
	</doc>
	<doc for="DataRelation.ParentKey">
		<summary>
 The internal constraint object for the parent table.
 </summary>
	</doc>
	<doc for="DataRelation.PropertyChanged">
		<summary>
			<para>Occurs whenever a property value of the <see cref="System.Data.DataRelation"/>
 changes.</para>
		</summary>
		<remarks>
			<para>When you create a <see cref="System.Data.DataRelation"/> delegate, you identify the method that will handle 
    the event. To associate the event with your event handler, add an
    instance of the delegate to the event. The event handler is called
    whenever the event occurs, unless you remove the delegate. For more information
    about event handler delegates, see <see topic="cpconEventsDelegates"/>.</para>
		</remarks>
	</doc>
	<doc for="DataRelation.OnPropertyChanged">
		<summary>
			<para>
       Raises the <see cref="System.Data.DataRelation.OnPropertyChanged"/> event.
    </para>
		</summary>
		<param name="pcevent">
    A <see cref="System.ComponentModel.PropertyChangedEventArgs"/> that contains the event data.
 </param>
		<remarks>
			<para>
       Raising an event invokes the event handler through a delegate. For an
       overview, see <see topic="cpconProvidingEventFunctionality"/>.
    </para>
			<note type="inheritinfo">
       When overriding
    <see cref="System.Data.DataTable.OnPropertyChanged"/> in a derived class, be sure to call the base 
       class's <see cref="System.Data.DataTable.OnPropertyChanged"/> method.
    </note>
		</remarks>
	</doc>
	<doc for="DataRelation.OnPropertyChanging">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataRelation.RaisePropertyChanging">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataRelation.Dump">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="DataRelation.RaisePropertyChanged">
		<summary>
			<para> Raises the <see cref="System.Data.DataRelation.OnPropertyChanged"/>
event.</para>
		</summary>
		<param name="name">The name of the changed property. </param>
		<remarks>
			<para> This creates the needed event data and then calls 
   <see cref="System.Data.DataRelation.OnPropertyChanged"/> 
   .
   </para>
		</remarks>
	</doc>
	<doc for="DataRelation.ToString">
		<summary>
			<para>Gets the <see cref="System.Data.DataRelation.RelationName"/>, if one exists.</para>
		</summary>
		<returns>
			<para>The value of the <see cref="System.Data.DataRelation.RelationName"/> 
property.</para>
		</returns>
		<example>
			<para>The following example uses the <see cref="System.Data.DataColumn.ToString"/> 
property to return the name of the <see cref="System.Data.DataRelation"/> object.</para>
			<codelink SampleID="Classic WebData DataRelation.ToString Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn.Expression"/>
		<seealso cref="System.Data.DataColumn.ColumnName"/>
	</doc>
	<doc for="DataRelation.DataRelation3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.DataRelation"/> class using the specified name, matched arrays of 
   parent and child <see cref="System.Data.DataColumn"/>
   objects, and value indicating whether to create constraints.
   </para>
		</summary>
		<param name="relationName">The name of the relation. If <see langword="null"/> or an empty string (""), a default name will be given when the created object is added to the <see cref="System.Data.DataRelationCollection"/> . </param>
		<param name="parentColumns">An array of parent <see cref="System.Data.DataColumn"/> objects. </param>
		<param name="childColumns">An array of child <see cref="System.Data.DataColumn"/> objects. </param>
		<param name="createConstraints">A value indicating whether to create constraints. <see langword="true"/>, if constraints are created, otherwise, <see langword="false"/>. </param>
		<exception cref="System.ArgumentNullException"><para>Either one or both of the <see cref="System.Data.DataColumn"/> objects is <see langword="null"/>. </para></exception>
		<exception cref="System.Data.InvalidConstraintException"><para>The columns have differing data types</para>
			<para>-Or-</para>
			<para>The tables do not belong to the same <see cref="System.Data.DataSet"/>.</para></exception>
		<example>
			<para> The following example creates a new <see cref="System.Data.DataRelation"/> and 
   adds it to the <see cref="System.Data.DataRelationCollection"/> of a <see cref="System.Data.DataSet"/> .
   </para>
			<codelink SampleID="Classic WebData DataRelation.DataRelation3 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.ForeignKeyConstraint"/>
		<seealso cref="System.Data.DataRelation.RelationName"/>
	</doc><doc for="DataRelation.DataSet">
		<summary>
			<para>Gets the <see cref="System.Data.DataSet"/> to which the <see cref="System.Data.DataRelation"/> belongs.</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.DataSet"/> to which the <see cref="System.Data.DataRelation"/> belongs.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Data.DataRelationCollection"/> associated with a <see cref="System.Data.DataSet"/> is accessed through the <see cref="System.Data.DataSet.Relations"/> property of the <see cref="System.Data.DataSet"/>
object.</para>
		</remarks>
		<example>
			<para>The following example gets the <see cref="System.Data.DataSet"/> of a <see cref="System.Data.DataRelation"/>.</para>
			<codelink SampleID="Classic WebData DataRelation.DataSet Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataSet.Relations"/>
		<seealso cref="System.Data.DataRelationCollection"/>
	</doc><doc for="DataRelation.ParentColumns">
		<summary>
			<para>Gets an array of <see cref="System.Data.DataColumn"/> objects that are the parent columns of 
   this <see cref="System.Data.DataRelation"/> .</para>
		</summary>
		<value>
			<para>An array of <see cref="System.Data.DataColumn"/> objects that are the parent columns of 
   this <see cref="System.Data.DataRelation"/> .</para>
		</value>
		<example>
			<para>The following example gets the array of <see cref="System.Data.DataColumn"/> objects that function as parent
   columns for the relation.</para>
			<codelink SampleID="Classic WebData DataRelation.ParentColumns Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRelation.ChildColumns"/>
	</doc><doc for="DataRelation.ParentTable">
		<summary>
			<para>Gets the parent <see cref="System.Data.DataTable"/> of this <see cref="System.Data.DataRelation"/> .</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.DataTable"/> that is the parent table of this relation.</para>
		</value>
		<example>
			<para>The following example gets the parent <see cref="System.Data.DataTable"/> of a <see cref="System.Data.DataRelation"/> .</para>
			<codelink SampleID="Classic WebData DataRelation.ParentTable Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataRelation.ChildTable"/>
	</doc><doc for="DataRelation.ParentKeyConstraint">
		<summary>
			<para>Gets the <see cref="System.Data.UniqueConstraint"/> that ensures values in the parent column of a 
<see cref="System.Data.DataRelation"/> are unique.</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.UniqueConstraint"/> that ensures values in a parent column are 
   unique.</para>
		</value>
		<example>
			<para>The following example gets the <see cref="System.Data.DataRelation.ParentKeyConstraint"/> of a <see cref="System.Data.DataRelation"/>
object.</para>
			<codelink SampleID="Classic WebData DataRelation.ParentKeyConstraint Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRelation.ChildKeyConstraint"/>
		<seealso cref="System.Data.UniqueConstraint"/>
	</doc><doc for="DataRelation.CheckStateForProperty">
		<summary>
			<para>Ensures that the <see cref="System.Data.DataRelation"/> is a valid object.</para>
		</summary>
		<exception cref="System.Data.DataException"><para> The parent and child tables belong to different <see cref="System.Data.DataSet"/> objects.</para>
			<para>-Or-</para>
			<para>One or more pairs of parent and child <see cref="System.Data.DataColumn"/> objects have mismatched data types.</para>
			<para>-Or-</para>
			<para>The parent and child <see cref="System.Data.DataColumn"/> objects are identical.</para></exception>
		<remarks>
			<para><see cref="System.Data.DataRelation.CheckStateForProperty"/> verifies 
   the validity of a <see cref="System.Data.DataRelation"/> object, even if it does
   not belong to a <see cref="System.Data.DataSet"/>.</para>
		</remarks>
	</doc><doc for="DataRelation.DataRelation1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.DataRelation"/> class using the specified name, parent and
   child <see cref="System.Data.DataColumn"/> objects, and a value
   indicating whether to create constraints.
   </para>
		</summary>
		<param name="relationName">The name of the relation. If <see langword="null"/> or an empty string (""), a default name will be given when the created object is added to the <see cref="System.Data.DataRelationCollection"/> . </param>
		<param name="parentColumn">The parent <see cref="System.Data.DataColumn"/> in the relation. </param>
		<param name="childColumn">The child <see cref="System.Data.DataColumn"/> in the relation. </param>
		<param name=" createConstraints">A value indicating whether constraints are created. <see langword="true"/>, if constraints are created, otherwise, <see langword="false"/>. </param>
		<exception cref="System.ArgumentNullException">One or both of the <see cref="System.Data.DataColumn"/> objects contains <see langword="null"/> . </exception>
		<exception cref="System.Data.InvalidConstraintException"><para>The columns have differing data types</para>
			<para>-Or-</para>
			<para>The tables do not belong to the same <see cref="System.Data.DataSet"/>.</para></exception>
		<example>
			<para> The following example creates a new <see cref="System.Data.DataRelation"/> and
   adds it to the <see cref="System.Data.DataRelationCollection"/> of a <see cref="System.Data.DataSet"/> .
   </para>
			<codelink SampleID="Classic WebData DataRelation.DataRelation1 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.ForeignKeyConstraint"/>
		<seealso cref="System.Data.DataRelation.RelationName"/>
	</doc><doc for="DataRelation.DataRelation2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.DataRelation"/> class using the specified <see cref="System.Data.DataRelation"/> name
   and matched arrays of parent and child <see cref="System.Data.DataColumn"/>
   objects.
   </para>
		</summary>
		<param name="relationName">The name of the relation. If <see langword="null"/> or an empty string (""), a default name will be given when the created object is added to the <see cref="System.Data.DataRelationCollection"/> . </param>
		<param name="parentColumns">An array of parent <see cref="System.Data.DataColumn"/> objects. </param>
		<param name="childColumns">An array of child <see cref="System.Data.DataColumn"/> objects. </param>
		<exception cref="System.ArgumentNullException">One or both of the <see cref="System.Data.DataColumn"/> objects contains <see langword="null"/>. </exception>
		<exception cref="System.Data.InvalidConstraintException"><para>The <see cref="System.Data.DataColumn"/> objects have differing data types</para>
			<para>-Or-</para>
			<para>One or both of the arrays are not composed of distinct columns from the same table.</para>
			<para>-Or-</para>
			<para>The tables do not belong to the same <see cref="System.Data.DataSet"/>.</para></exception>
		<example>
			<para> The following example creates a new <see cref="System.Data.DataRelation"/> and
   adds it to the <see cref="System.Data.DataRelationCollection"/> of a <see cref="System.Data.DataSet"/> .
   </para>
			<codelink SampleID="Classic WebData DataRelation.DataRelation2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.ForeignKeyConstraint"/>
		<seealso cref="System.Data.DataRelation.RelationName"/>
	</doc><doc for="DataRelation.RelationName">
		<summary>
			<para>Gets or sets the name used to retrieve
      a <see cref="System.Data.DataRelation"/> from the <see cref="System.Data.DataRelationCollection"/>.</para>
		</summary>
		<value>
			<para>The name of the a <see cref="System.Data.DataRelation"/> .</para>
		</value>
		<exception cref="System.ArgumentException"><see langword="null"/> or empty string ("") was passed into a <see cref="System.Data.DataColumn"/> that is a <see cref="System.Data.DataRelation"/> .</exception>
		<exception cref="System.Data.DuplicateNameException">The <see cref="System.Data.DataRelation"/> belongs to a collection that already contains a <see cref="System.Data.DataRelation"/> with the same name.</exception>
		<remarks>
			<para>Use the <see cref="System.Data.DataRelation.RelationName"/> property to retrieve
   a <see cref="System.Data.DataRelation"/> from the <see cref="System.Data.DataRelationCollection"/>
   .</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRelation.RelationName"/> property to retrieve a
<see cref="System.Data.DataRelation"/> from 
   a <see cref="System.Data.DataRelationCollection"/>
   .</para>
			<codelink SampleID="Classic WebData DataRelation.RelationName Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.DataRelationCollection"/>
		<seealso cref="System.Data.DataRelationCollection.this"/>
	</doc><doc for="DataRelation.ExtendedProperties">
		<summary>
			<para>Gets the collection that stores customized properties.</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.PropertyCollection"/> containing customized properties.</para>
		</value>
		<remarks>
			<para>Extended properties must be of type <see cref="System.String"/>. Properties that are not of type String
   are not persisted when the <see cref="System.Data.DataRelation"/> is written as XML.</para>
		</remarks>
	</doc><doc for="DataRelation.DataRelation4">
		<summary>
			<para>This constructor is provided for design time support in
      the Visual Studio .NET environment. Any <see cref="System.Data.DataRelation"/> object created by using this
      constructor must then be added to the collection via <see cref="System.Data.DataRelationCollection.AddRange"/>.
      Tables and columns with the specified names must exist at the time the method is called, or if <see cref="System.Data.DataTable.BeginInit"/> has been called
      prior to calling this constructor, the tables and columns with the specified names must exist at the time that <see cref="System.Data.DataTable.EndInit"/> is called.</para>
		</summary>
		<param name="relationName">The name of the relation. If <see langword="null"/> or an empty string (""), a default name will be given when the created object is added to the <see cref="System.Data.DataRelationCollection"/> . </param>
		<param name="parentTableName"><para>The name of the <see cref="System.Data.DataTable"/> that is the parent table of the relation.</para></param>
		<param name="childTableName"><para>The name of the <see cref="System.Data.DataTable"/> that is the child table of the relation.</para></param>
		<param name="parentColumnNames"><para>An array of <see cref="System.Data.DataColumn"/> object names in the parent <see cref="System.Data.DataTable"/> of the relation.</para></param>
		<param name="childColumnNames"><para>An array of <see cref="System.Data.DataColumn"/> object names in the child <see cref="System.Data.DataTable"/> of the relation.</para></param>
		<param name="nested">A value indicating whether relationships are nested.</param>
	</doc>
	<doc for="DataRelation.ChildKeyConstraint">
		<summary>
			<para>Gets the <see cref="System.Data.ForeignKeyConstraint"/> for the relation.</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.ForeignKeyConstraint"/>.</para>
		</value>
		<example>
			<para>The following example sets the 
   <see langword="UpdateRule"/>, <see langword="DeleteRule"/>, and 
   <see langword="AcceptReject"/> rule for the <see langword="ForeignKeyConstraint"/> 
   associated with the <see langword="DataRelation"/> .</para>
			<codelink SampleID="Classic WebData DataRelation.ChildKeyConstraint Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.AcceptRejectRule"/>
		<seealso cref="System.Data.DataRelation.ParentKeyConstraint"/>
		<seealso cref="System.Data.Rule"/>
	</doc><doc for="DataRelation">
		<summary>
			<para>Represents a parent/child relationship between two
   <see cref="System.Data.DataTable"/> objects.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded read operations. You must synchronize any
      write operations.</para>
		</threadsafe>
		<remarks>
			<para>A <see cref="System.Data.DataRelation"/> is used to relate two <see cref="System.Data.DataTable"/> objects
   to each other through <see cref="System.Data.DataColumn"/> objects. For example, in a Customer/Orders
   relationship, the Customers table is the parent and
   the Orders table is the child
   of the relationship. This is similar to a primary key/foreign key relationship. For
   more information, see <see topic="cpconnavigatingrelationshipbetweentwotables"/>.</para>
			<para>Relationships are created between matching columns
   in the parent and child tables. That is, the <see cref="System.Data.DataColumn.DataType"/>
   value for both columns must be identical.</para>
			<para>Relationships can also cascade various changes from the parent <see cref="System.Data.DataRow"/>
to its child rows. To control how values are changed in child
rows, add a <see cref="System.Data.ForeignKeyConstraint"/> to the <see cref="System.Data.ConstraintCollection"/> of the <see cref="System.Data.DataTable"/> object.
The <see cref="System.Data.ConstraintCollection"/> determines
what action to take when a
value in a parent table is deleted or updated.</para>
			<para>When a <see cref="System.Data.DataRelation"/> is created, it first verifies that the relationship
can be established. After it is added to the <see cref="System.Data.DataRelationCollection"/> , the
relationship is maintained by disallowing any changes that would invalidate it.
Between the period when a <see cref="System.Data.DataRelation"/> is
created and added to the <see cref="System.Data.DataRelationCollection"/> ,
it is possible for additional changes to
be made to the parent or child rows. An exception is generated if this
results in a relationship that is no longer valid.</para>
			<para><see cref="System.Data.DataRelation"/> objects are contained in a <see cref="System.Data.DataRelationCollection"/>, which you can access
through the <see cref="System.Data.DataSet.Relations"/> property of the <see cref="System.Data.DataSet"/>, and the <see cref="System.Data.DataTable.ChildRelations"/> and <see cref="System.Data.DataTable.ParentRelations"/>
properties of the <see cref="System.Data.DataTable"/>
.</para>
		</remarks>
		<example>
			<para>The following example creates a new <see cref="System.Data.DataRelation"/> and adds it to the
<see cref="System.Data.DataRelationCollection"/> of a <see cref="System.Data.DataSet"/> . </para>
			<codelink SampleID="Classic WebData DataRelation Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataSet"/>
		<seealso cref="System.Data.ForeignKeyConstraint"/>
		<seealso cref="System.Data.DataRelationCollection"/>
		<seealso cref="System.Data.UniqueConstraint"/>
		<seealso cref="System.Data.DataTable.ParentRelations"/>
	</doc>
	<doc for="DataRelation.ChildColumns">
		<summary>
			<para>Gets the child <see cref="System.Data.DataColumn"/> objects of this relation.</para>
		</summary>
		<value>
			<para>An array of <see cref="System.Data.DataColumn"/> objects.</para>
		</value>
		<example>
			<para>The following example gets the child <see cref="System.Data.DataColumn"/> objects of a <see cref="System.Data.DataRelation"/>.</para>
			<codelink SampleID="Classic WebData DataRelation.ChildColumns Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRelation.ParentColumns"/>
	</doc>
	<doc for="DataRelation.Nested">
		<summary>
			<para>Gets or sets a value indicating whether <see cref="System.Data.DataRelation"/> objects are nested.</para>
		</summary>
		<value>
			<para><see langword="true"/>,
   if <see cref="System.Data.DataRelation"/> objects are nested;
   otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>You can use <see cref="System.Data.DataRelation"/> objects to define hierarchical relationships, such as those specified in XML. For
   more information, see <see topic="cpconnesteddatarelations"/>.</para>
			<note type="note">
   If the
<see cref="System.Data.DataTable.TableName"/> of the child table in the relation matches the 
<see cref="System.Data.DataColumn.ColumnName"/> of a column in the parent table in the 
   relation, the <see cref="System.Data.DataRelation.Nested"/> property
   must be false. This was not required with .NET Framework version 1.0.
</note>
		</remarks>
	</doc>
	<doc for="DataRelation.DataRelation">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Data.DataRelation"/> class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Data.DataRelation"/> class using the specified <see cref="System.Data.DataRelation"/> name, and parent and child <see cref="System.Data.DataColumn"/>
objects.</para>
		</summary>
		<param name="relationName">The name of the <see cref="System.Data.DataRelation"/> . If <see langword="null"/> or an empty string (""), a default name will be given when the created object is added to the <see cref="System.Data.DataRelationCollection"/> . </param>
		<param name="parentColumn">The parent <see cref="System.Data.DataColumn"/> in the relationship. </param>
		<param name="childColumn">The child <see cref="System.Data.DataColumn"/> in the relationship. </param>
		<exception cref="System.ArgumentNullException">One or both of the <see cref="System.Data.DataColumn"/> objects contains <see langword="null"/> . </exception>
		<exception cref="System.Data.InvalidConstraintException"><para>The columns have differing data types</para>
			<para>-Or-</para>
			<para>The tables do not belong to the same <see cref="System.Data.DataSet"/>.</para></exception>
		<example>
			<para> The following example creates a new <see cref="System.Data.DataRelation"/> and adds it to the <see cref="System.Data.DataRelationCollection"/>
of a <see cref="System.Data.DataSet"/>
.</para>
			<codelink SampleID="Classic WebData DataRelation.DataRelation" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRelation.RelationName"/>
	</doc>
</docs>
