<docs>
	<doc for="DataViewManager.OnPropertyChanged">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="DataViewManager.DataViewManager">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.DataViewManager"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DataViewManager"/> class.</para>
		</summary>
	</doc><doc for="DataViewManager.DataViewManager1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DataViewManager"/> 
class for the specified <see cref="System.Data.DataSet"/> .</para>
		</summary>
		<param name="dataSet">The name of the <see cref="System.Data.DataSet"/> to use.</param>
	</doc><doc for="DataViewManager.DataViewSettingCollectionString">
		<summary>
			<para>Gets or sets a value used for code persistence.</para>
		</summary>
		<value>
			<para>A value used for code persistence.</para>
		</value>
		<remarks>
			<para>A user should not call <see cref="System.Data.DataViewManager.DataViewSettingCollectionString"/> directly.</para>
		</remarks>
	</doc><doc for="DataViewManager.OnListChanged">
		<summary>
			<para>Raises the <see cref="System.Data.DataViewManager.ListChanged"/> event.</para>
		</summary>
		<param name="e">A <see cref="System.ComponentModel.ListChangedEventArgs"/> that contains the event data.</param>
	</doc><doc for="DataViewManager.TableCollectionChanged">
		<summary>
			<para>Raises a <see cref="System.Data.DataTableCollection.CollectionChanged"/> event when a
<see cref="System.Data.DataTable"/>is added to or removed from the <see cref="System.Data.DataTableCollection"/>.</para>
		</summary>
		<param name="sender">The source of the event.</param>
		<param name="e">A <see cref="System.ComponentModel.CollectionChangeEventArgs"/> that contains the event data.</param>
	</doc><doc for="DataViewManager.RelationCollectionChanged">
		<summary>
			<para>Raises a <see cref="System.Data.DataRelationCollection.CollectionChanged"/> event when a
<see cref="System.Data.DataRelation"/>is added to or removed from the <see cref="System.Data.DataRelationCollection"/>.</para>
		</summary>
		<param name="sender">The source of the event.</param>
		<param name="e">A <see cref="System.ComponentModel.CollectionChangeEventArgs"/> that contains the event data.</param>
	</doc><doc for="DataViewManager">
		<summary>
			<para> Contains a default <see cref="System.Data.DataViewSettingCollection"/> for each
<see cref="System.Data.DataTable"/> in a <see cref="System.Data.DataSet"/>.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded read operations. You must synchronize any 
      write operations.</para>
		</threadsafe>
	</doc><doc for="DataViewManager.CreateDataView">
		<summary>
			<para>Creates a <see cref="System.Data.DataView"/> for the specified <see cref="System.Data.DataTable"/> .</para>
		</summary>
		<param name="table">The name of the <see cref="System.Data.DataTable"/> to use in the <see cref="System.Data.DataView"/>. </param>
		<returns>
			<para>A <see cref="System.Data.DataView"/> object.</para>
		</returns>
	</doc><doc for="DataViewManager.DataSet">
		<summary>
			<para>Gets or sets the name of the <see cref="System.Data.DataSet"/> to use with the <see cref="System.Data.DataViewManager"/> .</para>
		</summary>
		<value>
			<para>The name of the <see cref="System.Data.DataSet"/> to use. </para>
		</value>
	</doc><doc for="DataViewManager.DataViewSettings">
		<summary>
			<para>Gets the <see cref="System.Data.DataViewSettingCollection"/> for each <see cref="System.Data.DataTable"/> in the <see cref="System.Data.DataSet"/> .</para>
		</summary>
		<value>
			<para>A <see cref="System.Data.DataViewSettingCollection"/> for each <see langword="DataTable"/>.</para>
		</value>
	</doc><doc for="DataViewManager.ListChanged">
		<summary>
			<para>Occurs after a row is added to or deleted from a <see cref="System.Data.DataView"/>.</para>
		</summary>
	</doc>
	<doc for="DataViewManager.IEnumerable.GetEnumerator"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.ICollection.Count"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.ICollection.SyncRoot"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.ICollection.IsSynchronized"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.IsReadOnly"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.IsFixedSize"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.ICollection.CopyTo"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.this"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.Add"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.Clear"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.Contains"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.IndexOf"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.Insert"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.Remove"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IList.RemoveAt"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.AllowNew"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.AddNew"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.AllowEdit"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.AllowRemove"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.SupportsChangeNotification"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.SupportsSearching"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.SupportsSorting"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.IsSorted"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.SortProperty"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.SortDirection"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.AddIndex"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.ApplySort"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.Find"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.RemoveIndex"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataViewManager.IBindingList.RemoveSort">
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc></docs>
