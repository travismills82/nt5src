<docs>
	<doc for="DataRow.DataRow">
		<internalonly/>
		<summary>
			<para>
       Initializes a new instance of the DataRow.
    </para>
			<para>
       Constructs a row from the builder. Only for internal usage..
    </para>
		</summary>
		<param name="builder">
    builder
 </param>
		<keyword term=""/>
	</doc>
	<doc for="DataRow.Error">
		<summary>
			<para>
       Gets or sets the error for the row.
       
    </para>
		</summary>
		<value>
			<para>
       A <see cref="System.Data.DataError"/>
       that contains information about the error.
       
    </para>
		</value>
		<example>
			<para>
       The following example returns the error number and
       description for a <see cref="System.Data.DataRow"/>object.
       
    </para>
			<codelink SampleID="Classic WebData DataRow.Error Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataRow.Error"/>
		<seealso cref="System.Data.DataRow.GetColumnError"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
		<keyword term=""/>
	</doc>
	<doc for="DataRow.RowError">
		<summary>
			<para>Gets or sets the custom error description for a row.</para>
		</summary>
		<value>
			<para>The text describing an error.</para>
		</value>
		<remarks>
			<para>Uses the <see cref="System.Data.DataRow.HasErrors"/> property to first determine if a <see cref="System.Data.DataRow"/> contains
    errors.</para>
		</remarks>
		<example>
			<para>The following example sets error text for ten rows of a 
       table displayed in a <see cref="T:System.Windows.Forms.DataGrid"/> control.</para>
			<codelink SampleID="Classic WebData DataRow.RowError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
		<seealso cref="System.Data.DataSet.HasErrors"/>
	</doc>
	<doc for="DataRow.Table">
		<summary>
			<para>Gets the <see cref="System.Data.DataTable"/>
 for which this row has a schema.</para>
		</summary>
		<value>
			<para>The <see cref="System.Data.DataTable"/> to which this row
    belongs.</para>
		</value>
		<remarks>
			<note type="note">
       A <see cref="System.Data.DataRow"/>
       does not necessarily belong to any
       table's collection of rows. This occurs when the <see cref="System.Data.DataRow"/> has been
       created but not added to the <see cref="System.Data.DataRowCollection"/>. If the <see cref="System.Data.DataRow.RowState"/>
       property returns <see langword="DataRowState.Detached"/>,
       the row is not in any collection.
    </note>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.Table"/>
 property to return a reference to the columns collection of the <see cref="System.Data.DataTable"/>.</para>
			<codelink SampleID="Classic WebData DataRow.Table Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataTable"/>
	</doc>
	<doc for="DataRow.CancelEdit">
		<summary>
			<para>Cancels the current edit on the row.</para>
		</summary>
		<exception cref="System.Data.InRowChangingEventException">The method was called inside the <see cref="System.Data.DataTable.RowChanging"/> event.</exception>
		<remarks>
			<para>See the <see cref="System.Data.DataRow.BeginEdit"/>
 method for more details.</para>
		</remarks>
		<example>
			<para>The following example edits the value of one column in the last row of a <see cref="T:System.Windows.Forms.DataGrid"/> control.
    The example uses the <see cref="System.Data.DataRow.BeginEdit"/>, <see cref="System.Data.DataRow.EndEdit"/>
    , methods to edit the column's value and commit the change to the row.</para>
			<codelink SampleID="Classic WebData DataRow.CancelEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.BeginEdit"/>
		<seealso cref="System.Data.DataViewRowState"/>
		<seealso cref="System.Data.DataRow.EndEdit"/>
		<seealso cref="System.Data.DataRow.HasVersion"/>
		<seealso cref="System.Data.DataRow.this"/>
		<seealso cref="System.Data.DataRow.RowState"/>
	</doc>
	<doc for="DataRow.CheckInTable">
		<summary>
 Throws a RowNotInTableException if row isn't in table.
 </summary>
	</doc>
	<doc for="DataRow.EndEdit">
		<summary>
			<para>Ends the edit occurring on the row.</para>
		</summary>
		<exception cref="System.Data.InRowChangingEventException">The method was called inside the <see cref="System.Data.DataTable.RowChanging"/> event.</exception>
		<exception cref="System.Data.ConstraintException">The edit broke a constraint.</exception>
		<exception cref="System.Data.ReadOnlyException">The row belongs to the table and the edit tried to change the value of a read-only column.</exception>
		<exception cref="System.Data.NoNullAllowedException">The edit tried to put a null value into a column where <see cref="System.Data.DataColumn.AllowDBNull"/> is false.</exception>
		<remarks>
			<para>When setting the property, an exception is generated if an exception occurs
       in the <see cref="System.Data.DataTable.RowChanging"/> event.</para>
		</remarks>
		<example>
			<para>The following example edits the value of one column in the last row of a 
    <see cref="T:System.Windows.Forms.DataGrid"/> control. The example uses the <see cref="System.Data.DataRow.BeginEdit"/>, 
    <see cref="System.Data.DataRow.EndEdit"/> , methods to edit the column's value and 
       commit the change to the row.</para>
			<codelink SampleID="Classic WebData DataRow.CancelEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.AcceptChanges"/>
		<seealso cref="System.Data.DataColumn.AllowDBNull"/>
		<seealso cref="System.Data.DataRow.BeginEdit"/>
		<seealso cref="System.Data.DataRow.CancelEdit"/>
		<seealso cref="System.Data.DataRow.HasVersion"/>
		<seealso cref="System.Data.DataRow.this"/>
		<seealso cref="System.Data.DataRow.RowState"/>
	</doc>
	<doc for="DataRowBuilder">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="DataRow.IsNull">
		<overload>
			<para>Gets
      a value indicating whether the specified column contains a null value.</para>
		</overload>
		<summary>
			<para>Gets
      a value indicating whether the column at the specified index contains a
      null value.</para>
		</summary>
		<param name="columnIndex">The zero-based index of the column.</param>
		<returns>
			<para>
				<see langword="true "/>if the column contains a null value; otherwise,
<see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following example changes the value of a column to a null value, then
      uses the <see cref="System.Data.DataRow.IsNull"/> method to determine if the value is
      null.</para>
			<codelink SampleID="Classic WebData DataRow.IsNull Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.IsNull2">
		<summary>
			<para>Gets a value indicating whether the specified <see cref="System.Data.DataColumn"/>
contains a null value.</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>.</param>
		<returns>
			<para>
				<see langword="true "/>if the column contains a null value; otherwise,
<see langword="false"/>. </para>
		</returns>
		<example>
			<para>The following example prints each column of each row in
      each table of a <see cref="System.Data.DataSet"/>. If the row is set to a null value, the value is not printed.</para>
			<codelink SampleID="Classic WebData DataRow.IsNull2 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.IsNull1">
		<summary>
			<para>Gets a value indicating whether the named column contains a null value.</para>
		</summary>
		<param name="columnName">The name of the column.</param>
		<returns>
			<para>
				<see langword="true "/>if the column contains a null value; otherwise,
<see langword="false"/>. </para>
		</returns>
		<example>
			<para>The following example changes the value of a column to a null value, then
      uses the <see cref="System.Data.DataRow.IsNull"/> method to determine if the value is null.</para>
			<codelink SampleID="Classic WebData DataRow.IsNull1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.IsNull3">
		<summary>
			<para>Gets a value indicating whether the specified <see cref="System.Data.DataColumn"/> and 
<see cref="System.Data.DataRowVersion"/> contains a null value.</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values that specifies the row version. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/>.</param>
		<returns>
			<para>
				<see langword="true "/>if the column contains a null value; otherwise, 
<see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="DataRow.SetNull">
		<summary>
			<para> Sets the the value of the specified <see cref="System.Data.DataColumn"/> to a null value.
   </para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>. </param>
		<remarks>
			<para> Use the <see cref="System.Data.DataRow.IsNull"/> method to determine if a column contains a
   null value.
   </para>
		</remarks>
	</doc>
	<doc for="DataRow.SetParentRow">
		<overload>
			<para>Sets the parent row of a <see cref="System.Data.DataRow"/>.</para>
		</overload>
		<summary>
			<para>Sets the parent row of a <see cref="System.Data.DataRow"/> with specified new parent <see cref="System.Data.DataRow"/> .</para>
		</summary>
		<param name="parentRow">The new parent <see cref="System.Data.DataRow"/> .</param>
	</doc>
	<doc for="DataRow.IsUnspecified">
		<overload>
			<para>Gets a value 
      indicating whether the <see cref="System.Data.DataColumn"/> has no value.</para>
		</overload>
		<summary>
			<para>Gets a value indicating whether the <see cref="System.Data.DataColumn"/> with the specified name has no value.
			</para>
		</summary>
		<param name="columnName">The name of the column.</param>
		<returns>
			<para><see langword="true "/>if the column has no value; otherwise, 
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Data.DataColumn"/> 
has no value if it not been explicitly set, has no default value, and is not
an expression or auto-increment column.</para>
		</remarks>
	</doc><doc for="DataRow.IsUnspecified1">
		<summary>
			<para>Gets a value indicating whether the <see cref="System.Data.DataColumn"/> 
at the specified index has no value.
			</para>
		</summary>
		<param name="idx">The zero-based index of the column.</param>
		<returns>
			<para><see langword="true "/>if the column has no value; otherwise, 
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Data.DataColumn"/> has no value if it not been explicitly 
   set, has no default value, and is not an expression or auto-increment
   column.</para>
		</remarks>
	</doc><doc for="DataRow.IsUnspecified2">
		<summary>
			<para>Gets a value indicating whether the specified <see cref="System.Data.DataColumn"/> has no 
value.
			</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>.</param>
		<returns>
			<para><see langword="true "/>if the column has no value; otherwise, 
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Data.DataColumn"/> has no value if it not been explicitly 
   set, has no default value, and is not an expression or auto-increment
   column.</para>
		</remarks>
	</doc><doc for="DataRow.IsUnspecified3">
		<summary>
			<para>Gets a value indicating whether the specified version of the 
<see cref="System.Data.DataColumn"/> 
has no value.
			</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values that specifies the row version. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/>.</param>
		<returns>
			<para><see langword="true "/>if the column has no value; otherwise, 
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Data.DataColumn"/> has no value if it not been explicitly 
   set, has no default value, and is not an expression or auto-increment
   column.</para>
		</remarks>
	</doc><doc for="DataRow.SetUnspecified">
		<overload>
			<para>Sets the value of 
      a <see cref="System.Data.DataColumn"/>
      to unspecified.</para>
		</overload>
		<summary>
			<para>Sets the value of a <see cref="System.Data.DataColumn"/> with the 
   specified name to unspecified.
			</para>
		</summary>
		<param name="columnName">The name of the column.</param>
	</doc><doc for="DataRow.SetUnspecified1">
		<summary>
			<para>Sets the value of a <see cref="System.Data.DataColumn"/> at the 
   specified index to unspecified.
			</para>
		</summary>
		<param name="idx">The zero-based index of the column.</param>
	</doc><doc for="DataRow.SetUnspecified2">
		<summary>
			<para>Sets the value of the specified <see cref="System.Data.DataColumn"/> to 
   unspecified.
			</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>. </param>
	</doc><doc for="DataRow.SetParentRow1">
		<summary>
			<para> Sets the parent row of a <see cref="System.Data.DataRow"/> with specified new parent <see cref="System.Data.DataRow"/> and
<see cref="System.Data.DataRelation"/> .
   </para>
		</summary>
		<param name="parentRow">The new parent <see cref="System.Data.DataRow"/> . </param>
		<param name="relation">The relation <see cref="System.Data.DataRelation"/> to use. </param>
		<exception cref="System.Data.RowNotInTableException">One of the rows doesn't belong to a table </exception>
		<exception cref="System.ArgumentNullException">One of the rows is <see langword="null"/>. </exception>
		<exception cref="System.ArgumentException">The relation doesn't belong to the <see cref="System.Data.DataSet"/> object's <see cref="System.Data.DataRelationCollection"/>. </exception>
		<exception cref="System.Data.InvalidConstraintException">The relation's child <see cref="System.Data.DataTable"/> isn't the table this row belongs to. </exception>
		<example>
			<para> The following example sets the parent row of a given child row.
      </para>
			<codelink SampleID="Classic WebData DataRow.SetParentRow1 Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataRow.ItemArray">
		<summary>
			<para>Gets
      or sets all of the values for this row through an array.</para>
		</summary>
		<value>
			<para>An array of type <see cref="System.Object"/>.</para>
		</value>
		<exception cref="System.ArgumentException">The array is larger than the number of columns in the table.</exception>
		<exception cref="System.InvalidCastException">A value in the array doesn't match its <see cref="System.Data.DataColumn.DataType"/> in its respective <see cref="System.Data.DataColumn"/>.</exception>
		<exception cref="System.Data.ConstraintException">An edit broke a constraint.</exception>
		<exception cref="System.Data.ReadOnlyException">An edit tried to change the value of a read-only column.</exception>
		<exception cref="NoNullAllowedException">An edit tried to put a null value in a column where the <see cref="System.Data.DataColumn"/> object's <see cref="System.Data.DataColumn.AllowDBNull"/> is false.</exception>
		<exception cref="DeletedRowInaccessibleException">The row has been deleted.</exception>
		<remarks>
			<para>If a <see cref="System.Data.DataColumn"/> has its <see cref="System.Data.DataColumn.DefaultValue"/> property set, pass <see langword="null "/> in the array to set the default value for
   that column. Similarly, if a column has its <see cref="System.Data.DataColumn.AutoIncrement"/> property
   set to true, pass <see langword="null"/>
   in the
   array to set the automatically generated value for the row.</para>
			<para>An exception can occur if a user generates an exception in
   the <see cref="System.Data.DataTable.ColumnChanging"/> event, or the <see cref="System.Data.DataTable.RowChanging"/>
   event.</para>
		</remarks>
		<example>
			<para>The following examples show how to get and set values
      using the <see cref="System.Data.DataRow.ItemArray"/> property.</para>
			<codelink SampleID="Classic WebData DataRow.ItemArray Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataColumn.AutoIncrement"/>
		<seealso cref="System.Data.DataColumn"/>
	</doc>
	<doc for="DataRow.HasVersion">
		<summary>
			<para>Gets a value indicating whether a specified version exists.</para>
		</summary>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values that specifies the row version. </param>
		<returns>
			<para><see langword="true "/>if the 
   version exists; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>See the <see cref="System.Data.DataRow.BeginEdit"/> method for more details.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.HasVersion"/> method to determine if the current value of
   a column and the proposed value are the same. If so, the edit is cancelled.
   Otherwise, the <see cref="System.Data.DataRow.AcceptChanges"/> method is called to end the edit.</para>
			<codelink SampleID="Classic WebData DataRow.HasVersion Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.BeginEdit"/>
		<seealso cref="System.Data.DataRow.CancelEdit"/>
		<seealso cref="System.Data.DataRow.this"/>
		<seealso cref="System.Data.DataRow.GetChildRows"/>
		<seealso cref="System.Data.DataRow.GetParentRows"/>
		<seealso cref="System.Data.DataRow.EndEdit"/>
		<seealso cref="System.Data.DataRow.RowState"/>
	</doc>
	<doc for="DataRow.SetColumnError">
		<overload>
			<para>Sets the error description for a column.</para>
		</overload>
		<summary>
			<para>Sets the error description for a column specified by index.</para>
		</summary>
		<param name="columnIndex">The zero-based index of the column.</param>
		<param name="error">The error description.</param>
		<exception cref="System.IndexOutOfRangeException">The <paramref name="columnIndex "/> argument is out of range</exception>
		<remarks>
			<para>The method is used to set custom error descriptions on
      specified columns. You can use the <see cref="T:System.Windows.Forms.ErrorProvider"/>
      control to display the
      text of the error.</para>
			<para>To examine error descriptions, use the <see cref="System.Data.DataRow.GetColumnError"/>
method.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to retrieve all of the columns
with errors.</para>
			<para>To set a custom error description on the whole row, use the <see cref="System.Data.DataRow.RowError"/>
property.</para>
			<para>To clear all errors for the columns collection, use the <see cref="System.Data.DataRow.ClearErrors"/> method.</para>
			<para>To set error text that applies to an entire row, set the
<see cref="System.Data.DataRow.RowError"/> property.</para>
		</remarks>
		<example>
			<para> The following example sets an error description for a
      specified <see cref="System.Data.DataRow"/>
      .</para>
			<codelink SampleID="Classic WebData DataRow.SetColumnError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumnCollection.Contains"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
	</doc>
	<doc for="DataRow.SetColumnError1">
		<summary>
			<para>Sets
      the error description for a column specified by name.</para>
		</summary>
		<param name="columnName">The name of the column.</param>
		<param name="error">The error description.</param>
		<remarks>
			<para>The name of a column is set with the <see cref="System.Data.DataColumn"/> class's <see cref="System.Data.DataColumn.ColumnName"/> property.</para>
			<para>To examine error descriptions, use the <see cref="System.Data.DataRow.GetColumnError"/> method.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to retrieve all of the columns
with errors.</para>
			<para>To set a custom error description on the whole row, use the <see cref="System.Data.DataRow.RowError"/>
property.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method.</para>
			<para>To clear all errors for the columns collection, use the <see cref="System.Data.DataRow.ClearErrors"/> method.</para>
		</remarks>
		<example>
			<para>The following example sets an error description for a
      specified <see cref="System.Data.DataRow"/>.</para>
			<codelink SampleID="Classic WebData DataRow.SetColumnError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumnCollection.Contains"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
	</doc>
	<doc for="DataRow.SetColumnError2">
		<summary>
			<para>Sets the error description for a column specified as a <see cref="System.Data.DataColumn"/>.</para>
		</summary>
		<param name="column">The <see cref="System.Data.DataColumn"/> to set the error description for.</param>
		<param name="error">The error description.</param>
		<remarks>
			<para>To examine error descriptions, use the <see cref="System.Data.DataRow.GetColumnError"/> method.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to retrieve all of the columns
with errors.</para>
			<para>To set a custom error description on the whole row, use the <see cref="System.Data.DataRow.RowError"/>
property.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method.</para>
			<para>To clear all errors for the columns collection, use the <see cref="System.Data.DataRow.ClearErrors"/> method.</para>
		</remarks>
		<example>
			<para>The following example sets an error description for a specified <see cref="System.Data.DataRow"/>.</para>
			<codelink SampleID="Classic WebData DataRow.SetColumnError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumnCollection.Contains"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
	</doc>
	<doc for="DataRow.GetColumnError">
		<overload>
			<para>Gets the error description for a column.</para>
		</overload>
		<summary>
			<para>Gets the error description for the column specified
      by index.</para>
		</summary>
		<param name="columnIndex">The zero-based index of the column.</param>
		<returns>
			<para>The text of the error description.</para>
		</returns>
		<exception cref="IndexOutOfRangeException">The <paramref name="columnIndex "/>argument is out of range.</exception>
		<remarks>
			<para>Use the <see cref="System.Data.DataRow.SetColumnError"/> method to set column errors.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to retrieve all of the columns with
errors.</para>
			<para>To clear all errors for the columns collection, use the <see cref="System.Data.DataRow.ClearErrors"/> method.</para>
		</remarks>
		<example>
			<para>The following example sets an error description for a specified <see cref="System.Data.DataRow"/>.</para>
			<codelink SampleID="Classic WebData DataRow.SetColumnError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumnCollection.Contains"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
	</doc>
	<doc for="DataRow.GetColumnError1">
		<summary>
			<para>Gets the error description for a column, specified by name.</para>
		</summary>
		<param name="columnName">The name of the column.</param>
		<returns>
			<para>The text of the error description.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Data.DataRow.SetColumnError"/> method to set column errors.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to retrieve all of the columns with
errors.</para>
			<para>To clear all errors for the columns collection, use the <see cref="System.Data.DataRow.ClearErrors"/> method.</para>
		</remarks>
		<example>
			<para>The following example sets an error description for a specified <see cref="System.Data.DataRow"/>.</para>
			<codelink SampleID="Classic WebData DataRow.SetColumnError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumnCollection.Contains"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
	</doc>
	<doc for="DataRow.GetColumnError2">
		<summary>
			<para>Gets the error description of
      the specified <see cref="System.Data.DataColumn"/>.</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/>.</param>
		<returns>
			<para>The text of the error description.</para>
		</returns>
		<remarks>
			<para>Use the <see cref="System.Data.DataRow.SetColumnError"/> method to set column errors.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to
retrieve all of the columns with errors. Alternatively, the <see cref="System.Data.DataTable.GetErrors"/> method of the <see cref="System.Data.DataTable"/> returns all rows with
errors.</para>
			<para>To clear all errors for the columns collection, use the <see cref="System.Data.DataRow.ClearErrors"/> method.</para>
		</remarks>
		<example>
			<para>The following example sets an error description for a specified <see cref="System.Data.DataRow"/>.</para>
			<codelink SampleID="Classic WebData DataRow.SetColumnError Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumnCollection.Contains"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataTable.GetErrors"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
	</doc>
	<doc for="DataRow.BeginEdit">
		<summary>
			<para>Begins an edit operation on a <see cref="System.Data.DataRow"/>object.</para>
		</summary>
		<exception cref="System.Data.InRowChangingEventException">The method was called inside the <see cref="System.Data.DataTable.RowChanging"/> event.</exception>
		<exception cref="System.Data.DeletedRowInaccessibleException">The method was called upon a deleted row.</exception>
		<remarks>
			<para>Use the <see cref="System.Data.DataRow.BeginEdit"/> method to put a <see cref="System.Data.DataRow"/> into edit mode. In this mode, events are 
   temporarily suspended allowing the user to make multiple changes to more
   than one row without triggering validation rules. For example, if you need
   to ensure that the value of the column for a total
   amount is equal to the values for the debit and credit columns in a row, you
   can put each of the rows into edit mode to suspend the validation of the
   row values until the user attempts to commit the values. </para>
			<para> The <see cref="System.Data.DataRow.BeginEdit"/> method is called
implicitly when the user changes the value of a data-bound control; the <see cref="System.Data.DataRow.EndEdit"/>
method is called implicitly when you invoke the <see cref="System.Data.DataTable"/> object's <see cref="System.Data.DataTable.AcceptChanges"/> method. While in this edit mode, the
<see cref="System.Data.DataRow"/>
stores representations of the original and new proposed values. Therefore, as
long as the <see cref="System.Data.DataRow.EndEdit"/> method has
not been called, you can retrieve either the original or proposed version by
passing either <see langword="DataRowVersion.Original"/> or
<see langword="DataRowVersion.Proposed"/>
for the
<paramref name="version "/>parameter of the <see cref="System.Data.DataRow.this"/> property. You can also cancel any edits at
this time by invoking the <see cref="System.Data.DataRow.CancelEdit"/> method.</para>
			<para>To see if the row contains an
   original or proposed value, call the <see cref="System.Data.DataRow.HasVersion"/> method.</para>
		</remarks>
		<example>
			<para>The example creates a simple <see cref="System.Data.DataTable"/> with one
<see cref="System.Data.DataColumn"/>
and five <see cref="System.Data.DataRow"/> objects, and a <see cref="System.Data.UniqueConstraint"/>.
A <see cref="System.Data.DataTable.RowChanged"/> event handler is also added to monitor when the
row's value is changing. After invoking <see cref="System.Data.DataRow.BeginEdit"/> on the existing rows, the
constraint and event are temporarily disabled and the original and proposed
values are printed. The <see cref="System.Data.DataRow.BeginEdit"/> is again invoked to set two rows
to the same value. When <see cref="System.Data.DataRow.EndEdit"/> is called, the <see cref="System.Data.UniqueConstraint"/>
is enforced on the identical values.</para>
			<codelink SampleID="Classic WebData DataRow.BeginEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.CancelEdit"/>
		<seealso cref="System.Data.DataRow.EndEdit"/>
		<seealso cref="System.Data.DataRow.HasVersion"/>
		<seealso cref="System.Data.DataRow.this"/>
		<seealso cref="System.Data.DataRow.RowState"/>
	</doc>
	<doc for="DataRow">
		<summary>
			<para>Represents a row of data in a <see cref="System.Data.DataTable"/>.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded read operations. You must synchronize any
      write operations.</para>
		</threadsafe>
		<remarks>
			<para>The <see cref="System.Data.DataRow"/> and <see cref="System.Data.DataColumn"/> objects are primary components of a
<see cref="System.Data.DataTable"/> 
. Use the <see cref="System.Data.DataRow"/> object and its
properties and methods to retrieve and evaluate; and insert, delete, and update the values in the <see cref="System.Data.DataTable"/>
. The <see cref="System.Data.DataRowCollection"/>
represents the actual <see cref="System.Data.DataRow"/> objects in the
<see cref="System.Data.DataTable"/> , and the <see cref="System.Data.DataColumnCollection"/> contains the <see cref="System.Data.DataColumn"/> objects 
that describe the schema of the <see cref="System.Data.DataTable"/>. Use the overloaded <see cref="System.Data.DataRow.this"/> property to
return or set the value of a <see cref="System.Data.DataColumn"/>
.</para>
			<para> Use the <see cref="System.Data.DataRow.HasVersion"/> and <see cref="System.Data.DataRow.IsNull"/> properties to determine the status
of a particular row value, and the <see cref="System.Data.DataRow.RowState"/> property to
determine the state of the row in relation to its parent <see cref="System.Data.DataTable"/>
.</para>
			<para>To create a new <see cref="System.Data.DataRow"/> , use the <see cref="System.Data.DataTable.NewRow"/> method of the <see cref="System.Data.DataTable"/> object. After creating a new <see cref="System.Data.DataRow"/>, use
the <see cref="System.Data.DataRowCollection.Add"/> method to add the new <see cref="System.Data.DataRow"/> to the <see cref="System.Data.DataRowCollection"/>. Finally, call the
<see cref="System.Data.DataRow.AcceptChanges"/> 
method of the <see cref="System.Data.DataTable"/> object to confirm the addition. For more
information about adding data to a <see cref="System.Data.DataTable"/>
, see <see topic="cpconaddingdatatodatatable"/> .</para>
			<para>You can delete a <see cref="System.Data.DataRow"/> from the <see cref="System.Data.DataRowCollection"/>
by calling the <see cref="System.Data.DataRowCollection.Remove"/> method of the <see cref="System.Data.DataRowCollection"/>,
or by calling the <see cref="System.Data.DataRow.Delete"/>
method of the <see cref="System.Data.DataRow"/> object. The <see cref="System.Data.DataRowCollection.Remove"/> method removes the row
from the collection. In contrast, <see cref="System.Data.DataRow.Delete"/> marks the <see cref="System.Data.DataRow"/> for removal.
The actual removal occurs when you call <see cref="System.Data.DataRow.AcceptChanges"/> method. By calling <see cref="System.Data.DataRow.Delete"/>, you can
programmatically check which rows are marked for removal before
actually deleting them. For more information, see <see topic="cpcondeletingdatarowfromdatatable"/> .</para>
		</remarks>
		<example>
			<para>The following example creates a new <see cref="System.Data.DataRow"/> by calling the <see cref="System.Data.DataTable.NewRow"/> method
   of the <see cref="System.Data.DataTable"/>object.</para>
			<codelink SampleID="Classic WebData DataRow Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataRowCollection.Add"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataColumn"/>
		<seealso cref="System.Data.DataRowView"/>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataRow.HasVersion"/>
		<seealso cref="System.Data.DataRow.IsNull"/>
		<seealso cref="System.Data.DataRow.this"/>
		<seealso cref="System.Data.DataTable.NewRow"/>
		<seealso cref="System.Data.DataRowCollection"/>
	</doc>
	<doc for="DataRow.ClearErrors">
		<summary>
			<para> Clears the errors for the row, including the <see cref="System.Data.DataRow.RowError"/>
and errors set with <see cref="System.Data.DataRow.SetColumnError"/>.</para>
		</summary>
		<remarks>
			<para>Use <see cref="System.Data.DataRow.SetColumnError"/> and <see cref="System.Data.DataRow.GetColumnError"/> to set and
   return errors for individual columns.</para>
			<para>Set the <see cref="System.Data.DataRow.RowError"/> property to set an error that applies to the whole
row.</para>
			<para>To determine if any errors exist for the columns collection, use the <see cref="System.Data.DataRow.HasErrors"/> method. Consequently, you can use the
<see cref="System.Data.DataRow.GetColumnsInError"/> method to retrieve all of the columns with
errors.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.HasErrors"/> to check for errors. If
   the row has errors, the <see cref="System.Data.DataRow.GetColumnsInError"/> method returns the array of
   columns with errors that can then be resolved. The <see cref="System.Data.DataRow.ClearErrors"/> method is then called to clear all
   errors.</para>
			<codelink SampleID="Classic WebData DataRow.ClearErrors Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataRow.GetColumnError"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
		<seealso cref="System.Data.DataRow.RowError"/>
	</doc>
	<doc for="DataRow.HasErrors">
		<summary>
			<para> Gets a value indicating whether there are errors in a row.</para>
		</summary>
		<value>
			<para><see langword="true "/>
if the row contains an error;
otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>When validating data, you can set an error on any column
      in a row. Such a column, when displayed in the <see cref="T:System.Windows.Forms.DataGrid" qualify="true"/>
      control, is marked with a red exclamation point to signal the user that the
      column is in error.</para>
			<para>Use <see cref="System.Data.DataRow.SetColumnError"/> to set an
   error on any column.</para>
			<para>Use the <see cref="System.Data.DataRow.GetColumnError"/> and <see langword="GetColumnsInError"/> methods to
return columns with errors.</para>
			<para>The <see cref="System.Data.DataRow.ClearErrors"/> method clears all errors for
the row.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.HasErrors"/> to check for errors. If
   the row has errors, the <see cref="System.Data.DataRow.GetColumnsInError"/> method returns the array of
   columns with errors that can then be resolved. The <see cref="System.Data.DataRow.ClearErrors"/> method is then called to clear all
   errors.</para>
			<codelink SampleID="Classic WebData DataRow.HasErrors Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataColumnCollection"/>
		<seealso cref="System.Data.DataRow.GetColumnError"/>
		<seealso cref="System.Data.DataRow.GetColumnsInError"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
	</doc>
	<doc for="DataRow.GetColumnsInError">
		<summary>
			<para>Gets an array of columns that have errors.</para>
		</summary>
		<returns>
			<para>An array of <see cref="System.Data.DataColumn"/> objects that contain errors.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Data.DataRow.GetColumnsInError"/> allows you to reduce the number
   of <see cref="System.Data.DataColumn"/> objects that must be processed for errors by
   returning only those columns that have an error. Errors can be set to individual
   columns with the <see cref="System.Data.DataRow.SetColumnError"/> method. To further reduce the number of processing,
   check the <see cref="System.Data.DataRow"/> class's <see cref="System.Data.DataRow.HasErrors"/> property to first determine if a
   <see cref="System.Data.DataRow"/>
has errors before invoking <see cref="System.Data.DataRow.GetColumnsInError"/>.</para>
			<para>Use the <see cref="System.Data.DataRow.ClearErrors"/> method to clear all errors on the
row, including the <see cref="System.Data.DataRow.RowError"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.HasErrors"/> to check for errors. If
   the row has errors, the <see cref="System.Data.DataRow.GetColumnsInError"/> method returns the array of
   columns with errors that can then be resolved. The <see cref="System.Data.DataRow.ClearErrors"/> method is then called to clear all
   errors.</para>
			<codelink SampleID="Classic WebData DataRow.ClearErrors Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.ClearErrors"/>
		<seealso cref="System.Data.DataRow.GetColumnError"/>
		<seealso cref="System.Data.DataTable.GetErrors"/>
		<seealso cref="System.Data.DataRow.HasErrors"/>
		<seealso cref="System.Data.DataRow.RowError"/>
		<seealso cref="System.Data.DataRow.SetColumnError"/>
	</doc>
	<doc for="DataRow.GetChildRows">
		<overload>
			<para>Gets the child rows in a related <see cref="System.Data.DataTable"/> of a <see cref="System.Data.DataRow"/>.</para>
		</overload>
		<summary>
			<para> Gets the child rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>.</para>
		</summary>
		<param name="relationName">The <see cref="System.Data.DataRelation.RelationName"/> of the <see cref="System.Data.DataRelation"/> to use.</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<remarks>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/> objects
   that is returned by the <see cref="System.Data.DataTable.ChildRelations"/> property.</para>
		</remarks>
	</doc>
	<doc for="DataRow.GetChildRows1">
		<summary>
			<para> Gets the child rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation.RelationName"/> of a
<see cref="System.Data.DataRelation"/>, and <see cref="System.Data.DataRowVersion"/>.</para>
		</summary>
		<param name="relationName">The <see cref="System.Data.DataRelation.RelationName"/> of the <see cref="System.Data.DataRelation"/> to use.</param>
		<param name=" version">One of the <see cref="System.Data.DataRowVersion"/> values specifying the version of the data to get. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/>. </param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="relation "/> is <see langword="null"/>.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<exception cref="System.Data.VersionNotFoundException"><para>The row does not have the requested <see cref="System.Data.DataRowVersion"/>. </para></exception>
		<remarks>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/> objects
   that is returned by the <see cref="System.Data.DataTable.ChildRelations"/> property.</para>
			<para>Use the <see cref="System.Data.DataRow.HasVersion"/> property to determine if the desired
<see cref="System.Data.DataRowVersion"/> exists.</para>
		</remarks>
	</doc>
	<doc for="DataRow.GetChildRows2">
		<overload>
			<para>Gets the child rows of a <see cref="System.Data.DataRow"/>.</para>
		</overload>
		<summary>
			<para>Gets the child rows of this <see cref="System.Data.DataRow"/> using the
   specified <see cref="System.Data.DataRelation"/>
   .</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> to use.</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.ArgumentNullException">The relation is <see langword="null"/>.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<exception cref="System.Data.VersionNotFoundException"><para>The row does not have this version of data.</para></exception>
		<remarks>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/> objects
   that is returned by the <see cref="System.Data.DataTable.ChildRelations"/> property.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetChildRows"/> to return the child <see cref="System.Data.DataRow"/> objects
   for every child <see cref="System.Data.DataRelation"/> in a <see cref="System.Data.DataTable"/>. The value of each column in the
   row is then printed.</para>
			<codelink SampleID="Classic WebData DataRow.GetChildRows2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataRow.GetParentRows"/>
		<seealso cref="System.Data.DataSet.Relations"/>
	</doc>
	<doc for="DataRow.GetChildRows3">
		<summary>
			<para>Gets the child rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation"/>, and <see cref="System.Data.DataRowVersion"/>.</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> to use.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values specifying the version of the data to get. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/> .</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects.</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="relation "/> is <see langword="null"/>.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<exception cref="System.Data.VersionNotFoundException"><para>The row does not have the requested <see cref="System.Data.DataRowVersion"/>. </para></exception>
		<remarks>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/> objects
   that is returned by the <see cref="System.Data.DataTable.ChildRelations"/> property.</para>
			<para>Use the <see cref="System.Data.DataRow.HasVersion"/> property to determine if the
desired <see cref="System.Data.DataRowVersion"/>
exists.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetChildRows"/> to return the child
<see cref="System.Data.DataRow"/>
objects for every child <see cref="System.Data.DataRelation"/> in a <see cref="System.Data.DataTable"/>. The value of each column with the specified version in the
row is then printed.</para>
			<codelink SampleID="Classic WebData DataRow.GetChildRows3 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataRowVersion"/>
		<seealso cref="System.Data.DataRow.GetParentRow"/>
		<seealso cref="System.Data.DataRow.GetParentRows"/>
		<seealso cref="System.Data.DataSet.Relations"/>
	</doc>
	<doc for="DataRow.GetParentRow">
		<overload>
			<para>Gets the parent row of a <see cref="System.Data.DataRow"/>.</para>
		</overload>
		<summary>
			<para>Gets the parent row of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>.</para>
		</summary>
		<param name="relationName">The <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>.</param>
		<returns>
			<para>The parent <see cref="System.Data.DataRow"/> of the current row.</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetParentRow"/> to print a value from each parent row of each
<see cref="System.Data.DataRow"/> in
   a <see cref="System.Data.DataTable"/>.</para>
			<codelink SampleID="Classic WebData DataRow.GetParentRow Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.GetParentRow1">
		<summary>
			<para>Gets the parent row of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>
, and <see cref="System.Data.DataRowVersion"/>.</para>
		</summary>
		<param name="relationName">The <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>.</param>
		<param name=" version">One of the <see cref="System.Data.DataRowVersion"/> values.</param>
		<returns>
			<para>The parent <see cref="System.Data.DataRow"/> of the current row.</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="relation "/> is <see langword="null"/>.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<exception cref="System.Data.VersionNotFoundException"><para>The row does not have the requested <see cref="System.Data.DataRowVersion"/>. </para></exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
			<para>Use the <see cref="System.Data.DataRow.HasVersion"/> property to determine if the desired
<see cref="System.Data.DataRowVersion"/> exists.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetParentRow"/> to print a value from
   each parent row of each <see cref="System.Data.DataRow"/> in a <see cref="System.Data.DataTable"/>.</para>
			<codelink SampleID="Classic WebData DataRow.GetParentRow1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.GetParentRow2">
		<summary>
			<para>Gets the parent row of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation"/> .</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> to use.</param>
		<returns>
			<para>The parent <see cref="System.Data.DataRow"/> of the current row.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="relation "/>does not belong to the <see cref="System.Data.DataTable"/>.</para>
			<para>The row is <see langword="null"/>.</para></exception>
		<exception cref="System.Data.InvalidConstraintException">This row does not belong to the <see cref="System.Data.DataRelation"/> object's child table.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to a table.</exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetParentRow"/> to return the child <see cref="System.Data.DataRow"/> objects
   for every child <see cref="System.Data.DataRelation"/> in a <see cref="System.Data.DataTable"/>. The value of each column in the
   row is then printed.</para>
			<codelink SampleID="Classic WebData DataRow.GetParentRow2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataRow.GetChildRows"/>
		<seealso cref="System.Data.DataRow.GetParentRow"/>
		<seealso cref="System.Data.DataSet.Relations"/>
	</doc>
	<doc for="DataRow.GetParentRow3">
		<summary>
			<para>Gets the parent row of a <see cref="System.Data.DataRow"/>
using the specified <see cref="System.Data.DataRelation"/>, and <see cref="System.Data.DataRowVersion"/>.</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> to use.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values specifying the version of the data to get.</param>
		<returns>
			<para>The parent <see cref="System.Data.DataRow"/> of the current row.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The row is <see langword="null"/>.</para>
			<para>The <paramref name="relation "/>does not belong to this table's parent relations. </para></exception>
		<exception cref="System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to a table.</exception>
		<exception cref="System.Data.VersionNotFoundException">The row does not have this version of data. </exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
Use the <see cref="System.Data.DataRow.HasVersion"/> property to determine if the desired
<see cref="System.Data.DataRowVersion"/> exists.
</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetParentRow"/> to return the child <see cref="System.Data.DataRow"/> objects
   for every child <see cref="System.Data.DataRelation"/> in a <see cref="System.Data.DataTable"/>. The value of each column in the
   row is then printed.</para>
			<codelink SampleID="Classic WebData DataRow.GetParentRow3 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataRowVersion"/>
		<seealso cref="System.Data.DataRow.GetChildRows"/>
		<seealso cref="System.Data.DataRow.GetParentRow"/>
		<seealso cref="System.Data.DataSet.Relations"/>
	</doc>
	<doc for="DataRow.GetParentRows">
		<overload>
			<para> Gets the parent rows of a <see cref="System.Data.DataRow"/>. </para>
		</overload>
		<summary>
			<para> Gets the parent rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation.RelationName"/> of a
<see cref="System.Data.DataRelation"/>. </para>
		</summary>
		<param name="relationName">The <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>.</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
		</remarks>
	</doc>
	<doc for="DataRow.GetParentRows1">
		<summary>
			<para> Gets the parent rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation.RelationName"/> of a
<see cref="System.Data.DataRelation"/>, and <see cref="System.Data.DataRowVersion"/>. </para>
		</summary>
		<param name="relationName">The <see cref="System.Data.DataRelation.RelationName"/> of a <see cref="System.Data.DataRelation"/>.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values specifying the version of the data to get. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/> .</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The relation and row do not belong to the same table.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="relation "/> is <see langword="null"/>.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<exception cref="System.Data.VersionNotFoundException"><para>The row does not have the requested <see cref="System.Data.DataRowVersion"/>. </para></exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
Use the <see cref="System.Data.DataRow.HasVersion"/> property to determine if the desired
<see cref="System.Data.DataRowVersion"/> exists.
</remarks>
	</doc>
	<doc for="DataRow.GetParentRows2">
		<overload>
			<para> Gets the parent rows of a <see cref="System.Data.DataRow"/> .</para>
		</overload>
		<summary>
			<para>Gets the parent rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation"/> .</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> to use.</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The <see cref="System.Data.DataRelation"/> does not belong to this row's <see cref="System.Data.DataSet"/>.</exception>
		<exception cref="System.ArgumentNullException">The row is <see langword="null"/>.</exception>
		<exception cref="System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to a <see cref="System.Data.DataTable"/>.</exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetParentRows"/> to return the child <see cref="System.Data.DataRow"/> objects
   for every child <see cref="System.Data.DataRelation"/> in a <see cref="System.Data.DataTable"/>. The value of each column in the
   row is then printed.</para>
			<codelink SampleID="Classic WebData DataRow.GetParentRows2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataRow.GetChildRows"/>
		<seealso cref="System.Data.DataRow.GetParentRow"/>
		<seealso cref="System.Data.DataSet.Relations"/>
	</doc>
	<doc for="DataRow.GetParentRows3">
		<summary>
			<para> Gets the parent rows of a <see cref="System.Data.DataRow"/> using the specified <see cref="System.Data.DataRelation"/>, and <see cref="System.Data.DataRowVersion"/> .</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> to use.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values specifying the version of the data to get.</param>
		<returns>
			<para>An array of <see cref="System.Data.DataRow"/> objects (or an array of length zero).</para>
		</returns>
		<exception cref="System.ArgumentException">The <see cref="System.Data.DataRelation"/> does not belong to this row's <see cref="System.Data.DataSet"/>.</exception>
		<exception cref="System.ArgumentNullException">The row is <see langword="null"/>.</exception>
		<exception cref="System.Data.InvalidConstraintException">The relation's child table is not the table the row belongs to.</exception>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to a <see cref="System.Data.DataTable"/>.</exception>
		<exception cref="System.Data.VersionNotFoundException">The row does not have the requested <see cref="System.Data.DataRowVersion"/>.</exception>
		<remarks>
			<para>In a <see cref="System.Data.DataSet"/>, the collection of all parent <see cref="System.Data.DataRelation"/>
objects for the data set is returned by the <see cref="System.Data.DataRow.GetParentRows"/>method.</para>
			<para>The <see cref="System.Data.DataTable"/> also contains a collection of <see cref="System.Data.DataRelation"/>
objects, returned by the <see cref="System.Data.DataTable.ParentRelations"/> property.</para>
			<para>Use the <see cref="System.Data.DataRow.HasVersion"/> property to determine if the desired
<see cref="System.Data.DataRowVersion"/> exists. </para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRow.GetParentRows"/> to return the child <see cref="System.Data.DataRow"/> objects
   for every child <see cref="System.Data.DataRelation"/> in a <see cref="System.Data.DataTable"/>. The value of each column in the
   row is then printed.</para>
			<codelink SampleID="Classic WebData DataRow.GetParentRows3 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.ChildRelations"/>
		<seealso cref="System.Data.DataRelation"/>
		<seealso cref="System.Data.DataRow.GetChildRows"/>
		<seealso cref="System.Data.DataRow.GetParentRow"/>
		<seealso cref="System.Data.DataSet.Relations"/>
	</doc>
	<doc for="DataRow.this">
		<overload>
			<para>Gets or sets data stored in a specified column.</para>
		</overload>
		<summary>
			<para>Gets or sets the data stored in the column specified by index.</para>
		</summary>
		<param name="columnIndex">The zero-based index of the column</param>
		<value>
			<para>An <see cref="System.Object"/>
that contains the data.</para>
		</value>
		<exception cref="System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
		<exception cref="System.IndexOutOfRangeException">The <paramref name="columnIndex"/> argument is out of range.</exception>
		<exception cref="System.InvalidCastException">Occurs when setting the value and the new value's <see cref="System.Type"/> doesn't match <see cref="System.Data.DataColumn.DataType"/>.</exception>
		<remarks>
			<para>When setting the property, an exception is generated
      if an exception occurs in the <see cref="System.Data.DataTable.ColumnChanging"/> event.</para>
			<para> If this is an edit, see <see cref="System.Data.DataRow.EndEdit"/> for the exceptions that
   can be generated.</para>
		</remarks>
		<example>
			<para>The following examples
      demonstrate the use of the <see cref="System.Data.DataRow.this"/> property to get
      and set the value of a given column index. The first example gets the value of
      the first column in any row that a user clicks in a <see cref="T:System.Windows.Forms.DataGrid"/>
      control.</para>
			<codelink SampleID="Classic WebData DataRow.this Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.this5">
		<summary>
			<para>Gets the specified version of data stored in the specified <see cref="System.Data.DataColumn"/>.</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/> that contains information about the column.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values that specifies the desired row version. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/>.</param>
		<value>
			<para>An <see cref="System.Object"/>
that contains the data.</para>
		</value>
		<exception cref="System.ArgumentException">The column doesn't belong to the table.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="column "/> argument contains null.</exception>
		<exception cref="System.Data.VersionNotFoundException">The row doesn't have this version of data.</exception>
		<remarks>
			<para>The <paramref name="version"/> should not be
   confused with the <see cref="System.Data.DataRow.RowState"/>
   property. The <paramref name="version "/>argument describes the state
   of the data contained by the column in relation to the column's original
   value.</para>
			<para>When setting the property, an exception is generated if an exception occurs
   in the <see cref="System.Data.DataTable.ColumnChanging"/> event.</para>
			<para>If this is an immediate edit, see <see cref="System.Data.DataRow.EndEdit"/> for the exceptions that
can be generated.</para>
		</remarks>
		<example>
			<para>The following example gets the current value of a
      clicked cell in the <see cref="T:System.Windows.Forms.DataGrid"/>
      control.</para>
			<codelink SampleID="Classic WebData DataRow.this5 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRowVersion"/>
	</doc>
	<doc for="DataRow.this1">
		<summary>
			<para>Gets or sets the data stored in the column specified by
      name.</para>
		</summary>
		<param name="columnName">The name of the column.</param>
		<value>
			<para>An <see cref="System.Object"/>
that contains the data.</para>
		</value>
		<exception cref="System.ArgumentException">The column specified by <paramref name="columnName"/> cannot be found.</exception>
		<exception cref="System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
		<exception cref="System.InvalidCastException">Occurs when setting a value and its <see cref="System.Type"/> doesn't match <see cref="System.Data.DataColumn.DataType"/>.</exception>
		<remarks>
			<para>When setting the property, an exception is generated if an exception occurs
      in the <see cref="System.Data.DataTable.ColumnChanging"/> event.</para>
			<para> If this is an immediate edit, see <see cref="System.Data.DataRow.EndEdit"/> for the exceptions that
   can be generated.</para>
		</remarks>
		<example>
			<para>The following examples demonstrate the use of the <see cref="System.Data.DataRow.this"/> property to get and set
   the value of a given column index. The first example gets the value of the first
   column in any row that a user clicks in a <see cref="T:System.Windows.Forms.DataGrid"/> control.
   The second sets a value passed as an argument to the method.</para>
			<codelink SampleID="Classic WebData DataRow.this1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.this2">
		<summary>
			<para>Gets or sets
      the data stored in the specified <see cref="System.Data.DataColumn"/>.</para>
		</summary>
		<param name="column">A <see cref="System.Data.DataColumn"/> that contains the data.</param>
		<value>
			<para>An <see cref="System.Object"/>
that contains the data.</para>
		</value>
		<exception cref="System.ArgumentException">The column doesn't belong to this table.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="column "/>is null.</exception>
		<exception cref="System.Data.DeletedRowInaccessibleException">An attempt was made to set a value on a deleted row.</exception>
		<exception cref="System.InvalidCastException">The data types of the value and the column do not match.</exception>
		<remarks>
			<para>When setting the property, an exception is generated if an exception occurs
      in the <see cref="System.Data.DataTable.ColumnChanging"/> event.</para>
			<para>If this is an immediate edit, see <see cref="System.Data.DataRow.EndEdit"/> for the exceptions that
   can be generated.</para>
		</remarks>
		<example>
			<para>The following examples demonstrate the use of the <see cref="System.Data.DataRow.this"/> property to get
   and set the value of a given column index. The first example gets the value of
   the first column in any row that a user clicks in a <see cref="T:System.Windows.Forms.DataGrid"/>
   control.
   The second sets a value passed as an argument to the method.</para>
			<codelink SampleID="Classic WebData DataRow.this2 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.this3">
		<summary>
			<para>Gets the data stored
      in the column, specified by index and version of the data to retrieve.</para>
		</summary>
		<param name="columnIndex">The zero-based index of the column.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values that specifies the desired row version. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/>.</param>
		<value>
			<para>An <see cref="System.Object"/>
that contains the data.</para>
		</value>
		<exception cref="System.IndexOutOfRangeException">The <paramref name="columnIndex"/> argument is out of range.</exception>
		<exception cref="System.InvalidCastException">The data types of the value and the column do not match.</exception>
		<exception cref="System.Data.VersionNotFoundException">The row doesn't have this version of data.</exception>
		<exception cref="System.Data.DeletedRowInaccessibleException">An attempt was made to set a value on a deleted row.</exception>
		<remarks>
			<para>You can only create or update a row after calling
      the <see cref="System.Data.DataRow.BeginEdit"/> method;
      similarly, the <see cref="System.Data.DataRow.EndEdit"/> method must be
      called to commit the edit. After calling the <see cref="System.Data.DataRow.EndEdit"/> method, and before
      calling the <see cref="System.Data.DataRow.AcceptChanges"/> method, internal representations of the
      original and new proposed values are stored. Therefore, until you call the
      <see cref="System.Data.DataRow.AcceptChanges"/>
   , you can use the <paramref name="version"/> argument to specify which version of a column's
   value you need, either the <see langword="DataRowVersion.Original "/>or
<see langword="DataRowVersion.Proposed"/>. Once you call the <see cref="System.Data.DataRow.AcceptChanges"/> method, however, the version of the column
   reverts to <see langword="DataRowVersion.Original"/>. If the row is new,
   you can also pass <see langword="DataRowVersion.Default"/> for
   the parameter to retrieve the column's default
   value. When passing <see langword="DataRowVersion.Current"/>, the property will
   return the current value, whatever its version may be.</para>
			<note type="note">
   The <see cref="System.Data.DataRow.BeginEdit"/> method is called implicitly when you change
   the value of a data-bound control or when a <see cref="System.Data.DataRow"/> object is added to the <see cref="System.Data.DataRowCollection"/>;
   the <see cref="System.Data.DataRow.EndEdit"/> method is called implicitly when
   calling the following methods: the <see cref="System.Data.DataRow"/> object's <see cref="System.Data.DataRow.AcceptChanges"/> method, the <see cref="System.Data.DataTable"/>
   object's <see cref="System.Data.DataTable.AcceptChanges"/> method, or the <see cref="System.Data.DataRow.CancelEdit"/> method.
   
</note>
			<para>By contrast, the <see cref="System.Data.DataRowVersion"/> enumeration <see langword="Current "/> returns the version of the data after the <see cref="System.Data.DataRow.EndEdit"/>
method has been called.</para>
			<para>The <paramref name="version"/> argument should not be confused with
the <see cref="System.Data.DataRow.RowState"/>
property. The <paramref name="version "/>argument describes the state of the data
contained by the column in relation to the column's original value. The <see cref="System.Data.DataRow.RowState"/>
property describes the state of the entire row in relation to its parent <see cref="System.Data.DataTable"/> .</para>
			<para>When setting the property, an exception is generated if an exception occurs
   in the <see cref="System.Data.DataTable.ColumnChanging"/> event.</para>
			<para>If this is an immediate edit, see <see cref="System.Data.DataRow.EndEdit"/> for the exceptions that
can be generated.</para>
		</remarks>
		<example>
			<para>The following example gets the current value of a column
      through the <see cref="System.Data.DataRow"/> object's <see cref="System.Data.DataRow.this"/> property.</para>
			<codelink SampleID="Classic WebData DataRow.this3 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DataRow.this4">
		<summary>
			<para> Gets the specified version of data stored in
      the named column.</para>
		</summary>
		<param name="columnName">The name of the column.</param>
		<param name="version">One of the <see cref="System.Data.DataRowVersion"/> values that specifies the desired row version. Possible values are <see langword="Default"/>, <see langword="Original"/>, <see langword="Current"/>, and <see langword="Proposed"/>.</param>
		<value>
			<para>An <see cref="System.Object"/>
that contains the data.</para>
		</value>
		<exception cref="System.ArgumentException">The column specified by <paramref name="columnName"/> cannot be found.</exception>
		<exception cref="System.InvalidCastException">The data types of the value and the column do not match.</exception>
		<exception cref="System.Data.VersionNotFoundException">The row doesn't have this version of data.</exception>
		<exception cref="System.Data.DeletedRowInaccessibleException">The row was deleted.</exception>
		<remarks>
			<para>The version should not be
   confused with the <see cref="System.Data.DataRow.RowState"/>
   property. The <paramref name="version "/>argument describes the state of the data
   contained by the column in relation to the column's original value. The <see cref="System.Data.DataRow.RowState"/>
   property describes the state of the entire row in relation to its parent <see cref="System.Data.DataTable"/>.</para>
			<para>When setting the property, an exception is generated if an exception occurs
   in the <see cref="System.Data.DataTable.ColumnChanging"/> event.</para>
			<para>If this is an immediate edit, see <see cref="System.Data.DataRow.EndEdit"/> for the exceptions that
can be generated.</para>
		</remarks>
		<example>
			<para>The following example gets the current version of data at a clicked cell of
      a <see cref="T:System.Windows.Forms.DataGrid"/> control.</para>
			<codelink SampleID="Classic WebData DataRow.this4 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRowVersion"/>
	</doc>
	<doc for="DataRow.RowState">
		<summary>
			<para>Gets the current state of the row in regard to its
      relationship to the <see cref="System.Data.DataRowCollection"/> .</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DataRowState"/> values.</para>
		</value>
		<remarks>
			<para>The value of the <see cref="System.Data.DataRow.RowState"/> depends on two factors:
   (1) the kind of operation has been performed on the row, and (2) whether or not
<see cref="System.Data.DataRow.AcceptChanges"/> has been called on the <see cref="System.Data.DataRow"/>.</para>
		</remarks>
		<example>
			<para>The following example first creates a new <see cref="System.Data.DataTable"/> with one
   column, then creates a single <see cref="System.Data.DataRow"/>. As the <see cref="System.Data.DataRow"/> is created, added, modified, and
   deleted, its <see cref="System.Data.DataRow.RowState"/> is
   printed.</para>
			<codelink SampleID="Classic WebData DataRow.RowState Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.BeginEdit"/>
		<seealso cref="System.Data.DataRowCollection.Add"/>
		<seealso cref="System.Data.DataRow.CancelEdit"/>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataRowView"/>
		<seealso cref="System.Data.DataRow.Delete"/>
		<seealso cref="System.Data.DataRow.EndEdit"/>
		<seealso cref="System.Data.DataTable.NewRow()"/>
	</doc><doc for="DataRow.AcceptChanges">
		<summary>
			<para>Commits all the changes made to this row
      since the last time <see cref="System.Data.DataRow.AcceptChanges"/> was called.</para>
		</summary>
		<exception cref="System.Data.RowNotInTableException">The row does not belong to the table.</exception>
		<remarks>
			<para>When invoking <see cref="System.Data.DataRow.AcceptChanges"/>, the <see cref="System.Data.DataRow.EndEdit"/>
method is implicitly called to end any edits. If the <see cref="System.Data.DataRow.RowState"/>
of the row was Added or Modified,
the tee cref="System.Data.DataRow.RowState"/&gt; becomes Unchanged. If
the <see cref="System.Data.DataRow.RowState"/> was Deleted, the row is
removed.</para>
			<para>See the <see cref="System.Data.DataRow.BeginEdit"/> method for more details.</para>
			<para>The <see cref="System.Data.DataTable"/> class also has an <see cref="System.Data.DataTable.AcceptChanges"/> method which affects changes made to the entire table.</para>
		</remarks>
		<example>
			<para>The following example first creates a new <see cref="System.Data.DataTable"/> with one column, then creates a
   single <see cref="System.Data.DataRow"/>. As the <see cref="System.Data.DataRow"/> is created, added, modified, and
   deleted, its <see cref="System.Data.DataRow.RowState"/> is printed.</para>
			<codelink SampleID="Classic WebData DataRow.AcceptChanges Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataTable.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.BeginEdit"/>
		<seealso cref="System.Data.DataRow.CancelEdit"/>
		<seealso cref="System.Data.DataViewRowState"/>
		<seealso cref="System.Data.DataTable"/>
		<seealso cref="System.Data.DataRow.EndEdit"/>
		<seealso cref="System.Data.DataRow.HasVersion"/>
		<seealso cref="System.Data.DataRow.this"/>
		<seealso cref="System.Data.DataRow.RowState"/>
	</doc><doc for="DataRow.Delete">
		<summary>
			<para>Deletes the <see cref="System.Data.DataRow"/> .</para>
		</summary>
		<exception cref="System.Data.DeletedRowInaccessibleException">The <see cref="System.Data.DataRow"/> has already been deleted.</exception>
		<remarks>
			<para>If the <see cref="System.Data.DataRow.RowState"/> of the row is Added, the row
   will be removed from the table.</para>
			<para>The <see cref="System.Data.DataRow.RowState"/> becomes Deleted after using the <see cref="System.Data.DataRow.Delete"/> method. It remains Deleted
until you call <see cref="System.Data.DataRow.AcceptChanges"/> .</para>
			<para>A deleted row can be undeleted by invoking <see cref="System.Data.DataRow.RejectChanges"/> .</para>
		</remarks>
		<example>
			<para>The following example creates a simple <see cref="System.Data.DataTable"/> with two
   columns and ten rows. After deleting several <see cref="System.Data.DataRow"/> items with the <see cref="System.Data.DataRow.Delete"/>
   method, one of the rows is undeleted by invoking <see cref="System.Data.DataRow.RejectChanges"/>.</para>
			<codelink SampleID="Classic WebData DataRow.Delete Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRowState"/>
		<seealso cref="System.Data.DataViewRowState"/>
		<seealso cref="System.Data.DataRow.RowState"/>
	</doc><doc for="DataRow.RejectChanges">
		<summary>
			<para>Rejects all changes made to the row since <see cref="System.Data.DataRow.AcceptChanges"/>
was last called.</para>
		</summary>
		<exception cref="System.Data.RowNotInTableException">The row doesn't belong to the table.</exception>
		<remarks>
			<para>When calling the <see cref="System.Data.DataRow.RejectChanges"/> method,
   the <see cref="System.Data.DataRow.CancelEdit"/> method is implicitly
   called to cancel any edits. If <see cref="System.Data.DataRow.RowState"/> is Deleted or Modified, the row reverts to its previous values,
   and <see cref="System.Data.DataRow.RowState"/> becomes Unchanged. If the
<see cref="System.Data.DataRow.RowState"/> is Added, the row is
removed.</para>
		</remarks>
		<example>
			<para>The following example creates a simple <see cref="System.Data.DataTable"/> with two columns and ten rows.
   After deleting several <see cref="System.Data.DataRow"/> items with the <see cref="System.Data.DataRow.Delete"/> method, one of the rows
   is undeleted by invoking <see cref="System.Data.DataRow.RejectChanges"/> .</para>
			<codelink SampleID="Classic WebData DataRow.Delete Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.IsNull"/>
	</doc></docs>
