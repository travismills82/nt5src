<docs>
	<doc for="IDbTransaction.IsolationLevel">
		<summary>
			<para>Specifies the <see cref="System.Data.IsolationLevel"/>
for this transaction.</para>
		</summary>
		<value>
			<para>The <see cref="System.Data.IsolationLevel"/> for this transaction. The default is
<see langword="ReadCommitted"/>.</para>
		</value>
		<remarks>
			<para>Parallel transactions are not supported. Therefore,
 the <see cref="System.Data.IsolationLevel"/> applies to the entire transaction.</para>
		</remarks>
	</doc><doc for="IDbTransaction.Connection">
		<summary>
			<para>Specifies the Connection object to associate with the transaction. </para>
		</summary>
		<value>
			<para>The Connection object to associate with the transaction.</para>
		</value>
		<remarks>
			<para> A single application may have multiple database connections, each with zero
      or more transactions. This property enables you to
      determine the connection object associated with a particular transaction.</para>
		</remarks>
	</doc><doc for="IDbTransaction.Rollback">
		<summary>
			<para> Rolls back a transaction from a pending state.</para>
		</summary>
		<exception cref="System.Exception">An error occurred while trying to commit the transaction. </exception>
		<exception cref="System.InvalidOperationException"><para>The transaction has already been committed or rolled back.</para>
			<para>-or-</para>
			<para>The connection is broken.</para></exception>
		<remarks>
			<para>The transaction can only be rolled back from a pending state (after <see cref="System.Data.IDbConnection.BeginTransaction"/> has been called, but before
<see cref="System.Data.IDbTransaction.Commit"/> is called).</para>
			<note type="inheritinfo">
   When
   overriding <see cref="System.Data.IDbTransaction.Rollback"/> in a derived class, be sure
   to call the base class's <see langword="Rollback"/> method.
   
</note>
		</remarks>
		<example>
			<para>The following example creates instances of the derived classes, <see cref="System.Data.SqlClient.SqlConnection"/> and a <see cref="System.Data.SqlClient.SqlTransaction"/>. It also demonstrates how to use the
<see cref="System.Data.SqlClient.SqlConnection.BeginTransaction"/> , <see cref="System.Data.SqlClient.SqlTransaction.Commit"/>, and <see cref="System.Data.SqlClient.SqlTransaction.Rollback"/>
methods.</para>
			<codelink SampleID="Classic WebData SqlConnection.BeginTransaction Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.IDbTransaction.Commit"/>
		<seealso cref="System.Data.IDbConnection.BeginTransaction"/>
	</doc>
	<doc for="IDbTransaction.Commit">
		<summary>
			<para> Commits the database transaction.
      </para>
		</summary>
		<exception cref="System.Exception">An error occurred while trying to commit the transaction. </exception>
		<exception cref="System.InvalidOperationException"><para>The transaction has already been committed or rolled back.</para>
			<para>-or-</para>
			<para>The connection is broken.</para></exception>
		<example>
			<para>The following example creates instances of the derived classes, <see cref="System.Data.SqlClient.SqlConnection"/> and a <see cref="System.Data.SqlClient.SqlTransaction"/>. It also demonstrates how to use the
<see cref="System.Data.SqlClient.SqlTransaction.Commit"/>, <see cref="System.Data.SqlClient.SqlConnection.BeginTransaction"/>, and <see cref="System.Data.SqlClient.SqlTransaction.Rollback"/>
methods.</para>
			<codelink SampleID="Classic WebData SqlConnection.BeginTransaction Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.SqlClient.SqlConnection.BeginTransaction"/>
		<seealso cref="System.Data.SqlClient.SqlTransaction.Save"/>
		<seealso cref="System.Data.SqlClient.SqlTransaction.Rollback"/>
	</doc>
	<doc for="IDbTransaction">
		<summary>
			<para> Represents a transaction to be performed at
      a data source, and is implemented by .NET Framework data providers that access relational
      databases.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Data.IDbTransaction"/> interface allows an
   inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information
   about Transaction classes, see <see topic="cpconperformingtransactions"/>. For more information about
   implementing .NET Framework data providers, see <see topic="cpconimplementingnetdataprovider"/>.</para>
			<para>An application does not create an instance of the <see cref="System.Data.IDbTransaction"/> interface directly, but
creates an instance of a class that inherits <see cref="System.Data.IDbTransaction"/>. </para>
			<para>Classes that inherit <see cref="System.Data.IDbTransaction"/> must implement the inherited members, and typically
define additional members to add provider-specific functionality. For example,
the <see cref="System.Data.IDbTransaction"/>
interface defines the <see cref="System.Data.IDbTransaction.Commit"/> method. In
turn, the <see cref="System.Data.OleDb.OleDbTransaction"/> class inherits this property, and also defines the <see cref="System.Data.OleDb.OleDbTransaction.Begin"/>
method.</para>
			<note type="inotes">
   To promote consistency among
   .NET Framework data providers, name the inheriting class in the form
<paramref name="Prv"/>Transaction where <paramref name="Prv "/>is 
   the uniform prefix given to all classes in a specific .NET Framework data provider
   namespace. For example, <paramref name="Sql"/>
   is
   the prefix of the <see cref="System.Data.SqlClient.SqlTransaction"/> class in the
<see langword="System.Data.SqlClient"/>
namespace.
</note>
		</remarks>
		<example>
			<para>The following example creates instances of the derived classes, <see cref="System.Data.SqlClient.SqlConnection"/>
and <see cref="System.Data.SqlClient.SqlTransaction"/>. It also demonstrates how to use the
<see cref="System.Data.SqlClient.SqlConnection.BeginTransaction"/> , <see cref="System.Data.SqlClient.SqlTransaction.Commit"/>, and <see cref="System.Data.SqlClient.SqlTransaction.Rollback"/>
methods.</para>
			<codelink SampleID="Classic WebData SqlConnection.BeginTransaction Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
