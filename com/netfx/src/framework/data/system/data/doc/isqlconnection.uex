<docs>
	<doc for="ISqlConnection">
		<summary>
			<para> Allows an object to create a SQL Server
      connection, which represents an open connection to a SQL Server database.</para>
		</summary>
	</doc>
	<doc for="ISqlConnection.CreateCommand">
		<summary>
			<para>Creates and returns an <see cref="System.Data.ISqlCommand"/> object associated with
   the <see cref="System.Data.ISqlConnection"/>.</para>
		</summary>
	</doc>
	<doc for="ISqlConnection.ServerVersion">
		<summary>
			<para> Gets a string containing the version of the instance of SQL Server to which the client is connected.
      </para>
		</summary>
		<value>
			<para> The version of the instance of SQL Server.
      </para>
		</value>
		<exception cref="System.InvalidOperationException">The connection is closed. </exception>
		<remarks>
			<para>The version is of the form ##.##.####, where the first two digits are the
      major version, the next two digits are the minor version, and the last four
      digits are the release version. The string is of the form major.minor.build,
      where major and minor are exactly two digits and build is exactly four digits. </para>
		</remarks>
		<example>
			<para> The following example creates a <see cref="System.Data.SqlClient.SqlConnection"/> and displays some
   of its read-only properties.
   </para>
			<codelink SampleID="Classic WebData ISqlConnection.ServerVersion Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ISqlConnection.BeginTransaction">
		<overload>
			<para>Begins a database transaction.</para>
		</overload>
		<summary>
			<para> Begins a database transaction.</para>
		</summary>
		<returns>
			<para> An object representing the new transaction.</para>
		</returns>
		<exception cref="System.ArgumentException">A transaction name must be specified.</exception>
		<remarks>
			<para>This command maps to the SQL Server implementation of BEGIN TRANSACTION. See
      the SQL Server documentation for more information, particularly on how nested
      transactions are handled.</para>
			<para>You must explicity commit or roll back the transaction 
      using the <see cref="System.Data.ISqlTransaction.Commit"/> or
   <see cref="System.Data.ISqlTransaction.Rollback"/> method. 
      To ensure that the SQL Server .NET Data Provider transaction management model
      performs correctly, avoid using other transaction management models, such as the one provided
      by SQL Server.</para>
		</remarks>
	</doc><doc for="ISqlConnection.BeginTransaction1">
		<summary>
			<para>Begins a database transaction with the specified isolation level.</para>
		</summary>
		<param name="iso">The isolation level under which the transaction should run.</param>
		<returns>
			<para>An object representing the new transaction.</para>
		</returns>
		<remarks>
			<para>You must explicity commit or roll back the transaction 
      using the <see cref="System.Data.ISqlTransaction.Commit"/> or
   <see cref="System.ISqlTransaction.Rollback"/> method. To 
      ensure that the SQL Server .NET Data Provider transaction management model
      performs correctly, avoid using other transaction management models, such as the one provided
      by SQL Server.</para>
		</remarks>
	</doc><doc for="ISqlConnection.BeginTransaction2">
		<overload>
			<para>Begins a database transaction.</para>
		</overload>
		<summary>
			<para>Begins a database transaction with the specified transaction name.</para>
		</summary>
		<param name="transactionName">The name of the transaction.</param>
		<returns>
			<para>An object representing the new transaction.</para>
		</returns>
		<exception cref="System.Exception">An error occured while trying to execute the transaction.</exception>
		<remarks>
			<para>This command maps to the SQL Server implementation of BEGIN TRANSACTION. See
      the SQL Server documentation for more information, particularly on how nested
      transactions are handled.</para>
			<para>The value in the <paramref name="transactionName"/> parameter can be used in later calls to <see cref="System.Data.ISqlTransaction.Rollback"/> and in
   the <paramref name="savePoint "/>parameter of the <see cref="System.Data.ISqlTransaction.Save"/> method.</para>
			<para>You must explicity commit or roll back the transaction 
   using the <see cref="System.Data.ISqlTransaction.Commit"/> or
<see cref="System.Data.ISqlTransaction.Rollback"/> method. 
   To ensure that the SQL Server .NET Data Provider transaction management model
   performs correctly, avoid using other transaction management models, such as the one provided
   by SQL Server.</para>
		</remarks>
	</doc><doc for="ISqlConnection.BeginTransaction3">
		<summary>
			<para>Begins a database transaction with the specified isolation level and
      transaction name.</para>
		</summary>
		<param name="iso">The isolation level under which the transaction should run.</param>
		<param name="transactionName">The name of the transaction.</param>
		<returns>
			<para>An object representing the new transaction.</para>
		</returns>
		<remarks>
			<para>The value in the <paramref name="transactionName"/> parameter can be used in later calls 
   to <see cref="System.Data.ISqlTransaction.Rollback"/> and in the <paramref name="savePoint
   "/>parameter of the <see cref="System.Data.ISqlTransaction.Save"/> method.</para>
			<para>You must explicity commit or roll back the transaction 
   using the <see cref="System.Data.ISqlTransaction.Commit"/> or
<see cref="System.Data.ISqlTransaction.Rollback"/> method. 
   To ensure that the SQL Server .NET Data Provider transaction management model
   performs correctly, avoid using other transaction management models, such as the one provided
   by SQL Server.</para>
		</remarks>
	</doc></docs>
