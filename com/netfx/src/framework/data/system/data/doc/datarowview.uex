<docs>
	<doc for="DataRowView.Equals">
		<summary>
			<para>Gets a value indicating whether the current <see cref="System.Data.DataRowView"/> is
    identical to the specified object.</para>
		</summary>
		<param name="other">An <see cref="System.Object"/> to be compared.</param>
		<returns>
			<para>
				<see langword="true"/>, if <paramref name="object "/>is a <see cref="System.Data.DataRowView"/> and it 
    returns the same row as the current <see cref="System.Data.DataRowView"/>; otherwise,
 <see langword="false"/> .</para>
		</returns>
	</doc>
	<doc for="DataRowView.Row">
		<summary>
			<para>Gets the <see cref="System.Data.DataRow"/>
 being viewed.</para>
		</summary>
		<value>
			<para>The <see cref="System.Data.DataRow"/> being viewed by the <see cref="System.Data.DataRowView"/>.</para>
		</value>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRowView.Row"/>
 property to print the value of the third column in each modified row of a
 <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataRowView.Row Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRowView"/>
		<seealso cref="System.Data.DataRow"/>
	</doc>
	<doc for="DataRowView.BeginEdit">
		<summary>
			<para>Begins an edit procedure.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Data.DataRowView.BeginEdit"/> method is identical to the
 <see cref="System.Data.DataRow.BeginEdit" qualify="true"/> method of the <see cref="System.Data.DataRow"/>. After calling <see cref="System.Data.DataRowView.BeginEdit"/>, any changes made to the <see cref="System.Data.DataRowView"/> can be 
    rolled back by calling <see cref="System.Data.DataRow.CancelEdit"/>.
    Call the <see cref="System.Data.DataRowView.BeginEdit"/> method before allowing users to change row values.
    After values have been changed, you retrieve the new values by setting the
 <see cref="System.Data.DataRowView.RowVersion"/> to <see langword="DataRowVersion.Proposed"/>. Check 
    the values with a business rule, and roll back the changes if needed by calling
 <see cref="System.Data.DataRowView.CancelEdit"/>, or call <see cref="System.Data.DataRowView.EndEdit"/> 
 to accept the changes.</para>
		</remarks>
		<example>
			<para>The following example edits a row in a <see cref="System.Data.DataRowView"/>. calling the <see cref="System.Data.DataRowView.BeginEdit"/> before, and <see cref="System.Data.DataRowView.EndEdit"/>afterwards.</para>
			<codelink SampleID="Classic WebData DataRowView.BeginEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataView.AllowDelete"/>
		<seealso cref="System.Data.DataView.AllowEdit"/>
		<seealso cref="System.Data.DataView.AllowNew"/>
		<seealso cref="System.Data.DataRowView.CancelEdit"/>
		<seealso cref="System.Data.DataRow"/>
		<seealso cref="System.Data.DataRowView.EndEdit"/>
	</doc>
	<doc for="DataRowView.CancelEdit">
		<summary>
			<para>Cancels an edit procedure.</para>
		</summary>
		<remarks>
			<para>After calling <see cref="System.Data.DataRowView.CancelEdit"/>, all changes to the row are rolled back. You can
    also roll back changes by calling <see cref="System.Data.DataTable.RejectChanges"/> on the parent <see cref="System.Data.DataTable"/>.</para>
		</remarks>
		<example>
			<para>The following example edits a row in a <see cref="System.Data.DataView"/>. The <see cref="System.Data.DataRowView.CancelEdit"/> method is called to cancel the changes if the validation fails.</para>
			<codelink SampleID="Classic WebData DataRowView.BeginEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataView.AllowDelete"/>
		<seealso cref="System.Data.DataView.AllowEdit"/>
		<seealso cref="System.Data.DataView.AllowNew"/>
		<seealso cref="System.Data.DataRowView.BeginEdit"/>
		<seealso cref="System.Data.DataRow"/>
		<seealso cref="System.Data.DataRowView.EndEdit"/>
		<seealso cref="System.Data.DataRowView.RowVersion"/>
	</doc>
	<doc for="DataRowView.EndEdit">
		<summary>
			<para>
       Ends an edit procedure.
    </para>
		</summary>
		<example>
			<para>
       The following example edits a row in a <see cref="System.Data.DataView"/>. calling the <see cref="System.Data.DataRowView.BeginEdit"/> before, and <see cref="System.Data.DataRowView.EndEdit"/>afterwards.
    </para>
			<codelink SampleID="Classic WebData DataRowView.EndEdit Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataView.AllowDelete"/>
		<seealso cref="System.Data.DataView.AllowEdit"/>
		<seealso cref="System.Data.DataView.AllowNew"/>
		<seealso cref="System.Data.DataRowView.CancelEdit"/>
		<seealso cref="System.Data.DataRow"/>
		<seealso cref="System.Data.DataRowView.BeginEdit"/>
	</doc>
	<doc for="DataRowView.Delete">
		<summary>
			<para>Deletes a row.</para>
		</summary>
		<remarks>
			<para>The row is not permanently deleted until <see cref="System.Data.DataTable.AcceptChanges"/> is invoked on the <see cref="System.Data.DataTable"/> that row belongs to.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRowView.Delete"/> 
 method on a row.</para>
			<codelink SampleID="Classic WebData DataRowView.Delete Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRowView.BeginEdit"/>
	</doc>
	<doc for="DataRowView.IsNew">
		<summary>
			<para>Indicates whether a <see cref="System.Data.DataRowView"/> is new.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the row is new; otherwise,
<see langword="false"/> .</para>
		</value>
	</doc><doc for="DataRowView.IsEdit">
		<summary>
			<para> Indicates whether the row is in edit mode.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the row is in edit mode;
   otherwise, <see langword="false"/> .</para>
		</value>
		<seealso cref="System.Data.DataRowView.BeginEdit"/>
	</doc><doc for="DataRowView.GetHashCode">
		<summary>
			<para>Returns the hash code of the <see cref="System.Data.DataRow"/> object.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code, one, which represents 
      Boolean <see langword="true"/> if the value of this instance is nonzero; otherwise, the
      integer, zero, which represents Boolean <see langword="false"/> .</para>
		</returns>
	</doc><doc for="DataRowView">
		<summary>
			<para>Represents a customized view of a <see cref="System.Data.DataRow"/> exposed as a fully featured Windows Forms
   control.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded read operations. You must synchronize any 
      write operations.</para>
		</threadsafe>
		<remarks>
			<para>Whenever data is displayed (for example in a <see cref="T:System.Windows.Forms.DataGrid"/> control), only one
   version of each row can be displayed. The displayed row is a <see cref="System.Data.DataRowView"/>.</para>
			<para>A <see cref="System.Data.DataRowView"/> can have one of four different version
states:<see langword="Default"/>, <see langword="Original"/>,
<see langword="Current"/>, and <see langword="Proposed"/>
.</para>
			<para> After invoking <see cref="System.Data.DataRow.BeginEdit"/> on a <see cref="System.Data.DataRow"/>, any
edited value becomes the <see langword="Proposed "/>value. Until either <see cref="System.Data.DataRowView.CancelEdit"/>
or EndEdit is invoked, the row has an Original and a Proposed
version. If CancelEdit is invoked, the proposed version is discarded, and the
value reverts to the original. If EndEdit is invoked, the DataRowView no longer
has a Proposed version; instead, the proposed value becomes the current value.
Default values are available only on rows that have columns with default values
defined.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.Data.DataTable"/> with two
   columns, and adds one row to the table. Various versions of the row are then
   printed. For example, <see cref="System.Data.DataRowView.BeginEdit"/> is invoked, the row values are
   changed, and <see langword="Original"/>, <see langword="Proposed"/>, and
<see langword="Current "/>
values are printed.</para>
			<codelink SampleID="Classic WebData DataRowView Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow"/>
	</doc><doc for="DataRowView.this">
		<overload>
			<para>Gets or sets a value in a specified column.</para>
		</overload>
		<summary>
			<para>Gets or sets a value in a specified column.</para>
		</summary>
		<param name="ndx">The specified column.</param>
		<value>
			<para>The value of the column.</para>
		</value>
		<example>
			<para>The following
      example displays the value in each item of each
      <see cref="System.Data.DataRowView"/> in a <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataRowView.this2 Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataRowView.this1">
		<summary>
			<para>Gets or sets a value in a specified column.</para>
		</summary>
		<param name="property">String that contains the specified column.</param>
		<value>
			<para>The value of the column.</para>
		</value>
		<example>
			<para>The following
      example appends text to the value of a column in each
      modified row of a <see cref="System.Data.DataView"/>.</para>
			<codelink SampleID="Classic WebData DataRowView.this Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataRowView.DataView">
		<summary>
			<para>Gets the <see cref="System.Data.DataView"/> to which this row belongs.</para>
		</summary>
		<value>
			<para>The <see langword="DataView"/> to which this row belongs.</para>
		</value>
		<example>
			<para>The following example returns the <see cref="System.Data.DataView"/> of the
   specified <see cref="System.Data.DataRowView"/>.</para>
			<codelink SampleID="Classic WebData DataRowView.DataView Example" SnippetID="1"/>
		</example>
	</doc><doc for="DataRowView.CreateChildView">
		<overload>
			<para>Returns a <see cref="System.Data.DataView"/> for the child <see cref="System.Data.DataTable"/>.</para>
		</overload>
		<summary>
			<para>Returns a <see cref="System.Data.DataView"/> for the child <see cref="System.Data.DataTable"/> with the specified <see cref="System.Data.DataRelation"/> .</para>
		</summary>
		<param name="relation">The <see cref="System.Data.DataRelation"/> object.</param>
		<returns>
			<para>a <see cref="System.Data.DataView"/> for the child <see cref="System.Data.DataTable"/>.</para>
		</returns>
	</doc>
	<doc for="DataRowView.CreateChildView1">
		<summary>
			<para>Returns a <see cref="System.Data.DataView"/> for the child <see cref="System.Data.DataTable"/> with the specified <see cref="System.Data.DataRelation"/> name.</para>
		</summary>
		<param name="relationName">A string containing the <see cref="System.Data.DataRelation"/> name.</param>
		<returns>
			<para>a <see cref="System.Data.DataView"/> for the child <see cref="System.Data.DataTable"/>.</para>
		</returns>
	</doc>
	<doc for="DataRowView.RowVersion">
		<summary>
			<para>Gets the current version description of the <see cref="System.Data.DataRow"/>.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Data.DataRowVersion"/> values. Possible values for the
   RowVersion property are: <see langword="Default"/>, <see langword="Original"/>,
   <see langword="Current"/> , and Proposed.</para>
		</value>
		<remarks>
			<para>
      For more details, see <see cref="System.Data.DataRowVersion"/>.</para>
		</remarks>
		<example>
			<para>The following example uses the <see cref="System.Data.DataRowView.RowVersion"/> property to determine the state of a row in the
   <see cref="System.Data.DataRowView"/>.</para>
			<codelink SampleID="Classic WebData DataRowView.RowVersion Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Data.DataRow.AcceptChanges"/>
		<seealso cref="System.Data.DataRow.BeginEdit"/>
		<seealso cref="System.Data.DataRowVersion"/>
		<seealso cref="System.Data.DataRow.EndEdit"/>
	</doc>
	<doc for="DataRowView.ICustomTypeDescriptor.GetAttributes"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetClassName"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetComponentName"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetConverter"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetDefaultEvent"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetDefaultProperty"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetEditor"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetEvents"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetEvents1"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetProperties"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetProperties1"><nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DataRowView.ICustomTypeDescriptor.GetPropertyOwner">
		<nodoc/>
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc></docs>
