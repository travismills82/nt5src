<docs>
	<doc for="DBConcurrencyException.DBConcurrencyException">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Data.DBConcurrencyException"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DBConcurrencyException"/> class.</para>
		</summary>
		<param name="message">The text string describing the details of the exception.</param>
	</doc><doc for="DBConcurrencyException.DBConcurrencyException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Data.DBConcurrencyException"/> class.</para>
		</summary>
		<param name="message">The text string describing the details of the exception.</param>
		<param name="inner">A reference to an inner exception.</param>
		<remarks>
			<para>You can create a new exception that catches an earlier exception. The code 
      that handles the second exception can make use of the additional information
      from the earlier exception, also called an inner exception, to examine the cause
      of the initial error.</para>
		</remarks>
	</doc><doc for="DBConcurrencyException">
		<summary>
			<para> The exception that is thrown by the DataAdapter during the update operation if the number of rows affected equals zero. </para>
		</summary>
		<remarks>
			<para>The DataAdapter examines the number of rows affected by the execution of
      each insert, update, or delete operation, and throws this exception if the
      number equals zero. This is usually the result of a concurrency violation. </para>
		</remarks>
	</doc><doc for="DBConcurrencyException.Row">
		<summary>
			<para>Gets or sets the value of the <see cref="System.Data.DataRow"/>.</para>
		</summary>
		<value>
			<para> The value of the <see cref="System.Data.DataRow"/>.</para>
		</value>
		<remarks>
			<para>Use <see cref="System.Data.DBConcurrencyException.Row"/> to retrieve the value of the <see cref="System.Data.DataRow"/> row that generated the <see cref="System.Data.DBConcurrencyException"/>. 
   Setting the value of the <see cref="System.Data.DataRow"/> has no effect.</para>
<para>Serialization support does not exist for <see cref="System.Data.DataRow"/> objects. Therefore, if you serialize a <see cref="System.Data.DBConcurrencyException"/> object, the value of the <see cref="System.Data.DBConcurrencyException.Row"/> property in the serialized version of the object is set to a null value.</para>		</remarks>
	</doc></docs>
