//------------------------------------------------------------------------------
/// <copyright file="IVsToolbox.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsToolbox.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using Microsoft.VisualStudio;
    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    [ComImport, System.Runtime.InteropServices.ComVisible(true),System.Runtime.InteropServices.Guid("70E643E2-1673-4764-8A39-63CB1AEE0DC9"), System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown), CLSCompliant(false)]
    internal interface IVsToolbox {

        [PreserveSig]
            int SetCursor();

        NativeMethods.IOleDataObject GetData();

        void DataUsed();

        IVsWindowFrame GetFrame();


        void AddItem(
            NativeMethods.IOleDataObject pDO,
            Microsoft.VisualStudio.Interop.tagTBXITEMINFO ptif,
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab);


        void RemoveItem(
            NativeMethods.IOleDataObject pDO);

        int RegisterDataProvider(IVsToolboxDataProvider pDP);

        void UnregisterDataProvider(
            int dwProvider);

        [return: MarshalAs(UnmanagedType.BStr)]
            string GetTab();


        void AddTab(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab);


        void RemoveTab(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab);


        void SelectTab(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab);

        IEnumToolboxTabs EnumTabs();


        void SelectItem(
            NativeMethods.IOleDataObject pDO);

        IEnumToolboxItems EnumItems(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab);


        void SetItemInfo(
            NativeMethods.IOleDataObject pDO,
            int ptif);


        void AddActiveXItem(
            ref Guid clsid,
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab,
            IVsHierarchy pHierarchy);


        void UpdateToolboxUI();

        int AddItemFromFile(
            [MarshalAs(UnmanagedType.BStr)] 
            string pszFileName,
            IVsHierarchy pHierSource);

        int IsCurrentUser(
            [MarshalAs(UnmanagedType.Interface)] 
            object pUser);


        void AddTabEx(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab,
            int tv);


        void SetTabView(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab,
            int tv);

        int GetTabView(
            [MarshalAs(UnmanagedType.BStr)] 
            string lpszTab);

    }
}
