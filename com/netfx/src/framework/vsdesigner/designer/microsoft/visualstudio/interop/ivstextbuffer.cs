//------------------------------------------------------------------------------
/// <copyright file="IVsTextBuffer.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsTextBuffer.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    [ComImport(),Guid("C08E5275-0D26-4DE9-8892-994024C23750"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]
    internal interface IVsTextBuffer {

        void LockBuffer();

        void UnlockBuffer();

        void InitializeContent(
            [MarshalAs(UnmanagedType.LPWStr)] 
            string pszText,
            int iLength);

        int GetStateFlags();

        void SetStateFlags(int dwReadOnlyFlags);

        void GetPositionOfLine(
            int iLine,
            out int piPosition);

        void GetPositionOfLineIndex(
            int iLine,
            int iIndex,
            out int piPosition);

        void GetLineIndexOfPosition(
            int iPosition,
            out int piLine,
            out int piColumn);


        void GetLengthOfLine(
            int iLine,
            out int piLength);


        void GetLineCount(out int piLineCount);

        void GetSize(out int piLength);

        Guid GetLanguageServiceID();

        void SetLanguageServiceID(ref Guid guidLangService);

        void GetUndoManager(out IOleUndoManager ppUndoManager);

        void AdviseTextBufferEvents(
            [MarshalAs(UnmanagedType.Interface)] 
            object psink,
            out int pdwCookie);

        void UnadviseTextBufferEvents(int dwCookie);

        void AdviseCompoundActionEvents(
            [MarshalAs(UnmanagedType.Interface)] 
            object psink,
            out int pdwCookie);

        void UnadviseCompoundActionEvents(int dwCookie);

        void Reload(int fUndoable);

        void Reserved2();

        void Reserved3();

        void Reserved4();

        void Reserved5();

        void Reserved6();

        void Reserved7();

        void Reserved8();

        void Reserved9();

        void Reserved10();
    }
}
