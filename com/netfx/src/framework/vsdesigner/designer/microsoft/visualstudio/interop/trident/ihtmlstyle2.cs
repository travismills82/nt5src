//------------------------------------------------------------------------------
/// <copyright file="IHTMLStyle2.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// Microsoft.VisualStudio.Interop.Trident.IHTMLStyle2.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop.Trident {
    
    using System;
    using System.Runtime.InteropServices;

    [ComVisible(false),Guid("3050F4A2-98B5-11CF-BB82-00AA00BDCE0B"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsDual)]
    internal interface IHTMLStyle2 {
        
         void SetTableLayout(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetTableLayout();
        
         void SetBorderCollapse(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetBorderCollapse();
        
         void SetDirection(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetDirection();
        
         void SetBehavior(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetBehavior();
        
         void SetExpression(
                [MarshalAs(UnmanagedType.BStr)]
                 string propname,
                [MarshalAs(UnmanagedType.BStr)]
                  string expression,
                [MarshalAs(UnmanagedType.BStr)]
                  string language);

         object GetExpression(
                [MarshalAs(UnmanagedType.BStr)]
                 string propname);

         bool RemoveExpression(
                [MarshalAs(UnmanagedType.BStr)]
                  string propname);
        
         void SetPosition(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetPosition();
        
         void SetUnicodeBidi(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetUnicodeBidi();
        
         void SetBottom(
                  object p);

         object GetBottom();
        
         void SetRight(object p);

         object GetRight();

         void SetPixelBottom(int p);

         int GetPixelBottom();
        
         void SetPixelRight(int p);

         int GetPixelRight();

         void SetPosBottom(float p);

         float GetPosBottom();

         void SetPosRight(float p);

         float GetPosRight();
        
         void SetImeMode(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetImeMode();
        
         void SetRubyAlign(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetRubyAlign();

        
         void SetRubyPosition(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetRubyPosition();

        
         void SetRubyOverhang(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetRubyOverhang();

        
         void SetLayoutGridChar(
                  object p);

         object GetLayoutGridChar();
        
         void SetLayoutGridLine(
                  object p);

         object GetLayoutGridLine();

        
         void SetLayoutGridMode(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetLayoutGridMode();

        
         void SetLayoutGridType(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetLayoutGridType();

        
         void SetLayoutGrid(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetLayoutGrid();

        
         void SetWordBreak(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetWordBreak();

        
         void SetLineBreak(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetLineBreak();

        
         void SetTextJustify(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetTextJustify();

        
         void SetTextJustifyTrim(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetTextJustifyTrim();

        
         void SetTextKashida(object p);

         object GetTextKashida();
        
         void SetTextAutospace(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetTextAutospace();

        
         void SetOverflowX(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetOverflowX();

        
         void SetOverflowY(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetOverflowY();

        
         void SetAccelerator(
                [MarshalAs(UnmanagedType.BStr)]
                  string p);

        [return: MarshalAs(UnmanagedType.BStr)]
          string GetAccelerator();

    }
}
