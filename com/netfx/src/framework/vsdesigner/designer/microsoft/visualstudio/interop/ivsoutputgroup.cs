//------------------------------------------------------------------------------
/// <copyright file="IVsOutputGroup.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsProject.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    [
    ComImport(),Guid("FCC03D95-7C2E-4398-AAAE-0F4B56104FC8"),
    InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown),
    CLSCompliant(false)
    ]
    interface IVsOutputGroup
    {
        // These return identical information regardless of cfg setting:
        void get_CanonicalName(out string pbstrCanonicalName);
        void get_DisplayName(out string pbstrDisplayName);
    
        // The results of these will vary based on the configuration:
    	void get_KeyOutput(out string pbstrCanonicalName);
    
        // Back pointer to project cfg:
        void get_ProjectCfg(out IVsProjectCfg2 ppIVsProjectCfg2);
    
        // The list of outputs.  There might be none!  Not all files go out
        // on every configuration, and a groups files might all be configuration
        // dependent!
        void get_Outputs(uint celt,
                [In, Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0, ArraySubType=UnmanagedType.Interface)] object[] rgpcfg,
    			out uint pcActual);
    
        void get_DeployDependencies(uint celt,
                                       [In, Out, MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] IVsDeployDependency[] rgpdpd,
                                       out uint pcActual);
    	
    	void get_Description(out string pbstrDescription);
    }
}

