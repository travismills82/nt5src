//------------------------------------------------------------------------------
/// <copyright file="IVsShell.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsShell.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    [ComImport(),Guid("FD9DC8E3-2FFC-446D-8C50-99CA4A3D2D1C"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown), CLSCompliant(false)]
    internal interface IVsShell {

        void GetPackageEnum(
            [MarshalAs(UnmanagedType.Interface)]
            out object ppEnum);

        [return: MarshalAs(UnmanagedType.Struct)]
            object GetProperty(int propid);

        void SetProperty(
            int _propid,
            [MarshalAs(UnmanagedType.Struct)]
            object _obj);

        void AdviseBroadcastMessages(
            [MarshalAs(UnmanagedType.Interface)]
            object pSink,
            ref int pdwCookie);

        void UnadviseBroadcastMessages(int dwCookie);

        void AdviseShellPropertyChanges(
            [MarshalAs(UnmanagedType.Interface)]
            object pSink,
            out int pdwCookie);

        void UnadviseShellPropertyChanges(int dwCookie);

        IVsPackage LoadPackage(ref Guid guidPackage);

        [return: MarshalAs(UnmanagedType.BStr)]
            string LoadPackageString(
            ref Guid guidPackage,
            int resid);

        int LoadUILibrary(
            ref Guid guidPackage,
            int dwExFlags);

        int IsPackageInstalled(ref Guid guidPackage);

    }
}
