//------------------------------------------------------------------------------
/// <copyright file="IHTMLDOMNode.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IHTMLDOMNode.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop.Trident {
    
    using System;
    using System.Runtime.InteropServices;

    [ComVisible(true),Guid("3050F5DA-98B5-11CF-BB82-00AA00BDCE0B"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsDual)]
    internal interface IHTMLDOMNode {

    	
    	 int GetNodeType();

    	
    	  IHTMLDOMNode GetParentNode();

    	
    	 bool HasChildNodes();

    	[return: MarshalAs(UnmanagedType.Interface)]
    	  object GetChildNodes();

    	[return: MarshalAs(UnmanagedType.Interface)]
    	  object GetAttributes();

    	
    	  IHTMLDOMNode InsertBefore(
    		
    		  IHTMLDOMNode newChild,
    		
    		  Object refChild);

    	
    	  IHTMLDOMNode RemoveChild(
    		
    		  IHTMLDOMNode oldChild);

    	
    	  IHTMLDOMNode ReplaceChild(
    		
    		  IHTMLDOMNode newChild,
    		
    		  IHTMLDOMNode oldChild);

    	
    	  IHTMLDOMNode CloneNode(
    		
    		 bool fDeep);

    	
    	  IHTMLDOMNode RemoveNode(
    		
    		 bool fDeep);

    	
    	  IHTMLDOMNode SwapNode(
    		
    		  IHTMLDOMNode otherNode);

    	
    	  IHTMLDOMNode ReplaceNode(
    		
    		  IHTMLDOMNode replacement);

    	
    	  IHTMLDOMNode AppendChild(
    		
    		  IHTMLDOMNode newChild);

    	[return: MarshalAs(UnmanagedType.BStr)]
    	  string GetNodeName();

    	
    	 void SetNodeValue(
    		
    		  Object p);

    	
    	 Object GetNodeValue();

    	
    	  IHTMLDOMNode GetFirstChild();

    	
    	  IHTMLDOMNode GetLastChild();

    	
    	  IHTMLDOMNode GetPreviousSibling();

    	
    	  IHTMLDOMNode GetNextSibling();

    }
}
