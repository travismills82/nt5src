//------------------------------------------------------------------------------
/// <copyright file="IVsTaskItem2.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsTaskItem2.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    [ComImport, ComVisible(true), Guid("970A6925-5FFA-4A77-972F-7AB90C0130E5"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]
    internal interface IVsTaskItem2 {

        [PreserveSig]
            int GetPriority(out int priority);

        [PreserveSig]
            int SetPriority(int ptpPriority);

        [PreserveSig]
            int GetCategory(out int category);

        [PreserveSig]
            int GetSubcategoryIndex(out int subCategoryIndex);

        [PreserveSig]
            int GetImageListIndex(out int imageListIndex);

        [PreserveSig]
            int GetChecked(out int isChecked);

        [PreserveSig]
            int SetChecked(int pfChecked);

        [PreserveSig]
            int GetText(
            [MarshalAs(UnmanagedType.BStr)]
            out string text);

        [PreserveSig]
            int SetText(
            [MarshalAs(UnmanagedType.BStr)]
            string pbstrName);

        [PreserveSig]
            int GetDocument(
            [MarshalAs(UnmanagedType.BStr)]
            out string document);

        [PreserveSig]
            int GetLine(out int line);

        [PreserveSig]
            int GetColumn(out int column);

        [PreserveSig]
            int GetCanDelete(out int canDelete);

        [PreserveSig]
            int GetIsReadOnly(
            int field,
            out int isReadOnly);

        [PreserveSig]
            int GetHasHelp(out int hasHelp);

        [PreserveSig]
            int NavigateTo();

        [PreserveSig]
            int NavigateToHelp();

        [PreserveSig]
            int OnFilterTask(int fVisible);

        [PreserveSig]
            int OnDeleteTask();

        [PreserveSig]
            int GetBrowseObject(
            [MarshalAs(UnmanagedType.Interface)]
            out object browseObject);

    }
}
