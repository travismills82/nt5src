//------------------------------------------------------------------------------
/// <copyright file="IOleUndoManager.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IOleUndoManager.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    [ComImport(), ComVisible(true),Guid("D001F200-EF97-11CE-9BC9-00AA00608E01"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]
    internal interface IOleUndoManager {

        void Open(
            IOleParentUndoUnit pPUU);

        void Close(
            IOleParentUndoUnit pPUU,
            bool fCommit);

        void Add(IOleUndoUnit pUU);

        [PreserveSig]
        int GetOpenParentState(out int pdwState);

        [PreserveSig]
            int DiscardFrom(IOleUndoUnit pUU);

        void UndoTo(IOleUndoUnit pUU);

        void RedoTo(IOleUndoUnit pUU);

        [return: MarshalAs(UnmanagedType.Interface)]
            object EnumUndoable();

        [return: MarshalAs(UnmanagedType.Interface)]
            object EnumRedoable();

        [return: MarshalAs(UnmanagedType.BStr)]
            string GetLastUndoDescription();

        [return: MarshalAs(UnmanagedType.BStr)]
            string GetLastRedoDescription();

        void Enable(int fEnable);
    }
}
