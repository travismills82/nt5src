//------------------------------------------------------------------------------
// <copyright file="ISelectionContainer.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// ISelectionContainerInt.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.ComponentModel;
    using System.Diagnostics;
    using System;

    /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer"]/*' />
    /// <devdoc>
    ///    <para>[To be supplied.]</para>
    /// </devdoc>
    [
    ComImport(),Guid("6D5140C6-7436-11CE-8034-00AA006009FA"), 
    InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)
    ]
    public interface ISelectionContainer {

        /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer.CountObjects"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        int CountObjects(int dwFlags);

        /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer.GetObjects"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        void GetObjects(
            int dwFlags,
            int cObjects,
            IntPtr rgpUnkObjects);

        /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer.SelectObjects"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        void SelectObjects(
            int cSelect,
            [MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.Interface)] 
            object[] prgUnkObjects,
            int dwFlags);
    }
    
    /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer"]/*' />
    /// <devdoc>
    ///    <para>[To be supplied.]</para>
    /// </devdoc>
    [
    ComImport(),Guid("6D5140C6-7436-11CE-8034-00AA006009FA"), 
    InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)
    ]
    internal interface ISelectionContainerOptimized {

        /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer.CountObjects"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        int CountObjects(int dwFlags);

        /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer.GetObjects"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        void GetObjects(
            int dwFlags,
            int cObjects,
            [Out, MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.IUnknown, SizeParamIndex=1)]
            object[] rgpUnkObjects);

        /// <include file='doc\ISelectionContainer.uex' path='docs/doc[@for="ISelectionContainer.SelectObjects"]/*' />
        /// <devdoc>
        ///    <para>[To be supplied.]</para>
        /// </devdoc>
        void SelectObjects(
            int cSelect,
            [MarshalAs(UnmanagedType.LPArray, ArraySubType=UnmanagedType.Interface)] 
            object[] prgUnkObjects,
            int dwFlags);
    }
}
