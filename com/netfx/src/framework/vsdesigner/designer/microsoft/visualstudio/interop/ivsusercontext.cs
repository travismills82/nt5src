//------------------------------------------------------------------------------
/// <copyright file="IVsUserContext.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsUserContext.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {
    
    using System;
    using System.Diagnostics;
    using System.Runtime.InteropServices;
    
    [ComImport, ComVisible(true), Guid("761081DF-D45F-4683-9B9E-1B7241E56F5C"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown)]
    internal interface IVsUserContext {
    	
    	void AddAttribute(
    		 tagVsUserContextAttributeUsage usage,
    		 [MarshalAs(UnmanagedType.LPWStr)] 
    		 string szName,
    		 [MarshalAs(UnmanagedType.LPWStr)] 
    		 string szValue);

    	[PreserveSig]
    	int RemoveAttribute(
    	     [MarshalAs(UnmanagedType.LPWStr)] 
    		 string szName,
    	     [MarshalAs(UnmanagedType.LPWStr)] 
    		 string szValue);

    	int AddSubcontext(
    	     IVsUserContext pSubCtx,
    		 int priority);

    	
    	void RemoveSubcontext(
    		 int cookie);

    	
    	int CountAttributes(
    		 [MarshalAs(UnmanagedType.BStr)] 
    		 string pszName,
    		 int fIncludeChildren);

    	[return: MarshalAs(UnmanagedType.BStr)]
    	string GetAttribute(
    		 int iAttribute,
    		 [MarshalAs(UnmanagedType.LPWStr)] 
    		 string pszName,
    		 int fIncludeChildren,
    		 out string pbstrName);

    	
    	int CountSubcontexts();

    	  IVsUserContext GetSubcontext(
    		 int i);

    	bool IsDirty();

    	
    	void SetDirty(
    		 bool fDirty);

    	
    	void Update();

    	int AdviseUpdate(
    		  object pUpdate);

    	
    	void UnadviseUpdate(
    		 int dwCookie);

        tagVsUserContextAttributeUsage GetAttrUsage(
             int index,
             bool fIncludeChildren);
        
         
        void RemoveAllSubcontext();
        
        int GetPriority();
        
        void RemoveAttributeIncludeChildren(
                      [MarshalAs(UnmanagedType.LPWStr)]
                      string szName,
                      [MarshalAs(UnmanagedType.LPWStr)]
                      string szValue);
        
        [return: MarshalAs(UnmanagedType.BStr)]
        string GetAttributePri(
                      int iAttribute,
                      [MarshalAs(UnmanagedType.LPWStr)]
                      string pszName,
                      bool fIncludeChildren,
                      out int piPriority,
                      [MarshalAs(UnmanagedType.BStr)]
                      out string pbstrName);
    }
}

