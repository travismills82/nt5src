//------------------------------------------------------------------------------
/// <copyright file="IVsPersistDocData.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsPersistDocData.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VisualStudio.Interop {

    using System.Runtime.InteropServices;
    using System.Diagnostics;
    using System;

    // The only thing we use these interfaces for is as a forward
    // to a COM-based doc data. So I don't adulterate the values at all
    // to make the marshaling as simple as possible.
    //
    [ComImport(),Guid("D5D49C61-1C0B-4ea1-9ADB-A79FB1DBC7B5"), InterfaceTypeAttribute(ComInterfaceType.InterfaceIsIUnknown), CLSCompliant(false)]
    interface IVsPersistDocData {
        
        [PreserveSig]
        int GetGuidEditorType(IntPtr ptr);
        
        [PreserveSig]
        int IsDocDataDirty(IntPtr ptr);
        
        [PreserveSig]
        int SetUntitledDocPath(IntPtr ptr);
        
        [PreserveSig]
        int LoadDocData([MarshalAs(UnmanagedType.LPWStr)] string pszMkDocument);
        
        [PreserveSig]
        int SaveDocData(int dwSave, out string strMkDocumentNew, out bool saveCanceled);
        
        [PreserveSig]
        int Close();
        
        [PreserveSig]
        int OnRegisterDocData(int docCookie, IntPtr ptr, int itemid);
        
        [PreserveSig]
        int RenameDocData(int grfAttributes, IntPtr ptr, int itemid, IntPtr psz);
        
        [PreserveSig]
        int IsDocDataReloadable(IntPtr ptr);
        
        [PreserveSig]
        int ReloadDocData(int grfFlags);
    }
}

