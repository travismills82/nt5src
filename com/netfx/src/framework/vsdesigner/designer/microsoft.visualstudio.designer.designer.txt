
# This is the [Design] text we append to the designer window title in Visual Studio.
DesignerCaption=[Design]

# We append this to the designer window title in VS when the file is read-only.
DesignerReadOnlyCaption=[Read Only]

# The description for the "Name" property of controls and components.
ShadowPropName=Indicates the name used in code to identify the object.

# In Tools->Options, this is the title of the designer options dialog tab.  This is what shows up in the tree view on the left.
DesignerOptionsPageTitle=Windows Forms Designer

# In Tools->Options, this is the "General" sub category on the same tab.
DesignerOptionsPageGeneralTitle=General
VisualStudioCategory_GridSettings=GridSettings

AddComponentsPageTitle=Add .Net Framework Components
AddComponentsGAC=Global Assembly Cache

EDITORNoDesignerService=Visual Studio is unable to open '{0}' in design view.\r\nThe designer service is not installed correctly.

#=------------------------------------------------------------------=
# Property Categories
#
CatDesign=Design

#=------------------------------------------------------------------=
# Designer options resources
#
DesignerOptionsGridSizeDesc=Sets the default X and Y grid sizing on designers
DesignerOptionsSelectionCacheSizeDesc=Sets the number of objects for which to preserve PropertyBrowser state
DesignerOptionsShowGridDesc=Sets if designers should display sizing grid by default
DesignerOptionsSnapToGridDesc=Sets if designers should snap to grid by default

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# CodeDomSerializer error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Happens when we can't find a base class that satisifes designer requirements.  Example: we can't find a designer for
# the base class, the base class is something that we couldn't find (My.Foo, where this class couldn't be loaded...)
# To fix, people need to derive from a base class that supports designers.  If they are deriving from something in their
# project, like a inherited form or control, they need to make sure the project is built.
SerializerNoRootSerializer=The designer could not be shown for this file because none of the classes within it can be designed.

# Same error as above, only we were able to find more information.  Here we were able to identify all the classes in the file, and
# under this error we will list why each class failed our requirements.
SerializerNoRootSerializerWithFailures=The designer could not be shown for this file because none of the classes within it can be designed.  The designer inspected the following classes in the file: \r\n{0}

# Possible failures that will be listed by the above error.  Fix described problem
# and close and reopen the designer window.

# Class wasn't referenced in the project, so we couldn't load it.
SerializerTypeFailedTypeNotFound=\t{0} --- The base class '{1}' could not be loaded.  Ensure the assembly has been referenced or built if it is part of the project.

# We loaded the class, but it can't be designed because the implementor of the class
# didn't provide a designer.
SerializerTypeFailedTypeNotDesignable=\t{0} --- The base class '{1}' cannot be designed.

# We loaded the class and found a designer, but we couldn't load that designer.  Either
# setup error or the user has installed the redist version only.
SerializerTypeFailedTypeDesignerNotInstalled=\t{0} --- The designer for base class '{1}' is not installed.

# Due to restrictions in the VS project system, only the first type can be designable.  We detect the case where the 
# designer can load just fine, but the type it will load against is not the fisrt type in the file.
SerializerTypeNotFirstType=The class {0} can be designed, but is not the first class in the file.  Visual Studio requires that designers use the first class in the file.  Move the class code so that it is the first class in the file and try loading the designer again.

# Two "button1" declarations, for example.  Also, declarations must be unique across inherited forms too, so you can't have Form1 with button1
# and a Form2 that derives from Form1 that also has a button1.  Must also be unique regardless of case.  This 
# is invoked while we are parsing code.
SerializerDuplicateComponentDecl=Duplicate declaration of member '{0}'

# This is an internal error in the serializer.  It's related to SerializerObjectHasName
# Contact MS for a fix.
SerializerNameInUse=The name '{0}' is already used by another object.

# This is an internal error in the serializer.  It indciates that the serializer has tried to name
# an object twice, which isn't supported.  Call MS for fix.
SerializerObjectHasName=Cannot name the object '{0}' because it is already named '{1}'.

# This is an internal error in the designer.  It indicates that the designer has tried to add an event 
# handling method to a component that does not have a member variable in the designer.  Call control vendor for fix.
SerializerNoComponentSite=Cannot create a method name for the requsted component because it is not a member of the design container.

# Used during parsing to indicate invalid code statements.  Fix code to remove compile errors.
SerializerInvalidIdentifier='{0}' is not a valid identifier.

# Intenral error in the serializer.  The serializer has offered an instance of a type that does not
# match the current architecture we're using.  For example, we're emitting to the CodeDom but it
# gave us an XML serializer.  Contact control vendor (because they own the serializers).
SerializerBadSerializationObject=The serialization data object is not of the proper type.

# Happens when we are trying to create an event handling method.  This can happen if an event
# was created by a non CLS-compliant language. There is something wrong with the event type.
# contact control vendor.
SerializerBadDelegate=Delegate class '{0}' has no Invoke method.  Is this class a delegate?

# While parsing we couldn't find a constructor that had matching parameters.  Seems obvious,
# but it can also happen if we couldn't convert parameter types. Example: Point(int, int) and
# the user gave floats.  We're worse at this than the compiler.  To fix: use a different
# ctor or provide an explicit cast.
SerializerNoMatchingCtor=Type '{0}' does not have a constructor with parameters of types {1}.

# Happens when we are trying to wire up an event method and we couldn't find one or more 
# parameter types for the method.  Usually caused by a missing reference.  Add the reference
# containing the type to the project and try again.
SerializerInvalidProjectReferences=Could not load type '{0}'. Please make sure that the assembly containing this type is added to the project references.

XmlParseException=The designer cannot process the code at line {0}, please see the Task List for details.  The code within the method '{1}' is generated by the designer and should not be manually modified.  Please remove any changes and try opening the designer again.
XmlUnknownCode=Failed to parse the following code: \r\n\r\n{0}\r\n\r\nThe code within the method '{1}' is generated by the designer and should not be manually modified.  Please remove any changes and try opening the designer again.
XmlUnknownCodeWithLine=The designer cannot process the code at line {0}: \r\n\r\n{1}\r\n\r\nThe code within the method '{2}' is generated by the designer and should not be manually modified.  Please remove any changes and try opening the designer again.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# CodeDomSerializer resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# This is just the comment tag on the expandable node in code view that wraps InitializeComponent.
SerializerDesignerGeneratedCode=Designer Generated Code

# We emit a comment into the source code in place of statements we failed to write out because
# of an error.
FailedToGenerateCode=Code generation for '{0}' failed because of Exception '{1}'.
DesignerCodeGeneration=Designer generated code

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerHost error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Inherited controls are "owned" by their inheriting class, so you can't rename or destroy them.
CODEMANCantDestroyInheritedComponent=Cannot remove or destroy inherited component '{0}'.

# Add a group box to the same group box.  That would cause a recursion at runtime. This can also
# happen if in Form1, there is code in InitializeComponent that creates another instance of Form1.
CODEMANCyclicAdd=The component cannot be added because it contains a circular reference to '{0}'.

CODEMANOnUnload=The component cannot be added because the container is in the process of being unloaded.

# Same as SerializerTypeFailedTypeNotDesignable, but can sit stand-alone.
CODEMANNoTopLevelDesigner=Visual Studio was unable to find a designer for classes of type '{0}'.

# Same as SerializerTypeFailedTypeNotFound, but sometimes it's used for SerializerTypeFailedTypeDesignerNotInstalled
CODEMANNoBaseClass=Visual Studio cannot open a designer for the file because the class within it does not inherit from a class that can be visually designed.

# This is an error in the component you just placed or loaded.  It indicates that the component provided
# a constructor that takes an IContainer, but that in this constructor the component broke the rules
# and didn't add itself to the container.  The designer will work fine, but there may be problems with
# the component at runtime.  Contact component vendor.  If it's your component, call add in the constructor.
CODEMANDidntCallAddInConstructor=Component '{0}' did not call container.Add() in its constructor.

# Duplicate name message that is presented to the user when the name is changed in the properties window.
CODEMANDupComponentName=There is already a component named '{0}'.  Components must have unique names, and names must be case-insensitive.  A name also cannot conflict with the name of any component in an inherited class.

# Happens when user tries to rename component to an empty value.
CODEMANEmptyIdentifier=Component name cannot be empty.

# User has tried to rename component to invalid value.  What is valid?  Depends on the
# language.  Same rules apply for component names that apply for identifiers of the language.
CODEMANInvalidIdentifier=Invalid component name: '{0}'.

# This indicates a problem in the root designer.  It means that the designer does not support
# the same view types that VS does.  Today VS view types are restricted to Windows Forms
# and "Passthrough" (which means you're using VSIP interfaces directly).  Contact component
# vendor.
CODEMANUnsupportedTechnology=The class {0} cannot be designed in this version of Visual Studio.  The designer for the class uses unsupported technology.

GlobalEdit=A global edit has been made external to the designer.  Please close and re-open the designer.s

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerHost resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Wrapper message before we show the global failure message for the document.  The real error follows.
# This is never added to an exception, it's just painted on the window.
CODEMANDocumentException=An error occurred while loading the document.  Fix the error, and then try loading the document again.  The error message follows:\r\n\r\n{0}

# Essentially an internal error in the serializer.  It said it wasn't successful, but didn't say why.
CODEMANUnknownLoadError=An error occurred while loading the document.  The document provided no additional information.

# Undo name given to the undo unit that represents a delete of a component.
CODEMANDestroyComponentTransaction=Deleting '{0}'.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerLoader error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# While loading the designer, we failed to find a type.  
DESIGNERLOADERTypeNotFound=The type '{0}' could not be found.  Ensure that the assembly containing the type is referenced.  If the assembly is part of the current development project, ensure that the project has been built.

# Same error as above, but this usually happens because of a metadata attribute.  Check that all assemblies used by
# attributes are also referenced.
DESIGNERLOADERAssemblyNotFound=The assembly '{0}' could not be found.  Ensure that the assembly is referenced.  If the assembly is part of the current development project, ensure that the project has been built.

# This can happen if you have the .cs or .resx file opened in a binary editor, for example.  Designers often require several
# files besides the basic code file.  The editor that has the file open will be surfaced for the user to see.
DESIGNERLOADERIVsTextStreamNotFound=Another editor has '{0}' open in an incompatible mode. Please close the editor and try this operation again.

# Same error as above, only the shell didn't give us a file name.
DESIGNERLOADERIVsTextStreamNotFoundGeneric=Another editor has the file open in an incompatible mode. Please close the editor and try this operation again.

# This happens when VS rejects our request to edit a file.  This is generally due to 
# disk space or memory problems.
DESIGNERLOADEREditFailed=The text in the code editor could not be modified.  Check that the file is not read-only and there is sufficient disk space.

# This happens when the text editor is marked as read only.  Generally users see this when you have
# a Visual Basic project that is in run mode.  In this case Visual Basic locks all edits out of the code files.
BUFFERNoModify=The designer cannot be modified at this time.

# This happens when we can't find a CodeDom engine for the project language.  This can happen if you do an Open With on a file
# that is in a project that doesn't support designers (like the misc files project).
DESIGNERLOADERNoLanguageSupport=The language for this file does not support the necessary code parsing and generation services.  Please ensure the file you are opening is a member of a project and then try to open the file again.

# Similar to above, but this is more internal.  This is a registration problem or designer
# problem.  Call MS.
DESIGNERLOADERNoFileCodeModel=This language engine does not support a CodeModel with which to load a designer.

# Normally we will reload a designer after changes are made automatically. However, the implementor of the designer
# can choose to turn this off.  If it's off, we will display this message prompting the user to
# close and re-open by hand.  Web forms used to do this, but they ended up implementing reload support
# anyway.
DESIGNERLOADERManualReload=Another editor has made changes to {0}.  Close and re-open this designer for those changes to take effect.

#
# The designer emits code in one big burst into the code window.  If the user presses undo in the code window he/she could undo all of those
# designer changes.  We display this message when the user presses undo in the code window as a warning that the designer changes are
# about to be removed.
#
DESIGNERLOADERUndoWarning=Undoing this operation may result in a loss of work.  The operation represents all changes made in the designer before the code window was shown.  These changes will be lost if you proceed.\r\n\r\nDo you want to undo these changes?

# This is again similar to missing CodeDom.  The user had to use Open With to get to this message. The message indicates
# that the language of the project does not support code parsing.
DESIGNERSERVICENoDesignerLoaderForType=Visual Studio is unable to open '{0}' in design view.\r\nNo parser is installed for the file type.

# this means that there is a DesignerLoader registered for the file type, but we couldn't load it.  This is a setup
# error.  Contact language vendor for a fix.
DESIGNERSERVICENoDesignerLoaderClass=A requested language parser is not installed.  The language parser name is '{0}'

# Contact vendor. The vendor has registered a DesignerLoader class in the registry that doesn't actually
# derive from DesignerLoader.
DESIGNERSERVICEBadDesignerLoader=The language parser class '{0}' is not implemented properly.  Please contact the vendor for an updated parser module.

# This is a designer problem.  Contact component vendor for a fix.  It indicates that someone
# has called AddService with an interface and object pair, but the object does not implement
# the interface.
DESIGNERSERVICEInvalidServiceInstance=The service instance must derive from or implement {0}.

# Designer problem. Contact control vendor.  This happens when a designer requests access to
# a tools options page by name, but the page doesn't exist.
DESIGNERPACKAGEUnknownPage=Unable to find page named '{0}'

# Same as above, but for a particular value on a page.  
DESIGNERPACKAGEUnknownPageValue=Unable to find property '{0}' on page '{1}'

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerLoader resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

DESIGNERSERVICEUnknownName=<Unknown>
DESIGNERPACKAGEUnknownName=<Unknown>

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Connection point error messages.
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

ConnPointAdviseFailed=IConnectionPoint::Advise failed with hr=0x{0:X} for event interface {1}.
ConnPointCouldNotCreate=Could not create connection point for event interface '{0}'.
ConnPointSinkIF=The sink object does not implement the event interface.
ConnPointSourceIF=The source object does not expose the {0} event interface.
ConnPointUnhandledType=Unhandled type {0}.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# MenuCommandService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# This happens if the designer adds a command to the command table, but there
# is already a handler for the command.  Contact control vendor for a new
# designer.
MENUCOMMANDSERVICEDuplicateCommand=There is already a command handler for the menu command '{0}'.

#=------------------------------------------------------------------=
# Toolbox tabs
#=------------------------------------------------------------------=

TOOLTABDefault=General
# Note: these are not used in code, but they are accessed late-bound by the toollist.txt file.  Don't nuke them!
TOOLTABWinForms=Windows Forms
TOOLTABComponents=Components
TOOLTABWebForms=Web Forms
TOOLTABMobileWebForms=Mobile Web Forms

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# AssemblyService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Internal designer error.  Something in VS needed a particular service, but
# that service wasn't available.  Generally a problem in MS code, but may happen
# if you try to force a designer to load on a project that can't support it.
ASSEMBLYSERVICEMissingService=The service '{0}' is required, but could not be located.  There may be a problem with your Visual Studio installation.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# TypeResolutionService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Internal MS error, indicates we accessed VS specific goodies
# from the wrong thread.  VS hates this and crashes.
TYPELOADERTypeResolutionServiceInvalidThread=The type resolution service may only be called from the main application thread.

# Contact control vendor.  This indicates someonen has asked for a
# particular assembly, but the name they provided is not a valid
# assembly name (contains garbage, etc).
TYPELOADERInvalidAssemblyName=The assembly name '{0}' is invalid.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# TypeResolutionService resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

TYPELOADERNotifyRebuild=You must rebuild your project for the changes to {0} to show up in any open designers.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# ToolboxService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Designer error.  Contact control vendor.  Indicates that the designer
# tried to access a tab on the toolbox but that tab isn't
# there.
TBXSVCBadCategory=\"{0}\" is not a toolbox category.

# Designer error.  Contact control vendor.  Indicates that the designer
# tried to reference a class on a particular toolbox tab, but it's not
# there.
TBXSVCToolNotInCategory=Category '{1}' does not have a tool for class '{0}'

# Internal MS error.  Contact MS.  We need the Visual Studio toolbox,
# but it's not around.
TBXSVCNoVsToolbox=Cannot access the Visual Studio Toolbox at this time.

# Internal designer error.  Contact control vendor.  The vendor added
# a callback to a toolbox item, but the item already contains a callback.
TBXSVCCreatorAlreadyResigered=There is already a toolbox item creator registered for the format '{0}'.

# This can happen if the data within the toolbox item becomes corrupted or
# the version of the component has changed.  
TBCSVCBadToolboxItem=The toolbox item for '{0}' could not be retrieved from the toolbox.  Try removing the item from the toolbox and adding it back.

# This is similar to the above, except that we got the toolbox item, but the item itself threw
# an exception when we accessed it.  Contact component vendor.
TBCSVCBadToolboxItemWithException=The toolbox item for '{0}' could not be retrieved from the toolbox.  Make sure the assembly that contains the toolbox item is correctly installed.  The toolbox item raised the following error: {1}

# Internal MS error.  Our toolbox enumerator only supports one item at a time.  This is only
# accessible from internal COM interfaces so only MS people can get at it.
TBXCOMPOnlyOneEnum=The Toolbox enumerator object only supports retrieving one item at a time.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# ToolboxService Resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

TBXSVCDefaultTab=General

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# CheckoutService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# User wants to make a change to a file that is checked into SCC.  Normally
# we present the checkout dialog and the user checks out the file. For some
# reason this didn't happen and we failed to check out the file.  Perhaps caused
# by a merge conflict during check out...
CHECKOUTSERVICEUnableToCheckout=Unable to checkout the current file.  The file may be locked, or you may need to check the file manually.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Generic error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# We were asked to create a component, but the object we created doesn't
# implement IComponent.  Contact component vendor.
# 0 - classname
ClassNotIComponent=The object '{0}' does not implement the IComponent interface.

# This is a problem with the user's source code.  The name of the class we're
# designing is not valid for the language.
# 0 - component name
InvalidClassNameIdentifier=The class name is not a valid identifier for this language.

# Wrapper error while parsing.  Generally parsing errors are caused by syntax errors or a problem
# in the parser.  
FailedToParseMethod=Failed to parse method '{0}'. The parser reported the following error '{1}'. Please look in the Task List for potential errors.

# This most often happens when the user tries to connect an event to a control that
# is being inhrited from a base class, but the controls' member variable is private
# so we can't connect it to the method.  Privately inherited controls cannot have
# additional events bound to them.
# 0 - property name
EventReadOnly=Cannot bind an event handler to the '{0}' event because it is read only.

# Contact vendor of object.  We were asked by a designer to create an object, but the object
# threw when we tried.
# 0 - classname, 1 - exception text
ExceptionCreatingObject=An exception occurred while trying to create an instance of {0}. The exception was \"{1}\".

# Generic wrapper exception.  If we get an exception out of nowhere, we wrap it in this and display a dialog.
# We will populate the help link with the help link from the exception that actually happened.
ExceptionInMessageLoop=The following exception has occurred:\r\n\r\n{0}: {1}

# Similar to the parse error listed in serialization, only this happens as a result
# of a designer explicitly asking to create an object with particular parameters in the
# constructor.  Contact component vendor for an update.
# 0 - classname
ClassMissingConstructor=Class {0} has no matching constructor.

;properties window
PbrsSelectedObject=Selected Object
PbrsComponentsComboAccessibleName=Components

# UndoService strings

UNDOComponentAdd0=Add Component
UNDOComponentAdd1=Add {0}
UNDOComponentChange0=Change Component
UNDOComponentChange1=Change {0}
UNDOComponentChange2=Change {0}.{1}
UNDOComponentRemove0=Remove Component
UNDOComponentRemove1=Remove {0}

# Wizard Strings

# Common -- Can we all share it?
CancelButton=Cancel
HelpButton=Help

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# InheritancePicker error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Internal VS error -- the templates for inherited forms are not
# on the disk.  Call MS.
IP_Error1a=Could not locate the project item templates for inherited components.

# Dialog caption for above error.
IP_Error1b=Template Error

# Happens when the user browses to a file, but the file couldn't be opened.
# The file might not be a valid assembly.
IP_Error2a=Assembly {0} Could not be opened. Check that the file still exists.
IP_Error2b=Assembly Error

# Happens when the user specifies a name for an inherited form that already exists in the project.
IP_Error3a='{0}' already exists in '{1}'.  Please enter a unique Name.
IP_Error3b=File Exists

# Happens when the assembly the user picked threw an exception while trying to load.  Generally this
# indicates it isn't a valied assembly file (like a native dll).
IP_Error5a=Unable to load assembly '{0}'.  Ensure that the file is a valid .Net Framework assembly.
IP_Error5b=Assembly Load Error

# We failed to add a reference.
IP_Error6a=Unable to add reference '{0}' to the current application.  Check that a different version of '{0}' is not already referenced.
IP_Error6b=Reference Error

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# StyleDesigner
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# StyleBuilder strings
SB_Caption=Style Builder
SB_OK=OK
SB_Cancel=Cancel
SB_Help=Help

# Miscellaneous common strings
Combo_NotSetValue=<Not Set>

# FontStylePage strings
FntSP_Caption=Font
FntSP_PreviewText=Sample Text
FntSP_FontNameLabel=&Font name
FntSP_FamilyOption=Family:
FntSP_SysFontOption=System font:
FntSP_SysFontCombo_1=Window caption
FntSP_SysFontCombo_2=ToolWindow caption
FntSP_SysFontCombo_3=Dialog text
FntSP_SysFontCombo_4=Icon labels
FntSP_SysFontCombo_5=Menu text
FntSP_SysFontCombo_6=Tooltip text
FntSP_FontAttribLabel=Font attributes
FntSP_ColorLabel=&Color:
FntSP_ItalicsLabel=&Italics:
FntSP_ItalicsCombo_1=Normal
FntSP_ItalicsCombo_2=Italic
FntSP_SmallCapsLabel=S&mall caps:
FntSP_SmallCapsCombo_1=Normal
FntSP_SmallCapsCombo_2=Small caps
FntSP_SizeLabel=&Size
FntSP_SpcSizeOption=Specific:
FntSP_AbsSizeOption=Absolute:
FntSP_AbsSizeCombo_1=XX-Small
FntSP_AbsSizeCombo_2=X-Small
FntSP_AbsSizeCombo_3=Small
FntSP_AbsSizeCombo_4=Medium
FntSP_AbsSizeCombo_5=Large
FntSP_AbsSizeCombo_6=X-Large
FntSP_AbsSizeCombo_7=XX-Large
FntSP_RelSizeOption=Relative:
FntSP_RelSizeCombo_1=Smaller
FntSP_RelSizeCombo_2=Larger
FntSP_WeightLabel=&Bold
FntSP_AbsWtOption=Absolute:
FntSP_AbsWtCombo_1=Normal
FntSP_AbsWtCombo_2=Bold
FntSP_RelWtOption=Relative:
FntSP_RelWtCombo_1=Lighter
FntSP_RelWtCombo_2=Bolder
FntSP_EffectsLabel=Effects
FntSP_EffectNoneCheck=&None
FntSP_EffectUnderlineCheck=&Underline
FntSP_EffectStrikethroughCheck=Stri&kethrough
FntSP_EffectOverlineCheck=&Overline
FntSP_CapitalizationLabel=Capitali&zation:
FntSP_CapitalizationCombo_1=None
FntSP_CapitalizationCombo_2=Initial Cap
FntSP_CapitalizationCombo_3=lowercase
FntSP_CapitalizationCombo_4=UPPERCASE

# FontPicker strings
FP_Caption=Font Picker
FP_OKButton=OK
FP_CancelButton=Cancel
FP_HelpButton=Help
FP_InstructionLabel=Create a font sequence in order of preference:
FP_InstFontLabel=&Installed fonts:
FP_GenericFontLabel=&Generic fonts:
FP_CustomFontLabel=&Custom fonts:
FP_SelectedFonts=&Selected fonts:

# BackgroundStylePage strings
BgSP_Caption=Background
BgSP_PreviewText=Sample Text
BgSP_BackColorLabel=Background color
BgSP_TransparentCheck=T&ransparent
BgSP_ColorLabel=&Color:
BgSP_BackImageLabel=Background image
BgSP_BackImageNoneCheck=&Do not use background image
BgSP_BackImageURLLabel=&Image:
BgSP_BackImageURLSelect=Select Background Image
BgSP_BackImageURLFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All Files(*.*)|*.*|
BgSP_TilingLabel=&Tiling:
BgSP_TilingCombo_1=Tile in horizontal direction
BgSP_TilingCombo_2=Tile in vertical direction
BgSP_TilingCombo_3=Tile in both directions
BgSP_TilingCombo_4=Do not tile
BgSP_ScrollingLabel=&Scrolling:
BgSP_ScrollingCombo_1=Scrolling background
BgSP_ScrollingCombo_2=Fixed background
BgSP_PositionGroup= Position
BgSP_HPosLabel=&Horizontal:
BgSP_HPosCombo_1=Left
BgSP_HPosCombo_2=Center
BgSP_HPosCombo_3=Right
BgSP_HPosCombo_4=Custom
BgSP_VPosLabel=&Vertical:
BgSP_VPosCombo_1=Top
BgSP_VPosCombo_2=Center
BgSP_VPosCombo_3=Bottom
BgSP_VPosCombo_4=Custom

# TextStylePage strings
TxtSP_Caption=Text
TxtSP_PreviewTextNormal=Normal Text
TxtSP_PreviewTextInflow=Inflow Text
TxtSP_PreviewTextPara=sample paragraph text sample paragraph text sample paragraph text sample paragraph text sample paragraph text
TxtSP_PreviewText=Inflow text.<P>Sample Text Line 1<br>Sample Text Line 2(with some whitespace)</P>
TxtSP_AlignmentLabel=Alignment
TxtSP_HorzAlignLabel=&Horizontal:
TxtSP_HorzAlignCombo_1=Left
TxtSP_HorzAlignCombo_2=Centered
TxtSP_HorzAlignCombo_3=Right
TxtSP_HorzAlignCombo_4=Justified
TxtSP_VertAlignLabel=&Vertical:
TxtSP_VertAlignCombo_1=Subscript
TxtSP_VertAlignCombo_2=Superscript
TxtSP_VertAlignCombo_3=Normal
TxtSP_JustificationLabel=&Justification:
TxtSP_JustificationCombo_1=Auto
TxtSP_JustificationCombo_2=Space words
TxtSP_JustificationCombo_3=Newspaper style
TxtSP_JustificationCombo_4=Distribute spacing
TxtSP_JustificationCombo_5=Distribute all lines
TxtSP_SpacingLabel=Spacing between
TxtSP_SpcLettersLabel=L&etters:
TxtSP_SpcWordsLabel=Words:
TxtSP_SpcLinesLabel=&Lines:
TxtSP_SpcCombo_1=Normal
TxtSP_SpcCombo_2=Custom
TxtSP_FlowLabel=Text flow
TxtSP_IndentationLabel=&Indentation:
TxtSP_DirectionLabel=Te&xt direction:
TxtSP_DirectionCombo_1=Left to right
TxtSP_DirectionCombo_2=Right to left
TxtSP_WhitespaceLabel=&Whitespace:
TxtSP_WhitespaceCombo_1=Collapse whitespace
TxtSP_WhitespaceCombo_2=Preserve whitespace
TxtSP_WhitespaceCombo_3=Do not wrap

# EdgesStylePage strings
EdgeSP_Caption=Edges
EdgesSP_MarginsLabel=&Margins
EdgesSP_PaddingLabel=&Padding
EdgesSP_EdgeTopLabel=Top:
EdgesSP_EdgeBottomLabel=Bottom:
EdgesSP_EdgeLeftLabel=Left:
EdgesSP_EdgeRightLabel=Right:
EdgesSP_BordersLabel=Borders
EdgesSP_SidesLabel=Select the &edge to be changed:
EdgesSP_SidesCombo_1=Top
EdgesSP_SidesCombo_2=Bottom
EdgesSP_SidesCombo_3=Left
EdgesSP_SidesCombo_4=Right
EdgesSP_SidesCombo_5=All
EdgesSP_StyleLabel=&Style:
EdgesSP_StyleCombo_1=None
EdgesSP_StyleCombo_2=Solid Line
EdgesSP_StyleCombo_3=Double Line
EdgesSP_StyleCombo_4=Groove
EdgesSP_StyleCombo_5=Ridge
EdgesSP_StyleCombo_6=Inset
EdgesSP_StyleCombo_7=Outset
EdgesSP_WidthLabel=&Width:
EdgesSP_WidthCombo_1=Thin
EdgesSP_WidthCombo_2=Medium
EdgesSP_WidthCombo_3=Thick
EdgesSP_WidthCombo_4=Custom
EdgesSP_ColorLabel=&Color:

# LayoutStylePage strings
LytSP_Caption=Layout
LytSP_FlowControlLabel=Flow control
LytSP_VisibilityLabel=&Visibility:
LytSP_VisibilityCombo_1=Hidden
LytSP_VisibilityCombo_2=Visible
LytSP_DisplayLabel=&Display:
LytSP_DisplayCombo_1=Do not display
LytSP_DisplayCombo_2=As a block element
LytSP_DisplayCombo_3=As an inflow element
LytSP_FloatLabel=Allow te&xt to flow:
LytSP_FloatCombo_1=Don't allow text on sides
LytSP_FloatCombo_2=To the right
LytSP_FloatCombo_3=To the left
LytSP_ClearLabel=Allow &floating objects:
LytSP_ClearCombo_1=On either side
LytSP_ClearCombo_2=Only on right
LytSP_ClearCombo_3=Only on left
LytSP_ClearCombo_4=Do not allow
LytSP_ContentLabel=Content
LytSP_OverflowLabel=&Overflow:
LytSP_OverflowCombo_1=Use scrollbars if needed
LytSP_OverflowCombo_2=Always use scrollbars
LytSP_OverflowCombo_3=Content is not clipped
LytSP_OverflowCombo_4=Content is clipped
LytSP_ClippingGroup= Clipping
LytSP_ClipTopLabel=&Top:
LytSP_ClipLeftLabel=&Left:
LytSP_ClipBottomLabel=&Bottom:
LytSP_ClipRightLabel=&Right:
LytSP_PageBreakGroup=Printing page breaks
LytSP_PgBrBeforeLabel=B&efore:
LytSP_PgBrBeforeCombo_1=Auto
LytSP_PgBrBeforeCombo_2=Force a page break
LytSP_PgBrAfterLabel=&After:
LytSP_PgBrAfterCombo_1=Auto
LytSP_PgBrAfterCombo_2=Force a page break

# PositionStylePage strings
PosSP_Caption=Position
PosSP_PosModeLabel=&Position mode:
PosSP_PosModeCombo_1=Position in normal flow
PosSP_PosModeCombo_2=Offset from normal flow
PosSP_PosModeCombo_3=Absolutely position
PosSP_TopLabel=&Top:
PosSP_LeftLabel=&Left:
PosSP_WidthLabel=&Width:
PosSP_HeightLabel=&Height:
PosSP_ZIndexLabel=&Z-Index:

# ListsStylePage strings
LstSP_Caption=Lists
LstSP_PreviewText_1=List Item 1, Line 1<br>List Item 1, Line 2
LstSP_PreviewText_2=List Item 2, Line 1
LstSP_ListTypeLabel=&Lists:
LstSP_ListTypeCombo_1=Bulleted
LstSP_ListTypeCombo_2=Unbulleted
LstSP_BulletsLabel=Bullets
LstSP_PositionLabel=&Position:
LstSP_PositionCombo_1=Outside (Text is indented in)
LstSP_PositionCombo_2=Inside (Text is not indented)
LstSP_StyleLabel=&Style:
LstSP_StyleCombo_1=Circle
LstSP_StyleCombo_2=Disc
LstSP_StyleCombo_3=Square
LstSP_StyleCombo_4=1 2 3 4 ...
LstSP_StyleCombo_5=i ii iii iv ...
LstSP_StyleCombo_6=I II III IV ...
LstSP_StyleCombo_7=a b c d ...
LstSP_StyleCombo_8=A B C D ...
LstSP_CustomBulletCheck=&Custom bullet
LstSP_CustomImageOption=Image:
LstSP_CustomNoneOption=None
LstSP_CustomImageSelect=Select Bullet Image
LstSP_CustomImageFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All Files(*.*)|*.*|

# OtherStylePage strings
OtherSP_Caption=Other
OtherSP_VisEffectsLabel=Visual effects
OtherSP_FilterLabel=&Filter:
OtherSP_UILabel=User interface
OtherSP_CursorLabel=&Cursor:
OtherSP_CursorCombo_1=Auto
OtherSP_CursorCombo_2=Default
OtherSP_CursorCombo_3=Crosshair
OtherSP_CursorCombo_4=Hand
OtherSP_CursorCombo_5=Move
OtherSP_CursorCombo_6=Top Resize
OtherSP_CursorCombo_7=Bottom Resize
OtherSP_CursorCombo_8=Left Resize
OtherSP_CursorCombo_9=Right Resize
OtherSP_CursorCombo_10=Top-Left Resize
OtherSP_CursorCombo_11=Bottom-Left Resize
OtherSP_CursorCombo_12=Top-Right Resize
OtherSP_CursorCombo_13=Bottom-Right Resize
OtherSP_CursorCombo_14=Text
OtherSP_CursorCombo_15=Hourglass
OtherSP_CursorCombo_16=Help
OtherSP_BehaviorLabel=Behavior
OtherSP_URLLabel=&URL:
OtherSP_BehaviorSelect=Select Behavior
OtherSP_BehaviorFilter=Behavior Files(*.htc)|*.htc|All Files(*.*)|*.*|
OtherSP_TablesLabel=Tables
OtherSP_BordersLabel=&Borders:
OtherSP_BordersCombo_1=Separate cell borders
OtherSP_BordersCombo_2=Collapse cell borders
OtherSP_LayoutLabel=&Layout:
OtherSP_LayoutCombo_1=Auto
OtherSP_LayoutCombo_2=Fixed layout

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Web Forms Designer strings
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Add/Remove components dialog strings
AddRemoveComponentsBrowse=&Browse...
AddRemoveComponentsSDK=Directory
AddRemoveComponentsVersion=Version:
AddRemoveComponentsLanguage=Language:
AddRemoveComponentsAssemblyNameHeader=Assembly Name
AddRemoveComponentsNamespace=Namespace
AddRemoveComponentsUnavailable=(Unavailable)
AddRemoveComponentsDebug={0} (Debug)
AddRemoveComponentsRetail={0} (Retail)
AddRemoveComponentsAssemblyName={0} ({1})
AddRemoveComponentsName=Name
AddRemoveComponentsFilter=Executables (*.dll; *.exe)|*.dll;*.exe|All Files (*.*)|*.*
AddRemoveComponentsBadModule='{0}' is not a Microsoft .NET module.

# This happens if there are bogus or incompatible files in the SDK directories.
#
AddRemoveComponentsSdkErrors=The following assemblies are installed SDK assemblies but could not be shown in the customize toolbox dialog because they are missing one or more components.  Please make sure that all necessary libraries are available:\r\n{0}

# This can happen if the user entered a file to load and we couldn't load all types in the file.  Typically
# this happens if the file has dependencies on assemblies that aren't on the machine.
#
AddRemoveComponentsTypeLoadFailed=The assembly '{0}' could not be loaded.  Check that any dependencies the file requires are installed.

# This can happen if the user gives us a file that is a valid assembly, but that 
# assembly didn't contain anything we can put on the toolbox.
#
AddRemoveComponentsNoComponents=There are no components in '{0}' that can be placed on the toolbox.


#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# installer design strings
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

InstallerDesign_AddInstallerLink=Add &Installer
InstallerDesign_AddInstallerFailed=AddInstaller failed.
InstallerDesign_CouldntGetService=Couldn't get IExtensibilityService.
InstallerDesign_BadProjectType=Unknown project type. Project installers are supported only in Visual Basic and CSharp projects.
InstallerDesign_UnableToAddProjectInstaller=Unable to add installer. The designer could not add a ProjectInstaller.
InstallerDesign_UnableToFindTemplateDir=Unable to add installer.  Could not find templates directory for this project type.
InstallerDesign_NoProjectFilename=Unable to add installer.  Could not determine file type.
InstallerDesign_CoulndtFindTemplate=Couldn't find installer template.
InstallerDesign_CouldntShowProjectInstaller=Unable to add installer. The designer could not be shown for the ProjectInstaller class. Check to make sure there are no syntax errors in the file.
InstallerDesign_NoInstallerAttrib=The given component of type '{0}' does not have an associated installer. (Installers are associated through an InstallerTypeAttribute in the component's metadata.)
InstallerDesign_InstallerNotAnInstaller=The type '{0}', specified as installer for components of type '{1}', is not an installer. It must inherit from System.Configuration.Installer.
InstallerDesign_CouldntCreateInstaller=Could not create installer of type '{0}'.


#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# dynamic properties service strings
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

;
; Exceptions messages
;

ConfigGetNoComponent=No component to get the value from
ConfigSetNoComponent=No component to set the value on
ConfigMissingRoot=The configuration file is not valid because the root element is not <configuration>.
ConfigMissingKey=Missing key attribute on add tag in appSettings section.
ConfigMissingValue=Missing value attribute on add tag in appSettings section.
ConfigLoadError=There was an error loading app.config.  Since the document being loaded uses Dynamic Properties, the config file must be valid.  Correct the following error in app.config:\n\n{0}
ServiceCantGetIDesignerHost=Unable to get IDesignerHost interface.  Dynamic properties not supported.

;
; constant strings
;

ConfigAdvanced=(Advanced)
ConfigConfiguredProperties=Dynamic Properties
ConfigNone=(None)
ConfigDefault=(Default)
ConfigCustom=(Custom)
ConfigEdit=Edit...
ConfigUserAppComment1=    User application and configured property settings go here.
ConfigUserAppComment2=    Example: <add key="settingName" value="settingValue"/> 
ConfigAdvancedDesc=Advanced Dynamic Properties allows you to configure and set key names by which to store any dynamic property values.

;
; DescriptionAttribute
;

ManagedPropServiceDescr=Maps values in the application configuration file <appSettings> section to this component's properties.

InvalidArgument='{1}' is not a valid value for '{0}'.
ObjectDisposed='{0}' has been disposed and can no longer be used.
InvalidNullArgument=Null is not a valid value for '{0}'.
PersisterClassNotFound=<couldn't find resource string "PersisterClassNotFound">
DesignerBatchCreateMenu=Create MenuItem
DesignerBatchDeleteMenu=Delete MenuItem
DesignerBatchMoveMenu=Move MenuItem
MenuDesignerInvalidPropertyValue=Invalid property value for MenuItem.
MenuDesignerInheritedParent=Cannot add a new item to this menu because it is inherited.
MenuDesignerEditMenuVerb=&Edit Menu
MenuDesignerTopLevelSeparator=Top-level menu names cannot contain separators.                                             
