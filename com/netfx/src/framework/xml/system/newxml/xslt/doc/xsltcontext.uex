<docs>
	<doc for="XsltContext.InvokeFunction1">
		<summary>
			<para>Invokes a function with the given name and
       arguments.</para>
		</summary>
		<param name="function">The name of the function to invoke.</param>
		<param name=" args">The arguments of the function call. Each argument is an element in the array.</param>
		<returns>
			<para> An object representing the
       function's return value.</para>
		</returns>
	</doc>
	<doc for="XsltContext.EvaluateVariable">
		<overload>
    Evaluates a variable at
    runtime and returns an object which represents variable's value.
 </overload>
		<summary>
    Evaluates a variable at runtime and returns
    an object which represents variable's value in the given namespace.
 </summary>
		<param name="namespaceURI">The variable's namespace URI.</param>
		<param name=" name">The name of the variable to evaluate.</param>
		<returns>
    Returns an object representing the
    variable's value. The object can be of the following types: number,
    string, boolean, document fragment or nodeset.
 </returns>
	</doc>
	<doc for="XsltContext.InvokeFunction">
		<overload>
			<para>Invokes a function.</para>
		</overload>
		<summary>
			<para>Invokes a function with the given name, prefix and arguments.</para>
		</summary>
		<param name=" prefix">The namespace corresponding to the function.</param>
		<param name="name">The name of the function to invoke.</param>
		<param name=" args">The arguments of the function call. Each argument is an element in the array.</param>
		<param name=" context">The current node to invoke XPath queries within the function call (i.e. the function's execution context).</param>
		<returns>
			<para>An object representing the function's return value.</para>
		</returns>
		<remarks>
			<para>The <paramref name="context"/> is required so that functions which require a node-set
   can be supplied the current XSLT context. For example, the XSLT document function
   can take a node-set. If we had the following XSL string, <c>&lt;xsl:apply-templates
   select="document(@text)/&gt;</c> the <paramref name="context"/> is required to resolve
the XPath query "@text" for the current node.</para>
		</remarks>
	</doc>
	<doc for="XsltContext.EvaluateVariable1">
		<summary>
			<para>Evaluates a variable at runtime and returns
      an object which represents the variable's value.</para>
		</summary>
		<param name="variable">The variable to evaluate (compiled variable).</param>
		<returns>
			<para>Returns an object representing the
      variable's value. The object can be of the following types: number, string,
      boolean, document fragment or nodeset.</para>
		</returns>
		<remarks>
			<para>This method uses a compiled version of the variable 
      created from <see cref="System.Xml.Xsl.XsltContext.ResolveVariable"/>
      .</para>
		</remarks>
	</doc>
	<doc for="IXsltContextVariable.VariableType">
		<summary>
			<para>Gets the <see cref="System.Xml.XPath.XPathResultType"/> representing the XPath type 
   of the variable.</para>
		</summary>
		<value>
   The <see langword="XPathResultType"/>
   representing the XPath type of the variable.
</value>
	</doc><doc for="IXsltContextFunction.ReturnType">
		<summary>
			<para>Gets the <see cref="System.Xml.XPath.XPathResultType"/> representing the XPath type
   returned by the function.</para>
		</summary>
		<value>
   An <see cref="System.Xml.XPath.XPathResultType"/> representing the XPath type returned by the
   function
</value>
	</doc><doc for="IXsltContextFunction.Minargs">
		<summary>
			<para>Gets the minimum number of arguments for the function.
      This enables the user to differentiate between overloaded functions.</para>
		</summary>
		<value>
   The minimum number of arguments for
   the function.
</value>
	</doc><doc for="IXsltContextFunction.Maxargs">
		<summary>
			<para>Gets the maximum number of arguments for the function. This enables the
      user to differentiate between overloaded functions.</para>
		</summary>
		<value>
   The maximum number of arguments for
   the function.
</value>
	</doc><doc for="XsltContext.ResolveFunction">
		<summary>
			<para>When overridden in a derived class, resolves a function
 reference and returns an <see cref="System.Xml.Xsl.IXsltContextFunction"/> representing the
 function. The <see langword="IXsltContextFunction"/>
 is used at execution time to get the
 return value of the function.</para>
		</summary>
		<param name="prefix">The prefix of the function as it appears in the XPath expression.</param>
		<param name=" name">The name of the function.</param>
		<param name=" ArgTypes">An array of argument types for the function being resolved. This allows you to select between methods with the same name (for example, overloaded methods).</param>
		<returns>
			<para>An <see langword="IXsltContextFunction"/> representing
 the function.</para>
		</returns>
	</doc><doc for="XsltContext.ResolveVariable">
		<summary>
			<para>When overridden in a derived class, resolves variable reference and returns an <see cref="System.Xml.Xsl.IXsltContextVariable"/>
representing the variable.</para>
		</summary>
		<param name="prefix">The prefix of the variable as it appears in the XPath expression.</param>
		<param name=" name">The name of the variable.</param>
		<returns>
			<para>An <see langword="IXsltContextVariable"/> representing
 the variable at runtime.</para>
		</returns>
		<remarks>
			<para>The <see langword="IXsltContextVariable"/> is used at
 execution time to get the value of the variable.
 </para>
		</remarks>
	</doc><doc for="IXsltContextVariable.IsLocal">
		<summary>
			<para> Gets a value indicating whether the variable is
 local.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the
 variable is a local variable in the current context; otherwise
<see langword="false"/>.</para>
		</value>
	</doc><doc for="XsltContext.XsltContext2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Xsl.XsltContext"/> 
class.</para>
		</summary>
	</doc><doc for="XsltContext.XsltContext1">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Xml.Xsl.XsltContext"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Xsl.XsltContext"/> class with the specified <see cref="System.Xml.NameTable"/> .</para>
		</summary>
		<param name="table">The <see langword="NameTable"/> to use.</param>
	</doc><doc for="XsltContext.PreserveWhitespace">
		<summary>
			<para>When overridden in a derived class, evaluates whether to preserve
      white space nodes or strip them for the given context.</para>
		</summary>
		<param name="node">The white space node that is to be preserved or stripped in the current context.</param>
		<returns>
			<para>Returns <see langword="true"/> if 
   the white space
   is to be preserved or <see langword="false"/> if the white space is to be
   stripped.</para>
		</returns>
	</doc><doc for="IXsltContextFunction.ArgTypes">
		<summary>
			<para>Gets the supplied XPath types for the function's argument
      list. This information can be used to discover the signature of the function
      which allows you to differentiate between overloaded functions.</para>
		</summary>
		<value>
			<para>An array of <see cref="System.Xml.XPath.XPathResultType"/> representing the types for the function's
   argument list.</para>
		</value>
	</doc><doc for="IXsltContextVariable.IsParam">
		<summary>
			<para>Gets a value indicating whether the variable is an Extensible Stylesheet Language Transformation (XSLT) parameter. This can be a parameter to
      a stylesheet or a template.</para>
		</summary>
		<value>
			<para><see langword="true"/> 
if the variable is an XSLT parameter; otherwise
<see langword="false"/>.</para>
		</value>
	</doc><doc for="IXsltContextVariable.Evaluate">
		<summary>
			<para> Evaluates the variable at runtime
      and returns an object that represents the value of the variable.</para>
		</summary>
		<param name="xsltContext">An <see cref="System.Xml.Xsl.XsltContext"/> representing the execution context of the variable.</param>
		<returns>
			<para>An <see cref="System.Object"/> representing the value of the
   variable. Possible return types include number, string, Boolean, document
   fragment or node set.</para>
		</returns>
	</doc><doc for="XsltContext.Whitespace">
		<summary>
			<para>When overridden in a derived class, gets a value indicating whether to include white space nodes in
      the output.</para>
		</summary>
		<value>
			<para><see langword="true"/> to check white
   space nodes in the source document for inclusion in the output;
<see langword="false"/> to not evaluate white space nodes. The default is
<see langword="true"/>.</para>
		</value>
	</doc><doc for="IXsltContextFunction.Invoke">
		<summary>
			<para>Provides the method to invoke the function with the
      given arguments in the given context.</para>
		</summary>
		<param name="xsltContext"> The XSLT context for the function call.</param>
		<param name=" args">The arguments of the function call. Each argument is an element in the array.</param>
		<param name=" docContext">The context node for the function call.</param>
		<returns>
			<para>An <see cref="System.Object"/> representing the return value of the
   function.</para>
		</returns>
		<remarks>
			<para>The <paramref name="docContext"/> parameter is
   required so that functions which require a node set can be supplied the current
   context node.</para>
		</remarks>
	</doc><doc for="XsltContext.CompareDocument">
		<summary>
			<para>When overridden in a derived class, compares the base URIs of two documents based upon the
      order the documents were loaded by the XSLT processor (that is the <see cref="System.Xml.Xsl.XslTransform"/> class).</para>
		</summary>
		<param name="baseUri">The base URI of the first document to compare.</param>
		<param name=" nextbaseUri">The base URI of the second document to compare.</param>
		<returns>
			<para>An integer value describing the relative order of the
      two base URIs. <see langword="-1"/> if
   <paramref name="baseUri"/> occurs before <paramref name="nextbaseUri"/>, <see langword="0"/> if the
      two base URIs are identical and <see langword="1"/> if <paramref name="baseUri"/> occurs
      after <paramref name="nextbaseUri"/>.</para>
		</returns>
		<remarks>
			<para>This method supports the XSLT document() function which 
      specifies that nodes selected across multiple documents are always returned in
      the same order. <SpecialLocalizableItem kind="UIElement">Note:</SpecialLocalizableItem> The order is
   implementation specific.</para>
		</remarks>
	</doc>
	<doc for="IXsltContextFunction">
		<summary>
			<para>Provides an interface to a given function defined in the
      XSLT stylesheet during runtime execution. </para>
		</summary>
		<remarks>
   For more information on using
<see langword="IXsltContextFunction"/>, see article Q324899, "HOW TO: Implement 
   and Use Custom Functions When You Execute XPath Queries in Visual
   Basic .NET", in the Microsoft Knowledge Base at http://support.microsoft.com.
</remarks>
	</doc>
	<doc for="IXsltContextVariable">
		<summary>
			<para>Provides an interface to a given variable that is defined in the
      stylesheet during runtime execution.</para>
		</summary>
		<remarks>
			<para>For more information on using <see langword="IXsltContextVariable"/>, see article Q324899, "HOW TO: Implement and Use Custom Functions When You Execute XPath Queries in Visual Basic .NET", in the Microsoft Knowledge Base at http://support.microsoft.com.</para>
		</remarks>
	</doc>
	<doc for="XsltContext">
		<summary>
			<para>Encapsulates the current execution context of the XSLT processor allowing XPath
      to resolve functions, parameters, and namespaces within XPath expressions.</para>
		</summary>
		<remarks>
			<para>For more information on using <see langword="XsltContext"/>, see article Q324899, "HOW TO: Implement and Use Custom Functions When You Execute XPath Queries in Visual Basic .NET", in the Microsoft Knowledge Base at http://support.microsoft.com.</para>
		</remarks>
	</doc>
</docs>
