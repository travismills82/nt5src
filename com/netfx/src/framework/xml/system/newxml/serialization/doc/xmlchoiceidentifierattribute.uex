<docs>
	<doc for="XmlChoiceIdentifierAttribute.XmlAnyAttributeAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> class, and uses the specified value as
   the name of the member that returns the disambiguating enumeration.</para>
		</summary>
		<param name="name">The name of the member that will return the enumeration.</param>
		<remarks>
			<para>At least one member must be present in the enumeration returned by the field
      named in the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> value. By default,
      that enumeration name takes the name of the field that the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is applied to. </para>
		</remarks>
		<example>
			<para>The following example serializes a class a
      named <see langword="Choices"/> that includes two fields,
   <see langword="MyChoice"/> and <see langword="ManyChoices"/>. The <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is applied to each field specifying
      (through the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> property) another
      class member that gets or sets an enumeration that disambiguates the member
      value. The <see langword="MyChoice"/> field can be set to a single value, with a
      corresponding enumeration member found in the <see langword="EnumType"/> field.
      The <see langword="ManyChoices"/> field returns an array of objects. The
   <see langword="ChoiceArray"/> field returns an array of enumeration values. For
      each array member in the <see langword="ManyChoices"/> field, a corresponding
      member is found in the array returned by the <see langword="ChoiceArray"/> field.</para>
			<codelink SampleID="XmlChoiceIdentifierAttribute Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlChoiceIdentifierAttribute.XmlChoiceIdentifierAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> class.</para>
		</summary>
		<param name="name">The member name that returns the enumeration used to disambiguate a choice.</param>
	</doc><doc for="XmlChoiceIdentifierAttribute">
		<summary>
			<para>Specifies that the member can be further disambiguated
      by using an enumeration.</para>
		</summary>
		<remarks>
			<para>The XML schema element definition named
   <see langword="xsi:choice"/> is used to define a complex element 
      that can contain only one child in an instance (maxoccurs = 1). That child can
      be one of several types, and it can have one of several names. Each name is
      associated with a specific type; however, several names can be associated with
      the same type. Because of this, an instance of such an element is ambiguous. For
      example, consider the following schema fragment that defines such an ambiguous
      element named <c>MyChoices.</c></para>
			<code>
&lt;xsd:complexType name="MyChoice"&gt;
 &lt;xsd:sequence&gt;
 &lt;xsd:choice minOccurs="0" maxOccurs="1"&gt;
 &lt;xsd:element minOccurs="1" maxOccurs="1" name="ChoiceOne" type="xsd:string" /&gt;
 &lt;xsd:element minOccurs="1" maxOccurs="1" name="ChoiceTwo" type="xsd:string" /&gt;
 &lt;/xsd:choice&gt;
 &lt;/xsd:sequence&gt;
&lt;/xsd:complexType&gt;
   </code>
			<para>The <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> allows you to assign a special
   enumeration value to each instance of the member. You must either create the
   enumeration yourself, or it can be generated by the <see topic="cpconXMLSchemaDefinitionToolXsdexe"/> . The C# code below shows how
   the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/>
   is applied to an <c>Item</c> field; the
<see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> 
property identifies the field that contains the enumeration that is
further used to disambiguate the choice.</para>
			<code>
public class Choices{
 [XmlChoiceIdentifier("itemType")
 public string MyChoice;

 // Do not serialize this next field:
 [XmlIgnore]
 public ItemChoiceType ItemType;
}

// Do not include this enumeration in the XML schema.
[XmlType(IncludeInSchema = false)]
public enum ItemChoiceType{
 None,
 ChoiceOne,
 ChoiceTwo,
}
</code>
			<para>When this code is in place, you can serialize and
   deserialize this class by setting the <c>itemType</c> field to an appropriate enumeration.
For example, to serialize the <c>MyChoice</c>
class, the C# code resembles the following.</para>
			<code>
Choices mc = new Choices();
mc.Choice = "Item Choice One";
mc.ItemType = ItemChoiceType.ChoiceOne;
</code>
			<para>When deserializing, the C# code might resemble the following:</para>
			<code>
MyChoice mc = (MyChoice) myXmlSerializer.Deserialize(myReader);
if(mc.ItemType == ItemChoiceType.ChoiceOne)
 {
 // Handle choice one.
 }
if(mc.ItemType == ItemChoiceType.ChoiceTwo)
 {
 // Handle choice two.
 }
if(mc.ItemType != null)
 {
 throw CreateUnknownTypeException(mc.Item);
 }
</code>
			<para>There is a second scenario when the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is used. In the schema below, the
member is a field that returns an array of items (maxOccurs="unbounded"). The
array can contain objects of the first choice ("D-a-t-a"), and of the second
choice ("MoreData").</para>
			<code>
&lt;xsd:complexType name="MyChoice"&gt;
 &lt;xsd:sequence&gt;
 &lt;xsd:choice minOccurs="0" maxOccurs="unbounded"&gt;
 &lt;xsd:element minOccurs="1" maxOccurs="1" name="D-a-t-a" type="xsd:string" /&gt;
 &lt;xsd:element minOccurs="1" maxOccurs="1" name="MoreData" type="xsd:string" /&gt;
 &lt;/xsd:choice&gt;
 &lt;/xsd:sequence&gt;
&lt;/xsd:complexType&gt;
</code>
			<para>The resulting class, then, uses a field to return an 
   array of items. For each item in the array, a corresponding <c>ItemChoiceType</c> enumeration must
also be found. The matching enumerations are contained in the array returned by
the <c>ItemsElementName</c> field.</para>
			<code>
public class MyChoice {
 [System.Xml.Serialization.XmlElementAttribute("D-a-t-a", typeof(string), IsNullable=false)]
 [System.Xml.Serialization.XmlElementAttribute("MoreData", typeof(string), IsNullable=false)]
 [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
 public string[] Items;
 
 [System.Xml.Serialization.XmlElementAttribute(IsNullable=false)]
 [System.Xml.Serialization.XmlIgnoreAttribute()]
 public ItemsChoiceType[] ItemsElementName;
}

[System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
public enum ItemsChoiceType {
 [System.Xml.Serialization.XmlEnumAttribute("D-a-t-a")]
 Data,
 
 MoreData,
}
</code>
			<para>When deserializing an object that includes a range of choices, use a control
   structure (such as an if...then...else structure) to determine how to deserialize
   a particular value. In the control structure, check the enumeration value and
   deserialize the value accordingly.</para>
		</remarks>
		<example>
			<para>The following example serializes a 
      class named <c>Choices</c>
   that includes two fields, <c>MyChoice</c> and <c>ManyChoices</c>. The <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is applied to each field specifying
(through the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> property)
another class member that gets or sets an enumeration that disambiguates the
member value. The <c>MyChoice</c> field can be set to a single value, with a corresponding
enumeration member found in the <c>EnumType</c> field. The <c>ManyChoices</c> field returns an array of objects. The <c>ChoiceArray</c> field returns an array
of enumeration values. For each array member in the <c>ManyChoices</c> field, a corresponding
member is found in the array returned by the <c>ChoiceArray</c> field.</para>
			<codelink SampleID="XmlChoiceIdentifierAttribute Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlChoiceIdentifierAttribute.XmlChoiceIdentifierAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> class.</para>
		</summary>
		<example>
			<para>The following example serializes a 
      class named <c>Choices</c>
   that includes two fields, <c>MyChoice</c> and <c>ManyChoices</c>. The <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is applied to each field specifying
(through the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> property)
another class member that gets or sets an enumeration that disambiguates the
member value. The <c>MyChoice</c> field can be set to a single value, with a corresponding
enumeration member found in the <c>EnumType</c> field. The <c>ManyChoices</c> field returns an array of objects. The <c>ChoiceArray</c> field returns an array
of enumeration values. For each array member in the <c>ManyChoices</c> field, a corresponding
member is found in the array returned by the <c>ChoiceArray</c> field.</para>
			<codelink SampleID="XmlChoiceIdentifierAttribute Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlChoiceIdentifierAttribute.Name">
		<summary>
			<para>Gets or sets the name of the field that returns the
      enumeration to use when disambiguating types.</para>
		</summary>
		<value>
			<para>The name of a field that returns an enumeration.</para>
		</value>
		<remarks>
			<para>At least one member must be present in the enumeration returned by the field
      named in the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> value. By default,
      that enumeration name takes the name of the field that the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is applied to. </para>
		</remarks>
		<example>
			<para>The following example serializes a 
      class named <c>Choices</c>
   that includes two fields, <c>MyChoice</c> and <c>ManyChoices</c>. The <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> is applied to each field specifying
(through the <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName"/> property)
another class member that gets or sets an enumeration that disambiguates the
member value. The <c>MyChoice</c> field can be set to a single value, with a corresponding
enumeration member found in the <c>EnumType</c> field. The <c>ManyChoices</c> field returns an array of objects. The <c>ChoiceArray</c> field returns an array
of enumeration values. For each array member in the <c>ManyChoices</c> field, a corresponding
member is found in the array returned by the <c>ChoiceArray</c> field.</para>
			<codelink SampleID="XmlChoiceIdentifierAttribute Example" SnippetID="1"/>
		</example>
	</doc></docs>
