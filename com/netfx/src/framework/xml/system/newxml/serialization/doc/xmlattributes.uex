<docs>
	<doc for="XmlAttributes.XmlAttributes1">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="XmlAttributes.XmlAttributes">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributes"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributes"/> class.</para>
		</summary>
		<example>
			<para>The following example serializes an instance of a class 
      named <see langword="Orchestra"/>, which contains a single field named
   <see langword="Instruments "/>that returns an array of 
   <see langword="Instrument"/> objects. A second class named <see langword="Brass "/>inherits from the <see langword="Instrument "/> 
   class. The example
   creates an <see cref="System.Xml.Serialization.XmlAttributes"/> object to
   override the <see langword="Instrument "/>field--allowing the field to accept
<see langword="Brass "/>objects--and adds the <see cref="System.Xml.Serialization.XmlAttributes"/> object to an instance of the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> 
class.</para>
			<codelink SampleID="Classic XmlAttributes.XmlAttributes Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlAttribute">
		<summary>
			<para> Gets or sets an object that specifies how the
   <see cref="System.Xml.Serialization.XmlSerializer"/> 
   serializes a public field or public read/write property as an XML attribute.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> that
   controls the serialization of an public field or read/write property
   as an XML attribute.</para>
		</value>
		<remarks>
			<para>By default, if no attribute is applied to a public field
      or public read/write property, it will be serialized as an XML element. You
      can also instruct the the <see cref="System.Xml.Serialization.XmlSerializer"/> to generate an XML attribute by applying
      an <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
      to the field or property. </para>
   The <see cref="System.Xml.Serialization.XmlAttributes.XmlAttribute"/> property allows you to override the
   default serialization, as well as the serialization controlled by applying an
<see cref="System.Xml.Serialization.XmlAttributeAttribute"/> to the member. To do this, create 
   an <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> and set its properties (such as
<see cref="System.Xml.Serialization.XmlAttributeAttribute.AttributeName"/>). Assign the new object to the <see cref="System.Xml.Serialization.XmlAttributes.XmlAttribute"/> property of an <see cref="System.Xml.Serialization.XmlAttributes"/> object. Add the <see cref="System.Xml.Serialization.XmlAttributes"/> object to an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object, specifying the type of 
   the object that contains the field or propert, and the name of the field or
   property. Lastly, create an <see cref="System.Xml.Serialization.XmlSerializer"/> using the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object and call the <see cref="System.Xml.Serialization.XmlSerializer.Serialize"/> or <see cref="System.Xml.Serialization.XmlSerializer.Deserialize"/> method.
</remarks>
		<example>
			<para>The following example serializes a class named Group
      that contains a property named GroupName; the GroupName property is serialized
      as an XML attribute. The example creates an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> and an <see cref="System.Xml.Serialization.XmlAttributes"/> object to override the default serialization of the field. The
      example then creates an <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> to
      specifically override the property, and the object is set to the <see cref="System.Xml.Serialization.XmlAttributes.XmlAttribute"/> property The <see cref="System.Xml.Serialization.XmlAttributes"/> object is added to the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object with the name of the overridden
      member specified. Finally, an <see cref="System.Xml.Serialization.XmlSerializer"/> is constructed and
      returned using the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/>
      object.</para>
			<codelink SampleID="Classic XmlAttributes.XmlAttribute Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlEnum">
		<summary>
			<para> Gets or sets an object that
      specifies how the <see cref="System.Xml.Serialization.XmlSerializer"/>
      serializes an enumeration member.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlEnumAttribute"/> that specifies how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes an enumeration
   member.</para>
		</value>
		<remarks>
			<para>For each identifer you want to override, you must
      create an <see cref="System.Xml.Serialization.XmlAttributes"/> object, and set the <see cref="System.Xml.Serialization.XmlAttributes.XmlEnum"/> property to an <see cref="System.Xml.Serialization.XmlEnumAttribute"/> that overrides the identifier.
      Add the <see cref="System.Xml.Serialization.XmlAttributes"/> object to the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object,
      specifying
      both the <see cref="T:System.Type"/> of the class that contains the enumeration, and
      the overridden member name.</para>
		</remarks>
		<example>
			<para>The following example serializes two classes named
   <see langword="Food "/>and <see langword="FoodType"/>.
      The <see langword="FoodType "/> class contains two enumerations
      that are overridden and, for each enumeration, the example creates an
   <see cref="System.Xml.Serialization.XmlEnumAttribute"/> object which it assigns to the
   <see cref="System.Xml.Serialization.XmlAttributes.XmlEnum"/> property of an <see cref="System.Xml.Serialization.XmlAttributes"/> object.
      The example then adds the <see cref="System.Xml.Serialization.XmlAttributes"/> object to an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object, which is used to create an
   <see cref="System.Xml.Serialization.XmlSerializer"/>.</para>
			<codelink SampleID="Classic XmlAttributes.XmlEnum Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlText">
		<summary>
			<para> Gets or sets an object that instructs the <see cref="System.Xml.Serialization.XmlSerializer"/> to serialize a
   public field or public read/write property as XML
   text.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlTextAttribute"/> that overrides the default serialization of
   a public property or field.</para>
		</value>
		<remarks>
			<para>By default, a public field or public read/write property
      will be serialized as an XML element by the <see cref="System.Xml.Serialization.XmlSerializer"/>. However, can force
      the field or property to be serialized as XML text by applying an <see cref="System.Xml.Serialization.XmlTextAttribute"/>
      to the
      field or property.</para>
			<note type="note">
      The <see cref="System.Xml.Serialization.XmlTextAttribute"/> cannot be applied to a field or property that
      returns an array.
      
   </note>
			<para>To override the default serialization of a
      field or property (that does not return an array), create an <see cref="System.Xml.Serialization.XmlTextAttribute"/> and assign it to the <see cref="System.Xml.Serialization.XmlAttributes.XmlText"/> property of an <see cref="System.Xml.Serialization.XmlAttributes"/> object. Add the <see cref="System.Xml.Serialization.XmlAttributes"/> object to an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object, specifying the type of the
      object containing the overridden field or property, and the name of the overridden
      field or property. </para>
		</remarks>
		<example>
			<para>The following example serializes the class named
   <see langword="Group"/>, which contains a field named <see langword="Comment"/> . To override the default way
      the XmlSerializer serializes the field, the example creates an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> and an <see cref="System.Xml.Serialization.XmlAttributes"/>
      object. The example then creates an <see cref="System.Xml.Serialization.XmlTextAttribute"/> object, which it assigns to the <see cref="System.Xml.Serialization.XmlAttributes.XmlText"/> property, and adds the <see cref="System.Xml.Serialization.XmlAttributes"/> object
      (with the name of the field to be serialized as XML text) to the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/>
      object. Lastly the example creates an <see cref="System.Xml.Serialization.XmlSerializer"/> using the
   <see cref="System.Xml.Serialization.XmlAttributeOverrides"/>object.</para>
			<codelink SampleID="Classic XmlAttributes.XmlText Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlArrayItems">
		<summary>
			<para> Gets or sets a collection of objects that specify
      how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes
      items inserted into an array returned by a public field or read/write property.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlArrayItemAttributes"/> object
   that contains a collection of <see cref="System.Xml.Serialization.XmlArrayItemAttribute"/> objects.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlAttributes.XmlArrayItems"/> property allows you to 
   specify the derived types that can be inserted
   into an array returned by a public field or public read/write property. For each new
   type you want the field or property to accept, create an <see cref="System.Xml.Serialization.XmlArrayItemAttribute"/> object
   and <see cref="System.Xml.Serialization.XmlArrayItemAttributes.Add"/> it to
   the <see cref="System.Xml.Serialization.XmlArrayItemAttributes"/>) returned by the <see cref="System.Xml.Serialization.XmlAttributes.XmlArrayItems"/> property. (The new type
   must be derived from the type already accepted by the field or property.)
<see cref="System.Xml.Serialization.XmlAttributeOverrides.Add"/> 
the
<see cref="System.Xml.Serialization.XmlAttributes"/> object to an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object, specifying the type of the 
object containing the field or property, and the name of the field or property.
Construct an <see cref="System.Xml.Serialization.XmlSerializer"/> with the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object before calling <see cref="System.Xml.Serialization.XmlSerializer.Serialize"/> or <see cref="System.Xml.Serialization.XmlSerializer.Deserialize"/>method.</para>
		</remarks>
		<example>
			<para>The following example serializes a class that contains a field named Members
      that returns an array of objects. Two <see cref="System.Xml.Serialization.XmlArrayItemAttribute"/> objects are created to allow the field
      to accept objects that derive from the base class named Member. Each object is
      added to the <see cref="System.Xml.Serialization.XmlAttributes"/> through the <see cref="System.Xml.Serialization.XmlAttributes.XmlArrayItems"/> property.</para>
			<codelink SampleID="Classic XmlAttributes.XmlArrayItems Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlIgnore">
		<summary>
			<para>Gets or sets a value that specifies whether or not the
   <see cref="System.Xml.Serialization.XmlSerializer"/> serializes a public field or public read/write property.</para>
		</summary>
		<value>
			<para>
				<see langword="true "/>if the
<see cref="System.Xml.Serialization.XmlSerializer"/> should not serialize the field or property; otherwise,
<see langword="false"/> . </para>
		</value>
		<remarks>
			<para>By default, all public fields and public read/write properties are serialized
      by the <see cref="System.Xml.Serialization.XmlSerializer"/>. That is, the value of each public
      field or property is persisted as an XML element or XML attribute in an
      XML-document instance. </para>
			<para>To override the default serialization of a field or
      property, create an <see cref="System.Xml.Serialization.XmlAttributes"/> object, and set its <see cref="System.Xml.Serialization.XmlAttributes.XmlIgnore"/> property to <see langword="true"/>. <see cref="System.Xml.Serialization.XmlAttributeOverrides.Add"/>
      the object to an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object specifying the
      type of the object that contains the field or property to ignore, and the name
      of the field or property to ignore.</para>
			<para>If an <see cref="System.Xml.Serialization.XmlIgnoreAttribute"/> is applied to a field or property, the
   field or property will be ignored. However you can override that behavior by
   creating an <see cref="System.Xml.Serialization.XmlAttributes"/> object, setting its <see cref="System.Xml.Serialization.XmlAttributes.XmlIgnore"/> property to <see langword="false"/>,
   and adding it to an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object specifying the
   type of the object that contains the field or property, and the name of the
   field or property.</para>
		</remarks>
		<example>
			<para>The following example serializes a class named
   <see langword="Group"/>,which contains a member named <see langword="Comment "/>
   to which the <see cref="System.Xml.Serialization.XmlIgnoreAttribute"/>
   is applied. The example creates an <see cref="System.Xml.Serialization.XmlAttributes"/> object, and sets the <see cref="System.Xml.Serialization.XmlAttributes.XmlIgnore"/> property to
<see langword="false"/> , thereby overriding
   the <see cref="System.Xml.Serialization.XmlIgnoreAttribute"/> .</para>
			<codelink SampleID="Classic XmlAttributes.XmlIgnore Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.Serialization.XmlIgnoreAttribute"/>
	</doc>
	<doc for="XmlAttributes.XmlElements">
		<summary>
			<para> Gets or sets a collection of objects that specify how the
   <see cref="System.Xml.Serialization.XmlSerializer"/>
   serializes a public field or read/write property as
   an XML element.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlElementAttributes"/> that contains a collection of <see cref="System.Xml.Serialization.XmlElementAttribute"/> objects.</para>
		</value>
		<remarks>
			<para> For each overridden member that is serialized as an XML
      element, you must add a new <see cref="System.Xml.Serialization.XmlElementAttribute"/> to an
   <see cref="System.Xml.Serialization.XmlElementAttributes"/> by calling
      the <see cref="System.Xml.Serialization.XmlElementAttributes.Add"/> method. By
      default, an <see cref="System.Xml.Serialization.XmlElementAttributes"/> object is created and assigned to the <see cref="System.Xml.Serialization.XmlAttributes.XmlElements"/> property.</para>
		</remarks>
		<example>
			<para>The following example serializes the
   <see langword="Transportation "/>class, which contains a single field named
   <see langword="Vehicles "/>
   that returns an <see cref="T:System.Collections.ArrayList"/>. The example applies two <see cref="System.Xml.Serialization.XmlElementAttribute"/> attributes
   to the <see langword="Vehicles"/> field.
   The example creates two <see cref="System.Xml.Serialization.XmlElementAttribute"/> objects and adds them
   to the <see cref="System.Xml.Serialization.XmlElementAttributes"/> collection of an <see cref="System.Xml.Serialization.XmlAttributes"/> object. To
   allow the array to accept different object types, the <see cref="System.Xml.Serialization.XmlAttributes"/> object is added to the
<see cref="System.Xml.Serialization.XmlAttributeOverrides"/> 
object.</para>
			<codelink SampleID="Classic XmlAttributes.XmlElements Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlRoot">
		<summary>
			<para>Gets or sets an object that specifies how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes a class as an XML root element.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlRootAttribute"/> that overrides a class attributed as
   an XML root element.</para>
		</value>
		<example>
			<para>The following example creates an <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object, an <see cref="System.Xml.Serialization.XmlAttributes"/> object, and an <see cref="System.Xml.Serialization.XmlRootAttribute"/> object. The example assigns the
<see cref="System.Xml.Serialization.XmlRootAttribute"/> to the <see cref="System.Xml.Serialization.XmlAttributes.XmlRoot"/> 
property of the <see cref="System.Xml.Serialization.XmlAttributes"/> object, and adds the <see cref="System.Xml.Serialization.XmlAttributes"/> object to the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object. Lastly, the example gets the
<see cref="System.Xml.Serialization.XmlAttributes"/> object by passing the <see cref="T:System.Type"/> of the serialized 
class to the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/>object. (In this example, the <see cref="System.Type"/> is
<see langword="Group"/>.)</para>
			<codelink SampleID="Classic XmlAttributes.XmlRoot Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlArray">
		<summary>
			<para> Gets or sets an object that specifies how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes a public field
   or read/write property that returns an array.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlArrayAttribute"/> that
   specifies
   how the XmlSerializer serializes a public
   field or read/write property that returns an array.</para>
		</value>
		<remarks>
			<para>There are two ways in which a public field or public
      read/write property that returns an array is serialized by the <see cref="System.Xml.Serialization.XmlSerializer"/>
      : (1) the default serialization, and (2)
      the controlled serialization.</para>
			<para>In the default serialization, no attribute is applied to
      the member. When serialized, the array will be serialized as a nested sequence of
      XML elements with the XML element name of the nested sequence taken from
      the member name. </para>
			<para> To control the serialization more precisely, apply an <see cref="System.Xml.Serialization.XmlArrayAttribute"/> to the
   field or property. For example, you can change the generated XML element name
   from the default to a different name by setting the <see cref="System.Xml.Serialization.XmlArrayAttribute.ElementName"/>
   property to
   a new value.</para>
			<para>The <see cref="System.Xml.Serialization.XmlAttributes.XmlArray"/> property allows you to
override the default serialization, as well as the serialization controlled by applying
an <see cref="System.Xml.Serialization.XmlArrayAttribute"/>
to the member. For example, you can change the XML
element name generated from the default (the member identifier) to a new
value. In addition, if you apply an <see cref="System.Xml.Serialization.XmlArrayAttribute"/> to a member, it will be
overridden by any <see cref="System.Xml.Serialization.XmlArrayAttribute"/> that is assigned to the <see cref="System.Xml.Serialization.XmlAttributes.XmlArray"/> property.</para>
		</remarks>
		<example>
			<para>The following example serializes a class that contains a
      field named Members that returns an array of objects. The <see cref="System.Xml.Serialization.XmlArrayAttribute"/> is used to override the serialization
      of the field, and rename the element name to Staff.</para>
			<codelink SampleID="Classic XmlAttributes.XmlArray Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlDefaultValue">
		<summary>
			<para>Gets or sets the default value of an XML element or attribute.</para>
		</summary>
		<value>
			<para>An <see cref="T:System.Object"/> that represents the default value of an XML element or
   attribute.</para>
		</value>
		<remarks>
			<para>You can specify the default value of an XML element or
      XML attribute by applying a <see cref="T:System.ComponentModel.DefaultValueAttribute"/> to a member.
      To examine the result of applying the value, compile the application into a
      DLL or executable, and pass the resulting file as an argument to the XML Schema
      Definition tool (XSD.exe). In the XML schema document, a default value is
      assigned to the <see langword="default "/>
      attribute. In the
      example below, the default for the Animal element is "Dogs." </para>
			<code>&lt;?xml version="1.0"?&gt;
&lt;schema attributeFormDefault="qualified" 
elementFormDefault="qualified" targetNamespace="" 
xmlns="http://www.w3.org/2000/10/XMLSchema"&gt;
  &lt;element name="Pets" nullable="true" type="Pets"/&gt;
  &lt;complexType name="Pets"&gt;
    &lt;sequence&gt;
      &lt;element default="Dogs" name="Animal" nullable="true" 
       type="string" minOccurs="0"/&gt;
    &lt;/sequence&gt;
  &lt;/complexType&gt;
&lt;/schema&gt;
   </code>
			<para>To override the default value, create an <see cref="T:System.Object"/> and assign it to the <see cref="System.Xml.Serialization.XmlAttributes.XmlDefaultValue"/>
.</para>
			<para> If the value assigned to a field or property is equal to 
   the default value for that field or property, the <see cref="System.Xml.Serialization.XmlSerializer"/> will not serialize the value to the XML-instance. This
   is because the assigned value can be recovered from the XML schema. In other
   words, setting a field or property to its own default value is equivalent of not
   setting it at all. Likewise, if no value is set for the field or property, the
<see cref="System.Xml.Serialization.XmlSerializer"/> will use the default value found in 
   the schema. In both cases, (setting the property to its default, or not setting it at
   all), the XML-document instance will not contain any value for the property.</para>
		</remarks>
		<example>
			<para>The following example shows a class named <see langword="Pet "/>that contains a field that has a default value
   set to "Dog". However, the example also creates an <see cref="System.Xml.Serialization.XmlAttributes"/> object, and sets its <see cref="System.Xml.Serialization.XmlAttributes.XmlDefaultValue"/> property to a new default value
   ("Cat"). This overrides the original default value. Thus, if the field value is
   set to "Cat", the <see cref="System.Xml.Serialization.XmlSerializer"/> will treat it as the default value,
   and not serialize it. If it is set to any other value, the <see cref="System.Xml.Serialization.XmlSerializer"/> will serialize the value.
   </para>
			<codelink SampleID="Classic XmlAttributes.XmlDefaultValue Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlType">
		<summary>
			<para>Gets or sets an object that specifies how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes a class to which
   the <see cref="System.Xml.Serialization.XmlTypeAttribute"/>
   has been applied.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlTypeAttribute"/> that overrides an
<see cref="System.Xml.Serialization.XmlTypeAttribute"/> applied to 
   a class declaration.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlTypeAttribute"/> can be used to control how a type is 
   serialized by the XmlSerializer. For example, by default, when a type is
   serialized, the <see cref="System.Xml.Serialization.XmlSerializer"/> uses the class name as the XML element
   name. By creating an <see cref="System.Xml.Serialization.XmlTypeAttribute"/>, setting the <see cref="System.Xml.Serialization.XmlAttributes.XmlType"/> property to it, and creating an
<see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object, you can change the XML element 
   name.</para>
		</remarks>
		<example>
			<para>The following example creates an <see cref="System.Xml.Serialization.XmlTypeAttribute"/> object, and assigns it to the <see cref="System.Xml.Serialization.XmlAttributes.XmlType"/> property of an <see cref="System.Xml.Serialization.XmlAttributes"/>object.</para>
			<codelink SampleID="Classic XmlAttributes.XmlType Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributes">
		<summary>
			<para>Represents a collection of attribute objects that control
      how the <see cref="System.Xml.Serialization.XmlSerializer"/>
      serializes and deserializes an object.</para>
		</summary>
		<remarks>
			<para>Creating the <see cref="System.Xml.Serialization.XmlAttributes"/>
is part of a process that overrides the default way the
<see cref="System.Xml.Serialization.XmlSerializer"/> serializes class instances. For 
example, suppose you want to serialize an object that is created from a DLL
which has an inaccessible source. By using the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/>, you can augment or otherwise
control how the object is serialized. </para>
			<para>The members of the <see cref="System.Xml.Serialization.XmlAttributes"/> class correspond
directly to a family of attribute classes that control serialization. For example, the
<see cref="System.Xml.Serialization.XmlAttributes.XmlText"/> property must be set to 
an <see cref="System.Xml.Serialization.XmlTextAttribute"/>, which allows you to override serialization of
a field or property by instructing the <see cref="System.Xml.Serialization.XmlSerializer"/> to serialize the
property value as XML text. For a complete list of attributes
that control serialization, see the <see cref="System.Xml.Serialization.XmlSerializer"/>. </para>
			<para>For more details on using the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> with the <see cref="System.Xml.Serialization.XmlAttributes"/> class, see <see topic="cpconOverridingSerializationOfClassesWithXmlAttributeOverridesClass"/> 
. </para>
		</remarks>
		<example>
			<para>The following example serializes an instance of a class
      named <see langword="Orchestra"/>, which contains a single field named
   <see langword="Instruments "/>that returns an array of
   <see langword="Instrument"/> objects. A second class named <see langword="Brass "/>inherits from the <see langword="Instrument "/>
   class. The example
   creates an <see cref="System.Xml.Serialization.XmlAttributes"/> object to
   override the <see langword="Instrument "/>field--allowing the field to accept
<see langword="Brass "/>objects--and adds the <see cref="System.Xml.Serialization.XmlAttributes"/> object to an instance of the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> 
class.</para>
			<codelink SampleID="Classic XmlAttributes.XmlAttributes Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.Serialization.XmlAttributeOverrides"/>
		<seealso cref="System.Xml.Serialization.XmlSerializer"/>
	</doc><doc for="XmlAttributes.XmlChoiceIdentifier">
		<summary>
			<para> Gets or sets an object that allows you
      to disambiguate between a set of choices.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlChoiceIdentifierAttribute"/> that can be applied
   to a class member that is serialized as an <see langword="xsi:choice"/> element.</para>
		</value>
	</doc><doc for="XmlAttributes.Xmlns">
		<summary>
			<para>Gets or sets a value that specifies whether to keep all
      namespace declarations when an object containing a member that returns an
   <see cref="System.Xml.Serialization.XmlSerializerNamespaces"/> object is overridden.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the namespace declarations
   should be kept; otherwise, <see langword="false"/> .</para>
		</value>
		<example>
			<para>The following example contains a class named <c>Student</c>. The class contains a member named <c>MyNamespaces</c> that returns
   an <see cref="System.Xml.Serialization.XmlSerializerNamespaces"/> object. The example creates
   an <see cref="System.Xml.Serialization.XmlAttributes"/> object that is added to an instance of
   the <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> class. The <see cref="System.Xml.Serialization.XmlAttributes.Xmlns"/> property is set to
<see langword="true"/>, which instructs the <see cref="System.Xml.Serialization.XmlSerializer"/> to preserve the namespaces when the 
   serialization of the <c>Student</c> object is overridden.</para>
			<codelink SampleID="XmlAttributes.Xmlns property example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributes.XmlAnyElement">
		<summary>
			<para>Gets the collection of <see cref="System.Xml.Serialization.XmlAnyElementAttribute"/> objects to override.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.Serialization.XmlAnyElementAttributes"/> object that represents the collection
   of <see cref="System.Xml.Serialization.XmlAnyElementAttribute"/> objects.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlAnyElementAttribute"/> can be applied to a
   member that returns an array of <see cref="System.Xml.XmlElement"/> objects on deserialization. This
   allows the <see cref="System.Xml.Serialization.XmlSerializer"/> to deserialize any elements that do
   not have a corresponding member in the object being deserialized--thus those
   elements are "unknown" to the <see cref="System.Xml.Serialization.XmlSerializer"/>. This is useful when
   the XML stream may have been altered by an XML Web service, or when it is known that
   random data will be always be included with the XML stream.</para>
			<para>The <see cref="System.Xml.Serialization.XmlAttributes.XmlAnyElements"/> property allows you
to override the serialization of a member to function as a member to which the
<see cref="System.Xml.Serialization.XmlAnyElementAttribute"/> has been applied.</para>
		</remarks>
		<example>
			<para>The following example creates a new <see cref="System.Xml.Serialization.XmlAnyElementAttribute"/> object and adds it to the collection
   of objects accessed through the <see cref="System.Xml.Serialization.XmlAttributes.XmlAnyElements"/> property. The <see cref="System.Xml.Serialization.XmlAttributes"/> object is then added to a <see cref="System.Xml.Serialization.XmlAttributeOverrides"/> object which is used to create an
<see cref="System.Xml.Serialization.XmlSerializer"/> object. The XmlSerializer is used to 
   serialize or deserialize an object. To see the effect of using the <see cref="System.Xml.Serialization.XmlAnyElementAttributes"/> property, create an XML document named
   "UnknownElements.xml" by running the <see langword="SerializeObject "/>method in
   the <see langword="Main"/> method. Edit the resulting document to include other
   (unknown) elements. Comment out the <see langword="SerializeObject"/> call in the
<see langword="Main"/> method, and uncomment the call to the 
<see langword="DeserializeObject"/> 
method, which will print
out the name and value of any unknown XML element.</para>
			<codelink SampleID="XmlAttributes.XmlAnyElements" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute"/>
	</doc>
	<doc for="XmlAttributes.XmlAnyAttribute">
		<summary>
			<para>Gets or sets the <see cref="System.Xml.Serialization.XmlAnyAttributeAttribute"/> to override.</para>
		</summary>
		<value>
			<para>The <see cref="System.Xml.Serialization.XmlAnyAttributeAttribute"/>to override.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlAnyAttributeAttribute"/> can be applied to a member that
   returns an array of <see cref="System.Xml.XmlAttribute"/> objects on deserialization. This allows the <see cref="System.Xml.Serialization.XmlSerializer"/> to deserialize any attributes that do
   not have a corresponding member in the object being deserialized--thus those
   elements are "unknown" to the <see cref="System.Xml.Serialization.XmlSerializer"/>. This is useful when
   the XML stream may have been altered by an XML Web service, or when it is known that
   random data will be always be included with the XML stream.</para>
			<para>The <see cref="System.Xml.Serialization.XmlAttributes.XmlAnyAttribute"/> property
allows you to override the serialization of a member to which the <see cref="System.Xml.Serialization.XmlAnyAttributeAttribute"/> has been applied.</para>
		</remarks>
	</doc>
</docs>
