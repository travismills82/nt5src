<docs>
	<doc for="SoapElementAttribute.SoapElementAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.SoapElementAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.SoapElementAttribute"/> class.</para>
		</summary>
		<example>
			<para>The following example serializes an instance of a class
      named <c>Transportation</c> that
   contains a field named <c>Vehicle</c>. A <see cref="System.Xml.Serialization.SoapElementAttribute"/> is applied to the
field. When the field is serialized, the XML element name is "Wheels" instead of
"Vehicle". The <c>SerializeOverride</c> method creates a <see cref="System.Xml.Serialization.SoapElementAttribute"/> and sets the <see cref="System.Xml.Serialization.SoapAttributes.SoapElement"/> property of a <see cref="System.Xml.Serialization.SoapAttributes"/> to the <see cref="System.Xml.Serialization.SoapElementAttribute"/>. The <see cref="System.Xml.Serialization.SoapAttributes"/> is added to a <see cref="System.Xml.Serialization.SoapAttributeOverrides"/> that is used to create an
<see cref="System.Xml.Serialization.XmlTypeMapping"/>. An <see cref="System.Xml.Serialization.XmlSerializer"/> is constructed with the <see cref="System.Xml.Serialization.XmlTypeMapping"/>, and an instance of the <c>Transportation</c> class is again 
serialized. Because the <see cref="System.Xml.Serialization.SoapElementAttribute"/> is used to override
the serialization, the generated XML element name is now "Truck" instead of
"Wheels".</para>
			<codelink SampleID="SoapElementOverrides" SnippetID="1"/>
		</example>
	</doc><doc for="SoapElementAttribute.ElementName">
		<summary>
			<para>Gets or sets the name of the generated XML element.</para>
		</summary>
		<value>
			<para>The name of the generated XML element. The default is the member
      identifier.</para>
		</value>
		<example>
			<para>The following example serializes an instance of a class
      named <c>Transportation</c> that
   contains a field named <c>Vehicle</c>. A <see cref="System.Xml.Serialization.SoapElementAttribute"/> is applied to the
field. When the field is serialized, the XML element name is "Wheels" instead of
"Vehicle". The <c>SerializeOverride</c> method creates a <see cref="System.Xml.Serialization.SoapElementAttribute"/> and sets the <see cref="System.Xml.Serialization.SoapAttributes.SoapElement"/> property of a <see cref="System.Xml.Serialization.SoapAttributes"/> to the <see cref="System.Xml.Serialization.SoapElementAttribute"/>. The <see cref="System.Xml.Serialization.SoapAttributes"/> is added to a <see cref="System.Xml.Serialization.SoapAttributeOverrides"/> that is used to create an
<see cref="System.Xml.Serialization.XmlTypeMapping"/>. An <see cref="System.Xml.Serialization.XmlSerializer"/> is constructed with the <see cref="System.Xml.Serialization.XmlTypeMapping"/>, and an instance of the <c>Transportation</c> class is again 
serialized. Because the <see cref="System.Xml.Serialization.SoapElementAttribute"/> is used to override
the serialization, the generated XML element name is now "Truck" instead of
"Wheels".</para>
			<codelink SampleID="SoapElementOverrides" SnippetID="1"/>
		</example>
	</doc><doc for="SoapElementAttribute.SoapElementAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.SoapElementAttribute"/> class and specifies the
   name of the XML element.</para>
		</summary>
		<param name="elementName">The XML element name of the serialized member.</param>
		<example>
			<para>The following example serializes an instance of a class
      named <c>Transportation</c> that
   contains a field named <c>Vehicle</c>. A <see cref="System.Xml.Serialization.SoapElementAttribute"/> is applied to the
field. When the field is serialized, the XML element name is "Wheels" instead of
"Vehicle". The <c>SerializeOverride</c> method creates a <see cref="System.Xml.Serialization.SoapElementAttribute"/> and sets the <see cref="System.Xml.Serialization.SoapAttributes.SoapElement"/> property of a <see cref="System.Xml.Serialization.SoapAttributes"/> to the <see cref="System.Xml.Serialization.SoapElementAttribute"/>. The <see cref="System.Xml.Serialization.SoapAttributes"/> is added to a <see cref="System.Xml.Serialization.SoapAttributeOverrides"/> that is used to create an
<see cref="System.Xml.Serialization.XmlTypeMapping"/>. An <see cref="System.Xml.Serialization.XmlSerializer"/> is constructed with the <see cref="System.Xml.Serialization.XmlTypeMapping"/>, and an instance of the <c>Transportation</c> class is again 
serialized. Because the <see cref="System.Xml.Serialization.SoapElementAttribute"/> is used to override
the serialization, the generated XML element name is now "Truck" instead of
"Wheels".</para>
			<codelink SampleID="SoapElementOverrides" SnippetID="1"/>
		</example>
	</doc><doc for="SoapElementAttribute">
		<summary>
			<para> Specifies
      that the public member value be serialized by the <see cref="System.Xml.Serialization.XmlSerializer"/>
      as an encoded SOAP XML element.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.SoapElementAttribute"/> class
   belongs to a family of attributes that controls how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes, or deserializes, an object
   as encoded SOAP XML. The resulting XML conforms to section 5 of the World Wide Web
   Consortium (www.w3.org) document, "Simple Object
   Access Protocol (SOAP) 1.1". For a complete list of similar attributes, see
<see topic="cpconAttributesThatControlSOAPEncodedSerialization"/> .</para>
			<para>To serialize an object as an encoded SOAP message, you
   must construct the <see cref="System.Xml.Serialization.XmlSerializer"/>
   using an <see cref="System.Xml.Serialization.XmlTypeMapping"/> created
   with the <see cref="System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping"/> method of the
<see cref="System.Xml.Serialization.SoapReflectionImporter"/> class. </para>
			<para>Apply the <see cref="System.Xml.Serialization.SoapElementAttribute"/> to a public field to direct the
<see cref="System.Xml.Serialization.XmlSerializer"/> to serialize the field as an 
encoded SOAP XML element. You can specify an alternative name for the attribute by setting
the <see cref="System.Xml.Serialization.SoapAttributeAttribute.AttributeName"/> property. Set
the <see cref="System.Xml.Serialization.SoapAttributeAttribute.DataType"/> property if the
attribute must be
given a specific XML schema definition (XSD) data type. If the attribute belongs to a
specific XML namespace, set the <see cref="System.Xml.Serialization.SoapAttributeAttribute.Namespace"/> property.</para>
			<para>For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<example>
			<para>The following example serializes an instance of a class
      named <c>Transportation</c> that
   contains a field named <c>Vehicle</c>. A <see cref="System.Xml.Serialization.SoapElementAttribute"/> is applied to the
field. When the field is serialized, the XML element name is "Wheels" instead of
"Vehicle". The <c>SerializeOverride</c> method creates a <see cref="System.Xml.Serialization.SoapElementAttribute"/> and sets the <see cref="System.Xml.Serialization.SoapAttributes.SoapElement"/> property of a <see cref="System.Xml.Serialization.SoapAttributes"/> to the <see cref="System.Xml.Serialization.SoapElementAttribute"/>. The <see cref="System.Xml.Serialization.SoapAttributes"/> is added to a <see cref="System.Xml.Serialization.SoapAttributeOverrides"/> that is used to create an
<see cref="System.Xml.Serialization.XmlTypeMapping"/>. An <see cref="System.Xml.Serialization.XmlSerializer"/> is constructed with the <see cref="System.Xml.Serialization.XmlTypeMapping"/>, and an instance of the <c>Transportation</c> class is again 
serialized. Because the <see cref="System.Xml.Serialization.SoapElementAttribute"/> is used to override
the serialization, the generated XML element name is now "Truck" instead of
"Wheels".</para>
			<codelink SampleID="SoapElementOverrides" SnippetID="1"/>
		</example>
	</doc><doc for="SoapElementAttribute.DataType">
		<summary>
			<para>Gets or sets the XML Schema definition language (XSD) data type of the generated XML element.</para>
		</summary>
		<value>
			<para>One of the XML Schema data types.</para>
		</value>
		<remarks>
			<para>The following table lists the XML Schema
      simple data types with their
      .NET equivalents.</para>
			<para> For the XML Schema <see langword="base64Binary"/> and
<see langword="hexBinary"/> data types, use an array of <see cref="System.Byte"/> structures, and apply a <see cref="System.Xml.Serialization.SoapElementAttribute"/> with the <see cref="System.Xml.Serialization.SoapAttributeAttribute.DataType"/> set to "base64Binary" 
   or "hexBinary", as appropriate. For the XML Schema <see langword="time"/>
   and <see langword="date "/>data types, use the <see cref="System.DateTime"/> type and apply
   the <see cref="System.Xml.Serialization.SoapElementAttribute"/> with the <see cref="System.Xml.Serialization.SoapElementAttribute.DataType"/>
   set to "date"
   or "time".</para>
			<para> For every XML Schema
   data type that is mapped to a string, apply the <see cref="System.Xml.Serialization.SoapElementAttribute"/> with its <see cref="System.Xml.Serialization.SoapElementAttribute.DataType"/> property set to the XML
   Schema type. Note that this will not change the serialization format, only the
   schema for the member.</para>
			<note type="note">
   The
   property is case-sensitive, so you must set
   it exactly to one of
   the XML Schema data
   types.
</note>
			<note type="note">
   Passing binary data as an XML
   element is more efficient then passing it as an XML attribute.
</note>
			<para>For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document, "XML Schema Part
   2: Datatypes".</para>
			<list type="table">
				<listheader>
					<term> XSD data type</term>
					<description> .NET data type</description>
				</listheader>
				<item>
					<term> anyURI</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> base64Binary</term>
					<description>
						<para>Array of <see cref="System.Byte"/> objects</para></description>
				</item>
				<item>
					<term> boolean</term>
					<description><see cref="T:System.Boolean"/></description>
				</item>
				<item>
					<term> byte</term>
					<description><see cref="T:System.SByte"/></description>
				</item>
				<item>
					<term> date</term>
					<description><see cref="T:System.DateTime"/></description>
				</item>
				<item>
					<term> dateTime</term>
					<description><see cref="T:System.DateTime"/></description>
				</item>
				<item>
					<term> decimal</term>
					<description><see cref="T:System.Decimal"/></description>
				</item>
				<item>
					<term> double</term>
					<description><see cref="T:System.Double"/></description>
				</item>
				<item>
					<term> ENTITY</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> ENTITIES</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> float</term>
					<description><see cref="T:System.Single"/></description>
				</item>
				<item>
					<term> gDay</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gMonth</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gMonthDay</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gYear</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gYearMonth</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> hexBinary</term>
					<description>
						<para>Array of <see cref="System.Byte"/> objects</para></description>
				</item>
				<item>
					<term> ID</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> IDREF</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> IDREFS</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> int</term>
					<description><see cref="T:System.Int32"/></description>
				</item>
				<item>
					<term> integer</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> language</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> long</term>
					<description><see cref="T:System.Int64"/></description>
				</item>
				<item>
					<term> Name</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NCName </term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> negativeInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NMTOKEN</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NMTOKENS</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> normalizedString</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> nonNegativeInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> nonPositiveInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NOTATION</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> positiveInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> QName</term>
					<description><see cref="System.Xml.XmlQualifiedName"/></description>
				</item>
				<item>
					<term> duration</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> string</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> short</term>
					<description><see cref="T:System.Int16"/></description>
				</item>
				<item>
					<term> time</term>
					<description><see cref="T:System.DateTime"/></description>
				</item>
				<item>
					<term> token</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> unsignedByte</term>
					<description><see cref="T:System.Byte"/></description>
				</item>
				<item>
					<term> unsignedInt</term>
					<description><see cref="T:System.UInt32"/></description>
				</item>
				<item>
					<term> unsignedLong</term>
					<description><see cref="T:System.UInt64"/></description>
				</item>
				<item>
					<term> unsignedShort</term>
					<description><see cref="T:System.UInt16"/></description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example serializes an instance of a class
      named <c>Transportation</c> that
   contains a field named <c>Vehicle</c>. A <see cref="System.Xml.Serialization.SoapElementAttribute"/> is applied to the
field. When the field is serialized, the XML element name is "Wheels" instead of
"Vehicle". The <c>SerializeOverride</c> method creates a <see cref="System.Xml.Serialization.SoapElementAttribute"/> and sets the <see cref="System.Xml.Serialization.SoapAttributes.SoapElement"/> property of a <see cref="System.Xml.Serialization.SoapAttributes"/> to the <see cref="System.Xml.Serialization.SoapElementAttribute"/>. The <see cref="System.Xml.Serialization.SoapAttributes"/> is added to a <see cref="System.Xml.Serialization.SoapAttributeOverrides"/> that is used to create an
<see cref="System.Xml.Serialization.XmlTypeMapping"/>. An <see cref="System.Xml.Serialization.XmlSerializer"/> is constructed with the <see cref="System.Xml.Serialization.XmlTypeMapping"/>, and an instance of the <c>Transportation</c> class is again 
serialized. Because the <see cref="System.Xml.Serialization.SoapElementAttribute"/> is used to override
the serialization, the generated XML element name is now "Truck" instead of
"Wheels".</para>
			<codelink SampleID="SoapElementOverrides" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SoapElementAttribute.IsNullable">
		<summary>
			<para>Gets or sets a value indicating whether the <see cref="System.Xml.Serialization.XmlSerializer"/> should serialize a member that is set
   to <see langword="null "/>to the <see langword="xsi:null "/>attribute set to
   "1".</para>
		</summary>
		<value>
			<para><see langword="true "/>if the <see cref="System.Xml.Serialization.XmlSerializer"/> generates the
<see langword="xsi:null"/> attribute; otherwise, <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>The XML schema specification for structures allows an XML
      document to explicitly signal that an element's content is missing. Such an
      element contains the attribute <see langword="xsi:null "/>set to
      "1". For more information, see the
      World Wide Web Consortium (www.w3.org)
      specification named "XML Schema Part 1: Structures". </para>
			<para>If the <see cref="System.Xml.Serialization.SoapElementAttribute.IsNullable"/> property is set to
<see langword="true"/>, the <see langword="xsi:null"/> attribute is generated for 
   class members that have been set to <see langword="null"/>. For example,
   if you set a field named <c>MyStringArray</c>
to <see langword="null"/> , the <see cref="System.Xml.Serialization.XmlSerializer"/> generates the following XML code.</para>
			<code>
&lt;MyStringArray xsi:null = "1" /&gt;
</code>
			<para>If the <see cref="System.Xml.Serialization.XmlElementAttribute.IsNullable"/> property is
<see langword="false"/> , no XML element is generated. </para>
			<note type="note">
   You cannot apply the <see cref="System.Xml.Serialization.XmlElementAttribute.IsNullable"/> property to a member typed as a value
   type because a value type cannot contain <see langword="null"/>.
</note>
		</remarks>
	</doc>
</docs>
