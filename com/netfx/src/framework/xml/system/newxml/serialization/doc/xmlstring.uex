<docs>
   <doc for="XmlString">
 
 <summary>
    <para> Provides a set of static methods for converting
       primitive type values to and from their XML string representations.</para>
 </summary>
 <remarks>
 <para>The <see cref='System.Xml.Serialization.XmlString'/> class contains only static methods, and it is not
    possible to create instances of the class.</para>
 <para>The conversions methods provided by <see cref='System.Xml.Serialization.XmlString'/> follow the conventions
 given by the XML Schema Specification ("http://www.w3.org/TR/xmlschema-2").
 This in particular means that date and time formatting is different from that provided
 by DateTime.XmlString and TimeSpan.XmlString types.</para>
 </remarks>
   </doc>
   <doc for="XmlString.FromBoolean">
 <summary>
   Converts a boolean to a string.</summary>
 <param name="value">
   The boolean value to convert.</param>
 <returns>
   "true" if <paramref name="value"/> is true, "false" if <paramref name="value"/>
   is false.</returns>
 <seealso cref="ToBoolean"/>
   </doc>
   <doc for="XmlString.FromInt16">
 <summary>
   Converts a 16-bit integer to a string.</summary>
 <param name="value">
   The 16-bit integer value to convert.</param>
 <returns>
   A string containing the decimal representation of the given value.</returns>
 <seealso cref="ToInt16"/>
   </doc>
   <doc for="XmlString.FromInt32">
 <summary>
   Converts a 32-bit integer to a string.</summary>
 <param name="value">
   The 32-bit integer value to convert.</param>
 <returns>
   A string containing the decimal representation of the given value.</returns>
 <seealso cref="ToInt32"/>
   </doc>
   <doc for="XmlString.FromInt64">
 <summary>
   Converts a 64-bit integer to a string.</summary>
 <param name="value">
   The 64-bit integer value to convert.</param>
 <returns>
   A string containing the decimal representation of the given value.</returns>
 <seealso cref="ToInt64"/>
   </doc>
   <doc for="XmlString.FromSingle">
 <summary>
   Converts an IEEE 32-bit floating point value to a string.</summary>
 <param name="value">
   The IEEE 32-bit floating point value to convert.</param>
 <returns>
   A string containing the decimal representation of the given value.</returns>
 <seealso cref="ToSingle"/>
   </doc>
   <doc for="XmlString.FromDouble">
 <summary>
   Converts an IEEE 64-bit floating point value to a String.</summary>
 <param name="value">
   The IEEE 64-bit floating point value to convert.</param>
 <returns>
   A string containing the decimal representation of the given value.</returns>
 <seealso cref="ToDouble"/>
   </doc>
   <doc for="XmlString.FromDecimal">
 <summary>
   Converts a decimal value to a string.</summary>
 <param name="value">
   The decimal value to convert.</param>
 <returns>
   A string containing the decimal representation of the given value.</returns>
 <seealso cref="ToDecimal"/>
   </doc>
   <doc for="XmlString.FromDateTime">
 <summary>
   Converts a date and time value to a string.</summary>
 <param name="value">
   The date and time value to convert.</param>
 <returns>
   A string of the form YYYY-MM-DDThh:mm:ss.sssssss, where YYYY is the year
   (0001-9999), MM is the month (01-12), DD is the day (01-31), T is the literal
   character "T", hh is the hour (00-23), mm is the minute (00-59), and ss.sssssss
   is the second (00-59), followed, if required, by a decimal point and a fractional
   part of up to seven digits.</returns>
 <seealso cref="ToDateTime"/>
   </doc>
   <doc for="XmlString.FromDate">
 <summary>
   Converts a date value to a string.</summary>
 <param name="value">
   The date value to convert.</param>
 <returns>
   A string of the form YYYY-MM-DD, where YYYY is the year (0001-9999), MM is the
   month (01-12), and DD is the day (01-31).</returns>
 <seealso cref="ToDate"/>
   </doc>
   <doc for="XmlString.FromTime">
 <summary>
   Converts a time-of-day value to a string.</summary>
 <param name="value">
   The time-of-day value to convert.</param>
 <returns>
   A string of the form hh:mm:ss.sssssss, where hh is the hour (00-23), mm is the
   minute (00-59), and ss.sssssss is the second (00-59), followed, if required, by
   a decimal point and a fractional part of up to seven digits.</returns>
 <seealso cref="ToTime"/>
   </doc>
   <doc for="XmlString.FromGuid">
 <summary>
   Converts a guid value to a string.</summary>
 <param name="value">
   The guid value to convert.</param>
 <returns>
    A string of the form hhhhhhhh-hhhh-hhhh-hhhh-hhhhhhhhhhhh where h is a hex digit.
 </returns>
 <seealso cref="ToGuid"/>
   </doc>
   <doc for="XmlString.FromChar">
 <summary>
   Converts a char value to a string.</summary>
 <param name="value">
   The char value to convert.</param>
 <returns>
    the character as a string
 </returns>
 <seealso cref="ToChar"/>
   </doc>
   <doc for="XmlString.IsWhitespace">
 <summary>
    <para>[To be supplied.]</para>
 </summary>
   </doc>
   <doc for="XmlString.ToBoolean">
 <summary>
   Converts a string to a boolean value.</summary>
 <param name="value">
   The string to convert.</param>
 <returns>
   The boolean value true if the given string is "true" or "1", or the boolean
   value false if the given string is "false" or "0".</returns>
 <exception cref="XmlException">
   If the given string is not "true", "false", "1", or "0".</exception>
 <seealso cref="FromBoolean"/>
   </doc>
   <doc for="XmlString.ToInt16">
 <summary>
   Converts a string to a 16-bit integer value.</summary>
 <remarks>
   The <paramref name="value"/> parameter must be a non-null reference to a string
   that contains a well-formed decimal representation of a number between -32768 and
   32768. Leading and trailing blanks are not permitted.</remarks>
 <param name="value">
   The string to convert.</param>
 <returns>
   The 16-bit integer value represented by the string.</returns>
 <exception cref="XmlException">
   If <paramref name="value"/> is null or a reference to a string that does not
   contain a valid decimal representation of a 16-bit integer.</exception>
 <seealso cref="FromInt16"/>
   </doc>
   <doc for="XmlString.ToInt32">
 <summary>
   Converts a string to a 32-bit integer value.</summary>
 <remarks>
   The <paramref name="value"/> parameter must be a non-null reference to a string
   that contains a well-formed decimal representation of a number between -2147483648
   and 2147483647. Leading and trailing blanks are not permitted.</remarks>
 <param name="value">
   The string to convert.</param>
 <returns>
   The 32-bit integer value represented by the string.</returns>
 <exception cref="XmlException">
   If <paramref name="value"/> is null or a reference to a string that does not
   contain a valid decimal representation of a 32-bit integer.</exception>
 <seealso cref="FromInt32"/>
   </doc>
   <doc for="XmlString.ToInt64">
 <summary>
   Converts a string to a 64-bit integer value.</summary>
 <remarks>
   The <paramref name="value"/> parameter must be a non-null reference to a string
   that contains a well-formed decimal representation of a number between
   -9223372036854775808 and 9223372036854775807. Leading and trailing blanks are not
   permitted.</remarks>
 <param name="value">
   The string to convert.</param>
 <returns>
   The 64-bit integer value represented by the string.</returns>
 <exception cref="XmlException">
   If <paramref name="value"/> is null or a reference to a string that does not
   contain a valid decimal representation of a 64-bit integer.</exception>
 <seealso cref="FromInt64"/>
   </doc>
   <doc for="XmlString.ToSingle">
 <summary>
    <para>Converts a string to a single-precision floating point number.</para>
 </summary>
 <param name='value'>The string to convert.</param>
 <returns>
    <para>The single-precision floating point value represented by the string.</para>
 </returns>
 <exception cref='XmlException'>If <paramref name="value"/> is null or a reference to a string that does not contain a valid decimal representation of a single-precision floating point number.</exception>
 <remarks>
 <para>The <paramref name="value"/> parameter must be 
    a non-null reference to a string that contains a well-formed decimal
    representation of a single-precision floating point number. The formats accepted
    by this method correspond to those accepted by the <see cref='System.Xml.Serialization.XmlString.FromSingle'/> method.</para>
 </remarks>
 <seealso cref='System.Xml.Serialization.XmlString.FromSingle'/>
   </doc>
   <doc for="XmlString.ToDouble">
 <summary>
    <para>Converts a string to a double-precision floating point number.</para>
 </summary>
 <param name='value'>The string to convert.</param>
 <returns>
    <para>The double-precision floating point value represented by the string.</para>
 </returns>
 <exception cref='XmlException'>If <paramref name="value"/> is null or a reference to a string that does not contain a valid decimal representation of a double-precision floating point number.</exception>
 <remarks>
 <para>The <paramref name="value"/> parameter must be 
    a non-null reference to a string that contains a well-formed decimal
    representation of a double-precision floating point number. The formats accepted
    by this method correspond to those accepted by the <see cref='System.Xml.Serialization.XmlString.FromDouble'/> method.</para>
 </remarks>
 <seealso cref='System.Xml.Serialization.XmlString.FromDouble'/>
   </doc>
   <doc for="XmlString.ToDecimal">
 <summary>
 <para>Converts a string to a <see cref='System.Decimal'/> value.</para>
 </summary>
 <param name='value'>The string to convert.</param>
 <returns>
 <para>The <see cref='System.Decimal'/> value represented by the string.</para>
 </returns>
 <exception cref='XmlException'>If <paramref name="value"/> is null or a reference to a string that does not contain a valid decimal representation of a <see cref='System.Decimal'/> value.</exception>
 <remarks>
 <para>The <paramref name="value"/> parameter must be 
    a non-null reference to a string that contains a well-formed decimal
    representation of a <see cref='System.Decimal'/> value. The formats
    accepted by this method correspond to those accepted by the <see cref='System.Xml.Serialization.XmlString.FromDecimal'/> method.</para>
 </remarks>
 <seealso cref='System.Xml.Serialization.XmlString.FromDecimal'/>
   </doc>
   <doc for="XmlString.ToDateTime">
 <summary>
   Converts a string to a date and time value.</summary>
 <remarks>
   <para>The <paramref name="value"/> parameter must be a non-null reference to a
   string that contains a well-formed date and time value. The string must be of the
   form YYYY-MM-DDThh:mm:ss.sssssss, where YYYY is the year (0001-9999), MM is the
   month (01-12), DD is the day (01-31), T is the literal character 'T', hh is the
   hour (00-23), mm is the minute (00-59), and ss.sssssss is the second (00-59),
   optionally followed by a decimal point and a fractional part.</para>
   <para>The date and time string may optionally be followed by a time zone
   indicator. The time zone indicator consists either of the letter 'Z' (indicating
   GMT), or of a '+' or '-' followed by a time difference the form hh:mm. In the
   latter case, the indicated time difference is added to or subtracted from the
   resulting value.</para></remarks>
 <param name="value">
   The string to convert.</param>
 <returns>
   The date and time value represented by the string.</returns>
 <exception cref="XmlException">
   If <paramref name="value"/> is null or a reference to a string that does not
   contain a valid date and time value.</exception>
 <seealso cref="FromDateTime"/>
   </doc>
   <doc for="XmlString.ToDate">
 <summary>
   Converts a string to a date value.</summary>
 <remarks>
   The <paramref name="value"/> parameter must be a non-null reference to a string
   that contains a well-formed date. The string must be of the form YYYY-MM-DD,
   where YYYY is the year (0001-9999), MM is the month (01-12), and DD is the day
   (01-31).</remarks>
 <param name="value">
   The string to convert.</param>
 <returns>
   The date value represented by the string.</returns>
 <exception cref="XmlException">
   If <paramref name="value"/> is null or a reference to a string that does not
   contain a valid date value.</exception>
 <seealso cref="FromDate"/>
   </doc>
   <doc for="XmlString.ToTime">
 <summary>
   Converts a string to a time-of-day value.</summary>
 <remarks>
   The <paramref name="value"/> parameter must be a non-null reference to a
   string that contains a well-formed time-of-day value. The string must be of the
   form hh:mm:ss.sssssss, where hh is the hour (00-23), mm is the minute (00-59),
   and ss.sssssss is the second (00-59), optionally followed by a decimal point
   and a fractional part.</remarks>
 <param name="value">
   The string to convert.</param>
 <returns>
   The time-of-day value represented by the string.</returns>
 <exception cref="XmlException">
   If <paramref name="value"/> is null or a reference to a string that does not
   contain a valid time-of-day value.</exception>
 <seealso cref="FromTime"/>
   </doc>
   <doc for="XmlString.ToGuid">
 <summary>
   Converts a string value to a guid.</summary>
 <param name="value">
   The string value to convert.</param>
 <returns>
    The guid value represented by the string.
 </returns>
 <seealso cref="ToGuid"/>
   </doc>
   <doc for="XmlString.ToChar">
 <param name="value">
   The string value to convert.</param>
 <returns>
    The guid value represented by the string.
 </returns>
 <seealso cref="ToGuid"/>
   </doc>
</docs>

