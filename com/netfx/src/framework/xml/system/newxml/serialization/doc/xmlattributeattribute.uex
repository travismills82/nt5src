<docs>
	<doc for="XmlAttributeAttribute.XmlAttributeAttribute2">
		<nodoc/>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> class.</para>
		</summary>
		<param name="type">The <see cref="T:System.Type"/> used to store the attribute. </param>
	</doc>
	<doc for="XmlAttributeAttribute.XmlAttributeAttribute3">
		<nodoc/>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> class.</para>
		</summary>
		<param name="attributeName">The name of the XML attribute that is generated. </param>
		<param name=" type">The <see cref="T:System.Type"/> used to store the attribute. </param>
	</doc>
	<doc for="XmlAttributeAttribute.XmlAttributeAttribute4">
		<nodoc/>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> class.</para>
		</summary>
		<param name="attributeName">The name of the XML attribute that is generated. </param>
		<param name=" type">The <see cref="T:System.Type"/> used to store the attribute. </param>
		<param name=" encoding">The XML encoding of the attribute. Can only be used when the Type is <see cref="T:System.Byte"/>.</param>
	</doc>
	<doc for="XmlAttributeAttribute.Namespace">
		<summary>
			<para>Gets or sets the XML namespace of the XML attribute.</para>
		</summary>
		<value>
			<para>The XML namespace of the XML attribute.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlAttributeAttribute.Namespace"/> property 
   conforms to the http://www.w3.org specification <paramref name="Namespaces in
   XML"/>
   .</para>
To create namespaces that are associated with prefixes,
you must create an <see cref="System.Xml.Serialization.XmlSerializerNamespaces"/>
object that contains the namespaces and prefixes used in the XML document. The namespace you
set for each <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
must match one of the namespaces in the <see cref="System.Xml.Serialization.XmlSerializerNamespaces"/> object.
When the <see cref="System.Xml.Serialization.XmlSerializer"/>
generates the XML code, it
correctly prefixes each attribute name.
</remarks>
		<example>
			<para>The following example applies the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> to two fields contained in a 
   class. The example sets the <see cref="System.Xml.Serialization.XmlAttributeAttribute.Namespace"/> property for each attribute to a value
   different from the member identifier.</para>
			<codelink SampleID="Classic XmlAttributeAttribute.Namespace Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributeAttribute.Form">
		<summary>
			<para>Gets or sets a value indicating whether the XML
      attribute name generated by the <see cref="System.Xml.Serialization.XmlSerializer"/> is qualified.</para>
		</summary>
		<value>
			<para>One of the <see cref="T:System.Xml.Schema.XmlSchemaForm"/> values. The default is
<see langword="XmlForm.None"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlAttributeAttribute.Form"/> property
   determines whether an XML element
   is qualified or unqualified. The <see cref="System.Xml.Serialization.XmlAttributeAttribute.Form"/> property
   conforms to the 1999 http://www.w3.org specification <paramref name="Namespaces in
   XML"/>.</para>
			<para>If the <see cref="System.Xml.Serialization.XmlAttributeAttribute.Namespace"/> property is set to any
value, attempting to set the <see cref="System.Xml.Serialization.XmlElementAttribute.Form"/> property to
<see langword="XmlSchemaForm.Unqualified "/> throws an 
exception.</para>
The default setting, <see langword="XmlSchemaForm.None"/>, instructs the
<see cref="System.Xml.Serialization.XmlSerializer"/> to check 
the schema for the XML document to determine whether the namespace is qualified.
If the schema does not specify a value for an individual element or attribute,
the <see cref="System.Xml.Serialization.XmlSerializer"/> uses the <see langword="elementFormDefault "/>and <see langword="attributeFormDefault "/>values to determine whether
an element or attribute is qualified. The XML code below shows a schema:
<code>
&lt;schema elementFormDefault="qualified" 
attributeFormDefault="unqualified" ... &gt;
   &lt;element name="Name"/&gt;
   &lt;attribute name="Number"/&gt;
&lt;/schema&gt;
</code>
When the <see cref="System.Xml.Serialization.XmlSerializer"/> reads the schema, the <see cref="System.Xml.Serialization.XmlAttributeAttribute.Form"/> value for both the <see langword="Name "/>and <see langword="Number "/>will be
<see langword="XmlSchemaForm.None"/>, but the <see langword="Name "/>element will 
be qualified, while the <see langword="Number "/>element will be unqualified.
</remarks>
		<example>
			<para>The following example applies the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> to two fields contained in a
   class. </para>
			<codelink SampleID="Classic XmlAttributeAttribute.Form Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributeAttribute.Encoding">
		<summary>
			<para>Gets or sets the value of the XML encoding attribute for
      the XML attribute generated by the <see cref="System.Xml.Serialization.XmlSerializer"/> .</para>
		</summary>
		<value>
			<para>"base64" or "hex". The default is "base64".</para>
		</value>
		<remarks>
			<para>You can set the <see cref="System.Xml.Serialization.XmlAttributeAttribute.Encoding"/>
only be when the field or property returns a <see cref="T:System.Byte"/>
array. </para>
		</remarks>
		<example>
			<para>The following example shows a class that contains a
      public byte field with its <see cref="System.Xml.Serialization.XmlAttributeAttribute.Encoding"/>
      property set to "hex".</para>
			<codelink SampleID="Classic XmlAttributeAttribute.Encoding Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeAttribute.XmlAttributeAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> class.</para>
		</summary>
		<example>
			<codelink SampleID="XMLAttributeAttribute_ctr1_2" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeAttribute.XmlAttributeAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
class and specifies the name of the generated XML attribute.</para>
		</summary>
		<param name="attributeName">The name of the XML attribute that the <see cref="System.Xml.Serialization.XmlSerializer"/> generates.</param>
		<example>
			<codelink SampleID="XMLAttributeAttribute_ctr1_2" SnippetID="2"/>
		</example>
	</doc><doc for="XmlAttributeAttribute.AttributeName">
		<summary>
			<para>Gets or sets the name of the XML attribute.</para>
		</summary>
		<value>
			<para>The name of the XML attribute. The default is the member name.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.Xml.Serialization.XmlAttributeAttribute.AttributeName"/> property to
   specify an XML attribute name when the default value cannot be used. For
   example, if the XML attribute name is invalid as a member identifier, you can
   use a valid name for the identifier while setting the <see cref="System.Xml.Serialization.XmlAttributeAttribute.AttributeName"/>
   to an invalid name.</para>
		</remarks>
		<example>
			<para> The following example sets the
      <see cref="System.Xml.Serialization.XmlAttributeAttribute.AttributeName"/> property of an
      <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
   .</para>
			<codelink SampleID="Classic XmlAttributeAttribute.AttributeName Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.Serialization.XmlElementAttribute.ElementName"/>
	</doc><doc for="XmlAttributeAttribute.Type"><nodoc/>
		<summary>
			<para>Gets or sets the complex type of the XML attribute.</para>
		</summary>
		<value>
			<para>The type of
      the XML attribute.</para>
		</value>
	</doc>
	<doc for="XmlAttributeAttribute.DataType">
		<summary>
			<para>Gets or sets the XSD data type of the XML attribute
      generated by the <see cref="System.Xml.Serialization.XmlSerializer"/> .</para>
		</summary>
		<value>
			<para> An XSD (XML Schema Document) data type, as defined by the
      World Wide Web Consortium (www.w3.org) document named "XML
      Schema: DataTypes".</para>
		</value>
		<remarks>
			<para>The following table lists the XSD
      simple data types with their
      .NET equivalents.</para>
			<para> For the XSD <see langword="base64Binary"/> and
<see langword="hexBinary"/> data types, use an array of <see cref="System.Byte"/> structures, and apply a <see cref="System.Xml.Serialization.XmlArrayItemAttribute"/> with the 
<see cref="System.Xml.Serialization.XmlAttributeAttribute.DataType"/> property set to 
   "base64Binary" or "hexBinary", as appropriate. For the XSD <see langword="time"/>
   and <see langword="date "/>data types, use the <see cref="System.DateTime"/> type and apply
   the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> with the <see cref="System.Xml.Serialization.XmlAttributeAttribute.DataType"/>
   set to "date"
   or "time".</para>
			<para> For every
   XSD type that is mapped to a string, apply the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> with its <see cref="System.Xml.Serialization.XmlAttributeAttribute.DataType"/> property set to
   the XSD type. However, this will not change the serialization format, only the
   schema for the member.</para>
			<note type="note">
   The property is case-sensitive, so you must
   set it exactly to one
   of the XSD data
   types.
</note>
			<note type="note">
   Passing binary data as an XML
   element is more efficient then passing it as an XML attribute.
</note>
			<para>For more information about XML data types, see the World
   Wide Web Consortium (www.w3.org) document named "XML Schema Part
   2: Datatypes".</para>
			<list type="table">
				<listheader>
					<term> XSD data type</term>
					<description> .NET data type</description>
				</listheader>
				<item>
					<term> anyURI</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> base64Binary</term>
					<description>
						<para>Array of <see cref="System.Byte"/> objects</para></description>
				</item>
				<item>
					<term> boolean</term>
					<description><see cref="T:System.Boolean"/></description>
				</item>
				<item>
					<term> byte</term>
					<description><see cref="T:System.SByte"/></description>
				</item>
				<item>
					<term> date</term>
					<description><see cref="T:System.DateTime"/></description>
				</item>
				<item>
					<term> dateTime</term>
					<description><see cref="T:System.DateTime"/></description>
				</item>
				<item>
					<term> decimal</term>
					<description><see cref="T:System.Decimal"/></description>
				</item>
				<item>
					<term> double</term>
					<description><see cref="T:System.Double"/></description>
				</item>
				<item>
					<term> ENTITY</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> ENTITIES</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> float</term>
					<description><see cref="T:System.Single"/></description>
				</item>
				<item>
					<term> gDay</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gMonth</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gMonthDay</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gYear</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> gYearMonth</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> hexBinary</term>
					<description>
						<para>Array of <see cref="System.Byte"/> objects</para></description>
				</item>
				<item>
					<term> ID</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> IDREF</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> IDREFS</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> int</term>
					<description><see cref="T:System.Int32"/></description>
				</item>
				<item>
					<term> integer</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> language</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> long</term>
					<description><see cref="T:System.Int64"/></description>
				</item>
				<item>
					<term> Name</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NCName </term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> negativeInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NMTOKEN</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NMTOKENS</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> normalizedString</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> nonNegativeInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> nonPositiveInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> NOTATION</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> positiveInteger</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> QName</term>
					<description><see cref="System.Xml.XmlQualifiedName"/></description>
				</item>
				<item>
					<term> duration</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> string</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> short</term>
					<description><see cref="T:System.Int16"/></description>
				</item>
				<item>
					<term> time</term>
					<description><see cref="T:System.DateTime"/></description>
				</item>
				<item>
					<term> token</term>
					<description><see cref="T:System.String"/></description>
				</item>
				<item>
					<term> unsignedByte</term>
					<description><see cref="T:System.Byte"/></description>
				</item>
				<item>
					<term> unsignedInt</term>
					<description><see cref="T:System.UInt32"/></description>
				</item>
				<item>
					<term> unsignedLong</term>
					<description><see cref="T:System.UInt64"/></description>
				</item>
				<item>
					<term> unsignedShort</term>
					<description><see cref="T:System.UInt16"/></description>
				</item>
			</list>
		</remarks>
		<example>
			<para> The following example applies the
   <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
   to two members, and sets the <see cref="System.Xml.Serialization.XmlAttributeAttribute.DataType"/>
   property set to different values.</para>
			<codelink SampleID="Classic XmlAttributeAttribute.DataType Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlAttributeAttribute">
		<summary>
			<para>Specifies that the <see cref="System.Xml.Serialization.XmlSerializer"/> should serialize the class member as an XML attribute.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
belongs to a family of attributes that controls how the <see cref="System.Xml.Serialization.XmlSerializer"/> serializes, or deserializes, an
object. For a complete list of similar attributes, see <see topic="cpconAttributesThatControlSerialization"/> .</para>
			<para>When applied to a public field or property, the
<see cref="System.Xml.Serialization.XmlAttributeAttribute"/> informs 
   the <see cref="System.Xml.Serialization.XmlSerializer"/> to serialize the member as an XML
   attribute. By default, the <see cref="System.Xml.Serialization.XmlSerializer"/>
   
   serializes public fields and properties as XML elements.</para>
			<para>You can assign the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> only to 
public fields or public properties that return a value (or array of values) that
can be mapped to one of the XML Schema definition language (XSD) simple types
(including all built-in datatypes derived from the XSD
<see langword="anySimpleType"/>
type). The possible types include any that
can be mapped to the XSD simple types, including <see cref="System.Guid"/>, <see cref="System.Char"/> , and enumerations.
See the <see cref="System.Xml.Serialization.XmlAttributeAttribute.DataType"/> property for a list
of XSD types and how they are mapped to .NET data types.</para>
			<para>There are two special attributes that can be set with the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>: the <see langword="xml:lang"/>
(specifies language) and <see langword="xml:space"/> (specifies how to handle
white space) attributes. These attributes are intended to convey information
that is relevant only to an application processing the XML. Examples of setting
these are shown in the following code.</para>
			<code lang="C#">[XmlAttribute("xml:lang")]
public string Lang;
// Set this to 'default' or 'preserve'.
[XmlAttribute("space", 
Namespace = "http://www.w3.org/XML/1998/namespace")]
public string Space 

[Visual Basic]

&lt;XmlAttribute("xml:lang")&gt; _
Public Lang As String 

' Set this to 'default' or 'preserve'.
&lt;XmlAttribute("space", _
Namespace:= "http://www.w3.org/XML/1998/namespace")&gt; _
Public Space As String
</code>
			<para>For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
			<note type="note">
   In your code, you can use the word
<see langword="XmlAttribute "/>
instead of the longer <see cref="System.Xml.Serialization.XmlAttributeAttribute"/> .
</note>
		</remarks>
		<example>
			<para>The following example serializes a class that contains
      several fields to which the <see cref="System.Xml.Serialization.XmlAttributeAttribute"/>
      is applied.</para>
			<codelink SampleID="Classic XmlAttributeAttribute Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
