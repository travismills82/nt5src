<docs>
	<doc for="XmlSchemaElement.IsNullable">
		<summary>
			<para>Indicates if xsi:nill can occur in the instance
      data. Indicator of whether an explicit nill/null value can be assigned to the element.</para>
		</summary>
		<remarks>
			<para> This indicator applies to element content, not
      the attributes of the element. If nillable/nullable is true, this enables an instance of the
      element to have the nill/null attribute set to true. The nill/null attribute is
      defined as part of the XML Schema namespace for instances. </para>
			<para>Default value is false. </para>
		</remarks>
		<example>
			<para>The following fragment defines a single element with nillable/nullable set to true: </para>
			<code>&lt;xsd:element name="myDate" type="xsd:date" nillable="true"/&gt;
   </code>
			<para>The following fragment uses that element and has an explicit nill/null value (nill/null
      attribute set to true): </para>
			<code>&lt;myDate xsi:nill="true"&gt;&lt;/myNS:myDate&gt;
   </code>
		</example>
	</doc>
	<doc for="XmlSchemaElement.SchemaTypeName">
		<summary>
			<para>Gets or sets the name of a built-in data type defined in this schema or another schema
      indicated by the specified namespace. </para>
		</summary>
		<value>
			<para>The name of the built-in data type.</para>
		</value>
	</doc><doc for="XmlSchemaElement.Constraints">
		<summary>
			<para>Gets the collection of constraints on the element.</para>
		</summary>
		<value>
			<para>The collection of constraints.</para>
		</value>
		<remarks>
			<para>Returns a collection of constraints on the element. Can
      be any of <see langword="XmlSchemaKey"/> ,
   <see langword="XmlSchemaKeyref"/>, or
   <see langword="XmlSchemaUnique"/>
   .</para>
		</remarks>
	</doc><doc for="XmlSchemaElement">
		<summary>
			<para> Class for elements. Represents the World Wide Web Consortium (W3C)
   <see langword="element"/> element.</para>
		</summary>
		<example>
			<para>The following example creates the <see langword="element"/> element.</para>
			<codelink SampleID="Classic WebData XmlSchemaElement Example" SnippetID="1"/>
			<para>The following XML file is used for the preceding code example.</para>
			<codelink SampleID="Classic WebData XmlSchemaElement Example" SnippetID="2"/>
		</example>
	</doc>
	<doc for="XmlSchemaElement.DefaultValue">
		<summary>
			<para>Gets or sets the default value of the element if its content
      is a simple type or content of the element is <see langword="textOnly"/>.</para>
		</summary>
		<value>
			<para>The default value for the element. The default is a null reference.</para>
			<para>Optional.</para>
		</value>
		<remarks>
			<para>The <see langword="fixed"/> and <see langword="default"/> attributes are mutually exclusive. If the element
   contains a simple type, this value must be a valid value of that type. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.Final">
		<summary>
			<para>Gets or sets the <see langword="Final"/> property to indicate that no further derivations are allowed.</para>
		</summary>
		<value>
			<para>The <see langword="Final"/> 
property. The default is <see langword="XmlSchemaDerivationMethod.None"/> .</para>
			<para>Optional.</para>
		</value>
		<remarks>
   This attribute can contain the values shown in the
   following table.<list type="table">
				<listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="None"/></term>
					<description>
						<para>Use the derivation restriction defined by the
      <see langword="FinalDefault"/>property of the schema, if it exists.</para></description>
				</item>
				<item>
					<term><see langword="Empty"/></term>
					<description>
						<para>There are no restrictions on derivations of this element.</para></description>
				</item>
				<item>
					<term><see langword="Extension"/></term>
					<description> This element cannot be derived by Extension.</description>
				</item>
				<item>
					<term><see langword="Restriction"/></term>
					<description> This element cannot be derived by Restriction.</description>
				</item>
				<item>
					<term><see langword="All"/></term>
					<description><see langword="#all"/> . This
element cannot be derived by any derivation
method.</description>
				</item>
			</list>
See also <see cref="System.Xml.Schema.XmlSchemaElement"/>. <see langword="Substitution"/>,
<see langword="List"/>, and <see langword="Union"/>
derivation methods are not allowed for this
property.
</remarks>
	</doc>
	<doc for="XmlSchemaElement.FixedValue">
		<summary>
			<para>Gets or sets the fixed value.</para>
		</summary>
		<value>
			<para>The fixed value that is predetermined and unchangeable. The default is a null reference.</para>
			<para>Optional.</para>
		</value>
		<remarks>
			<para> The content should be a simple type or
   <see langword="textOnly"/>
   . The <see langword="fixed"/> and <see langword="default"/>
   attributes
   are mutually exclusive. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.Form">
		<summary>
			<para>Gets or sets the form for the element.</para>
		</summary>
		<value>
			<para> The form for the element. The default is
      the <see cref="System.Xml.Schema.XmlSchema.ElementFormDefault" qualify="true"/> value.</para>
   Optional.
</value>
		<remarks>
			<para>The default value is the value of the
   <see langword="elementFormDefault"/> attribute for the <see langword="schema"/> element containing the element. The
      default is <see langword="Unqualified"/>
      
      . </para>
			<list type="table">
				<listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="Qualified"/></term>
					<description> Element must be qualified
         with the namespace prefix.</description>
				</item>
				<item>
					<term><see langword="Unqualified"/></term>
					<description> Element is not required to be qualified with the namespace
      prefix.</description>
				</item>
			</list>
			<para>The value cannot be set if the containing element is the
<see langword="schema"/> element. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.Name">
		<summary>
			<para>Gets or sets the name of the element.</para>
		</summary>
		<value>
			<para>The name of the element. The default is 
   <see langword="String.Empty"/> .</para>
		</value>
		<remarks>
			<para>The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML
      Namespaces specification. <see langword="Name"/> and <see langword="RefName"/> attributes are mutually exclusive. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.IsNillable">
		<summary>
			<para>Gets or sets information that indicates if <see langword="xsi:nil"/> can occur in the instance data.
   Indicates if an explicit nil value can be assigned to the element.</para>
		</summary>
		<value>
			<para>If nillable is <see langword="true"/>, this enables an instance of the element
   to have the <see langword="nil"/> attribute set to <see langword="true"/>. The
<see langword="nil"/> 
attribute is defined as part of the XML
Schema namespace for instances. The default is <see langword="false"/> . </para>
			<para>Optional. </para>
		</value>
		<remarks>
			<para>This applies to element content and not the attributes of
      the
      element. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.RefName">
		<summary>
			<para>Gets or sets the reference name of an element declared
      in this schema (or another schema indicated by the specified namespace).</para>
		</summary>
		<value>
			<para>The reference name of the element.</para>
		</value>
		<remarks>
			<para> The <see langword="RefName"/> must be a QName. The
<see langword="RefName"/> can include a 
   namespace prefix. If <see langword="RefName"/>
   attribute is present, all
<see langword="complexType"/>, <see langword="simpleType"/>, <see langword="key"/>, 
<see langword="keyref"/>, <see langword="unique"/>, <see langword="nillable"/>, 
<see langword="default"/>, <see langword="fixed"/>, <see langword="form"/>, 
<see langword="block"/>, and <see langword="type"/> must be absent. If 
<see langword="RefName"/> is present, <see langword="minOccurs"/>, 
<see langword="maxOccurs"/>, and <see langword="id"/> are 
   allowed. To declare an element using an existing element definition, use the
<see langword="RefName"/>
attribute to specify the
existing element definition. </para>
			<para>The value cannot be set if the containing element is the
<see langword="schema"/> element. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.SubstitutionGroup">
		<summary>
			<para> Gets or sets the name of an element that is being substituted by this
      element.</para>
		</summary>
		<value>
			<para>The qualified name of an element that is being substituted by this element.</para>
			<para>Optional.</para>
		</value>
		<remarks>
			<para>This element must have the same type or a type derived from the type of the
      specified element. This value must be a QName.</para>
			<para>The value cannot be set if the containing element is the
   <see langword="schema"/> element. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.SchemaType">
		<summary>
			<para>Gets or sets the type of the element. This can either be a complex type
      or a simple type.</para>
		</summary>
		<value>
			<para>The type of the element.</para>
		</value>
		<remarks>
			<para> To declare an
      element using an existing <see langword="simpleType"/> or
   <see langword="complexType"/> definition, use the
   <see langword="SchemaType"/> property to specify the existing type. If
   <see langword="RefName "/>attribute is
      present, <see langword=" complexType"/>,<see langword=" simpleType"/>,<see langword=" key"/>,<see langword=" keyref"/>, and<see langword=" unique "/>elements and
   <see langword="nillable"/>, <see langword="default"/>,
   <see langword="fixed"/>, <see langword="form"/>, <see langword="block"/>, and
   <see langword="SchemaType"/>
   attributes cannot be present. </para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.QualifiedName">
		<summary>
			<para>Gets the actual qualified name for the given element.
      This is the name that a <see langword="ref"/> attribute
      refers to. The qualified name consists of the NCName of the element. For
      example, element name = "NCName", and the prefix used to describe the
   <see langword="targetNamespace"/>
   of the schema. This property holds the
   post-compilation value of the <see langword="QualifiedName"/> property.</para>
		</summary>
		<value>
			<para>The qualified name of the element. The post-compilation
      value of the <see langword="QualifiedName"/> property.</para>
		</value>
	</doc>
	<doc for="XmlSchemaElement.IsAbstract">
		<summary>
			<para>Gets or sets information to indicate if the element
      can be used in an instance document.</para>
		</summary>
		<value>
			<para> If <see langword="true"/> , the element cannot appear in
   the instance document. The default is <see langword="false"/> . </para>
			<para>Optional.</para>
		</value>
	</doc>
	<doc for="XmlSchemaElement.Block">
		<summary>
			<para>Gets or sets a <see langword="Block"/> derivation.</para>
		</summary>
		<value>
			<para>The attribute used to block a type derivation. Default value
      is <see langword="XmlSchemaDerivationMethod.None"/> .</para>
			<para>Optional.</para>
		</value>
		<remarks>
			<para>This attribute can contain the following values:</para>
			<list type="table">
				<listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="None"/></term>
					<description> Use the derivation restriction defined by the
      <see langword="BlockDefault"/> property of the schema, if it
         exists.</description>
				</item>
				<item>
					<term><see langword="Empty"/></term>
					<description> There are no restrictions on replacements of this element.</description>
				</item>
				<item>
					<term><see langword="Substitution"/></term>
					<description>This element cannot be replaced by a type derived by Substitution.</description>
				</item>
				<item>
					<term><see langword="Extension"/></term>
					<description>This element cannot be replaced by a type derived by Extension.</description>
				</item>
				<item>
					<term><see langword="Restriction"/></term>
					<description>This element cannot be replaced by a type derived by Restriction.</description>
				</item>
				<item>
					<term><see langword="All"/></term>
					<description><see langword="#all"/> . This
element
cannot be replaced by any type regardless of derivation method.</description>
				</item>
			</list>
			<para>This property does not prevent derivation, but prevents
   derivation from replacing the type in an instance. List and union values are not
   supported for the <see langword="block"/>
   property.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.ElementType">
		<summary>
			<para>Gets a common language runtime (CLR) object based on
      the <see cref="System.Xml.Schema.XmlSchemaElement"/> or <see cref="System.Xml.Schema.XmlSchemaElement"/>of the element,
      which holds the post-compilation value of the <see langword="ElementType"/> property.</para>
		</summary>
		<value>
			<para>The common language runtime object. The post-compilation
      value of the <see langword="ElementType"/> property.</para>
		</value>
		<remarks>
			<para>The object can be <see cref="System.Xml.Schema.XmlSchemaDatatype"/> if the element has a built-in
   XML Schema type or <see cref="System.Xml.Schema.XmlSchemaSimpleType"/>
   
   if the element has a user-defined
   type.</para>
			<para> This property is a post-schema-validation infoset
   property.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.BlockResolved">
		<summary>
			<para>Gets the post-compilation value of
      the <see langword="Block"/> property, which holds the post-compilation
      value of the <see langword="Block"/>
      property.</para>
		</summary>
		<value>
			<para>The post-compilation value of the <see langword="Block"/> property. The default is the
<see langword="BlockDefault"/> value on the <see langword="schema"/> element.</para>
		</value>
		<remarks>
			<para>This value indicates how the type is enforced when
   <see langword="xsi:type"/> is used in
      the instance document. For example, if the value is restricted, only the
      specific defined type can be used, not types derived by restriction from the specific
      defined type. </para>
			<para> This
      property can contain the
      values shown in the
      following table. The default is <see langword="None"/>. List and union derivation
      methods are not allowed on this property. </para>
			<list type="table"><listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="Empty"/></term>
					<description><para>There are no restrictions on replacements of this element.</para></description>
				</item>
				<item>
					<term><see langword="Substitution"/></term>
					<description> This element cannot be replaced by a type derived by
   Substitution.</description>
				</item>
				<item>
					<term><see langword="Extension"/></term>
					<description> This element cannot be replaced by a type derived by Extension.</description>
				</item>
				<item>
					<term><see langword="Restriction"/></term>
					<description> This element cannot be replaced by a type derived by Restriction.</description>
				</item>
				<item>
					<term><see langword="All"/></term>
					<description><see langword="#all"/>. This
element cannot be replaced by any type regardless of derivation
method.</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="XmlSchemaElement.FinalResolved">
		<summary>
			<para>Gets the post-compilation value of the
   <see langword="Final"/> property, which holds the post-compilation
      value of the <see langword="Final"/>
      property.</para>
		</summary>
		<value>
			<para>The post-compilation value of the <see langword="Final"/> property. Default value is the
<see langword="FinalDefault"/> value on the <see langword="schema"/> element.</para>
		</value>
		<remarks>
			<para>This value indicates how the type is restricted when the
      type is extended through restriction. This property can contain the following
      values.</para>
			<list type="table"><listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="Empty"/></term>
					<description>
						<para>There are no restrictions on derivations of
         this element.</para></description>
				</item>
				<item>
					<term><see langword="Extension"/></term>
					<description> This element cannot be derived by Extension.</description>
				</item>
				<item>
					<term><see langword="Restriction"/></term>
					<description> This element cannot be derived by Restriction.</description>
				</item>
				<item>
					<term><see langword="All"/></term>
					<description><see langword="#all"/> . This
element cannot be derived by any derivation
method.</description>
				</item>
			</list>
Substitution, List, and Union derivation methods are not allowed for this
property.
</remarks>
	</doc>
</docs>
