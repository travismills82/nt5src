<docs>
	<doc for="XmlSchemaComplexType.Final">
		<summary>
			<para>Type of derivation. <see langword="Final"/> attribute prevents the specified
   type of derivation of this complex type.</para>
		</summary>
		<remarks>
			<para>Default is None. This value can contain #all or a list
      that is a subset of extension/restriction. </para>
   The <see langword="final"/> attribute prevents a complex type that has
   the specified type of derivation from being used in place of this complex type.
   The value can contain #all or a list that is a subset of extension/restriction.
   <list type="table"><listheader><term>Enum</term><description>Description</description></listheader><item><term> None</term><description><para>Cannot be derived from.</para></description></item><item><term> Extension</term><description>Can only be derived from by Extension.</description></item><item><term> Restriction</term><description>Can only be derived from by Restriction.</description></item><item><term> all</term><description>#all. No restrictions on derivations from this
               type.</description></item></list></remarks>
	</doc>
	<doc for="XmlSchemaComplexType.FinalResolved">
		<summary>
			<para>The value after element has been compiled to post-schema 
      infoset. This value indicates how the type is restricted when the type is
      extended through restriction. If the type is marked as final then this type
      cannot be extended.</para>
		</summary>
		<remarks>
			<para>This value is either from the type itself or if not defined on the type taken 
      from the <see langword="schema"/> element. </para>
   
   The value can contain #all or a list that is a subset of
   extension/restriction.<list type="table"><listheader><term>Enum</term><description>Description</description></listheader><item><term> None</term><description><para>Cannot be derived from.</para></description></item><item><term> Extension</term><description>Can only be derived from by Extension.</description></item><item><term> Restriction</term><description>Can only be derived from by Restriction.</description></item><item><term> all</term><description>#all. No restrictions on derivations from this
            type.</description></item></list></remarks>
	</doc>
	<doc for="XmlSchemaComplexType.anyType;">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaComplexType.XmlSchemaComplexType1">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaComplexType.XmlSchemaComplexType">
		<summary>
			<para>Used to create a <see langword="complexType"/> element.</para>
		</summary>
	</doc><doc for="XmlSchemaComplexType.Attributes">
		<summary>
			<para>Gets the collection of attributes for the complex type.</para>
		</summary>
		<value>
			<para>Contains <see cref="System.Xml.Schema.XmlSchemaAttribute"/> and <see cref="System.Xml.Schema.XmlSchemaAttributeGroupRef"/> classes.</para>
		</value>
	</doc><doc for="XmlSchemaComplexType.AttributeUses">
		<summary>
			<para> Gets the collection of all the attributes from this 
      complex type and its base types which holds the post-compilation value of the
   <see langword="AttributeUses"/> 
   property.</para>
		</summary>
		<value>
			<para>The collection of all the attributes from this complex 
      type and its base types. The post-compilation value of
      the <see langword="AttributeUses"/>
      property.</para>
		</value>
		<remarks>
			<para>For example, a combination of all the attributes from
      the <see langword="Attributes"/> property from each
      type in the hierarchy. </para>
			<para>The value of this property is read-only. This property
      has the value after the schema has been successfully compiled
      to determine the complete attribute set that is allowed in an instance
      document.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType.AttributeWildcard">
		<summary>
			<para>Gets the <see langword="anyAttribute"/> element from this complex type and
   its base types which holds the post-compilation value of
   the <see langword="AttributeWildcard"/>
   property.</para>
		</summary>
		<value>
			<para>The post-compilation value of the
   <see langword="anyAttribute"/> element.</para>
		</value>
		<remarks>
			<para>The value of this property is read-only. This property 
      have values after the schema has been successfully compiled to determine the
      complete attribute set of the complex type. For example, it might be the
   <see langword="anyAttribute"/> 
   element from
   one of the base types.</para>
		</remarks>
	</doc><doc for="XmlSchemaComplexType.ContentModel">
		<summary>
			<para>Gets or sets the content model type. </para>
		</summary>
		<value>
			<para>The content model type that is one of the <see cref="System.Xml.Schema.XmlSchemaSimpleContent"/> or <see cref="System.Xml.Schema.XmlSchemaComplexContent"/> classes. </para>
		</value>
		<remarks>
			<para>This is mutually exclusive with the <see cref="System.Xml.Schema.XmlSchemaComplexType.Particle"/> property.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType.Particle">
		<summary>
			<para> Gets or sets the compositor type as one of the
   <see cref="System.Xml.Schema.XmlSchemaGroupRef"/>, <see cref="System.Xml.Schema.XmlSchemaChoice"/>, <see cref="System.Xml.Schema.XmlSchemaAll"/>,
      or <see cref="System.Xml.Schema.XmlSchemaSequence"/>
      classes.</para>
		</summary>
		<value>
			<para>The compositor type.</para>
		</value>
		<remarks>
			<para>Particles must be one of the following compositors:</para>
			<list type="table"><listheader>
					<term>Element</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="group"/></term>
					<description>The complex type contains the elements
      defined in the referenced group.</description>
				</item>
				<item>
					<term><see langword="sequence"/></term>
					<description>The complex type contains the elements defined in the specified
   sequence.</description>
				</item>
				<item>
					<term><see langword="choice"/></term>
					<description>The complex type allows one of the elements specified in the
<see langword="choice"/> element.</description>
				</item>
				<item>
					<term><see langword="all"/></term>
					<description> The complex type allows all of the elements specified in the
<see langword="all"/> element to 
   appear once or not at all.</description>
				</item>
			</list>
			<para>This is mutually exclusive with the <see cref="System.Xml.Schema.XmlSchemaComplexType.ContentModel"/> property.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType">
		<summary>
			<para>Class for complex types. Defines a complex type that
      determines the set of attributes and content of an element. Represents the World
      Wide Web Consortium (W3C) <see langword="complexType"/>
      element.</para>
		</summary>
		<remarks>
			<para>An element can be declared with a type attribute that
      refers to a <see langword="complexType"/> element that defines the structure,
      content, and attributes of that element.</para>
		</remarks>
		<example>
			<para>The following example creates a <see langword="complexType"/> element.</para>
			<codelink SampleID="Classic WebData XmlSchemaComplexType Example" SnippetID="1"/>
			<para>The following XML file is used for the preceding code example.</para>
			<codelink SampleID="Classic WebData XmlSchemaComplexType Example" SnippetID="2"/>
		</example>
	</doc>
	<doc for="XmlSchemaComplexType.IsAbstract">
		<summary>
			<para>Gets or sets the information that determines if the <see langword="complexType "/> element can be used in the instance document.</para>
		</summary>
		<value>
			<para>If <see langword="true"/> , an element cannot use this
<see langword="complexType"/> element directly and must use a complex type that 
   is derived from this <see langword="complexType"/> element. The default is
<see langword="false"/> . </para>
			<para>Optional.</para>
		</value>
	</doc>
	<doc for="XmlSchemaComplexType.Block">
		<summary>
			<para>Gets or sets the <see langword="block"/> attribute.</para>
		</summary>
		<value>
			<para>The <see langword="block"/> 
attribute prevents a complex type from being used in the specified type of derivation.
The default is <see langword="XmlSchemaDerivationMethod.None"/>

.</para>
			<para>Optional.</para>
		</value>
		<remarks>
			<para> Indicates the type of derivation.</para>
			<para>This attribute can contain the following values:</para>
			<list type="table">
				<listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="None"/></term>
					<description> Use the derivation restriction defined by the
      <see langword="BlockDefault"/> property of the schema, if it
         exists.</description>
				</item>
				<item>
					<term><see langword="Extension"/></term>
					<description>This element cannot be replaced by a type derived by Extension.</description>
				</item>
				<item>
					<term><see langword="Restriction"/></term>
					<description>This element cannot be replaced by a type derived by Restriction.</description>
				</item>
				<item>
					<term><see langword="All"/></term>
					<description><see langword="#all"/> . This
element
cannot be replaced by any type regardless of derivation method.</description>
				</item>
			</list>
			<para>The <see langword="Substitution"/>, <see langword="List"/>, 
and <see langword="Union"/> derivation methods are not supported by
this property.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType.IsMixed">
		<summary>
			<para> Gets or sets information that determines if the complex type has a mixed content
      model (markup within the content).</para>
		</summary>
		<value>
			<para><see langword="true"/>, if character data can appear 
   between child elements of this complex type; otherwise <see langword="false"/>
   . The default is <see langword="false"/>
   .</para>
			<para>Optional.</para>
		</value>
		<remarks>
			<para>Indicates if character data can appear between the child
      elements of this <see langword="complexType"/>
      . If the <see langword="simpleContent"/> element is
      a child element, the <see langword="mixed"/> attribute is not allowed
      (<see langword="false"/>
      ). If the <see langword="complexContent "/>element is a child element, the
   <see langword="mixed"/> attribute can be overridden by the <see langword="mixed"/>
   attribute on the <see langword="complexContent"/>
   
   element.</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType.AnyAttribute">
		<summary>
			<para>Gets or sets the value for the
   <see langword="XmlSchemaAnyAttribute"/> component of the complex
      type.</para>
		</summary>
		<value>
			<para>The <see langword="XmlSchemaAnyAttribute"/> component of
   the complex type.</para>
		</value>
		<remarks>
			<para>If this property is not null, the complex type can
      contain any attributes from the namespaces specified in the
   <see langword="XmlSchemaAnyAttribute"/> .</para>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType.ContentType">
		<summary>
			<para>Gets the content model of the complex type which holds
      the post-compilation value.</para>
		</summary>
		<value>
			<para>The post-compilation value of the content model for the complex type.</para>
		</value>
		<remarks>
			<para> This is the content in the post-schema validation infoset. </para>
			<para>If the <see langword="IsMixed"/> 
property is set to <see langword="true"/> on the
<see langword="ContentModel"/> property that has the type 
<see langword="XmlSchemaComplexContent"/> , the value returned is 
<see langword="Mixed"/>.</para>
			<para>If the <see langword="IsMixed"/> 
property is <see langword="false"/> , the value is either
<see langword="Empty"/> or <see langword="ElementOnly"/>.</para>
			<para>If the type on the <see langword="ContentModel"/> property has the type
<see langword="XmlSchemaSimpleContent"/>, then this value is always 
<see langword="TextOnly"/>.</para>
			<para>The <see langword="ContentType"/> 
property must have one of the values shown in the following
table. </para>
			<list type="table">
				<listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="TextOnly"/></term>
					<description> Text-only content.</description>
				</item>
				<item>
					<term><see langword="Empty"/></term>
					<description>Empty content.</description>
				</item>
				<item>
					<term><see langword="ElementOnly"/></term>
					<description> Element-only content.</description>
				</item>
				<item>
					<term><see langword="Mixed"/></term>
					<description>Mixed content model.</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="XmlSchemaComplexType.ContentTypeParticle">
		<summary>
			<para>Gets the particle which holds the post-compilation value
      of the <see langword="ContentTypeParticle"/> property. This
   <see langword="ContentTypeParticle"/> is determined after the content models of the most derived types and the base complex type have been resolved
      according to the rules defined in the World Wide Web Consortium (W3C) XML Schema
      definition language (XSD) specification. </para>
		</summary>
		<value>
			<para>The particle for the content type. The post-compilation
      value of the <see langword="ContentTypeParticle"/> property.</para>
		</value>
	</doc>
	<doc for="XmlSchemaComplexType.BlockResolved">
		<summary>
			<para> Gets the value after the type has been compiled to the
      post-schema-validation infoset. This value indicates how the type is enforced when
   <see langword="xsi:type"/>
   is used in
   the instance document.</para>
		</summary>
		<value>
			<para> The post-schema-validated-infoset value. The default is
   <see langword="BlockDefault"/> value on the <see langword="schema"/> element.</para>
		</value>
		<remarks>
			<para>This value is either from the type itself or, if not defined at the
      type level, it is taken from the <see langword="schema"/>
      element. For example, if the value is restricted, only the specifically defined
      type can be used, not types derived from the specifically defined type.</para>
			<para>This attribute can contain the following values:</para>
			<list type="table">
				<listheader>
					<term>Enum</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="None"/></term>
					<description> Use the derivation restriction defined by the
      <see langword="BlockDefault"/> property of the schema, if it
         exists.</description>
				</item>
				<item>
					<term><see langword="Extension"/></term>
					<description>This element cannot be replaced by a type derived by Extension.</description>
				</item>
				<item>
					<term><see langword="Restriction"/></term>
					<description>This element cannot be replaced by a type derived by Restriction.</description>
				</item>
				<item>
					<term><see langword="All"/></term>
					<description><see langword="#all"/> . This
element
cannot be replaced by any type regardless of derivation method.</description>
				</item>
			</list>
			<para>The <see langword="Substitution"/>, <see langword="List"/>, 
and <see langword="Union"/> derivation methods are not supported by
this property.</para>
		</remarks>
	</doc>
</docs>
