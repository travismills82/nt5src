<docs>
	<doc for="XmlSchemaCollection.Remove">
		<overload>
			<para>Removes a schema from the
      collection.</para>
		</overload>
		<summary>
			<para>Removes the XmlSchema from the collection.</para>
		</summary>
		<param name="schema">schema to remove from the collection</param>
		<seealso cref="System.Xml.Schema.XmlSchema"/>
	</doc>
	<doc for="XmlSchemaCollectionEnumerator">
		<summary>
			<para>Supports a simple iteration over a collection. This class cannot be
       inherited.</para>
		</summary>
	</doc>
	<doc for="XmlSchemaCollection.Remove1">
		<summary>
			<para>Removes the schema associated with the given namespace URI.</para>
		</summary>
		<param name="ns">The namespace URI associated with the schema you want to remove. For XSD schemas, this will typically be the targetNamespace.</param>
		<example>
			<para>The following removes a schema from the collection.</para>
			<codelink SampleID="Classic WebData XmlSchemaCollection.Count Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollectionEnumerator.IEnumerator.Reset">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollection.CopyTo">
		<summary>
			<para>Copies all the <see langword="XmlSchema"/> objects from this
   collection into the given array starting at the given index.</para>
		</summary>
		<param name="array">The array to copy the objects to.</param>
		<param name=" index">The index in <paramref name="array"/> where copying will begin.</param>
	</doc><doc for="XmlSchemaCollection.XmlSchemaCollection">
		<overload>
			<para>Initializes a new instance of the
   <see langword="XmlSchemaCollection"/>
   class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the
   <see langword="XmlSchemaCollection"/> class.</para>
		</summary>
	</doc><doc for="XmlSchemaCollection.XmlSchemaCollection1">
		<summary>
			<para>Initializes a new instance of the
   <see langword="XmlSchemaCollection"/>
   class with the specified <see cref="System.Xml.XmlNameTable"/> . The <see langword="XmlNameTable"/>
   is used when loading schemas.</para>
		</summary>
		<param name="nametable">The <see langword="XmlNameTable"/> to use.</param>
	</doc><doc for="XmlSchemaCollection.Count">
		<summary>
			<para> Gets the number of namespaces defined in this collection.</para>
		</summary>
		<value>
			<para>The number of namespaces defined in
      this collection.</para>
		</value>
	</doc><doc for="XmlSchemaCollection.NameTable">
		<summary>
			<para>Gets the default <see langword="XmlNameTable"/> used by
   the <see langword="XmlSchemaCollection"/> when loading new schemas.</para>
		</summary>
		<value>
			<para>An <see langword="XmlNameTable"/> .</para>
		</value>
		<seealso cref="System.Xml.XmlNameTable"/>
	</doc><doc for="XmlSchemaCollection.IEnumerable.GetEnumerator">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollection.ICollection.Count">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollectionEnumerator.IEnumerator.MoveNext">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollectionEnumerator.IEnumerator.Current">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlSchemaCollection.this">
		<summary>
			<para> Gets the <see cref="System.Xml.Schema.XmlSchema"/> associated with the given namespace URI.</para>
		</summary>
		<param name="ns">The namespace URI associated with the schema you want to return. This will typically be the <see langword="targetNamespace"/> of the schema.</param>
		<value>
			<para>The <see langword="XmlSchema"/> associated with the namespace URI;
<see langword="null"/> 
if there is no loaded schema associated
with the given namespace or
if the namespace is associated with an XML-Data Reduced (XDR) schema.</para>
		</value>
		<example>
			<para>The following example checks to see if a schema is in the collection. If it is, it displays the schema. </para>
			<codelink SampleID="Classic WebData XmlSchemaCollection.this Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection.ValidationEventHandler">
		<summary>
			<para> Sets an event handler for receiving information about the XML-Data Reduced (XDR) and XML
      Schema definition language (XSD) schema validation errors.</para>
		</summary>
		<remarks>
			<para>These events occur when the schemas are added to the
      collection. If an event handler is not provided, an <see cref="System.Xml.Schema.XmlSchemaException"/> is
      thrown on any validation errors where the <see cref="System.Xml.Schema.ValidationEventArgs.Severity"/> is
   <see langword="XmlSeverityType.Error"/>
   . To specify an event handler, define a callback
   function and add it to the <see langword="ValidationEventHandler"/>.</para>
		</remarks>
		<example>
			<para>The following example shows how to set an event handler to handle invalid
      XML Schemas.
      </para>
			<codelink SampleID="XmlSchema.ValidationEventHandler" SnippetID="1"/>
The preceding example uses the file, <see langword="invalid.xsd"/>


 



 , as input.
 

<codelink SampleID="XmlSchema.ValidationEventHandler" SnippetID="2"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection.Contains">
		<overload>
			<para>Gets a value indicating whether a schema
      with the specified namespace is in the collection.</para>
		</overload>
		<summary>
			<para>Gets a value indicating whether the 
   <see langword="targetNamespace"/> of the
      specified <see cref="System.Xml.Schema.XmlSchema"/> is in the collection.</para>
		</summary>
		<param name="schema">The <see langword="XmlSchema"/> object.</param>
		<returns>
			<para><see langword="true"/> if there is a 
   schema in the collection with the same <see langword="targetNamespace"/>
   ; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="XmlSchemaCollection.GetEnumerator">
		<summary>
			<para>Provides support for the "for each" style iteration over the collection of schemas.</para>
		</summary>
		<returns>
			<para>An enumerator for iterating over all schemas in the
      current collection.</para>
		</returns>
		<example>
			<para>The following example displays each of the XML Schema definition language (XSD) schemas in the schema
      collection.
      
   </para>
			<codelink SampleID="Classic WebData XmlSchemaCollection.GetEnumerator Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.Schema.XmlSchemaCollectionEnumerator"/>
	</doc>
	<doc for="XmlSchemaCollectionEnumerator.MoveNext">
		<summary>
			<para>Advances the enumerator to the
      next schema in the collection.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the move was successful; <see langword="false"/> if the enumerator has passed the end of the collection.</para>
		</returns>
		<example>
			<para>The following example displays each of the XML Schema definition language (XSD) schemas in the schema
      collection.
      
   </para>
			<codelink SampleID="Classic WebData XmlSchemaCollection.GetEnumerator Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollectionEnumerator.Current">
		<summary>
			<para>Gets the current <see cref="System.Xml.Schema.XmlSchema"/> in the collection.</para>
		</summary>
		<value>
			<para>The current <see langword="XmlSchema"/> in the collection.</para>
		</value>
		<example>
			<para>The following example displays each of the XML Schema definition language (XSD) schemas in the schema
      collection.
      
   </para>
			<codelink SampleID="Classic WebData XmlSchemaCollection.GetEnumerator Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection.Contains1">
		<summary>
			<para>Gets a value indicating whether a schema with the specified namespace is in the
      collection.</para>
		</summary>
		<param name="ns">The namespace URI associated with the schema. For XML Schema definition language (XSD) schemas, this will typically be the target namespace.</param>
		<returns>
			<para><see langword="true"/> if a schema
   with the specified namespace is in the collection; otherwise,
<see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following example checks to see if a schema is in
      the collection. If it is, it displays the schema.
      </para>
			<codelink SampleID="Classic WebData XmlSchemaCollection.this Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection">
		<summary>
			<para> Contains a cache of XML Schema definition language (XSD) and XML-Data
      Reduced (XDR) schemas. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>Schemas are loaded using the <see cref="System.Xml.Schema.XmlSchemaCollection.Add"/> method, at which time
   the schema is associated with a namespace URI. For XML Schemas, this will
   typically be the <see langword="targetNamespace"/> property of
   the
   
   schema.</para>
			<para> Although this class stores both XML Schemas and XDR schemas, any method and
   property that takes or returns an <see cref="System.Xml.Schema.XmlSchema"/> applies to XML Schemas only. </para>
			<para> This version of the product supports the World Wide Web Consortium
   (W3C) XML Schema recommendation located at http://www.w3.org/TR/xmlschema-1 and
   http://www.w3.org/TR/xmlschema-2.
   An XML Schema must reference the W3C Schema namespace, <see langword="http://www.w3.org/2001/XMLSchema"/>
   in its schema element. See the <see cref="System.Xml.Schema.XmlSchemaCollection.Add"/> method for an example.</para>
			<para><see langword="XmlSchemaCollection"/> can be used by <see cref="System.Xml.XmlValidatingReader"/>
for efficient data validation.</para>
		</remarks>
		<example>
			<para>The following example validates an XML document using the
   <see langword="XmlSchemaCollection"/>.
      </para>
			<codelink SampleID="XmlSchemaCollection.Basic" SnippetID="1"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection.Add3">
		<summary>
			<para>Adds all the namespaces defined in the given collection
      (including their associated schemas) to this collection.</para>
		</summary>
		<param name="schema">The <see langword="XmlSchemaCollection"/> you want to add to this collection.</param>
		<remarks>
			<para>If the schema being added contains references to other namespaces (through
   <see langword="include"/> and <see langword="import"/> elements, or the
   <see langword="x-schema"/> attribute), the trust level of the
      application determines how these other namespaces are resolved. (In version 1.0 of
      the .NET Framework, a default <see cref="System.Xml.XmlUrlResolver"/> was always used).</para>
			<para><see langword="Fully-trusted code:"/> A default
<see langword="XmlUrlResolver"/> with no user credentials is used to resolve any 
   external resources. The schemas for these other namespaces are loaded for
   validation purposes only. Unlike the original schema, these other schemas are
   not explicitly added to the schema collection. As a result, they are not
   accessible using any of the collection methods or properties. If these external
   resources are located on a network resource that requires authentication, use
   an overload that takes an <see cref="System.Xml.XmlResolver"/> as one of its arguments and specify an
<see langword="XmlResolver"/> with the necessary credentials.</para>
			<para><see langword="Semi-trusted code:"/> External references are not resolved.</para>
			<note type="note">
   If the
<see langword="XmlSchemaCollection"/> is being accessed using the <see cref="System.Xml.XmlValidatingReader.Schemas" qualify="true"/> property, the 
<see langword="Add"/> method uses the <see langword="XmlResolver"/> specified by 
   the <see cref="System.Xml.XmlValidatingReader.XmlResolver" qualify="true"/> property.
</note>
		</remarks>
	</doc>
	<doc for="XmlSchemaCollection.Add">
		<overload>
			<para>Adds the given schema into
      the schema collection.</para>
		</overload>
		<summary>
			<para>Adds the schema located by the given URL into the schema
      collection.</para>
		</summary>
		<param name="ns">The namespace URI associated with the schema. For XML Schema definition language (XSD) schemas, this will typically be the <see langword="targetNamespace"/> .</param>
		<param name=" uri">The URL that specifies the schema to load.</param>
		<returns>
			<para>The <see cref="System.Xml.Schema.XmlSchema"/> added to the schema collection;
<see langword="null"/> if the schema being added is an XML-Data Reduced (XDR) schema or if there 
   are compilation errors in the schema.</para>
		</returns>
		<exception cref="XmlSchemaException">The schema is not a valid schema.</exception>
		<remarks>
			<para>If <paramref name="ns"/> has already been associated with another schema in the
   collection, the schema being added replaces the original schema in the
   collection. For example, in the following C# code, authors.xsd is removed
   from the collection and names.xsd is added.
   </para>
			<code>
schemaColl.Add("urn:author", "authors.xsd");
schemaColl.Add("urn:author", "names.xsd");
</code>
If <paramref name="ns"/> is <see langword="null"/> and the schema being added is
an XML Schema, the <see langword="Add"/> method uses the
<see langword="targetNamespace"/> defined in the XML Schema to 
identify the schema in the collection.
If the schema being added contains references to other namespaces (through
<see langword="include"/> and <see langword="import"/> elements, or the <see langword="x-schema"/> attribute), the trust level of 
the application determines how these other namespaces are resolved. (In
version 1.0 of the .NET Framework, a default <see cref="System.Xml.XmlUrlResolver"/> was always used).
<para><see langword="Fully-trusted code:"/> A default 
<see langword="XmlUrlResolver"/> with no user credentials is used to resolve any 
external resources. The schemas for these other namespaces are loaded for
validation purposes only. Unlike the original schema, these other schemas are
not explicitly added to the schema collection. As a result, they are not
accessible using any of the collection methods or properties. If these external
resources are located on a network resource that requires authentication,
use an overload that takes an <see cref="System.Xml.XmlResolver"/> as one of its arguments and specify
an <see langword="XmlResolver"/> with the necessary credentials.</para>
			<para><see langword="Semi-trusted code:"/> External references
are not resolved.</para>
			<note type="note">
   If the
<see langword="XmlSchemaCollection"/> is being accessed using the <see cref="System.Xml.XmlValidatingReader.Schemas" qualify="true"/> property, the 
<see langword="Add"/> method uses the <see langword="XmlResolver"/> specified by the <see cref="System.Xml.XmlValidatingReader.XmlResolver" qualify="true"/> property.
</note>
		</remarks>
		<example>
			<para> The following example validates three XML files using
      schemas stored in the <see langword="XmlSchemaCollection"/>
      .</para>
			<codelink SampleID="Classic WebData XmlValidatingReader.Schemas Example" SnippetID="1"/>
			<para>The sample uses the following five input files: </para>
			<para><see langword="booksSchema.xml"/>
			</para>
			<codelink SampleID="Classic WebData XmlValidatingReader.Schemas Example" SnippetID="2"/>
			<para><see langword="booksSchemaFail.xml"/>
			</para>
			<codelink SampleID="Classic WebData XmlValidatingReader.Schemas Example" SnippetID="3"/>
			<para><see langword="newbooks.xml"/>
			</para>
			<codelink SampleID="Classic WebData XmlValidatingReader.Schemas Example" SnippetID="4"/>
			<para><see langword="books.xsd"/>
			</para>
			<codelink SampleID="Classic WebData XmlValidatingReader.Schemas Example" SnippetID="5"/>
			<para><see langword="schema1.xdr"/>
			</para>
			<codelink SampleID="Classic WebData XmlValidatingReader.Schemas Example" SnippetID="6"/>
		</example>
	</doc>
	<doc for="XmlSchemaCollection.Add4">
		<summary>
			<para> Adds the schema contained in the <see cref="System.Xml.XmlReader"/> to the schema
   collection.</para>
		</summary>
		<param name="ns">The namespace URI associated with the schema. For XML Schema definition language (XSD) schemas, this will typically be the <see langword="targetNamespace"/> .</param>
		<param name="reader"><see cref="System.Xml.XmlReader"/> containing the schema to add.</param>
		<returns>
			<para>The <see cref="System.Xml.Schema.XmlSchema"/> added to the schema collection; <see langword="null"/> if the schema being added is an XML-Data Reduced (XDR) schema or if there are compilation errors in the schema.</para>
		</returns>
		<exception cref="XmlSchemaException">The schema is not a valid schema.</exception>
		<remarks>
			<para>If <paramref name="ns"/> has already been associated with another schema in the collection, the schema being added replaces the original schema in the collection.</para>
			<para>If <paramref name="ns"/> is <see langword="null"/> and the schema being added is an XML Schema, the <see langword="Add"/> method uses the
<see langword="targetNamespace"/> defined in the XML Schema to identify the schema in the collection.</para>
			<para>If the schema being added contains references to other
   namespaces (through <see langword="include"/> and <see langword="import"/> elements,
   or the <see langword="x-schema"/> attribute), the trust level of
   the application determines how these other namespaces are resolved. (In
   version 1.0 of the .NET Framework, a default <see cref="System.Xml.XmlUrlResolver"/> was always used).</para>
			<para><see langword="Fully-trusted code:"/> A default
<see langword="XmlUrlResolver"/> with no user credentials is used to resolve any 
external resources. The schemas for these other namespaces are loaded for
validation purposes only. Unlike the original schema, these other schemas are
not explicitly added to the schema collection. As a result, they are not
accessible using any of the collection methods or properties. If these external
resources are located on a network resource that requires authentication,
use an overload that takes an <see cref="System.Xml.XmlResolver"/> as one of its arguments and specify
an <see langword="XmlResolver"/> with the necessary credentials.</para>
			<para><see langword="Semi-trusted code:"/> External references are not resolved.</para>
			<note type="note">
   If the
<see langword="XmlSchemaCollection"/> is being accessed using the <see cref="System.Xml.XmlValidatingReader.Schemas" qualify="true"/> property, the 
<see langword="Add"/> method uses the <see langword="XmlResolver"/> specified by the <see cref="System.Xml.XmlValidatingReader.XmlResolver" qualify="true"/> property.
</note>
		</remarks>
	</doc>
	<doc for="XmlSchemaCollection.Add1">
		<summary>
			<para>Adds the schema contained in the <see cref="System.Xml.XmlReader"/> to the
   schema collection. The specified <see cref="System.Xml.XmlResolver"/> is used to resolve any external resources.</para>
		</summary>
		<param name="ns">The namespace URI associated with the schema. For XML Schema definition language (XSD) schemas, this will typically be the <see langword="targetNamespace"/> .</param>
		<param name=" reader"><see cref="System.Xml.XmlReader"/> containing the schema to add.</param>
		<param name=" resolver">The <see cref="System.Xml.XmlResolver"/> used to resolve namespaces referenced in <see langword="include"/> and <see langword="import"/> elements or <see langword="x-schema"/> attribute (XDR schemas). If this is <see langword="null"/> , external references are not resolved.</param>
		<returns>
			<para>The <see cref="System.Xml.Schema.XmlSchema"/> added to the schema collection;
<see langword="null"/> if the schema being added is an XML-Data Reduced (XDR) schema or if there 
   are
   compilation errors in the schema.</para>
		</returns>
		<exception cref="XmlSchemaException">The schema is not a valid schema.</exception>
		<remarks>
			<para>If <paramref name="ns"/>
has already been
associated with another schema in the collection, the schema being added
replaces the original schema in the collection.</para>
			<para>If <paramref name="ns"/> is <see langword="null"/> and the schema being added is an
XML Schema, the <see langword="Add"/> method uses the
<see langword="targetNamespace"/> attribute
defined in the XML Schema to identify the schema in the collection.</para>
			<para>If the schema being added contains references to other
   namespaces (through <see langword="include"/> and <see langword="import"/> elements,
   or the <see langword="x-schema"/>
   attribute), the schemas for these other
   namespaces are loaded for validation purposes only. Unlike the
   original schema, these other schemas are not explicitly added to the schema
   collection. As a result, they are not accessible using any of the
   collection methods or properties.</para>
		</remarks>
		<seealso cref="System.Xml.XmlUrlResolver.Credentials" qualify="true"/>
		<seealso cref="System.Net.NetworkCredential"/>
		<seealso cref="System.Net.CredentialCache"/>
	</doc>
	<doc for="XmlSchemaCollection.Add2">
		<summary>
			<para>Adds the <see cref="System.Xml.Schema.XmlSchema"/> to the collection.</para>
		</summary>
		<param name="schema">The <see langword="XmlSchema"/> to add to the collection.</param>
		<returns>
			<para>The <see langword="XmlSchema"/> object.</para>
		</returns>
		<exception cref="XmlSchemaException">The schema is not a valid XML Schema definition language (XSD) schema.</exception>
		<remarks>
			<para> The <see langword="targetNamespace"/> attribute is used
   to identify this schema.</para>
			<para>If the schema being added contains references to other
   namespaces (through <see langword="include"/> and <see langword="import"/> elements), the trust level of the
   application determines how these other namespaces are resolved. (In version
   1.0 of the .NET Framework, a default <see cref="System.Xml.XmlUrlResolver"/> was always used).</para>
			<para><see langword="Fully-trusted code:"/> A default
<see langword="XmlUrlResolver"/> with no user credentials is used to resolve any 
external resources. The schemas for these other namespaces are loaded for
validation purposes only. Unlike the original schema, these other schemas are
not explicitly added to the schema collection. As a result, they are not
accessible using any of the collection methods or properties. If these external
resources are located on a network resource that requires authentication,
use an overload that takes an <see cref="System.Xml.XmlResolver"/> as one of its arguments and specify
an <see langword="XmlResolver"/> with the necessary credentials.</para>
			<para><see langword="Semi-trusted code:"/> External references
are not resolved.</para>
			<note type="note">
   If
   the <see langword="XmlSchemaCollection"/> is being accessed using the
<see cref="System.Xml.XmlValidatingReader.Schemas" qualify="true"/> property, the <see langword="Add"/> method uses 
   the <see langword="XmlResolver"/> specified by the <see cref="System.Xml.XmlValidatingReader.XmlResolver" qualify="true"/> property.
</note>
		</remarks>
		<seealso cref="System.Xml.Schema.XmlSchema"/>
	</doc>
	<doc for="XmlSchemaCollection.Add5">
		<summary>
			<para>Adds the <see cref="System.Xml.Schema.XmlSchema"/> to the collection. The specified <see cref="System.Xml.XmlResolver"/> is used
   to resolve any external references.</para>
		</summary>
		<param name="schema">The <see langword="XmlSchema"/> to add to the collection.</param>
		<param name=" resolver">The <see cref="System.Xml.XmlResolver"/> used to resolve namespaces referenced in <see langword="include"/> and <see langword="import"/> elements. If this is <see langword="null"/>, external references are not resolved. </param>
		<returns>
			<para>The <see langword="XmlSchema"/> added to
   the schema collection.</para>
		</returns>
		<exception cref="XmlSchemaException">The schema is not a valid XML Schema definition language (XSD) schema.</exception>
		<remarks>
			<para>The <see langword="targetNamespace"/> attribute is used
   to identify this schema.</para>
			<para>If the schema contains <see langword="include"/> and
<see langword="import"/> elements that reference other namespaces, the schemas 
for these other namespaces are loaded for validation purposes only. Unlike the
original schema, these other schemas are not explicitly added to the schema
collection. As a result, they are not accessible using any of the collection
methods or properties.</para>
		</remarks>
		<example>
			<para>The following example adds a schema to the collection.
      An <see cref="System.Xml.XmlUrlResolver"/> is passed to the <see langword="Add"/> method which
      sets the necessary credentials required to access any external resources
      referenced in the schema.</para>
			<codelink SampleID="XmlSchemaCollection.Add" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.XmlResolver.Credentials" qualify="true"/>
		<seealso cref="System.Net.NetworkCredential" qualify="true"/>
		<seealso cref="System.Net.CredentialCache" qualify="true"/>
	</doc>
</docs>
