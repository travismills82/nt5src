<docs>
	<doc for="XmlDocumentFragment.XmlDocumentFragment">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="XmlDocumentFragment.ParentNode">
		<summary>
			<para>Gets the parent of this node (for nodes that can have
      parents).</para>
		</summary>
		<value>
			<para> The parent of this node.</para>
			<para> For <see langword="XmlDocumentFragment"/> nodes,
   this property is always <see langword="null"/> .</para>
		</value>
	</doc>
	<doc for="XmlDocumentFragment.Name">
		<summary>
			<para>Gets the qualified name of the node.</para>
		</summary>
		<value>
			<para> For
 <see langword="XmlDocumentFragment"/> , the name is 
 <see langword="#document-fragment"/> .</para>
		</value>
	</doc><doc for="XmlDocumentFragment.LocalName">
		<summary>
			<para> Gets the local name of the node.
 </para>
		</summary>
		<value>
			<para>For <see langword="XmlDocumentFragment"/> nodes, the local name is 
<see langword="#document-fragment"/> .
 </para>
		</value>
	</doc><doc for="XmlDocumentFragment.NodeType">
		<summary>
			<para>Gets the type of the current node.</para>
		</summary>
		<value>
			<para> For <see langword="XmlDocumentFragment"/> nodes, this
 value is XmlNodeType.DocumentFragment.</para>
		</value>
		<seealso cref="System.Xml.XmlNodeType"/>
	</doc><doc for="XmlDocumentFragment.CloneNode">
		<summary>
			<para>Creates a duplicate of this node.</para>
		</summary>
		<param name="deep"><see langword="true"/> to recursively clone the subtree under the specified node; <see langword="false"/> to clone only the node itself.</param>
		<returns>
			<para>The cloned node.</para>
		</returns>
		<remarks>
			<para><see langword="CloneNode"/> serves as 
   a copy constructor for nodes. To see how this method behaves with other node
   types, see <see cref="System.Xml.XmlNode.CloneNode" qualify="true"/>
   .</para>
			<para> The cloned node has no parent (<see cref="System.Xml.XmlDocumentFragment.ParentNode"/> returns
<see langword="null"/>
).</para>
		</remarks>
		<example>
			<para>The following example shows the difference between a deep and shallow clone. </para>
			<codelink SampleID="Classic WebData XmlDocumentFragment.CloneNode Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDocumentFragment.InnerXml">
		<summary>
			<para> Gets or sets the markup representing
      the children of this node.</para>
		</summary>
		<value>
			<para>The markup of the children of this
      node.</para>
		</value>
		<remarks>
			<para> Setting this property replaces the
      children of the node with the parsed contents of the given string. The parsing
      is done in the current namespace context.</para>
			<para>This property is a Microsoft extension to the Document Object Model 
      (DOM).</para>
		</remarks>
		<example>
			<para>The following example uses the InnerXml property to set the contents of the document fragment. </para>
			<codelink SampleID="Classic WebData XmlDocumentFragment.InnerXml Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDocumentFragment.OwnerDocument">
		<summary>
			<para>Gets the <see cref="System.Xml.XmlDocument"/> to which this node belongs.</para>
		</summary>
		<value>
			<para>The <see langword="XmlDocument"/> to which this node belongs.</para>
		</value>
		<remarks>
			<para>When adding nodes to the current node, use the
   <see langword="XmlDocument"/> returned by the <see langword="OwnerDocument"/>
   property to create the
   node.</para>
		</remarks>
		<example>
			<para> The following example adds a new node to the document fragment. </para>
			<codelink SampleID="Classic WebData XmlDocumentFragment.OwnerDocument Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDocumentFragment.WriteTo">
		<summary>
			<para>Saves the node to the specified <see cref="System.Xml.XmlWriter"/> .</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
		<remarks>
			<para>This method is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
	</doc>
	<doc for="XmlDocumentFragment.WriteContentTo">
		<summary>
			<para>Saves all the children of the node to the specified
      <see cref="System.Xml.XmlWriter"/> .</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
		<remarks>
   This method is a Microsoft extension to the
   Document Object Model (DOM).
</remarks>
	</doc>
	<doc for="XmlDocumentFragment">
		<summary>
			<para> Represents a lightweight object that is useful for tree insert
      operations.
      </para>
		</summary>
		<seealso topic="cpconXMLDocumentObjectModelDOM"/>
		<seealso cref="System.Xml.XmlDocument.CreateDocumentFragment" qualify="true"/>
	</doc>
</docs>
