<docs>
	<doc for="XmlText.XmlText">
		<summary>
		</summary>
	</doc>
	<doc for="XmlText.XmlText1">
		<summary>
		</summary>
	</doc>
	<doc for="XmlText.Name">
		<summary>
			<para>Gets the qualified name of the node.</para>
		</summary>
		<value>
			<para>For text nodes, this property returns 
 <see langword="#text"/> .</para>
		</value>
	</doc><doc for="XmlText.LocalName">
		<summary>
			<para> Gets the local name of the node.</para>
		</summary>
		<value>
			<para>For text nodes, this property returns <see langword="#text"/>.</para>
		</value>
	</doc><doc for="XmlText.NodeType">
		<summary>
			<para>Gets the type of the current node.</para>
		</summary>
		<value>
			<para>For text nodes, this value is
 XmlNodeType.Text.</para>
		</value>
		<seealso cref="System.Xml.XmlNodeType"/>
	</doc><doc for="XmlText.CloneNode">
		<summary>
			<para>Creates a duplicate of this node.</para>
		</summary>
		<param name="deep"><see langword="true"/> to recursively clone the subtree under the specified node; <see langword="false"/> to clone only the node itself.</param>
		<returns>
			<para>The cloned node.</para>
		</returns>
		<remarks>
			<para><see langword="CloneNode"/> serves as a copy constructor for nodes. 
 For text nodes, the cloned node always includes the data value. To see how
 this method behaves with other node types, see <see cref="System.Xml.XmlNode.CloneNode"/> method in the
<see langword="XmlNode"/> class. </para>
			<para>The cloned node has no parent (<see cref="System.Xml.XmlNode.ParentNode"/> returns 
<see langword="null"/> ).</para>
		</remarks>
	</doc><doc for="XmlText.Value">
		<summary>
			<para>Gets or sets the value of the node.</para>
		</summary>
		<value>
			<para>The content of the text node.</para>
		</value>
	</doc><doc for="XmlText.WriteTo">
		<summary>
			<para>Saves the node to the specified <see cref="System.Xml.XmlWriter"/> .</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
		<remarks>
   This method is a Microsoft extension to the
   Document Object Model (DOM).
</remarks>
	</doc><doc for="XmlText.WriteContentTo">
		<summary>
			<para>Saves all the children of the node to the specified
   <see cref="System.Xml.XmlWriter"/> . 
   <see langword="XmlText"/> nodes do not have children, so this method has no 
      effect.</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
		<remarks>
			<para>This method is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
	</doc><doc for="XmlText.SplitText">
		<summary>
			<para> Splits the node into two nodes at the specified offset, keeping
      both in the tree as siblings.
      </para>
		</summary>
		<param name="offset">The offset at which to split the node. </param>
		<returns>
   The new node.
</returns>
		<remarks>
			<para> After <see langword="SplitText"/> is called, the original node contains all the content up to
   the offset point. A new node of the same type, contains all the content at and
   after the offset point, and is inserted as the next sibling of the original node.
   When the offset is equal to the length of this node, the new node has no
   data.
   </para>
		</remarks>
	</doc>
	<doc for="XmlText">
		<summary>
			<para> Represents the text content of an element or attribute.
      </para>
		</summary>
		<seealso topic="cpconXMLDocumentObjectModelDOM"/>
		<seealso cref="System.Xml.XmlDocument.CreateTextNode"/>
	</doc>
</docs>
