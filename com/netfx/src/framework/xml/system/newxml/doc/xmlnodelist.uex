<docs>
	<doc for="XmlNodeList.Item">
		<summary>
			<para>Retrieves a node at the given index.</para>
		</summary>
		<param name="index">Zero-based index into the list of nodes.</param>
		<returns>
			<para>The <see cref="System.Xml.XmlNode"/> in the collection. If <paramref name="index"/> is greater
   than or equal to the number of nodes in the list, this returns
<see langword="null"/>
.</para>
		</returns>
		<example>
			<para>The following example gets and displays the second node 
      in the <see langword="XmlNodeList"/> . </para>
			<codelink SampleID="Classic WebData XmlNodeList.Item Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlNodeList.GetEnumerator">
		<summary>
			<para>Provides a simple "foreach" style iteration over the 
      collection of nodes in the <see langword="XmlNodeList"/>
      .</para>
		</summary>
		<returns>
			<para>An <see cref="System.Collections.IEnumerator"/> .</para>
		</returns>
		<example>
			<para> The following example displays all the book titles.</para>
			<codelink SampleID="Classic WebData XmlNodeList.GetEnumerator Example" SnippetID="1"/>
The example uses the file, 
<see langword="2books.xml"/>, as input.
<codelink SampleID="Classic WebData XmlNodeList.GetEnumerator Example" SnippetID="2"/>
		</example>
	</doc><doc for="XmlNodeList.this">
		<summary>
			<para>Retrieves a node at the given index.</para>
		</summary>
		<param name="i">Zero-based index into the list of nodes.</param>
		<value>
			<para>The <see cref="System.Xml.XmlNode"/> in the collection. If index is greater than or equal
   to the number of nodes in the list, this returns <see langword="null"/>
   .</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Xml.XmlDocument"/> object and uses the <see cref="System.Xml.XmlDocument.GetElementsByTagName"/> method and
   the resulting <see langword="XmlNodeList"/> to display all the book titles.</para>
			<codelink SampleID="Classic WebData XmlElement.GetElementsByTagName Example" SnippetID="1"/>
The example uses the file, <see langword="2books.xml"/>

 , as input.

<codelink SampleID="Classic WebData XmlElement.GetElementsByTagName Example" SnippetID="2"/>
		</example>
	</doc><doc for="XmlNodeList.Count">
		<summary>
			<para>Gets the number of nodes in the 
   <see langword="XmlNodeList"/> .</para>
		</summary>
		<value>
			<para>The number of nodes.</para>
		</value>
		<example>
			<para>The following example creates a <see cref="System.Xml.XmlDocument"/> object and uses the <see cref="System.Xml.XmlDocument.GetElementsByTagName"/> method and
   the resulting <see langword="XmlNodeList"/> to display all the book titles.</para>
			<codelink SampleID="Classic WebData XmlElement.GetElementsByTagName Example" SnippetID="1"/>

The example uses the file, <see langword="2books.xml"/>, as input.
<codelink SampleID="Classic WebData XmlElement.GetElementsByTagName Example" SnippetID="2"/>
		</example>
	</doc><doc for="XmlNodeList">
		<summary>
			<para>Represents an ordered collection of nodes.</para>
		</summary>
		<remarks>
			<para>The <see langword="XmlNodeList"/> 
collection is
"live"; that is, changes to
the children of the node object that it was created from are immediately
reflected in the nodes returned by the <see langword="XmlNodeList"/> properties and methods.
<see langword="XmlNodeList"/> supports iteration
and indexed access.</para>
			<para><see langword="XmlNodeList"/> is returned by the following properties and 
methods.</para>
			<list type="bullet"><item>
					<term><see cref="System.Xml.XmlNode.ChildNodes" qualify="true"/>- Returns an <see langword="XmlNodeList"/> containing all 
   the children of the node.</term>
				</item>
				<item>
					<term><see cref="System.Xml.XmlNode.SelectNodes" qualify="true"/>- Returns an <see langword="XmlNodeList"/> containing a 
   collection of nodes matching the XPath query.</term>
				</item>
				<item>
					<term><see langword="GetElementsByTagName"/> - Returns an 
<see langword="XmlNodeList"/> containing a list of all descendant elements that 
   match the specified name. This method is available in both the <see cref="System.Xml.XmlDocument"/> and
<see cref="System.Xml.XmlElement"/> 
classes.</term>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconOrderedNodeRetrievalByIndex"/>
		<seealso topic="cpconXMLDocumentObjectModelDOM"/>
	</doc>
</docs>
