<docs>
	<doc for="XmlAttributeCollection.ICollection.CopyTo">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlAttributeCollection.ICollection.IsSynchronized">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlAttributeCollection.ICollection.SyncRoot">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlAttributeCollection.ICollection.Count">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="XmlAttributeCollection.this">
		<overload>
			<para>Gets the attribute with the specified name or index.</para>
		</overload>
		<summary>
			<para>Gets the attribute with the specified index.</para>
		</summary>
		<param name="i">The index of the attribute.</param>
		<value>
			<para>The <see cref="System.Xml.XmlAttribute"/> at the specified index.</para>
		</value>
		<remarks>
			<para>This property is a Microsoft extension to the Document Object Model (DOM). It
      is equivalent to calling <see cref="System.Xml.XmlNamedNodeMap.Item" qualify="true"/> .</para>
		</remarks>
		<example>
			<para>The following example displays all the attributes in the collection. </para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.this Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.XmlNamedNodeMap.Item"/>
	</doc><doc for="XmlAttributeCollection.this1">
		<summary>
			<para>Gets the attribute with the specified name.</para>
		</summary>
		<param name="name">The qualified name of the attribute.</param>
		<value>
			<para>The <see cref="System.Xml.XmlAttribute"/> with the specified name.</para>
		</value>
		<remarks>
			<para>This property is a Microsoft extension to the Document
      Object Model (DOM). It is equivalent to calling <see cref="System.Xml.XmlNamedNodeMap.GetNamedItem"/>
      .</para>
		</remarks>
		<example>
			<para>The following example removes an attribute from the document. </para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.Remove Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.this2">
		<summary>
			<para>Gets the attribute with the specified local name and namespace URI.</para>
		</summary>
		<param name="localName">The local name of the attribute.</param>
		<param name=" namespaceURI">The namespace URI of the attribute.</param>
		<value>
			<para>The <see cref="System.Xml.XmlAttribute"/> with the specified local name and namespace URI.</para>
		</value>
		<remarks>
			<para>This property is a Microsoft extension to the Document
      Object Model (DOM). It is equivalent to calling <see cref="System.Xml.XmlNamedNodeMap.GetNamedItem"/>
      .</para>
		</remarks>
	</doc><doc for="XmlAttributeCollection.InsertBefore">
		<summary>
			<para>Inserts the specified attribute immediately before the specified reference attribute.</para>
		</summary>
		<param name="newNode">The <see cref="System.Xml.XmlAttribute"/> to insert.</param>
		<param name="refNode">The <see cref="System.Xml.XmlAttribute"/> that is the reference attribute. <paramref name="newNode"/> is placed before the <paramref name="refNode"/> .</param>
		<returns>
			<para>The <see langword="XmlAttribute"/> to insert into the
   collection.</para>
		</returns>
		<exception cref="ArgumentException">The <paramref name="newNode"/> was created from a document different from the one that created this collection. Or the<paramref name=" refNode "/>is not a member of this collection.</exception>
		<remarks>
			<para>If an attribute with the same name is
      already present in the collection, the original attribute is removed from the
      collection and <paramref name="newNode"/> is inserted into the collection. If
   <paramref name="refNode"/> is <see langword="null"/>, <paramref name="newNode"/> is inserted at the end of the collection.</para>
			<para>This method is a Microsoft extension to the Document Object Model (DOM).</para>
		</remarks>
		<example>
			<para>The following example adds a new attribute to a
      document.</para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.InsertBefore Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.InsertAfter">
		<summary>
			<para>Inserts the specified attribute immediately after the specified reference attribute.</para>
		</summary>
		<param name="newNode">The <see cref="System.Xml.XmlAttribute"/> to insert.</param>
		<param name="refNode">The <see cref="System.Xml.XmlAttribute"/> that is the reference attribute. <paramref name="newNode"/> is placed after the <paramref name="refNode"/> .</param>
		<returns>
			<para>The <see langword="XmlAttribute"/> to
   insert into the collection.</para>
		</returns>
		<exception cref="ArgumentException">The <paramref name="newNode"/> was created from a document different from the one that created this collection. Or the<paramref name=" refNode "/>is not a member of this collection.</exception>
		<remarks>
			<para>If an attribute with the same name is
      already present in the collection, the original attribute is removed from the
      collection and <paramref name="newNode"/> is inserted into the collection. If
   <paramref name="refNode"/> is <see langword="null"/>, <paramref name="newNode"/> is inserted at the beginning of the collection.</para>
			<para>This method is a Microsoft extension to the Document Object Model (DOM).</para>
		</remarks>
		<example>
			<para>The following example adds a new attribute to a
      document.</para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.InsertAfter Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.Remove">
		<summary>
			<para> Removes the specified attribute from the collection.</para>
		</summary>
		<param name="node">The <see cref="System.Xml.XmlAttribute"/> to remove.</param>
		<returns>
			<para>The node removed
      or <see langword="null"/> if it is not found in the collection.</para>
		</returns>
		<remarks>
			<para>This method is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
		<example>
			<para>The following example removes an attribute from the document. </para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.Remove Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.RemoveAt">
		<summary>
			<para>Removes the attribute corresponding to the specified index from the collection.</para>
		</summary>
		<param name="i">The index of the node to remove. The first node has index 0.</param>
		<returns>
			<para>Returns <see langword="null"/> if
   there is no attribute at the specified index.</para>
		</returns>
		<remarks>
			<para>This method is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
		<example>
			<para>The following example removes an attribute from the document. </para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.RemoveAt Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.RemoveAll">
		<summary>
			<para>Removes all attributes from the collection.</para>
		</summary>
		<remarks>
			<para>This method is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
		<example>
			<para>The following example removes all attributes from the document. </para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.RemoveAll Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.Append">
		<summary>
			<para>Inserts the specified attribute as the last node in the collection.</para>
		</summary>
		<param name="node">The <see cref="System.Xml.XmlAttribute"/> to insert.</param>
		<returns>
			<para>The <see langword="XmlAttribute"/> to
   append to the collection.</para>
		</returns>
		<exception cref="ArgumentException"><paramref name="node"/> was created from a document different from the one that created this collection.</exception>
		<remarks>
			<para> 
      If an attribute with the same name is already
      present in the collection, the original attribute is removed from the
      collection and <paramref name="node"/> is added to the end of the
      collection. </para>
			<para>This method is a Microsoft extension to the Document Object Model
      (DOM).</para>
		</remarks>
		<example>
			<para>The following example adds a new attribute to a
      document.</para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.Append Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.SetNamedItem">
		<summary>
			<para>Adds a <see cref="System.Xml.XmlNode"/> using its <see cref="System.Xml.XmlNode.Name"/> property</para>
		</summary>
		<param name="node">An attribute node to store in this collection. The node will later be accessible using the name of the node. If a node with that name is already present in the collection, it is replaced by the new one; otherwise, the node is appended to the end of the collection.</param>
		<returns>
			<para>If the <paramref name="node"/> replaces an 
   existing node with the same name, the old node is returned; otherwise, the added
   node
   is returned.</para>
		</returns>
		<exception cref="ArgumentException"><para>
				<paramref name="node"/> was created from a different <see cref="System.Xml.XmlDocument"/> than the one that created this collection.</para>
			<para>This <see langword="XmlAttributeCollection"/> is read-only.</para></exception>
		<exception cref="InvalidOperationException"><paramref name="node"/> is an <see cref="System.Xml.XmlAttribute"/> that is already an attribute of another <see cref="System.Xml.XmlElement"/> object. To re-use attributes in other elements, you must clone the <see langword="XmlAttribute"/> objects you want to re-use.</exception>
		<example>
			<para>The following example adds a new attribute to a
      document.</para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.SetNamedItem Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.Prepend">
		<summary>
			<para>Inserts the specified attribute as the first node in the collection.</para>
		</summary>
		<param name="node">The <see cref="System.Xml.XmlAttribute"/> to insert.</param>
		<returns>
			<para>The <see langword="XmlAttribute"/>
added to the collection.</para>
		</returns>
		<remarks>
			<para> 
      If an attribute with the same name is already
      present in the collection, the original attribute is removed from the
      collection and <paramref name="node"/> is added to the beginning of the
      collection. </para>
			<para>This method is a Microsoft extension to the Document Object Model
      (DOM).</para>
		</remarks>
		<example>
			<para>The following example adds a new attribute to a
      document.</para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.Prepend Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection.CopyTo">
		<summary>
			<para> Copies all the <see cref="System.Xml.XmlAttribute"/> objects from
   this collection into the given array.</para>
		</summary>
		<param name="array">The array that is the destination of the objects copied from this collection.</param>
		<param name=" index">The index in <paramref name="array"/> where copying begins. </param>
		<remarks>
			<para>This method is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
		<example>
			<para>The following example uses <see langword="CopyTo"/> to copy all the attributes in the
   collection into an array.</para>
			<codelink SampleID="Classic WebData XmlAttributeCollection.CopyTo Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlAttributeCollection">
		<summary>
			<para> Represents a collection of attributes that can be accessed by name or
      index.
      </para>
		</summary>
		<remarks>
			<see langword="XmlAttributeCollection"/> extends 
   the <see cref="System.Xml.XmlNamedNodeMap"/> class adding strongly typed helper methods. You can
   use this class to add, remove or modify attributes in the
   collection. <see langword="XmlAttributeCollection"/> is returned by the
<see cref="System.Xml.XmlElement.Attributes" qualify="true"/> property.
</remarks>
		<seealso topic="cpconAccessingAttributesInDOM"/>
		<seealso topic="CpconUnorderedNodeRetrievalByNameOrIndex"/>
		<seealso topic="cpconXMLDocumentObjectModelDOM"/>
		<seealso cref="System.Xml.XmlAttribute"/>
		<seealso cref="System.Xml.XmlElement"/>
	</doc>
</docs>
