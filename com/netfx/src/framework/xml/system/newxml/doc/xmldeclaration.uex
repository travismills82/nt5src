<docs>
	<doc for="XmlDeclaration.XmlDeclaration">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="XmlDeclaration.WriteContentTo">
		<summary>
			<para>Saves all the children of the node to the specified XmlWriter.</para>
		</summary>
		<param name="w">The XmlWriter where you want to save the current node.</param>
	</doc>
	<doc for="XmlDeclaration.Value">
		<summary>
			<para>Gets or sets the value of the
 <see langword="XmlDeclaration"/>.</para>
		</summary>
		<value>
			<para>The contents of the
 <see langword="XmlDeclaration"/> (that is, everything between 
 <c>&lt;?xml</c> and <c>?&gt;</c> ).</para>
		</value>
	</doc><doc for="XmlDeclaration.InnerText">
		<summary>
			<para> Gets or sets the concatenated values of the
 <see langword="XmlDeclaration"/>
 .</para>
		</summary>
		<value>
			<para>The concatenated values of the
 <see langword="XmlDeclaration"/> (that is, everything between <c>&lt;?xml</c> and <c>?&gt;</c> ).</para>
		</value>
	</doc><doc for="XmlDeclaration.Name">
		<summary>
			<para>Gets the qualified name of the node.</para>
		</summary>
		<value>
			<para> For <see langword="XmlDeclaration"/> 
nodes, the name is <see langword="xml"/> .</para>
		</value>
	</doc><doc for="XmlDeclaration.NodeType">
		<summary>
			<para>Gets the type of the current node.</para>
		</summary>
		<value>
			<para> For <see langword="XmlDeclaration"/> nodes, this value
 is XmlNodeType.XmlDeclaration.</para>
		</value>
		<seealso cref="System.Xml.XmlNodeType"/>
	</doc><doc for="XmlDeclaration.Encoding">
		<summary>
			<para>Gets or sets the encoding level of the XML
      document.</para>
		</summary>
		<value>
			<para> The legal character encoding name. The most commonly supported character encoding
      names for XML are the following:</para>
			<list type="table">
				<listheader>
					<term>Category</term>
					<description>Encoding Names</description>
				</listheader>
				<item>
					<term> Unicode</term>
					<description>UTF-8, UTF-16</description>
				</item>
				<item>
					<term> ISO 10646</term>
					<description>ISO-10646-UCS-2,
            ISO-10646-UCS-4</description>
				</item>
				<item>
					<term> ISO 8859</term>
					<description>ISO-8859-n (where "n" is a digit from 1 to 9)</description>
				</item>
				<item>
					<term> JIS X-0208-1997</term>
					<description>ISO-2022-JP, Shift_JIS, EUC-JP</description>
				</item>
			</list>
			<para>This value is optional. If a value is not
      set, this property returns String.Empty.</para>
   If an encoding attribute is not included, UTF-8 encoding is assumed when the
   document is written or saved out.
</value>
		<remarks>
			<para>Unlike most XML attributes, encoding attribute values
      are not case sensitive. This is because encoding character names follow ISO
      and Internet Assigned Numbers Authority (IANA) standards.</para>
		</remarks>
		<example>
			<para>The following example creates an
   <see langword="XmlDeclaration"/> node and adds it to an XML document.</para>
			<codelink SampleID="Classic WebData XmlDeclaration.Encoding Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDeclaration.Standalone">
		<summary>
			<para>Gets or sets the value of the standalone attribute.</para>
		</summary>
		<value>
			<para> Valid values are <see langword="yes"/> if all entity
   declarations required by the XML document are contained within the document or
<see langword="no"/> if an external DTD is required. If a 
   standalone attribute is not present in the XML declaration, this property returns String.Empty.</para>
		</value>
		<example>
			<para>The following example creates an
   <see langword="XmlDeclaration"/> node and adds it to an XML document.</para>
			<codelink SampleID="Classic WebData XmlDeclaration.Standalone Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDeclaration.LocalName">
		<summary>
			<para> Gets the local name of the node.</para>
		</summary>
		<value>
			<para>For <see langword="XmlDeclaration"/> 
nodes, the local name is <see langword="xml"/>
.</para>
		</value>
	</doc><doc for="XmlDeclaration.Version">
		<summary>
			<para> Gets the
      XML version of the document.</para>
		</summary>
		<value>
			<para>The value is always <see langword="1.0"/> .</para>
		</value>
	</doc><doc for="XmlDeclaration.CloneNode">
		<summary>
			<para>Creates a duplicate of this node.</para>
		</summary>
		<param name="deep"><see langword="true"/> to recursively clone the subtree under the specified node; <see langword="false"/> to clone only the node itself. Because <see langword="XmlDeclaration"/> nodes do not have children, the cloned node always includes the data value, regardless of the parameter setting.</param>
		<returns>
			<para>The cloned node.</para>
		</returns>
		<remarks>
			<para><see langword="CloneNode"/> serves as a
   copy constructor for nodes. To see how this method behaves with other node types,
   see <see cref="System.Xml.XmlNode.CloneNode" qualify="true"/> . </para>
			<para>The cloned node has no parent (<see cref="System.Xml.XmlNode.ParentNode"/> returns <see langword="null"/> ).</para>
		</remarks>
	</doc><doc for="XmlDeclaration.WriteTo">
		<summary>
			<para>Saves the node to the specified <see cref="System.Xml.XmlWriter"/> .</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
		<remarks>
			<para>The value of the encoding and standalone attributes are
      determined by the <see cref="System.Xml.XmlDeclaration.Encoding"/> and <see cref="System.Xml.XmlDeclaration.Standalone"/> properties. If either of the properties are not
      set, the corresponding attribute is not written. The version
      attribute is always written out with a value of
      1.0.</para>
		</remarks>
	</doc><doc for="XmlDeclaration">
		<summary>
			<para>Represents the XML declaration node: &lt;?xml version='1.0' ...?&gt;. </para>
		</summary>
		<remarks>
			<para>This class is a Microsoft extension to the
      Document Object Model (DOM).</para>
		</remarks>
		<seealso cref="System.Xml.XmlDocument.CreateXmlDeclaration"/>
		<seealso topic="cpconXMLDocumentObjectModelDOM"/>
	</doc>
	<doc for="XmlDeclaration.WriteConntentTo">
		<summary>
			<para> Saves the children of the node to the specified
   <see cref="System.Xml.XmlWriter"/> .</para>
			<para>Because <see langword="XmlDeclaration"/> nodes
   do not have children, this method has no effect.</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save. <para>Because <see langword="XmlDeclaration"/> nodes do not have children, this method has no effect.</para></param>
	</doc>
</docs>
