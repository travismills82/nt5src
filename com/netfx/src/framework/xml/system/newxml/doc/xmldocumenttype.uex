<docs>
	<doc for="XmlDocumentType.XmlDocumentType">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="XmlDocumentType.XmlDocumentType1">
		<internalonly/>
		<summary>
		</summary>
	</doc>
	<doc for="XmlDocumentType.PublicId">
		<summary>
			<para>
       Gets
       the value of the public identifier on the DOCTYPE declaration.
    </para>
		</summary>
		<value>
			<para>
       The public identifier on the DOCTYPE. If there is no public identifier, String.Empty is
       returned.
    </para>
		</value>
	</doc>
	<doc for="XmlDocumentType.SystemId">
		<summary>
			<para>
       Gets the value of
       the system identifier on the DOCTYPE declaration.
    </para>
		</summary>
		<value>
			<para>
       The system identifier on the DOCTYPE. If there is no system
       identifier, String.Empty is returned.
    </para>
		</value>
	</doc>
	<doc for="XmlDocumentType.Entities">
		<summary>
			<para>Gets the collection of <see cref="System.Xml.XmlEntity"/> nodes declared in the document type declaration.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.XmlNamedNodeMap"/> containing the
<see langword="XmlEntity"/> nodes. The returned <see langword="XmlNamedNodeMap"/> is read-only.</para>
		</value>
		<example>
			<para> The following example displays information about
      the entities declared in the XML document.</para>
			<codelink SampleID="XmlEntity" SnippetID="1"/>
			<para>The example uses the file, <see langword="doment.xml"/> , as input.</para>
			<codelink SampleID="XmlEntity" SnippetID="2"/>
		</example>
	</doc><doc for="XmlDocumentType.Notations">
		<summary>
			<para>Gets the collection of <see cref="System.Xml.XmlNotation"/> nodes present in the document type declaration.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.XmlNamedNodeMap"/> containing the
<see langword="XmlNotation"/> nodes. The returned 
<see langword="XmlNamedNodeMap"/> is read-only.</para>
		</value>
		<example>
			<para> The following example displays information about the 
      notations declared in the XML document. </para>
			<codelink SampleID="XmlNotation" SnippetID="1"/>


The example uses the file, <see langword="doment.xml"/>, as input.

<codelink SampleID="XmlNotation" SnippetID="2"/>
		</example>
		<seealso cref="System.Xml.XmlNotation"/>
		<seealso cref="System.Xml.XmlNamedNodeMap"/>
	</doc><doc for="XmlDocumentType.Name">
		<summary>
			<para>Gets the qualified name of the node.</para>
		</summary>
		<value>
			<para>For DocumentType nodes, this property returns the name of the document type.</para>
		</value>
		<example>
			<para> The following example displays information about the DocumentType node. </para>
			<codelink SampleID="Classic WebData XmlDocumentType.Name Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDocumentType.LocalName">
		<summary>
			<para> Gets the local name of the node.
 </para>
		</summary>
		<value>
			<para> For DocumentType nodes, this property returns the name of the document type.
 </para>
		</value>
	</doc><doc for="XmlDocumentType.NodeType">
		<summary>
			<para>Gets the type of the current node.</para>
		</summary>
		<value>
			<para>For DocumentType nodes, this value is
 XmlNodeType.DocumentType.</para>
		</value>
		<seealso cref="System.Xml.XmlNodeType"/>
	</doc><doc for="XmlDocumentType.InternalSubset">
		<summary>
			<para> Gets the value of the DTD internal subset
 on the DOCTYPE
 declaration.</para>
		</summary>
		<value>
			<para>The DTD internal subset on the DOCTYPE. If there is no
 DTD internal subset, String.Empty is returned.</para>
		</value>
		<example>
			<para> The following example displays information about the DocumentType node. </para>
			<codelink SampleID="Classic WebData XmlDocumentType.Name Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDocumentType.IsReadOnly">
		<summary>
			<para>Gets a value indicating whether the node is read-only.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the node is read-only;
   otherwise<see langword="false"/> . </para>
			<para>Because DocumentType nodes are read-only, this property always returns <see langword="true"/> . </para>
		</value>
		<remarks>
			<para>A read-only node is one whose properties, attributes, or
      children cannot be changed. However, you can remove a read-only node from the
      tree and insert it somewhere else.</para>
			<para>You can remove a <see langword="XmlDocumentType"/> from a
   document and reinsert it back into the document as long as the document does not
   have an element node. Once a document has a root element, its
<see langword="XmlDocumentType"/> cannot be changed.</para>
			<para>This property is a Microsoft extension to the Document Object Model 
   (DOM).</para>
		</remarks>
		<example>
			<para> The following example displays information about the DocumentType node. </para>
			<codelink SampleID="Classic WebData XmlDocumentType.IsReadOnly Example" SnippetID="1"/>
		</example>
	</doc><doc for="XmlDocumentType.WriteTo">
		<summary>
			<para>Saves the node to the specified <see cref="System.Xml.XmlWriter"/> .</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
	</doc><doc for="XmlDocumentType.WriteContentTo">
		<summary>
			<para>Saves all the children of the node to the specified 
   <see cref="System.Xml.XmlWriter"/>. For <see langword="XmlDocumentType"/> nodes, this method has no effect.</para>
		</summary>
		<param name="w">The <see langword="XmlWriter"/> to which you want to save.</param>
	</doc><doc for="XmlDocumentType.CloneNode">
		<summary>
			<para>Creates a duplicate of this node.</para>
		</summary>
		<param name="deep"><see langword="true"/> to recursively clone the subtree under the specified node; <see langword="false"/> to clone only the node itself. For document type nodes, the cloned node always includes the subtree, regardless of the parameter setting.</param>
		<returns>
			<para>The cloned node.</para>
		</returns>
		<remarks>
			<para>This method serves as a copy constructor for nodes. The 
      cloned node has no parent (<see cref="System.Xml.XmlNode.ParentNode"/> returns <see langword="null"/>
      ).</para>
			<para>To see how this method behaves with other node types, 
      see <see cref="System.Xml.XmlNode.CloneNode" qualify="true"/>
      .</para>
		</remarks>
	</doc>
	<doc for="XmlDocumentType">
		<summary>
			<para> Represents the document type declaration.
      </para>
		</summary>
		<seealso topic="cpconXMLDocumentObjectModelDOM"/>
		<seealso cref="System.Xml.XmlDocument.CreateDocumentType" qualify="true"/>
	</doc>
</docs>
