<docs>
	<doc for="XmlNodeType">
		<summary>
    Specifies the type of node.
 </summary>
	</doc>
	<doc for="XmlNodeType.All">
		<summary>
			<para>All node types.</para>
		</summary>
	</doc>
	<doc for="XmlNodeType.Comment">
		<summary>
			<para> A comment.
      </para>
			<para> Example XML: <c>&lt;!-- my comment --&gt;</c>
			</para>
			<para> A <see langword="Comment"/> node cannot have any child 
nodes. It can appear as the child of the <see langword="Document"/>,
<see langword="DocumentFragment"/>, <see langword="Element"/>, and 
<see langword="EntityReference"/> 
nodes.
</para>
		</summary>
	</doc><doc for="XmlNodeType.CDATA">
		<summary>
			<para>A CDATA 
      
      section.</para>
			<para>Example XML: <c>&lt;![CDATA[my 
      escaped text]]&gt;</c>
			</para>
			<para> 
      CDATA sections are used to escape blocks of text that would otherwise
      be recognized as markup. A <see langword="CDATA"/> node cannot have any child
      nodes. It can appear as the child of the <see langword="DocumentFragment"/>,
   <see langword="EntityReference"/>, and <see langword="Element"/> nodes.</para>
		</summary>
	</doc><doc for="XmlNodeType.DocumentFragment">
		<summary>
			<para> A document fragment.
      </para>
			<para> The <see langword="DocumentFragment"/> node associates a 
   node or subtree with a document without actually being contained within the
   document. A <see langword="DocumentFragment"/> node can have the following child
   node types: <see langword="Element"/>, <see langword="ProcessingInstruction"/>,
<see langword="Comment"/>, <see langword="Text"/>, <see langword="CDATA"/>, and 
<see langword="EntityReference"/> 

. It
cannot appear as the child of any node types.
</para>
		</summary>
	</doc><doc for="XmlNodeType.DocumentType">
		<summary>
			<para> The document type declaration, indicated by the following tag.
      </para>
			<para> Example XML: <c>&lt;!DOCTYPE ...&gt;</c>
			</para>
			<para> A <see langword="DocumentType"/> node can have the 
following child node types: <see langword="Notation"/> and
<see langword="Entity"/>. It can appear as the child of the 
<see langword="Document"/> 
node.
</para>
		</summary>
	</doc><doc for="XmlNodeType.Element">
		<summary>
			<para> An element.
      </para>
			<para> Example XML: <c>&lt;item&gt;</c>
			</para>
An <see langword="Element"/> node can have the
following child node types: <see langword="Element"/>, <see langword="Text"/>,
<see langword="Comment"/>, <see langword="ProcessingInstruction"/>, 
<see langword="CDATA"/>, and <see langword="EntityReference"/>. It can be the 
child of the <see langword="Document"/>, <see langword="DocumentFragment"/>,
<see langword="EntityReference"/>, and <see langword="Element"/>
nodes.
</summary>
	</doc><doc for="XmlNodeType.EndElement">
		<summary>
			<para> An end element tag.</para>
			<para>Example XML: <c>&lt;/item&gt;</c></para>
			<para>Returned when <see cref="System.Xml.XmlReader"/> gets to the end of an element.</para>
		</summary>
	</doc><doc for="XmlNodeType.Entity">
		<summary>
			<para>An entity declaration.</para>
			<para>Example XML: <c>&lt;!ENTITY ...&gt;</c>
			</para>
			<para>An <see langword="Entity"/> node can have child nodes 
   that represent the expanded entity (for example, <see langword="Text"/> and
<see langword="EntityReference"/> nodes). It can appear as the child of the 
<see langword="DocumentType"/> 
node.</para>
		</summary>
	</doc><doc for="XmlNodeType.EndEntity">
		<summary>
			<para>Returned when <see langword="XmlReader"/> gets to the end of the entity
   replacement as a result of a call to <see cref="System.Xml.XmlReader.ResolveEntity"/>
   .</para>
		</summary>
	</doc><doc for="XmlNodeType.EntityReference">
		<summary>
			<para>A reference to an entity.</para>
			<para>Example XML: <c>&amp;num;</c>
			</para>
			<para> An <see langword="EntityReference"/> node can have the 
   following child node types: <see langword="Element"/>,
<see langword="ProcessingInstruction"/>, <see langword="Comment"/>, 
<see langword="Text"/>, <see langword="CDATA"/>, and 
<see langword="EntityReference"/>. It can appear as the child of the 
<see langword="Attribute"/>, <see langword="DocumentFragment"/>, 
<see langword="Element"/>, and <see langword="EntityReference"/> 

nodes.</para>
		</summary>
	</doc><doc for="XmlNodeType.None">
		<summary>
			<para>This is returned by the <see cref="System.Xml.XmlReader"/> if a <see langword="Read"/> 
method has not been called.</para>
		</summary>
	</doc><doc for="XmlNodeType.Notation">
		<summary>
			<para> A notation in the document type declaration.
      </para>
			<para> Example XML: <c>&lt;!NOTATION ...&gt;</c>
			</para>
			<para> A <see langword="Notation"/> node cannot have any child 
nodes. It can appear as the child of the <see langword="DocumentType"/>
node.
</para>
		</summary>
	</doc><doc for="XmlNodeType.ProcessingInstruction">
		<summary>
			<para> A processing instruction.
      </para>
			<para> Example XML: <c>&lt;?pi test?&gt;</c>
			</para>
			<para> A <see langword="ProcessingInstruction"/> node cannot have 
any child nodes. It can appear as the child of the <see langword="Document"/>,
<see langword="DocumentFragment"/>, <see langword="Element"/>, and 
<see langword="EntityReference"/> 
nodes.
</para>
		</summary>
	</doc><doc for="XmlNodeType.Text">
		<summary>
			<para> The
      text content of a node.
      </para>
			<para> A <see langword="Text"/> node cannot have any child nodes. 
   It can appear as the child node of the <see langword="Attribute"/>,
<see langword="DocumentFragment"/>, <see langword="Element"/>, and 
<see langword="EntityReference"/> 
nodes.
</para>
		</summary>
	</doc><doc for="XmlNodeType.Attribute">
		<summary>
			<para> An
 attribute.
 </para>
			<para> Example XML: <c>id='123'</c>
			</para>
			<para> An <see langword="Attribute"/> node can have the
following child node types: <see langword="Text"/> and
<see langword="EntityReference"/>. The <see langword="Attribute"/> node does not 
appear as the child node of any other node type. It is not considered a
child node of an <see langword="Element"/>
.</para>
		</summary>
	</doc><doc for="XmlNodeType.Document">
		<summary>
			<para> A document object that, as the root of the document tree, provides access
 to the entire XML document.
 </para>
			<para> A <see langword="Document"/> node 
 can have the following child node types:
<see langword="XmlDeclaration"/> 
, <see langword="Element"/> (maximum of one),
<see langword="ProcessingInstruction"/>, <see langword="Comment"/>, and 
<see langword="DocumentType"/> 
. It cannot
appear as the child of any node types.</para>
		</summary>
	</doc><doc for="XmlNodeType.XmlDeclaration">
		<summary>
			<para> The XML declaration.
 </para>
			<para> Example XML: <c>&lt;?xml version='1.0'?&gt;</c>
			</para>
			<para> The <see langword="XmlDeclaration"/> 
node must be the first node in the document. It cannot have children. It is a
child of the <see langword="Document"/>
node. It can have attributes that provide version
and encoding information.</para>
		</summary>
	</doc><doc for="XmlNodeType.Whitespace">
		<summary>
			<para> White space between markup.
      </para>
		</summary>
	</doc><doc for="XmlNodeType.SignificantWhitespace">
		<summary>
			<para> White space between markup in a mixed content model or white
      space within the <c>xml:space="preserve"</c> scope.
   </para>
		</summary>
	</doc></docs>
