<docs>
	<doc for="PerformanceCounterCategory.GetCounterInstances">
		<summary>
     Returns the instance names for a given category
 </summary>
		<param name="categoryName">
     Name of category.
 </param>
		<param name="machineName">
     Name of machine that one wishes to read from.  If ".", it means it's local.
 </param>
		<returns>
     String array of counter names.  Single instance category will return a one element array with
     an empty string.
 </returns>
	</doc>
	<doc for="PerformanceCounterCategory.PerformanceCounterCategory">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.PerformanceCounterCategory"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.PerformanceCounterCategory"/> class, leaves the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property empty, and
   sets the <see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/> property to
   the local computer.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property must be set before
   associating this <see cref="System.Diagnostics.PerformanceCounterCategory"/> instance with a performance
   object on the server. Otherwise, an exception is thrown.</para>
		</remarks>
		<permission cref="System.Diagnostics.PerformanceCounterPermission">for browsing category information.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.PerformanceCounterCategory1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.PerformanceCounterCategory"/> class, sets
   the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property to the specified
   value, and sets the <see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/> property
   to the local computer.</para>
		</summary>
		<param name="categoryName">The name of the performance counter category, or performance object, with which to associate this <see cref="System.Diagnostics.PerformanceCounterCategory"/> instance. </param>
		<exception cref="System.ArgumentException">The <paramref name="categoryName"/> is an empty string ("").</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> is <see langword="null"/>.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermission">for browsing category information, such as the category name.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.CategoryName">
		<summary>
			<para>Gets or sets the name of the performance object that defines this category.</para>
		</summary>
		<value>
			<para>The name of the performance counter category, or performance object, with which
      to associate this <see cref="System.Diagnostics.PerformanceCounterCategory"/> instance.</para>
		</value>
		<exception cref="System.ArgumentException">The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> is an empty string ("").</exception>
		<exception cref="System.ArgumentNullException">The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> is <see langword="null"/>.</exception>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.MachineName">
		<summary>
			<para>Gets or sets the name of the computer on which this category exists.</para>
		</summary>
		<value>
			<para>The name of the computer on which the performance counter category and its associated
      counters exist.</para>
		</value>
		<exception cref="System.ArgumentException">The <see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/> syntax is invalid.</exception>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.Create1">
		<summary>
			<para>Registers the custom performance counter category containing the specified
      counters on the specified computer.</para>
		</summary>
		<param name="categoryName">The name of the custom performance counter category to create and register with the system. </param>
		<param name="categoryHelp">A description of the custom category. </param>
		<param name="counterData">A <see cref="System.Diagnostics.CounterCreationDataCollection"/> that specifies the counters to create as part of the new category. </param>
		<param name=" machineName">The computer on which to create and register the category and its associated counters.</param>
		<returns>
			<para>A <see cref="System.Diagnostics.PerformanceCounterCategory"/> that is 
   associated with the new custom category, or
   performance object.</para>
		</returns>
		<exception cref="System.ArgumentException"><para>The <paramref name="machineName"/> parameter is invalid.</para><para> A counter name that is specified within the <paramref name="counterData"/> collection is <see langword="null"/> or an empty string ("").</para>
			<para>-or-</para>
			<para>A counter that is specified within the <paramref name="counterData"/> collection already exists.</para></exception>
		<exception cref="System.NotSupportedException">The remote computer name is invalid.</exception>
		<exception cref="System.InvalidOperationException"><para>The category already exists on the specified computer.</para>
			<para>-or-</para>
			<para>The <paramref name="counterData "/> contains counters of incompatible types.</para></exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for performing administrative tasks on performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Delete"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
		<seealso cref="System.Diagnostics.CounterCreationDataCollection"/>
	</doc><doc for="PerformanceCounterCategory.Create3">
		<summary>
			<para>Registers a custom performance counter category
      containing a single counter of type <see langword="NumberOfItems32"/> on the specified computer.</para>
		</summary>
		<param name="categoryName">The name of the custom performance counter category to create and register with the system. </param>
		<param name="categoryHelp">A description of the custom category. </param>
		<param name="counterName">The name of a new counter, of type <see langword="NumberOfItems32"/>, to create as part of the new category. </param>
		<param name="counterHelp">A description of the counter that is associated with the new custom category. </param>
		<param name=" machineName">The computer on which to create and register the category and its associated counters.</param>
		<returns>
			<para>A <see cref="System.Diagnostics.PerformanceCounterCategory"/> that is associated with the new system category, or
   performance object.</para>
		</returns>
		<exception cref="System.ArgumentException"><para>The <paramref name="machineName"/> parameter is invalid.</para>
			<para>-or-</para>
			<para>The <paramref name="counterName"/> parameter is <see langword="null"/> or an empty string ("").</para>
			<para>-or-</para>
			<para>The counter that is specified by the <paramref name="counterName"/> parameter already exists.</para></exception>
		<exception cref="System.NotSupportedException">The remote computer name is invalid.</exception>
		<exception cref="System.InvalidOperationException"><para>The category already exists on the specified computer.</para></exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for performing administrative tasks on performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Delete"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
		<seealso cref="System.Diagnostics.PerformanceCounter.CounterHelp" qualify="true"/>
	</doc><doc for="PerformanceCounterCategory.Delete1">
		<summary>
			<para>Removes the category and its associated counters from the specified computer.</para>
		</summary>
		<param name="categoryName">The name of the custom performance counter category to delete. </param>
		<param name="machineName">The name of the computer from which to delete the category and its associated counters. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="machineName"/> parameter is invalid.</para><para> -or-</para><para>The <paramref name="categoryName"/> parameter is an empty string ("") or exceeds the maximum length.</para></exception>
		<exception cref="System.NotSupportedException">The remote computer name is invalid.</exception>
		<exception cref="System.InvalidOperationException"><para>The category cannot be deleted because it is not a custom category.</para></exception>
		<remarks>
			<para>You can delete only custom performance counter categories from the system. 
      You cannot delete a counter from a category. To do so, delete the category
      and recreate the category with the counters you want to retain</para>
		</remarks>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for performing administrative tasks on performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Create"/>
	</doc><doc for="PerformanceCounterCategory.PerformanceCounterCategory2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.PerformanceCounterCategory"/> class and sets
   the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> and <see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
   properties to the specified values.</para>
		</summary>
		<param name="categoryName">The name of the performance counter category, or performance object, with which to associate this <see cref="System.Diagnostics.PerformanceCounterCategory"/> instance. </param>
		<param name="machineName">The computer on which the performance counter category and its associated counters exist. </param>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> is an empty string ("").</para>
			<para>-or-</para>
			<para>The <paramref name="machineName"/> syntax is invalid.</para></exception>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> is <see langword="null"/>.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermission">for browsing category information, such as the computer and category name.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.CategoryHelp">
		<summary>
			<para> Gets the category's help text.</para>
		</summary>
		<value>
			<para> A description of the performance object that this
      category measures.</para>
		</value>
		<exception cref="System.InvalidOperationException">The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property is <see langword="null"/>. The category name must be set before getting the category help.</exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
		<seealso cref="System.Diagnostics.PerformanceCounter.CounterHelp" qualify="true"/>
	</doc><doc for="PerformanceCounterCategory.CounterExists">
		<overload>
			<para>Determines whether a specified counter is registered to a
      particular category.</para>
		</overload>
		<summary>
			<para>Determines whether the specified counter is registered to this
      category, which is indicated by the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> and <see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/> properties.</para>
		</summary>
		<param name="counterName">The name of the performance counter to look for. </param>
		<returns>
			<para><see langword="true"/> if the counter
   is registered to the category that is specified by the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> and <see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/>
   properties; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="counterName"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.InvalidOperationException"><para>The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property has not been set.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>You must set the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property before
   calling this method.
   Otherwise, an exception is thrown.</para>
			<para> If you have not set the
<see cref="System.Diagnostics.PerformanceCounterCategory.MachineName"/> property, this 
   method uses the local computer (".").</para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.InstanceExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.CounterExists1">
		<summary>
			<para> Determines whether the specified counter is registered to the specified category on the local computer.</para>
		</summary>
		<param name="counterName">The name of the performance counter to look for.</param>
		<param name=" categoryName">The name of the performance counter category, or performance object, with which the specified performance counter is associated.</param>
		<returns>
			<para><see langword="true"/>, if the counter is registered to the specified category
   on the local computer; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="categoryName"/> is <see langword="null"/>.</para>
			<para>-or-</para>
			<para>The <paramref name="counterName"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> is an empty string ("").</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.InstanceExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.CounterExists2">
		<summary>
			<para>Determines whether the specified counter is registered to the specified category on a remote computer.</para>
		</summary>
		<param name="counterName">The name of the performance counter to look for.</param>
		<param name=" categoryName">The name of the performance counter category, or performance object, with which the specified performance counter is associated.</param>
		<param name=" machineName">The name of the computer on which the performance counter category and its associated counters exist.</param>
		<returns>
			<para><see langword="true"/>, if the counter is registered to the specified category
   on the specified computer; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="categoryName"/> is <see langword="null"/>.</para>
			<para>-or-</para>
			<para>The <paramref name="counterName"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> is an empty string ("").</para>
			<para>-or-</para>
			<para>The <paramref name="machineName"/> is invalid.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermission">for browsing category information, such as computer and category name.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.InstanceExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.Create2">
		<summary>
			<para>Registers a custom performance counter category containing a single counter
      of type <see langword="NumberOfItems32"/> on the local computer.</para>
		</summary>
		<param name="categoryName">The name of the custom performance counter category to create and register with the system. </param>
		<param name="categoryHelp">A description of the custom category. </param>
		<param name="counterName">The name of a new counter, of type <see langword="NumberOfItems32"/>, to create as part of the new category. </param>
		<param name="counterHelp">A description of the counter that is associated with the new custom category. </param>
		<returns>
			<para>A <see cref="System.Diagnostics.PerformanceCounterCategory"/> that is
   associated with the new system category,
   or performance object.</para>
		</returns>
		<exception cref="System.ArgumentException"><para>The <paramref name="counterName"/> parameter is <see langword="null"/> or is an empty string ("").</para>
			<para>-or-</para>
			<para>The counter that is specified by the <paramref name="counterName"/> parameter already exists.</para>
			<para>-or-</para>
			<para>The <paramref name="counterName"/> parameter has invalid syntax. It might contain backslash characters ("\") or have length greater than 80 characters.</para></exception>
		<exception cref="System.InvalidOperationException"><para>The category already exists on the local computer.</para></exception>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for performing administrative tasks on performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Delete"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
		<seealso cref="System.Diagnostics.PerformanceCounter.CounterHelp" qualify="true"/>
	</doc><doc for="PerformanceCounterCategory.Delete">
		<overload>
			<para>Removes the category and its associated counters from the system.</para>
		</overload>
		<summary>
			<para>Removes the category and its associated counters from the local computer.</para>
		</summary>
		<param name="categoryName">The name of the custom performance counter category to delete. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> parameter has invalid syntax. It might contain backslash characters ("\") or have length greater than 80 characters.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<exception cref="System.InvalidOperationException"><para>The category cannot be deleted because it is not a custom category.</para></exception>
		<remarks>
			<para>You can delete only custom performance counter categories
      from the system. You cannot delete a counter from a category. To do so, delete the
      category and recreate the category with the counters you want to retain.</para>
		</remarks>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for performing administrative tasks on performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Create"/>
	</doc><doc for="PerformanceCounterCategory.Exists1">
		<summary>
			<para>Determines whether the category is registered on the specified computer.</para>
		</summary>
		<param name="categoryName"> The name of the performance counter category to look for. </param>
		<param name="machineName">The name of the computer to examine for the category. </param>
		<returns>
			<para><see langword="true"/> if the category is registered;
   otherwise, <see langword="false"/> .</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> parameter is an empty string ("").</para>
			<para>-or-</para>
			<para>The <paramref name="machineName"/> parameter is invalid.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for browsing performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CounterExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.InstanceExists"/>
	</doc><doc for="PerformanceCounterCategory.GetCounters">
		<overload>
			<para>Retrieves a list of the counters in this performance counter
      category. </para>
		</overload>
		<summary>
			<para> Retrieves a list of the counters in a performance counter category that contains exactly one instance.</para>
		</summary>
		<returns>
			<para>An array of <see cref="System.Diagnostics.PerformanceCounter"/> objects
   indicating the counters that are
   associated with this single-instance performance counter category.</para>
		</returns>
		<exception cref="System.ArgumentException">The category is not a single instance.</exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>For more information about performance object instances, see the <see cref="System.Diagnostics.PerformanceCounter"/> class overview.</para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.GetCounters1">
		<summary>
			<para>Retrieves a list of the counters in a performance counter category that contains one or more instances.</para>
		</summary>
		<param name="instanceName">The performance object instance for which to retrieve the list of associated counters.</param>
		<returns>
			<para>An array of <see cref="System.Diagnostics.PerformanceCounter"/> objects
   indicating the counters that
   are associated with the specified object instance of this performance counter category.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="instanceName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.InvalidOperationException"><para>The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property for this <see cref="System.Diagnostics.PerformanceCounterCategory"/> instance has not been set.</para>
			<para>-or-</para>
			<para>The category does not contain the instance that is specified by the <paramref name="instanceName"/> parameter.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>To represent a single-instance category, pass an
      empty string ("") for the <paramref name="instanceName"/>
      parameter.</para>
			<para>For more information about performance object instances, see the <see cref="System.Diagnostics.PerformanceCounter"/> class overview.</para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.GetCategories">
		<overload>
			<para>Retrieves a list of the performance counter categories that are registered on a
      computer.</para>
		</overload>
		<summary>
			<para>Retrieves a list of the performance counter categories that are registered on the local computer.</para>
		</summary>
		<returns>
			<para>An array of <see cref="System.Diagnostics.PerformanceCounterCategory"/> objects
   indicating the categories that are registered on the local computer.</para>
		</returns>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for browsing performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.GetCategories1">
		<summary>
			<para>Retrieves a list of the performance counter categories that are registered on the specified computer.</para>
		</summary>
		<param name="machineName">The computer to look on. </param>
		<returns>
			<para>An array of <see cref="System.Diagnostics.PerformanceCounterCategory"/> objects
   indicating the categories that are registered on the specified computer.</para>
		</returns>
		<exception cref="System.ArgumentException"><para>The <paramref name="machineName"/> parameter is invalid.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>To retrieve the categories on the local computer, use another overload or pass "." as the <paramref name="machineName"/>
parameter.</para>
		</remarks>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for browsing performance counter categories.</permission>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.GetInstanceNames">
		<summary>
			<para>Retrieves the list of performance object instances that are associated with this category.</para>
		</summary>
		<returns>
			<para>An array of strings representing the performance
      object instance names that are associated with
      this category or, if the category contains only one performance object instance, a single-entry array that contains an empty string ("").</para>
		</returns>
		<exception cref="System.InvalidOperationException">The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property is <see langword="null"/>. The property might not have been set.</exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter.InstanceName" qualify="true"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.InstanceExists">
		<overload>
			<para>Determines whether the category contains the specified performance object instance.</para>
		</overload>
		<summary>
			<para>Determines whether the specified performance object instance exists in the category
      that is identified by this <see cref="System.Diagnostics.PerformanceCounterCategory"/> object's <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property.</para>
		</summary>
		<param name="instanceName">The performance object instance in this performance counter category to search for. </param>
		<returns>
			<para><see langword="true"/> if the
   category contains the specified performance
   object instance; otherwise, <see langword="false"/> .</para>
		</returns>
		<exception cref="System.InvalidOperationException">The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property is <see langword="null"/>. The property might not have been set.</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="instanceName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>This overload of <see cref="System.Diagnostics.PerformanceCounterCategory.InstanceExists"/> is not <see langword="static"/>. It requires you to create
   a <see cref="System.Diagnostics.PerformanceCounterCategory"/> object and to set the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property.</para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/>
		<seealso cref="System.Diagnostics.PerformanceCounter.InstanceName" qualify="true"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CounterExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.InstanceExists1">
		<summary>
			<para>Determines whether a specified category on the local computer contains the specified performance object instance.</para>
		</summary>
		<param name="instanceName"> The performance object instance to search for. </param>
		<param name=" categoryName"> The performance counter category to search.</param>
		<returns>
			<para><see langword="true"/> if the
   category contains the specified performance
   object instance; otherwise, <see langword="false"/> .</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="instanceName"/> parameter is <see langword="null"/>.</para>
			<para>-or-</para>
			<para>The <paramref name="categoryName"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> parameter is an empty string ("").</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>It is not possible to determine whether a performance object instance exists on a computer
      without specifying a specific category to look in. </para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounter.InstanceName" qualify="true"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CounterExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.InstanceExists2">
		<summary>
			<para>Determines whether a specified category on a specified computer contains the specified performance object instance.</para>
		</summary>
		<param name="instanceName">The performance object instance to search for. </param>
		<param name=" categoryName">The performance counter category to search.</param>
		<param name=" machineName">The name of the computer on which to look for the category instance pair.</param>
		<returns>
			<para><see langword="true"/> if the
   category contains the specified
   performance object instance; otherwise, <see langword="false"/> .</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="instanceName"/> parameter is <see langword="null"/>.</para>
			<para>-or-</para>
			<para>The <paramref name="categoryName"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> parameter is an empty string ("").</para>
			<para>-or-</para>
			<para>The <paramref name="machineName"/> parameter is invalid.</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>It is not possible to determine whether a performance object instance exists
      on a computer without specifying a specific category to look in.</para>
			<para>You can use "." to specify the local computer.</para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounter.InstanceName" qualify="true"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CounterExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
	</doc><doc for="PerformanceCounterCategory.ReadCategory">
		<summary>
			<para> Reads all the counter and performance object instance data that is associated with this performance counter category.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Diagnostics.InstanceDataCollectionCollection"/> that contains
   the counter and performance object instance data
   for the category.</para>
		</returns>
		<exception cref="System.InvalidOperationException">The <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property is <see langword="null"/>. The property might not have been set.</exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<remarks>
			<para>You must set the <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property before you call <see cref="System.Diagnostics.PerformanceCounterCategory.ReadCategory"/>
.</para>
			<para> Reading the entire category at once can be as efficient as reading a
   single counter because of the way that the system provides the data.</para>
		</remarks>
		<seealso cref="System.Diagnostics.InstanceDataCollectionCollection"/>
		<seealso cref="System.Diagnostics.InstanceDataCollection"/>
		<seealso cref="System.Diagnostics.InstanceData"/>
	</doc><doc for="PerformanceCounterCategory">
		<summary>
			<para>Represents a performance object, which defines a category of performance counters.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Diagnostics.PerformanceCounterCategory"/> instance's <see cref="System.Diagnostics.PerformanceCounterCategory.CategoryName"/> property is 
   displayed in the <SpecialLocalizableItem kind="UIElement">Performance Object</SpecialLocalizableItem> field of
the <SpecialLocalizableItem kind="UIElement">Performance Viewer</SpecialLocalizableItem> application's <SpecialLocalizableItem kind="UIElement">Add Counter</SpecialLocalizableItem> dialog box.</para>
			<para>The <see cref="System.Diagnostics.PerformanceCounterCategory"/> class provides several
methods for interacting with counters and categories on the computer. The
<see cref="System.Diagnostics.PerformanceCounterCategory.Create"/> method enables you to define custom 
categories. The <see cref="System.Diagnostics.PerformanceCounterCategory.Delete"/> method provides a way to
remove categories from the computer. The <see cref="System.Diagnostics.PerformanceCounterCategory.GetCategories"/> method enables you to view the list of
categories, while <see cref="System.Diagnostics.PerformanceCounterCategory.ReadCategory"/>
retrieves all the counter and instance data associated with a
single category.</para>
			<para> A performance counter publishes performance data about an
   application. Categories include physical components (such as processors, disks, and
   memory) and system objects (such as processes and threads). System counters that
   are related to the same performance object are grouped into a category that
   indicates their common focus. When you create an instance of the <see cref="System.Diagnostics.PerformanceCounter"/> class, you first
   indicate the category with which the component will interact, and then you
   choose a counter from that category.</para>
			<para>For example, one Windows counter category is the Memory category. System
   counters within this category track memory data such as the number of bytes
   available and the number of bytes cached. If you wanted to work with the bytes
   cached in your application, you would create an instance of the <see cref="System.Diagnostics.PerformanceCounter"/> component, connect it to the Memory
   category, and then pick the appropriate counter (in this case, Cached Bytes)
   from that category.</para>
			<para>Although your system makes many more counter categories available, the
   categories that you will probably interact with most frequently are the Cache,
   Memory, Objects, PhysicalDisk, Process, Processor, Server, System, and Thread
   categories.</para>
		</remarks>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
		<seealso cref="System.Diagnostics.CounterCreationDataCollection"/>
		<seealso cref="System.Diagnostics.CounterSample"/>
	</doc>
	<doc for="PerformanceCounterCategory.Exists">
		<overload>
			<para>Determines whether the category is registered on the system.</para>
		</overload>
		<summary>
			<para>Determines whether the category is registered on the local computer.</para>
		</summary>
		<param name="categoryName">The name of the performance counter category to look for. </param>
		<returns>
			<para><see langword="true"/><see langword=" "/>if the category
   is registered; otherwise, <see langword="false"/> .</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="categoryName"/> parameter is an empty string ("").</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for browsing performance counter categories.</permission>
		<example>
			<codelink SampleID="PerfCounter_ccd" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.CounterExists"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.InstanceExists"/>
	</doc>
	<doc for="PerformanceCounterCategory.Create">
		<overload>
			<para> Registers a custom performance counter category and one or more counters with the
      system.</para>
		</overload>
		<summary>
			<para>Registers the custom performance counter category containing the specified
      counters on the local computer.</para>
		</summary>
		<param name="categoryName">The name of the custom performance counter category to create and register with the system. </param>
		<param name="categoryHelp">A description of the custom category. </param>
		<param name="counterData">A <see cref="System.Diagnostics.CounterCreationDataCollection"/> that specifies the counters to create as part of the new category. </param>
		<returns>
			<para>A <see cref="System.Diagnostics.PerformanceCounterCategory"/> that is
   associated with the new custom category, or
   performance object.</para>
		</returns>
		<exception cref="System.ArgumentException"><para>A counter name that is specified within the <paramref name="counterData"/> collection is <see langword="null"/> or an empty string ("").</para>
			<para>-or-</para>
			<para>A counter that is specified within the <paramref name="counterData"/> collection already exists.</para>
			<para>-or-</para>
			<para>The <paramref name="counterName"/> parameter has invalid syntax. It might contain backslash characters ("\") or have length greater than 80 characters.</para></exception>
		<exception cref="System.ArgumentNullException">The <paramref name="categoryName"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.InvalidOperationException"><para>The category already exists on the local computer.</para>
			<para>-or-</para>
			<para>The layout of the <paramref name="counterData "/>collection is incorrect for base counters. A counter of type <see langword="AverageCount64"/>, <see langword="AverageTimer32"/>, <see langword="CounterMultiTimer"/>, <see langword="CounterMultiTimerInverse"/>, <see langword="CounterMultiTimer100Ns"/>, <see langword="CounterMultiTimer100NsInverse"/>, <see langword="RawFraction"/>, <see langword="SampleFraction"/> or <see langword="SampleCounter"/> has to be immediately followed by one of the base counter types (<see langword="AverageBase"/>, <see langword="MultiBase"/>, <see langword="RawBase"/>, or <see langword="SampleBase"/> ).</para></exception>
		<exception cref="System.ComponentModel.Win32Exception">A call to an underlying system API failed.</exception>
		<permission cref="System.Diagnostics.PerformanceCounterPermissionAccess">for performing administrative tasks on performance counter categories.</permission>
		<example>
			<codelink SampleID="PerfCounter_ccd" SnippetID="1"/>
		</example>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Delete"/>
		<seealso cref="System.Diagnostics.PerformanceCounterCategory.Exists"/>
		<seealso cref="System.Diagnostics.PerformanceCounter"/>
		<seealso cref="System.Diagnostics.CounterCreationDataCollection"/>
	</doc>
</docs>
