<docs>
	<doc for="ProcessModuleCollection.ProcessModuleCollection">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.ProcessModuleCollection"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.ProcessModuleCollection"/> class, with no associated <see cref="System.Diagnostics.ProcessModule"/> instances.</para>
		</summary>
	</doc><doc for="ProcessModuleCollection.ProcessModuleCollection2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.ProcessModuleCollection"/> class, using the specified array of <see cref="System.Diagnostics.ProcessModule"/> instances.</para>
		</summary>
		<param name="processModules">An array of <see cref="System.Diagnostics.ProcessModule"/> instances with which to initialize this <see cref="System.Diagnostics.ProcessModuleCollection"/> instance.</param>
	</doc><doc for="ProcessModuleCollection.IndexOf">
		<summary>
			<para>Provides the location of a specified module within the collection.</para>
		</summary>
		<param name="module">The <see cref="System.Diagnostics.ProcessModule"/> whose index is retrieved.</param>
		<returns>
			<para>The zero-based index that defines the location of the module within the 
   <see cref="System.Diagnostics.ProcessModuleCollection"/>.</para>
		</returns>
	</doc><doc for="ProcessModuleCollection.CopyTo">
		<summary>
			<para>Copies an array of <see cref="System.Diagnostics.ProcessModule"/> instances to the 
   collection, at the specified index.</para>
		</summary>
		<param name="array">An array of <see cref="System.Diagnostics.ProcessModule"/> instances to add to the collection.</param>
		<param name=" index">The location at which to add the new instances.</param>
	</doc><doc for="ProcessModuleCollection.Contains">
		<summary>
			<para>Determines whether the specified process module exists 
      in the collection.</para>
		</summary>
		<param name="module">A <see cref="System.Diagnostics.ProcessModule"/> instance that indicates the module to find in this collection.</param>
		<returns>
			<para><see langword="true"/> if the module exists in the collection; otherwise, 
<see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>A module is identified by its module name and its fully qualified file 
      path.</para>
		</remarks>
	</doc><doc for="ProcessModuleCollection">
		<summary>
			<para>Provides a strongly typed collection of <see cref="System.Diagnostics.ProcessModule"/> objects.</para>
		</summary>
		<remarks>
			<para>A module is an executable file or a dynamic link library (DLL). Each process
      consists of one or more modules. You can use this class to get iterate over a
      collection of process modules on the system. A module is identified by its
      module name and fully qualified file path.</para>
			<para>
			</para>
		</remarks>
		<seealso cref="System.Diagnostics.ProcessModule.ModuleName" qualify="true"/>
		<seealso cref="System.Diagnostics.ProcessModule.FileName" qualify="true"/>
	</doc><doc for="ProcessModuleCollection.this">
		<summary>
			<para>Provides an index for iterating over the set
      of process modules.</para>
		</summary>
		<param name="index">The zero-based index value of the module in the collection.</param>
		<value>
			<para>A <see cref="System.Diagnostics.ProcessModule"/> that indexes the modules in the
   collection</para>
		</value>
	</doc>
</docs>
