<docs>
	<doc for="ServiceType.Win32OwnProcess">
		<summary>
			<para>A Win32 program that can be started by the Service 
      Controller and that obeys the service control protocol. This type of Win32
      service runs in a process by itself.</para>
		</summary>
	</doc><doc for="ServiceType.Win32ShareProcess">
		<summary>
			<para>A Win32 service that can share a process with other Win32 services.</para>
		</summary>
	</doc><doc for="ServiceType.FileSystemDriver">
		<summary>
			<para>A file system driver, which is also a Kernel device driver.</para>
		</summary>
	</doc><doc for="ServiceType.KernelDriver">
		<summary>
			<para>A Kernel device driver such as a hard disk or other 
      low-level hardware device driver.</para>
		</summary>
	</doc><doc for="ServiceType.InteractiveProcess">
		<summary>
			<para> A service
      that can communicate with the desktop.</para>
		</summary>
	</doc><doc for="ServiceType.Adapter">
		<summary>
			<para>A service for a hardware device that requires its own driver.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="ServiceType.RecognizerDriver">
		<summary>
			<para>A file system driver used during startup to determine the file systems
      present on the system.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="ServiceType">
		<summary>
			<para>Represents the type of the service.</para>
		</summary>
		<remarks>
			<para>The service type indicates how the service is used by
      the system. The <see cref="System.ServiceProcess.ServiceController"/>
      that passes commands to the service stores a value for the service type.</para>
			<para> The value of a ServiceType
      instance represents a set of flags combined using the bitwise OR
      operator.
      
   </para>
			<para>The creation of interactive services is not supported. To workaround
      this, you can create a non-interactive service and a separate control GUI
      application that communicates with the service using sockets or remoting. For code
      samples on remoting, see <see topic="cpconRemotingExamples"/>.</para>
		</remarks>
		<seealso cref="System.ServiceProcess.ServiceController.ServiceType" qualify="true"/>
		<seealso cref="System.ServiceProcess.ServiceController"/>
	</doc>
</docs>
