<docs>
   <doc for="MessageQueueConverter">
 
   </doc>
   <doc for="MessageQueueConverter.CanConvertFrom">
                                
   </doc>
   <doc for="MessageQueueConverter.CanConvertTo">
 <summary>
    <para>Gets a value indicating whether this converter can
       convert an object to the given destination type using the context.</para>
 </summary>
 <param name='context'><para>An <see cref='System.ComponentModel.ITypeDescriptorContext'/> that provides a format context. </para></param>
 <param name='destinationType'>A <see cref='System.Type'/> that represents the type you wish to convert to.</param>
 <returns>
 <para><see langword='true '/>if this converter can perform the conversion; otherwise, 
 <see langword='false'/>. </para>
 </returns>
 <remarks>
 <para>The <paramref name="context"/> parameter can be used to extract additional information 
    about the environment this converter is being invoked from. This can be
 <see langword='null'/>, so always check. Also, properties on the context object 
    can return <see langword='null'/>.</para>
 <note type="inheritinfo">
    Override this method to provide your own conversion requirements.
 </note>
 </remarks>
 <seealso cref='System.ComponentModel.ITypeDescriptorContext'/>
   </doc>
   <doc for="MessageQueueConverter.ConvertFrom">
                  
   </doc>
   <doc for="MessageQueueConverter.ConvertTo">
                  
   </doc>
</docs>

