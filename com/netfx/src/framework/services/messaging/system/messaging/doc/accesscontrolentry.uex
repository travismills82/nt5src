<docs>
	<doc for="AccessControlEntry.CustomAccessRights">
		<summary>
			<para>Gets or sets custom access rights.</para>
		</summary>
		<value>
			<para>Application-specific access rights, usually defined as a 
      bitflag.</para>
		</value>
		<seealso cref="System.Messaging.AccessControlEntry.GenericAccessRights"/>
		<seealso cref="System.Messaging.AccessControlEntry.StandardAccessRights"/>
	</doc>
	<doc for="AccessControlEntry.AccessControlEntry1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Messaging.AccessControlEntry"/> class that specifies a trustee to grant or
   deny rights to.</para>
		</summary>
		<param name="trustee">A <see cref="System.Messaging.Trustee"/> that specifies a user, group, computer, domain, or alias.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="trustee"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>Set the <see cref="System.Messaging.AccessControlEntry.EntryType"/> property and at least one
   of the <see cref="System.Messaging.AccessControlEntry.GenericAccessRights"/>, <see cref="System.Messaging.AccessControlEntry.StandardAccessRights"/>, or <see cref="System.Messaging.AccessControlEntry.CustomAccessRights"/> properties before using
   this <see cref="System.Messaging.AccessControlEntry"/> instance to set access rights for a
   trustee.</para>
		</remarks>
		<seealso cref="System.Messaging.Trustee"/>
	</doc>
	<doc for="AccessControlEntry">
		<summary>
			<para>Specifies access rights for a trustee (user, group, or
      computer) to perform application-specific implementations of common tasks.</para>
		</summary>
		<remarks>
			<para> Many applications have similar operations to which a trustee can be
      assigned rights, for example, reading, writing, and deleting objects. When you
      assign rights for these general operations, the application interprets them
      in a way specific to that application. For example, Message Queuing interprets
      the reading operation as receiving or peeking messages from a queue. The <see cref="System.Messaging.AccessControlEntry"/> class provides access to these common
      rights. </para>
			<para>When working with access control entries, you specify a
      trustee to whom you are assigning the rights. You must set at least one of the
   <see cref="System.Messaging.AccessControlEntry.GenericAccessRights"/>, <see cref="System.Messaging.AccessControlEntry.StandardAccessRights"/>, or <see cref="System.Messaging.AccessControlEntry.CustomAccessRights"/> properties to indicate
      which rights to assign to the trustee. You can set the <see cref="System.Messaging.AccessControlEntry.EntryType"/>
      property to specify whether the rights you indicate should be granted or denied. The default entry
      type is to allow rights. </para>
		</remarks>
		<seealso cref="System.Messaging.AccessControlList"/>
		<seealso cref="System.Messaging.MessageQueueAccessControlEntry"/>
		<seealso cref="System.Messaging.MessageQueue.SetPermissions" qualify="true"/>
	</doc>
	<doc for="AccessControlEntry.AccessControlEntry2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Messaging.AccessControlEntry"/> class that specifies a trustee, rights to
   assign, and whether to grant or deny these rights.</para>
		</summary>
		<param name="trustee">A <see cref="System.Messaging.Trustee"/> that specifies a user, group, computer, domain, or alias.</param>
		<param name=" genericAccessRights">A bitwise combination of the <see cref="System.Messaging.GenericAccessRights"/> values.</param>
		<param name=" standardAccessRights">A bitwise combination of the <see cref="System.Messaging.StandardAccessRights"/> values.</param>
		<param name=" entryType">One of the <see cref="System.Messaging.AccessControlEntryType"/> values, which specifies whether to allow, deny, set, or revoke the specified rights.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="trustee"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The <paramref name="genericAccessRights"/> or <paramref name="standardAccessRights"/>, or <paramref name="entryType"/> parameters are not valid enumeration values.</exception>
		<remarks>
			<para>This overload of the constructor sets the <see cref="System.Messaging.AccessControlEntry.CustomAccessRights"/> property to a bitwise combination of
   the <paramref name="genericAccessRights"/> and <paramref name="standardAccessRights"/> parameters
   you specify.</para>
		</remarks>
	</doc>
	<doc for="AccessControlEntry.EntryType">
		<summary>
			<para>Gets or sets a value that indicates how the access rights
      apply to the trustee.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Messaging.AccessControlEntryType"/> values, which
   specifies whether to allow, deny, set, or revoke the specified rights. The
   default is <see langword="Allow"/>
   . </para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The entry type is not a valid <see cref="System.Messaging.AccessControlEntryType"/> enumeration value.</exception>
	</doc>
	<doc for="AccessControlEntry.GenericAccessRights">
		<summary>
			<para> Gets or
      sets a set of common access rights that map to both standard and
      object-specific access rights for reading, writing, and executing.</para>
		</summary>
		<value>
			<para>A bitwise combination of the <see cref="System.Messaging.GenericAccessRights"/> values.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value you set is not a valid combination of <see cref="System.Messaging.GenericAccessRights"/> bitflag members.</exception>
		<remarks>
			<para> Securable objects use the four high-order bits of the Windows 2000/Windows NT access mask format to specify the generic access rights. Each type of securable object maps these bits to a set of its standard and object-specific access rights. Applications that define private securable objects can also use the generic access rights.</para>
		</remarks>
		<seealso cref="System.Messaging.AccessControlEntry.StandardAccessRights"/>
		<seealso cref="System.Messaging.AccessControlEntry.CustomAccessRights"/>
	</doc>
	<doc for="AccessControlEntry.StandardAccessRights">
		<summary>
			<para> Gets or sets a set of standard access rights that correspond to
      operations common to most types of securable objects.</para>
		</summary>
		<value>
			<para>A bitwise combination of the <see cref="System.Messaging.StandardAccessRights"/> values.</para>
		</value>
		<exception cref="System.ComponentModel.InvalidEnumArgumentException">The value you set is not a valid combination of <see cref="System.Messaging.StandardAccessRights"/> bitflag members.</exception>
		<remarks>
			<para>The Windows 2000/Windows NT access mask format includes a set of bits for the standard access rights. Each type of securable object has a set of access rights that correspond to operations specific to that type of object. In addition to these object-specific access rights, there is a set of standard access rights that correspond to operations common to most types of securable objects.</para>
		</remarks>
		<seealso cref="System.Messaging.AccessControlEntry.GenericAccessRights"/>
		<seealso cref="System.Messaging.AccessControlEntry.CustomAccessRights"/>
	</doc>
	<doc for="AccessControlEntry.Trustee">
		<summary>
			<para>Gets or sets the user, group, domain, or alias to which
      you are assigning access rights.</para>
		</summary>
		<value>
			<para>A <see cref="System.Messaging.Trustee"/> that
   specifies a user account, group account, or logon session to which an <see cref="System.Messaging.AccessControlEntry"/>
   applies.</para>
		</value>
		<exception cref="System.ArgumentNullException">The <see cref="System.Messaging.AccessControlEntry.Trustee"/> property is <see langword="null"/>.</exception>
		<remarks>
			<para> Both users and programs, such as Win32 services,
      use user accounts to log on to the local computer. Group accounts cannot be used to
      log on to a computer, but are useful in <see cref="System.Messaging.AccessControlEntry"/> instances to allow or deny a set of access
      rights to one or more user accounts.</para>
		</remarks>
		<seealso cref="System.Messaging.Trustee"/>
	</doc>
	<doc for="AccessControlEntry.AccessControlEntry">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Messaging.AccessControlEntry"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Messaging.AccessControlEntry"/> class that specifies neither a trustee nor set
   of rights to apply.</para>
		</summary>
		<remarks>
			<para>Set the <see cref="System.Messaging.AccessControlEntry.Trustee"/> property and at least one of the <see cref="System.Messaging.AccessControlEntry.GenericAccessRights"/>, <see cref="System.Messaging.AccessControlEntry.StandardAccessRights"/>, or <see cref="System.Messaging.AccessControlEntry.CustomAccessRights"/> properties before using this <see cref="System.Messaging.AccessControlEntry"/> instance to set access rights for a
   trustee.</para>
			<para>You can optionally set the <see cref="System.Messaging.AccessControlEntry.EntryType"/> property, though it 
defaults to <SpecialLocalizableItem kind="UIElement">Allow</SpecialLocalizableItem>
if you choose not to do so.</para>
		</remarks>
	</doc>
</docs>
