<docs>
	<doc for="MessageQueueErrorCode.OperationCancelled">
		<summary>
     The operation was cancelled before it could be completed.
 </summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalPrivateProperties">
		<summary>
  The private properties parameter value is invalid. This may be because it has a  null value or has zero properties specified.
 </summary>
	</doc>
	<doc for="MessageQueueErrorCode.Property">
		<summary>
			<para>Message text: One or more of the passed properties are invalid.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.InvalidParameter">
		<summary>
			<para>Message text: An invalid parameter passed to a function.</para>
			<para>Message Queuing returns this error if one of the parameters supplied by the operation is
 not valid. </para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CouldNotGetAccountInfo">
		<summary>
			<para>Message text: Could not get the account information for the user.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.QueueNotAvailable">
		<summary>
			<para>Message text: Error while reading from a queue residing on a remote computer.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.StaleHandle">
		<summary>
			<para>Message text: The Queue Manager service has been restarted. The queue handle
 is stale and should be closed.</para>
			<para>Message Queuing returns this error if the specified handle was obtained in a 
 previous session of the Queue Manager service.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.TransactionEnlist">
		<summary>
			<para>Message text: Cannot enlist the transaction.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.QueueDeleted">
		<summary>
			<para> Message text: The queue was deleted. Messages cannot be received anymore using this
 queue instance. The queue should be closed.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.MqisServerEmpty">
		<summary>
			<para>Message text: The list of MQIS servers (in registry) is empty.</para>
			<para>
			</para>
			<para>This error applies only to Message Queuing 1.0.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.QDnsPropertyNotSupported">
		<summary>
			<para>DNS property is not supported as criteria to locate queues.</para>
			<para>You cannot retrieve the DNS path name of a queue.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.Base">
		<internalonly/>
		<summary>
			<para>Message Queuing does not return this error code.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.InvalidHandle">
		<internalonly/>
		<summary>
			<para>Message text: An invalid handle passed to a function.</para>
			<para>Message Queuing returns this error if the specified queue handle is not valid.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalSort">
		<internalonly/>
		<summary>
			<para>Message text: Illegal sort specified (for example, duplicate columns).</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalPropertyVt">
		<internalonly/>
		<summary>
			<para>Message text: Invalid VARTYPE value.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.BufferOverflow">
		<internalonly/>
		<summary>
			<para>Message text: The buffer supplied to MQReceiveMessage for message body retrieval
      was too small. The message is not removed from the queue and part
      of the message body that fits in the buffer was copied.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalCursorAction">
		<internalonly/>
		<summary>
			<para>System.Messaging.MessageEnumerator.MoveNext  cannot be used with the current cursor position.</para>
			<para>Message text: MQ_ACTION_PEEK_NEXT specified to MQReceiveMessage can not be
   used with the current cursor position.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.FormatNameBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Message text: The format name buffer supplied to the API was too small
      to fit the format name.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalSecurityDescriptor">
		<internalonly/>
		<summary>
			<para>Mesage text: The specified security descriptor is not a valid security descriptor.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.SenderIdBufferTooSmall">
		<summary>
			<para>Mesage text: The passed buffer for the user identifier property is too small.</para>
			<para>Message Queuing returns this error when the supplied sender identification
      bugger is too small. See the Message class's System.Messaging.Message.SenderId property for more information about sender
      identifiers.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.SecurityDescriptorBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Mesage text: The size of the buffer passed to MQGetQueueSecurity is too small.</para>
			<para>
			</para>
			<para>Message Queuing returns this error if the supplied security buffer is too
      small for the security descriptor.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.UserBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Mesage text: Request failed because user buffer is too small to hold the returned information.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.SenderCertificateBufferTooSmall">
		<summary>
			<para>Mesage text: The passed buffer for the user certificate property is too small.</para>
			<para>See the Message class's System.Messaging.Message.SenderCertificate property for more information about user
   certificates.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.BadSecurityContext">
		<internalonly/>
		<summary>
			<para>Message text: Bad security context.</para>
			<para>Message Queuing returns this error if the security context
      has become corrupted.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalCriteriaColumns">
		<internalonly/>
		<summary>
			<para>Message text: Invalid MQCOLUMNS parameter.</para>
			<para>Message Queuing returns this error if you are using the 
      MessagePropertyFilter class and have selected false
      for all boolean values and zero (0) for all integer values.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalPropertyId">
		<internalonly/>
		<summary>
			<para>Message text: Invalid property identifier value.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalRelation">
		<internalonly/>
		<summary>
			<para>Message text: Invalid relation value in restriction.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalPropertySize">
		<internalonly/>
		<summary>
			<para>Message text: Illegal property buffer size.</para>
			<para>Message Queuing returns this error if the specified buffer for the
      message identifier or correlation identifier is not the correct size. See the
   Message class'sMessage.Id and Message.CorrelationId properties for more information about message
      identifiers. </para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalRestrictionPropertyId">
		<internalonly/>
		<summary>
			<para>Invalid property identifier value for restriction.</para>
			<para>
			</para>
			<para>Message text: Invalid propid value in MQRESTRICTION parameter.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalQueueProperties">
		<internalonly/>
		<summary>
			<para>Illegal Queue Properties, either null or with zero properties.</para>
			<para>Message text: Illegal MQQUEUEPROPS parameter, either null or with zero
      properties.</para>
			<para>Message Queuing returns this error if you are using the
   MessageQueueCriteria class and have called MessageQueueCriteria.ClearAll or have not specified any criteria to use when
      filtering queues. See the MessageQueueCriteria class or MessageQueue.GetPublicQueues for more information about filtering queue
      search criteria.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalMessageProperties">
		<internalonly/>
		<summary>
			<para>Illegal Message Properties, either null or with zero properties.</para>
			<para>Message text: Illegal MQQMPROPS parameter, either null or with zero
      properties.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.ResultBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Message text: The supplied result buffer is too small.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalSortPropertyId">
		<internalonly/>
		<summary>
			<para>Invalid property identifier value in for sort.</para>
			<para>Message text: Invalid propid value in MQSORTSET.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.LabelBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Message text: The label buffer supplied to the API was too small.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.SymmetricKeyBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Message text: The passed buffer for the Symmetric key property is too small.</para>
			<para>See the Message class's DestinationSymmetricKey property for more information about symmetric
   keys.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.SignatureBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Message text: The passed buffer for the Signature property is too small.</para>
			<para>See theMessage class's DigitalSignature property for more information about
      signatures.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.ProviderNameBufferTooSmall">
		<internalonly/>
		<summary>
			<para>Message text: The passed buffer for the Provider name property is too small.</para>
			<para>See the Message class's AuthenticationProviderName property
   for more information about provider
   names.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.MessageAlreadyReceived">
		<summary>
			<para>Message text: A message that is currently pointed at by the cursor has been removed from
      the queue by another process or by another call to receive the
      message without the use of this cursor.</para>
			<para>Message Queuing returns this error when some other
      cursor, application, or the system administrator has already removed the message
      from the queue. This error is most likely to occur when using the <see cref="System.Messaging.MessageEnumerator"/> class, such as the instance returned
      through a call to <see cref="System.Messaging.MessageQueue.GetMessageEnumerator" qualify="true"/> or <see cref="System.Messaging.MessageQueue.GetEnumerator" qualify="true"/>
      .</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.InvalidOwner">
		<summary>
			<para>Message text: Invalid object owner. For example CreateQueue failed because the
      Queue Manager object is invalid.</para>
			<para> 
      Message Queuing returns this error, for example, if your
      application attempts to create a queue on a computer on which Message Queuing is
      not installed.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.ObjectServerNotAvailable">
		<summary>
			<para>Message text: Object owner is not reachable.</para>
			<para>Message Queuing returns this error if the directory
      service server for the object is not available. When this error is returned,
      the operation fails.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.DtcConnect">
		<summary>
			<para>Message text: Cannot connect to MS DTC.</para>
			<para>Message Queuing returns this error if it is unable to connect to the 
      Microsoft Distributed Transaction Coordinator.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.DependentClientLicenseOverflow">
		<summary>
			<para>Message text: The number of dependent clients served by this Message Queuing server reached
      its upper limit.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.UnsupportedOperation">
		<summary>
			<para>Message text: The operation is not supported for a WORKGROUP installation computer.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotCreateCertificateStore">
		<summary>
			<para>Message text: Unable to create a certificate store for the internal certificate.</para>
			<para>Message Queuing returns this error if you do not have permission to
      manipulate your own profile.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotOpenCertificateStore">
		<summary>
			<para>Message text: Unable to open the certificates store for the internal certificate.</para>
			<para>Message Queuing returns this error if you do not have permission to
      manipulate your own profile.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.IllegalEnterpriseOperation">
		<summary>
			<para>Message text: The operation is invalid for a Message Queuing services object.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotGrantAddGuid">
		<summary>
			<para>Message text: Failed to grant the "Add Guid" permission to current user.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotLoadMsmqOcm">
		<summary>
			<para>Message text: Cannot load the MSMQOCM.DLL library.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.NoEntryPointMsmqOcm">
		<summary>
			<para>Message text: Cannot locate an entry point in the MSMQOCM.DLL library.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.NoMsmqServersOnDc">
		<summary>
			<para>Message text: Failed to find Message Queuing servers on domain controllers.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotJoinDomain">
		<summary>
			<para>Message text: Failed to join Message Queuing enterprise on Windows 2000 domain.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotCreateOnGlobalCatalog">
		<summary>
			<para>Message text: Failed to create an object on a specified global catalog server.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.PublicKeyNotFound">
		<summary>
			<para>Message text: Unable to find the public key for computer.</para>
			<para> 
      Message Queuing returns this error, for example, if
      you are trying to retrieve the computer properties of a computer running Message
      Queuing 1.0 or if you are trying to get remote computer properties while working
      offline. This error applies only to Message Queuing 2.0.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.NoGlobalCatalogInDomain">
		<summary>
			<para>Message text: Unable to find Global Catalog servers in the specified domain.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.NoMsmqServersOnGlobalCatalog">
		<summary>
			<para>Message text: Failed to find Message Queuing servers on Global Catalog domain controllers.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotSignDataEx">
		<summary>
			<para>Message text: Unable to sign data before sending an authenticated message.</para>
			<para>See the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.DigitalSignature"/> property for more information about 
   signing data.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.EncryptionProviderNotSupported">
		<summary>
			<para>Message text: The Cryptographic Service Provider is not supported by Message Queuing.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CannotHashDataEx">
		<summary>
			<para>Message text: Unable to hash data for an authenticated message.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.FailVerifySignatureEx">
		<summary>
			<para>Message text: Signature of received message is not valid.</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.PublicKeyDoesNotExist">
		<summary>
			<para>Message text: The public key for the computer does not exist.</para>
			<para> Message Queuing returns this
      error if it was able to query the directory service, but the enhanced key was not
      found. This error applies only to Message Queuing 2.0.</para>
			<para>
			</para>
		</summary>
	</doc><doc for="MessageQueueErrorCode.CorruptedPersonalCertStore">
		<summary>
			<para>Message text: The personal certificate store is corrupted.</para>
			<para>Message Queuing returns this error when the Microsoft Internet Explorer
      personal certificate store is corrupted.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.PropertyNotAllowed">
		<summary>
			<para> Message text: Invalid property
      for the requested operation</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.InsufficientProperties">
		<summary>
			<para>Message text: Not all the required properties for the operation were specified
      in the input parameters.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.MachineExists">
		<summary>
			<para>Message text: Computer with the same name already exists in the site.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.UnsupportedAccessMode">
		<summary>
			<para>Message text: The specified access mode is not supported.</para>
			<para>Message Queuing returns this error if the access mode specified when opening
      the queue is set to an invalid value, or the access mode and the share mode
      specified are not compatible.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.NoResponseFromObjectServer">
		<summary>
			<para>Message text: No response from object owner.</para>
			<para>Message Queuing returns this error if there is no
      response from the directory service server. When this error is returned, the
      status of the operation is unknown.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.TransactionImport">
		<summary>
			<para>Message text: Cannot import the transaction.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.TransactionSequence">
		<summary>
			<para>Message text: Wrong transaction operations sequence.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalContext">
		<summary>
			<para> Message text: Invalid context parameter.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.MqisReadOnlyMode">
		<summary>
			<para>Message text: MQIS database is in read-only mode.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.WksCantServeClient">
		<summary>
			<para>Message text: Message Queuing-independent clients cannot serve Message Queuing-dependent
      clients.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.RemoteMachineNotAvailable">
		<summary>
			<para>Message text: The remote machine is not available.</para>
			<para>
			</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.OperationCanceled">
		<summary>
			<para>Message text: The operation was canceled before it could be completed.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CannotImpersonateClient">
		<summary>
			<para> Message text: The RPC server cannot impersonate the client application, hence security
      credentials could not be verified.</para>
			<para> Message Queuing returns this error if the
      directory service server cannot impersonate the client application. This is necessary
      to verify the security credentials.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.AccessDenied">
		<summary>
			<para>Message text: Access is denied.</para>
			<para>Message Queuing returns this error if access to the 
      specified queue or computer is denied. If this error is returned, verify
      that you have access rights for the operation, such as creating, deleting, or
      setting properties for a queue. For information about changing access rights
      for a queue, see the <see cref="System.Messaging.MessageQueueAccessRights"/> and <see cref="System.Messaging.MessageQueue.SetPermissions" qualify="true"/>
      topics.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CannotSetCryptographicSecurityDescriptor">
		<summary>
			<para>Message text: Unable to set the security descriptor for the cryptographic keys.</para>
			<para>For information about cryptographic providers, see the <see cref="System.Messaging.CryptographicProviderType"/> and <see cref="System.Messaging.Message.AuthenticationProviderType" qualify="true"/> 
topics.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CannotGetDistinguishedName">
		<summary>
			<para>Message text: Failed to retrieve the distinguished name of local computer.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CannotCreateHashEx">
		<summary>
			<para>Message text: Unable to create a hash object for an authenticated message.</para>
			<para>See the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.HashAlgorithm"/> property for more
   information about hash algorithms.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CorruptedInternalCertificate">
		<summary>
			<para>Message text: The internal Message Queuing certificate is corrupted.</para>
			<para>This error applies only to Message Queuing 1.0.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CorruptedSecurityData">
		<summary>
			<para> Message text: A cryptographic function has failed.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.ComputerDoesNotSupportEncryption">
		<summary>
			<para>Message text: The computer does not support encryption operations.</para>
			<para>Message Queuing returns this error when the application requests encryption and the computer (source or destination)
      does not support encryption operations. When this error is returned, the
      encryption operation fails. For more information about using encryption, see the <see cref="System.Messaging.MessageQueue.EncryptionRequired" qualify="true"/> and <see cref="System.Messaging.Message.EncryptionAlgorithm" qualify="true"/>
      topics.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CouldNotGetUserSid">
		<summary>
			<para>Message text: Could not get the SID information out of the thread token.</para>
			<para>For more information about sender identifiers, see the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.SenderId"/> 
property.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.DsIsFull">
		<summary>
			<para>Message text: Directory service is full.</para>
			<para>Message Queuing returns this error if the information store is full. This
      error applies only to Message Queuing 1.0.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.DsError">
		<summary>
			<para>Message text: Internal directory service error.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.DeleteConnectedNetworkInUse">
		<summary>
			<para> Message text: The connected network cannot be deleted; it is in use.</para>
			<para>Message Queuing returns this error if it cannot delete the specified
      connected network because the network is defined in at least one other
      computer. Remove the connected network from all connected network lists and try
      again to delete it.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CorruptedQueueWasDeleted">
		<summary>
			<para>Message text: The .ini file for the queue in LQS was deleted because it was corrupted.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.CertificateNotProvided">
		<summary>
			<para>Message text: A user attempted to send an authenticated message without a certificate.</para>
			<para>Message Queuing returns this error if the sending application attempts to use security context information to authenticate
      a message, and the security context does not include a certificate.
      For more information about certificates, see the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.SenderCertificate"/>
      property.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.Generic">
		<summary>
			<para>Message text: Generic Error.</para>
			<para>Message Queuing returns this error if it cannot identify a more specific
      source.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.QueueExists">
		<summary>
			<para>Message text: A queue with the same pathname is already registered.</para>
			<para>Message Queuing registers public queues in the directory service, and
      registers private queues on the local computer. </para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.MachineNotFound">
		<summary>
			<para>Message text: The specified computer could not be found.</para>
			<para> Message Queuing returns this error if it cannot find
      the queue's computer in the directory service.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.NoDs">
		<summary>
			<para>Message text: No connection with this site's controller(s).</para>
			<para> Message Queuing returns this error if the application
      cannot access the directory service. If this error is returned, verify
      permissions for accessing the directory service.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IOTimeout">
		<summary>
			<para>Message text: The receive or peek message time-out has expired.</para>
			<para>Message Queuing returns this error if the time-out specified in a call to
   <see cref="System.Messaging.MessageQueue.Receive" qualify="true"/> or <see cref="System.Messaging.MessageQueue.Peek" qualify="true"/> expires before a new message
      arrives in the queue. This can only happen if there was no message already
      in the queue; both methods would return immediately if a message
      exists.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalFormatName">
		<summary>
			<para>Message text: The given format name is invalid.</para>
			<para>For valid format name syntax options, see the <see cref="System.Messaging.MessageQueue"/> class's <see cref="System.Messaging.MessageQueue.FormatName"/> 
property.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.PrivilegeNotHeld">
		<summary>
			<para>Message text: Client does not have the required privileges to perform the operation.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.InsufficientResources">
		<summary>
			<para>Message text: Insufficient resources to perform operation.</para>
			<para>Message Queuing returns this error, for example, if there is not enough
      memory to complete the operation. When this error is returned, the operation
      fails.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.MessageStorageFailed">
		<summary>
			<para>Message text: Could not store a recoverable or journal message. Message was not sent.</para>
			<para>Message Queuing returns this error if the local computer cannot store a
      recoverable message (one whose delivery is guaranteed in the case of a network
      problem) or a journal message. See the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.Recoverable"/> and <see cref="System.Messaging.Message.UseJournalQueue"/> properties for more information
      about these message sending options.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.InvalidCertificate">
		<summary>
			<para>Message text: The user certificate is not valid.</para>
			<para>Message Queuing returns this error if the security certificate specified in
      the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.SenderCertificate"/> property is invalid, or if the certificate is
      not correctly placed in the Microsoft Internet Explorer personal certificate
      store.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.NoInternalUserCertificate">
		<summary>
			<para>Message text: The internal Message Queuing certificate for the user
      does not exist.</para>
			<para>Message Queuing returns this error if no internal certificate
      is registered or the registered certificate is corrupted. </para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.MissingConnectorType">
		<summary>
			<para>Message text: Connector Type is mandatory when sending an Acknowledgment or secure message.</para>
			<para>Message Queuing returns this error when the application sets a property typically set by Message Queuing, but
      doesn't specify the connector to use. For more information about connector
      types, see the <see cref="System.Messaging.Message"/> class's <see cref="System.Messaging.Message.ConnectorType"/>
      property.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.GuidNotMatching">
		<summary>
			<para>Message text: Failed to create Message Queuing configuration object with a GUID that matches the computer installation. You must uninstall Message Queuing and then reinstall it.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.QueueNotFound">
		<summary>
			<para>Message text: The queue is not registered in the directory service.</para>
			<para> Message Queuing returns this error if
      it cannot find the queue. This includes public queues not registered in the
      directory service and Internet queues that do not exist in the Message Queuing
      namespace.
      
   </para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.SharingViolation">
		<summary>
			<para>Message text: Sharing violation. The queue is already opened for
      exclusive receive.</para>
			<para>Message Queuing returns this error if an application is 
      trying to open an already opened queue that has exclusive read rights. For more information
      about receiving messages exclusively from a queue, see the <see cref="System.Messaging.MessageQueue"/>
      class's <see cref="System.Messaging.MessageQueue.DenySharedReceive"/>
      property.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.ServiceNotAvailable">
		<summary>
			<para>Message text: The Message Queues service is not available.</para>
			<para> Message Queuing returns this error if the application is unable
      to connect to the Queue Manager.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.UnsupportedFormatNameOperation">
		<summary>
			<para> Message text: The requested operation
      for the specified format name is not supported.</para>
			<para> Message Queuing returns
      this error when the requested operation is not supported for the specified
      format name. Operations include trying to open a queue to receive messages by specifying
      a direct format name.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.TransactionUsage">
		<summary>
			<para>Message text: Wrong transaction usage.</para>
			<para>Message Queuing returns this error if an attempt was made to open a remote
      queue for read access from within a transaction, or an attempt was made to read
      a message from a nontransactional queue from within a transaction.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.WriteNotAllowed">
		<summary>
			<para>Message text: Another MQIS server is being installed; write operations to the
      database are not allowed at this time.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalUser">
		<summary>
			<para>Message text: The user has an invalid user name.</para>
			<para>Message Queuing returns this error if your application is connecting to it
      through an invalid user name.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalQueuePathName">
		<summary>
			<para>Message text: Invalid queue path name.</para>
			<para>See the <see cref="System.Messaging.MessageQueue"/> class's <see cref="System.Messaging.MessageQueue.Path"/> property for valid path syntax options.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalPropertyValue">
		<summary>
			<para>Message text: Invalid property value.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode.IllegalOperation">
		<summary>
			<para>Message text: The operation is invalid on foreign message queuing systems.</para>
		</summary>
	</doc>
	<doc for="MessageQueueErrorCode">
		<summary>
			<para>Identifies the source of an error
      that occurred within the Message Queuing application and generated a
   <see cref="System.Messaging.MessageQueueException"/> exception.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Messaging.MessageQueueErrorCode"/> enumeration gives detailed information about an error condition during a
   messaging operation. </para>
			<para> The <see cref="System.Messaging.MessageQueueException"/> uses the <see cref="System.Messaging.MessageQueueException.MessageQueueErrorCode"/> property to identify the
nature of the Message Queuing error. The <see cref="System.Messaging.MessageQueueErrorCode"/> value determines a
text string to associate with the error. </para>
		</remarks>
		<example>
			<para>The following example verifies whether a Message Queuing queue exists, and 
      then deletes it.</para>
			<codelink SampleID="MessageQueue.ExistsDelete" SnippetID="1"/>
		</example>
		<seealso cref="System.Messaging.MessageQueueException"/>
		<seealso cref="System.Messaging.MessageQueue"/>
		<seealso cref="System.Messaging.MessageEnumerator"/>
		<seealso cref="System.Messaging.Message"/>
	</doc>
</docs>
