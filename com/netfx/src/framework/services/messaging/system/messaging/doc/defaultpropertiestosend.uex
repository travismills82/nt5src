<docs>
	<doc for="DefaultPropertiesToSend.DefaultPropertiesToSend1">
	</doc>
	<doc for="DefaultPropertiesToSend.AttachSenderId">
		<summary>
			<para> Gets or sets a value indicating whether the sender ID should be attached to the
       message.</para>
		</summary>
		<value>
			<para><see langword="true "/>if sender ID 
    should
    be attached to the message; otherwise, <see langword="false"/>. The default is
 <see langword="true"/>.</para>
		</value>
		<remarks>
			<para> The sender ID is an array of bytes that represents 
       the identifier of the sending user. The sender ID is set by Message Queuing and is used
       by the receiving Queue Manager to verify whether
       the sender has access rights to
       a queue. The SenderId is only trustworthy if the message was authenticated when
       it reached the destination queue.</para>
			<para> 
       When the sender ID is not attached to the message, the
       sending application is indicating that Message Queuing should not validate the
       message's sender when the message is sent to the destination queue. If the
       destination queue only accepts authenticated messages, and either <see cref="System.Messaging.DefaultPropertiesToSend.UseAuthentication"/> or <see cref="System.Messaging.DefaultPropertiesToSend.AttachSenderId"/> is <see langword="false"/>
       , the message will be rejected
       when it reaches the queue. </para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseAuthentication"/>
		<seealso cref="System.Messaging.MessageQueue.Authenticate" qualify="true"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.HashAlgorithm"/>
		<seealso cref="System.Messaging.Message.AttachSenderId" qualify="true"/>
		<seealso cref="System.Messaging.Message.SenderId" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.CachedMessage">
	</doc>
	<doc for="DefaultPropertiesToSend.Extension">
		<summary>
			<para> Gets or sets additional information associated with the message.</para>
		</summary>
		<value>
			<para> An array of bytes that
       provides
       additional, application-defined information associated with the message. The
       default is a zero-length array.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.Extension"/> property provides for 
    additional application-defined information that is associated with the message, such as a
    large binary object. It is the responsibility of the receiving application to
    interpret the contents of the <see cref="System.Messaging.DefaultPropertiesToSend.Extension"/>.</para>
			<para>Where possible, message data should be included in the 
    body of the message rather than in the extension.</para>
			<para>When working with foreign queues, use the <see cref="System.Messaging.DefaultPropertiesToSend.Extension"/> 
 property to specify non-Message Queuing message properties. </para>
			<note type="note">
    A foreign queue exists in a
    queuing system other than Microsoft Message Queuing. Microsoft Message
    Queuing communicates with such queues through a connector application.
 </note>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AppSpecific"/>
		<seealso cref="System.Messaging.Message.Extension" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.HashAlgorithm">
		<summary>
			<para> Gets or sets the hashing algorithm used when authenticating 
       messages or creating a digital signature for
       a
       message.</para>
		</summary>
		<value>
			<para>One of
       the <see cref="System.Messaging.HashAlgorithm"/>
       enumeration
       values. The default is <see langword="MD5"/>
       .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.HashAlgorithm"/> property identifies the 
    hashing algorithm Message Queuing uses when authenticating messages or when
    creating a digital signature for a message.</para>
			<para> Message Queuing 
    on the source computer uses the hashing algorithm when creating a digital
    signature for a message. The
    target Queue Manager then uses the same hashing algorithm to
    authenticate the message when it is received.</para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseAuthentication"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AttachSenderId"/>
		<seealso cref="System.Messaging.MessageQueue.Authenticate" qualify="true"/>
		<seealso cref="System.Messaging.Message.HashAlgorithm" qualify="true"/>
		<seealso cref="System.Messaging.HashAlgorithm"/>
	</doc>
	<doc for="DefaultPropertiesToSend.Label">
		<summary>
			<para>Gets or sets an application-defined string that describes the message.</para>
		</summary>
		<value>
			<para>The label of the message. The
       default is an empty string ("").</para>
		</value>
		<remarks>
			<para>A message label can be used for display purposes, for 
       example, or to selectively process messages based on the label value. The maximum
       length for a message label is 249 Unicode characters. The
       label does not need to be unique across messages.</para>
			<para>Message queue and message labels represent 
       an application-defined value that can help to identify the queue or message
       in human-readable terms. It is the responsibility of the application to interpret label contents; they have no
       intrinsic meaning to the Message Queuing application.</para>
		</remarks>
		<seealso cref="System.Messaging.Message.Label" qualify="true"/>
		<seealso cref="System.Messaging.MessageQueue.Label" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.Priority">
		<summary>
			<para>Gets or sets the message priority, used to determine where 
       the message is placed in the queue.</para>
		</summary>
		<value>
			<para>One of
       the <see cref="System.Messaging.MessagePriority"/>
       enumeration values
       that represents the priority level of a non-transactional message. The default
       is <see langword="Normal"/>
       .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.Priority"/> property affects how Message
    Queuing handles the message while it is en route, as well as where the
    message is placed in the queue when it reaches its destination. Higher priority
    messages are given preference during routing and inserted toward the front of
    the queue. Messages with the same priority are placed in the queue according to
    their arrival time.</para>
			<para>Message priority can only be set meaningfully for 
    non-transactional messages. The priority for transactional messages is
    automatically set to <see langword="Lowest"/>
    , which causes transactional message
    priority to be ignored.</para>
		</remarks>
		<seealso cref="System.Messaging.MessageQueue.BasePriority" qualify="true"/>
		<seealso cref="System.Messaging.Message.Priority" qualify="true"/>
		<seealso cref="System.Messaging.MessagePriority"/>
	</doc>
	<doc for="DefaultPropertiesToSend.Recoverable">
		<summary>
			<para> Gets or sets a value indicating whether the message is
       guaranteed to be delivered in the event
       of a computer failure or network problem.</para>
		</summary>
		<value>
			<para><see langword="true "/>if 
    the message is guaranteed delivery by saving it to disk while en
    route; <see langword="false "/>
    if delivery is not assured. The default is
 <see langword="false"/>
 .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.Recoverable"/> property indicates 
    whether delivery of a message is guaranteed, even if a computer crashes
    while the message is en route to the destination queue.</para>
			<para>If delivery of a message is guaranteed, the message is stored locally at 
    every step along the route until the message is successfully forwarded to the
    next computer. Setting <see cref="System.Messaging.DefaultPropertiesToSend.Recoverable"/> to <see langword="true"/> on <see cref="System.Messaging.DefaultPropertiesToSend"/> could
    affect the throughput. </para>
			<para>If the message is transactional, Message Queuing 
    automatically treats the message as recoverable, regardless of whether <see cref="System.Messaging.DefaultPropertiesToSend.Recoverable"/> is
    set to <see langword="true "/>
    . </para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseTracing"/>
		<seealso cref="System.Messaging.Message.Recoverable" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.ResponseQueue">
		<summary>
			<para> Gets or sets the queue that receives application-generated response
       messages.</para>
		</summary>
		<value>
			<para>The <see cref="System.Messaging.MessageQueue"/> to which application-generated response 
    messages are returned. The default is <see langword="null"/>
    .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.ResponseQueue"/> property identifies 
    the queue that receives application-generated response messages that are returned
    to the sending application by the receiving application. Response queues are
    specified by the sending application when the application sends its messages.
    Any available queue can be specified as a response queue. </para>
			<para>Messages returned to the response queue are application-specific. The 
    application must define what is in the messages as well as what is to be done
    when a message is received.</para>
		</remarks>
		<seealso cref="System.Messaging.Message.ResponseQueue" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.TransactionStatusQueue">
		<summary>
			<para> Gets the transaction status queue on the source computer. </para>
		</summary>
		<value>
			<para> The transaction status queue on the source 
       computer, used for sending acknowledgement messages back to the sending application.
       The default is <see langword="null"/>
       .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue"/> property identifies the 
    transaction status queue
    on the source computer. The property is set
    by Message Queuing, and is used by connector applications when retrieving
    transactional messages sent to a foreign queue.</para>
			<note type="note">
    A foreign queue exists in a queuing
    system other than Microsoft Message Queuing. Microsoft Message
    Queuing communicates with such queues through a connector application.
 </note>
			<para>The connector application can use the 
    transaction status queue to send acknowledgment
    messages back to the sending application. The
    transaction status queue should receive these acknowledgments even
    if the sending application does not request other acknowledgments. </para>
		</remarks>
		<seealso cref="System.Messaging.MessageQueue.Transactional"/>
		<seealso cref="System.Messaging.AcknowledgeTypes"/>
		<seealso cref="System.Messaging.Message.TransactionStatusQueue" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.UseEncryption">
		<summary>
			<para> Gets or sets a value indicating whether to make the message private.</para>
		</summary>
		<value>
			<para><see langword="true"/> to require Message 
    Queuing to encrypt the message; otherwise, <see langword="false"/>. The default is
 <see langword="false"/>. </para>
		</value>
		<remarks>
			<para>If a message is private, its body is encrypted before it is sent and is decrypted 
       when it is received. To send a private message, the sending application
       must specify that encryption be used and, optionally, which encryption algorithm
       to apply. </para>
			<note type="note">
       When sending
       private messages, it is not necessary that your application perform
       the message encryption. Message Queuing can encrypt the message body
       for you when your application sends messages within a Microsoft Windows
       2000 enterprise where there is access to the directory service. When receiving
       private messages, it is always the receiving Queue Manager that decrypts the
       message body.
    </note>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm"/>
		<seealso cref="System.Messaging.MessageQueue.EncryptionRequired"/>
		<seealso cref="System.Messaging.Message.UseEncryption" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.UseTracing">
		<summary>
			<para> Gets or sets a value indicating whether to trace a message as it moves toward
       its destination queue.</para>
		</summary>
		<value>
			<para><see langword="true"/> if each 
    intermediate step made by the original message en route to the destination queue will generate
    a report to be sent to the system's report queue; otherwise,
 <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.UseTracing"/> property specifies whether to track 
    the route of a message as it moves toward its destination queue. If
 <see langword="true"/>, a Message Queuing-generated report message is sent to a report queue each time the 
    message passes through a Message Queuing routing server. The report queue is specified by
    the source Queue Manager. Report queues are not limited to Message Queuing-generated
    report messages. Your application-generated messages can be
    sent to report queues as well.</para>
			<note type="note">
    Using tracing involves setting up
    Active Directory and specifying a report queue for the Message Queuing
    enterprise. These settings are configured by the administrator.
 </note>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue"/>
		<seealso cref="System.Messaging.Message.UseTracing" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.ShouldSerializeTimeToBeReceived">
	</doc>
	<doc for="DefaultPropertiesToSend.ShouldSerializeTimeToReachQueue">
	</doc>
	<doc for="DefaultPropertiesToSend.ShouldSerializeExtension">
	</doc>
	<doc for="DefaultPropertiesToSend.AdministrationQueue">
		<summary>
			<para> Gets or
      sets the queue that receives acknowledgement messages generated by Message
      Queuing.</para>
		</summary>
		<value>
			<para>The <see cref="System.Messaging.MessageQueue"/> that specifies the administration queue used
   for system-generated acknowledgment messages. The default is
<see langword="null"/>
.</para>
		</value>
		<remarks>
			<para>The queue specified in the <see cref="System.Messaging.DefaultPropertiesToSend.AdministrationQueue"/> property can be any non-transactional queue.
   The acknowledgment messages sent to the administration queue can indicate
   whether or not the original message reached its destination queue, and whether
   or not it was removed from the queue.</para>
			<para>When the <see cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/> property has any value other
than <see langword="None"/>, the sending application must specify the queue to be
used as the administration queue.</para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/>
		<seealso cref="System.Messaging.Message.AdministrationQueue" qualify="true"/>
	</doc><doc for="DefaultPropertiesToSend.TimeToReachQueue">
		<summary>
			<para> Gets or sets the time limit for the message to
      reach the queue.</para>
		</summary>
		<value>
			<para>The time limit in seconds for a message to reach the destination queue, from the time the message is
      sent. The default is <see cref="System.Messaging.Message.InfiniteTimeout"/>
      .</para>
		</value>
		<remarks>
			<para>If the <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/> interval expires
   before the message reaches its destination, the Message Queuing application
   discards the message. The message is either sent to the dead-letter queue, if
   the message's <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> property is set to
<see langword="true"/> , or ignored, if <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> is
<see langword="false"/> . If <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/> is greater than <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/>, <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> takes precedence.</para>
			<para>The message's <see cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/>
property can be set to request that Message Queuing send a negative
acknowledgment message back
to the sending application if the message does not arrive before the timer expires.</para>
			<para> If <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/> is 0 seconds, Message Queuing tries
once to send the message to its destination if the queue is waiting for
the message. If the queue is local, the message always reaches the queue.</para>
			<para>When several messages are sent in a transaction, Message Queuing uses the
   value of the first message's <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/>
   property.</para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/>
		<seealso cref="System.Messaging.Message.InfiniteTimeout"/>
		<seealso cref="System.Messaging.Message.TimeToReachQueue" qualify="true"/>
	</doc><doc for="DefaultPropertiesToSend.UseAuthentication">
		<summary>
			<para> Gets or sets a value indicating whether the message must be authenticated before being sent.</para>
		</summary>
		<value>
			<para><see langword="true "/> if the
   sending application requested authentication for the message; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.UseAuthentication"/> property specifies whether the message needs
   to be authenticated. If the sending application requests authentication, Message
   Queuing creates a digital signature and uses it to sign the message when it
   is sent and
   to authenticate the message when it is received.</para>
			<para>If a message is sent to a queue that only accepts authenticated messages, the
   message will be rejected when it reaches the queue if <see cref="System.Messaging.DefaultPropertiesToSend.UseAuthentication"/> is set to <see langword="false"/>.</para>
			<note type="note">
   It is not possible to look
   at the properties of a message and determine whether a message failed
   authentication. Messages that fail authentication are discarded and are not delivered
   to the queue.
   
</note>
		</remarks>
		<seealso cref="System.Messaging.MessageQueue.Authenticate"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AttachSenderId"/>
		<seealso cref="System.Messaging.Message.UseAuthentication" qualify="true"/>
	</doc><doc for="DefaultPropertiesToSend.AppSpecific">
		<summary>
			<para>Gets or sets additional, application-specific information.</para>
		</summary>
		<value>
			<para> Information specific to the application. The default is 0.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.AppSpecific"/> property contains
 additional, application-specific information that can be used to organize
 different types of messages, for
 example using application-specific indexes. It is the responsibility of the
 application to interpret <see cref="System.Messaging.DefaultPropertiesToSend.AppSpecific"/>
 information.</para>
			<para>Where possible, message data should be included in the
 body of the message rather than in the <see cref="System.Messaging.DefaultPropertiesToSend.AppSpecific"/>
 property.</para>
			<note type="note">
 When working with foreign queues, use the
<see cref="System.Messaging.DefaultPropertiesToSend.Extension"/> property to specify non-Message Queuing
 message properties. As with <see cref="System.Messaging.DefaultPropertiesToSend.AppSpecific"/>, it is the responsibility of the application
 to understand the content of the <see cref="System.Messaging.DefaultPropertiesToSend.Extension"/>
 property.
 
</note>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.Extension"/>
		<seealso cref="System.Messaging.Message.AppSpecific" qualify="true"/>
	</doc><doc for="DefaultPropertiesToSend.TimeToBeReceived">
		<summary>
			<para> Gets or sets the time limit for the message to be
 retrieved from
 the destination queue.</para>
		</summary>
		<value>
			<para>The total time in seconds for a sent message to be
 received from the destination queue. The default is <see cref="System.Messaging.Message.InfiniteTimeout"/>
 .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> property specifies the
 total time in seconds for a sent message to be received from the destination
 queue. This time limit includes the time spent getting to the destination queue,
 plus the time spent waiting in the queue before the message is retrieved by an
 application.</para>
			<note type="caution">
 
 When
 using dependent client computers, synchronize
 the clock on the client computer with the clock on the server running Message Queuing. If
 the two clocks are not synchronized, you might see unpredictable behavior when
 sending messages when <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> is not <see cref="System.Messaging.Message.InfiniteTimeout"/>
 .
 
</note>
			<para>If the <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> interval expires
before the
message is removed
from the queue, the Message Queuing application discards the message. The message is
either sent to the dead-letter queue, if the message's <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> property
is set to <see langword="true"/> , or ignored, if <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> is <see langword="false"/> . If <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> is less than <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/>, <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> takes precedence.</para>
			<para>The message's <see cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/> property can be set to
request that Message Queuing send a negative acknowledgment message back to the
sending application if the message is not retrieved before the timer
expires.</para>
			<note type="caution">
 If you have specified to
 receive <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/> negative acknowledgments,
 you will not receive them when <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> is less than <see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/>.
 
</note>
			<para>When several messages are sent in a transaction, Message Queuing uses the value of the
 first message's <see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/> property.</para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/>
		<seealso cref="System.Messaging.Message.InfiniteTimeout"/>
		<seealso cref="System.Messaging.Message.TimeToBeReceived" qualify="true"/>
	</doc><doc for="DefaultPropertiesToSend">
		<summary>
			<para>Specifies the default property values that will be used
      when sending objects other than <see cref="System.Messaging.Message"/>
      instances to a message queue.</para>
		</summary>
		<remarks>
			<para>You can set default values on selected properties for messages sent to a
   <see cref="System.Messaging.MessageQueue"/>. <see cref="System.Messaging.DefaultPropertiesToSend"/> is used to specify
      default property values of the message being sent when objects other than
   <see cref="System.Messaging.Message"/>
   instances are sent to a queue, for example the string argument passed
   into the <see cref="System.Messaging.MessageQueue.Send"/> method in the code fragment, <c>myMessageQueue.Send("hello")</c>. The <see cref="System.Messaging.Message"/> class
has corresponding, identically named properties to those in <see cref="System.Messaging.DefaultPropertiesToSend"/>
that provide the values when sending a <see cref="System.Messaging.Message"/>
instance specifically. Even if you have specified <see cref="System.Messaging.MessageQueue.DefaultPropertiesToSend" qualify="true"/> for a queue, sending a <see cref="System.Messaging.Message"/>
object to that queue will cause the values for the identically-named <see cref="System.Messaging.Message"/>
properties to override the queue's <see cref="System.Messaging.MessageQueue.DefaultPropertiesToSend"/> values. </para>
			<para>Properties that you do not set explicitly default to the values specified by
   the constructor, <see cref="M:System.Messaging.DefaultPropertiesToSend.#ctor"/>.</para>
			<para>For a list of initial property values for an instance of <see cref="System.Messaging.DefaultPropertiesToSend"/>, see the <see cref="System.Messaging.DefaultPropertiesToSend"/>
constructor.</para>
		</remarks>
		<example>
			<para>The following example uses the priority of a message to 
      determine default properties to send for the message.</para>
			<codelink SampleID="MessageQueue.DefaultPropertiesToSend" SnippetID="1"/>
		</example>
		<seealso cref="System.Messaging.Message"/>
		<seealso cref="System.Messaging.MessageQueue.DefaultPropertiesToSend" qualify="true"/>
	</doc><doc for="DefaultPropertiesToSend.DefaultPropertiesToSend">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Messaging.DefaultPropertiesToSend"/>
class.</para>
		</summary>
		<remarks>
			<para>You can create a new instance of <see cref="System.Messaging.DefaultPropertiesToSend"/> to define default property values to
   associate with objects sent to a queue which are not of type <see cref="System.Messaging.Message"/>. When working with
<see cref="System.Messaging.MessageQueue"/> objects, a <see cref="System.Messaging.DefaultPropertiesToSend"/> instance is created for you and associated
   with the <see cref="System.Messaging.MessageQueue.DefaultPropertiesToSend" qualify="true"/> member of the <see cref="System.Messaging.MessageQueue"/>. </para>
			<para>There are two ways to define a queue's default properties to send, as shown in the following C# code.
   You can set values for this instance of <see cref="System.Messaging.DefaultPropertiesToSend"/> and associate it with the queue's <see cref="System.Messaging.MessageQueue.DefaultPropertiesToSend" qualify="true"/> property: </para>
			<code>
DefaultPropertiesToSend myDefaultProperties = new DefaultPropertiesToSend();
 // Set default values for the properties.
 myDefaultProperties.Label = "myLabel";
 myDefaultProperties.Recoverable = false;
 ...
 myMessageQueue.DefaultPropertiesToSend = myDefaultProperties;
 myMessageQueue.Send("hello");
</code>
			<para>Or, you can individually assign values to the <see cref="System.Messaging.MessageQueue"/>
instance's <see cref="System.Messaging.MessageQueue.DefaultPropertiesToSend"/> property directly:</para>
			<code>
myMessageQueue.DefaultPropertiesToSend.Label = "myLabel";
 myMessageQueue.DefaultPropertiesToSend.Recoverable = false;
 ...
 myMessageQueue.Send("hello");
</code>
			<para>If you choose the second of these options, you do not need to call the
<see cref="M:System.Messaging.DefaultPropertiesToSend.#ctor"/> constructor explicitly. You might want to
   create instances of <see cref="System.Messaging.DefaultPropertiesToSend"/>, for example, if the
   properties' default values depend on some criterion of the message being sent.
   You can create multiple <see cref="System.Messaging.DefaultPropertiesToSend"/> instances and assign one to
   the queue's <see cref="System.Messaging.MessageQueue.DefaultPropertiesToSend" qualify="true"/> property before sending the
   message to the queue.</para>
			<para>The following table shows initial property values for an
   instance of <see cref="System.Messaging.DefaultPropertiesToSend"/>
   .</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Initial Value</description>
				</listheader>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/></term>
					<description><see langword="AcknowledgeTypes.None"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.AdministrationQueue"/></term>
					<description><see langword="null"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.AppSpecific"/></term>
					<description>0</description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.AttachSenderId"/></term>
					<description><see langword="true"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm"/></term>
					<description><see langword="EncryptionAlgorithm.RC2"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.Extension"/></term>
					<description>A
   zero-length array of bytes</description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.HashAlgorithm"/></term>
					<description><see langword="HashAlgorithm.MD5"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.Label"/></term>
					<description>An
   empty
   string ("")</description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.Priority"/></term>
					<description><see langword="MessagePriority.Normal"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.Recoverable"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.ResponseQueue"/></term>
					<description><see langword="null "/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.TimeToBeReceived"/></term>
					<description><see langword="Message.InfiniteTimeout"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.TimeToReachQueue"/></term>
					<description><see langword="Message.InfiniteTimeout"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.TransactionStatusQueue"/></term>
					<description><see langword="null"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.UseAuthentication"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.UseEncryption"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue"/></term>
					<description><see langword="false"/></description>
				</item>
				<item>
					<term><see cref="System.Messaging.DefaultPropertiesToSend.UseTracing"/></term>
					<description><see langword="false"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Messaging.AcknowledgeTypes"/>
		<seealso cref="System.Messaging.EncryptionAlgorithm"/>
		<seealso cref="System.Messaging.HashAlgorithm"/>
		<seealso cref="System.Messaging.MessagePriority"/>
		<seealso cref="System.Messaging.Message.InfiniteTimeout"/>
		<seealso cref="System.Messaging.MessageQueue.DefaultPropertiesToSend"/>
		<seealso cref="System.Messaging.Message"/>
	</doc>
	<doc for="DefaultPropertiesToSend.AcknowledgeTypes">
		<summary>
			<para> Gets or sets the type of acknowledgement message to be returned to the sending
      application.</para>
		</summary>
		<value>
			<para>One of
      the <see cref="System.Messaging.AcknowledgeTypes"/>
      enumeration values. This value is used to determine the type of acknowledgment
      messages the system posts in the administration queue and when
      acknowledgments are returned to the sending application. The default is
      <see langword="AcknowledgeTypes.None"/>
   .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/>
property specifies the type of acknowledgment messages to
return to the sending application. Set the <see cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/> property to request,
for example, notification when a message reaches its destination, when it is retrieved, or whether a time-out has prevented the message from reaching
or being retrieved from the destination queue.</para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AdministrationQueue"/>
		<seealso cref="System.Messaging.Message.AcknowledgeType" qualify="true"/>
		<seealso cref="System.Messaging.AcknowledgeTypes"/>
	</doc>
	<doc for="DefaultPropertiesToSend.EncryptionAlgorithm">
		<summary>
			<para> Gets or sets the encryption algorithm used to encrypt the body of a
      private message.</para>
		</summary>
		<value>
			<para>One of
      the <see cref="System.Messaging.EncryptionAlgorithm"/>
      enumeration values. The default is
      <see langword="RC2"/>
   .</para>
		</value>
		<remarks>
			<para>If a message is private, it is encrypted before it is sent
      and is decrypted when it is received. The <see cref="System.Messaging.DefaultPropertiesToSend.EncryptionAlgorithm"/>
      property specifies the algorithm used to encrypt the message body of a private
      message.</para>
			<para>A queue can require that incoming messages be encrypted. If a nonencrypted
      (non-private) message is sent to a queue that only accepts private messages, or
      if a private message is sent to a queue that only accepts non-private messages,
      the message is rejected by the queue. The sending application can request a
      negative acknowledgment message be returned to the sending application if a
      message was rejected. </para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseEncryption"/>
		<seealso cref="System.Messaging.MessageQueue.EncryptionRequired" qualify="true"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.AcknowledgeType"/>
		<seealso cref="System.Messaging.Message.EncryptionAlgorithm" qualify="true"/>
		<seealso cref="System.Messaging.EncryptionAlgorithm"/>
	</doc>
	<doc for="DefaultPropertiesToSend.UseDeadLetterQueue">
		<summary>
			<para> Gets or sets a value indicating whether a copy of the message that could not
      be delivered should be sent to a dead-letter queue.</para>
		</summary>
		<value>
			<para><see langword="true"/> if message delivery failure should result in a copy of
   the message being sent to a dead-letter queue; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para><see cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue"/> and <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> specify how Message
   Queuing will track a message. If <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> is <see langword="true"/>, then in case of delivery failure (for non-transactional
   messages), the message is sent to the non-transactional
   dead-letter queue on the computer that could not deliver the message (for
   example, if a message timer expires).</para>
			<para> In the case of delivery failure for transactional messages, the message
   is sent to the transactional dead-letter queue on the source computer in all
   negative and in-doubt cases.</para>
			<para>When you store messages in a dead-letter queue, empty
   the queue periodically to remove messages that are no longer needed.
   Messages stored in dead-letter queues count against the size quota for the
   computer where the queue resides. The computer quota is set by the
   administrator and refers to the total size allocated for storing messages on a
   computer, not just in a single queue.</para>
			<note type="note">
   You do not create a journal or
   dead-letter queue. These are both system queues that are generated by
   Message Queuing.
   
</note>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseTracing"/>
		<seealso cref="System.Messaging.Message.UseDeadLetterQueue" qualify="true"/>
	</doc>
	<doc for="DefaultPropertiesToSend.UseJournalQueue">
		<summary>
			<para> Gets or sets a value indicating whether a copy of the message should be kept
      in a machine journal on the originating computer.</para>
		</summary>
		<value>
			<para><see langword="true "/> to require that a copy of a message be kept
   in the originating computer's machine journal after it has been successfully
   transmitted from the originating computer to the next step; otherwise,
<see langword="false"/>. The default is <see langword="false"/>. </para>
		</value>
		<remarks>
			<para><see cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue"/> and <see cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/> specify how Message Queuing will track a
   message. If <see cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue"/> is
<see langword="true"/> , then at each
   step that a message is transmitted, a copy is kept in the computer journal
   on the originating computer.</para>
			<note type="note">
   The sent message will only be
   copied to the journal queue if the destination queue is on a remote
   computer. If the destination is on the local computer, the
   message is sent directly to the queue; there are no intermiediate
   steps to require journaling.
   
</note>
			<para>When you store messages in a journal queue, empty the queue periodically to
   remove messages that are no longer needed. Messages stored in journal queues
   count against the quota for the computer where the queue resides (the computer
   quota is set by the administrator).</para>
			<note type="note">
   You do not create a journal or
   dead-letter queue. These are both system queues that are generated by
   Message Queuing.
   
</note>
			<para>Journaling can be specified by both the message and the queue. When <see cref="System.Messaging.DefaultPropertiesToSend.UseJournalQueue" qualify="true"/> is <see langword="true"/>, the message is
journaled when it is sent. When <see cref="System.Messaging.MessageQueue.UseJournalQueue" qualify="true"/> is <see langword="true"/>, the message is
journaled when it is received.</para>
		</remarks>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseDeadLetterQueue"/>
		<seealso cref="System.Messaging.DefaultPropertiesToSend.UseTracing"/>
		<seealso cref="System.Messaging.MessageQueue.UseJournalQueue" qualify="true"/>
		<seealso cref="System.Messaging.MessageQueue.MaximumJournalSize"/>
		<seealso cref="System.Messaging.Message.UseJournalQueue" qualify="true"/>
	</doc>
</docs>
