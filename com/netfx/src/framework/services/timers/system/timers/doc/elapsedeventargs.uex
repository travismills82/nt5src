<docs>
	<doc for="ElapsedEventArgs.SignalTime">
		<summary>
			<para>Gets the time the <see cref="System.Timers.Timer.Elapsed"/> event was raised.</para>
		</summary>
		<value>
			<para>The time the <see cref="System.Timers.Timer.Elapsed"/> event was raised.</para>
		</value>
		<remarks>
			<para> The event-handling method might be called even after
      the <see cref="System.Timers.Timer.Stop"/> method is called. The <see cref="System.Timers.Timer"/>
      component is multithreaded to ensure more accuracy. However, this means that the call
      to the event-handling method might run on one thread at the same time
      that a call to the <see cref="System.Timers.Timer.Stop"/> method runs on another thread. This might result
      in the <see cref="System.Timers.Timer.Elapsed"/> event being raised even after the <see cref="System.Timers.Timer.Stop"/> method
      is called. To prevent this, use the <see cref="System.Timers.ElapsedEventArgs.SignalTime"/> property to compare the time the event is raised
      to the time the <see cref="System.Timers.Timer.Stop"/> method is called. If the event is raised
      after the <see cref="System.Timers.Timer.Stop"/> method is called, do not process the
      event. </para>
		</remarks>
	</doc>
	<doc for="ElapsedEventArgs">
		<summary>
			<para>Provides data for the <see cref="System.Timers.Timer.Elapsed"/> event.</para>
		</summary>
		<example>
			<codelink SampleID="Classic Timer Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
