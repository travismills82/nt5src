<docs>
	<doc for="WebServiceAttribute.DefaultNamespace"><nodoc/>
		<summary>
			<para>The default value for the <see cref="System.Web.Services.WebServiceAttribute.Namespace"/> property. This
   field is constant.</para>
		</summary>
	</doc><doc for="WebServiceAttribute.Description">
		<summary>
			<para> A descriptive message for the XML Web service.</para>
		</summary>
		<value>
			<para>The text describing the functionality of the XML Web service.</para>
		</value>
		<remarks>
			<para> The descriptive message is displayed
      to prospective consumers of the XML Web service when description
      documents for the XML Web service are generated, such as the Service Description and the
      Service help page.</para>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Web.Services.WebServiceAttribute.Description"/> property to "<c>Common Server
   Variables</c>".</para>
			<codelink SampleID="Classic WebServiceAttribute Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.Services.WebMethodAttribute"/>
	</doc><doc for="WebServiceAttribute.Name">
		<summary>
			<para>Gets or sets the name of the XML Web service.</para>
		</summary>
		<value>
			<para>The name for the XML Web service. Default value is the name of the class
      implementing the XML Web service.</para>
		</value>
		<remarks>
			<para>The Service Description is generated when a user navigates to the URL for the
      XML Web service and supplies a query string of ?WSDL. Within the Service
      Description, the <see cref="System.Web.Services.WebServiceAttribute.Name"/> property identifies the
      local part of the XML qualified name for the XML Web service. The
      <see langword="Name"/> property is also used to display the name of the XML Web
      service on the Service help page. The Service help page is displayed when a
      prospective consumer navigates to the .asmx page for the XML Web service without
      specifying an XML Web service method name and its parameters. </para>
			<para>An XML qualified name is used to disambiguate elements
      with the same name with an XML document. An XML qualified name consists of the
      following two parts separated by a colon: namespace or a prefix associated with
      a namespace and local part. The namespace consists of a URI reference and for
      the purposes of the Service Description, is the value of the <see cref="System.Web.Services.WebServiceAttribute.Namespace"/> property. In general, a
      prefix, which acts like an alias to an URI, is associated with the namespace, so
      that all subsequent XML qualified names using the namespace can use the
      shortened prefix. The local part is a string beginning with a letter or
      underscore containing no spaces. Therefore, the XML qualified name identifying a
      XML Web service in the Service Description is in the following format:</para>
			<para>
				<see cref="System.Web.Services.WebServiceAttribute.Namespace"/> : <see cref="System.Web.Services.WebServiceAttribute.Name"/></para>
			<para>For more information on XML qualified names, see
   http://www.w3.org/TR/REC-xml-names/.</para>
		</remarks>
		<example>
			<para> The following example sets <see cref="System.Web.Services.WebServiceAttribute.Name"/>of the XML Web service to <c>
   MyName</c>.</para>
			<codelink SampleID="Classic WebServiceAttribute.Name Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.Services.WebServiceAttribute.Namespace"/>
	</doc><doc for="WebServiceAttribute">
		<summary>
			<para> Used to add additional information to an XML Web service, such as a
      string describing its functionality.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.Services.WebServiceAttribute"/> is not required for an XML Web
   service to be published and executed. You can use the
<see langword="WebServiceAttribute"/> to specify a name for the XML
   Web service that is not restricted by the rules for a common language runtime
   identifier, which is used in the service description and the Service help page for the XML Web
   service. </para>
			<para>An XML Web service should change its default XML namespace before the
   it is made public. Each XML Web service needs a unique XML namespace to
   identify it so that client applications can distinguish it from other services
   on the Web. http://tempuri.org/ is available for XML Web services that are under
   development, but published XML Web services should use a more permanent namespace. </para>
			<para>Your XML Web service should be identified by a XML namespace that you control. For example, you
   could use your company's Internet domain name as part of the XML namespace. Although
   many XML Web service XML namespaces look like URLs, they need not point
   to an actual resource on the Web. (XML Web service XML namespaces are URIs.) For XML
   Web services created using ASP.NET, the default XML namespace can be changed
   using <see cref="System.Web.Services.WebServiceAttribute.Namespace"/> property. </para>
For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.
</remarks>
		<example>
			<para>The following example sets the <see cref="System.Web.Services.WebServiceAttribute.Description"/> property of the <see cref="System.Web.Services.WebServiceAttribute"/> to
   "<c>Common Server Variables</c>" and sets the XML namespace to http://www.microsoft.com/ .</para>
			<codelink SampleID="Classic WebServiceAttribute Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.Services.WebService"/>
		<seealso cref="System.Web.Services.WebMethodAttribute"/>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentServiceAttribute"/>
		<seealso cref="System.Web.Services.Protocols.SoapRpcMethodAttribute"/>
		<seealso cref="System.Web.Services.Protocols.SoapRpcServiceAttribute"/>
	</doc><doc for="WebServiceAttribute.Namespace">
		<summary>
			<para>Gets or sets the default XML namespace to use for the XML Web service.</para>
		</summary>
		<value>
			<para>The default XML namespace to use for the XML Web service. The default is
      specified in the <see cref="System.Web.Services.WebServiceAttribute.DefaultNamespace"/> property.</para>
		</value>
		<remarks>
			<para>XML namespaces
      offer a way to create names in an XML document that are identified by a
      Uniform Resource Identifier (URI). By using XML namespaces you can
      uniquely identify elements or attributes in a XML
      document. The service description for a XML Web
      service is defined in XML, specifically in Web Services Description Language
      (WSDL).</para>
			<para>Within the Service Description for an XML Web service,
   <see cref="System.Web.Services.WebServiceAttribute.Namespace"/>
   is used as the default namespace
   for XML elements directly pertaining to the XML Web service. For example, the
   name of the XML Web service and its XML Web service methods pertain to the namespace
   specified in the <see langword="Namespace"/> property.
   Elements that are specific to WSDL pertain to the http://schemas.xmlsoap.org/wsdl/
   namespace. </para>
			<para> For XML Web service clients using SOAP to call an XML Web service, you can optionally add the <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/> or
<see cref="System.Web.Services.Protocols.SoapRpcMethodAttribute"/>
to call an XML Web service method. If the client is calling an
XML Web service created using ASP.NET, the <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace"/>, <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace"/> and <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action"/> properties are all derived from the
<see cref="System.Web.Services.WebServiceAttribute.Namespace"/> property by default. For instance,
given an XML Web service method name of <c>Time</c> and a <see langword="Namespace"/>
property of <c>http://www.contoso.com/</c>, the
<see langword="Action"/> property is <c>http://www.contoso.com/Time</c> by default. To change 
the default settings for <see langword="RequestNamespace"/>,
<see langword="ResponseNamespace"/>, and <see langword="Action"/> for an XML Web service method, you can 
add a <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/> to the XML
Web service method. </para>
			<note type="note">
   An
   XML namespace is different from the namespace
   the class resides in, in terms of the Microsoft .NET Framework SDK. To specify
   the namespace for the class, see <see topic="vclrfcsharpspec_9"/> if you writing
   in C#.
   
</note>
		</remarks>
		<example>
			<para>The following example sets <see cref="System.Web.Services.WebServiceAttribute.Namespace"/> to <c>http://www.contoso.com</c> and overrides that namespace for
the <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action"/> property by adding a <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/>
to the
<c>Time</c> XML Web service method. </para>
			<codelink SampleID="Classic WebServiceAttribute.Namespace Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.Services.WebServiceAttribute.DefaultNamespace"/>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace"/>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace"/>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action"/>
		<seealso cref="System.Web.Services.Protocols.SoapRpcMethodAttribute"/>
	</doc><doc for="WebServiceAttribute.WebServiceAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.WebServiceAttribute"/> class.</para>
		</summary>
		<example>
			<codelink SampleID="WebServiceAttributeConstructor" SnippetID="1"/>
		</example>
	</doc>
</docs>
