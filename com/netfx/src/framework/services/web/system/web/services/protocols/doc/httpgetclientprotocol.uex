<docs>
	<doc for="HttpGetClientProtocol.GetWebRequest">
		<summary>
			<para>Creates a <see cref="System.Net.WebRequest"/> instance for the specified URI.</para>
		</summary>
		<param name="uri">The <see cref="System.Uri"/> to use when creating the<see cref="System.Net.WebRequest"/>.</param>
		<returns>
			<para>The<see cref="System.Net.WebRequest"/> instance.</para>
		</returns>
		<exception cref="System.InvalidOperationException">The <paramref name="uri"/> parameter is null or has a length of zero.</exception>
		<remarks>
			<para>This method overrides the base version of <see cref="System.Web.Services.Protocols.WebClientProtocol.GetWebRequest"/> to specify that
   the HTTP request
   to the XML Web service is made using HTTP-GET. By overriding this
   method, additional customizations can be made to the <see cref="System.Net.WebRequest"/> object before the XML Web service request is made. For
   example you could add a custom header to the request. </para>
		</remarks>
		<seealso cref="System.Net.WebRequest"/>
		<seealso cref="System.Web.Services.Protocols.WebClientProtocol"/>
		<seealso cref="System.Uri"/>
	</doc><doc for="HttpGetClientProtocol">
		<summary>
			<para>The base class for XML Web service client
      proxies that use the HTTP-GET protocol.</para>
		</summary>
		<remarks>
			<para>When an XML Web service client uses the
      HTTP-GET protocol, parameters are encoded within the URL and the response
      is returned in plain XML.</para>
			<para> If you are building an XML Web service client using ASP.NET, then a proxy
      class deriving indirectly or directly from <see cref="System.Web.Services.Protocols.WebClientProtocol"/> needs
      to be created for the XML Web
      service you want to call. When the XML Web service client calls the XML Web service using
      HTTP, derive the proxy class from <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>,
      which in
      turn derives from <see cref="System.Web.Services.Protocols.WebClientProtocol"/>.</para>
			<para><see cref="System.Web.Services.Protocols.HttpGetClientProtocol"/>and
<see cref="System.Web.Services.Protocols.HttpPostClientProtocol"/>derive from
<see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>, providing the support for calling
   an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively. Clients
   calling an XML Web service using SOAP should derive from
<see cref="System.Web.Services.Protocols.SoapHttpClientProtocol"/>. </para>
			<para>For details on building a proxy class, see <see topic="cpconcreatingwebserviceproxy"/>. </para>
		</remarks>
		<example>
			<para> The following example is a proxy class
      generated by Wsdl.exe for the <c>Math</c> XML Web
   service below. The proxy class derives from <see cref="System.Web.Services.Protocols.HttpGetClientProtocol"/>, which derives from the abstract
<see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>class.</para>
			<codelink SampleID="Classic HttpGetClientProtocol Example" SnippetID="1"/>
			<para>The following example is the <c>Math</c> XML Web service, from which the
above proxy class was created.</para>
			<codelink SampleID="Classic HttpGetClientProtocol Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>
		<seealso cref="System.Web.Services.Protocols.WebClientProtocol"/>
		<seealso cref="System.Web.Services.Protocols.HttpPostClientProtocol"/>
		<seealso cref="System.Web.Services.Protocols.SoapHttpClientProtocol"/>
	</doc>
	<doc for="HttpGetClientProtocol.HttpGetClientProtocol">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.HttpGetClientProtocol"/> class.</para>
		</summary>
		<example>
			<codelink SampleID="HttpGetClientProtocol_Constructor" SnippetID="1"/>
		</example>
	</doc>
</docs>
