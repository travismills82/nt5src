<docs>
	<doc for="HttpPostClientProtocol">
		<summary>
			<para> The base class for XML Web service client
      proxies that use the HTTP-POST protocol.</para>
		</summary>
		<remarks>
			<para>When an XML Web service client uses the HTTP-POST
      protocol, by default parameters are encoded within the HTTP body using URL
      encoding rules and uses plain XML for the response. This protocol uses
      classes that derive from <see cref="System.Web.Services.Protocols.MimeFormatter"/> to encode parameters and
      return values into standard MIME formats. The encoders to use are specified
      in the service description.</para>
			<para> If you are building an XML Web service client using ASP.NET, then a proxy
      class deriving indirectly or directly from <see cref="System.Web.Services.Protocols.WebClientProtocol"/> needs to be created for
      the XML Web service you want to call. When the XML Web service client is calling using
      HTTP, derive the proxy class <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>,
      which in
      turn derives from <see cref="System.Web.Services.Protocols.WebClientProtocol"/>.</para>
			<para><see cref="System.Web.Services.Protocols.HttpGetClientProtocol"/>and
<see cref="System.Web.Services.Protocols.HttpPostClientProtocol"/>derive from
<see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>, providing the support for
   calling an XML Web service method using HTTP-GET and HTTP-POST respectively. Clients
   calling an XML Web service using SOAP should derive from
<see cref="System.Web.Services.Protocols.SoapHttpClientProtocol"/>. </para>
For details on building a proxy class, see
<see topic="cpconcreatingwebserviceproxy"/>.
</remarks>
		<example>
			<para>The following example is a proxy class generated by the
      Wsdl.exe utility for the <c>Math</c> XML Web
   service below. The proxy class derives from <see cref="System.Web.Services.Protocols.HttpPostClientProtocol"/>, which derives from the abstract
<see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/> class.</para>
			<codelink SampleID="Classic HttpPostClientProtocol Example" SnippetID="1"/>
			<para>The following example is the <c>Math</c> XML Web service, from which
the previous proxy class was created.</para>
			<codelink SampleID="Classic HttpPostClientProtocol Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.Services.Protocols.HttpGetClientProtocol"/>
		<seealso cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>
		<seealso cref="System.Web.Services.Protocols.WebClientProtocol"/>
		<seealso cref="System.Web.Services.Protocols.SoapHttpClientProtocol"/>
	</doc>
	<doc for="HttpPostClientProtocol.GetWebRequest">
		<summary>
			<para>Creates a <see cref="System.Net.WebRequest"/> instance for the specified URI.</para>
		</summary>
		<param name="uri">The <see cref="System.Uri"/> to use when creating the <see cref="System.Net.WebRequest"/>.</param>
		<returns>
			<para>The <see cref="System.Net.WebRequest"/> instance. </para>
		</returns>
		<exception cref="System.InvalidOperationException">The <paramref name="uri"/> parameter is null or has a length of zero.</exception>
		<remarks>
			<para>This method overrides the base version of <see cref="System.Web.Services.Protocols.WebClientProtocol.GetWebRequest"/> to specify that the
   HTTP request to the XML Web
   service is made using HTTP-POST. By overriding this
   method, you can customize the <see cref="System.Net.WebRequest"/> object
   before the XML Web service request is made. For example, you can add a custom
   header to the request. </para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.WebClientProtocol.GetWebRequest"/>
		<seealso cref="System.Net.WebRequest"/>
		<seealso cref="System.Uri"/>
	</doc>
	<doc for="HttpPostClientProtocol.HttpPostClientProtocol">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.HttpPostClientProtocol"/> class.</para>
		</summary>
		<example>
			<codelink SampleID="HttpPostClientProtocol_Constructor" SnippetID="1"/>
		</example>
	</doc>
</docs>
