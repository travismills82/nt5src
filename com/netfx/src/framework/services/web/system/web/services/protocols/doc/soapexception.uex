<docs>
	<doc for="SoapException.DetailElementName">
		<summary>
			<para>Gets an <see cref="System.Xml.XmlQualifiedName"/> representing the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> element of a SOAP Fault code.</para>
		</summary>
		<remarks>
			<para>In building an <see cref="System.Xml.XmlNode"/> for the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property, the
<see cref="System.Xml.XmlQualifiedName.Name"/> and <see cref="System.Xml.XmlQualifiedName.Namespace"/> properties of <see cref="System.Web.Services.Protocols.SoapException.DetailElementName"/> can be used to ensure consistancy 
   with the SOAP specification.</para>
		</remarks>
		<example>
			<para>The following example sets the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property using the 
<see cref="System.Web.Services.Protocols.SoapException.DetailElementName"/>field and then throws a <see cref="System.Web.Services.Protocols.SoapException"/>, 
   .</para>
			<codelink SampleID="Classic SoapException.DetailElementName Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SoapException.OtherElements">
		<summary>
			<para>Gets an array of <see cref="System.Xml.XmlNode"/> with the optional error information.</para>
		</summary>
		<value>
			<para>An array of <see cref="System.Xml.XmlNode"/> representing the optional error information.</para>
		</value>
		<remarks>
			<para><see cref="System.Web.Services.Protocols.SoapException.OtherElements"/> can be set using
   one of the class constructors that accept an argument for <see cref="System.Web.Services.Protocols.SoapException.OtherElements"/>
   .</para>
			<para>Additional error details not related to the processing of the <c>Body</c>
element, such as error details from components called by the
XML Web service method, can be placed in the <see cref="System.Web.Services.Protocols.SoapException.OtherElements"/> property. </para>
			<para>Error information specific to the processing of the <c>Body</c>
element must be placed in the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property. </para>
		</remarks>
		<example>
			<para>The following example throws a <see cref="System.Web.Services.Protocols.SoapException"/>, where the XML Web service method sets the
<see cref="System.Web.Services.Protocols.SoapException.Detail"/> and <see cref="System.Web.Services.Protocols.SoapException.OtherElements"/> properties.</para>
			<codelink SampleID="Classic SoapException.Detail Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.XmlNode"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Detail"/>
	</doc><doc for="SoapException">
		<summary>
			<para> The exception that is thrown when an
      XML Web service method is called over SOAP and an exception
      occurs.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapException"/> can either be thrown by the
   common language runtime or by an XML Web service method. The common language runtime
   can throw a <see cref="System.Web.Services.Protocols.SoapException"/> if a response to a request is not
   formatted correctly. XML Web service methods can generate a <see cref="System.Web.Services.Protocols.SoapException"/> by simply throwing an exception
   within the XML Web service method. If the client accessed the method over SOAP, the
   exception is caught on the server and wrapped inside a new <see cref="System.Web.Services.Protocols.SoapException"/> . The
   SoapException thrown has the following property values: </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Exception.Message"/></term>
					<description>The <see cref="System.Exception.Message"/> property of the original
      exception.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.Services.Protocols.SoapException.Code"/></term>
					<description><see cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/>.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.Services.Protocols.SoapException.Actor"/></term>
					<description>The url of the XML Web service method.</description>
				</item>
				<item>
					<term>
						<see cref="System.Web.Services.Protocols.SoapException.Detail"/></term>
					<description><see langword="null"/>, but an empty
   detail element is present in the fault element.</description>
				</item>
			</list>
			<para>An XML Web service method might throw a <see cref="System.Web.Services.Protocols.SoapException"/>, when it is
known that clients will be calling using SOAP. If an XML Web service does throw
the <see cref="System.Web.Services.Protocols.SoapException"/>, other details can be added
through the <see cref="System.Web.Services.Protocols.SoapException.Actor"/>, <see cref="System.Web.Services.Protocols.SoapException.Code"/> and <see cref="System.Web.Services.Protocols.SoapException.Detail"/> properties, that
wouldn't otherwise be able to be
set by an XML Web service method if another type of exception is thrown.</para>
		</remarks>
		<example>
			<para>The following example throws a <see cref="System.Web.Services.Protocols.SoapException"/>, where the XML Web service method 
   sets the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property.</para>
			<codelink SampleID="Classic SoapException Example" SnippetID="1"/>
		</example>
	</doc><doc for="SoapException.VersionMismatchFaultCode">
		<summary>
			<para>A SOAP fault code representing an invalid namespace for a SOAP Envelope was found during the
      processing of the SOAP message.</para>
		</summary>
		<remarks>
			<para>A SOAP Envelope is the top-level element of an XML document
      representing a SOAP message.</para>
		</remarks>
	</doc>
	<doc for="SoapException.MustUnderstandFaultCode">
		<summary>
			<para>A SOAP Fault Code representing a SOAP element marked with 
      the <see langword="MustUnderstand"/>
      attribute was not processed.</para>
		</summary>
		<remarks>
			<para>Not all SOAP elements require processing by the server. 
      However, if a SOAP element is marked with the <see langword="MustUnderstand"/>
      attribute equal to 1 or "true",
      processing is required. Failure to process the element, generates a <see cref="System.Web.Services.Protocols.SoapException"/> with a <see cref="System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode"/>.</para>
		</remarks>
	</doc>
	<doc for="SoapException.ServerFaultCode">
		<summary>
			<para>Specifies a SOAP fault code representing an error occurred during
      the processing of a client call on the server, where the problem was not due to the message contents.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/> might occur for example, if a server
   being called, couldn't respond to a request due to network problems. Typically, with
   this type of exception, the client call may succeed later.</para>
			<para>If an XML Web service throws an exception, other than the <see cref="System.Web.Services.Protocols.SoapException"/> and the client is 
communicating with the XML Web service using the SOAP protococl, ASP.NET
returns a SOAP fault. The .NET Framework running on the client
machine converts that SOAP fault into a <see cref="System.Web.Services.Protocols.SoapException"/>, setting the <see cref="System.Web.Services.Protocols.SoapException.Code"/>property to <see cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/>and throws that
exception to the client.</para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode"/>
	</doc>
	<doc for="SoapException.Detail">
		<summary>
			<para> Gets an <see cref="System.Xml.XmlNode"/> representing 
   the application specific error information details.</para>
		</summary>
		<value>
			<para> The application specific error information.</para>
		</value>
		<remarks>
			<para><see cref="System.Web.Services.Protocols.SoapException.Detail"/>can be set using
   one of the class constructors that accept a <see cref="System.Web.Services.Protocols.SoapException.Detail"/>
   value. </para>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property is
intended for supplying application specific error details related to the
<c>Body</c> element of the SOAP request. According to the SOAP specification, if an an
error occurrs because the client request could not be processed due to the <c>Body</c>
element of the SOAP request, the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property must be
set. If an error occured in the header entries of the SOAP request, you must
throw a <see cref="System.Web.Services.Protocols.SoapHeaderException"/>, so that the error details are
returned in the SOAP header. If the error did not occur, due to the processing of
the <c>Body</c> element, then the <see cref="System.Web.Services.Protocols.SoapException.Detail"/>
property must not be
set. </para>
			<para>In building an <see cref="System.Xml.XmlNode"/> for the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property, the
<see cref="System.Xml.XmlQualifiedName.Name"/> and <see cref="System.Xml.XmlQualifiedName.Namespace"/> properties of <see cref="System.Web.Services.Protocols.SoapException.DetailElementName"/> can be used to 
ensure consistancy with the SOAP specification. </para>
			<para>All immediate child elements of the detail element are
   called detail entries and each detail entry is encoded as an independent element
   within the detail element. </para>
		</remarks>
		<example>
			<para>The following example throws a <see cref="System.Web.Services.Protocols.SoapException"/>, where the XML Web service
   method sets the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property.</para>
			<codelink SampleID="Classic SoapException.Detail Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Xml.XmlNode"/>
		<seealso cref="System.Web.Services.Protocols.SoapHeaderException"/>
	</doc>
	<doc for="SoapException.IsServerFaultCode">
		<summary>
			<para>Returns a value indicating whether the SOAP fault code is equivalent
      to Server regardless of the version of the SOAP protocol used.</para>
		</summary>
		<param name="code">An <see cref="System.Xml.XmlQualifiedName"/> containing a SOAP fault code.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="code"/> is equivalent to
   the Server SOAP fault code; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>Recipients of a <see cref="System.Web.Services.Protocols.SoapException"/> can use this method to determine
   whether the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property is
   functionally equivalent to the <see langword="Server"/> SOAP fault code defined
   in SOAP 1.1 regardless of the version of the SOAP protocol used. Versions of the
   SOAP protocol later than 1.1 may use different names and/or namespaces for the
<see langword="Server"/> SOAP 
   fault code defined in SOAP version 1.1, which is represented by the <see cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/> field. SOAP
   1.2 names the fault code <see langword="Receiver"/>, which is represented by the
<see cref="System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode" qualify="true"/> 
field.</para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/>
		<seealso cref="System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode"/>
	</doc>
	<doc for="SoapException.IsClientFaultCode">
		<summary>
			<para>Returns a value indicating whether the SOAP fault code
      is equivalent to <see langword="Client"/>
      regardless of the version of the SOAP protocol used.</para>
		</summary>
		<param name="code">An <see cref="System.Xml.XmlQualifiedName"/> containing a SOAP fault code.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="code"/> is equivalent to the <see langword="Client"/>
SOAP fault code; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>Recipients of a <see cref="System.Web.Services.Protocols.SoapException"/> can use this method to determine
   whether the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property is
   functionally equivalent to the <see langword="Client"/> SOAP fault code defined
   in SOAP 1.1 regardless of the version of the SOAP protocol used. Versions of the
   SOAP protocol later than 1.1 may use different names and/or namespaces for the
<see langword="Client"/> SOAP 
   fault code defined in SOAP version 1.1, which is represented by the <see cref="System.Web.Services.Protocols.SoapException.ClientFaultCode"/> field. SOAP 1.2
   names the fault code <see langword="Sender"/>, which is represented by the
<see cref="System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode" qualify="true"/> 
field.</para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.ClientFaultCode"/>
		<seealso cref="System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode"/>
	</doc>
	<doc for="SoapException.IsMustUnderstandFaultCode">
		<summary>
			<para>Returns a value indicating whether the SOAP fault code
      is equivalent to <see langword="MustUnderstand"/>
      regardless of the version of the SOAP protocol used.</para>
		</summary>
		<param name="code">An <see cref="System.Xml.XmlQualifiedName"/> containing a SOAP fault code.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="code"/> is equivalent to the
<see langword="MustUnderstand"/> 
SOAP fault code; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>Recipients of a <see cref="System.Web.Services.Protocols.SoapException"/> can use this method to determine
   whether the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property is
   functionally equivalent to the <see langword="MustUnderstand"/> SOAP fault code
   defined in SOAP 1.1 regardless of the version of the SOAP protocol used.
   Versions of the SOAP protocol later than 1.1 may use different names and/or
   namespaces for the <see langword="MustUnderstand"/> SOAP fault code defined in
   SOAP version 1.1, which is represented by the <see cref="System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode" qualify="true"/> field. SOAP 1.2
   names the fault code the same, however it is scoped by a different XML
   namespace and is represented by the <see cref="System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode" qualify="true"/>
   
   field.</para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode"/>
		<seealso cref="System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode"/>
	</doc>
	<doc for="SoapException.SoapException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the specified exception message
   and exception code.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Exception.Message"/>
	</doc>
	<doc for="SoapException.SoapException5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the specified exception message, exception code, URI identifying the piece of code that
   caused the exception, application specific exception information and reference to the root cause of
   the exception.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name=" actor">An URI identifying the piece of code that caused the exception. Typically, an URL to an XML Web service method. Sets the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property.</param>
		<param name=" detail">An <see cref="System.Xml.XmlNode"/> containing application specific exception information. Sets the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property.</param>
		<param name=" innerException">An exception that is the root cause of the exception. Sets the <see cref="System.Exception.InnerException"/> property.</param>
	</doc>
	<doc for="SoapException.SoapException3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the specified
   exception message, exception code and reference to the root cause of the exception.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name=" innerException">An exception that is the root cause of the exception. Sets the <see cref="System.Exception.InnerException"/> property.</param>
		<seealso cref="System.Exception.Message"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Exception.InnerException"/>
	</doc>
	<doc for="SoapException.SoapException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the specified exception message, exception code, URI identifying the code that casued the exception and reference to the root
   cause of the exception.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name="actor">An URI identifying the piece of code that caused the exception. Typically, an URL to an XML Web service method. Sets the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property.</param>
		<param name=" innerException">An exception that is the root cause of the exception. Sets the <see cref="System.Exception.InnerException"/> property.</param>
		<seealso cref="System.Exception.Message"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Actor"/>
		<seealso cref="System.Exception.InnerException"/>
	</doc>
	<doc for="SoapException.Role">
		<summary>
			<para>Gets an URI representing the XML Web service's function 
      in processing the SOAP message.</para>
		</summary>
		<value>
			<para>The role of the XML Web service throwing the <see cref="System.Web.Services.Protocols.SoapException"/>. The default is <see cref="System.String.Empty"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Role"/> property is ignored 
   when the SOAP protocol version 1.1 is used to communicate with an XML Web
   service. When SOAP 1.2 is used, the <see cref="System.Web.Services.Protocols.SoapException.Role"/> property sets the
<see langword="Role"/> element within a <see langword="Fault"/> 
element of
a SOAP message.</para>
		</remarks>
	</doc>
	<doc for="SoapException.Role">
		<summary>
			<para> Gets a URI representing the XML Web service's function
      in processing the SOAP message.</para>
		</summary>
		<value>
			<para>The role of the XML Web service throwing the <see cref="System.Web.Services.Protocols.SoapException"/> . The default is
<see cref="System.String.Empty"/> .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Role"/> property is ignored 
   when SOAP protocol
   version 1.1 is used to communicate with an XML Web service. When SOAP
   1.2 is used, the value of the <see cref="System.Web.Services.Protocols.SoapException.Role"/> property becomes the
<see langword="Role"/> element within a <see langword="Fault"/> 
element of a SOAP message. </para>
		</remarks>
	</doc>
	<doc for="SoapException.Subcode">
		<summary>
			<para> Gets the optional error information contained in the
   <see langword="Subcode"/> XML element of a SOAP fault.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.Services.Protocols.SoapFaultSubcode"/> representing the contents of the
<see langword="Subcode "/>XML element of a SOAP fault. </para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Subcode"/> property is ignored when the
   SOAP protocol version 1.1 is used to communicate with an XML Web service. </para>
			<para> The <see cref="System.Web.Services.Protocols.SoapException.Code"/> property
representing the contents of the <see langword="Code"/> element specifies
the type of error that occurred using a limited number of pre-defined error
codes specified by the SOAP protocol, whereas the
optional <see langword="Subcode"/> element allows an application to provide
user-defined error codes specific to the application. ASP.NET defines two
such codes that are represented by the <see cref="System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode"/> and <see cref="System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode"/> fields.</para>
		</remarks>
	</doc>
	<doc for="SoapException.IsVersionMismatchFaultCode">
		<summary>
			<para>Returns a value indicating whether the SOAP fault code is equivalent
      to VersionMismatch regardless of the version of the SOAP protocol used.</para>
		</summary>
		<param name="code">An <see cref="System.Xml.XmlQualifiedName"/> containing a SOAP fault code.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="code"/> is equivalent to
   the VersionMismatch SOAP fault code; otherwise, <see langword="false"/> .</para>
		</returns>
		<remarks>
			<para>Recipients of a <see cref="System.Web.Services.Protocols.SoapException"/> can use this
   method to determine whether the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property is
   functionally equivalent to the VersionMismatch SOAP fault code defined in SOAP
   1.1 regardless of the version of the SOAP protocol used. Versions of the SOAP
   protocol later than 1.1 may use different names and/or namespaces for the
   VersionMismatch SOAP fault code defined in SOAP version 1.1, which is
   represented by the <see cref="System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode" qualify="true"/>
   field. SOAP 1.2 names the fault code the same, however it is scoped by a
   different XML namespace and is represented by the <see cref="System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode" qualify="true"/>
   
   field.</para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode"/>
		<seealso cref="System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode"/>
	</doc>
	<doc for="SoapException.Node">
		<summary>
			<para>Gets a URI representing the piece of code that
      caused the exception.</para>
		</summary>
		<value>
			<para>The piece of code that caused the exception.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Node"/> property is ignored
   when the SOAP protocol version 1.1 is used to communicate with an XML Web
   service. When SOAP 1.2 is used, the <see cref="System.Web.Services.Protocols.SoapException.Node"/> property sets the
<see langword="Node"/> element within a <see langword="Fault"/> element of a SOAP 
   message.</para>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Actor"/> and <see cref="System.Web.Services.Protocols.SoapException.Node"/> properties both
identify the piece of code that caused the exception; they just refer to their SOAP
1.1 and SOAP 1.2 names respectively. Because they both refer to the same
property value, applications can just access the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property. The value
of these properties is set by the constructors that accept an <paramref name="actor"/>
parameter.</para>
		</remarks>
	</doc>
	<doc for="SoapException.SoapException7">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the
   specified exception message, exception code, URI identifying the code that caused the
   exception, application specific exception information, optional exception
   information, and reference to the root cause of the exception.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name=" actor">An URI identifying the code that caused the exception. Typically, an URL to an XML Web service method. Sets the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property.</param>
		<param name=" role">An URI representing the XML Web service's function in processing a SOAP request. Sets the <see cref="System.Web.Services.Protocols.SoapException.Role"/> property.</param>
		<param name=" detail">An <see cref="System.Xml.XmlNode"/> containing application specific exception information. Sets the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property.</param>
		<param name=" subcode">A <see cref="System.Web.Services.Protocols.SoapFaultSubcode"/> containing the contents of the <see langword="&lt;subcode&gt;"/> element of a SOAP fault.</param>
		<param name=" innerException">An exception that is the root cause of the exception. Sets the <see cref="System.Exception.InnerException"/> property.</param>
		<remarks>
			<para> Use this constructor to set the SOAP
      version 1.2 fault elements represented by the <paramref name="role"/> and
   <paramref name="subcode"/> parameters. When SOAP version 1.1 is used for communication between a client and an XML
      Web service, the <paramref name="role"/> and <paramref name="subcode"/> parameters are ignored.</para>
		</remarks>
		<example>
			<para>The following code example demonstrates how to throw a SOAP 1.2 fault that 
      includes the SOAP 1.2 specific <see langword="Subcode"/> element.
      </para>
		</example>
	</doc>
	<doc for="SoapException.SoapException6">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the
   specified exception message, exception code and optional exception
   information.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name=" subcode">A <see cref="System.Web.Services.Protocols.SoapFaultSubcode"/> containing the contents of the <see langword="&lt;subcode&gt;"/> element of a SOAP fault.</param>
		<remarks>
			<para>When SOAP version 1.1 is used for communication between a client and an XML
      Web service, the <paramref name="subcode"/> parameter is ignored.</para>
		</remarks>
		<example>
			<para>The following code example demonstrates how to throw a 
   <see cref="System.Web.Services.Protocols.SoapException"/> , which
      sends SOAP fault including the SOAP 1.2-specific <see langword="Subcode"/> element back to the client.</para>
		</example>
	</doc>
	<doc for="SoapException.Actor">
		<summary>
			<para> Gets the piece of
      code that caused the exception.</para>
		</summary>
		<value>
			<para>The piece of code that caused the
      exception.</para>
		</value>
		<remarks>
			<para><see cref="System.Web.Services.Protocols.SoapException.Actor"/> can only be set
   using one of the constructors that accept an <see cref="System.Web.Services.Protocols.SoapException.Actor"/> argument.</para>
			<para>When a SOAP request is made, the message is sent to a
   recipient, which is specified in a SOAP actor attribute. If an
   exception occurs within an XML Web service, the value of the SOAP actor attribute
   is assigned to the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property. For XML Web services created using ASP.NET,
   the URL to the XML Web service method is the value of the SOAP
   actor attribute and thus returned in the <see langword="Actor"/>
   property. </para>
			<para>For more information on the SOAP actor attribute, see 
   the SOAP specification at http://www.w3.org/TR/SOAP/ . </para>
		</remarks>
		<example>
			<para>The following Web Form example calls the <c>Math</c> XML Web service
   method, which throws an exception if a divsion by zero occurs. Once the
   exception is thrown, the Web Form catches the exception and outputs the
   exception details, including the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> and <see cref="System.Web.Services.Protocols.SoapException.Code"/> properties, into an
<see cref="System.Web.UI.HtmlControls.HtmlTable"/> control. </para>
			<codelink SampleID="Classic SoapException.Actor Example" SnippetID="1"/>
			<para>In order for the Web Form above to use the <c>Math</c> Web
Service example below, a namespace of <c>MyMath</c> was specified during the creation of the
proxy class.</para>
			<codelink SampleID="Classic SoapException.Actor Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Web.UI.HtmlControls.HtmlTable"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
	</doc>
	<doc for="SoapException.Code">
		<summary>
			<para> Gets the type of SOAP fault code.</para>
		</summary>
		<value>
			<para>An <see cref="System.Xml.XmlQualifiedName"/> that specifies the SOAP fault code that occurred.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapException.Code"/> property can only be set
   when creating a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class.</para>
			<para>The <see cref="System.Web.Services.Protocols.SoapException"/> class is for use by XML Web 
service clients calling XML Web service methods over SOAP. When an exception
occurs in an XML Web service, ASP.NET handles whether the client is calling
using SOAP or not. If the client is, ASP.NET wraps the specific exception into a
<see cref="System.Web.Services.Protocols.SoapException"/> and sets the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> and <see cref="System.Web.Services.Protocols.SoapException.Code"/> properties. </para>
			<para> The set of available codes, known as SOAP Fault Codes for SOAP 
   protocol version 1.1 are the following: </para>
			<list type="table">
				<listheader>
					<term>Item</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see cref="System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode"/></term>
					<description>An invalid namespace for a SOAP envelope was 
      found.</description>
				</item>
				<item>
					<term><see cref="System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode"/></term>
					<description>Not all SOAP elements require processing. However, if a SOAP element 
   is marked with the MustUnderstand attribute with a value of 1, it is
   required. Failure to process the element, generates this exception.</description>
				</item>
				<item>
					<term><see cref="System.Web.Services.Protocols.SoapException.ClientFaultCode"/></term>
					<description>A client call was not formatted correctly or did not contain the 
   appropriate information. For example, the client call could have lacked
   the proper authentication or payment information. It is generally an
   indication that the message should not be resent without change.</description>
				</item>
				<item>
					<term><see cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/></term>
					<description>An error occurred during the processing of a client call on the 
   server, however the problem was not due to the message contents. For
   example, an upstream server couldn't respond to a request due to network
   problems. Typically, with this type of exception, the client call may
   succeed later. If a XML Web service throws an exception, other than
<see cref="System.Web.Services.Protocols.SoapException"/> and the client is calling 
   via SOAP, ASP.NET converts the exception to a <see cref="System.Web.Services.Protocols.SoapException"/>, setting the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property to <see cref="System.Web.Services.Protocols.SoapException.ServerFaultCode"/> and throws it back to the
   client. </description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following Web Form example calls the <c>Math</c> Web
   Service method, which throws an exception if a divsion by zero occurs. Once the
   exception is thrown, the Web Form catches the exception and outputs the
   exception details, including the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> and <see cref="System.Web.Services.Protocols.SoapException.Code"/> properties into a
<see cref="System.Web.UI.HtmlControls.HtmlTable"/> control. </para>
			<codelink SampleID="classic soapexception.actor example" SnippetID="1"/>
			<para>In order for the Web Form above to use the <c>Math</c> XML Web service example below, a
namespace of <c>MyMath</c> was
specified during the creation of the proxy class.</para>
			<codelink SampleID="classic soapexception.actor example" SnippetID="2"/>
		</example>
		<seealso cref="System.Xml.XmlQualifiedName"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Subcode"/>
		<seealso cref="System.Web.UI.HtmlControls.HtmlTable"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Actor"/>
	</doc>
	<doc for="SoapException.SoapException">
		<overload>
			<para>Initializes a new instance
      of the <see cref="System.Web.Services.Protocols.SoapException"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the specified exception message, exception
   code and URI identifying the piece of code that caused the exception.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name=" actor">An URI identifying the code that caused the exception. Typically, an URL to an XML Web service method. Sets the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property.</param>
		<seealso cref="System.Exception.Message"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Code"/>
		<seealso cref="System.Web.Services.Protocols.SoapException.Actor"/>
	</doc>
	<doc for="SoapException.SoapException4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Web.Services.Protocols.SoapException"/> class with the
   specified exception message, exception code, URI identifying the piece of code that caused the
   exception and application specific exception information.</para>
		</summary>
		<param name="message">A message that identifies the reason the exception occurred. Sets the <see cref="System.Exception.Message"/> property.</param>
		<param name=" code">An <see cref="System.Xml.XmlQualifiedName"/> that specifies the type of error that occurred. Sets the <see cref="System.Web.Services.Protocols.SoapException.Code"/> property.</param>
		<param name=" actor">An URI identifying the piece of code that caused the exception. Typically, an URL to an XML Web service method. Sets the <see cref="System.Web.Services.Protocols.SoapException.Actor"/> property.</param>
		<param name=" detail">An <see cref="System.Xml.XmlNode"/> containing application specific exception information. Sets the <see cref="System.Web.Services.Protocols.SoapException.Detail"/> property.</param>
		<example>
			<codelink SampleID="Classic SoapException.Detail Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SoapException.ClientFaultCode">
		<summary>
			<para>Specifies a SOAP fault code representing a client call was not formatted correctly or did
      not contain the appropriate information.</para>
		</summary>
		<remarks>
			<para>An example of when a <see cref="System.Web.Services.Protocols.SoapException.ClientFaultCode"/> can be generated, is when a client call lacks proper authentication or payment
   information. It is generally an indication that the client call should not be resent
   without change.</para>
		</remarks>
		<example>
			<codelink SampleID="Classic SoapException.Detail Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
