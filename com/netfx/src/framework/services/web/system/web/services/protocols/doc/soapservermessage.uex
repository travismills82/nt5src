<docs>
	<doc for="SoapServerMessage.EnsureOutStage">
		<summary>
			<para>Asserts that the current <see cref="System.Web.Services.Protocols.SoapMessageStage"/> is a stage where out
   parameters are available. If not, an exception is thrown.</para>
		</summary>
		<exception cref="System.InvalidOperationException">Out parameters are not available in the current<see cref="System.Web.Services.Protocols.SoapMessageStage"/> stage.</exception>
		<remarks>
			<para>For XML Web service methods, the out parameters are available prior to the SOAP
      response serialization process in the <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize"/> stage. If the <see cref="System.Web.Services.Protocols.SoapServerMessage.EnsureOutStage"/> method is invoked in any
      other <see cref="System.Web.Services.Protocols.SoapMessageStage"/>,
      the <see cref="System.InvalidOperationException"/> is thrown.</para>
		</remarks>
	</doc><doc for="SoapServerMessage.EnsureInStage">
		<summary>
			<para>Asserts that the current <see cref="System.Web.Services.Protocols.SoapMessageStage"/> is a stage where in
   parameters are available. If not, an exception is thrown.</para>
		</summary>
		<exception cref="System.InvalidOperationException">In parameters are not available in the current <see cref="System.Web.Services.Protocols.SoapMessageStage"/> stage.</exception>
		<remarks>
			<para>For XML Web service methods, the in parameters are available after the SOAP
      request in the deserialization process of the <see cref="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize"/> stage. If the <see cref="System.Web.Services.Protocols.SoapServerMessage.EnsureInStage"/> method is invoked in any
      other <see cref="System.Web.Services.Protocols.SoapMessageStage"/>,
      the <see cref="System.InvalidOperationException"/> is thrown.</para>
		</remarks>
	</doc><doc for="SoapServerMessage">
		<summary>
			<para>Represents the data in a SOAP request received or a
      SOAP response sent by an XML Web service method at a specific <see cref="System.Web.Services.Protocols.SoapMessageStage"/>. This class cannot be
      inherited.</para>
		</summary>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP 
      messages sent and received by an XML Web service method. This specific fragment
      processes the <see cref="System.Web.Services.Protocols.SoapServerMessage"/> passed into the <see cref="System.Web.Services.Protocols.SoapExtension.ProcessMessage" qualify="true"/> method of the SOAP
      extension by writing properties of the <see cref="System.Web.Services.Protocols.SoapServerMessage"/> to the log file. </para>
			<codelink SampleID="SoapServerMessage" SnippetID="1"/>
		</example>
	</doc><doc for="SoapServerMessage.Url">
		<summary>
			<para>Gets the base URL of the XML Web service.</para>
		</summary>
		<value>
			<para>The base URL of the XML Web service.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapServerMessage.Url"/> property can be
   accessed during any <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP 
      messages sent and received by an XML Web service. This particular fragment
      outputs to that log file the URL of the XML Web service.</para>
			<codelink SampleID="SoapServerMessage" SnippetID="6"/>
		</example>
	</doc><doc for="SoapServerMessage.Action">
		<summary>
			<para>Gets the SOAPAction HTTP request header field for the SOAP request or SOAP
      response.</para>
		</summary>
		<value>
			<para>The SOAPAction HTTP request header field for the SOAP
      request or SOAP response.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapServerMessage.Action"/> property can be
   accessed during any <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
		<example>
			<para> The following code fragment is part of a SOAP extension that logs the 
      SOAP messages sent and received by an XML Web service. This particular
      fragment outputs to that log file the value of the <see langword="SOAPAction"/>
      HTTP request header field. </para>
			<codelink SampleID="SoapServerMessage" SnippetID="2"/>
		</example>
	</doc><doc for="SoapServerMessage.OneWay">
		<summary>
			<para>Gets a value indicating whether the client waits for the server to finish
      processing an XML Web service method.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the client
   waits for the server to completely process a method; otherwise,
<see langword="false"/> 
. </para>
		</value>
		<remarks>
			<para>A <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/> or
<see cref="System.Web.Services.Protocols.SoapRpcMethodAttribute"/> applied to an XML Web service method
   or XML Web service client can specify whether the XML Web service method is one way or
   not by setting the <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay"/> property of
   the attribute.</para>
The <see cref="System.Web.Services.Protocols.SoapServerMessage.OneWay"/> property can be
accessed during any <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.
</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP 
      messages sent and received by an XML Web service. This particular fragment
      outputs to that log file a phrase stating the XML Web service method is one-way,
      when the <see cref="System.Web.Services.Protocols.SoapServerMessage.OneWay"/> property is
   <see langword="true"/>. </para>
			<codelink SampleID="SoapServerMessage" SnippetID="5"/>
		</example>
	</doc><doc for="SoapServerMessage.MethodInfo">
		<summary>
			<para>Gets a representation of the method prototype for the XML Web service method for
      which the SOAP request is intended.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.Services.Protocols.LogicalMethodInfo"/> representing the XML Web service method for
   which the SOAP request is intended.</para>
		</value>
		<remarks>
			<para>Although the <see cref="System.Web.Services.Protocols.SoapServerMessage.MethodInfo"/> property can be
   accessed during any stage, the method information is only available during
<see cref="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize"/> and <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize"/> .</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP 
      messages sent and received by an XML Web service. This particular fragment
      outputs to that log file the name of the XML Web service method requested. </para>
			<codelink SampleID="SoapServerMessage" SnippetID="4"/>
		</example>
		<seealso cref="System.Web.Services.Protocols.LogicalMethodInfo"/>
	</doc><doc for="SoapServerMessage.SoapVersion">
		<summary>
			<para> Gets the version of the
      SOAP protocol used to communicate with the XML Web service.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.Services.Protocols.SoapProtocolVersion"/> values. The default is <see cref="System.Web.Services.Protocols.SoapProtocolVersion.Default"/>.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapServerMessage.SoapVersion"/> property is guaranteed to be
   valid after the <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize"/> stage. In
   the <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize"/> stage the property is available,
   but the SOAP message has not been completely processed and SOAP extensions
   that may alter the contents of the SOAP message have not run.</para>
		</remarks>
	</doc>
	<doc for="SoapServerMessage.Server">
		<summary>
			<para>Gets the instance of the class handling the
      method invocation on the Web server.</para>
		</summary>
		<value>
			<para>The instance of the class implementing the XML Web service.</para>
		</value>
		<exception cref="System.InvalidOperationException"><see cref="System.Web.Services.Protocols.SoapMessageStage"/> is not <see cref="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize"/> or <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize"/>.</exception>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapServerMessage.Server"/> property
   is an instance of the class implementing the XML Web service. If a SOAP
   extension knew ahead of time the type of the class, it could cast <see cref="System.Web.Services.Protocols.SoapServerMessage.Server"/> to that type and
   access properties and methods of the class implementing the XML Web
   service.
   The <see cref="System.Web.Services.Protocols.SoapServerMessage.Server"/> property can be
   accessed during <see cref="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize"/> or <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize"/>.</para>
		</remarks>
		<example>
			<para> The following code fragment is part of a SOAP
      extension that logs the SOAP messages sent and received by an XML Web service. This
      particular fragment outputs to the log file the type of the XML Web service, if
      it is <c>MathSvc</c>.</para>
			<codelink SampleID="SoapServerMessage" SnippetID="3"/>
		</example>
	</doc>
</docs>
