<docs>
	<doc for="SoapClientMessage.EnsureOutStage">
		<summary>
			<para> Asserts that the
      current <see cref="System.Web.Services.Protocols.SoapMessageStage"/>
      is a stage where out parameters are available. If not, an
      exception is thrown.</para>
		</summary>
		<exception cref="System.InvalidOperationException">Out parameters are not available in the current <see cref="System.Web.Services.Protocols.SoapMessageStage"/> .</exception>
		<remarks>
			<para>For XML Web service clients, the out parameters are available after the SOAP
      response deserialization process in the <see cref="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize"/> stage.
      The <see cref="System.InvalidOperationException"/> is thrown if <see cref="System.Web.Services.Protocols.SoapClientMessage.EnsureOutStage"/> method is invoked in any
      other <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
	</doc><doc for="SoapClientMessage.EnsureInStage">
		<summary>
			<para> Asserts that the
      current <see cref="System.Web.Services.Protocols.SoapMessageStage"/> is a stage where in
      parameters are available. If not, an
      exception is thrown.</para>
		</summary>
		<exception cref="System.InvalidOperationException">In parameters are not available in the current <see cref="System.Web.Services.Protocols.SoapMessageStage"/> .</exception>
		<remarks>
			<para>For XML Web service clients, the in parameters are available prior to the
      SOAP request serialization process in the <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize"/> stage.
      The <see cref="System.InvalidOperationException"/> is thrown if the <see cref="System.Web.Services.Protocols.SoapClientMessage.EnsureInStage"/> method is invoked in any
      other <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
	</doc><doc for="SoapClientMessage">
		<summary>
			<para> Represents the data in a SOAP request sent or a SOAP
      response received by an XML Web service client at a specific <see cref="System.Web.Services.Protocols.SoapMessageStage"/>. This class cannot be inherited.</para>
		</summary>
		<example>
			<para>The following code fragment is part of a SOAP extension 
      that logs the SOAP messages sent and received by an XML Web service
      client. This specific fragment processes the <see cref="System.Web.Services.Protocols.SoapClientMessage"/> passed into the <see cref="System.Web.Services.Protocols.SoapExtension.ProcessMessage" qualify="true"/> method of the SOAP extension by
      writing properties of the <see cref="System.Web.Services.Protocols.SoapClientMessage"/> to the log file. </para>
			<codelink SampleID="SoapClientMessage" SnippetID="1"/>
		</example>
	</doc><doc for="SoapClientMessage.Url">
		<summary>
			<para> Gets the URL of the XML Web service.</para>
		</summary>
		<value>
			<para> The URL of the XML Web service.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapClientMessage.Url"/> property can be accessed during
   any <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension 
      that logs the SOAP messages sent and received by an XML Web service client. This
      particular fragment outputs to that log file the URL of the XML Web service.</para>
			<codelink SampleID="SoapClientMessage" SnippetID="6"/>
		</example>
	</doc><doc for="SoapClientMessage.Action">
		<summary>
			<para>Gets the <see langword="SOAPAction"/> HTTP request header field for the
   SOAP request or SOAP response.</para>
		</summary>
		<value>
			<para>The <see langword="SOAPAction"/> HTTP request header field for the SOAP request or SOAP
   response.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapClientMessage.Action"/> property is available in any
<see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP 
      messages sent and received by an XML Web service client. This particular
      fragment outputs to that log file the value of the <see langword="SOAPAction"/>
      HTTP request header field. </para>
			<codelink SampleID="SoapClientMessage" SnippetID="2"/>
		</example>
	</doc><doc for="SoapClientMessage.Client">
		<summary>
			<para>Gets an instance of the client proxy class, which derives
      from <see cref="System.Web.Services.Protocols.SoapHttpClientProtocol"/> .</para>
		</summary>
		<value>
			<para>An instance of the client proxy class.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Web.Services.Protocols.SoapClientMessage.Client"/> property can be accessed during
   any <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received
      by an XML Web service client. This particular fragment outputs to the
      log file the type of the proxy class, if it is <c>MathSvc</c>.</para>
			<codelink SampleID="SoapClientMessage" SnippetID="3"/>
		</example>
	</doc><doc for="SoapClientMessage.MethodInfo">
		<summary>
			<para>Gets a representation of the method prototype of
      the XML Web service method for which the SOAP request is intended.</para>
		</summary>
		<value>
			<para>A <see cref="System.Web.Services.Protocols.LogicalMethodInfo"/>
representing the XML Web service method for
which the SOAP request is intended.</para>
		</value>
		<remarks>
			<para>Although the <see cref="System.Web.Services.Protocols.SoapClientMessage.MethodInfo"/> property
   can be accessed during any stage, the method information is only available
   during <see cref="System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize"/> and <see cref="System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize"/>
   .</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension that logs the SOAP
      messages sent and received by an XML Web service client. This particular
      fragment outputs to that log file the name of the proxy class method invoked by
      the client. </para>
			<codelink SampleID="SoapClientMessage" SnippetID="4"/>
		</example>
	</doc><doc for="SoapClientMessage.SoapVersion">
		<summary>
			<para> Gets the version of the
      SOAP protocol used to communicate with the XML Web service.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.Web.Services.Protocols.SoapProtocolVersion"/> values. The default is <see cref="System.Web.Services.Protocols.SoapProtocolVersion.Default"/>.</para>
		</value>
		<remarks>
			<para>When an XML Web service supports SOAP version 1.1, .NET Framework clients
      communicate with an XML Web service in that version by default. For
      details on how to change the version of the SOAP protocol, see the
   <see cref="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" qualify="true"/> property. </para>
		</remarks>
		<seealso cref="System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion" qualify="true"/>
	</doc>
	<doc for="SoapClientMessage.OneWay">
		<summary>
			<para>Gets a value indicating whether the client waits for
      the server to finish processing an XML Web service method.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the client waits for the server to completely
   process a method. </para>
		</value>
		<remarks>
			<para>A <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/> or
<see cref="System.Web.Services.Protocols.SoapRpcMethodAttribute"/> 
applied to an
XML Web service method or XML Web service client can specify whether the XML Web
service method is one way by setting the <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay"/> property of the attribute.</para>
			<para>The <see cref="System.Web.Services.Protocols.SoapClientMessage.OneWay"/> property can be accessed during
any <see cref="System.Web.Services.Protocols.SoapMessageStage"/>.</para>
		</remarks>
		<example>
			<para>The following code fragment is part of a SOAP extension
      that logs the SOAP messages sent and received by an XML Web service client. This
      particular fragment outputs to that log file a phrase stating the XML Web
      service method is one-way, when the <see cref="System.Web.Services.Protocols.SoapClientMessage.OneWay"/> property is
   <see langword="true"/>
   . </para>
			<codelink SampleID="SoapClientMessage" SnippetID="5"/>
		</example>
		<seealso cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay"/>
	</doc>
</docs>
