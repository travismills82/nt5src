<docs>
	<doc for="HttpSimpleClientProtocol.HttpSimpleClientProtocol">
		<summary>
			<para>
       Initializes a new instance of the <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/> class.
    </para>
		</summary>
	</doc>
	<doc for="HttpSimpleClientProtocol.EndInvoke">
		<summary>
			<para>Completes asynchronous invocation of an XML Web service method using HTTP.</para>
		</summary>
		<param name="asyncResult">The <see cref="T:System.IAsyncResult"/> returned from <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke"/>.</param>
		<returns>
			<para>An array of objects containing the return value and any by reference or
      out parameters for the XML Web service method.</para>
		</returns>
		<exception cref="T:System.ArgumentException"><paramref name="asyncResult"/> is not the return value from <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke"/>.</exception>
		<example>
			<para>The following example, is an ASP.NET Web Form, which
      calls an XML Web service named <c>Math</c>. Within the<c> EnterBtn_Click</c> function, the Web Form starts
   and completes an asynchronous invocation of the <c>Add </c>XML Web service method.</para>
			<codelink SampleID="Classic HttpSimpleClientProtocol.EndInvoke Example" SnippetID="1"/>
			<para>The following example is a proxy class generated by the Wsdl.exe utility for the
   <c>Math</c> XML Web service below.
 Within the <c>EndAdd</c> method of
the proxy class, the <see cref="System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke"/>method is
starting an asynchronous invocation of the <c>Add</c> XML Web service method. </para>
			<codelink SampleID="Classic HttpSimpleClientProtocol.EndInvoke Example" SnippetID="2"/>
			<para>The following example is the <c>Math</c> XML Web service, from which the above proxy class was
created.</para>
			<codelink SampleID="Classic HttpSimpleClientProtocol.EndInvoke Example" SnippetID="3"/>
		</example>
	</doc><doc for="HttpSimpleClientProtocol.Invoke">
		<summary>
			<para>Invokes an XML Web service method using HTTP.</para>
		</summary>
		<param name="methodName">The name of the XML Web service method in the derived class that is invoking <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke"/>.</param>
		<param name="requestUrl">The URL of the XML Web service method the client is requesting.</param>
		<param name="parameters">An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</param>
		<returns>
			<para>An array of objects containing the return value and any
      by-reference or out parameters of the derived class method.</para>
		</returns>
		<exception cref="T:System.Exception">The request reached the server computer, but was not processed successfully.</exception>
		<remarks>
			<para>The <paramref name="methodName"/> is used to find the types of the parameters and return
   values of the method that is invoking <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke"/>.
   It is also used to find custom attributes which may have been added to the method.
<see cref="System.Web.Services.Protocols.HttpMethodAttribute"/> and <see cref="System.Xml.Serialization.XmlElementAttribute"/> provide
   additional information on the derived method which is required for the SOAP protocol.</para>
		</remarks>
		<example>
			<para>The following example, is an ASP.NET Web Form, which calls an XML Web service
      named <c>Math</c>. Within the<c> EnterBtn_Click</c> function, the Web
   Form invokes synchronously the <c>Add </c>XML Web service method.</para>
			<codelink SampleID="HttpSimpleClientProtocol.Invoke Example" SnippetID="2"/>
			<para>The following example is a proxy class generated by the 
Wsdl.exe utility for the <c>Math</c> 
XML Web service below. Within the <c>Add</c> method of the proxy class, the <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke"/> method 
is invoking the <c>Add</c> Web 
Service method synchronously. </para>
			<codelink SampleID="HttpSimpleClientProtocol.Invoke Example" SnippetID="1"/>
			<para>The following example is the <c>Math</c> XML Web service, from which the above proxy class was 
created.</para>
			<codelink SampleID="HttpSimpleClientProtocol.Invoke Example" SnippetID="3"/>
		</example>
	</doc><doc for="HttpSimpleClientProtocol.BeginInvoke">
		<summary>
			<para> Starts an asynchronous invocation of a method of an XML Web service.</para>
		</summary>
		<param name="methodName">The name of the XML Web service method.</param>
		<param name="requestUrl">The url to use when creating the<see cref="System.Net.WebRequest"/>.</param>
		<param name="parameters">An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class.</param>
		<param name="callback">The delegate to call when the asynchronous method call is complete. If <paramref name="callback"/> is <see langword="null"/>, the delegate is not called.</param>
		<param name="asyncState">Additional information supplied by a client.</param>
		<returns>
			<para>An <see cref="T:System.IAsyncResult"/> which can be passed to <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke"/> to obtain the return values from
   the XML Web service method.</para>
		</returns>
		<exception cref="T:System.Exception">The request reached the server computer, but was not processed successfully.</exception>
		<remarks>
			<para>The <paramref name="methodName"/> parameter is used to find the types of the parameters and return
   values of the method that is invoking <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke"/>. It is also used to find custom
   attributes which may have been added to the method. <see cref="System.Web.Services.Protocols.SoapDocumentMethodAttribute"/>, <see cref="System.Web.Services.Protocols.SoapRpcMethodAttribute"/> and
<see cref="System.Xml.Serialization.XmlElementAttribute"/> provide additional information on
   the derived method which is required for the HTTP protocol.</para>
			<para><paramref name="asyncState"/> is passed into <paramref name="callback"/> and is included in the
<see cref="T:System.IAsyncResult"/>
that is returned from <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke"/>. It is useful
for passing information from the context of the asynchronous call to the
handling of the asynchronous result in <paramref name="callback"/>.</para>
		</remarks>
		<example>
			<para>The following example, is an ASP.NET Web Form, which calls an XML Web service
      named <c>Math</c>. Within the<c> EnterBtn_Click</c> function, the Web Form starts
   and completes an asynchronous invocation of the <c>Add </c>XML Web service method.</para>
			<codelink SampleID="Classic HttpSimpleClientProtocol.EndInvoke Example" SnippetID="1"/>
			<para>The following example is a proxy class generated by the Wsdl.exe utility for the
   <c>Math</c> XML Web service below.
 Within the <c>BeginAdd</c> method of
the proxy class, the <see cref="System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke"/>method is
starting an asynchronous invocation of the <c>Add</c> XML Web service method. </para>
			<codelink SampleID="Classic HttpSimpleClientProtocol.EndInvoke Example" SnippetID="2"/>
			<para>The following example is the <c>Math</c> XML Web service, from which the
above proxy class was created.</para>
			<codelink SampleID="Classic HttpSimpleClientProtocol.EndInvoke Example" SnippetID="3"/>
		</example>
		<seealso cref="T:System.IAsyncResult"/>
	</doc><doc for="HttpSimpleClientProtocol">
		<summary>
			<para> The base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded operations.</para>
		</threadsafe>
		<remarks>
			<para> Specifies most of the implementation for communicating
      with an XML Web service over HTTP using encoders to encode the parameters and
      return values into common MIME formats. These encoders derive from the <see cref="System.Web.Services.Protocols.MimeFormatter"/>
      class. By default, a proxy class deriving from <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/>
      encodes parameters using the
      application/x-www-form-urlencoded MIME type and the response in plain XML.
      Custom mime formatters can be specified using the <see cref="System.Web.Services.Protocols.HttpMethodAttribute"/>
      
      attribute, however there is no support for integrating this into
      a service description and proxy generation.</para>
			<para><see langword="Notes to Inheritors:"/>
When
you override this class, you can introduce methods in the
derived class which are specific to a particular type of an XML Web service. The
methods simply capture the parameters, and call the base class to do the work of
communicating with the site. If the introduced methods are asynchronous,
call <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke"/> and <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke"/>. If the introduced methods are
synchronous, call <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke"/>. The
overridden constructor typically sets the <see cref="System.Web.Services.Protocols.WebClientProtocol.Url"/>
property to the Uri of the XML Web service method.</para>
			<para> The Wsdl.exe utility generates derived classes
   of <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/> for a
   given Service Description.</para>
		</remarks>
		<example>
			<para>The following example is a proxy class generated by the Wsdl.exe utility for
      the <c>Math</c> XML Web service below.
   The proxy class derives from <see cref="System.Web.Services.Protocols.HttpGetClientProtocol"/>, which derives
   from the abstract <see cref="System.Web.Services.Protocols.HttpSimpleClientProtocol"/> class.</para>
			<codelink SampleID="Classic HttpGetClientProtocol Example" SnippetID="1"/>
			<para>The following example is the <c>Math</c> XML Web service, from which the above proxy class 
was created.</para>
			<codelink SampleID="Classic HttpSimpleClientProtocol Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Web.Services.Protocols.SoapHttpClientProtocol"/>
	</doc></docs>
