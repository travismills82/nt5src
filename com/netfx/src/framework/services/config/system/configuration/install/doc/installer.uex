<docs>
	<doc for="Installer.Commiting">
		<summary>
			<para>
       Occurs before the
       installations handled by the installers in the <see cref="System.Configuration.Install.InstallerCollection"/> of this instance are committed.
    </para>
		</summary>
		<remarks>
			<para>
       This event is raised before any of the installers contained in this instance's <see cref="System.Configuration.Install.InstallerCollection"/> are
       committed. Attach event handlers that need to run before
       the <see cref="System.Configuration.Install.Installer.Commit"/> methods are called
       to this event.
    </para>
		</remarks>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
	<doc for="Installer.LogException">
		<summary>
 Writes exception information for the given inner exception and any
 inner exceptions it may have to the given context object.
 </summary>
	</doc>
	<doc for="Installer.OnAfterRollback">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.AfterRollback"/> event.
   </para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer after the installers contained in the <see cref="System.Configuration.Install.Installer.Installers"/> property are rolled back. </param>
		<remarks>
			<para> This method is called after the <see cref="System.Configuration.Install.Installer.Rollback"/>
methods of all the installers in
this instance's <see cref="System.Configuration.Install.InstallerCollection"/> have
run.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnAfterRollback"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnAfterRollback"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnAfterRollback"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc><doc for="Installer.OnAfterUninstall">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.AfterUninstall"/>
event.</para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer after all the installers contained in the <see cref="System.Configuration.Install.Installer.Installers"/> property are uninstalled. </param>
		<remarks>
			<para> This method is called after the <see cref="System.Configuration.Install.Installer.Uninstall"/> methods of
   all the installers in this instance's <see cref="System.Configuration.Install.InstallerCollection"/>
   have
   run.
   </para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnAfterUninstall"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnAfterUninstall"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnAfterUninstall"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc><doc for="Installer.OnBeforeRollback">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.BeforeRollback"/> event.
   </para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property are rolled back. </param>
		<remarks>
			<para> This method is called before the <see cref="System.Configuration.Install.Installer.Rollback"/> 
methods of the installers in this instance's <see cref="System.Configuration.Install.InstallerCollection"/> are called.
</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnBeforeRollback"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnBeforeRollback"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnBeforeRollback"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc><doc for="Installer.OnBeforeUninstall">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.BeforeUninstall"/> event.
   </para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property uninstall their installations. </param>
		<remarks>
			<para> This method is called before the <see cref="System.Configuration.Install.Installer.Uninstall"/> 
methods of the installers in this instance's <see cref="System.Configuration.Install.InstallerCollection"/> are uninstalled.
</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnBeforeUninstall"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnBeforeUninstall"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnBeforeUninstall"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
	</doc><doc for="Installer.BeforeInstall">
		<summary>
			<para>Occurs before the <see cref="System.Configuration.Install.Installer.Install"/> method of each installer in the
   installer collection has run. </para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.BeforeInstall"/> event. 
   It is raised by the <see cref="System.Configuration.Install.Installer.OnBeforeInstall"/> method.</para>
			<codelink SampleID="Installer_BeforeInstall" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.AfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
	</doc>
	<doc for="Installer.BeforeUninstall">
		<summary>
			<para>Occurs before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property perform their
   uninstall operations.</para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.BeforeUninstall"/> event. 
   It is raised by the <see cref="System.Configuration.Install.Installer.OnBeforeUninstall"/> method.</para>
			<codelink SampleID="Installer_BeforeUninstall" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.AfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
	<doc for="Installer.Rollback">
		<summary>
			<para>When overridden in a derived class, restores the pre-installation state of
      the computer. </para>
		</summary>
		<param name="savedState"><para>An <see cref="T:System.Collections.IDictionary"/> that contains the pre-installation state of the computer.</para></param>
		<exception cref="T:System.ArgumentException"><para>The <paramref name="savedState"/> parameter is <see langword="null"/>.</para>
			<para>-or-</para>
			<para> The saved-state <see cref="T:System.Collections.IDictionary"/> might have been corrupted. </para></exception>
		<exception cref="T:System.Configuration.Install.InstallException"><para>An exception occurred during the <see cref="System.Configuration.Install.Installer.Rollback"/> phase of the installation. This exception is ignored and the rollback continues. However, the computer might not be fully reverted to its initial state after the rollback completes.</para></exception>
		<remarks>
			<note type="inheritinfo">
      When you override the
   <see cref="System.Configuration.Install.Installer.Rollback"/> method in
      a derived class, be sure to call the base class's <see cref="System.Configuration.Install.Installer.Rollback"/> method first in your
      derived
      method. A rollback operation restores the computer to the state it was in before the
      installations occurred. The <see cref="System.Configuration.Install.Installer.Rollback"/> method is called
      if the <see cref="System.Configuration.Install.Installer.Install"/> method of this instance of <see cref="System.Configuration.Install.Installer"/>, or any installer in the installer
      collection, fail to run correctly. Any exceptions generated by calling the
   <see cref="System.Configuration.Install.Installer.Rollback"/> methods of the installers in the
      installer collection are ignored and the rollback of the other installers
      continues.
      
   </note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Rollback"/> method of <see cref="System.Configuration.Install.Installer"/>. The <see cref="System.Configuration.Install.Installer.Rollback"/> method 
   is overridden in the derived class of <see cref="System.Configuration.Install.Installer"/>. An exception is generated to
   force an installation rollback. </para>
			<codelink SampleID="Installer_Rollback" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Commit"/>
		<seealso cref="System.Configuration.Install.Installer.Uninstall"/>
		<seealso cref="System.Configuration.Install.Installer.Install"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.Installer.Installers"/>
	</doc>
	<doc for="Installer.Uninstall">
		<summary>
			<para>When overridden in a derived class, removes an installation. </para>
		</summary>
		<param name="savedState"><para>An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer after the installation was complete. </para></param>
		<exception cref="T:System.ArgumentException">The saved-state <see cref="T:System.Collections.IDictionary"/> might have been corrupted. </exception>
		<exception cref="T:System.Configuration.Install.InstallException"><para>An exception occurred while uninstalling. This exception is ignored and the uninstall continues. However, the application might not be fully uninstalled after the uninstallation completes.</para></exception>
		<remarks>
			<note type="inheritinfo">
      When you override the
   <see cref="System.Configuration.Install.Installer.Uninstall"/> method in a
      derived class, be sure to call the base class's <see cref="System.Configuration.Install.Installer.Uninstall"/> method first in your
      derived method. The <see cref="System.Configuration.Install.Installer.Uninstall"/> method is called
      to remove a previously completed installation. If the uninstallation fails
      for one installer in the collection, the remaining installers
      are still uninstalled. A failed uninstallation does not roll back the computer to its pre-uninstallation state.
      Although the <see cref="System.Configuration.Install.Installer.Install"/> and <see cref="System.Configuration.Install.Installer.Commit"/> methods save the state
      of the computer after the installations, the file containing the
   <see cref="T:System.Collections.IDictionary"/> from the
   <paramref name="savedState"/> parameter might have been deleted at some
      point after the installation was complete. If the file is deleted, the
   <paramref name="savedState"/> parameter is <see langword="null"/>. Your <see cref="System.Configuration.Install.Installer.Uninstall"/> method should be able to handle
      the case of <see langword="null"/>
				<paramref name="savedState"/> parameter.
      
   </note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Uninstall"/> method 
   of <see cref="System.Configuration.Install.Installer"/>. The <see cref="System.Configuration.Install.Installer.Uninstall"/> method
   is overridden in the derived class of <see cref="System.Configuration.Install.Installer"/>. </para>
			<codelink SampleID="Installer_Uninstall" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Install"/>
		<seealso cref="System.Configuration.Install.Installer.Commit"/>
		<seealso cref="System.Configuration.Install.Installer.Rollback"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.Installer.Installers"/>
	</doc>
	<doc for="Installer.Parent">
		<summary>
			<para>Gets or sets the installer containing the collection that this installer belongs
      to.</para>
		</summary>
		<value>
			<para>An <see cref="System.Configuration.Install.Installer"/>
containing the collection that this instance belongs to, or
<see langword="null"/> if
this instance does not belong to a
collection.</para>
		</value>
		<remarks>
			<para>If this instance of <see cref="System.Configuration.Install.Installer"/> is part of an installer collection,
   the <see cref="System.Configuration.Install.Installer.Parent"/> property is set to the <see cref="System.Configuration.Install.Installer"/>
   instance that contains the collection. For an example of the use of
   the <see cref="System.Configuration.Install.Installer.Installers"/> collection, see the
<see cref="System.Configuration.Install.AssemblyInstaller"/>
class.</para>
			<para>The <see cref="System.Configuration.Install.Installer.Installers"/> property contains a collection of
installers. The <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, and <see cref="System.Configuration.Install.Installer.Uninstall"/> methods of the <see cref="System.Configuration.Install.Installer"/> class go through the
collection of installers and invokes the corresponding method of each installer. </para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Parent"/> 
property. The <see cref="System.Configuration.Install.Installer.Parent"/> property gets the
<see cref="System.Configuration.Install.Installer"/>containing the collection that this <see cref="System.Configuration.Install.Installer"/>belongs to.</para>
			<codelink SampleID="Installer_Installers" SnippetID="2"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Commit"/>
		<seealso cref="System.Configuration.Install.Installer.Install"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.Installer.Installers"/>
		<seealso cref="System.Configuration.Install.Installer.Rollback"/>
		<seealso cref="System.Configuration.Install.Installer.Uninstall"/>
	</doc>
	<doc for="Installer.OnCommitting">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.Committing"/>
event.</para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property are committed. </param>
		<remarks>
			<para> This method is called before the <see cref="System.Configuration.Install.Installer.Commit"/>
methods of the installers in this instance's <see cref="System.Configuration.Install.InstallerCollection"/> run.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnCommitting"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnCommitting"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnCommitting"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.OnCommitting"/> method 
   of the <see cref="System.Configuration.Install.Installer"/> class. The
<see cref="System.Configuration.Install.Installer.OnCommitting"/> method 
   is overridden in the derived class. Space is provided for the user to add
   the steps to be performed before committing and after committing.</para>
			<codelink SampleID="Installer_Committed" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
	<doc for="Installer.OnCommitted">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.Committed"/> event.
   </para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer after all the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property run.</param>
		<remarks>
			<para> This method is called after the <see cref="System.Configuration.Install.Installer.Commit"/> methods of all the
   installers contained in this instance's installer
   collection
   run.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnCommitted"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnCommitted"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnCommitted"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.OnCommitted"/> method 
   of the <see cref="System.Configuration.Install.Installer"/> class. The
<see cref="System.Configuration.Install.Installer.OnCommitted"/> method 
   is overridden in the derived class. Space is provided for the user to add
   the steps to be performed before committing and after committing.</para>
			<codelink SampleID="Installer_Committed" SnippetID="2"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
	<doc for="Installer.OnAfterInstall">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.AfterInstall"/> event.
   </para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer after all the installers contained in the <see cref="System.Configuration.Install.Installer.Installers"/> property have completed their installations.</param>
		<remarks>
			<para> This method is called after the <see cref="System.Configuration.Install.Installer.Install"/> methods
   of all the installers in this instance's <see cref="System.Configuration.Install.InstallerCollection"/> run.
   </para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnAfterInstall"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnAfterInstall"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnAfterInstall"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.OnAfterInstall"/> method. 
   This method is overridden in the derived class. Space is provided to
   add steps to be done before the installation in the <see cref="System.Configuration.Install.Installer.OnAfterInstall"/> method. </para>
			<codelink SampleID="Installer_OnInstall" SnippetID="2"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
	<doc for="Installer.Committed">
		<summary>
			<para>Occurs after all the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property have committed their
   installations.</para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Committed"/> event. 
   It is raised by the <see cref="System.Configuration.Install.Installer.OnCommitted"/> method.</para>
			<codelink SampleID="Installer_Committed1" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Committing"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
	</doc>
	<doc for="Installer.Committing">
		<summary>
			<para>Occurs before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/>property committ their
   installations.</para>
		</summary>
		<example>
			<para> The following example demonstrates the<see cref="System.Configuration.Install.Installer.Committing"/> event. It is raised by 
   the<see cref="System.Configuration.Install.Installer.OnCommitting"/> method. </para>
			<codelink SampleID="Installer_Committing" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Committed"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
	</doc>
	<doc for="Installer">
		<summary>
			<para> Provides the foundation for custom installations.</para>
		</summary>
		<remarks>
			<para> This is the base class for all custom installers in
      the .NET Framework. Installers are components that help install applications on a computer.</para>
			<para>There are several steps you must follow to use an
   <see cref="System.Configuration.Install.Installer"/>:
      </para>
			<list type="bullet"><item>
					<term>
         
         Inherit the <see cref="System.Configuration.Install.Installer"/> class.</term>
				</item>
				<item>
					<term>
         
         Override the <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, and <see cref="System.Configuration.Install.Installer.Uninstall"/> methods.</term>
				</item>
				<item>
					<term>
         
         Add the <see cref="T:System.ComponentModel.RunInstallerAttribute"/> to your derived class and set it to
      <see langword="true"/>.</term>
				</item>
				<item>
					<term>
         
         Put your derived class in the assembly with your
         application to install.</term>
				</item>
				<item>
					<term>
         
         Invoke the installers. For example, use the InstallUtil.exe to invoke
         the installers.</term>
				</item>
			</list>
			<para>The <see cref="System.Configuration.Install.Installer.Installers"/>
property contains a collection of installers. If this instance of <see cref="System.Configuration.Install.Installer"/> is part of an installer collection,
the <see cref="System.Configuration.Install.Installer.Parent"/> property is set to the <see cref="System.Configuration.Install.Installer"/>
instance that contains the collection. For an example of the use of
the <see cref="System.Configuration.Install.Installer.Installers"/> collection, see the
<see cref="System.Configuration.Install.AssemblyInstaller"/>
class.</para>
			<para> The <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, and <see cref="System.Configuration.Install.Installer.Uninstall"/> methods of the <see cref="System.Configuration.Install.Installer"/> class
go through the collection of installers stored in the <see cref="System.Configuration.Install.Installer.Installers"/>
property, and invokes the corresponding method of each installer. </para>
			<para>The <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, and <see cref="System.Configuration.Install.Installer.Uninstall"/> methods are not always
called on the same <see cref="System.Configuration.Install.Installer"/> instance. For example, one
<see cref="System.Configuration.Install.Installer"/> 
instance might be used while installing and committing an application, and then the reference to that instance
is released. Later, uninstalling
the application creates a reference to a new <see cref="System.Configuration.Install.Installer"/>
instance, meaning that
the <see cref="System.Configuration.Install.Installer.Uninstall"/> method is called by a different
instance of <see cref="System.Configuration.Install.Installer"/>. For this reason, in your derived class, do not save
the state of a computer in an installer. Instead, use an <see cref="T:System.Collections.IDictionary"/> that is preserved across calls and
passed into your <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, and <see cref="System.Configuration.Install.Installer.Uninstall"/> methods.</para>
			<para>Two situations illustrate the need to save information
   in the state-saver <see cref="T:System.Collections.IDictionary"/>. First, suppose that your installer sets a
   registry key. It should save the key's original value in the <see cref="T:System.Collections.IDictionary"/>. If the installation is rolled back, the
   original value can be restored. Second, suppose the installer replaces an
   existing file. Save the existing file in a temporary directory and the location
   of the new location of the file in the <see cref="T:System.Collections.IDictionary"/>. If the installation is
   rolled back, the newer file is deleted and replaced by the original from the
   temporary location.</para>
			<para>The <see cref="System.Configuration.Install.Installer.Context" qualify="true"/>
property contains information about the installation. For example, information about
the location of the log file for the installation, the location of the file to
save information required by the <see cref="System.Configuration.Install.Installer.Uninstall"/> method, and the
command line that was entered when the installation executable was run.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the use of the <see cref="System.Configuration.Install.Installer"/> class. It
   creates a class which inherits from <see cref="System.Configuration.Install.Installer"/>. When
<see cref="System.Configuration.Install.Installer.Commit"/>is about to complete, 
<see cref="System.Configuration.Install.Installer.Committing"/> event occurs and a 
   message is displayed.</para>
			<codelink SampleID="Installer" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.AssemblyInstaller"/>
		<seealso cref="System.Configuration.Install.ComponentInstaller"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.TransactedInstaller"/>
		<seealso topic="cpconInstallerUtilityInstallutilexe"/>
	</doc>
	<doc for="Installer.Context">
		<summary>
			<para> Gets
      or sets information about the current installation.</para>
		</summary>
		<value>
			<para>An <see cref="System.Configuration.Install.InstallContext"/> that contains information about the
   current installation.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Configuration.Install.Installer.Context"/>
property contains installation information. For example, information about
the location of the log file for the installation, the location of the file to
save information required by the <see cref="System.Configuration.Install.Installer.Uninstall"/> method, and the
command line that was entered when the installation executable was run.</para>
			<para> The program
   that calls the <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, or <see cref="System.Configuration.Install.Installer.Uninstall"/> methods sets the <see cref="System.Configuration.Install.Installer.Context"/> property with information
   that the methods need.</para>
			<para> If an installer belongs to an installer
   collection, the parent installer sets the <see cref="System.Configuration.Install.Installer.Context"/> property before calling any of
   these methods. The parent installer can be accessed through the <see cref="System.Configuration.Install.Installer.Parent"/> property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Context"/> property of the
<see cref="System.Configuration.Install.Installer"/> class. 
   The contents of the <see cref="System.Configuration.Install.Installer.Context"/> property contain
   information about the location of the log file for the installation, the
   location of the file to save information required by the <see cref="System.Configuration.Install.Installer.Uninstall"/>method, and the
   command line that was entered when the installation executable was run. These
   contents are then displayed
   on the console.</para>
			<codelink SampleID="Installer_Context" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Commit"/>
		<seealso cref="System.Configuration.Install.Installer.Install"/>
		<seealso cref="System.Configuration.Install.InstallContext"/>
		<seealso cref="System.Configuration.Install.Installer.Parent"/>
		<seealso cref="System.Configuration.Install.Installer.Rollback"/>
		<seealso cref="System.Configuration.Install.Installer.Uninstall"/>
	</doc>
	<doc for="Installer.HelpText">
		<summary>
			<para>Gets the help text for all the installers in the installer collection.</para>
		</summary>
		<value>
			<para>The help text for all the installers in the installer collection, including the description of what the installer
      does and the command line options for the installation executable, such as the
      InstallUtil.exe utility, that can be passed to and understood by this
      installer.</para>
		</value>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.HelpText"/>
property. This property is defined in the <see cref="System.Configuration.Install.Installer"/> class, which, when called, returns
the description of the <see cref="System.Configuration.Install.Installer"/> and the command line options
for the installation executable, such as the Installutil.exe utility, that can
be passed to and understood by the <see cref="System.Configuration.Install.Installer"/>.</para>
			<codelink SampleID="Installer_HelpText" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Installers"/>
	</doc>
	<doc for="Installer.AfterRollback">
		<summary>
			<para>Occurs after the installations of all the installers in
      the <see cref="System.Configuration.Install.Installer.Installers"/>
      property are rolled back.</para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.AfterRollback"/> event. It overrides
   the <see cref="System.Configuration.Install.Installer.Install"/> method
   and explicitly throws an <see cref="System.ArgumentException"/> so that the <see cref="System.Configuration.Install.Installer.Rollback"/> method is
   called. When the <see cref="System.Configuration.Install.Installer.Rollback"/> is completed, the
<see cref="System.Configuration.Install.Installer.AfterRollback"/> event occurs and a 
   message is displayed.</para>
			<codelink SampleID="Installer_AfterRollback" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.BeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
	</doc>
	<doc for="Installer.BeforeRollback">
		<summary>
			<para>Occurs before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/>
property are rolled back.</para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.BeforeRollback"/> event.
   It overrides the <see cref="System.Configuration.Install.Installer.Install"/> method and explicitly
   throws an <see cref="System.ArgumentException"/> so that the <see cref="System.Configuration.Install.Installer.Rollback"/> method is
   called. When the <see cref="System.Configuration.Install.Installer.Rollback"/> is complete, the <see cref="System.Configuration.Install.Installer.BeforeRollback"/> event occurs and a
   message is displayed.</para>
			<codelink SampleID="Installer_BeforeRollback" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.AfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
	</doc>
	<doc for="Installer.Commit">
		<summary>
			<para>When overridden in a derived class, completes the install transaction. </para>
		</summary>
		<param name="savedState">An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer after all the installers in the collection have run.</param>
		<exception cref="T:System.ArgumentException"><para>The <paramref name="savedState"/> parameter is <see langword="null"/>.</para>
			<para>-or-</para>
			<para> The saved-state <see cref="T:System.Collections.IDictionary"/> might have been corrupted.</para></exception>
		<exception cref="T:System.Configuration.Install.InstallException"><para>An exception occurred during the <see cref="System.Configuration.Install.Installer.Commit"/> phase of the installation. This exception is ignored and the installation continues. However, the application might not function correctly after the installation is complete.</para></exception>
		<remarks>
			<note type="inheritinfo">
      If
      you
      override the <see cref="System.Configuration.Install.Installer.Commit"/> method in a derived
      class, be sure to call the base class's <see cref="System.Configuration.Install.Installer.Commit"/> method first in your
      derived
      method.
      The <see cref="System.Configuration.Install.Installer.Commit"/> method is called only if the <see cref="System.Configuration.Install.Installer.Install"/> method of each
      installer in this instance's <see cref="System.Configuration.Install.InstallerCollection"/>
      succeeds. The <see cref="System.Configuration.Install.Installer.Commit"/> method stores
      information needed to do a correct uninstallation, and calls the <see cref="System.Configuration.Install.Installer.Commit"/>
      method of each
      installer in the collection.
      
   </note>
		</remarks>
		<example>
			<para> The following example demonstrates the <see cref="System.Configuration.Install.Installer.Commit"/> method
   of the <see cref="System.Configuration.Install.Installer"/> class. A class is derived from the
<see cref="System.Configuration.Install.Installer"/>base class and the <see cref="System.Configuration.Install.Installer.Commit"/>
method are overridden.</para>
			<codelink SampleID="Installer_Install" SnippetID="2"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Install"/>
		<seealso cref="System.Configuration.Install.Installer.Uninstall"/>
		<seealso cref="System.Configuration.Install.Installer.Rollback"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.Installer.Installers"/>
	</doc>
	<doc for="Installer.Install">
		<summary>
			<para>When overridden in a derived class, performs the installation. </para>
		</summary>
		<param name="stateSaver"><para>An <see cref="T:System.Collections.IDictionary"/> used to save information needed to perform a commit, rollback, or uninstall operation. </para></param>
		<exception cref="T:System.ArgumentException">The <paramref name="stateSaver"/> parameter is <see langword="null"/>.</exception>
		<exception cref="T:System.Exception"><para>An exception occurred in the <see cref="System.Configuration.Install.Installer.BeforeInstall"/> event handler of one of the installers in the collection.</para>
			<para>-or-</para>
			<para>An exception occurred in the <see cref="System.Configuration.Install.Installer.AfterInstall"/> event handler of one of the installers in the collection.</para></exception>
		<remarks>
			<note type="inheritinfo">
      If you override the <see cref="System.Configuration.Install.Installer.Install"/>
      method in a derived class, be sure to call the base class's <see cref="System.Configuration.Install.Installer.Install"/> method first in your
      derived method. The <see cref="System.Configuration.Install.Installer.Install"/> method calls the <see cref="System.Configuration.Install.Installer.Install"/> method of each
      installer contained in the <see cref="System.Configuration.Install.Installer.Installers"/> property of this
      instance. After the contained installers run, this method
      updates the <see cref="T:System.Collections.IDictionary"/> object (specified
      through the <paramref name="stateSaver"/>
      parameter) to reflect the status of the installation.
      The <see cref="T:System.Collections.IDictionary"/> should
      be empty when passed to the <see cref="System.Configuration.Install.Installer.Install"/> method.
      If all the <see cref="System.Configuration.Install.Installer.Install"/> methods succeed,
      the <see cref="System.Configuration.Install.Installer.Commit"/>
      method is called. Otherwise, the <see cref="System.Configuration.Install.Installer.Rollback"/>
      method is called.
      
   </note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Install"/>method
   of the <see cref="System.Configuration.Install.Installer"/> class. A class is derived from the
<see cref="System.Configuration.Install.Installer"/>base class and the <see cref="System.Configuration.Install.Installer.Install"/> method is 
   overridden.</para>
			<codelink SampleID="Installer_Install" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.Commit"/>
		<seealso cref="T:System.Collections.IDictionary"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.Installer.Installers"/>
		<seealso cref="System.Configuration.Install.Installer.Rollback"/>
		<seealso cref="System.Configuration.Install.Installer.Uninstall"/>
	</doc>
	<doc for="Installer.Installers">
		<summary>
			<para> Gets the collection of installers that this installer
      contains.</para>
		</summary>
		<value>
			<para>An <see cref="System.Configuration.Install.InstallerCollection"/>
containing the collection of installers associated with this
installer.</para>
		</value>
		<remarks>
			<para>The <see cref="System.Configuration.Install.Installer.Installers"/> property contains a
   collection of installers that install objects needed by this <see cref="System.Configuration.Install.Installer"/> instance to correctly install the
   component. The <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, and <see cref="System.Configuration.Install.Installer.Uninstall"/> methods of the <see cref="System.Configuration.Install.Installer"/> class go through the
   collection of installers and invokes the corresponding method of each installer. </para>
			<para>If this instance of <see cref="System.Configuration.Install.Installer"/> is contained in an installer collection,
the <see cref="System.Configuration.Install.Installer.Parent"/> property is the <see cref="System.Configuration.Install.Installer"/>
instance that contains the collection. For an example of the use of
the <see cref="System.Configuration.Install.Installer.Installers"/> collection, see the
<see cref="System.Configuration.Install.AssemblyInstaller"/>
class.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.Installers"/> and
<see cref="System.Configuration.Install.Installer.Parent"/> 
properties. The <see cref="System.Configuration.Install.Installer.Installers"/> property shows the
<see cref="System.Configuration.Install.InstallerCollection"/> associated with an 
<see cref="System.Configuration.Install.Installer"/>. </para>
			<codelink SampleID="Installer_Installers" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.AssemblyInstaller"/>
		<seealso cref="System.Configuration.Install.Installer.Commit"/>
		<seealso cref="System.Configuration.Install.ComponentInstaller"/>
		<seealso cref="System.Configuration.Install.Installer.Install"/>
		<seealso cref="System.Configuration.Install.InstallerCollection"/>
		<seealso cref="System.Configuration.Install.Installer.Parent"/>
		<seealso cref="System.Configuration.Install.Installer.Rollback"/>
		<seealso cref="System.Configuration.Install.TransactedInstaller"/>
		<seealso cref="System.Configuration.Install.Installer.Uninstall"/>
	</doc>
	<doc for="Installer.OnBeforeInstall">
		<summary>
			<para> Raises the <see cref="System.Configuration.Install.Installer.BeforeInstall"/>
event.</para>
		</summary>
		<param name="savedState"><para>An <see cref="T:System.Collections.IDictionary"/> that contains the state of the computer before the installers in the <see cref="System.Configuration.Install.Installer.Installers"/> property are installed. This <see cref="T:System.Collections.IDictionary"/> object should be empty at this point. </para></param>
		<remarks>
			<para> This method is called before the <see cref="System.Configuration.Install.Installer.Install"/>
methods of the installers in this
instance's <see cref="System.Configuration.Install.InstallerCollection"/>
are
called.</para>
			<para>Raising an event invokes the event handler through a delegate. For more
   information, see <see topic="cpconProvidingEventFunctionality"/>. </para>
			<para>The <see cref="System.Configuration.Install.Installer.OnBeforeInstall"/> method also allows
derived classes to handle the event without attaching a delegate. This is the
preferred technique for handling the event in a derived class.</para>
			<note type="inheritinfo">
   When overriding
<see cref="System.Configuration.Install.Installer.OnBeforeInstall"/> in a derived class, be 
   sure to call the base class's <see cref="System.Configuration.Install.Installer.OnBeforeInstall"/> method
   so that registered delegates receive the event.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.OnBeforeInstall"/> method.
   This method is overridden in the derived class. Space is provided to
   add steps to be done before the installation in the <see cref="System.Configuration.Install.Installer.OnBeforeInstall"/> method. </para>
			<codelink SampleID="Installer_OnInstall" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitting"/>
		<seealso cref="System.Configuration.Install.Installer.OnCommitted"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeRollback"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
	<doc for="Installer.AfterInstall">
		<summary>
			<para> Occurs after the <see cref="System.Configuration.Install.Installer.Install"/> methods of all the installers in
   the <see cref="System.Configuration.Install.Installer.Installers"/>
   property have run.
   </para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.AfterInstall"/> event. It
   is raised by the <see cref="System.Configuration.Install.Installer.OnAfterInstall"/> method.</para>
			<codelink SampleID="Installer_AfterInstall" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.BeforeInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterInstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeInstall"/>
	</doc>
	<doc for="Installer.AfterUninstall">
		<summary>
			<para>Occurs after all the installers in the <see cref="System.Configuration.Install.Installer.Installers"/>property perform their
   uninstallation operations.</para>
		</summary>
		<example>
			<para>The following example demonstrates the <see cref="System.Configuration.Install.Installer.AfterUninstall"/> event.
   It is raised by the <see cref="System.Configuration.Install.Installer.OnAfterUninstall"/> method.</para>
			<codelink SampleID="Installer_AfterUninstall" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer.BeforeUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnAfterUninstall"/>
		<seealso cref="System.Configuration.Install.Installer.OnBeforeUninstall"/>
	</doc>
</docs>
