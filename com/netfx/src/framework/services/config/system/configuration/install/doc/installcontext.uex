<docs>
	<doc for="InstallContext.Finalize">
		<summary>
			<para>
       Closes the log file, if one was created for the installation.
    </para>
		</summary>
	</doc>
	<doc for="InstallContext.ParseCommandLine">
		<summary>
			<para> Parses the command-line parameters into a string
      dictionary.</para>
		</summary>
		<param name="args">An array containing the command-line parameters.</param>
		<returns>
			<para>A <see cref="T:System.Collections.Specialized.StringDictionary"/> containing the parsed command-line
   parameters.</para>
		</returns>
		<seealso cref="System.Configuration.Install.InstallContext.Parameters"/>
		<seealso cref="System.Configuration.Install.InstallContext.IsParameterTrue"/>
	</doc><doc for="InstallContext.InstallContext">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Configuration.Install.InstallContext"/> class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Configuration.Install.InstallContext"/>
class.</para>
		</summary>
		<remarks>
			<para>This overload does not create a log file for the installation.</para>
		</remarks>
		<example>
			<note type="note">
      This example shows how to use
      one of the overloaded versions of the <see cref="System.Configuration.Install.InstallContext"/> constructor. For other
      examples that might be available, see the individual overload topics.
   </note>
			<para>When the program is invoked without any arguments, an empty <see cref="System.Configuration.Install.InstallContext"/> is created.</para>
			<codelink SampleID="InstallContext_InstallContext" SnippetID="2"/>
		</example>
	</doc>
	<doc for="InstallContext.InstallContext1">
		<summary>
			<para>Initializes a new instance of the
   <see cref="System.Configuration.Install.InstallContext"/> class, and creates a log file for
      the installation.</para>
		</summary>
		<param name="logFilePath">The path to the log file for this installation, or <see langword="null"/> if no log file should be created.</param>
		<param name="commandLine">The command-line parameters entered when running the installation program, or <see langword="null"/> if none were entered.</param>
		<remarks>
			<para> If the installation uses
   <see topic="cpconInstallerUtilityInstallutilexe"/> , this constructor creates a log file at the
      specified path and parses the array of command-line parameters into the <see cref="System.Configuration.Install.InstallContext.Parameters"/> property.
      If a log-file path is specified in the command-line parameters, it is used to
      create the file. If the log file argument is not specified in the command line,
      the value of the <paramref name="logFilePath"/> parameter is used. To
      suppress the creation of a log file, pass the "/logfile=
      " command-line
      parameter.</para>
			<note type="cnotes">
      Pass your default log-file path in the <paramref name="logFilePath"/>
      parameter when you
      call this constructor. This is the where the log file is created,
      unless the /logfile command-line parameter is used when the installation executable is
      run.
      
   </note>
		</remarks>
		<example>
			<para>This example is an excerpt of the example in the class overview of<see cref="System.Configuration.Install.InstallContext"/>
class.</para>
			<para> When "/LogFile" and "/LogtoConsole" are specified, the <see cref="System.Configuration.Install.InstallContext"/> is 
created by passing the respective arguments to <see cref="M:System.Configuration.Install.InstallContext.#ctor"/> . </para>
			<codelink SampleID="InstallContext_InstallContext" SnippetID="3"/>
		</example>
		<seealso cref="System.Configuration.Install.InstallContext.Parameters"/>
		<seealso cref="System.Configuration.Install.InstallContext.LogMessage"/>
	</doc>
	<doc for="InstallContext.Parameters">
		<summary>
			<para> Gets the
      command-line parameters that
      were entered when InstallUtil.exe was run.</para>
		</summary>
		<value>
			<para>A <see cref="T:System.Collections.Specialized.StringDictionary"/> that represents the
   command-line parameters that were
   entered when the installation executable was run.</para>
		</value>
		<remarks>
			<para>When a new <see cref="System.Configuration.Install.InstallContext"/> is created, the command-line
   parameters are parsed into the <see cref="System.Configuration.Install.InstallContext.Parameters"/> property. Both the
   keys and the values of the
   parameters are strings.</para>
		</remarks>
		<example>
			<para>This example is an excerpt of the example in the class
      overview of <see cref="System.Configuration.Install.InstallContext"/>
      class.</para>
			<para>The sample retrieves the <see cref="System.Configuration.Install.InstallContext.Parameters"/> property to see if
   any command line argument has been entered by the user. It also uses
   the <see cref="System.Configuration.Install.InstallContext.IsParameterTrue"/> method to find out
   if the <c>LogtoConsole</c> parameter has been set. If
<see langword="yes"/>
, it will then use the
<see cref="System.Configuration.Install.InstallContext.LogMessage"/> method to write 
status messages to the installation log file and the console. </para>
			<codelink SampleID="InstallContext_InstallContext" SnippetID="6"/>
		</example>
		<seealso cref="T:System.Collections.Specialized.StringDictionary"/>
	</doc>
	<doc for="InstallContext.IsParameterTrue">
		<summary>
			<para> Determines whether the specified command-line parameter
      is <see langword="true"/>.</para>
		</summary>
		<param name="paramName">The name of the command-line parameter to check.</param>
		<returns>
			<para><see langword="true"/> if the specified parameter is set to "yes", "true", "1",
   or an empty string (""); otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>This method accesses the <see cref="System.Configuration.Install.InstallContext.Parameters"/>
property, which contains a parsed version of the command-line parameters, to determine
whether the specified parameter is <see langword="true"/>.</para>
		</remarks>
		<example>
			<para>This example is an excerpt of the sample in the class overview
      of the <see cref="System.Configuration.Install.InstallContext"/>
      class.</para>
			<para>It uses the <see cref="System.Configuration.Install.InstallContext.IsParameterTrue"/> method to find out
   if the <c>LogtoConsole</c>
parameter has been set. If <see langword="yes"/>
, it will then use the <see cref="System.Configuration.Install.InstallContext.LogMessage"/> method to write
status messages to the installation log file and the console. </para>
			<codelink SampleID="InstallContext_InstallContext" SnippetID="4"/>
		</example>
		<seealso cref="System.Configuration.Install.InstallContext.Parameters"/>
	</doc>
	<doc for="InstallContext.LogMessage">
		<summary>
			<para> Writes a message
      to the console and to the log file
      for the installation.
      </para>
		</summary>
		<param name="message">The message to write. </param>
		<remarks>
			<para> An installer can call this method
      to write progress or other status information to the log file. If the command-line parameters specify that
      a user interface should be displayed, the installer should show message boxes or
      make queries in addition to calling the <see cref="System.Configuration.Install.InstallContext.LogMessage"/> method. Text written to
      the log file will not be seen by the user unless InstallUtil.exe is used to run
      the installation and "/LogToConsole=
      true"
      is specified in the command
      line.
      </para>
		</remarks>
		<example>
			<para>This example is an excerpt of the example in the class
      overview of <see cref="System.Configuration.Install.InstallContext"/>
      class.</para>
			<para>It uses the <see cref="System.Configuration.Install.InstallContext.IsParameterTrue"/> method to find out
   if the <c>LogtoConsole</c>
parameter has been set. If <see langword="yes"/>
, it will then use the <see cref="System.Configuration.Install.InstallContext.LogMessage"/> method to write
status messages to the installation log file and the console. </para>
			<codelink SampleID="InstallContext_InstallContext" SnippetID="4"/>
		</example>
		<seealso cref="System.Configuration.Install.InstallContext.Parameters"/>
	</doc>
	<doc for="InstallContext">
		<summary>
			<para>Contains information about the current installation.</para>
		</summary>
		<remarks>
			<para>Typically, an <see cref="System.Configuration.Install.InstallContext"/>
is created by an installation executable, such as
InstallUtil.exe, that installs assemblies. The installation program invokes the <see cref="System.Configuration.Install.InstallContext"/> constructor,
passing it the default log-file path and command-line parameters.</para>
			<para>Prior to calling its <see cref="System.Configuration.Install.Installer.Install"/>, <see cref="System.Configuration.Install.Installer.Commit"/>, <see cref="System.Configuration.Install.Installer.Rollback"/>, or <see cref="System.Configuration.Install.Installer.Uninstall"/> methods, the installation program sets the <see cref="System.Configuration.Install.Installer.Context"/> property of an <see cref="System.Configuration.Install.Installer"/>
to the instance of <see cref="System.Configuration.Install.InstallContext"/>. Before calling these
methods,
an <see cref="System.Configuration.Install.Installer"/> that
contains an installer collection in the <see cref="System.Configuration.Install.Installer.Installers"/> property sets the <see cref="System.Configuration.Install.Installer.Context"/>
property of each contained installer.</para>
			<para>The <see cref="System.Configuration.Install.InstallContext.Parameters"/>
property contains a
parsed version of the command line that is entered to run the
installation executable. The property contains information such as the path to a log file, whether
to display log information on the console, and whether to show a user interface
during the installation. Call the <see cref="System.Configuration.Install.InstallContext.IsParameterTrue"/> method to find out whether a
command-line parameter is <see langword="true"/>.</para>
			<para>Use
   the <see cref="System.Configuration.Install.InstallContext.LogMessage"/> method
   to write status messages to the installation log file and the
   console.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="M:System.Configuration.Install.InstallContext.#ctor"/> constructors, the <see cref="System.Configuration.Install.InstallContext.Parameters"/> property and
   the <see cref="System.Configuration.Install.InstallContext.LogMessage"/> and <see cref="System.Configuration.Install.InstallContext.IsParameterTrue"/> methods of
   the <see cref="System.Configuration.Install.InstallContext"/> class. </para>
			<para>When the <see cref="System.Configuration.Install.Installer.Install"/> method of the installer is called, it checks
for parameters from the command line. Depending on that, it displays the
progress messages onto the console and also saves it to the specified log
file. </para>
			<para>When the program is invoked without any arguments, an empty <see cref="System.Configuration.Install.InstallContext"/> is created.
When "/LogFile" and "/LogtoConsole" are specified, the <see cref="System.Configuration.Install.InstallContext"/> is
created by passing the respective arguments to <see cref="M:System.Configuration.Install.InstallContext.#ctor"/>. </para>
			<codelink SampleID="InstallContext_InstallContext" SnippetID="1"/>
		</example>
		<seealso cref="System.Configuration.Install.Installer"/>
		<seealso cref="System.Configuration.Install.TransactedInstaller"/>
		<seealso cref="System.Configuration.Install.AssemblyInstaller"/>
	</doc>
</docs>
