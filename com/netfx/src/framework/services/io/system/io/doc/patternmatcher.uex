<docs>
   <doc for="PatternMatcher.MATCHES_ARRAY_SIZE">
 <summary>
     Private constants (directly from C header files)
 </summary>
   </doc>
   <doc for="PatternMatcher.MatchPattern">
 <summary>
     Tells whether a given name matches the expression given with the same
     (looser) semantics that the DOS or NT Command prompt has.
 </summary>
 <param name='expression'>
     Expression used to match.  May contain '?', '*' and/or valid filename characters.
 </param>
 <param name='name'>
     Filename to match.
 </param>
 <returns>
     Returns true if name matches the expression.  False otherwise.
 </returns>
   </doc>
   <doc for="PatternMatcher.StrictMatchPattern">
 <summary>
     Tells whether a given name matches the expression given with a strict (i.e. UNIX like)
     semantics.  This code is a port of unmanaged code.  Original code comment follows:

    Routine Description:

        This routine compares a Dbcs name and an expression and tells the caller
        if the name is in the language defined by the expression.  The input name
        cannot contain wildcards, while the expression may contain wildcards.

        Expression wild cards are evaluated as shown in the nondeterministic
        finite automatons below.  Note that ~* and ~? are DOS_STAR and DOS_QM.


                 ~* is DOS_STAR, ~? is DOS_QM, and ~. is DOS_DOT


                                           S
                                        &lt;-----&lt;
                                     X  |     |  e       Y
                 X * Y ==       (0)-----&gt;-(1)-&gt;-----(2)-----(3)


                                          S-.
                                        &lt;-----&lt;
                                     X  |     |  e       Y
                 X ~* Y ==      (0)-----&gt;-(1)-&gt;-----(2)-----(3)



                                    X     S     S     Y
                 X ?? Y ==      (0)---(1)---(2)---(3)---(4)



                                    X     .        .      Y
                 X ~.~. Y ==    (0)---(1)----(2)------(3)---(4)
                                       |      |________|
                                       |           ^   |
                                       |_______________|
                                          ^EOF or .^


                                    X     S-.     S-.     Y
                 X ~?~? Y ==    (0)---(1)-----(2)-----(3)---(4)
                                       |      |________|
                                       |           ^   |
                                       |_______________|
                                          ^EOF or .^



             where S is any single character

                   S-. is any single character except the final .

                   e is a null character transition

                   EOF is the end of the name string

        In words:

            * matches 0 or more characters.

            ? matches exactly 1 character.

            DOS_STAR matches 0 or more characters until encountering and matching
                the final . in the name.

            DOS_QM matches any single character, or upon encountering a period or
                end of name string, advances the expression to the end of the
                set of contiguous DOS_QMs.

            DOS_DOT matches either a . or zero characters beyond name string.

    Arguments:

        Expression - Supplies the input expression to check against

        Name - Supplies the input name to check for.

    Return Value:

        BOOLEAN - TRUE if Name is an element in the set of strings denoted
            by the input Expression and FALSE otherwise.

 </summary>
 <param name='expression'>
     Expression used to match.  May contain '?', '*' and/or valid filename characters.
 </param>
 <param name='name'>
     Filename to match.
 </param>
 <returns>
     Returns true if name matches the expression.  False otherwise.
 </returns>
   </doc>
</docs>

