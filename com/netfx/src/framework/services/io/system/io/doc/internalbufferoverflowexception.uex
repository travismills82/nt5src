<docs>
	<doc for="InternalBufferOverflowException">
		<summary>
			<para> The exception thrown when the internal buffer overflows.</para>
		</summary>
		<remarks>
			<para>In a <see cref="System.IO.FileSystemWatcher"/> ,
   when you are notified of file changes, the system stores those
   changes in a buffer the component creates and passes to the Application Programming Interfaces (APIs). If
   there are many changes in a short time, the buffer can
   easily overflow, resulting in an exception being thrown, which essentially loses all changes. To keep
   the buffer from overflowing, use
   the <see cref="System.IO.FileSystemWatcher.NotifyFilter" qualify="true"/> and <see cref="System.IO.FileSystemWatcher.IncludeSubdirectories" qualify="true"/> properties to filter out your unwanted change
   notifications. You can also increase the size of the internal buffer through the
<see cref="System.IO.FileSystemWatcher.InternalBufferSize" qualify="true"/> 
property. However, increasing the size of the buffer is expensive,
so keep the buffer as small as possible.</para>
		</remarks>
		<seealso cref="System.IO.FileSystemEventArgs"/>
		<seealso cref="System.IO.FileSystemEventHandler"/>
		<seealso cref="System.IO.FileSystemWatcher"/>
		<seealso cref="System.IO.FileSystemWatcher.IncludeSubdirectories"/>
		<seealso cref="System.IO.FileSystemWatcher.InternalBufferSize"/>
		<seealso cref="System.IO.FileSystemWatcher.NotifyFilter"/>
		<seealso cref="System.IO.NotifyFilters"/>
		<seealso cref="System.IO.RenamedEventArgs"/>
		<seealso cref="System.IO.RenamedEventHandler"/>
		<seealso cref="System.IO.WaitForChangedResult"/>
		<seealso cref="System.IO.WatcherChangeTypes"/>
	</doc><doc for="InternalBufferOverflowException.InternalBufferOverflowException">
		<overload>
			<para>Initializes a new instance of the <see cref="System.IO.InternalBufferOverflowException"/>
class.</para>
		</overload>
		<summary>
			<para>Initializes a new default instance of the <see cref="System.IO.InternalBufferOverflowException"/> class.</para>
		</summary>
		<remarks>
			<para> These constructors are
      used by the component to signify an error. Only use them if extending the class
      or the .NET Framework. This exception indicates an internal buffer has overflowed
      and users should take appropriate steps in their code to ensure it recovers
      properly. The cause of the overflow is often too many changes in a short period of
      time, causing the internal notification buffer to overflow. To resolve this, use
      the <see cref="System.IO.FileSystemWatcher.NotifyFilter" qualify="true"/> and <see cref="System.IO.FileSystemWatcher.IncludeSubdirectories" qualify="true"/> properties to filter out unwanted change
      notifications. You can also increase the size of the internal buffer through the
   <see cref="System.IO.FileSystemWatcher.InternalBufferSize" qualify="true"/> property. However, increasing the size
      of the buffer is expensive, so keep the buffer as small as
      possible.</para>
		</remarks>
		<seealso cref="System.IO.FileSystemWatcher"/>
		<seealso cref="System.IO.FileSystemWatcher.IncludeSubdirectories" qualify="true"/>
		<seealso cref="System.IO.FileSystemWatcher.NotifyFilter" qualify="true"/>
		<seealso cref="System.IO.FileSystemWatcher.InternalBufferSize"/>
	</doc><doc for="InternalBufferOverflowException.InternalBufferOverflowException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.InternalBufferOverflowException"/> class with the error
   message to be displayed
   specified.</para>
		</summary>
		<param name="message">The message to be given for the exception.</param>
		<remarks>
			<para> These constructors are
      used by the component to signify an error. Only use them if extending the class
      or the .NET Framework. This exception indicates an internal buffer has overflowed
      and users should take appropriate steps in their code to ensure it recovers
      properly. The cause of the overflow is often too many changes in a short period of
      time, causing the internal notification buffer to overflow. To resolve this, use
      the <see cref="System.IO.FileSystemWatcher.NotifyFilter" qualify="true"/> and <see cref="System.IO.FileSystemWatcher.IncludeSubdirectories" qualify="true"/> properties to filter out unwanted change
      notifications. You can also increase the size of the internal buffer through the
   <see cref="System.IO.FileSystemWatcher.InternalBufferSize" qualify="true"/> property. However, increasing the size
      of the buffer is expensive, so keep the buffer as small as
      possible.</para>
		</remarks>
		<seealso cref="System.IO.FileSystemWatcher"/>
		<seealso cref="System.IO.FileSystemWatcher.InternalBufferSize"/>
	</doc><doc for="InternalBufferOverflowException.InternalBufferOverflowException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.InternalBufferOverflowException"/>
class with the message to be displayed and the generated inner exception specified.</para>
		</summary>
		<param name="message">The message to be given for the exception.</param>
		<param name="inner">The inner exception.</param>
		<remarks>
			<para> These constructors are
      used by the component to signify an error. Only use them if extending the class
      or the .NET Framework. This exception indicates an internal buffer has overflowed
      and users should take appropriate steps in their code to ensure it recovers
      properly. The cause of the overflow is often too many changes in a short period of
      time, causing the internal notification buffer to overflow. To resolve this, use
      the <see cref="System.IO.FileSystemWatcher.NotifyFilter" qualify="true"/> and <see cref="System.IO.FileSystemWatcher.IncludeSubdirectories" qualify="true"/> properties to filter out unwanted change
      notifications. You can also increase the size of the internal buffer through the
   <see cref="System.IO.FileSystemWatcher.InternalBufferSize" qualify="true"/> property. However, increasing the size
      of the buffer is expensive, so keep the buffer as small as
      possible.</para>
		</remarks>
		<seealso cref="System.IO.FileSystemWatcher"/>
		<seealso cref="System.IO.FileSystemWatcher.InternalBufferSize"/>
	</doc></docs>
