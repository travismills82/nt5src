<docs>
	<doc for="SearchResultCollection.SearchResultCollection">
	</doc>
	<doc for="SearchResultCollection.Filter">
	</doc>
	<doc for="SearchResultCollection.InnerList">
	</doc>
	<doc for="SearchResultCollection.SearchObject">
	</doc>
	<doc for="SearchResultCollection.Finalize">
		<summary>
			<para>Frees all resources associated with the component.</para>
		</summary>
	</doc>
	<doc for="SearchResultCollection.ICollection.IsSynchronized">
	</doc>
	<doc for="SearchResultCollection.ICollection.SyncRoot">
	</doc>
	<doc for="SearchResultCollection.ICollection.CopyTo">
	</doc>
	<doc for="SearchResultCollection.ResultsEnumerator">
		<summary>
			<para> Supports a simple
       ForEach-style iteration over a collection.</para>
		</summary>
		<seealso cref="System.DirectoryServices.SearchResultCollection"/>
	</doc>
	<doc for="SearchResultCollection.ResultsEnumerator.Current">
		<summary>
			<para>Gets the current element in the collection.</para>
		</summary>
		<value>
			<para>The current element in the collection.</para>
		</value>
		<exception cref="T:System.InvalidOperationException"><para> The enumerator is positioned before the first element of the collection or after the last element. </para>
			<para>-or-</para>
			<para>The collection was modified after this enumerator was created.</para></exception>
		<remarks>
			<para>After an enumerator is created or after a <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset"/>, <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/> must be called to
    advance the enumerator to the first element of the collection before reading the
    value of the <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Current"/> property.</para>
			<para>The <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Current"/> property will also
 throw an exception if the last call to <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/> returned
 <see langword="false"/> which indicates the end of the collection.</para>
			<para>The <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Current"/> property does not
 move the position of the enumerator and multiple calls to <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Current"/> will return the same
 object until either <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/> or <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset"/> is called.</para>
		</remarks>
		<seealso cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/>
		<seealso cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset"/>
	</doc>
	<doc for="SearchResultCollection.ResultsEnumerator.MoveNext">
		<summary>
			<para>Advances
       the enumerator to the next element of the collection
       and returns a Boolean value indicating whether a valid element is available.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the enumerator was successfully advanced to the next 
    element; <see langword="false"/> if
    the enumerator has passed the end of the collection.</para>
		</returns>
		<exception cref="T:System.Runtime.InteropServices.COMException"><para>The first row in the search result set could not be obtained.</para>
			<para>-or-</para>
			<para>The next row in the search result set could not be obtained.</para></exception>
		<remarks>
			<para>After an enumerator is created and after a <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset"/>, an enumerator is conceptually
    positioned before the first element of the collection, and the first call to
 <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/> positions the 
    enumerator over the first element of the collection.</para>
			<para>Once the end of the collection is passed, subsequent calls to
 <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/> 
 will return <see langword="false"/>
 until <see cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset"/>
 is called.</para>
		</remarks>
		<seealso cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Reset"/>
	</doc>
	<doc for="SearchResultCollection.ResultsEnumerator.Reset">
		<summary>
			<para>Resets the enumerator back to its initial position before the first element in the collection.</para>
		</summary>
		<seealso cref="System.DirectoryServices.SearchResultCollection.ResultsEnumerator.MoveNext"/>
	</doc>
	<doc for="SearchResultCollection">
		<summary>
			<para> Contains the <see cref="System.DirectoryServices.SearchResult"/> instances that the Active 
   Directory hierarchy returned during a <see cref="System.DirectoryServices.DirectorySearcher"/> query.</para>
		</summary>
		<remarks>
			<para>Each time you perform a query, <see cref="System.DirectoryServices.DirectorySearcher"/> creates a
   handle to the corresponding <see cref="System.DirectoryServices.SearchResultCollection"/> instance.
   This handle persists until
   you call <see cref="System.DirectoryServices.SearchResultCollection.Dispose"/> or until
   garbage collection picks up the
   instance.</para>
		</remarks>
		<seealso cref="System.DirectoryServices.DirectoryEntry"/>
		<seealso cref="System.DirectoryServices.DirectoryEntries"/>
		<seealso cref="System.DirectoryServices.PropertyCollection"/>
		<seealso cref="System.DirectoryServices.PropertyValueCollection"/>
		<seealso cref="System.DirectoryServices.DirectorySearcher"/>
		<seealso cref="System.DirectoryServices.SearchResultCollection.Dispose"/>
		<seealso cref="System.DirectoryServices.SearchResultCollection.Handle"/>
		<seealso cref="System.DirectoryServices.ReferralChasingOption"/>
		<seealso cref="System.DirectoryServices.SearchResult"/>
		<seealso cref="System.DirectoryServices.ResultPropertyCollection"/>
		<seealso cref="System.DirectoryServices.ResultPropertyValueCollection"/>
		<seealso cref="System.DirectoryServices.SearchScope"/>
		<seealso cref="System.DirectoryServices.SortDirection"/>
		<seealso cref="System.DirectoryServices.SortOption"/>
	</doc><doc for="SearchResultCollection.this">
		<summary>
			<para>Gets the <see cref="System.DirectoryServices.SearchResult"/> object that is located at a 
   specified index in this collection.</para>
		</summary>
		<param name="index">The zero-based index of the <see cref="System.DirectoryServices.SearchResult"/> object to retrieve.</param>
		<value>
			<para>The <see cref="System.DirectoryServices.SearchResult"/> object that is located at the specified index.</para>
		</value>
	</doc><doc for="SearchResultCollection.Count">
		<summary>
			<para>Gets the number of <see cref="System.DirectoryServices.SearchResult"/> objects in this collection.</para>
		</summary>
		<value>
			<para>The number of <see cref="System.DirectoryServices.SearchResult"/> objects in this collection.</para>
		</value>
	</doc><doc for="SearchResultCollection.PropertiesLoaded">
		<summary>
			<para> 
      Gets the <see cref="System.DirectoryServices.DirectorySearcher"/>
      properties that were specified before the
      search was executed.</para>
		</summary>
		<value>
			<para>An array of type <see cref="T:System.String"/> containing the properties that <see cref="System.DirectoryServices.DirectorySearcher.PropertiesToLoad" qualify="true"/> specified before the search
   was executed.</para>
		</value>
		<seealso cref="System.DirectoryServices.DirectorySearcher"/>
		<seealso cref="T:System.String"/>
	</doc><doc for="SearchResultCollection.Contains">
		<summary>
			<para>Determines if a specified <see cref="System.DirectoryServices.SearchResult"/> object is in this collection.</para>
		</summary>
		<param name="result">The <see cref="System.DirectoryServices.SearchResult"/> object to find.</param>
		<returns>
			<para><see langword="true"/> if the 
<see cref="System.DirectoryServices.SearchResult"/> object is in the collection;
   otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SearchResultCollection.CopyTo">
		<summary>
			<para>Copies the <see cref="System.DirectoryServices.SearchResult"/> objects from this collection to an array,
   starting at a particular index of the array.</para>
		</summary>
		<param name="results">An array of type <see cref="System.DirectoryServices.SearchResult"/> that receives this collection's objects.</param>
		<param name=" index"> The zero-based array index at which to begin copying the objects.</param>
	</doc><doc for="SearchResultCollection.GetEnumerator">
		<summary>
			<para>Returns an enumerator that you can use to iterate
      through this collection.</para>
		</summary>
		<returns>
			<para>An enumerator that you can use to iterate through this collection.</para>
		</returns>
	</doc><doc for=".Finalize">
		<nodoc/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="SearchResultCollection.Handle">
		<summary>
			<para>Gets the handle returned by 
   <see langword="IDirectorySearch::ExecuteSearch"/> 
   , which was called by <see cref="System.DirectoryServices.DirectorySearcher"/>
   that created this collection.</para>
		</summary>
		<value>
			<para>The ADS_SEARCH_HANDLE value that this collection uses.</para>
		</value>
		<remarks>
			<para>Each time you perform a query, <see cref="System.DirectoryServices.DirectorySearcher"/> creates a
   handle to the corresponding <see cref="System.DirectoryServices.SearchResultCollection"/> instance.
   This handle persists until
   you call <see cref="System.DirectoryServices.SearchResultCollection.Dispose"/> or until
   garbage collection picks up the
   instance.</para>
		</remarks>
		<seealso cref="System.DirectoryServices.DirectorySearcher"/>
		<seealso cref="System.DirectoryServices.SearchResultCollection.Dispose"/>
	</doc><doc for="SearchResultCollection.Dispose">
		<overload>
			<para> Releases the resources used by the <see cref="System.DirectoryServices.SearchResultCollection"/>.</para>
		</overload>
		<summary>
			<para> Releases all resources used by the
      <see cref="System.DirectoryServices.SearchResultCollection"/>. </para>
		</summary>
		<remarks>
			<para>Calling <see cref="System.DirectoryServices.SearchResultCollection.Dispose"/> allows the resources used by
   the <see cref="System.DirectoryServices.SearchResultCollection"/> to be reallocated for other purposes.
   For more information about <see cref="System.DirectoryServices.SearchResultCollection.Dispose"/>, see <see topic="cpconCleaningUpUnmanagedResources"/> .</para>
			<para>Each time you perform a query, <see cref="System.DirectoryServices.DirectorySearcher"/> creates a
handle to the corresponding <see cref="System.DirectoryServices.SearchResultCollection"/> instance.
This handle persists until
you call <see cref="System.DirectoryServices.SearchResultCollection.Dispose"/> or until
garbage collection picks up the
instance.</para>
		</remarks>
		<seealso cref="System.DirectoryServices.DirectorySearcher"/>
		<seealso cref="System.DirectoryServices.SearchResultCollection.Handle"/>
		<seealso topic="cpconCleaningUpUnmanagedResources"/>
	</doc><doc for="SearchResultCollection.Dispose1">
		<summary>
			<para>Releases the unmanaged resources used by the <see cref="System.DirectoryServices.SearchResultCollection"/> and optionally releases the managed resources.</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<remarks>
			<para>This method is called by the public <see topic="frlrfSystemDirectoryServicesSearchResultCollectionClassDisposeTopic1" title="Dispose()"/> method and the <see cref="System.Object.Finalize"/> method.
<see langword="Dispose()"/> invokes the protected 
<see langword="Dispose(Boolean)"/> method with the <paramref name="disposing"/> parameter 
   set to <see langword="true"/>. <see cref="System.Object.Finalize"/> invokes <see langword="Dispose"/> with
<paramref name="disposing"/> set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is
<see langword="true"/>, this method releases all resources held by any managed 
objects that this <see cref="System.DirectoryServices.SearchResultCollection"/>
references. This method invokes the <see langword="Dispose()"/> method of each
referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called multiple times by other objects. When
   overriding <see langword="Dispose(Boolean)"/>, be careful not to reference
   objects that have been previously disposed of in an earlier call to
<see langword="Dispose"/>. For more information about how to 
   implement <see langword="Dispose"/>, see <see topic="cpconImplementingDisposeMethod"/>
   .
</note>
			<para>For more information about <see langword="Dispose"/> and
<see langword="Finalize"/>, see <see topic="cpconCleaningUpUnmanagedResources"/> and <see topic="cpconOverridingFinalizeMethod"/>.</para>
		</remarks>
		<seealso topic="cpconImplementingDisposeMethod"/>
		<seealso topic="cpconCleaningUpUnmanagedResources"/>
	</doc><doc for="SearchResultCollection.IndexOf">
		<summary>
			<para>Retrieves the index of a specified <see cref="System.DirectoryServices.SearchResult"/> object in this collection.</para>
		</summary>
		<param name="result">The <see cref="System.DirectoryServices.SearchResult"/> object to find.</param>
		<returns>
			<para>The zero-based index of the specified <see cref="System.DirectoryServices.SearchResult"/> object. If the object is not found, 
   the return value is -1.</para>
		</returns>
	</doc></docs>
