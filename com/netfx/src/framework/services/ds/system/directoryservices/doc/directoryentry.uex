<docs>
	<doc for="DirectoryEntry.UseSecureAuthentication">
		<summary>
			<para> Gets or sets a value indicating whether the provider uses a secured protocol, such as NT LAN Manager (NTLM)
       or Kerberos, to authenticate the client.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/> if the provider uses a secured protocol to 
    authenticate the client; otherwise, <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Active Directory will use Kerberos, and possibly NTLM,
       to authenticate the client. When the <see cref="System.DirectoryServices.DirectoryEntry.Username"/> and <see cref="System.DirectoryServices.DirectoryEntry.Password"/>
       are set to <see langword="null"/>, Active Directory Service Interface
       (ADSI) binds to the object using the security context of the calling thread. This is
       either the security context of the user account under which the application is
       running, or of the client user account that the calling
       thread is impersonating.</para>
		</remarks>
	</doc>
	<doc for="DirectoryEntry.Bind">
		<summary>
 Binds to the ADs object (if not already bound).
 </summary>
	</doc>
	<doc for="DirectoryEntry.FillCache">
		<summary>
 If UsePropertyCache is true, calls GetInfo the first time it's necessary.
 If it's false, calls GetInfoEx on the given property name.
 </summary>
	</doc>
	<doc for="DirectoryEntry.Finalize">
		<summary>
			<para>
       Frees all resources associated with the component.
    </para>
		</summary>
	</doc>
	<doc for="DirectoryEntry.MoveTo">
		<overload>
			<para>Moves this entry to the specified parent.</para>
		</overload>
		<summary>
			<para>Moves this entry to the specified parent.</para>
		</summary>
		<param name="newParent">The parent to which you want to move this entry.</param>
		<exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"/> is not a container.</exception>
		<remarks>
			<para>If <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> is <see langword="true"/>, be sure to
   call <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> on the new object to make the move permanent.</para>
		</remarks>
	</doc><doc for="DirectoryEntry.MoveTo1">
		<summary>
			<para>Moves this entry to the specified parent
      and changes its name to the value of the <paramref name="newName"/> parameter.</para>
		</summary>
		<param name="newParent">The parent to which you want to move this entry.</param>
		<param name="newName">The new name of this entry.</param>
		<exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"/> is not a container.</exception>
		<remarks>
			<para>If <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> is <see langword="true"/>, be sure to
   call <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> on the new object to make the move permanent.</para>
		</remarks>
	</doc><doc for="DirectoryEntry.Invoke">
		<summary>
			<para>Calls
      a method on the native Active Directory.</para>
		</summary>
		<param name="methodName">The name of the method to invoke.</param>
		<param name="args">An array of type <see cref="System.Object"/> that contains the arguments of the method to invoke.</param>
		<returns>
			<para>The return value of the invoked
      method.</para>
		</returns>
		<remarks>
			<para> If the return value of the native method implements the IADs interface, a corresponding
   <see cref="System.DirectoryServices.DirectoryEntry"/> is returned. </para>
		</remarks>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for reading, writing, deleting, changing, and adding to the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Write" qualify="true"/></permission>
		<seealso cref="System.Object"/>
	</doc><doc for="DirectoryEntry.Dispose">
		<overload>
			<para>Disposes of the resources (other than memory) used by the <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</overload>
		<summary>
			<para>Disposes of the resources (other than memory) used by the
   <see cref="System.DirectoryServices.DirectoryEntry"/>. </para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<remarks>
			<para>This method is called by the public <see langword="Dispose()"/> method and the 
<see cref="System.Object.Finalize"/> 
method. <see langword="Dispose()"/> invokes the protected
<see langword="Dispose(Boolean)"/> method with the <paramref name="disposing"/> parameter 
set to <see langword="true"/>. <see cref="System.Object.Finalize"/> invokes <see langword="Dispose"/> with
<paramref name="disposing"/> set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is <see langword="true"/>, this method 
releases all resources held by any managed objects that this <see cref="System.DirectoryServices.DirectoryEntry"/> references. This method invokes the
<see langword="Dispose()"/> method of each referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called multiple times by other objects. When 
   overriding <see langword="Dispose(Boolean)"/>, be careful not to reference
   objects that have been previously disposed of in an earlier call to
<see langword="Dispose"/>. For more information about how to implement 
<see langword="Dispose(Boolean)"/>, see <see topic="cpconImplementingDisposeMethod"/>.
</note>
			<para>For more information about <see langword="Dispose"/> and <see cref="System.Object.Finalize"/>, see 
<see topic="cpconCleaningUpUnmanagedResources "/> and <see topic="cpconOverridingFinalizeMethod "/>.</para>
		</remarks>
	</doc><doc for="DirectoryEntry">
		<summary>
			<para> Encapsulates a node or object in the Active Directory
      hierarchy.</para>
		</summary>
		<remarks>
			<para>Use this class for binding to objects, or reading and
      updating attributes. <see cref="System.DirectoryServices.DirectoryEntry"/>,
      along
      with helper classes, provides support for life-cycle management and navigation
      methods. These include creating, deleting, renaming, moving a child node,
      and enumerating children. After you modify a node, you must commit your changes
      in order for them to be saved to the tree. For more information, see the <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>
      
      property and <see topic="cpconIntroductionToADSIObjectsInVisualStudio" title="Introduction to Active Directory Objects in Visual Studio.NET"/>.</para>
			<para><see cref="System.DirectoryServices.DirectoryEntry"/> can be used to access regular entries
   and some, but not all, information from schema entries.</para>
			<para>The Active Directory hierarchy contains up to several thousand nodes.
   Each node represents an object, such as a network printer or a user in a domain.
   Corporate networks constantly change as new employees are hired and objects such
   as network printers and computers are added. Active Directory Service Interfaces
   (ADSI) technology provides ways to programmatically add these objects to the
   directory tree.</para>
			<para>To create a directory entry in the hierarchy, use the
<see cref="System.DirectoryServices.DirectoryEntry.Children"/> property. The <see cref="System.DirectoryServices.DirectoryEntry.Children"/> property is a collection that
   provides an <see cref="System.DirectoryServices.DirectoryEntries.Add"/> method, through which you add a node to
   the collection directly below the parent node that you are currently bound to.
   When adding a node to the collection, you must specify a name for the new node
   and the name of a schema template that you want to associate with the node.
   For example, you might want to use a schema titled "Computer" to add new
   computers to the hierarchy.</para>
			<para> This class also contains attribute caching, which
   can be useful for optimizing network traffic. To use attribute caching, see
   the <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> property.
   </para>
			<para>The classes associated with the <see cref="System.DirectoryServices.DirectoryEntry"/> component can be used with
any of the Active Directory service providers. Some of the current providers
are Internet Information Services (IIS), Lightweight Directory Access Protocol
(LDAP), Novell NetWare Directory Service (NDS), and WinNT.</para>
			<note type="note">
   It is assumed that you have a
   general understanding of Active Directory before using this class. For
   more information, see the <see cref="N:System.DirectoryServices"/> namespace overview.
</note>
		</remarks>
		<seealso cref="System.DirectoryServices.DirectoryEntries"/>
		<seealso cref="System.DirectoryServices.PropertyCollection"/>
		<seealso cref="System.DirectoryServices.PropertyValueCollection"/>
		<seealso cref="System.DirectoryServices.DirectorySearcher"/>
		<seealso cref="System.DirectoryServices.ReferralChasingOption"/>
		<seealso cref="System.DirectoryServices.SearchResultCollection"/>
		<seealso cref="System.DirectoryServices.SearchResult"/>
		<seealso cref="System.DirectoryServices.ResultPropertyValueCollection"/>
		<seealso cref="System.DirectoryServices.SearchScope"/>
		<seealso cref="System.DirectoryServices.SortDirection"/>
		<seealso cref="System.DirectoryServices.SortOption"/>
	</doc><doc for="DirectoryEntry.DirectoryEntry4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DirectoryServices.DirectoryEntry"/>
class that binds to the specified native Active Directory object.</para>
		</summary>
		<param name="adsObject">The native Active Directory object to bind to.</param>
		<remarks>
			<para> This constructor
      is useful
      if you have acquired a native Active Directory object that implements the IADs
      interface through a native API.</para>
		</remarks>
		<seealso cref="System.DirectoryServices.DirectoryEntry.NativeObject"/>
	</doc><doc for="DirectoryEntry.NativeObject">
		<summary>
			<para> Gets the native Active Directory Service Interfaces (ADSI) object.</para>
		</summary>
		<value>
			<para>The native ADSI object.</para>
		</value>
		<remarks>
			<para>Use this property to cast
      the native Active Directory object, which implements the IADs interface, when you want to
      use a COM interface.</para>
			<para>This object is for advanced scenarios that cannot be accomplished with the
   <see cref="System.DirectoryServices"/> classes alone. To use it, you need to import
      one of the IADs-family COM interfaces and then cast this property to that
      interface.</para>
		</remarks>
	</doc><doc for="DirectoryEntry.CopyTo">
		<overload>
			<para> Creates a copy of this entry as a child of the specified parent.</para>
		</overload>
		<summary>
			<para> Creates a copy of this entry as a child of the specified parent.</para>
		</summary>
		<param name="newParent">The parent <see cref="System.DirectoryServices.DirectoryEntry"/>.</param>
		<returns>
			<para>A copy of this entry as a child of the specified parent.</para>
		</returns>
		<exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"/> is not a container.</exception>
		<remarks>
			<para>If <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> is <see langword="true"/>, be sure to
   call <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> on the new object to make the copy permanent.</para>
			<para> The Lightweight Directory Access Protocol (LDAP) 
   provider does not currently support the <see cref="System.DirectoryServices.DirectoryEntry.CopyTo"/>
   method.</para>
		</remarks>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for reading, writing, deleting, changing, and adding to the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Write" qualify="true"/></permission>
	</doc><doc for="DirectoryEntry.CopyTo1">
		<summary>
			<para> Creates a copy of this entry, as a child of the specified
      parent, with the specified new name.</para>
		</summary>
		<param name="newParent">The parent <see cref="System.DirectoryServices.DirectoryEntry"/>.</param>
		<param name="newName">The name of the copy of this entry.</param>
		<returns>
			<para>A
      renamed copy of this entry as a child of the specified parent.</para>
		</returns>
		<exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"/> is not a container.</exception>
		<remarks>
			<para>If <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> is
<see langword="true"/>, be sure to
   call <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> on the new object to make the copy permanent.</para>
			<para> The Lightweight Directory Access Protocol (LDAP) 
   provider does not currently support the <see cref="System.DirectoryServices.DirectoryEntry.CopyTo"/>
   method.</para>
		</remarks>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for reading, writing, deleting, changing, and adding to the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Write" qualify="true"/></permission>
	</doc><doc for="DirectoryEntry.DeleteTree">
		<summary>
			<para>Deletes this entry and its entire subtree from the
      Active Directory hierarchy.</para>
		</summary>
		<exception cref="T:System.InvalidOperationException"><para>This object cannot be deleted.</para></exception>
		<remarks>
			<para>Of the Active Directory Service Interfaces (ADSI) system-supplied providers, only
      the Lightweight Directory Access Protocol (LDAP) currently supports this operation.</para>
			<note type="caution">
      The entry and its entire subtree
      are deleted from the Active Directory hierarchy.
      
   </note>
		</remarks>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for deleting from the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Write" qualify="true"/></permission>
	</doc><doc for="DirectoryEntry.Name">
		<summary>
			<para> Gets the name of the object as named with the
      underlying directory service.</para>
		</summary>
		<value>
			<para> The name of the object as named with the underlying directory service.</para>
		</value>
		<remarks>
			<para>This name, along with <see cref="System.DirectoryServices.DirectoryEntry.SchemaClassName"/>, distinguishes this
   entry
   from its siblings and must be unique
   amongst its siblings in each instance of <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.DirectoryServices.DirectoryEntry"/> for the node in 
   the Active Directory. It then displays the <see cref="System.DirectoryServices.DirectoryEntry.Name"/> and <see cref="System.DirectoryServices.DirectoryEntry.Path"/> properties of its
   child nodes.</para>
			<codelink SampleID="DirectoryEntry_Name" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.Parent">
		<summary>
			<para> Gets this entry's parent in the Active Directory hierarchy.</para>
		</summary>
		<value>
			<para> This
      entry's parent in the Active Directory hierarchy.</para>
		</value>
		<example>
			<para>The following example searches a 
      given <see cref="System.DirectoryServices.DirectoryEntry"/> and displays the <see cref="System.DirectoryServices.DirectoryEntry.Name"/> and
   <see cref="System.DirectoryServices.DirectoryEntry.Parent"/> 
   of the result.</para>
			<codelink SampleID="DirectoryEntry_Parent" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.Rename">
		<summary>
			<para>Changes the name of this entry.</para>
		</summary>
		<param name="newName">The new name of the entry.</param>
		<remarks>
			<note type="note">
      This will also affect the path used
      to refer to this entry.
      
   </note>
			<para>If <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> is <see langword="true"/>, be sure to
   call <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> on the new object to make the rename permanent.</para>
		</remarks>
		<example>
			<para>The following example renames the user entry in a <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
			<codelink SampleID="DirectoryEntry_Rename" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.Properties">
		<summary>
			<para> Gets a <see cref="System.DirectoryServices.PropertyCollection"/>
of properties set on this object.</para>
		</summary>
		<value>
			<para>A <see cref="System.DirectoryServices.PropertyCollection"/>
of properties set on this object.</para>
		</value>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for reading from the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Browse" qualify="true"/></permission>
		<example>
			<para> The following example
      demonstrates how to display the properties of a <see cref="System.DirectoryServices.DirectoryEntry"/>
      and their values. This example assumes that a string
      named <c>strPath</c>
   has already been created and set to the path.</para>
			<codelink SampleID="Classic DirectoryEntry.Properties Example" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.PropertyCollection"/>
	</doc>
	<doc for="DirectoryEntry.DirectoryEntry">
		<overload>
			<para> Initializes a new instance of the <see cref="System.DirectoryServices.DirectoryEntry"/> class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.DirectoryServices.DirectoryEntry"/> class.
   </para>
		</summary>
		<example>
			<para> The following example gets the user-specified
   <see cref="System.DirectoryServices.DirectoryEntry"/> and
      displays the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of all its
   <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="DirectoryEntry_Ctor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.DirectoryEntry1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DirectoryServices.DirectoryEntry"/> class that binds this instance to the
   node in Active Directory located at the specified path.</para>
		</summary>
		<param name="path">The path at which to bind the <see cref="System.DirectoryServices.DirectoryEntry"/> to the directory. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/> property is initialized to this value.</param>
		<example>
			<para>The following example binds a <see cref="System.DirectoryServices.DirectoryEntry"/> to the directory entry at the specified
   path, and displays the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of the node's <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="Classic DirectoryEntry.DirectoryEntry1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.DirectoryEntry2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DirectoryServices.DirectoryEntry"/> class. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/>, <see cref="System.DirectoryServices.DirectoryEntry.Username"/>, and <see cref="System.DirectoryServices.DirectoryEntry.Password"/> properties are set to the specified
   values.</para>
		</summary>
		<param name="path">The path of this <see cref="System.DirectoryServices.DirectoryEntry"/>. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/> property is initialized to this value.</param>
		<param name="username">The user name to use when authenticating the client. The <see cref="System.DirectoryServices.DirectoryEntry.Username"/> property is initialized to this value.</param>
		<param name="password">The password to use when authenticating the client. The <see cref="System.DirectoryServices.DirectoryEntry.Password"/> property is initialized to this value.</param>
		<example>
			<para>The following example demonstrates the <see cref="M:System.DirectoryServices.DirectoryEntry(string,string,string).#ctor"/>, <see cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/>. 
   and <see cref="System.DirectoryServices.DirectoryEntry.Children"/>
   properties of <see cref="System.DirectoryServices.DirectoryEntry"/>. This
   example gets the user specified <see cref="System.DirectoryServices.DirectoryEntry"/> and the <see cref="System.DirectoryServices.DirectoryEntry.Path"/>
   of all its <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="DirectoryEntry_ctorAuthenticationTypeChildren" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Password"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Path"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Username"/>
	</doc>
	<doc for="DirectoryEntry.DirectoryEntry3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DirectoryServices.DirectoryEntry"/> class. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/>, <see cref="System.DirectoryServices.DirectoryEntry.Username"/>, <see cref="System.DirectoryServices.DirectoryEntry.Password"/>, and <see cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/> properties are set to the specified
   values.</para>
		</summary>
		<param name="path">The path of this <see cref="System.DirectoryServices.DirectoryEntry"/>. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/> property is initialized to this value.</param>
		<param name="username">The user name to use when authenticating the client. The <see cref="System.DirectoryServices.DirectoryEntry.Username"/> property is initialized to this value.</param>
		<param name="password">The password to use when authenticating the client. The <see cref="System.DirectoryServices.DirectoryEntry.Password"/> property is initialized to this value.</param>
		<param name="authenticationType">One of the <see cref="System.DirectoryServices.AuthenticationTypes"/> values. The <see cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/> property is initialized to this value.</param>
		<example>
			<para> This example gets the user-specified
   <see cref="System.DirectoryServices.DirectoryEntry"/> and all its <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.
      </para>
			<codelink SampleID="DirectoryEntry_Constructorwithparams" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Password"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Path"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Username"/>
	</doc>
	<doc for="DirectoryEntry.AuthenticationType">
		<summary>
			<para>Gets or sets the type of authentication to use.</para>
		</summary>
		<value>
			<para>One of the <see cref="System.DirectoryServices.AuthenticationTypes"/> values. The default is
<see langword="None"/>.</para>
		</value>
		<example>
			<para>The following example demonstrates the <see cref="M:System.DirectoryServices.DirectoryEntry(string,string,string).#ctor"/>,
<see cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/>, and <see cref="System.DirectoryServices.DirectoryEntry.Children"/> properties of <see cref="System.DirectoryServices.DirectoryEntry"/> 
. This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/> and the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of all its <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="DirectoryEntry_ctorAuthenticationTypeChildren" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.Children">
		<summary>
			<para>Gets a <see cref="System.DirectoryServices.DirectoryEntries"/>
containing the child entries of this node in the Active
Directory hierarchy.</para>
		</summary>
		<value>
			<para>A <see cref="System.DirectoryServices.DirectoryEntries"/>
containing the child entries of this node
in the Active Directory hierarchy.</para>
		</value>
		<remarks>
			<para>The child entries are only the immediate children of this node.</para>
			<para> Use this property to find, retrieve, or create a
      directory entry in the hierarchy. This property is a collection that,
      along with usual iteration capabilities, provides an <see cref="System.DirectoryServices.DirectoryEntries.Add"/> method through which
      you add a node to the collection directly below the parent node that you are
      currently bound to. When adding a node to the collection, you must specify a
      name for the new node and the name of a schema template that you want to
      associate with the node. For example, you might want to use a schema titled
      "Computer" to add new computers to the hierarchy.</para>
			<note type="note">
      By default, changes are made locally to a
      cache. After you modify or add a node, you must call
      the <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>
      method to commit your changes in order for
      them to be saved to the tree.
      If you call <see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/>
      before
      calling <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>, any uncommitted
      changes to the property cache will be lost. For more information, see
      the <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>and <see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/> methods, and the <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/>
      
      property.
      
   </note>
		</remarks>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for reading from the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Browse" qualify="true"/></permission>
		<example>
			<para>The following example demonstrates the <see cref="M:System.DirectoryServices.DirectoryEntry(string,string,string).#ctor"/>,
<see cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/>, and <see cref="System.DirectoryServices.DirectoryEntry.Children"/> properties of <see cref="System.DirectoryServices.DirectoryEntry"/> . 
   This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/> and the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of all its <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="DirectoryEntry_ctorAuthenticationTypeChildren" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntries"/>
	</doc>
	<doc for="DirectoryEntry.Guid">
		<summary>
			<para> Gets the globally unique identifier (GUID) of the <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</summary>
		<value>
			<para>The globally unique identifier of the <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</value>
		<remarks>
			<para>When binding to an object in Active Directory, use
      the <see cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/>
      property.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.Guid"/> and
<see cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/> properties of 
   the <see cref="System.DirectoryServices.DirectoryEntry"/> class.
   This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/>
   and displays its <see cref="System.DirectoryServices.DirectoryEntry.Guid"/> and
<see cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/> properties. </para>
			<codelink SampleID="DirectoryEntry_GuidNativeGuid" SnippetID="1"/>
		</example>
		<seealso cref="T:System.Guid"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/>
	</doc>
	<doc for="DirectoryEntry.NativeGuid">
		<summary>
			<para> Gets the globally unique identifier of the <see cref="System.DirectoryServices.DirectoryEntry"/>,
   as returned from the provider.</para>
		</summary>
		<value>
			<para>The globally unique identifier of the <see cref="System.DirectoryServices.DirectoryEntry"/>, as returned from the provider.</para>
		</value>
		<remarks>
			<para>Use the <see cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/>
property when binding an object in Active Directory.</para>
			<note type="note">
   The Lightweight Directory Access Protocol (LDAP)
   provider returns the globally unique identifier of a <see cref="System.DirectoryServices.DirectoryEntry"/> in a different format than the
   Internet Information Services (IIS), Novell NetWare Directory Server (NDS), and WinNT providers.
</note>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.Guid"/> and
<see cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/> properties of 
   the <see cref="System.DirectoryServices.DirectoryEntry"/> class.
   This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/>
   and displays its <see cref="System.DirectoryServices.DirectoryEntry.Guid"/> and
<see cref="System.DirectoryServices.DirectoryEntry.NativeGuid"/> properties. </para>
			<codelink SampleID="DirectoryEntry_GuidNativeGuid" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Guid" qualify="true"/>
		<seealso cref="T:System.Guid"/>
	</doc>
	<doc for="DirectoryEntry.SchemaClassName">
		<summary>
			<para> Gets the name of the schema used for this <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</summary>
		<value>
			<para>The name of the schema used for this <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</value>
		<remarks>
			<para>This is the same as the <see cref="System.DirectoryServices.DirectoryEntry.Name"/> property of the <see cref="System.DirectoryServices.DirectoryEntry.SchemaEntry"/>
property.</para>
			<para>A <see cref="System.DirectoryServices.DirectoryEntry"/>
object's schema defines its properties and methods.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.SchemaClassName"/>
and <see cref="System.DirectoryServices.DirectoryEntry.SchemaEntry"/> properties of the
<see cref="System.DirectoryServices.DirectoryEntry"/> 
class. This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/> and gets all
it's <see cref="System.DirectoryServices.DirectoryEntry.Children"/>
if it's
<see cref="System.DirectoryServices.DirectoryEntry.SchemaEntry"/> is of 
type <c>container</c>.</para>
			<codelink SampleID="DirectoryEntry_SchemaClassNameSchemaEntry" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Name"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.SchemaEntry"/>
	</doc>
	<doc for="DirectoryEntry.SchemaEntry">
		<summary>
			<para> Gets the <see cref="System.DirectoryServices.DirectoryEntry"/> that holds schema information for
   this entry. An entry's schema determines a list of its mandatory and optional property names.</para>
		</summary>
		<value>
			<para>The <see cref="System.DirectoryServices.DirectoryEntry"/> that holds schema
   information for this entry.</para>
		</value>
		<remarks>
			<para>You can use this entry to find out what properties and methods are available
      on the associated object.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.SchemaClassName"/>
and <see cref="System.DirectoryServices.DirectoryEntry.SchemaEntry"/> properties of the
<see cref="System.DirectoryServices.DirectoryEntry"/> 
class. This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/> and gets all it's
<see cref="System.DirectoryServices.DirectoryEntry.Children"/>
if it's
<see cref="System.DirectoryServices.DirectoryEntry.SchemaEntry"/> is of 
type <c>container</c>.</para>
			<codelink SampleID="DirectoryEntry_SchemaClassNameSchemaEntry" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.SchemaClassName"/>
	</doc>
	<doc for="DirectoryEntry.UsePropertyCache">
		<summary>
			<para> Gets or sets a value indicating whether the cache should be committed after each
      operation.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the cache should not be committed after each operation;
   otherwise, <see langword="false"/>.
   The default is <see langword="true"/>.</para>
		</value>
		<remarks>
			<para> By default, changes to properties are done locally to a cache, and property values to
      be read are cached after the first read. When the <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> property is <see langword="true"/>,
      access to the <see cref="System.DirectoryServices.DirectoryEntry"/> object's properties is faster. Setting
      this to <see langword="false"/> will cause the cache to be committed after each
      operation.</para>
			<para>If the <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> property is
<see langword="true"/> and you want to commit cached changes, call the <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> method. To update values in the cache 
   after changes to the directory are made, call the <see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/> method.</para>
			<note type="caution">
   If you call <see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/>
   before
   calling <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>, any uncommitted
   changes to the
   property cache will be
   lost.
   
</note>
			<note type="note">
   The Internet Information Services (IIS)
   provider does not support committing the cache after each operation.
   
</note>
		</remarks>
		<example>
			<para> The following example gets the user-specified
   <see cref="System.DirectoryServices.DirectoryEntry"/> and changes the
      <c>lockoutThreshold</c> property to
      <c>15</c>. Before changing the
      property value, <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/> is set to <see langword="false"/>, so that the property change is
      committed without calling <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>.</para>
			<codelink SampleID="DirectoryEntry_UsePropertyCache" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>
	</doc>
	<doc for="DirectoryEntry.CommitChanges">
		<summary>
			<para>Saves any changes
      to the entry in the Active Directory store.</para>
		</summary>
		<remarks>
			<para>By default,
      changes to properties are done locally to a cache, and property values
      to be read are cached after the first read. For more information,
      see <see cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/>.</para>
			<para>Changes made to the cache include changes to the
      properties as well as calls to <see cref="System.DirectoryServices.DirectoryEntries.Add"/> (if this
      is the newly created
      entry).</para>
			<note type="caution">
      If you call <see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/>
      before
      calling <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>, any uncommitted
      changes to the
      property cache will be
      lost.
      
   </note>
		</remarks>
		<permission cref="System.DirectoryServices.DirectoryServicesPermission">for reading, writing, deleting, changing, and adding to the Active Directory hierarchy. Associated enumeration: <see cref="System.DirectoryServices.DirectoryServicesPermissionAccess.Write" qualify="true"/></permission>
		<example>
			<para>The following example demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> method
   of the <see cref="System.DirectoryServices.DirectoryEntry"/>
   class. This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/>
   and changes one of its property.</para>
			<codelink SampleID="DirectoryEntry_CommitChanges" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntries.Add"/>
		<seealso cref="System.DirectoryServices.DirectoryEntries.Remove"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.UsePropertyCache"/>
	</doc>
	<doc for="DirectoryEntry.RefreshCache">
		<overload>
			<para>Loads the property values for this directory entry into the property cache.</para>
		</overload>
		<summary>
			<para>Loads the property values for this directory entry into
      the property cache.</para>
		</summary>
		<remarks>
			<note type="caution">
      Any uncommitted changes to the property
      cache will be lost. Use <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>
      to persist changes to the directory store.
      
   </note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.DirectoryServices.DirectoryEntry"/> for the given node in the
   Active Directory. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/> is taken as input
   from the user. It changes one of the properties and calls
<see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/>. The cached value is displayed.</para>
			<codelink SampleID="DirectoryEntry_RefreshCache" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>
	</doc>
	<doc for="DirectoryEntry.RefreshCache1">
		<summary>
			<para>Loads the values of the specified properties into the
      property cache.</para>
		</summary>
		<param name="propertyNames">An array of the specified properties.</param>
		<remarks>
			<note type="caution">
      Any uncommitted changes to
      the specified properties in the property cache
      will be lost. Use <see cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/> to persist changes to
      the directory store.
      
   </note>
		</remarks>
		<example>
			<para>The following example creates a <see cref="System.DirectoryServices.DirectoryEntry"/> for the given
   node in the Active Directory. The <see cref="System.DirectoryServices.DirectoryEntry.Path"/> is taken as input from
   the user. It creates a string array with one of the properties from the
<see cref="System.DirectoryServices.DirectoryEntry"/>. It changes that property and 
   calls <see cref="System.DirectoryServices.DirectoryEntry.RefreshCache"/>. The changed value does
   not persist.</para>
			<codelink SampleID="DirectoryEntry_RefreshCache_Arg" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.CommitChanges"/>
	</doc>
	<doc for="DirectoryEntry.Close">
		<summary>
			<para>Closes the <see cref="System.DirectoryServices.DirectoryEntry"/>
and releases any system resources associated with this component.</para>
		</summary>
		<remarks>
			<para>Call <see cref="System.DirectoryServices.DirectoryEntry.Close"/> to release system resources, pending
   garbage collection.</para>
			<para>Following a call to <see cref="System.DirectoryServices.DirectoryEntry.Close"/>, any operations on
the <see cref="System.DirectoryServices.DirectoryEntry"/> might raise exceptions.</para>
		</remarks>
	</doc>
	<doc for="DirectoryEntry.Exists">
		<summary>
			<para>Searches the directory store at the specified
      path to see whether an entry exists.</para>
		</summary>
		<param name="path">The path at which to search the directory store.</param>
		<returns>
			<para><see langword="true"/> if an entry exists
   in the directory store at the specified path; otherwise, <see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following example takes one argument and determines whether the path corresponds
      to a valid <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
			<codelink SampleID="DirectoryEntry_Exists" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DirectoryEntry.Password">
		<summary>
			<para> Gets or sets the password to use when authenticating the client.</para>
		</summary>
		<value>
			<para>The password to use when authenticating the client.</para>
		</value>
		<remarks>
			<para>You can set the <see cref="System.DirectoryServices.DirectoryEntry.Username"/> and password in order to specify alternate
   credentials with which to access the information in Active Directory. Any
   other <see cref="System.DirectoryServices.DirectoryEntry"/> objects retrieved from this instance
   (for example, through <see cref="System.DirectoryServices.DirectoryEntry.Children"/>) are
   automatically created with the same alternate credentials.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.Username"/> and
<see cref="System.DirectoryServices.DirectoryEntry.Password"/> properties of the 
<see cref="System.DirectoryServices.DirectoryEntry"/> 
class. This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/>
and the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of all its <see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="DirectoryEntry_UsernamePassword" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Children"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Username"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/>
	</doc>
	<doc for="DirectoryEntry.Username">
		<summary>
			<para> Gets or sets the user name to use when authenticating the client.</para>
		</summary>
		<value>
			<para>The user name to use when authenticating the client.</para>
		</value>
		<remarks>
			<para>You can set the user name and <see cref="System.DirectoryServices.DirectoryEntry.Password"/> in order to specify alternate
   credentials with which to access the information in Active Directory. Any
   other <see cref="System.DirectoryServices.DirectoryEntry"/> objects retrieved from this instance
   (for example, through <see cref="System.DirectoryServices.DirectoryEntry.Children"/>) are
   automatically created with the same alternate credentials.</para>
		</remarks>
		<example>
			<para>The following example demonstrates the <see cref="System.DirectoryServices.DirectoryEntry.Username"/> and
<see cref="System.DirectoryServices.DirectoryEntry.Password"/> properties of the 
<see cref="System.DirectoryServices.DirectoryEntry"/> 
class. This example gets the user-specified <see cref="System.DirectoryServices.DirectoryEntry"/>
and the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of all its
<see cref="System.DirectoryServices.DirectoryEntry.Children"/>.</para>
			<codelink SampleID="DirectoryEntry_UsernamePassword" SnippetID="1"/>
		</example>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Children"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.Password"/>
		<seealso cref="System.DirectoryServices.DirectoryEntry.AuthenticationType"/>
	</doc>
	<doc for="DirectoryEntry.Path">
		<summary>
			<para> Gets or sets the path for this <see cref="System.DirectoryServices.DirectoryEntry"/>.</para>
		</summary>
		<value>
			<para>The path of this <see cref="System.DirectoryServices.DirectoryEntry"/>. The default is an empty string
   ("").</para>
		</value>
		<remarks>
			<para>The <see cref="System.DirectoryServices.DirectoryEntry.Path"/> property uniquely
   identifies this entry in a networked environment. This entry can always be
   retrieved using this <see cref="System.DirectoryServices.DirectoryEntry.Path"/>.</para>
			<para> Setting the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> retrieves
a new entry from the directory store; it
does not change the path of the currently bound entry.</para>
			<para>The classes associated with the <see cref="System.DirectoryServices.DirectoryEntry"/> component can be used with
any of the Active Directory service providers. Some of the current providers
are Internet Information Services (IIS), Lightweight Directory Access Protocol
(LDAP), Novell NetWare Directory Service (NDS), and WinNT.</para>
			<note type="note">
   The portion of the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> that identifies the provider (precedes
   "://") is case sensitive. For example, "LDAP://" or "WinNT://".
</note>
			<para>The syntax for the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> property varies according to the provider.
Some common scenarios are:</para>
			<para><see langword="WinNT"/>
			</para>
			<list type="bullet"><item>
					<term>
      
      Connect to a group on a computer. For example,
      "WinNT://&lt;domain name&gt;/&lt;computer name&gt;/&lt;group name&gt;". If you
      are connecting to a local computer, "WinNT://&lt;computer name&gt;/&lt;group
      name&gt;".</term>
				</item>
				<item>
					<term>
      
      Connect to a user on a computer. For example,
      "WinNT://&lt;domain name&gt;/&lt;computer name&gt;/&lt;user name&gt;". If you
      are connecting to a local computer, "WinNT://&lt;computer name&gt;/&lt;user
      name&gt;".</term>
				</item>
				<item>
					<term>
      
      Connect to services on a computer. For example,
      "WinNT://&lt;domain name&gt;/&lt;computer name&gt;/&lt;service name&gt;". If
      you are connecting to a local computer, "WinNT://&lt;computer
      name&gt;/&lt;service name&gt;".</term>
				</item>
				<item>
					<term>
      
      Discover all domains
      
      on the network. For example, "WinNT:". The domains
      can be found by enumerating the children of this entry.</term>
				</item>
			</list>
			<para><see langword="LDAP"/>
			</para>
			<list type="bullet"><item>
					<term>
      
      Connect to a group in a domain. For example,
      "LDAP://CN=&lt;group name&gt;, CN =&lt;Users&gt;, DC=&lt;domain
      controller1&gt;, DC=&lt;domain controller2&gt;,...".</term>
				</item>
				<item>
					<term>
      
      Connect to a user in a domain. For example,
      "LDAP://CN=&lt;full user name&gt;, CN=&lt;Users&gt;, DC=&lt;domain
      controller1&gt;, DC=&lt;domain controller2&gt;,...".</term>
				</item>
				<item>
					<term>
      
      Connect to computers in a domain. For example,
      "LDAP://CN=&lt;computer name&gt;, CN=&lt;Computers&gt;, DC=&lt;domain
      controller1&gt;, DC=&lt;domain controller2&gt;,...".</term>
				</item>
			</list>
			<para><see langword="IIS"/>
			</para>
			<list type="bullet"><item>
					<term>
      
      Connect to a Web directory. For example,
      "IIS://LocalHost/W3SVC/1/ROOT/&lt;Web directory name&gt;".</term>
				</item>
			</list>
			<para>To bind to the current domain using LDAP, use the path
   "LDAP://RootDSE", then get the default naming context and rebind the entry. For example: </para>
			<code lang="C#">String str = ent.Properties["defaultNamingContext"][0];
DirectoryEntry domain = new DirectoryEntry("LDAP://" + str);
</code>
			<para>For more information, see the ADSI topics in MSDN and the documentation for
   your provider.</para>
		</remarks>
		<example>
			<para>The following example takes the <see cref="System.DirectoryServices.DirectoryEntry.Path"/> of a <see cref="System.DirectoryServices.DirectoryEntry"/>
and displays its <see cref="System.DirectoryServices.DirectoryEntry.Name"/>, <see cref="System.DirectoryServices.DirectoryEntry.Path"/>, and <see cref="System.DirectoryServices.DirectoryEntry.SchemaClassName"/>
properties.</para>
			<codelink SampleID="DirectoryEntry_Path" SnippetID="1"/>
		</example>
	</doc>
</docs>
