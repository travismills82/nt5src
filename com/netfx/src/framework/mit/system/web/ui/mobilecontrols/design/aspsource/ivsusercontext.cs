//------------------------------------------------------------------------------
// <copyright file="IVsUserContext.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IVsUserContext.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VSDesigner.Interop {
    using System.Runtime.InteropServices;
    

    using System.Diagnostics;
    using System;
    
    using UnmanagedType = System.Runtime.InteropServices.UnmanagedType;

    [ComImport, System.Runtime.InteropServices.ComVisible(true), Guid("761081DF-D45F-4683-9B9E-1B7241E56F5C"), System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    internal interface IVsUserContext {

        
         void AddAttribute(
             tagVsUserContextAttributeUsage usage,
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.LPWStr)] 
             string szName,
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.LPWStr)] 
             string szValue);

        [return: System.Runtime.InteropServices.MarshalAs(UnmanagedType.I4)]
         [PreserveSig]
         int RemoveAttribute(
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.LPWStr)] 
             string szName,
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.LPWStr)] 
             string szValue);

        [return: System.Runtime.InteropServices.MarshalAs(UnmanagedType.U4)]
         int AddSubcontext(
             Microsoft.VSDesigner.Interop.IVsUserContext pSubCtx,
             int priority);

        
         void RemoveSubcontext(
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.U4)] 
             int cookie);

        
         int CountAttributes(
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.BStr)] 
             string pszName,
             int fIncludeChildren);

        [return: System.Runtime.InteropServices.MarshalAs(UnmanagedType.BStr)]
          string GetAttribute(
             int iAttribute,
             [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.LPWStr)] 
             string pszName,
             int fIncludeChildren,
             out string pbstrName);

        
         int CountSubcontexts();

        
          Microsoft.VSDesigner.Interop.IVsUserContext GetSubcontext(
             int i);

        
        bool IsDirty();

        
         void SetDirty(
             bool fDirty);

        
         void Update();

        [return: System.Runtime.InteropServices.MarshalAs(UnmanagedType.U4)]
         int AdviseUpdate(
              Microsoft.VSDesigner.Interop.IVsUserContextUpdate pUpdate);

        
         void UnadviseUpdate(
            [System.Runtime.InteropServices.In, MarshalAs(UnmanagedType.U4)] 
             int dwCookie);

        
         tagVsUserContextAttributeUsage GetAttrUsage(
             int index,
             bool fIncludeChildren);
        
         
          void RemoveAllSubcontext();
        
         
          int GetPriority();
        
         
          void RemoveAttributeIncludeChildren(
                      [System.Runtime.InteropServices.MarshalAs(UnmanagedType.LPWStr)]
                      string szName,
                      [System.Runtime.InteropServices.MarshalAs(UnmanagedType.LPWStr)]
                      string szValue);
        
         [return: System.Runtime.InteropServices.MarshalAs(UnmanagedType.BStr)]
          string GetAttributePri(
                      int iAttribute,
                      [System.Runtime.InteropServices.MarshalAs(UnmanagedType.LPWStr)]
                      string pszName,
                      bool fIncludeChildren,
                      out int piPriority,
                      [System.Runtime.InteropServices.MarshalAs(UnmanagedType.BStr)]
                      out string pbstrName);
    }
}

