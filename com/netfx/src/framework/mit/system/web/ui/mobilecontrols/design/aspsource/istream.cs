//------------------------------------------------------------------------------
// <copyright file="IStream.cs" company="Microsoft">
//     Copyright (c) Microsoft Corporation.  All rights reserved.
// </copyright>                                                                
//------------------------------------------------------------------------------

//---------------------------------------------------------------------------
// IStream.cs
//---------------------------------------------------------------------------
// WARNING: this file autogenerated
//---------------------------------------------------------------------------
// Copyright (c) 1999, Microsoft Corporation   All Rights Reserved
// Information Contained Herein Is Proprietary and Confidential.
//---------------------------------------------------------------------------

namespace Microsoft.VSDesigner.Interop {
    using System;
    using System.Runtime.InteropServices;

    [System.Runtime.InteropServices.ComVisible(true), Guid("0000000C-0000-0000-C000-000000000046"), System.Runtime.InteropServices.InterfaceTypeAttribute(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]
    [System.Runtime.InteropServices.ComImport]
    internal interface IStream {

        //C#r: UNDONE (Field in interface) public static readonly    Guid iid;
        //C#r: UNDONE (Field in interface) public const   int LOCK_WRITE = 0x1;
        //C#r: UNDONE (Field in interface) public const   int LOCK_EXCLUSIVE = 0x2;
        //C#r: UNDONE (Field in interface) public const   int LOCK_ONLYONCE = 0x4;
        //C#r: UNDONE (Field in interface) public const   int STATFLAG_DEFAULT = 0x0;
        //C#r: UNDONE (Field in interface) public const   int STATFLAG_NONAME = 0x1;
        //C#r: UNDONE (Field in interface) public const   int STATFLAG_NOOPEN = 0x2;
        //C#r: UNDONE (Field in interface) public const   int STGC_DEFAULT = 0x0;
        //C#r: UNDONE (Field in interface) public const   int STGC_OVERWRITE = 0x1;
        //C#r: UNDONE (Field in interface) public const   int STGC_ONLYIFCURRENT = 0x2;
        //C#r: UNDONE (Field in interface) public const   int STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 0x4;
        //C#r: UNDONE (Field in interface) public const   int STREAM_SEEK_SET = 0x0;
        //C#r: UNDONE (Field in interface) public const   int STREAM_SEEK_CUR = 0x1;
        //C#r: UNDONE (Field in interface) public const   int STREAM_SEEK_END = 0x2;
        [return: MarshalAs(UnmanagedType.I4)]
         int Read(
            [In] 
             IntPtr buf,
            [In, MarshalAs(UnmanagedType.I4)] 
             int len);

        [return: MarshalAs(UnmanagedType.I4)]
         int Write(
            [In] 
             IntPtr buf,
            [In] 
             int len);

        [return: MarshalAs(UnmanagedType.I8)]
         long Seek(
            [In, MarshalAs(UnmanagedType.I8)] 
             long dlibMove,
            [In, MarshalAs(UnmanagedType.I4)] 
             int dwOrigin);

        
         void SetSize(
            [In, MarshalAs(UnmanagedType.I8)] 
             long libNewSize);

        [return: MarshalAs(UnmanagedType.I8)]
         long CopyTo(
            [In, MarshalAs(UnmanagedType.Interface)] 
              Microsoft.VSDesigner.Interop.IStream pstm,
            [In, MarshalAs(UnmanagedType.I8)] 
             long cb,
            [Out, MarshalAs(UnmanagedType.LPArray)] 
              long[] pcbRead);

        
         void Commit(
            [In, MarshalAs(UnmanagedType.I4)] 
             int grfCommitFlags);

        
         void Revert();

        
         void LockRegion(
            [In, MarshalAs(UnmanagedType.I8)] 
             long libOffset,
            [In, MarshalAs(UnmanagedType.I8)] 
             long cb,
            [In, MarshalAs(UnmanagedType.I4)] 
             int dwLockType);

        
         void UnlockRegion(
            [In, MarshalAs(UnmanagedType.I8)] 
             long libOffset,
            [In, MarshalAs(UnmanagedType.I8)] 
             long cb,
            [In, MarshalAs(UnmanagedType.I4)] 
             int dwLockType);

        
         void Stat(
            [In, MarshalAs(UnmanagedType.I4)] 
              int pStatstg,
            [In, MarshalAs(UnmanagedType.I4)] 
             int grfStatFlag);

        [return: MarshalAs(UnmanagedType.Interface)]
          Microsoft.VSDesigner.Interop.IStream Clone();


    }
}
