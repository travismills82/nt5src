// ==++==
// 
//   Copyright (c) Microsoft Corporation.  All rights reserved.
// 
// ==--==
//*****************************************************************************
// License.idl
//
// ILicense interface definition.
//
//*****************************************************************************

import "unknwn.idl" ;

//*****************************************************************************
// A licensed component must implement the ILicense interface. This interface
// enables a licensed component to provide a license key that can be used
// later to create an object instance on an unlicensed machine.
//*****************************************************************************
[
        uuid(B93F97E9-782F-11d3-9951-0000F805BFB0),
        pointer_default(unique)
]
interface ILicense : IUnknown
{
    HRESULT GetRuntimeKey([out, retval] BSTR* pbKey);
    HRESULT IsLicenseVerified([out, retval] BOOL *pLicenseVerified);
    HRESULT IsRuntimeKeyAvailable([out, retval] BOOL *pKeyAvailable);
};

/* -------------------------------------------------------------------------- *
 * Library definition
 * -------------------------------------------------------------------------- */

[
        uuid(B1923C49-8D9F-11d3-995F-0000F805BFB0),
        version(1.0),
        helpstring("Common Language Runtime License 1.0 Type Library")
]
library LicenseLib
{
        [
                uuid(B1923C48-8D9F-11d3-995F-0000F805BFB0)
        ]
        coclass License
        {
                [default] interface ILicense;
        };
};

