<docs>
	<doc for="SoapClientFormatterSinkProvider.SoapClientFormatterSinkProvider">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/> class with default values.</para>
		</summary>
	</doc><doc for="SoapClientFormatterSinkProvider.Next">
		<summary>
			<para>Gets or sets the next <see cref="System.Runtime.Remoting.Channels.IClientChannelSinkProvider"/> in
   the sink provider chain.</para>
		</summary>
		<value>
			<para>The next <see cref="System.Runtime.Remoting.Channels.IClientChannelSinkProvider"/> in
   the sink provider chain.</para>
		</value>
	</doc><doc for="SoapClientFormatterSink.SoapClientFormatterSink">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSink"/> class.</para>
		</summary>
		<param name="nextSink">The next sink in the channel sink chain.</param>
	</doc><doc for="SoapServerFormatterSinkProvider.SoapServerFormatterSinkProvider">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider"/> class with default values.</para>
		</summary>
	</doc><doc for="SoapServerFormatterSinkProvider.Next">
		<summary>
			<para>Gets or sets the next <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> in the sink provider chain.</para>
		</summary>
		<value>
			<para>The next <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> in the sink provider chain.</para>
		</value>
	</doc><doc for="SoapClientFormatterSink.NextSink">
		<summary>
			<para>Gets the next <see cref="System.Runtime.Remoting.Messaging.IMessageSink"/> in the sink chain.</para>
		</summary>
		<value>
			<para>The next <see cref="System.Runtime.Remoting.Messaging.IMessageSink"/> in the sink chain.</para>
		</value>
	</doc><doc for="SoapClientFormatterSink.NextChannelSink">
		<summary>
			<para>Gets the next <see cref="System.Runtime.Remoting.Channels.IClientChannelSink"/> in the sink chain.</para>
		</summary>
		<value>
			<para>The next <see cref="System.Runtime.Remoting.Channels.IClientChannelSink"/> in the sink chain.</para>
		</value>
	</doc><doc for="SoapServerFormatterSink.NextChannelSink">
		<summary>
			<para>Gets the next <see cref="System.Runtime.Remoting.Channels.IServerChannelSink"/> in the sink chain.</para>
		</summary>
		<value>
			<para>The next <see cref="System.Runtime.Remoting.Channels.IServerChannelSink"/> in the sink chain.</para>
		</value>
	</doc><doc for="Protocol.Http">
		<summary>
			<para> Indicates that the current formatter sink is using the HTTP
 protocol, and therefore requires special processing.</para>
		</summary>
	</doc><doc for="Protocol.Other">
		<summary>
			<para>Indicates that a protocol other than HTTP is used with
 the current formatter sink.</para>
		</summary>
	</doc><doc for="SoapClientFormatterSink.SyncProcessMessage">
		<summary>
			<para>Synchronously processes the provided message.</para>
		</summary>
		<param name="msg">The message to process.</param>
		<returns>
			<para>The response to the processed message.</para>
		</returns>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="SoapClientFormatterSink.ProcessMessage">
		<summary>
			<para> Requests message processing from the current sink.</para>
		</summary>
		<param name="msg">The message to process.</param>
		<param name="requestHeaders">The headers to add to the outgoing message heading to the server.</param>
		<param name="requestStream">The stream headed toward the transport sink.</param>
		<param name="responseHeaders">When this method returns, contains an <see cref="System.Runtime.Remoting.Channels.ITransportHeaders"/> interface that holds the headers that the server returned. This parameter is passed uninitialized.</param>
		<param name="responseStream">When this method returns, contains a <see cref="System.IO.Stream"/> coming back from the transport sink. This parameter is passed uninitialized.</param>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="SoapClientFormatterSink.GetRequestStream">
		<summary>
			<para>Returns the <see cref="System.IO.Stream"/> onto which
 the provided message is to be serialized.</para>
		</summary>
		<param name="msg">The <see cref="System.Runtime.Remoting.Messaging.IMethodCallMessage"/> containing details about the method call.</param>
		<param name="headers">The headers to add to the outgoing message heading to the server.</param>
		<returns>
			<para>The <see cref="System.IO.Stream"/> onto which the provided
 message is to be serialized.</para>
		</returns>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="SoapClientFormatterSink.Properties">
		<summary>
			<para>Gets an <see cref="System.Collections.IDictionary"/> of properties for the
 current channel sink.</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.IDictionary"/> of properties for the current channel sink.</para>
		</value>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc><doc for="SoapServerFormatterSinkProvider.SoapServerFormatterSinkProvider1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider"/> class with the provided
 properties and provider data.</para>
		</summary>
		<param name="properties">An <see cref="System.Collections.IDictionary"/> of configuration properties to use with the new instance of <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/>.</param>
		<param name="providerData">An <see cref="System.Collections.ICollection"/> of provider data to use with the new instance of <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/>.</param>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc><doc for="SoapServerFormatterSink.AsyncProcessResponse">
		<summary>
			<para>Requests processing from the current sink of the response from a method call
 sent asynchronously.</para>
		</summary>
		<param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
		<param name="state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
		<param name="msg">The response message.</param>
		<param name="headers">The headers to add to the return message heading to the client.</param>
		<param name="stream">The stream heading back to the transport sink.</param>
	</doc><doc for="SoapServerFormatterSink.GetResponseStream">
		<summary>
			<para>Returns the <see cref="System.IO.Stream"/> onto which the provided
 response message is to be serialized.</para>
		</summary>
		<param name="sinkStack">A stack of sinks leading back to the server transport sink.</param>
		<param name=" state">Information associated with the current sink, generated on the request side, and needed on the response side.</param>
		<param name=" msg">The response message that is to be serialized. </param>
		<param name=" headers">The headers to put in the response stream to the client.</param>
		<returns>
			<para>The <see cref="System.IO.Stream"/> onto which the provided
 response message is to be serialized.</para>
		</returns>
		<remarks>
			<para>This method is called when a response stream needs to be created.</para>
		</remarks>
	</doc><doc for="SoapServerFormatterSink.Properties">
		<summary>
			<para>Gets an <see cref="System.Collections.IDictionary"/> of properties for the
 current channel sink.</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.IDictionary"/> of properties for the current channel sink.</para>
		</value>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc><doc for="SoapServerFormatterSinkProvider.CreateSink">
		<summary>
			<para>Creates a sink chain.
 </para>
		</summary>
		<param name="channel">The channel for which to create the channel sink chain.</param>
		<returns>
			<para> The first sink of the
 newly formed channel sink chain. </para>
		</returns>
	</doc><doc for="SoapClientFormatterSinkProvider.SoapClientFormatterSinkProvider1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/> class with the given
 properties and provider data.</para>
		</summary>
		<param name="properties">An <see cref="System.Collections.IDictionary"/> of configuration properties to use with the new instance of <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/>.</param>
		<param name=" providerData">An <see cref="System.Collections.ICollection"/> of provider data to use with the new instance of <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/>.</param>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc><doc for="SoapClientFormatterSinkProvider.CreateSink">
		<summary>
			<para> Creates
      a sink chain.
      </para>
		</summary>
		<param name="channel">Channel for which this sink chain is being constructed. </param>
		<param name="url">URL of object to connect to or the channel URI for the target object. </param>
		<param name="remoteChannelData"><para>A channel data object describing a channel on the remote server. </para></param>
		<returns>
			<para> The first sink of the newly formed channel sink chain,
      or <see langword="null"/> indicating that this provider will not or cannot provide a connection for this endpoint.
      </para>
		</returns>
		<remarks>
			<para>When the <see cref="System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink"/>
method is called, it creates its own channel sink, forwards the <see cref="System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink"/>
call to the next sink provider in the chain (if there is one), and ensures that
the next sink and the current one are linked
together.</para>
		</remarks>
	</doc><doc for="SoapServerFormatterSinkProvider">
		<summary>
			<para> Provides the implementation for a server formatter channel
      sink provider that uses the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>.
      </para>
		</summary>
		<remarks>
			<para>Channel sinks are connected to a server channel through implementations of the
   <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> interface. All the remoting
      server channels provide constructors that take an <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> as a parameter.</para>
			<para> Channel sink providers are stored in a chain, and
      the user is responsible for chaining all channel sink providers together before
      passing the outer one to the channel constructor. <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> provides a property called
   <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider.Next"/> for this purpose. </para>
			<para>When multiple channel sink providers are specified in a configuration
      file, the remoting infrastructure will chain them together in the order they
      are found in the configuration file. The channel sink providers and the channels
      are
      
      created during the <see cref="System.Runtime.Remoting.RemotingConfiguration.Configure" qualify="true"/> call.</para>
			<para>Formatter sinks use sink configuration properties to configure the channel at
      run time. Sink properties can be specified in a configuration file, or
      programmatically, inside of an <see cref="System.Collections.IDictionary"/>. In a configuration file
      all values are represented by strings, but when building a property <see cref="System.Collections.IDictionary"/>
      programmatically, value types can be specified with their native values or with
      strings.</para>
			<para>The following table shows the sink configuration properties that can be
      specified for the current sink. </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="includeVersions"/></term>
					<description><see langword="true"/> or
   <see langword="false"/> . Specifies whether the formatter will include
      versioning information.</description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="SoapServerFormatterSinkProvider.GetChannelData">
		<summary>
			<para> Returns the channel data for the channel that the
      current sink is associated with.</para>
		</summary>
		<param name="channelData">An <see cref="System.Runtime.Remoting.Channels.IChannelDataStore"/> object in which the channel data is to be returned.</param>
	</doc><doc for="SoapServerFormatterSink.ProcessMessage">
		<summary>
			<para> Requests message processing from the current sink.</para>
		</summary>
		<param name="sinkStack">The stack of sinks that transports the message.</param>
		<param name="requestMsg">The message that contains the request.</param>
		<param name="requestHeaders">Headers retrieved from the incoming message from the client.</param>
		<param name="requestStream">The stream that needs to be processed and passed on to the deserialization sink.</param>
		<param name="responseMsg">When this method returns, contains an <see cref="System.Runtime.Remoting.Messaging.IMessage"/> that holds the response message. This parameter is passed uninitialized.</param>
		<param name="responseHeaders">When this method returns, contains an <see cref="System.Runtime.Remoting.Channels.ITransportHeaders"/> that holds the headers to add to the return message heading to the client. This parameter is passed uninitialized. </param>
		<param name="responseStream">When this method returns, contains a <see cref="System.IO.Stream"/> that is heading back to the transport sink. This parameter is passed uninitialized. </param>
		<returns>
			<para>A <see cref="System.Runtime.Remoting.Channels.ServerProcessing"/> status value that
   provides information about how the message was processed.</para>
		</returns>
	</doc><doc for="SoapClientFormatterSinkProvider">
		<summary>
			<para> Provides the implementation for a client
      formatter sink provider.</para>
		</summary>
		<remarks>
			<para>A <see cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/> creates client formatter sinks
   that use the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> to serialize
   messages for the client channel through which remoting messages flow.</para>
			<para>The function of the formatter sink is to generate the
   necessary headers and serialize the message to the stream. After reaching the
   formatter sink, the <see cref="System.Runtime.Remoting.Messaging.IMessage"/> is forwarded to all sinks in
   the channel sink chain through the <see cref="System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage"/>
   or <see cref="System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest"/> calls. At this
   stage the message has already been serialized and is provided as information
   only. Sinks that need to create or modify the message must be placed in the sink
   chain before the formatter. This can be achieved by implementing both the
<see cref="System.Runtime.Remoting.Messaging.IMessageSink"/> and <see cref="System.Runtime.Remoting.Channels.IClientChannelSink"/> interfaces. The formatter 
   sink can be placed in the sink chain later. </para>
			<para>Formatter sinks use sink configuration properties to configure the channel at
   run time. Sink properties can be specified in a configuration file, or
   programmatically, inside of an <see cref="System.Collections.IDictionary"/>. In a configuration file
   all values are represented by strings, but when building a property <see cref="System.Collections.IDictionary"/> programmatically, value types can be
   specified with their native values or
   with strings. </para>
			<para>The following table shows the sink configuration properties that can be specified
   for the current sink provider. </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="includeVersions"/></term>
					<description><see langword="true"/> or
<see langword="false"/> . Specifies whether the formatter will include 
   versioning information.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="SoapClientFormatterSink.AsyncProcessMessage">
		<summary>
			<para>Asynchronously processes the provided message.</para>
		</summary>
		<param name="msg">The message to process.</param>
		<param name=" replySink">The sink that will receive the reply to the provided message.</param>
		<returns>
			<para>An <see cref="System.Runtime.Remoting.Messaging.IMessageCtrl"/> that provides a way to
   control the asynchronous message after it has been dispatched.</para>
		</returns>
	</doc><doc for="SoapClientFormatterSink.AsyncProcessRequest">
		<summary>
			<para>Requests asynchronous processing of a method call on the current sink.</para>
		</summary>
		<param name="sinkStack">A stack of channel sinks that called the current sink.</param>
		<param name=" msg">The message to process.</param>
		<param name=" headers">The headers to add to the outgoing message heading to the server.</param>
		<param name=" stream">The stream headed to the transport sink.</param>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="SoapClientFormatterSink.AsyncProcessResponse">
		<summary>
			<para>Requests asynchronous processing of a response to a method call on the
      current sink.</para>
		</summary>
		<param name="sinkStack">A stack of sinks that called the current sink.</param>
		<param name=" state">The state associated with the current sink.</param>
		<param name=" headers">The headers retrieved from the server response stream.</param>
		<param name=" stream">The stream coming back from the transport sink.</param>
		<seealso topic="cpconsinkssinkchains"/>
	</doc><doc for="Protocol">
		<summary>
			<para>Specifies the protocol to use with the <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSink"/> class.</para>
		</summary>
	</doc><doc for="SoapServerFormatterSink.SoapServerFormatterSink">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSink"/> class.</para>
		</summary>
		<param name="protocol">The <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSink.Protocol"/> that will be used with the current instance of <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSink"/> .</param>
		<param name=" nextSink">The next sink in the channel sink chain.</param>
		<param name=" receiver">Indicates the channel that will receive the messages serialized by the new instance of <see cref="System.Runtime.Remoting.Channels.SoapServerFormatterSink"/>.</param>
	</doc>
	<doc for="SoapServerFormatterSinkProvider.TypeFilterLevel">
		<summary>
			<para>Gets or sets the <see langword="TypeFilterLevel"/> of 
   automatic deserialization the <see langword="SoapServerFormatterSink"/> performs.</para>
		</summary>
		<value>
			<para>The <see langword="TypeFilterLevel"/>
representing the current automatic deserialization level.</para>
		</value>
		<remarks>
			<para>Supported values are <see langword="Low"/>
(the default) and <see langword="Full"/>. For details about deserialization
levels, see Automatic Deserialization in .NET Remoting.</para>
		</remarks>
	</doc>
	<doc for="SoapServerFormatterSink.TypeFilterLevel">
		<summary>
			<para>Gets or sets the <see langword="TypeFilterLevel"/> of 
   automatic deserialization the <see langword="SoapServerFormatterSink"/> performs.</para>
		</summary>
		<value>
			<para>The <see langword="TypeFilterLevel"/>
representing the current automatic deserialization level.</para>
		</value>
		<remarks>
   Supported values are <see langword="Low"/>
   (the default) and <see langword="Full"/>. For details about deserialization
   levels, see Automatic Deserialization in .NET Remoting.
</remarks>
	</doc>
	<doc for="SoapClientFormatterSink">
		<summary>
			<para> Provides the implementation for a client formatter
      sink that uses the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> .</para>
		</summary>
		<remarks>
			<para>The function of the formatter sink is to generate the necessary headers and serialize
      the message to the stream. After reaching the formatter sink, the <see cref="System.Runtime.Remoting.Messaging.IMessage"/> is forwarded to all sinks in
      the channel sink chain through the <see cref="System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage"/> or <see cref="System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest"/> calls. At this
      stage the message has already been serialized and is provided as information
      only. Sinks that need to create or modify the message need to be placed in the
      sink chain before the formatter. This can be achieved by implementing both the
      <see cref="System.Runtime.Remoting.Messaging.IMessageSink"/> and <see cref="System.Runtime.Remoting.Channels.IClientChannelSink"/>
   interfaces. The formatter sink can be placed in the sink chain later.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="includeVersions"/></term>
					<description><see langword="true"/> or 
   <see langword="false"/>. Specifies whether the formatter will include 
      versioning information.</description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconsinkssinkchains"/>
		<seealso cref="System.Runtime.Remoting.Channels.SoapClientFormatterSinkProvider"/>
	</doc>
	<doc for="SoapServerFormatterSink">
		<summary>
			<para> Provides the implementation for a server formatter
      sink that uses the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> .</para>
		</summary>
		<remarks>
			<para>The request stream propagates from the server transport sink through the
      server channel sinks until it reaches the appropriate formatter sink. The
      formatter sink deserializes the message and passes it through the pipeline. A
      special dispatch sink is inserted at the end of the channel sink chain by
   <see cref="System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain" qualify="true"/> method, that
      is called by server channels to create the server channel sink chains. When the
      message reaches the dispatch sink, the dispatch sink passes the message to the
      remoting infrastructure.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="includeVersions"/></term>
					<description><see langword="true"/> or 
   <see langword="false"/>. Specifies whether the formatter will include 
      versioning information.</description>
				</item>
				<item>
					<term><see langword="strictBinding"/></term>
					<description><see langword="true"/> or <see langword="false"/>. Indicates that a receiving formatter will first try to identify the type 
using complete version information if it exists before using only the type name and assembly name without version information.
The default for both system-provided formatters is false.</description>
				</item>
				<item>
					<term><see langword="typeFilterLevel"/></term>
					<description>
						<para>A 
      string value specifying the level of automatic deserialization a server
      channel attempts. Supported values are <see langword="Low"/> (the default)
      and <see langword="Full"/>. For details about deserialization levels, see
   <see topic="cpconAutomaticDeserializationInNETRemoting"/> 
   .</para>
						<para>This property is supported only by the .NET 
   Framework version 1.1 on the following platforms: Windows 98, Windows NT
   4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition,
   Windows XP Professional, Windows .NET Server
   family.</para></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconsinkssinkchains"/>
		<seealso cref="System.Runtime.Remoting.Channels.SoapServerFormatterSinkProvider"/>
		<seealso topic="cpconAutomaticDeserializationInNETRemoting"/>
	</doc>
</docs>
