<docs>
	<doc for="HttpServerChannel.HttpServerChannel">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> 
class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> class with default values.</para>
		</summary>
	</doc><doc for="HttpServerChannel.ChannelData">
		<summary>
			<para>
      Gets the channel specific data.</para>
		</summary>
		<value>
			<para>The channel data.</para>
		</value>
		<remarks>
			<para>This property is used when <see cref="System.Runtime.Remoting.RemotingServices.Marshal" qualify="true"/> is called and an <see cref="System.Runtime.Remoting.ObjRef"/> is created.</para>
		</remarks>
	</doc><doc for="HttpServerChannel.WantsToListen">
		<summary>
			<para>Gets a Boolean value indicating whether <see cref="System.Runtime.Remoting.Channels.IChannelReceiverHook"/> wants to be hooked into the
   outside listener service. </para>
		</summary>
		<value>
			<para>A Boolean value indicating whether <see cref="System.Runtime.Remoting.Channels.IChannelReceiverHook"/> wants to be hooked into the
   outside listener service.</para>
		</value>
	</doc><doc for="HttpServerChannel.ChannelSinkChain">
		<summary>
			<para>Gets the channel sink chain that the current channel is using.
      </para>
		</summary>
		<value>
			<para>The channel sink chain that the current channel is using. </para>
		</value>
	</doc><doc for="HttpServerChannel.StartListening">
		<summary>
			<para> Instructs the current channel to start listening for requests.</para>
		</summary>
		<param name="data">Should always be <see langword="null"/> for <see cref="System.Runtime.Remoting.Channels.Http.HttpChannel"/> .</param>
		<remarks>
			<para>The data object can be used to pass specific initialization state to the
      channel.</para>
		</remarks>
	</doc><doc for="HttpServerChannel.StopListening">
		<summary>
			<para> Instructs the
      current channel to stop listening for requests.</para>
		</summary>
		<param name="data">Should always be <see langword="null"/> for <see cref="System.Runtime.Remoting.Channels.Http.HttpChannel"/> .</param>
		<remarks>
			<para>The data object can be used to pass specific state to the channel.</para>
		</remarks>
	</doc><doc for="HttpServerChannel.ChannelScheme">
		<summary>
 Gets the type of listener to hook into (for example "http").
</summary>
		<value>
			<para>The type of listener to hook into.</para>
		</value>
		<remarks>
			<para>This value is not case-sensitive. </para>
		</remarks>
	</doc><doc for="HttpServerChannel.ChannelPriority">
		<summary>
			<para>Gets the priority of the channel.</para>
		</summary>
		<value>
			<para>An integer representing the priority assigned to this channel.</para>
		</value>
		<remarks>
			<para>For server channels, the priority controls the order in 
 which the channel data appears in an <see cref="System.Runtime.Remoting.ObjRef"/>. Clients will try to
 connect to the server channels in the order that they are listed in the <see cref="System.Runtime.Remoting.ObjRef"/> . The
 default priority is 1, and negative numbers are allowed.</para>
		</remarks>
	</doc><doc for="HttpServerChannel.GetChannelUri">
		<summary>
			<para>Returns the URI of the current channel.</para>
		</summary>
		<returns>
			<para>The URI of the current channel.</para>
		</returns>
	</doc><doc for="HttpServerChannel.ChannelName">
		<summary>
			<para>Gets the name of the current channel.</para>
		</summary>
		<value>
			<para> The name of the current channel.</para>
		</value>
		<remarks>
			<para>This property is used to retrieve a specific channel when
      calling <see cref="System.Runtime.Remoting.Channels.ChannelServices.GetChannel"/>. If this property is not
      set, the system defaults to "http". If you want to register more than one
   <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>, each must have a unique
      name. Set this property to the <see cref="System.String.Empty"/> string ("") if you want to ignore
      names and avoid naming collisions. The system will allow any number of channels
      with the <see cref="System.String.Empty" qualify="true"/> name.</para>
		</remarks>
	</doc><doc for="HttpServerChannel.Parse">
		<summary>
			<para> Extracts the channel
      URI and the remote well-known object URI from the specified URL.</para>
		</summary>
		<param name="url">The URL from which to extract the URIs.</param>
		<param name=" objectURI">When this method returns, contains a <see cref="System.String"/> that holds the URI of the remote well-known object. This parameter is passed uninitialized.</param>
		<returns>
			<para>The channel URI.</para>
		</returns>
	</doc><doc for="HttpServerChannel.AddHookChannelUri">
		<summary>
			<para>Adds a URI on which the channel hook must listen.</para>
		</summary>
		<param name="channelUri">A URI on which the channel hook must listen.</param>
	</doc><doc for="HttpServerChannel.this">
		<summary>
			<para>Gets or sets a channel property associated with the specified key.</para>
		</summary>
		<param name="key"> The key the requested property is associated with.</param>
		<value>
			<para>A channel property associated with the specified key.</para>
		</value>
		<remarks>
			<note type="note">
      Channel properties are used to configure the
      channel at run time. For a list of possible channel properties and an
      example, see <see topic="cpconchannelformatterconfigurationproperties"/> .
      
   </note>
		</remarks>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc><doc for="HttpServerChannel.Keys">
		<summary>
			<para> Gets an <see cref="System.Collections.ICollection"/> of keys the
   channel properties are associated with.</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.ICollection"/> of keys the channel properties
   are associated with.</para>
		</value>
		<remarks>
			<note type="note">
      Channel properties are used
      to configure the channel at run time. For a list of possible channel
      properties and an example, see
   <see topic="cpconchannelformatterconfigurationproperties"/> .
      
   </note>
		</remarks>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc><doc for="HttpServerChannel.GetUrlsForUri">
		<summary>
			<para> Returns an array
      of all the URLs for an object with the specified URI,
      hosted on the current <see cref="System.Runtime.Remoting.Channels.Http.HttpChannel"/>.
      </para>
		</summary>
		<param name="objectUri">The URI of the object for which URLs are required. </param>
		<returns>
			<para> An array of the URLs for an object
      with the specified URI, hosted on the current <see cref="System.Runtime.Remoting.Channels.Http.HttpChannel"/> .</para>
		</returns>
		<remarks>
			<para>The current method is used by <see cref="System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject" qualify="true"/> . </para>
		</remarks>
		<example>
			<codelink SampleID="HttpChannel.GetUrlsFromUri" SnippetID="1"/>
		</example>
	</doc><doc for="HttpServerChannel.HttpServerChannel1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> class at the specified port.</para>
		</summary>
		<param name="port">The port at which to activate the new instance of <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>.</param>
		<remarks>
			<para>To request that the remoting system choose 
      an open port on your behalf, specify port "0" (zero). This will create an
   <see langword="HttpServerChannel "/>instance to listen for requests on the 
      dyamically assigned port. This is typically done on the client to make sure that
      an <see langword="HttpServerChannel "/>is listening for callback
      methods.
   </para>
		</remarks>
	</doc>
	<doc for="HttpServerChannel.HttpServerChannel2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> class with the given name
   at the specified port.</para>
		</summary>
		<param name="name">The name of the new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>.</param>
		<param name=" port">The port at which to activate the new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>.</param>
		<remarks>
   This constructor sets the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName"/> property using the
<paramref name="name"/> parameter. To 
   request that the remoting system choose an open port on your behalf, specify
   port "0" (zero). This will create an <see langword="HttpServerChannel "/>instance
   to listen for requests on the dyamically assigned port. This is typically done
   on the client to make sure that an <see langword="HttpServerChannel "/>is
   listening for callback methods.
</remarks>
	</doc>
	<doc for="HttpServerChannel.HttpServerChannel3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> class at the specified
   port with the given name and <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> .</para>
		</summary>
		<param name="name">The name of the new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>.</param>
		<param name="port">The port at which to activate the new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>. To request that the remoting system choose an open port on your behalf, specify port "0" (zero).</param>
		<param name=" sinkProvider">The <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> to use with the new instance of <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>.</param>
		<remarks>
			<para>This constructor sets the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName"/> property using the
<paramref name="name"/> parameter.</para>
			<para>Channel sinks provide a plug-in point that allows access to the underlying
   messages flowing through the channel as well as the stream used by the transport
   mechanism to send messages to a remote object. Channel sinks are also
   responsible for transporting messages between the client and the server.</para>
			<para>To request that the remoting system choose 
   an open port on your behalf, specify port "0" (zero). This will create an
<see langword="HttpServerChannel "/>instance to listen for requests on the 
   dyamically assigned port. This is typically done on the client to make sure that
   an <see langword="HttpServerChannel "/>is listening for callback
   methods.
</para>
			<note type="note">
   For more
   information, see <see topic="cpconsinkssinkchains"/>.
</note>
			<note type="note">
   Channel properties are used to configure the
   channel at run time. For a list of possible channel properties and an
   example, see <see topic="cpconchannelformatterconfigurationproperties"/> .
</note>
		</remarks>
	</doc>
	<doc for="HttpServerChannel.HttpServerChannel4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> class with the specified
   channel properties and the provided <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> .</para>
		</summary>
		<param name="properties">An <see cref="System.Collections.IDictionary"/> of the channel properties that hold the configuration information for the current channel.</param>
		<param name=" sinkProvider">The <see cref="System.Runtime.Remoting.Channels.IServerChannelSinkProvider"/> to use with the new instance of the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> .</param>
		<exception cref="System.ArgumentException">A provided channel property was badly formatted.</exception>
		<remarks>
			<para>Channel sinks provide a plug-in point that allows access to the underlying
      messages flowing through the channel as well as the stream used by the transport
      mechanism to send messages to a remote object. Channel sinks are also
      responsible for transporting messages between the client and the server.</para>
			<para>To request that the remoting system choose 
      an open port on your behalf, specify port "0" (zero). This will create an
   <see langword="HttpServerChannel "/>instance to listen for requests on the 
      dyamically assigned port. This is typically done on the client to make sure that
      an <see langword="HttpServerChannel "/>is listening for callback
      methods.
   </para>
			<note type="note">
      For more
      information, see <see topic="cpconsinkssinkchains"/>.
      
   </note>
			<note type="note">
      Channel properties are used to
      configure the channel at run time. For a list of possible channel
      properties and an example, see
   <see topic="cpconchannelformatterconfigurationproperties"/> .
      
   </note>
		</remarks>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc>
	<doc for="HttpServerChannel">
		<summary>
			<para>Provides an implementation for a server channel that uses the HTTP protocol
      to transmit messages.</para>
		</summary>
		<remarks>
			<para>By default, the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>
accepts messages in either SOAP or binary
format. </para>
			<para>Channels transport messages between applications across remoting boundaries (for example
   application domains, processes, and machines). These crossings include both inbound
   and outbound. The current channel listens on an endpoint for inbound. The
<see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/> converts the messages 
   sent along it from the HTTP protocol into message objects. </para>
			<para>If there are common language runtimes at both ends of the channel, then a
   session is created between the two ends, in order to connect the client and server
   sink chains on either side of the boundary together. The client part of the
   channel is located at the end of the client context sink chain. The server part
   of the channel is located at the start of the server context sink chain.
   Messages are delivered to the client part of the channel, travel through it, and
   are received by the <see cref="System.Runtime.Remoting.Channels.Http.HttpServerChannel"/>. The channel then
   delivers the messages to the first server context sink. </para>
			<para><see cref="System.Runtime.Remoting.Channels.IChannel"/> implementations use channel
configuration properties to configure the channel at run time. Channel
properties can be specified in a configuration file, or programmatically, inside
of an <see cref="System.Collections.IDictionary"/>. In a
configuration file all values are represented by strings, but when building a
property <see cref="System.Collections.IDictionary"/> programmatically,
value types can be specified with their native values or with strings.</para>
			<para>The following table shows the channel configuration
   properties that can be specified for the current channel. </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Description</description>
				</listheader>
				<item>
					<term><see langword="name"/></term>
					<description>Indicates the name of the channel. This property is
      used to retrieve a specific channel when calling <see cref="System.Runtime.Remoting.Channels.ChannelServices.GetChannel"/>. If this
      property is not set, the system defaults to "http". If you want to
      register more than one <see cref="System.Runtime.Remoting.Channels.Http.HttpChannel"/>, each must have a
      unique name. Set this property to the <see cref="System.String.Empty"/> string ("") if you want to ignore names
      and avoid naming collisions. The system will allow any number of channels
      with the <see cref="System.String.Empty" qualify="true"/>
      name.</description>
				</item>
				<item>
					<term><see langword="priority"/></term>
					<description>An
   integer representing the priority assigned to this channel. For server
   channels, the priority controls the order in which the channel data
   appears in an <see cref="System.Runtime.Remoting.ObjRef"/>. Clients will try to connect to
   the server channels in the order that they are listed in the <see cref="System.Runtime.Remoting.ObjRef"/> .
   The default priority is 1, and negative numbers are allowed. The default
   priority is 1, and negative numbers are allowed.</description>
				</item>
				<item>
					<term><see langword="port"/></term>
					<description>An
   integer specifying the port on which the channel will listen. To request that the remoting system choose an open port on your
   behalf, specify port "0" (zero). This will create an
<see langword="HttpServerChannel "/>instance to listen for requests on the 
   dyamically assigned port. This is typically done on the client to make
   sure that an <see langword="HttpServerChannel "/>is listening for callback
   methods.</description>
				</item>
				<item>
					<term><see langword="supressChannelData"/></term>
					<description><see langword="true "/>or <see langword="false"/>. Specifies that the channel will not
contribute to the <see cref="System.Runtime.Remoting.Channels.Http.HttpChannel.ChannelData"/>.</description>
				</item>
				<item>
					<term><see langword="useIpAddress"/></term>
					<description><see langword="true"/> or <see langword="false"/> . Specifies whether the channel will
use the IP address in the publication URL instead of the computer
name.</description>
				</item>
				<item>
					<term><see langword="listen"/></term>
					<description><see langword="true"/> or <see langword="false"/>. Specifies whether to allow activation
to hook into the outside listener service.</description>
				</item>
				<item>
					<term><see langword="bindTo"/></term>
					<description>An
   IP address resolving to the current computer that specifies which NIC
   to bind the current channel
   to.</description>
				</item>
				<item>
					<term><see langword="machineName"/></term>
					<description>A
   string that specifies the machine name used with the current
   channel. Overrides the <see langword="useIpAddress"/> configuration property
   and the machine name channel
   data.</description>
				</item>
				<item>
					<term><see langword="exclusiveAddressUse"/></term>
					<description>
						<para><see langword="true"/> or <see langword="false"/> . Specifies whether the
   channel will prevent other applications from reusing the IP address/port
   combination by setting the <see cref="System.Net.Sockets.SocketOptionName"/>
   server socket option
   to SocketOptionName.ExclusiveAddressUse. The default is
<see langword="true"/>. </para>
						<para>This property is supported only by the .NET Framework version 1.1 on
   the following platforms: Windows NT 4.0 with SP4 or later, Windows
   Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP
   Professional, Windows .NET Server family. </para>
						<para>This property requires administrator privileges on platforms prior to
   the Windows .NET Server family.</para></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconchannelformatterconfigurationproperties"/>
	</doc>
</docs>
