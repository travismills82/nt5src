<docs>
	<doc for="SoapFormatter.Binder">
		<summary>
			<para>Gets or sets the <see cref="System.Runtime.Serialization.SerializationBinder"/> that 
   controls the binding of a serialized object to a type.</para>
		</summary>
		<value>
			<para>The <see cref="System.Runtime.Serialization.SerializationBinder"/> used with this <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>.</para>
		</value>
		<seealso cref="System.Runtime.Serialization.SerializationBinder"/>
	</doc><doc for="SoapFormatter.SurrogateSelector">
		<summary>
			<para>Gets or sets the <see cref="System.Runtime.Serialization.SurrogateSelector"/> that controls type substitution
 during serialization and deserialization.</para>
		</summary>
		<value>
			<para>The <see cref="System.Runtime.Serialization.SurrogateSelector"/> used with this <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>.</para>
		</value>
		<remarks>
			<para>Used by <see cref="System.Runtime.Remoting"/> to generate <see cref="System.Runtime.Remoting.ObjRef"/> instances for <see cref="System.MarshalByRefObject"/> objects.</para>
		</remarks>
	</doc><doc for="SoapFormatter.TopObject">
		<summary>
			<para> Gets or sets the <see cref="System.Runtime.Serialization.Formatters.ISoapMessage"/>
into which the SOAP top object is deserialized.</para>
		</summary>
		<value>
			<para> The <see cref="System.Runtime.Serialization.Formatters.ISoapMessage"/> into which the SOAP top object is deserialized.
 </para>
		</value>
		<remarks>
			<para> This property is used for SOAP remote procedure call (RPC) format,
 and specifies that the SOAP top record is a method called remotely, and
 not a common language runtime object type.
 </para>
		</remarks>
	</doc><doc for="SoapFormatter.TypeFormat">
		<summary>
			<para>Gets or sets the format in which type descriptions are
 laid out in the serialized stream.</para>
		</summary>
		<value>
			<para>The format in which type descriptions are laid out in the
 serialized stream.</para>
		</value>
		<seealso cref="System.Runtime.Serialization.Formatters.FormatterTypeStyle"/>
	</doc><doc for="SoapFormatter.AssemblyFormat">
		<summary>
			<para> Gets or sets the format in which assembly names are serialized.
 </para>
		</summary>
		<value>
			<para> The format in which assembly names are serialized.
 </para>
		</value>
		<seealso cref="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle"/>
	</doc><doc for="SoapFormatter.Context">
		<summary>
			<para>Gets or sets the <see cref="System.Runtime.Serialization.StreamingContext"/>
used with this <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> .</para>
		</summary>
		<value>
			<para>The <see cref="System.Runtime.Serialization.StreamingContext"/>
used with this <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> .</para>
		</value>
		<remarks>
			<para>The <see cref="System.Runtime.Serialization.StreamingContext"/> provides an enumeration that
 describes the source and the destination for a given serialized stream, as well
 as a way for serialization to retain that context and an additional
 caller-defined context.</para>
		</remarks>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
	</doc><doc for="SoapFormatter.SoapFormatter1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> class with the
   specified <see cref="System.Runtime.Serialization.ISurrogateSelector"/> and <see cref="System.Runtime.Serialization.StreamingContext"/>.
   </para>
		</summary>
		<param name="selector">The <see cref="System.Runtime.Serialization.ISurrogateSelector"/> to use with the new instance of <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>. Can be <see langword="null"/>.</param>
		<param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that holds the source and destination of the serialization. If the <paramref name="context"/> parameter is <see langword="null"/>, then the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context"/> defaults to <see cref="System.Runtime.Serialization.StreamingContextStates.CrossMachine"/>.</param>
		<remarks>
			<para> Objects are
      serialized to, or deserialized from, the specified <see cref="System.IO.Stream"/>.
      </para>
			<para> The serialization or deserialization process uses the
      specified <see cref="System.Runtime.Serialization.ISurrogateSelector"/> to search for surrogates that are
      registered for the object types you want to deserialize. Surrogates are helpers
      that serialize and deserialize objects of specific classes. The default <see cref="System.Runtime.Serialization.ISurrogateSelector"/> cannot handle the serialization of
      objects that derive from the <see cref="System.MarshalByRefObject"/> for remoting purposes. In a remoting
      situation the specified <see cref="System.Runtime.Serialization.ISurrogateSelector"/> replaces the
      object derived from <see cref="System.MarshalByRefObject"/> with an <see cref="System.Runtime.Remoting.ObjRef"/> object that is serialized by the
      specified surrogate selector. Therefore, if you want to use remote objects, set
      the <paramref name="selector"/> parameter to an instance of <see cref="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector"/> .
      If you do not need
      surrogates, set the <paramref name="selector "/>parameter to be <see langword="null"/>.
      </para>
		</remarks>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
	</doc><doc for="SoapFormatter.Serialize1">
		<summary>
			<para>Serializes an object, or graph of objects with the specified root to the
      given <see cref="System.IO.Stream"/> in the SOAP RPC
      (Remote Procedure Call) format.</para>
		</summary>
		<param name="serializationStream">The stream onto which the formatter puts the data to serialize. </param>
		<param name="graph">The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized.</param>
		<param name="headers">Remoting headers to include in the serialization. Can be <see langword="null"/>.</param>
		<exception cref="System.ArgumentNullException"><paramref name="serializationStream"/> is <see langword="null"/>.</exception>
		<remarks>
			<note type="note">
      Headers are used only for specific remoting applications.
      
   </note>
		</remarks>
	</doc><doc for="SoapFormatter.Deserialize1">
		<summary>
			<para> Deserializes the stream into an object graph, with any
      headers in that stream being handled by the given <see cref="System.Runtime.Remoting.Messaging.HeaderHandler"/>
      .
      </para>
		</summary>
		<param name="serializationStream">The stream containing the data to deserialize. </param>
		<param name="handler">Delegate to handle any headers found on the stream. Can be <see langword="null"/>.</param>
		<returns>
			<para> The top object of the deserialized graph (root).
      </para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="serializationStream"/> is <see langword="null"/>.</exception>
		<exception cref="System.Runtime.Serialization.SerializationException"><paramref name="serializationStream"/> supports seeking, and its length is 0.</exception>
		<remarks>
			<para> Headers are used only for specific remoting
      applications. The <see cref="System.Runtime.Remoting.Messaging.HeaderHandler"/> parameter is one of two
      ways to return headers from a stream in SOAP RPC (Remote Procedure Call)
      format. The other way is to use the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject"/> property.
      
   </para>
			<note type="note">
      In order for deserialization to
      succeed the current position in the stream must be at the beginning of the
      object graph.
      
   </note>
		</remarks>
	</doc><doc for="SoapFormatter.FilterLevel">
		<summary>
			<para>Gets or sets the <see cref="System.Runtime.Serialization.Formatters.TypeFilterLevel"/> of 
   automatic deserialization the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> performs.</para>
		</summary>
		<value>
			<para>The <see cref="System.Runtime.Serialization.Formatters.TypeFilterLevel"/> representing the 
   current automatic deserialization level.</para>
		</value>
		<remarks>
			<para>Supported values are <see cref="System.Runtime.Serialization.Formatters.TypeFilterLevel.Low"/> and 
<see cref="System.Runtime.Serialization.Formatters.TypeFilterLevel.Full"/> (the default). For 
   details about deserialization levels, see
<see topic="cpconAutomaticDeserializationInNETRemoting"/>.</para>
		</remarks>
		<seealso topic="cpconAutomaticDeserializationInNETRemoting"/>
	</doc>
	<doc for="SoapFormatter">
		<summary>
			<para> Serializes and deserializes an object, or an entire graph of
      connected objects, in SOAP format.</para>
		</summary>
		<remarks>
			<para>The <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> and <see cref="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/> classes
   implement the <see cref="System.Runtime.Remoting.Messaging.IRemotingFormatter"/> interface to support remote
   procedure calls (RPCs), and the <see cref="System.Runtime.Serialization.IFormatter"/> interface (inherited by the
<see cref="System.Runtime.Remoting.Messaging.IRemotingFormatter"/>) 
   to support serialization of a graph of objects. The <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> class also
   supports RPCs with <see cref="System.Runtime.Serialization.Formatters.ISoapMessage"/> objects, without using
   the <see cref="System.Runtime.Remoting.Messaging.IRemotingFormatter"/> functionality. </para>
			<para>During RPCs, the <see cref="System.Runtime.Remoting.Messaging.IRemotingFormatter"/> interface allows the
specification of two separate object graphs: the graph of objects to
serialize, and an additional graph containing an array of header objects that
convey information about the remote function call (for example, transaction
ID or a method signature). For proper serialization, the root object of the
first graph must be an object that implements either the <see cref="System.Runtime.Remoting.Messaging.IMethodCallMessage"/> interface or the <see cref="System.Runtime.Remoting.Messaging.IMethodReturnMessage"/> interface. </para>
			<para>During deserialization of an RPC, a <see cref="System.Runtime.Remoting.Messaging.HeaderHandler"/> delegate is specified to the
<see cref="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize"/> 
method of the formatter. The remoting infrastructure uses the <see cref="System.Runtime.Remoting.Messaging.HeaderHandler"/> delegate to produce an object
that supports the <see cref="System.Runtime.Serialization.ISerializable"/>
interface. This object contains the information stored in the headers, and
becomes the root of the graph returned by the deserializer. </para>
			<para>The <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> can also handle
RPCs that are produced with objects implementing the <see cref="System.Runtime.Serialization.Formatters.ISoapMessage"/> interface. To create an
RPC without using the <see cref="System.Runtime.Remoting.Messaging.IRemotingFormatter"/> functionality, place an
object that supports the <see cref="System.Runtime.Serialization.Formatters.ISoapMessage"/> interface
at the root of a graph being serialized. To deserialize an RPC created in this
manner the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject"/>
property must be set to another object that supports the <see cref="System.Runtime.Serialization.Formatters.ISoapMessage"/>
interface, and
contains the relevant remote call information.</para>
		</remarks>
		<example>
			<codelink SampleID="SoapFormatter Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SoapFormatter.SoapFormatter">
		<overload>
			<para> Intializes a new instance of the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> class with default property values.
   </para>
		</summary>
		<remarks>
			<para> The following table shows the initial property values for
      an instance of <see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> .
      </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector"/></term>
					<description><see langword="null"/>.</description>
				</item>
				<item>
					<term><see cref="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context"/></term>
					<description>A new
<see cref="System.Runtime.Serialization.StreamingContext"/> 
initialized to specify that the serialized data can
be transmitted to or received from any of the other
contexts. </description>
				</item>
			</list>
		</remarks>
		<example>
			<codelink SampleID="SoapFormatter Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SoapFormatter.Deserialize">
		<overload>
			<para> Deserializes a stream into an object graph.
      </para>
		</overload>
		<summary>
			<para> Deserializes the data on the provided stream and reconstitutes the graph of objects.
      </para>
		</summary>
		<param name="serializationStream">The stream containing the data to deserialize. </param>
		<returns>
			<para> The top object of the deserialized graph (root).
      </para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="serializationStream"/> is <see langword="null"/>.</exception>
		<remarks>
			<note type="note">
      For successful deserialization, the
      current position in the stream must be at the beginning of the object graph.
      
   </note>
		</remarks>
		<example>
			<codelink SampleID="SoapFormatter Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="SoapFormatter.Serialize">
		<overload>
			<para> Serializes an object, or graph of connected objects.
      </para>
		</overload>
		<summary>
			<para> Serializes an object, or graph of objects with the
      specified root to the given <see cref="System.IO.Stream"/>.
      </para>
		</summary>
		<param name="serializationStream">The stream onto which the formatter puts the data to serialize. </param>
		<param name="graph">The object, or root of the object graph, to serialize. All child objects of this root object are automatically serialized. </param>
		<exception cref="System.ArgumentNullException"><paramref name="serializationStream"/> is <see langword="null"/>.</exception>
		<example>
			<codelink SampleID="SoapFormatter Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
