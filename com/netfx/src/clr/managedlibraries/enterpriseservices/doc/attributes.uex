<docs>
	<doc for="TransactionIsolationLevel.ReadUncommitted">
		<summary>
			<para>Shared locks are issued and no exclusive locks are honored.</para>
		</summary>
	</doc>
	<doc for="TransactionIsolationLevel.Serializable">
		<summary>
			<para>Prevents updating or inserting until the transaction is complete.</para>
		</summary>
	</doc>
	<doc for="TransactionAttribute.Isolation">
		<summary>
			<para>Gets or sets the transaction isolation level.</para>
		</summary>
		<value>
			<para>
            One of the 
            <see cref="System.EnterpriseServices.TransactionIsolationLevel"/>
             values.
         </para>
		</value>
	</doc>
	<doc for="JustInTimeActivationAttribute.Value">
		<summary>
			<para>
            Gets the value of the 
            <see cref="System.EnterpriseServices.JustInTimeActivationAttribute"/>
             setting.
         </para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if JIT activation is enabled; otherwise, 

            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
	</doc>
	<doc for="ApplicationNameAttribute">
		<summary>
			<para> Specifies the name of the COM+ application to be used for the install of the components in the
 assembly. This class cannot be inherited.</para>
		</summary>
	</doc>
	<doc for="ApplicationQueuingAttribute.Enabled">
		<summary>
			<para>Gets or sets a value indicating whether queuing support is enabled.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if queuing support is enabled; otherwise, 

            <see langword="false"/>
            . The 
 default value set by the constructor is 
            <see langword="true"/>
            .
         </para>
		</value>
		<remarks>
			<para>
            Applications are not able to use queued components by default. 
 Instantiating 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute"/>
             enables
 an application to use queued components; however, it does not enable the
 application to listen
 for queued messages from clients. 
         </para>
		</remarks>
	</doc>
	<doc for="ApplicationQueuingAttribute.MaxListenerThreads">
		<summary>
			<para> Gets or sets the number 
 of threads used to extract messages from the queue
 and activate the corresponding component.</para>
		</summary>
		<value>
			<para>The maximum number of threads to use for processing messages arriving in the queue. The default is 
 zero.</para>
		</value>
	</doc>
	<doc for="ConstructionEnabledAttribute.ConstructionEnabledAttribute">
		<overload>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute"/>
             class. 
         </para>
		</overload>
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute"/>
             class and
 initializes the default settings for 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute.Enabled"/>
             and 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute.Default"/>
            .
         </para>
		</summary>
		<remarks>
			<para>
            The following table shows initial property values for an instance of 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute"/>
            .
         </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term> Default</term>
					<description>An 
 empty string ("")</description>
				</item>
				<item>
					<term> Enabled</term>
					<description>
						<see langword="true"/>
					</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="ApplicationQueuingAttribute.ApplicationQueuingAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute"/>
             class, 
 enabling queuing support for the assembly and initializing 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute.Enabled"/>
            , 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute.QueueListenerEnabled"/>
            , and 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute.MaxListenerThreads"/>
            
 .
         </para>
		</summary>
		<remarks>
			<para>
            The following table shows initial property values for an instance of 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute"/>
            .
         </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term> Enabled</term>
					<description>
						<see langword="true"/>
					</description>
				</item>
				<item>
					<term> QueueListenerEnabled</term>
					<description>
						<see langword="false"/>
					</description>
				</item>
				<item>
					<term> MaxListenerThreads</term>
					<description>zero (0)</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="ConstructionEnabledAttribute.ConstructionEnabledAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute"/>
             class, setting 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute.Enabled"/>
             to the specified value.
         </para>
		</summary>
		<param name="val">
			<see langword="true"/>
          to enable COM+ object construction support; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="ConstructionEnabledAttribute.Default">
		<summary>
			<para> Gets or sets a default value for the constructor
 string.</para>
		</summary>
		<value>
			<para>The value to be used for the default constructor string. The default is 
 an empty string ("").</para>
		</value>
	</doc>
	<doc for="ConstructionEnabledAttribute.Enabled">
		<summary>
			<para>Gets or sets a value indicating whether COM+ object construction support is enabled.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if COM+ object construction support is enabled; 
 otherwise, 
            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
	</doc>
	<doc for="EventClassAttribute.EventClassAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.EventClassAttribute"/>
             class.
         </para>
		</summary>
		<remarks>
			<para>
            The following table shows initial property values for an instance of 
            <see cref="System.EnterpriseServices.EventClassAttribute"/>
            .
         </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term> FireInParallel</term>
					<description>
						<see langword="false"/>
					</description>
				</item>
				<item>
					<term> AllowInProcSubscribers</term>
					<description>
						<see langword="true"/>
					</description>
				</item>
				<item>
					<term> PublisherFilter</term>
					<description>
						<see langword="null"/>
					</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="EventClassAttribute.FireInParallel">
		<summary>
			<para>Gets or sets a value indicating whether events are to be
 delivered to subscribers in parallel.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if events are
 to be delivered to subscribers in parallel; otherwise, 
            <see langword="false"/>
            .
         </para>
		</value>
	</doc>
	<doc for="EventClassAttribute.AllowInprocSubscribers">
		<summary>
			<para>Gets or sets a value indicating whether subscribers can be activated in the publisher's
 process.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if subscribers can be activated in the publisher's
 process; otherwise, 
            <see langword="false"/>
            .
         </para>
		</value>
	</doc>
	<doc for="EventClassAttribute.PublisherFilter">
		<summary>
			<para>Gets or sets a publisher filter for an event method.</para>
		</summary>
		<value>
			<para>The publisher filter.</para>
		</value>
	</doc>
	<doc for="ExceptionClassAttribute">
		<summary>
			<para>Sets the queuing exception class for the queued class. 
 This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="ExceptionClassAttribute.ExceptionClassAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ExceptionClassAttribute"/>
             class.
         </para>
		</summary>
		<param name="name">The name of the exception class for the player to activate and play back before the message is routed to the dead letter queue.</param>
	</doc>
	<doc for="IISIntrinsicsAttribute.Value">
		<summary>
			<para>Gets a value indicating whether access to the ASP intrinsic values is enabled.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if access is enabled; otherwise, 

            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
	</doc>
	<doc for="InterfaceQueuingAttribute.Interface">
		<summary>
			<para>Gets or sets the name of the interface on which queuing is enabled.</para>
		</summary>
		<value>
			<para>The name of the interface on which queuing is enabled.</para>
		</value>
	</doc>
	<doc for="ConstructionEnabledAttribute">
		<summary>
			<para> Enables COM+ object construction support. This class cannot be inherited.
 </para>
		</summary>
		<remarks>
			<para>
            For a list of initial property values for an instance of 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute"/>
            , see the 
            <see cref="System.EnterpriseServices.ConstructionEnabledAttribute()"/>
             constructor.
         </para>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="ObjectPoolingAttribute.ObjectPoolingAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
             class and sets the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize"/>
             and 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize"/>
             properties.
         </para>
		</summary>
		<param name="minPoolSize">The minimum pool size.</param>
		<param name=" maxPoolSize">The maximum pool size.</param>
	</doc>
	<doc for="ObjectPoolingAttribute.ObjectPoolingAttribute2">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
             class and sets the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute.Enabled"/>
             property.
         </para>
		</summary>
		<param name="enable">
			<see langword="true"/>
          to enable object pooling; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="ObjectPoolingAttribute.Enabled">
		<summary>
			<para>Gets or sets a value indicating whether object pooling is enabled.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if object pooling is enabled; otherwise, 

            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
	</doc>
	<doc for="PrivateComponentAttribute.PrivateComponentAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.PrivateComponentAttribute"/>
             class.
         </para>
		</summary>
	</doc>
	<doc for="SynchronizationAttribute.Value">
		<summary>
			<para>
            Gets the current setting of the 
            <see cref="System.EnterpriseServices.SynchronizationAttribute.Value"/>
             property.
         </para>
		</summary>
		<value>
			<para>
            One of the 
            <see cref="System.EnterpriseServices.SynchronizationOption"/>
             values. The default is 

            <see langword="Required"/>
            .
         </para>
		</value>
	</doc>
	<doc for="SynchronizationAttribute.SynchronizationAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.SynchronizationAttribute"/>
             class 
 with the
 specified 
            <see cref="System.EnterpriseServices.SynchronizationOption"/>
            .
         </para>
		</summary>
		<param name="val">
         One of the 
         <see cref="System.EnterpriseServices.SynchronizationOption"/>
          values.
      </param>
	</doc>
	<doc for="ActivationOption">
		<summary>
			<para> Specifies the manner in which serviced
 components are activated in the application.</para>
		</summary>
		<remarks>
			<para> The activation setting for the application defaults to Library.
 </para>
		</remarks>
	</doc>
	<doc for="ActivationOption.Library">
		<summary>
			<para> Specifies that serviced components in the marked application are
 activated in the creator's process.</para>
		</summary>
	</doc>
	<doc for="TransactionAttribute.Timeout">
		<summary>
			<para>Gets or sets the time-out for this transaction.</para>
		</summary>
		<value>
			<para>The transaction time-out in seconds.</para>
		</value>
	</doc>
	<doc for="SynchronizationOption">
		<summary>
			<para> Specifies the type of automatic
 synchronization requested by the component.</para>
		</summary>
	</doc>
	<doc for="SynchronizationOption.RequiresNew">
		<summary>
			<para>An object with this value must participate in a new
 synchronization where COM+ manages contexts and apartments on behalf of all
 components involved in the call.</para>
		</summary>
	</doc>
	<doc for="ObjectPoolingAttribute.MinPoolSize">
		<summary>
			<para>Gets or sets the value for the minimum size of the pool.</para>
		</summary>
		<value>
			<para>The minimum number of objects in the pool.</para>
		</value>
		<remarks>
			<para>
				<see cref="System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize"/>
             represents the number of objects that are created when the 
 application starts and the minimum number of objects that are maintained in the
 pool while the application is running. If the number of available objects in the
 pool drops below the specified minimum, new objects are created to meet any
 outstanding object requests and refill the pool. If the number of available
 objects in the pool is greater than the minimum number, those surplus objects
 are destroyed during a clean-up cycle. 
         </para>
		</remarks>
	</doc>
	<doc for="EventTrackingEnabledAttribute.EventTrackingEnabledAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.EventTrackingEnabledAttribute"/>
             class, 
 optionally disabling event tracking.
         </para>
		</summary>
		<param name="val">
			<see langword="true"/>
          to enable event tracking; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="LoadBalancingSupportedAttribute.LoadBalancingSupportedAttribute">
		<overload>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.LoadBalancingSupportedAttribute"/>
             class.
         </para>
		</overload>
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.LoadBalancingSupportedAttribute"/>
             class, specifying load balancing support.
         </para>
		</summary>
	</doc>
	<doc for="LoadBalancingSupportedAttribute.LoadBalancingSupportedAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.LoadBalancingSupportedAttribute"/>
             class, optionally disabling load 
 balancing support.
         </para>
		</summary>
		<param name="val">
			<see langword="true"/>
          to enable load balancing support; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="LoadBalancingSupportedAttribute.Value">
		<summary>
			<para>Gets a value indicating whether load balancing support is enabled.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if load balancing support is enabled; otherwise, 

            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
	</doc>
	<doc for="ApplicationIDAttribute.ApplicationIDAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ApplicationIDAttribute"/>
             class 
 specifying the GUID representing
 the application ID for the COM+ application.
         </para>
		</summary>
		<param name="guid">The GUID associated with the COM+ application.</param>
	</doc>
	<doc for="InterfaceQueuingAttribute.InterfaceQueuingAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.InterfaceQueuingAttribute"/>
             class,
 optionally disabling queuing support.
         </para>
		</summary>
		<param name="enabled">
			<see langword="true"/>
          to enable queuing support; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="DescriptionAttribute.DescriptionAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.DescriptionAttribute"/>
             class.
         </para>
		</summary>
		<param name="desc">The description of the assembly (application), component, method, or interface.</param>
	</doc>
	<doc for="ApplicationActivationAttribute">
		<summary>
			<para> Specifies whether
      components in the assembly run in the creator's process or in
      a system process.
      </para>
		</summary>
	</doc>
	<doc for="DescriptionAttribute">
		<summary>
			<para> Sets the description on an assembly (application), component, method, or interface. This class
      cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="ExceptionClassAttribute.Value">
		<summary>
			<para> Gets the name of the exception class for
      the player to activate and play back before the message is routed to the dead letter queue.</para>
		</summary>
		<value>
			<para>The name of the exception class for the player to activate and play
      back before the message is routed to the dead letter queue.</para>
		</value>
	</doc>
	<doc for="COMTIIntrinsicsAttribute.COMTIIntrinsicsAttribute">
		<overload>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.COMTIIntrinsicsAttribute"/>
             class.
         </para>
		</overload>
		<summary>
         
   Initializes a new instance of the 
         <see cref="System.EnterpriseServices.COMTIIntrinsicsAttribute"/>
          class,
   setting the 
         <see cref="System.EnterpriseServices.COMTIIntrinsicsAttribute.Value"/>
          property to

         <see langword="true"/>
         .

      </summary>
	</doc>
	<doc for="ApplicationActivationAttribute.SoapMailbox">
		<summary>
			<para>This property is not supported in the current version.</para>
		</summary>
		<value>
			<para>This property is not supported in the current version.</para>
		</value>
	</doc>
	<doc for="ObjectPoolingAttribute.IsValidTarget">
		<summary>
			<para>Reserved method, internal use only.</para>
		</summary>
		<param name="s">For internal use only.</param>
		<returns>
			<para>For internal use only.</para>
		</returns>
	</doc>
	<doc for="ObjectPoolingAttribute.Apply">
		<summary>
			<para>Reserved method, internal use only.</para>
		</summary>
		<param name="info">For internal use only.</param>
		<returns>
			<para>For internal use only.</para>
		</returns>
	</doc>
	<doc for="ObjectPoolingAttribute.AfterSaveChanges">
		<summary>
			<para>Reserved method, internal use only.</para>
		</summary>
		<param name="info">For internal use only</param>
		<returns>
			<para>For internal use only.</para>
		</returns>
	</doc>
	<doc for="ActivationOption.Server">
		<summary>
			<para> Specifies that serviced components in the marked application are
      activated in a system-provided process.</para>
		</summary>
	</doc>
	<doc for="PrivateComponentAttribute">
		<summary>
			<para>Identifies a component as a private component that is only seen and activated by components in the
      same application. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="ApplicationActivationAttribute.ApplicationActivationAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ApplicationActivationAttribute"/>
             class,
   setting
   the specified 
            <see cref="System.EnterpriseServices.ActivationOption"/>
             value.
         </para>
		</summary>
		<param name="opt">
         One of the 
         <see cref="System.EnterpriseServices.ActivationOption"/>
          values.
      </param>
	</doc>
	<doc for="ApplicationActivationAttribute.Value">
		<summary>
			<para>
             Gets the specified 
            <see cref="System.EnterpriseServices.ActivationOption"/>
             value.
         </para>
		</summary>
		<value>
			<para>
            One of the 
            <see cref="System.EnterpriseServices.ActivationOption"/>
             values, either

            <see langword="Library"/>
             or 
            <see langword="Server"/>
            .
         </para>
		</value>
	</doc>
	<doc for="ApplicationIDAttribute.Value">
		<summary>
			<para>Gets the GUID of the COM+ application.</para>
		</summary>
		<value>
			<para>The GUID representing the COM+ application.</para>
		</value>
		<remarks>
			<para>
				<see cref="System.EnterpriseServices.ApplicationIDAttribute.Value"/>
             is set by the constructor using
   the GUID passed in as a parameter.
         </para>
		</remarks>
	</doc>
	<doc for="ApplicationNameAttribute.ApplicationNameAttribute">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ApplicationNameAttribute"/>
             
class, specifying the name of the COM+ application to be used for
the install of the components.
         </para>
		</summary>
		<param name="name">The name of the COM+ application.</param>
	</doc>
	<doc for="ApplicationNameAttribute.Value">
		<summary>
			<para> Gets a value indicating the name of
      the COM+ application that contains the components in the assembly.</para>
		</summary>
		<value>
			<para>The name of the COM+ application.</para>
		</value>
	</doc>
	<doc for="SynchronizationAttribute">
		<summary>
			<para> Sets the synchronization value of the component. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> 
      Both transaction and just-in-time (JIT) activation enable synchronization automatically.
      </para>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
             .
   
         </para>
		</remarks>
	</doc>
	<doc for="SynchronizationOption.Disabled">
		<summary>
			<para> COM+ ignores the synchronization requirements of
      the component when determining context for the object.</para>
		</summary>
	</doc>
	<doc for="SynchronizationOption.Supported">
		<summary>
			<para>An object with this value participates in synchronization,
      if it exists.</para>
		</summary>
	</doc>
	<doc for="SynchronizationOption.Required">
		<summary>
			<para> Ensures that all objects created from the component are synchronized.</para>
		</summary>
	</doc>
	<doc for="TransactionIsolationLevel">
		<summary>
			<para>
             Specifies the value of the 
            <see cref="System.EnterpriseServices.TransactionAttribute"/>
            .
         </para>
		</summary>
	</doc>
	<doc for="TransactionOption.Disabled">
		<summary>
			<para>Ignores any transaction in the current context.</para>
		</summary>
	</doc>
	<doc for="TransactionOption.NotSupported">
		<summary>
			<para> Creates the component in a context with no governing transaction.
      </para>
		</summary>
	</doc>
	<doc for="TransactionOption.RequiresNew">
		<summary>
			<para> Creates the component with a new transaction, regardless of the state of the current context.
      </para>
		</summary>
	</doc>
	<doc for="TransactionOption">
		<summary>
			<para> Specifies the automatic transaction
      type requested by the component.</para>
		</summary>
		<remarks>
			<para>
             When using the .NET Installation Tool (Regsvcs.exe), the
      transaction option for a 
            <see cref="System.EnterpriseServices.ServicedComponent"/>
             defaults to 
            <see cref="System.EnterpriseServices.TransactionOption.Disabled"/>
            .
      
         </para>
		</remarks>
	</doc>
	<doc for="SynchronizationOption.NotSupported">
		<summary>
			<para>An object with this value never participates in synchronization, regardless
      of the status of its caller. This setting is only available for
      components that are non transactional and do not use just-in-time (JIT) activation.</para>
		</summary>
	</doc>
	<doc for="TransactionIsolationLevel.ReadCommitted">
		<summary>
			<para>Shared locks are held while the data is being read to avoid reading
      modified data, but the data can be changed before the end of the transaction,
      resulting in non repeatable reads or phantom data.</para>
		</summary>
	</doc>
	<doc for="ApplicationQueuingAttribute">
		<summary>
			<para>Enables queuing support for the marked assembly and enables the application
      to read method calls from Message Queuing queues. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>
            For a list of initial property values for an instance of 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute"/>
            , see the 
            <see cref="System.EnterpriseServices.ApplicationQueuingAttribute()"/>
             
constructor.

         </para>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="ApplicationQueuingAttribute.QueueListenerEnabled">
		<summary>
			<para>Gets or sets a value indicating whether the application
      will accept queued component calls from clients.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if the application accepts queued component calls;
   otherwise, 
            <see langword="false"/>
            . The default is 
            <see langword="false"/>
            .
         </para>
		</value>
	</doc>
	<doc for="COMTIIntrinsicsAttribute.COMTIIntrinsicsAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.COMTIIntrinsicsAttribute"/>
             class,
   enabling the setting of the 
            <see cref="System.EnterpriseServices.COMTIIntrinsicsAttribute.Value"/>
            
   property.
         </para>
		</summary>
		<param name="val">
			<see langword="true"/>
          if the COMTI context properties are passed into the COM+ context; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="COMTIIntrinsicsAttribute.Value">
		<summary>
			<para>Gets a value indicating whether the COMTI context properties are
      passed into the COM+ context.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if 
   the COMTI context
   properties are passed into the COM+ context; otherwise,

            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
	</doc>
	<doc for="EventClassAttribute">
		<summary>
			<para> Marks the attributed class as an event class. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> Method calls on
      an event class are never delivered to the implementation; they
      are instead delivered to event subscribers.
      </para>
			<para>
            For a list of initial property values for an instance of 
            <see cref="System.EnterpriseServices.EventClassAttribute"/>
            , see the 
            <see cref="System.EnterpriseServices.EventClassAttribute()"/>
             constructor.
         </para>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="EventTrackingEnabledAttribute">
		<summary>
			<para> Enables event tracking for a component. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para>
             For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
             .
   
         </para>
		</remarks>
	</doc>
	<doc for="EventTrackingEnabledAttribute.EventTrackingEnabledAttribute">
		<overload>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.EventTrackingEnabledAttribute"/>
             class.
         </para>
		</overload>
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.EventTrackingEnabledAttribute"/>
             class,
   enabling event tracking.
         </para>
		</summary>
		<remarks>
			<para> The default constructor enables event tracking.</para>
		</remarks>
	</doc>
	<doc for="IISIntrinsicsAttribute.IISIntrinsicsAttribute">
		<overload>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.IISIntrinsicsAttribute"/>
             class.
         </para>
		</overload>
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.IISIntrinsicsAttribute"/>
             class,
   enabling access to the ASP intrinsic values.
         </para>
		</summary>
	</doc>
	<doc for="IISIntrinsicsAttribute.IISIntrinsicsAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.IISIntrinsicsAttribute"/>
             class,
   optionally disabling access to the ASP intrinsic values.
         </para>
		</summary>
		<param name="val">
			<see langword="true"/>
          to enable access to the ASP intrinsic values; otherwise, 
         <see langword="false"/>
         .
      </param>
	</doc>
	<doc for="InterfaceQueuingAttribute.InterfaceQueuingAttribute">
		<overload>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.InterfaceQueuingAttribute"/>
             class,
   enabling queuing support.
         </para>
		</overload>
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.InterfaceQueuingAttribute"/>
             class setting the 
            <see cref="System.EnterpriseServices.InterfaceQueuingAttribute.Enabled"/>
             and 
            <see cref="System.EnterpriseServices.InterfaceQueuingAttribute.Interface"/>
             properties to their default values.
         </para>
		</summary>
		<remarks>
			<para>
            The following table shows initial property values for an instance of 
            <see cref="System.EnterpriseServices.InterfaceQueuingAttribute"/>
            .
         </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term> Enabled</term>
					<description>
						<see langword="true"/>
					</description>
				</item>
				<item>
					<term> Interface</term>
					<description>
						<see langword="null"/>
					</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="InterfaceQueuingAttribute.Enabled">
		<summary>
			<para>Gets or sets a value indicating whether queuing support is enabled.</para>
		</summary>
		<value>
			<para>
				<see langword="true"/>
             if queuing support is enabled; otherwise,

            <see langword="false"/>
            . The default is 
            <see langword="true"/>
            .
         </para>
		</value>
		<remarks>
			<para>
            This property corresponds to the 
   
            <see langword="Queuing-Enabled"/>
             property in COM+.
         </para>
		</remarks>
	</doc>
	<doc for="LoadBalancingSupportedAttribute">
		<summary>
			<para> Determines whether the component participates in load
      balancing, if the component load balancing service is installed and enabled on the server.</para>
		</summary>
	</doc>
	<doc for="ObjectPoolingAttribute">
		<summary>
			<para> Enables and configures object pooling for a
      component. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> If object pooling is specified, it must not be
      disabled in the COM+ catalog; if enabled in the COM+ catalog, it must be
      specified on the component. </para>
			<para>
            For a list of initial property values for an instance of 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
            , see the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute()"/>
             constructor.
         </para>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
             . 
         </para>
		</remarks>
	</doc>
	<doc for="ObjectPoolingAttribute.ObjectPoolingAttribute3">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
             class and sets the 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute.Enabled"/>
            , 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize"/>
            , and 
            <see cref="System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize"/>
            
properties.
         </para>
		</summary>
		<param name="enable">
			<see langword="true"/>
          to enable object pooling; otherwise, 
         <see langword="false"/>
         .
      </param>
		<param name=" minPoolSize">The minimum pool size.</param>
		<param name=" maxPoolSize">The maximum pool size.</param>
	</doc>
	<doc for="ObjectPoolingAttribute.CreationTimeout">
		<summary>
			<para>Gets or sets the length of time to wait for an object to become available
      in the pool before throwing an exception. This value is in
      milliseconds.</para>
		</summary>
		<value>
			<para>The time-out value in milliseconds.</para>
		</value>
		<remarks>
			<para> Specifies how long a client will wait, in milliseconds,
      for an object to be returned from the pool. </para>
		</remarks>
	</doc>
	<doc for="TransactionAttribute">
		<summary>
			<para>
             Specifies the type of transaction that is available
      to the attributed object. Permissible values are members of the 
            <see cref="System.EnterpriseServices.TransactionOption"/>
            
      enumeration.
      
         </para>
		</summary>
		<remarks>
			<para>
            For more information about using attributes, see 
            <see topic="cpconExtendingMetadataUsingAttributes"/>
            .
         </para>
		</remarks>
	</doc>
	<doc for="TransactionAttribute.TransactionAttribute1">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.EnterpriseServices.TransactionAttribute"/>
             class, specifying the transaction type.
         </para>
		</summary>
		<param name="val">
          The specified transaction type, a 
         <see cref="System.EnterpriseServices.TransactionOption"/>
          value. 
      </param>
	</doc>
	<doc for="TransactionAttribute.Value">
		<summary>
			<para>
            Gets or sets the 
            <see cref="System.EnterpriseServices.TransactionOption"/>
             value
   for the transaction, optionally disabling the transaction service.
         </para>
		</summary>
		<value>
			<para>
             The specified transaction type, a 
            <see cref="System.EnterpriseServices.TransactionOption"/>
             value.
         </para>
		</value>
	</doc>
	<doc for="TransactionAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="JustInTimeActivationAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="SynchronizationAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MustRunInClientContextAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionEnabledAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="COMTIIntrinsicsAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="IISIntrinsicsAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventTrackingEnabledAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ExceptionClassAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="LoadBalancingSupportedAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="EventClassAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="PrivateComponentAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="AutoCompleteAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationActivationAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationNameAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationIDAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationQueuingAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="InterfaceQueuingAttribute.IConfigurationAttribute.IsValidTarget">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="InterfaceQueuingAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="InterfaceQueuingAttribute.IConfigurationAttribute.AfterSaveChanges">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DescriptionAttribute.IConfigurationAttribute.IsValidTarget">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="DescriptionAttribute.IConfigurationAttribute.Apply">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="TransactionAttribute.TransactionAttribute">
		<overload>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.TransactionAttribute"/>
   class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.TransactionAttribute"/>
   class,
   setting the component's requested transaction type to
<see cref="System.EnterpriseServices.TransactionOption.Required"/>
.</para>
		</summary>
	</doc><doc for="TransactionIsolationLevel.Any">
		<summary>
			<para>The isolation level for the component is obtained from 
      the calling component's isolation level. If this is the root component, the
      isolation level used in <see cref="System.EnterpriseServices.TransactionIsolationLevel.Serializable"/>.</para>
		</summary>
	</doc><doc for="TransactionIsolationLevel.RepeatableRead">
		<summary>
			<para>Locks are placed on all data that is used in a query, preventing
      other users from updating the data. Prevents non repeatable reads, but
      phantom rows are still possible.</para>
		</summary>
	</doc><doc for="TransactionOption.Supported">
		<summary>
			<para> Shares a transaction, if one exists.
      </para>
		</summary>
	</doc><doc for="TransactionOption.Required">
		<summary>
			<para> Shares a transaction, if one exists, and creates a new transaction, if necessary.
      </para>
		</summary>
	</doc><doc for="ApplicationActivationAttribute.SoapVRoot">
		<summary>
			<para> Gets or sets
      a value representing a virtual root on the Web for the COM+ application.</para>
		</summary>
		<value>
			<para>The virtual root on the Web for the COM+ application. </para>
		</value>
		<remarks>
			<para>When used, all the work required to set up or tear down SOAP for the application occurs. If this property is set for an application that is running on
      a computer on which the .NET Framework SDK is not installed, an error
      occurs.</para>
		</remarks>
	</doc><doc for="ApplicationIDAttribute">
		<summary>
			<para> Specifies the application ID (as a GUID) for this assembly. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para><see cref="System.EnterpriseServices.ApplicationIDAttribute"/>

takes a GUID in its constructor. When registration occurs,
the components in the assembly are installed in an application with the
given ID.</para>
		</remarks>
	</doc><doc for="AutoCompleteAttribute">
		<summary>
			<para> Marks the attributed method as an 
   <see langword="AutoComplete"/> object. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> The transaction automatically
      calls
   <see cref="System.EnterpriseServices.ContextUtil.SetComplete"/>
   if the method call
   returns normally. If the method call throws an exception, the transaction
   is
   
   aborted.
   
</para>
		</remarks>
	</doc><doc for="AutoCompleteAttribute.AutoCompleteAttribute">
		<overload>
			<para>Set the application to <see langword="AutoComplete"/>.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.AutoCompleteAttribute"/>
   class,
   specifying that the application should automatically call
<see cref="System.EnterpriseServices.ContextUtil.SetComplete"/>
if the transaction completes
successfully.</para>
		</summary>
	</doc><doc for="AutoCompleteAttribute.Value">
		<summary>
			<para> Gets a value indicating the setting of
      the
   <see langword="AutoComplete"/>
   option in
   COM+.
   </para>
		</summary>
		<value>
			<para><see langword="true"/>
if
<see langword="AutoComplete"/>
is enabled in COM+; otherwise,
<see langword="false"/>
. The default is
<see langword="true"/>.</para>
		</value>
	</doc><doc for="COMTIIntrinsicsAttribute">
		<summary>
			<para> Enables you to pass context properties from
      the COM Transaction Integrator (COMTI) into the COM+ context.</para>
		</summary>
		<remarks>
			<para>COMTI provides services for accessing the IBM Customer Information Control
      System (CICS) and IBM Information Management System (IMS). Essentially, COMTI
      provides a set of tools and services that ease the task of wrapping mainframe
      transactions and business logic as COM components.</para>
			<para> For more information about using attributes, see
   <see topic="cpconExtendingMetadataUsingAttributes"/>
   .
   </para>
		</remarks>
	</doc><doc for="EventTrackingEnabledAttribute.Value">
		<summary>
			<para> Gets the value of the
   <see cref="System.EnterpriseServices.EventTrackingEnabledAttribute.Value"/>
   
   property, which indicates whether tracking is enabled.
   </para>
		</summary>
		<value>
			<para><see langword="true"/>
if tracking is enabled; otherwise,
<see langword="false"/>
. The default is
<see langword="true"/>
.</para>
		</value>
	</doc><doc for="IISIntrinsicsAttribute">
		<summary>
			<para> Enables access to ASP intrinsic values from
   <see cref="System.EnterpriseServices.ContextUtil.GetNamedProperty" qualify="true"/>
   . This class cannot be inherited.
   </para>
		</summary>
		<remarks>
			<para> The ASP intrinsic objects can be obtained within a COM+ object
      using the named properties available from the COM+ object context when the
      object was created from ASP. With ASP.NET and the .NET platform, a new set
      of intrinsic objects is used, which are not accessed from a context but rather methods in a
      namespace, much like the
   <see cref="System.EnterpriseServices.ContextUtil"/>
   class. The case of COM+ objects
   created from ASP.NET is viable; therefore the intrinsic objects available to COM
   objects from the COM+ object context might be required so that the COM+ object can
   interact with ASP.NET.
   </para>
			<para> For more information about using attributes, see
<see topic="cpconExtendingMetadataUsingAttributes"/>
.</para>
		</remarks>
	</doc><doc for="ObjectPoolingAttribute.ObjectPoolingAttribute">
		<overload>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
   class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
   class and
   sets the
<see cref="System.EnterpriseServices.ObjectPoolingAttribute.Enabled"/>
,
<see cref="System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize"/>
,
<see cref="System.EnterpriseServices.ObjectPoolingAttribute.MinPoolSize"/>
, and
<see cref="System.EnterpriseServices.ObjectPoolingAttribute.CreationTimeout"/>
properties to their default
values.</para>
		</summary>
		<remarks>
			<para> The following table shows initial property values for an instance of
   <see cref="System.EnterpriseServices.ObjectPoolingAttribute"/>
   .
   </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term> Enabled</term>
					<description><see langword="true"/></description>
				</item>
				<item>
					<term> MaxPoolSize</term>
					<description>-1</description>
				</item>
				<item>
					<term> MinPoolSize</term>
					<description>-1</description>
				</item>
				<item>
					<term> CreationTimeout</term>
					<description>-1</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="InterfaceQueuingAttribute">
		<summary>
			<para> Enables queuing support for the marked interface. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> Calls on this interface will be queued using Message Queuing.
      </para>
			<para>The <see cref="System.EnterpriseServices.InterfaceQueuingAttribute.Interface"/> property should be used when applying the attribute to a
   component. The string passed in must be a full description of the interface's
   type-name: </para>
			<para><c>[InterfaceQueueing("MyNamespace.IMyclass, MyAssembly"]</c>
			</para>
			<para> Notice that the full name of the interface <c>IMyclass</c> is specified, along with 
the name of the assembly containing <c>IMyclass</c>
. </para>
			<para> For a list of initial property values for an instance of
<see cref="System.EnterpriseServices.InterfaceQueuingAttribute"/>
, see the
<see cref="System.EnterpriseServices.InterfaceQueuingAttribute()"/>
constructor.</para>
			<para> For more information about using attributes, see
<see topic="cpconExtendingMetadataUsingAttributes"/>
.</para>
		</remarks>
	</doc><doc for="JustInTimeActivationAttribute">
		<summary>
			<para>Turns just-in-time (JIT) activation on or off. This class cannot be
      inherited.</para>
		</summary>
		<remarks>
			<para>If JIT activation is specified, then it must not be
      disabled in the COM+ catalog, and vice versa (if enabled in the COM+ catalog, it
      must be specified on the component). </para>
			<para> JIT activation defaults to off for components which are
      configured in COM+, but is enabled automatically if automatic
      transactions are requested.
      </para>
			<para> For more information about using attributes, see
   <see topic="cpconExtendingMetadataUsingAttributes"/>
   .
   </para>
		</remarks>
	</doc><doc for="JustInTimeActivationAttribute.JustInTimeActivationAttribute">
		<overload>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.JustInTimeActivationAttribute"/>
   class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.JustInTimeActivationAttribute"/> class. 
      The default constructor enables just-in-time (JIT) activation.
      </para>
		</summary>
	</doc><doc for="JustInTimeActivationAttribute.JustInTimeActivationAttribute1">
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.JustInTimeActivationAttribute"/> class, 
      optionally
      allowing the disabling of just-in-time (JIT) activation by passing
   <see langword="false "/>
   as the parameter.</para>
		</summary>
		<param name="val"><see langword="true"/>to enable JIT activation; otherwise,<see langword="false"/>.</param>
		<remarks>
			<para> JIT activation is required and
   <paramref name="val"/>
   cannot be
   set to
<see langword="false"/>
if the
<see cref="System.EnterpriseServices.TransactionOption"/>
value for the transaction is
<see langword="Supported"/>
,
<see langword="Required"/>
, or
<see langword="RequiresNew"/>
.</para>
		</remarks>
	</doc><doc for="MustRunInClientContextAttribute">
		<summary>
			<para> Forces the attributed object to be created in the context of the creator, if possible. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> If the context attributes of the attributed object conflict
      with those of the context of the creator, a
   <see cref="T:System.Runtime.InteropServices.COMException" qualify="true"/>
   is thrown when an attempt is made to
   create the object.
   </para>
			<para> For more information about using attributes, see
<see topic="cpconExtendingMetadataUsingAttributes"/>
.</para>
		</remarks>
	</doc><doc for="MustRunInClientContextAttribute.MustRunInClientContextAttribute">
		<overload>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.MustRunInClientContextAttribute"/>
   class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.MustRunInClientContextAttribute"/>
   
   class, requiring creation of the object in
   the context of the creator.
   </para>
		</summary>
	</doc><doc for="MustRunInClientContextAttribute.MustRunInClientContextAttribute1">
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.MustRunInClientContextAttribute"/> class,
      optionally not creating the object in the context of the creator.
      </para>
		</summary>
		<param name="val"><see langword="true"/> to create the object in the context of the creator; otherwise,<see langword="false"/>.</param>
	</doc><doc for="MustRunInClientContextAttribute.Value">
		<summary>
			<para> Gets or sets a value indicating whether the attributed object
      is to be created in the context of the creator.</para>
		</summary>
		<value>
			<para><see langword="true"/> if 
   the object is to be created in the context of the
   creator; otherwise,
<see langword="false"/>
. The default is
<see langword="true"/>
.</para>
		</value>
	</doc><doc for="ObjectPoolingAttribute.MaxPoolSize">
		<summary>
			<para> Gets or sets the value for the maximum size of the pool.</para>
		</summary>
		<value>
			<para> The maximum number of objects in the pool.</para>
		</value>
		<remarks>
			<para><see cref="System.EnterpriseServices.ObjectPoolingAttribute.MaxPoolSize"/> 
represents the
maximum number of pooled objects that the pooling manager will create, both actively used by clients and inactive in
the pool. When creating objects, the pooling manager checks to verify that the
maximum pool size has not been reached and, if it has not, the pooling
manager creates a new object to dispense to the client. If the maximum pool
size has been reached, client requests are queued and receive the first available
object from the pool in the order in which they arrived. Object creation
requests time-out after a specified period.</para>
		</remarks>
	</doc><doc for="AutoCompleteAttribute.AutoCompleteAttribute1">
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.AutoCompleteAttribute"/>
   class,
   specifying whether COM+
<see langword="AutoComplete"/>
is enabled.</para>
		</summary>
		<param name="val"><see langword="true"/> to enable <see langword="AutoComplete"/> in the COM+ object; otherwise, <see langword="false"/>.</param>
		<remarks>
			<para> Specifying a parameter value of
      
   <see langword="false"/> causes the <see langword="AutoComplete"/>
   attribute to be
   ignored.
   </para>
		</remarks>
	</doc><doc for="IProcessInitializer.Shutdown">
		<summary>
			<para> Performs shutdown actions. Called when Dllhost.exe is
      shut down.</para>
		</summary>
		<remarks>
			<para><see cref="System.EnterpriseServices.IProcessInitializer.Shutdown"/> is not called during
   a failfast or other catastrophic shutdown events.</para>
		</remarks>
	</doc>
	<doc for="IProcessInitControl">
		<summary>
			<para> 
      Supports setting the time-out for the <see cref="System.EnterpriseServices.IProcessInitializer.Startup"/>
      method.</para>
		</summary>
	</doc>
	<doc for="IProcessInitializer.Startup">
		<summary>
			<para> Performs initialization at startup. Called when Dllhost.exe is started.</para>
		</summary>
		<param name="punkProcessControl">In Microsoft Windows XP, a pointer to the <see langword="IUnknown"/> interface of the COM component starting up. In Microsoft Windows 2000, this argument is always <see langword="null"/>.</param>
		<remarks>
			<para>The object referenced by
   <paramref name="punkProcessControl"/> implements an <see cref="System.EnterpriseServices.IProcessInitControl"/> interface. <see cref="System.EnterpriseServices.IProcessInitControl"/> supports 
      the single method <see cref="System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout"/>.
      </para>
			<para>The initialization code in <see cref="System.EnterpriseServices.IProcessInitializer.Startup"/> can call the 
<see cref="System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout"/>, with the time-out set equal to 
   the number of seconds remaining before the startup of the component times out. </para>
		</remarks>
	</doc>
	<doc for="IProcessInitControl.ResetInitializerTimeout">
		<summary>
			<para>Sets the number of
      seconds remaining before the <see cref="System.EnterpriseServices.IProcessInitializer.Startup"/> method times out.</para>
		</summary>
		<param name="dwSecondsRemaining">The number of seconds remaining before the time taken to execute the start up method times out.</param>
		<remarks>
			<para>Each call to <see cref="System.EnterpriseServices.IProcessInitializer.Startup"/> is initially 
   given a default 30 seconds to execute unless the time-out value is reset using
   this method.</para>
		</remarks>
	</doc>
	<doc for="IProcessInitializer">
		<summary>
			<para> Supports methods that can
      be called when a COM component starts up or shuts down.</para>
		</summary>
		<remarks>
			<para>Implement the <see cref="System.EnterpriseServices.IProcessInitializer"/> interface
   methods on
   serviced components if you want to run initialization or shutdown
   code when a server process (Dllhost.exe) starts up or shuts down,
   respectively.</para>
			<para>COM+ provides <see langword="Startup"/> and
<see langword="Shutdown"/> events when Dllhost.exe starts and ends. This 
feature enables any COM+ components that are installed in a COM+ server
application (referred to as server components hereafter) to run custom
initialization and clean up code. An instance of each component that
implements the <see cref="System.EnterpriseServices.IProcessInitializer"/>
interface will be created and stored for the duration of the process, and called
on the interface methods during startup and shutdown. When implemented on a <see cref="System.EnterpriseServices.ServicedComponent"/>, during registration of the
component, the <paramref name="InitializesServerApplication"/> parameter in the
<see langword="COMAdminCatalogObject"/> within the Components collection is 
set to <see langword="true"/>. </para>
			<para>Using the <see langword="Startup"/> and
<see langword="Shutdown"/> 
events, you can initialize resources, create connections, initialize
shared data, and run cleanup code. However, you must not access states that are specific
to COM+ because instances of server components have not yet been created. In
addition, the code in the <see langword="Startup"/> and <see langword="Shutdown"/>
events should return as quickly as
possible, because the system waits only 90 seconds for Dllhost.exe to prepare
to accept activations after the system starts the process. If Dllhost.exe does not signal
that it is ready within 90 seconds, the system ends the process; thus,
all initialization processing needs to be completed within this time frame. Each
server component that participates in initialization must support the <see cref="System.EnterpriseServices.IProcessInitializer"/>
interface. On DllHost.exe startup,
COM+ creates all server components that requested this service, calls
<see langword="QueryInterface"/> for the <see cref="System.EnterpriseServices.IProcessInitializer"/> interface, and calls the <see cref="System.EnterpriseServices.IProcessInitializer.Startup"/> function. Similarly, when the DllHost.exe 
process is shut down, it calls the <see cref="System.EnterpriseServices.IProcessInitializer.Shutdown"/>
function on those previously stored interface
pointers.</para>
		</remarks>
	</doc>
	<doc for="ApplicationActivationAttribute.IConfigurationAttribute.AfterSaveChanges">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="SynchronizationAttribute.SynchronizationAttribute">
		<overload>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.SynchronizationAttribute"/>
   class.
   </para>
		</overload>
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.EnterpriseServices.SynchronizationAttribute"/>
   class
   with the default
<see cref="System.EnterpriseServices.SynchronizationOption"/>.</para>
		</summary>
		<remarks>
			<para> The
   <see cref="System.EnterpriseServices.SynchronizationAttribute.Value"/> property is 
      set to the default value <see cref="System.EnterpriseServices.SynchronizationOption.Required"/>.</para>
		</remarks>
	</doc>
</docs>
