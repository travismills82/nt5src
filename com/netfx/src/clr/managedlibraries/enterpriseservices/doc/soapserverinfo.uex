<docs>
	<doc for="SoapUtility.Present">
		<summary>
			<para>Determines if secure SOAP interfaces are present.</para>
		</summary>
		<exception cref="System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.</exception>
		<exception cref="System.PlatformNotSupportedException">The SOAP utility is not available.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for the ability to access unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
	</doc>
	<doc for="ISoapUtility.Present">
		<summary>
			<para>Determines if secure SOAP interfaces are present.</para>
		</summary>
		<exception cref="System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.</exception>
		<exception cref="System.PlatformNotSupportedException">The SOAP utility is not available.</exception>
	</doc>
	<doc for="ISoapUtility.GetServerPhysicalPath">
		<summary>
			<para> Returns the path for the SOAP virtual root.</para>
		</summary>
		<param name="rootWebServer">The root Web server.</param>
		<param name=" inBaseUrl">The base URL address.</param>
		<param name=" inVirtualRoot">The name of the virtual root.</param>
		<param name=" physicalPath">When this method returns, contains the file path for the SOAP virtual root.</param>
		<exception cref="System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.</exception>
		<exception cref="System.PlatformNotSupportedException">The SOAP utility is not available.</exception>
		<exception cref="System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed.</exception>
	</doc>
	<doc for="ISoapUtility.GetServerBinPath">
		<summary>
			<para> Returns the path for the SOAP virtual root bin directory.</para>
		</summary>
		<param name="rootWebServer">The root Web server.</param>
		<param name=" inBaseUrl">The base URL address.</param>
		<param name=" inVirtualRoot">The name of the virtual root.</param>
		<param name=" binPath">When this method returns, contains the file path for the SOAP virtual root bin directory.</param>
		<exception cref="System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.</exception>
		<exception cref="System.PlatformNotSupportedException">The SOAP utility is not available.</exception>
		<exception cref="System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed.</exception>
	</doc>
	<doc for="SoapUtility.GetServerPhysicalPath">
		<summary>
			<para> Returns the path for the SOAP virtual root.</para>
		</summary>
		<param name="rootWebServer">The root Web server.</param>
		<param name=" inBaseUrl">The base URL address.</param>
		<param name=" inVirtualRoot">The name of the virtual root.</param>
		<param name=" physicalPath">When this method returns, contains the file path for the SOAP virtual root.</param>
		<exception cref="System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.</exception>
		<exception cref="System.PlatformNotSupportedException">The SOAP utility is not available.</exception>
		<exception cref="System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for the ability to access unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
	</doc>
	<doc for="SoapUtility.GetServerBinPath">
		<summary>
			<para> Returns the path for the SOAP bin directory.</para>
		</summary>
		<param name="rootWebServer">The root Web server.</param>
		<param name=" inBaseUrl">The base URL address.</param>
		<param name=" inVirtualRoot">The name of the virtual root.</param>
		<param name=" binPath">When this method returns, contains the file path for the SOAP virtual root bin directory.</param>
		<exception cref="System.Security.SecurityException">A caller in the call chain does not have permission to access unmanaged code.</exception>
		<exception cref="System.PlatformNotSupportedException">The SOAP utility is not available.</exception>
		<exception cref="System.EnterpriseServices.ServicedComponentException">The call to get the system directory failed.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for the ability to access unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
	</doc>
	<doc for="ISoapUtility">
		<summary>
			<para>Provides utilities to support the exporting of COM+ SOAP-enabled application
      proxies by the server and the importing of the proxies by the client.</para>
		</summary>
		<remarks>
			<para>The utility functions that <see cref="System.EnterpriseServices.Internal.ISoapUtility"/> provides are called 
   from numerous locations within COM+; however, their primary purpose is to support the export and
   import of client proxies.</para>
		</remarks>
	</doc>
	<doc for="SoapUtility">
		<summary>
			<para>Provides utilities to support the exporting of COM+ 
      SOAP-enabled application proxies by the server and the importing of the proxies by the client. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The utility functions that <see cref="System.EnterpriseServices.Internal.SoapUtility"/> provides are 
   called from numerous locations within COM+; however, their primary purpose is to
   support the export and import of client proxies.</para>
		</remarks>
	</doc>
</docs>
