// ==++==
// 
//   Copyright (c) Microsoft Corporation.  All rights reserved.
// 
// ==--==
// First all of the fatal errors:

SMC_ERR(ERRnone         ,0, NULL                                                  )
SMC_ERR(ERRinternal     ,0, "INTERNAL COMPILER ERROR: %s"                         )
SMC_ERR(ERR2manyErrs    ,0, "Too many error messages"                             )
SMC_ERR(ERRnoMemory     ,0, "Out of memory"                                       )
SMC_ERR(ERRerrDir       ,0, "Error directive"                                     )
SMC_ERR(ERRbltinNS      ,0, "Could not locate system namespace '%s'"              )
SMC_ERR(ERRbltinTp      ,0, "Could not locate system class '%s'"                  )
SMC_ERR(ERRbltinMeth    ,0, "Could not locate system method '%s'"                 )

SMC_ERR(ERRopenRdErr    ,0, "Could not open source file '%s' for reading"         )
SMC_ERR(ERRopenWrErr    ,0, "Could not open target file '%s' for writing"         )
SMC_ERR(ERRreadErr      ,0, "Could not read source file '%s'"                     )
SMC_ERR(ERRopenMDerr    ,0, "Could not open '%s' for metadata input (use -s<filename> to specify location)")
SMC_ERR(ERRreadMD       ,0, "Could not read metadata"                             )
SMC_ERR(ERRopenMDbad    ,0, "Could not read metadata from file '%s'"              )
SMC_ERR(ERRwriteErr     ,0, "Could not write to output file '%s'"                 )
SMC_ERR(ERRopenCOR      ,0, "Could not initialize Common Language Runtime"                   )
SMC_ERR(ERRmetadata     ,0, "Could not create metadata"                           )
SMC_ERR(ERRdebugInfo    ,0, "Could not emit debugging information"                )
SMC_ERR(ERRundefTref    ,0, "Could not resolve metadata reference to type '%s'"   )
SMC_ERR(ERRbadInputFF   ,0, "Invalid input file format in '%s': expected a %s file")
SMC_ERR(ERRnoOutfName   ,0, "Name of output file not specified, please use -O"    )

// End of fatal errors, other errors begin:

SMC_ERR(ERRidTooLong    ,0, "Identifier too long"                                 )
SMC_ERR(ERRbadNumber    ,0, "Invalid number"                                      )
SMC_ERR(ERRillegalChar  ,0, "Invalid character"                                   )
SMC_ERR(ERRbadCharCns   ,0, "Invalid character constant"                          )
SMC_ERR(ERRbadEscCh     ,0, "Invalid escape character"                            )
SMC_ERR(ERRnoStrEnd     ,0, "Unterminated string constant"                        )
SMC_ERR(ERRnoCmtEnd     ,0, "Unterminated comment"                                )
SMC_ERR(ERRnestCmt      ,0, "Nested comment"                                      )
SMC_ERR(ERRnoUnicodeEsc ,0, "Expected Unicode escape sequence"                    )
SMC_ERR(ERRbadPPdir     ,0, "Malformed '#' directive"                             )
SMC_ERR(ERRnoEOL        ,0, "End of line expected"                                )
SMC_ERR(ERRnoEndif      ,0, "Missing 'endif' for directive on line %u"            )

SMC_ERR(ERRnoClassDef   ,0, "Cannot find definition for class '%s'"               )
SMC_ERR(ERRnoEnumDef    ,0, "Cannot find definition for enum '%s'"                )
SMC_ERR(ERRnoEOF        ,0, "Expected end of file"                                )
SMC_ERR(ERRnoColon      ,0, "Expected ':'"                                        )
SMC_ERR(ERRnoComma      ,0, "Expected ','"                                        )
SMC_ERR(ERRnoSemic      ,0, "Expected ';'"                                        )
SMC_ERR(ERRnoLparen     ,0, "Expected '('"                                        )
SMC_ERR(ERRnoRparen     ,0, "Expected ')'"                                        )
SMC_ERR(ERRnoRbrack     ,0, "Expected ']'"                                        )
SMC_ERR(ERRnoLcurly     ,0, "Expected '{'"                                        )
SMC_ERR(ERRnoRcurly     ,0, "Expected '}'"                                        )
SMC_ERR(ERRnoEqual      ,0, "Expected '='"                                        )
SMC_ERR(ERRnoGt         ,0, "Expected '>'"                                        )
SMC_ERR(ERRnoCmRc       ,0, "Expected ',' or '}'"                                 )
SMC_ERR(ERRnoCmSc       ,0, "Expected ',' or ';'"                                 )
SMC_ERR(ERRnoSmLc       ,0, "Expected ';' or '{'"                                 )
SMC_ERR(ERRnoIN         ,0, "Expected 'in'"                                       )
#ifdef  SETS
SMC_ERR(ERRnoSortTerm   ,0, "Expected ']]' or ':' or 'sortby'"                    )
SMC_ERR(ERRnoCmRbr2     ,0, "Expected ']]' or ','"                                )
#endif

SMC_ERR(ERRbadLcurly    ,0, "Unexpected '{' found"                                )
SMC_ERR(ERRbadElse      ,0, "'else' without a matching 'if'"                      )
SMC_ERR(ERRbadEndif     ,0, "'endif' without a matching 'if'"                     )
SMC_ERR(ERRnoEOX        ,0, "Expected operator or end of expression"              )

SMC_ERR(ERRnoDecl       ,0, "Expected declaration"                                )
SMC_ERR(ERRnoIdent      ,0, "Expected identifier"                                 )
SMC_ERR(ERRnoString     ,0, "String expected"                                     )
SMC_ERR(ERRnoType       ,0, "Expected type specifier"                             )
SMC_ERR(ERRbadQualid    ,0, "Qualified name not allowed here"                     )
SMC_ERR(ERRbadQualName  ,0, "Invalid qualified name '%s'"                         )
SMC_ERR(ERRidNotType    ,0, "The name '%s' doesn't denote a type"                 )
SMC_ERR(ERRundefName    ,0, "Undefined name '%s'"                                 )
SMC_ERR(ERRnoSuchMem    ,0, "The class '%s' doesn't contain a member '%s'"        )
SMC_ERR(ERRbadMain      ,0, "Function must be declared as 'int main(String [])'"  )
SMC_ERR(ERRbadAccSpec   ,0, "This access specifier is not allowed here"           )
SMC_ERR(ERRdupModifier  ,0, "Duplicate modifier"                                  )
SMC_ERR(ERRdupIntfc     ,0, "Duplicate interface include specifier"               )
SMC_ERR(ERRbadModifier  ,0, "Illegal type modifier(s)"                            )
SMC_ERR(ERRdmModifier   ,0, "A data member cannot be declared with '%s'"          )
SMC_ERR(ERRfmModifier   ,0, "A method cannot be declared with '%s'"               )
SMC_ERR(ERRlvModifier   ,0, "A local variable cannot be declared with '%s'"       )
SMC_ERR(ERRfmModifier2  ,0, "A method cannot be both '%s' and '%s'"               )
SMC_ERR(ERRlvAccess     ,0, "Access specifiers not allowed with local variables"  )
SMC_ERR(ERRnoClassName  ,0, "Class name expected"                                 )
SMC_ERR(ERRnotAclass    ,0, "'%s' does not denote a class"                        )
SMC_ERR(ERRbadIdent     ,0, "Unexpected identifier"                               )
SMC_ERR(ERRbadNSmem     ,0, "Illegal namespace member"                            )
SMC_ERR(ERRredefMem     ,0, "The member '%s' has already been declared"           )
SMC_ERR(ERRredefName    ,0, "The name '%s' has already been declared"             )
SMC_ERR(ERRredefBody    ,0, "Two bodies given for '%s'"                           )
SMC_ERR(ERRredefEnum    ,0, "The enum type '%s' has already been defined"         )
SMC_ERR(ERRredefClass   ,0, "The class '%s' has already been defined"             )
SMC_ERR(ERRredefLcl     ,0, "Local variable '%s' has already been declared"       )
SMC_ERR(ERRcircDep      ,0, "'%s' has a circular dependency"                      )
SMC_ERR(ERRundefCls     ,0, "Cannot find definition for class '%s'"               )
SMC_ERR(ERRnoCnsInit    ,0, "Members declared 'const' must be initialized"        )
SMC_ERR(ERRnoVarInit    ,0, "Initialization not found for '%s'"                   )
SMC_ERR(ERRdupMemInit   ,0, "Member '%s' has already been initialized"            )
SMC_ERR(ERRrecClass     ,0, "Attempt to include a copy of class '%s' in itself"   )
SMC_ERR(ERRextCns       ,0, "A variable can't be 'const' and 'extern'"            )
SMC_ERR(ERRbadInit      ,0, "Initializer not allowed here"                        )
SMC_ERR(ERRnoIntType    ,0, "Integer type expected"                               )
SMC_ERR(ERRnoIntExpr    ,0, "Integer constant expression expected"                )
SMC_ERR(ERRnoCnsExpr    ,0, "Constant expression expected"                        )
SMC_ERR(ERRbadArrSize   ,0, "Array size must be a positive constant"              )
SMC_ERR(ERRbadFnBody    ,0, "Variable has illegal initializer"                    )
SMC_ERR(ERRbadBfld      ,0, "A bitfield may not have type '%s'"                   )
///////(ERRmgdBfld      ,0, "Managed classes may not have bitfield members"       )
SMC_ERR(ERRstmBfld      ,0, "A bitfield may not be 'static'"                      )
SMC_ERR(ERRbadBFsize    ,0, "Bitfield can't have witdh of %u (underlying type has %u bits)")
SMC_ERR(ERRbfldAddr     ,0, "Cannot take address of bitfield member '%s'"         )
SMC_ERR(ERRbadOvl       ,0, "Overloaded '%s' and '%s' differ only in return type" )
SMC_ERR(ERRbadUTag      ,0, "Tag '%s' is not a suitable data member"              )
SMC_ERR(ERRbadUmem      ,0, "Expected tagged union member - 'case' or 'default'"  )
SMC_ERR(ERRmulUmem      ,0, "A tagged union section may contain only a single member")
SMC_ERR(ERRbadExpTp     ,0, "Expected value of type '%s' not '%s'"                )
SMC_ERR(ERRnoNspMem     ,0, "The namespace '%s' doesn't contain '%s'"             )
SMC_ERR(ERRnoClsMem     ,0, "The class '%s' doesn't contain '%s'"                 )
SMC_ERR(ERRnoTPmems     ,0, "'%s' doesn't contain any types"                      )
SMC_ERR(ERRnoMems       ,0, "'%s' doesn't contain any members"                    )
SMC_ERR(ERRnoGlobNm     ,0, "Undefined global name '%s'"                          )
SMC_ERR(ERRbadCall      ,0, "Call of a non-function"                              )
SMC_ERR(ERRnoOvlMatch   ,0, "No overloaded method matches the call '%s'"          )
SMC_ERR(ERRnoDlgMatch   ,0, "The argument '%s' doesn't match delegate '%s'"       )
SMC_ERR(ERRhideMatch    ,0, "Matching base class method '%s' is hidden"           )
SMC_ERR(ERRmisgArg      ,0, "Missing arguments in call to '%s'"                   )
SMC_ERR(ERRmanyArg      ,0, "Too many arguments in call to '%s'"                  )
SMC_ERR(ERRbadArgValNam ,0, "Value for argument '%s' of '%s' cannot be converted from '%s'" )
SMC_ERR(ERRbadArgValNum ,0, "Value for argument %s of '%s' cannot be converted from '%s'" )
SMC_ERR(ERRbadMgdMod    ,0, "Only namespaces and classes may be declared '%s'"    )
SMC_ERR(ERRmgdGlobVar   ,0, "File-scope variables may not have managed type for now")
SMC_ERR(ERRmgdStatVar   ,0, "Local static variables may not have managed type for now")
SMC_ERR(ERRbadUnmInt    ,0, "An interface cannot be declared 'unmanaged'"         )
SMC_ERR(ERRbadGlobInt   ,0, "An interface cannot be declared in global scope"     )
SMC_ERR(ERRassgCns      ,0, "Cannot assign to constant '%s'"                      )
SMC_ERR(ERRassgLit      ,0, "Cannot assign to a constant"                         )
SMC_ERR(ERRnotLvalue    ,0, "Lvalue required here"                                )
SMC_ERR(ERRbadIndex     ,0, "A value of type '%s' cannot be indexed with '[]'"    )
SMC_ERR(ERRnoArrDim     ,0, "Array dimension missing"                             )
SMC_ERR(ERRbadBrInit    ,0, "Variable of type '%s' cannot be initialized via '{}'")
SMC_ERR(ERRbadBrNew     ,0, "A value of type '%s' cannot be initialized with '{}'")
SMC_ERR(ERRnoArrSize    ,0, "Array without a dimension not allowed here"          )
SMC_ERR(ERRbadUndimMem  ,0, "Undimensioned array member must be last in struct"   )
SMC_ERR(ERRemptyArray   ,0, "Unmanaged arrays may not have 0 size"                )
SMC_ERR(ERRbadPtrUse    ,0, "The pointer type '%s' cannot be used here"           )
SMC_ERR(ERRbadMgInit    ,0, "Variables of managed type '%s' cannot be initialized via '{}'")
SMC_ERR(ERRarrInitMany  ,0, "Too many initializers specified for array, %u expected")
SMC_ERR(ERRstrInitMany  ,0, "Initializer string too long, %u characters expected" )
SMC_ERR(ERRlvInvisible  ,0, "Cannot use local variable '%s' before its declaration")
SMC_ERR(ERRnoNSnm       ,0, "The name '%s' doesn't denote a namespace"            )
SMC_ERR(ERRambigUse     ,0, "Two symbols in used namespaces match: '%s' and '%s'" )
SMC_ERR(ERRdiffMethRet  ,0, "Method '%s' was earlier declared with return type '%s'")
SMC_ERR(ERRdiffVirtRet  ,0, "Return type of virtual method '%s' differs from '%s'")
SMC_ERR(ERRvirtAccess   ,0, "Cannot reduce access level of overridden method '%s'")
SMC_ERR(ERRdiffPropTp   ,0, "Type of virtual property '%s' differs from '%s'"     )
SMC_ERR(ERRdupDefProp   ,0, "Class has already has a default property with another name: '%s'")
SMC_ERR(ERRnoPropDef    ,0, "Expected '{' followed by property accessor method declaration")
SMC_ERR(ERRpropAccDef   ,0, "Method conflicts with property accessor '%s'"        )
SMC_ERR(ERRnewIntf      ,0, "Cannot create an instance of an interface type '%s'" )
SMC_ERR(ERRnewAbstract  ,0, "Cannot create an instance of an abstract class '%s'" )
SMC_ERR(ERRbadNewTyp    ,0, "Cannot create an instance of type '%s'"              )
SMC_ERR(ERRnewNoVal     ,0, "'new' expression for type '%s' requires an initial value")
SMC_ERR(ERRnoCtorMatch  ,0, "The class doesn't have a constructor that matches '%s'")
SMC_ERR(ERRintfImpl     ,0, "Cannot create an instance of an interface type '%s'" )
SMC_ERR(ERRintfBase     ,0, "A class cannot inherit from an interface: '%s'"      )
SMC_ERR(ERRsealedInh    ,0, "Cannot inherit from sealed type '%s'"                )
SMC_ERR(ERRstrInhCls    ,0, "A struct cannot inherit from class '%s'"             )
SMC_ERR(ERRunmIntf      ,0, "Unmanaged classes may not include interfaces"        )
SMC_ERR(ERRinclCls      ,0, "Only interfaces may be included: '%s'"               )
SMC_ERR(ERRxMgdInh      ,0, "Management of base class '%s' doesn't match derived class")
SMC_ERR(ERRxCtxInh      ,0, "Context flavor of base class '%s' doesn't match derived class")
SMC_ERR(ERRctxAddr      ,0, "Cannot take address of member of a appdomain/contextful class '%s'")
SMC_ERR(ERRbadEHtype    ,0, "Type '%s' is not a class derived from 'Exception'"   )
SMC_ERR(ERRbadReThrow   ,0, "Argument to 'throw' is required outside of a catch block")
SMC_ERR(ERRtryNoBlk     ,0, "'try' block expected, '{' not found"                 )
SMC_ERR(ERRnoHandler    ,0, "'catch', 'finally', or 'except' expected following 'try' block")
SMC_ERR(ERRfinExit      ,0, "Attempt to prematurely exit from a 'finally' block"  )
SMC_ERR(ERRbadFNbody    ,0, "Function body unexpected for a variable"             )
SMC_ERR(ERRdupProp      ,0, "Duplicate property '%s' declaration"                 )
SMC_ERR(ERRdupArg       ,0, "More than one argument named '%s'"                   )
SMC_ERR(ERRnotClass     ,0, "Cannot use '%s' here, it doesn't denote a class"     )
SMC_ERR(ERRsyntax       ,0, "Syntax error"                                        )
SMC_ERR(ERRnoDim        ,0, "Missing array dimension"                             )
SMC_ERR(ERRbadSizeof    ,0, "Illegal operand of 'sizeof'"                         )
SMC_ERR(ERRoperType     ,0, "Can't apply operator '%s' to type '%s'"              )
SMC_ERR(ERRoperType2    ,0, "Can't apply operator '%s' to types '%s' and '%s'"    )
SMC_ERR(ERRnotAfunc     ,0, "Illegal call: '%s' doesn't denote a function"        )
SMC_ERR(ERRtypedefNm    ,0, "Typedef name '%s' has to match the tag name '%s'"    )
SMC_ERR(ERRmemWOthis    ,0, "Reference to non-static member '%s' without an object")
SMC_ERR(ERRundefNspm    ,0, "The namespace '%s' doesn't have a member '%s'"       )
SMC_ERR(ERRbadDotOp     ,0, "The '.' operator cannot be applied to a value of type '%s'")
SMC_ERR(ERRbadArrOp     ,0, "The '->' operator cannot be applied to a value of type '%s'")
SMC_ERR(ERRnotMember    ,0, "The type '%s' doesn't have a member '%s'"            )
SMC_ERR(ERRmsgArgs      ,0, "Need argument list for call to member '%s'"          )
SMC_ERR(ERRbadArgs      ,0, "The member '%s' is not a function"                   )
SMC_ERR(ERRambigCall    ,0, "Call is ambiguous between '%s' and '%s'"             )
SMC_ERR(ERRambigConv    ,0, "Conversion is ambiguous: '%s' and '%s'"              )
SMC_ERR(ERRambigMem     ,0, "The member '%s' is ambiguous: found in '%s' and '%s'")
SMC_ERR(ERRbadCastImp   ,0, "Cannot implicitly convert from type '%s' to '%s'"    )
SMC_ERR(ERRbadCastExp   ,0, "A value of type '%s' cannot be cast to type '%s'"    )
SMC_ERR(ERRbadCastNul   ,0, "'null' cannot be converted to type '%s'"             )
SMC_ERR(ERRdivZero      ,0, "Division by constant 0"                              )
SMC_ERR(ERRbadMgdTyp    ,0, "'managed' not followed by an array in type"          )
SMC_ERR(ERRbadUnmTyp    ,0, "'unmanaged' not followed by an array in type"        )
SMC_ERR(ERRbadArrowNC   ,0, "'->' cannot be used after a namespace or class name" )
SMC_ERR(ERRbadIndir     ,0, "The indirection operator cannot be applied to '%s'"  )
SMC_ERR(ERRlabRedef     ,0, "A label with the name '%s' has already been defined" )
SMC_ERR(ERRundefLab     ,0, "The label '%s' has not been defined"                 )
SMC_ERR(ERRbadBreak     ,0, "'break' is not allowed here, not in a switch or loop")
SMC_ERR(ERRbadCont      ,0, "'continue' is not allowed here, not in a loop"       )
SMC_ERR(ERRbadCase      ,0, "'case' only allowed within 'switch' statements"      )
SMC_ERR(ERRbadDefl      ,0, "'default' only allowed within 'switch' statements"   )
SMC_ERR(ERRdupDefl      ,0, "Duplicate 'default' label in a 'switch' statement"   )
SMC_ERR(ERRdupCaseVal   ,0, "The case label '%s' was specified more than once"    )
SMC_ERR(ERRnoMemName    ,0, "A member name was expected"                          )
SMC_ERR(ERRredefAnMem   ,0, "Type containing anonymous union already has a member '%s'")
SMC_ERR(ERRglobAnon     ,0, "Anonymous unions may only be declared within classes/structs")
SMC_ERR(ERRbadThis      ,0, "'this' can only be used in non-static methods"       )
SMC_ERR(ERRnoWhile      ,0, "A 'do' statement must end with a 'while' condition"  )
SMC_ERR(ERRbadVoid      ,0, "Parameters and variables cannot have type 'void'"    )
SMC_ERR(ERRbadInitSt    ,0, "A variable of type '%s' cannot be initialized this way")
SMC_ERR(ERRinitNotCns   ,0, "A variable initializer must be a constant value"     )
SMC_ERR(ERRnoLinkStr    ,0, "A linkage name string required in import declaration")
SMC_ERR(ERRbadLinkStr   ,0, "Linkage string must look like 'DLLname:entrypoint'"  )
SMC_ERR(ERRbadArrLen    ,0, "The type '%s' is not an acceptable operand for 'arraylen'")
SMC_ERR(ERRcantRet      ,0, "Can't return a value from a 'void' method"           )
SMC_ERR(ERRmisgRet      ,0, "Expected return value of type '%s'"                  )
SMC_ERR(ERRbadOperNm    ,0, "Operator name not valid"                             )
SMC_ERR(ERRintfDM       ,0, "Interfaces may only include methods and constants"   )
SMC_ERR(ERRintfDup      ,0, "Interfaces '%s' has already been specified"          )
SMC_ERR(ERRtypeidOp     ,0, "The 'typeid' operator cannot be applied to type '%s'")
SMC_ERR(ERRbadConcat    ,0, "Cannot concatenate a string and a value of type '%s'")
SMC_ERR(ERRchgClsFlv    ,0, "Type '%s' was declared elsewhere as '%s'"            )
SMC_ERR(ERRnotClsVal    ,0, "Cannot use a value of type '%s' here, class expected")
SMC_ERR(ERRbadOvlOp     ,0, "Overloaded operator must be a 'static' method"       )
SMC_ERR(ERRbadOvlOpC    ,0, "Overloaded operators must have one or two arguments" )
SMC_ERR(ERRbadOvlOp1    ,0, "Overloaded operator '%s' must have one argument"     )
SMC_ERR(ERRbadOvlOp2    ,0, "Overloaded operator '%s' must have two arguments"    )
SMC_ERR(ERRbadOvlOp12   ,0, "Overloaded operator '%s' must have one or two arguments")
SMC_ERR(ERRbadOvlOpT    ,0, "Overloaded operator must take an argument of type '%s'")
SMC_ERR(ERRbadOvlRet    ,0, "Overloaded operator must return '%s'"                )
SMC_ERR(ERRbadOvlAcc    ,0, "Overloaded operator must be declared 'public'        ")
SMC_ERR(ERRbadOvlEq     ,0, "Overloaded operator '%s' must return 'bool'"         )
SMC_ERR(ERRbadOvlCmp    ,0, "Overloaded operator '%s' must return 'int'"          )
SMC_ERR(ERRdefOvlVal    ,0, "Overloaded operator arguments may not have defaults"  )
SMC_ERR(ERRimplAbst     ,0, "Class '%s' is implicitly abstract, it doesn't implement '%s'")
SMC_ERR(ERRabsFNbody    ,0, "Cannot define a body for abstract method '%s'"       )
SMC_ERR(ERRabsPFbody    ,0, "Cannot define a body for abstract property accessor '%s'")
SMC_ERR(ERRabsNotVirt   ,0, "The method '%s' was declared 'abstract' but not 'virtual'")
SMC_ERR(ERRmsgPFbody    ,0, "Missing body for property accessor '%s'"             )
SMC_ERR(ERRintfFNacc    ,0, "Cannot define an interface method to be 'protected' or 'private'")
SMC_ERR(ERRnoPropSym    ,0, "Class '%s' has no '%s' property with the name '%s'"  )
SMC_ERR(ERRnoPropOvl    ,0, "Class '%s' has no '%s' property '%s' that matches the argument list"  )
SMC_ERR(ERRbadBaseCall  ,0, "Use of 'baseclass' is only allowed in a constructor of a class that has a base class")
SMC_ERR(ERRctorRetTP    ,0, "Method name matches that of the class, if you're declaring a constructor please omit the return type")
SMC_ERR(ERRbadAlign     ,0, "Alignment value must be 1,2,4,8,18 or push/pop"      )
SMC_ERR(ERRnoAccess     ,0, "Access to '%s' is not permitted here"                )
SMC_ERR(ERRnotFlx       ,0, "The '%s' function can only be used in a filter expression")
SMC_ERR(ERRnotHnd       ,0, "The '%s' function can only be used in an SEH handler")
SMC_ERR(ERRumgRef       ,0, "References are not allowed for now (use 'out' or 'inout' for byref args)")
SMC_ERR(ERRmgdPtr       ,0, "Pointers to managed classes not allowed: '%s'"       )
SMC_ERR(ERRbyref2refany ,0, "Typed byref's (void &) may not be passed by reference")
SMC_ERR(ERRbadRefArr    ,0, "Cannot declare an unmanaged array of '%s'"           )
SMC_ERR(ERRbadTagMem    ,0, "Tagged unions can only contain fields and methods"   )
SMC_ERR(ERRbadStrCase   ,0, "'case' labels only allowed in tagged union members"  )
SMC_ERR(ERRumgFldMgd    ,0, "Members of unmanaged types may not of be managed type")
SMC_ERR(ERRchgMgmt      ,0, "Management is confused: '%s' was declared earlier as '%s'")
SMC_ERR(ERRrecFld       ,0, "A value type cannot contain a member with its own type")
SMC_ERR(ERRsafeInd      ,0, "Pointer indirection is not allowed in typesafe mode" )
SMC_ERR(ERRsafeDel      ,0, "'delete' is not allowed in typesafe mode"            )
SMC_ERR(ERRsafeArrX     ,0, "Unmanaged array indexing is not allowed in typesafe mode")
SMC_ERR(ERRunsafeCast   ,0, "Cast from '%s' to '%s' is not allowed in typesafe mode")
SMC_ERR(ERRmulEntry     ,0, "Image has more than entry point: '%s' and '%s'"      )
SMC_ERR(ERRnoEntry      ,0, "Image has no entry point, it should be declared as 'void main(String [] args)'")
SMC_ERR(ERRundefUse     ,0, "The value of '%s' may be used before definition"     )
SMC_ERR(ERRbadVarArg    ,0, "varargs functions cannot be used here"               )
SMC_ERR(ERRnotArgIter   ,0, "Expected a local variable of type 'va_list'"         )
SMC_ERR(ERRnotLastArg   ,0, "Expected the last fixed argument of the current function")
SMC_ERR(ERRbadVAtype    ,0, "The type '%s' cannot be used as a vararg type"       )
SMC_ERR(ERRbadDelete    ,0, "'delete' requires a pointer to an unmanaged class"   )
SMC_ERR(ERRnoFnDef      ,0, "No definition was found for method '%s'"             )
SMC_ERR(ERRnoPropGet    ,0, "No definition was found for 'get' accessor of property '%s'")
SMC_ERR(ERRnoPropSet    ,0, "No definition was found for 'set' accessor of property '%s'")
SMC_ERR(ERRbadCFNret    ,0, "A method marked as '@conditional' must return 'void'")
SMC_ERR(ERRbadNameUse   ,0, "'%s' cannot be used in this context"                 )
SMC_ERR(ERRmanyUmgIxx   ,0, "Multiple index expressions may not be used with unmanaged arrays")
SMC_ERR(ERRindexCnt     ,0, "Expected %u index expressions"                       )
SMC_ERR(ERRua2manyDims  ,0, "An unmanaged array may only have one dimension"      )
SMC_ERR(ERRnoDimDcl     ,0, "Expected array dimension or '*'"                     )
SMC_ERR(ERRarrInitCnt   ,0, "Expected %u sub-array initializers, %u found"        )
SMC_ERR(ERRbadVAarg     ,0, "va_arg() expects a va_list value and a type argument")
SMC_ERR(ERRbadTypeExpr  ,0, "Expression, not type '%s', expected here"            )
SMC_ERR(ERRnoBaseInit   ,0, "Base initializer expected after ':': '%s(args)' or 'baseclass(args)'")
SMC_ERR(ERRbadPrgOpt    ,0, "Invalid #pragma option parameter"                    )
SMC_ERR(ERRerrPos       ,0, "Previous diagnostic refers to declaration at %s(%u)" )
SMC_ERR(ERRunknownMD    ,0, "Symbol '%s' references unknown metadata construct(s)")

SMC_ERR(ERRbadMacDef    ,0, "Illegal macro definition for '%s'"                   )
SMC_ERR(ERRmacPlace     ,0, "#define must precede any use of identifier '%s'"     )
SMC_ERR(ERRmacRedef     ,0, "'%s' was referenced before definition as macro"      )

SMC_ERR(ERRdlgNonFn     ,0, "A delegate must be declared as a function"           )
SMC_ERR(ERRdlgCTarg     ,0, "A delegate instance must be created from a bound method")
SMC_ERR(ERRdlgNoMFN     ,0, "No method in '%s' matches '%s'"                      )
SMC_ERR(ERRmulDlgRet    ,0, "A multicast delegate must return 'void'"             )

SMC_ERR(ERRbadAtCmPlc   ,0, "This '@comment' thing not allowed here"              )
SMC_ERR(ERRbadAtCmSubd  ,0, "Invalid '%s' comment sub-directive: '%s'"            )
SMC_ERR(ERRbadAtCmForm  ,0, "Incorrect '%s' comment syntax"                       )
SMC_ERR(ERRnoDLLname    ,0, "Missing DLL name, must be specified on method or class")
SMC_ERR(ERRclsImpName   ,0, "Only DLL name may be specified for a class"          )

SMC_ERR(ERRbadSecActn   ,0, "'%s' is not a recognized security action"            )
SMC_ERR(ERRnonCnsAA     ,0, "Argument %u in attribute arglist is not a constant"  )
SMC_ERR(ERRcustAttrPlc  ,0, "Custom atttribute '%s' not allowed here"             )
SMC_ERR(ERRcustAttrDup  ,0, "Custom atttribute '%s' may not be specified more than once")
SMC_ERR(ERRcustAttrMsk  ,0, "Invalid custom atttribute placement mask"            )

SMC_ERR(ERRnoClsGt      ,0, "'class' or '>' expected"                             )
SMC_ERR(ERRnoCmGt       ,0, "Expected ',' or '>'"                                 )
SMC_ERR(ERRumgGenCls    ,0, "Only managed classes and interfaces may be generic"  )
SMC_ERR(ERRmisgGenArg   ,0, "Expected actual type for generic parameter '%s'"     )
SMC_ERR(ERRgenArg       ,0, "Actual type for parameter '%s' must be a managed class/interface")
SMC_ERR(ERRgenArgBase   ,0, "Actual type for parameter '%s' doesn't have '%s' as a base")
SMC_ERR(ERRgenArgIntf   ,0, "Actual type for parameter '%s' doesn't have '%s' as an interface")
SMC_ERR(ERRgenNested    ,0, "Nested classes may not be generic"                   )

SMC_ERR(ERRbadAttr      ,0, "Attribute syntax incorrect (see compiler file parser.cpp for details)")
SMC_ERR(ERRplcAttr      ,0, "This attribute is not allowed here"                  )
SMC_ERR(ERRbadGUID      ,0, "Invalid GUID string '%s', should be of the form HHHHHHHH-HHHH-HHHH-HHHH-HHHHHHHHHHHH")

#ifdef  SETS
SMC_ERR(ERRnotCollExpr  ,0, "Expected collection expression, not a value of type '%s'")
SMC_ERR(ERRbadSortExpr  ,0, "Expected scalar/string sort expression, not a value of type '%s'")
SMC_ERR(ERRbadConnOps   ,0, "Invlaid operators for 'connect' statement"           )
SMC_ERR(ERRnoOvlOper    ,0, "No overloaded 'operator %s' found in type '%s'"      )
SMC_ERR(ERRimplAmbig    ,0, "Ambiguous use of implicitly scoped name '%s'"        )
SMC_ERR(ERRnoSetCons    ,0, "Operand must be [[]] or a constraint/sort term must be present")
SMC_ERR(ERRignSort      ,0, "Sort clause is meaningless for operand of filter clause")
SMC_ERR(ERRsliceKind    ,0, "Only non-static data members and properties of a collection can be 'sliced'")
SMC_ERR(ERRbadXMLpos    ,0, "Invalid XML element declaration"                     )
SMC_ERR(ERRctorXML      ,0, "Classes with XML elements may not have user-defined constructors")
SMC_ERR(ERRnewXMLextra  ,0, "Excess values specified for XML class instance"      )
SMC_ERR(ERRnewXML2few   ,0, "Not enough values specified for XML class instance"  )
SMC_ERR(ERRnewXMLbadlc  ,0, "Invalid {}-style argument for XML class member '%s'" )
SMC_ERR(ERRmultImpl     ,0, "Cannot have multiple implicit scopes (for now)"      )
SMC_ERR(ERRmixCollSngl  ,0, "Cannot mix collection and singleton source values"   )
SMC_ERR(ERRbadPrjx      ,0, "Expected collection or class/struct expression"      )
#endif

// All warnings must be here at the end (i.e. no errors allowed after the warnings)

SMC_WR1(WRNasgNoUse     ,0, "Local variable '%s' is initialized but never used"   )
SMC_WRN(WRNbadPragma    ,0, "Unrecognized #pragma directive '%s' ignored"         )
SMC_WRN(WRNbadPrep      ,1, "Ignoring unrecognized directive '#%s'"               )
SMC_WRN(WRNignoreCV     ,0, "Ignoring const/volatile modifier"                    )
SMC_WRN(WRNenumComp     ,0, "Comparing values of two different enum types"        )
SMC_WRN(WRNloseBits     ,1, "Conversion from '%s' to '%s' may lose precision"     )
SMC_WRN(WRNzeroPtr      ,1, "Using '0' instead of 'null' is in poor style"        )
SMC_WRN(WRNvoidFnc      ,1, "Using '(void)' for parameterless functions is obsolete")
SMC_WRN(WRNignoreLnk    ,1, "C++ external linkage specifier ignored"              )
SMC_WRN(WRNgeneric      ,1, "%s"                                                  )
SMC_WRN(WRNunkAttr      ,1, "Ignoring unrecognized attribute '%s'"                )
SMC_WRN(WRNnoArgName    ,0, "Argument declaration without a name"                 )
SMC_WRN(WRNunreach      ,1, "Unreachable code"                                    )
SMC_WRN(WRNimplAbst     ,1, "Class '%s' is implicitly abstract, it doesn't implement '%s'")
SMC_WRN(WRNbadAtCm      ,1, "Unrecognized comment directive '%s' ignored"         )
SMC_WRN(WRNignAtCm      ,1, "Ignoring comment directive '%s'"                     )
SMC_WRN(WRNmgdBF        ,1, "Ignoring bitfield declaration in a managed class"    )
SMC_WRN(WRNbadMgdStr    ,1, "Unions should not be declared 'managed', it doesn't really work right now")
SMC_WRN(WRNundefUse     ,1, "The value of '%s' may be used before definition"     )
SMC_WRN(WRNnoFnDef      ,1, "No definition was found for method '%s'"             )
SMC_WRN(WRNignoring     ,1, "Ignoring %s"                                         )
SMC_WRN(WRNnoNSnm       ,1, "Ignoring 'using %s' - it doesn't denote a namespace" )
SMC_WRN(WRNdepCall      ,1, "Call to deprecated method '%s'"                      )
SMC_WRN(WRNdepCls       ,1, "Use of deprecated class '%s'"                        )
SMC_WRN(WRNdepFld       ,1, "Use of deprecated field '%s'"                        )
SMC_WRN(WRNdepProp      ,1, "Use of deprecated property '%s'"                     )
SMC_WRN(WRNdepEnum      ,1, "Use of deprecated enum value '%s'"                   )
SMC_WRN(WRNmacroArgs    ,1, "Pre-processor macros with arguments not supported, ignoring #define directive")
SMC_WRN(WRNconvert      ,1, "Converting value of type '%s' to '%s'"               )
SMC_WRN(WRNbadEsc       ,1, "Unrecognized escape sequence \\%c"                   )
SMC_WRN(WRNskipAtCm     ,1, "Found '@' gizmo in regular comment, ignoring it"     )
SMC_WRN(WRNstmtNoUse    ,1, "Outermost statement expression has no side effect"   )
SMC_WRN(WRNpgm2big      ,1, "Image size exceeds specified maximum: 0x%08X vs. 0x%08X")
SMC_WRN(WRNimplOut      ,1, "Argument %u may be modified by the call to '%s'"     )
SMC_WRN(WRNenum2str     ,1, "Converting '%s' to String using its underlying integer type")
SMC_WRN(WRNunsConst     ,1, "Implicit conversion of a negative constant to an unsigned type")
SMC_WRN(WRNaddStrings   ,0, "Using '+' to concatenate strings is deprecated, please use '%%%%'")
SMC_WRN(WRNstrRefCmp    ,9, "Comparing String references doesn't compare the string values")
SMC_WRN(WRNhideVirt     ,0, "Base class member function '%s' hidden, not overloaded")
SMC_WRN(WRNobsoleteStr  ,1, "'%s' has been marked as obsolete: '%s'"              )
SMC_WRN(WRNoperPrec     ,1, "Comparisons have precedence over bitwise operators, did you forget parens?"  )
SMC_WRN(WRNctxFlavor    ,1, "Implicit conversion from '%s' to '%s' may cause context grief")
SMC_WRN(WRNobsolete     ,9, "Obsolete language feature used: %s"                  )
SMC_WRN(WRNstrValCmp    ,1, "Relational operator compares string values"          )
SMC_WRN(WRNenumConv     ,0, "Mixing values of two different enum types"           )
SMC_WRN(WRNlongDiff     ,1, "Use of 'long' is not encouraged, please use 'longint'")

