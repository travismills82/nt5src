
[strings]

; TlbImp error strings.
Err_InputFileNotFound = Unable to locate input type library: '{0}'
Err_InputFileNotValidTypeLib = The input file '{0}' is not a valid type library
Err_TypeLibLoad = Error occurred while opening type library:\r\n{0}
Err_InvalidExtension = The extension for the output assembly must be either .dll or .mcl
Err_OutputFileNameTooLong = Output file name, created from Type Library name, would be too long:\r\n{0}
Err_OutputWouldOverwriteInput = Output file would overwrite input file
Err_InvalidOutputDirectory = Output directory does not exist
Err_CannotWriteToOutputFile = Error writing to output file
Err_TypeLoadExceptions = The following exceptions were thrown while loading the types in the assembly:\r\n
Err_ErrorWhileOpenningFile = The following error occurred while trying to open file {0}: 
Err_InvalidOption = An invalid option has been specified
Err_NoInputFile = No input file has been specified
Err_TooManyKeys = Only one key pair/public key may be specified on the command line
Err_RefAssemblyNotFound = Unable to locate referenced assembly: '{0}'
Err_RefAssemblyInvalid = Referenced assembly '{0}' is not a valid assembly
Err_ImpFromTlbAttrNotFound = Assembly '{0}' cannot be used to resolve a reference to a type library since it was not imported from a type library.
Err_GuidAttrNotFound = Assembly '{0}' cannot be used to resolve a reference to a type library since it does not have a guid attribute.
Err_MultipleGuidAttrs = Assembly '{0}' cannot be used to resolve a reference to a type library since it has multiple guid attributes which is not allowed.
Err_RefNotInList = Type library '{0}' is not in the list of references
Err_CircularReference = The referenced type library, '{0}', contains a circular reference, and may not be fully imported.
Err_CannotCreateAppDomain = Error creating an app domain to perform the conversion
Err_CannotCreateRemoteTlbImp = Unable to load the RemoteTlbImp type required to perform the conversion
Err_OutputCannotBeDirectory = The output file name cannot specify a directory.
Err_InvalidVersion = The version is invalid. 
Err_InvalidStrongName = Invalid strong name parameters specified.
Err_PIAMustBeStrongNamed = Primary interop assemblies must be strongly named. This can be accomplished by using either the /publickey, /keyfile or /keycontainer options.
Err_InvalidTransform = The specified transformation option '{0}' is invalid.

; Command line parsing error strings.
Err_AmbigousOption = Ambiguous option: /{0}
Err_UnknownOption = Unknown option: /{0}
Err_NoValueRequired = The /{0} option does not require a value
Err_ValueRequired = The /{0} option requires a value

; TlbImp message strings.
Msg_TypeLibImported = Type library imported successfully to {0}
Msg_Copyright = Microsoft (R) .NET Framework Type Library to Assembly Converter {0}\r\nCopyright (C) Microsoft Corporation 1998-2002.  All rights reserved.\r\n
Msg_Usage = Syntax: TlbImp TypeLibName [Options]\r\nOptions:\r\n    /out:FileName            File name of assembly to be produced\r\n    /namespace:Namespace     Namespace of the assembly to be produced\r\n    /asmversion:Version      Version number of the assembly to be produced\r\n    /reference:FileName      File name of assembly to use to resolve references\r\n    /publickey:FileName      File containing strong name public key\r\n    /keyfile:FileName        File containing strong name key pair\r\n    /keycontainer:FileName   Key container holding strong name key pair\r\n    /delaysign               Force strong name delay signing\r\n    /unsafe                  Produce interfaces without runtime security checks\r\n    /nologo                  Prevents TlbImp from displaying logo\r\n    /silent                  Suppresses all output except for errors\r\n    /verbose                 Displays extra information\r\n    /primary                 Produce a primary interop assembly\r\n    /sysarray                Import SAFEARRAY as System.Array\r\n    /transform:TransformName Perform the specified transformation\r\n    /strictref               Only use assemblies specified using /reference\r\n    /? or /help              Display this usage message\r\n\r\nThe assembly version must be specified as: Major.Minor.Build.Revision.\r\n\r\nMultiple reference assemblies can be specified by using the /reference option\r\nmultiple times.\r\n\r\nSupported transforms:\r\n    DispRet                  Apply the [out, retval] parameter transformation\r\n                             to methods of disp only interfaces\r\n\r\nA resource ID can optionally be appended to the TypeLibName when importing a\r\ntype library from a module containing multiple type libraries.\r\n\r\nFor example: TlbImp MyModule.dll\\1
Msg_RefFoundInAsmRefList = A reference to type library '{0}' has been resolved to user specified assembly '{1}'.
Msg_ResolvingRef = Resolving reference to type library '{0}'.
Msg_AssemblyLoaded = Assembly '{0}' loaded successfully.
Msg_AutoImportingTypeLib = Auto importing '{0}' as '{1}'.
Msg_DisplayException = Exception[{0}] = {1}
Msg_DisplayNestedException = Exception[{0}] ==>> {1}
Msg_TlbImpErrorPrefix = TlbImp error: {0}
