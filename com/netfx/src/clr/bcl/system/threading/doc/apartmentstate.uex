<docs>
	<doc for="ApartmentState.STA">
		<summary>
			<para> The <see cref="System.Threading.Thread"/> 
will create and enter a single-threaded apartment.</para>
		</summary>
	</doc><doc for="ApartmentState.Unknown">
		<summary>
			<para> The <see cref="System.Threading.Thread.ApartmentState"/> property 
   has not been set.</para>
		</summary>
	</doc><doc for="ApartmentState.MTA">
		<summary>
			<para> The <see cref="System.Threading.Thread"/> will
   create and enter a multithreaded apartment.
   </para>
		</summary>
	</doc>
	<doc for="ApartmentState">
		<summary>
			<para> Specifies the apartment state of a <see cref="System.Threading.Thread"/>.
   </para>
		</summary>
		<remarks>
			<para> An apartment is a logical container within
      a process for objects sharing the same thread access requirements. All objects in the same apartment can receive calls from
      any thread in the apartment. The .NET Framework does not use apartments,
      and managed
      objects are responsible for using all shared resources in a thread-safe manner themselves.
      </para>
			<para> Because COM classes use apartments, the common language runtime needs
      to create and initialize an apartment when calling a COM object in a COM
      interop situation. A managed thread can create and enter a single-threaded
      apartment (STA) that allows only one thread, or a multithreaded apartment (MTA)
      that contains one or more threads. You can control the type of apartment created
      by setting the <see cref="System.Threading.Thread.ApartmentState"/>
      property of the thread to one of the values of the <see cref="System.Threading.ApartmentState"/> enumeration. Because a given thread can
      only initialize a COM apartment once, you cannot change the apartment type after
      the first call to the unmanaged code.
      </para>
			<para>For more information, see <see cref="System.Threading.Thread"/>, <see topic="cpconManagedUnmanagedThreading"/>,
   and <see topic="cpconAdvancedComInterop"/>.</para>
		</remarks>
		<seealso cref="System.Threading.Thread"/>
		<seealso topic="cpconManagedUnmanagedThreading"/>
		<seealso topic="cpconAdvancedComInterop"/>
	</doc>
</docs>
