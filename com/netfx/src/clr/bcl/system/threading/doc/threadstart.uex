<docs>
	<doc for="ThreadStart">
		<summary>
			<para> Represents the method that executes on the <see cref="System.Threading.Thread"/>
.</para>
		</summary>
		<remarks>
			<para> When a thread is created, the new instance of
      the <see cref="System.Threading.Thread"/> class is created using a constructor that
      takes the <see langword="ThreadStart"/> delegate as its only parameter. However, the
      thread does not begin executing until the <see cref="System.Threading.Thread.Start"/>
      method is invoked. When <see langword="Start"/> is called, execution begins
      at the first line of the method referenced by the <see langword="ThreadStart"/>
      delegate. </para>
			<note lang="VB" type="note">
      Visual Basic users can omit the <see cref="System.Threading.ThreadStart"/> constructor when creating a thread. Use the
   <see langword="AddressOf"/> operator
      when passing your method to the <see cref="M:System.Threading.Thread.#ctor"/>
      constructor, for example <c>Dim t As New Thread(AddressOf ThreadProc)</c>. Visual Basic automatically calls the
<see cref="System.Threading.ThreadStart"/> constructor.
   
</note>
			<para>For a simple example that demonstrates creating a
<see langword="ThreadStart"/> delegate, see <see cref="System.Threading.Thread.Start" qualify="true"/>. For more information about thread creation,
   see <see topic="cpconcreatingthreads"/>.</para>
		</remarks>
		<seealso cref="System.Threading.Thread"/>
		<seealso cref="System.AppDomain"/>
		<seealso topic="cpconCreatingThreads"/>
	</doc>
</docs>
