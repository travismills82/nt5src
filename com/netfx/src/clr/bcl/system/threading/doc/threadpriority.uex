<docs>
	<doc for="ThreadPriority.Lowest">
		<summary>
			<para>The <see cref="System.Threading.Thread"/> can be 
   scheduled after threads with any other priority.</para>
		</summary>
	</doc>
	<doc for="ThreadPriority.BelowNormal">
		<summary>
			<para>The <see cref="System.Threading.Thread"/> can be 
   scheduled after threads with <see langword="Normal"/> priority and before those
   with <see langword="Lowest"/> priority.</para>
		</summary>
	</doc>
	<doc for="ThreadPriority.AboveNormal">
		<summary>
			<para>The <see cref="System.Threading.Thread"/> can be 
   scheduled after threads with <see langword="Highest "/>priority and before those
   with <see langword="Normal"/> priority.</para>
		</summary>
	</doc>
	<doc for="ThreadPriority.Highest">
		<summary>
			<para>The <see cref="System.Threading.Thread"/> can be 
   scheduled before threads with any other priority.</para>
		</summary>
	</doc>
	<doc for="ThreadPriority.Normal">
		<summary>
			<para>The <see cref="System.Threading.Thread"/> can be
   scheduled after threads with <see langword="AboveNormal"/> priority and before
   those with <see langword="BelowNormal"/>
   priority. Threads have <see langword="Normal"/> priority by
   default.</para>
		</summary>
	</doc>
	<doc for="ThreadPriority">
		<summary>
			<para> Specifies the scheduling priority of a <see cref="System.Threading.Thread"/>.
   </para>
		</summary>
		<remarks>
			<para><see cref="System.Threading.ThreadPriority"/>
defines the set of
all possible values for a thread priority. Thread priorities specify the relative priority of one thread versus another.</para>
			<para>Every thread has an assigned priority. Threads created within the runtime are
   initially assigned the <see langword="Normal"/> priority, while threads created outside
   the runtime retain their previous priority when they enter the runtime. You
   can get and set the priority of a thread by accessing
   its <see cref="System.Threading.Thread.Priority"/> property.</para>
			<para>Threads are scheduled for execution based on their
   priority. The scheduling algorithm used to determine the order of thread
   execution varies with each operating system. The operating system can also
   adjust the thread priority dynamically as the user interface's focus is moved between the foreground and the
   background.</para>
			<para>The priority of a thread does not affect the thread's state; the state of the
   thread must be <see cref="System.Threading.ThreadState.Running"/> before
   the operating system can schedule it.</para>
		</remarks>
		<seealso cref="System.Threading.Thread"/>
		<seealso topic="cpconSchedulingThreads"/>
		<seealso topic="cpconManagedUnmanagedThreading"/>
	</doc>
</docs>
