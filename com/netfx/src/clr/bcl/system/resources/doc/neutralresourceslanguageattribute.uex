<docs>
	<doc for="NeutralResourcesLanguageAttribute.NeutralResourcesLanguageAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Resources.NeutralResourcesLanguageAttribute"/> class.</para>
		</summary>
		<param name="cultureName">The name of the culture that the current assembly's neutral resources were written in.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="cultureName"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>See the <see cref="System.Globalization.CultureInfo"/> class for possible names of a culture.</para>
		</remarks>
	</doc><doc for="NeutralResourcesLanguageAttribute.CultureName">
		<summary>
			<para>Gets the culture name.</para>
		</summary>
		<value>
			<para>A <see cref="System.String"/> with the name of the default culture for the main assembly.</para>
		</value>
		<remarks>
			<para>See the <see cref="System.Globalization.CultureInfo"/> class for possible names
   of a culture.</para>
		</remarks>
	</doc><doc for="NeutralResourcesLanguageAttribute">
		<summary>
			<para>Informs the <see cref="System.Resources.ResourceManager"/> of
   the neutral culture of an assembly. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Resources.NeutralResourcesLanguageAttribute"/> informs the <see cref="System.Resources.ResourceManager"/> of the
   language used to write the neutral culture's resources for an
   assembly. When looking up resources in the same culture as the neutral resources
   language, the <see cref="System.Resources.ResourceManager"/> will automatically use the
   resources located in the main assembly, instead of searching for a satellite assembly
   with the current user interface culture for the
   current thread. This will improve lookup performance for the first resource you load,
   and can reduce your working set.</para>
			<note type="note">
   Apply this attribute to your main
   assembly, passing it the name of the neutral language that will work with your
   main assembly.
</note>
		</remarks>
	</doc></docs>
