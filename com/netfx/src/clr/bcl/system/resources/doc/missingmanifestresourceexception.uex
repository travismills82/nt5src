<docs>
	<doc for="MissingManifestResourceException.MissingManifestResourceException1">
		<summary>
			<para>Constructs an instance of <see cref="System.Resources.MissingManifestResourceException"/> with the specified error message.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<remarks>
			<para>The following table shows the initial property values for an instance of 
    <see cref="System.Resources.MissingManifestResourceException"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description><see langword="null"/>.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The <paramref name="message"/> 
 string.</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="MissingManifestResourceException.MissingManifestResourceException3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Resources.MissingManifestResourceException"/> class from serialized data. </para>
		</summary>
		<param name="info">The object that holds the serialized object data.</param>
		<param name="context">The contextual information about the source or destination of the exception.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="info"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>This constructor is called during deserialization to reconstitute the
      exception object transmitted over a stream. (For more information on
      serialization see <see topic="cpconSerialization"/>.)</para>
		</remarks>
	</doc><doc for="MissingManifestResourceException.MissingManifestResourceException">
		<overload>
			<para>Constructs an instance of <see cref="System.Resources.MissingManifestResourceException"/>.</para>
		</overload>
		<summary>
			<para>Constructs an instance of <see cref="System.Resources.MissingManifestResourceException"/> with default properties.</para>
		</summary>
		<remarks>
			<para>The following table shows the initial property values for an instance of
   <see cref="System.Resources.MissingManifestResourceException"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description><see langword="null"/>.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message for <see cref="System.Resources.MissingManifestResourceException"/> 
.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="MissingManifestResourceException">
		<summary>
			<para> The exception thrown if the main assembly does not contain the resources
      for the neutral culture, and they
      are required because of a missing appropriate satellite assembly.</para>
		</summary>
		<remarks>
			<para><see cref="System.Resources.MissingManifestResourceException"/> uses the HRESULT COR_E_MISSINGMANIFESTRESOURCE which has
   the value 0x80131532.</para>
			<para><see cref="System.Resources.MissingManifestResourceException"/> uses the default <see cref="System.Object.Equals"/> implementation, which supports
reference equality.</para>
			<para>For a list of initial property values for an instance of <see cref="System.Resources.MissingManifestResourceException"/>, see
the <see cref="M:System.Resources.MissingManifestResourceException.#ctor"/> constructors.</para>
			<note type="note">
   It is strongly recommended that your
   main assembly contains a neutral set of resources, so if a satellite assembly is
   unavailable, your application will have some acceptable behavior.
</note>
		</remarks>
		<seealso topic="cpcondesigningglobalapplications"/>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="MissingManifestResourceException.MissingManifestResourceException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Resources.MissingManifestResourceException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not <see langword="null"/>, the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/>
   property returns the same value that is passed into the constructor, or
<see langword="null"/> if the <see cref="System.Exception.InnerException"/> 
property does not supply the inner exception value to
the constructor. </para>
			<para>The following table shows the initial property values for an instance of <see cref="System.Resources.MissingManifestResourceException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc></docs>
