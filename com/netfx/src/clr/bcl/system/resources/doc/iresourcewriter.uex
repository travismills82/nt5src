<docs>
	<doc for="IResourceWriter">
		<summary>
			<para> Provides functionality to write resources to an output file or
      stream.</para>
		</summary>
		<remarks>
			<para> Use resource writers to write resources in a particular 
      file format. Generally, users will create a resource writer, call <see cref="System.Resources.IResourceWriter.AddResource"/> to add resources, and then call either <see cref="System.Resources.IResourceWriter.Generate"/> or <see cref="System.Resources.IResourceWriter.Close"/> to close the resource
      file.</para>
			<para>See the <see topic="cpcondesigningglobalapplications"/> for details on the default resource file
   format.</para>
		</remarks>
		<seealso cref="System.IDisposable"/>
		<seealso topic="cpcondesigningglobalapplications"/>
	</doc><doc for="IResourceWriter.AddResource">
		<overload>
			<para>Adds a resource to the list of resources to be written to an output file or
      output stream. </para>
		</overload>
		<summary>
			<para>Adds a named resource of type <see cref="System.String"/>
to the list of resources to be written.</para>
		</summary>
		<param name="name">The name of the resource.</param>
		<param name="value">The value of the resource.</param>
		<exception cref="System.ArgumentException">The<paramref name=" name"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>The resource is not written until <see cref="System.Resources.IResourceWriter.Generate"/> is
   called.</para>
		</remarks>
	</doc><doc for="IResourceWriter.AddResource1">
		<summary>
			<para>Adds a named resource of type <see cref="System.Object"/> to the list of resources to be written.</para>
		</summary>
		<param name="name">The name of the resource.</param>
		<param name="value">The value of the resource. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="name "/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>The resource is not written until <see cref="System.Resources.IResourceWriter.Generate"/> is
   called.</para>
			<note type="note">
				<paramref name="value "/>might need to be
   serializable, so you might have to provide a type converter, depending on
   which resource writer is used.
</note>
		</remarks>
	</doc><doc for="IResourceWriter.AddResource2">
		<summary>
			<para>Adds an 8-bit unsigned integer array as a named resource to the list of
      resources to be written. </para>
		</summary>
		<param name="name">Name of a resource.</param>
		<param name="value">Value of a resource as an 8-bit unsigned integer array.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="name "/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>The resources are not written until <see cref="System.Resources.IResourceWriter.Generate"/> is
   called.</para>
		</remarks>
	</doc><doc for="IResourceWriter.Close">
		<summary>
			<para>Closes the underlying resource file or stream, ensuring 
      all the data has been written to the file.</para>
		</summary>
		<remarks>
			<para>If necessary, <see cref="System.Resources.IResourceWriter.Close"/> will call <see cref="System.Resources.IResourceWriter.Generate"/> to output the resources to the underlying file
   or stream before closing it.</para>
		</remarks>
	</doc><doc for="IResourceWriter.Generate">
		<summary>
			<para>Writes all the resources added by the <see cref="System.Resources.IResourceWriter.AddResource"/> method to the output file or stream. </para>
		</summary>
		<remarks>
			<para><see cref="System.Resources.IResourceWriter.Generate"/> does not close the output
   file or output stream. Instead, consider calling <see cref="System.Resources.IResourceWriter.Close"/>. <see cref="System.Resources.IResourceWriter.Generate"/> is useful when you need to create a resource
   file but you don't want to close the output stream. <see cref="System.Resources.IResourceWriter.Generate"/> can only be called once.
   After calling <see cref="System.Resources.IResourceWriter.Generate"/>, all <see cref="System.Resources.IResourceWriter"/> methods other than <see cref="System.Resources.IResourceWriter.Close"/>
   will throw an exception.</para>
		</remarks>
	</doc></docs>
