<docs>
	<doc for="ResourceWriter.AddResource2">
		<summary>
			<para>Adds a named resource specified as a byte
       array to the list of resources to be written.</para>
		</summary>
		<param name="name">The name of the resource.</param>
		<param name=" value">Value of the resource as an 8-bit unsigned integer array.</param>
		<exception cref="System.ArgumentException">
			<paramref name="name"/> (or a name that varies only by capitalization) has already been added to this <see cref="System.Resources.ResourceWriter"/> .</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="name"/> or <paramref name="value"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.InvalidOperationException">This <see cref="System.Resources.ResourceWriter"/> has been closed and its <see cref="System.Collections.Hashtable"/> is unavailable.</exception>
		<remarks>
			<para>The resource is not written until <see cref="System.Resources.ResourceWriter.Generate"/> is called.</para>
		</remarks>
	</doc>
	<doc for="ResourceWriter">
		<summary>
			<para> Writes resources in the system-default format
      to an output file or an output stream.</para>
		</summary>
		<remarks>
			<para>
				<see cref="System.Resources.ResourceWriter"/> provides a default implementation of the
<see cref="System.Resources.IResourceWriter"/>
interface.</para>
			<para>Resources are specified as name and value pairs using the <see cref="System.Resources.ResourceWriter.AddResource"/> method. Resource names are
case-sensitive when used for lookups, but to more easily support authoring tools
and help eliminate bugs, <see cref="System.Resources.ResourceWriter"/> will not allow a .resources file to have names
that vary only by case.</para>
			<para> To
   create a resources file, create a <see cref="System.Resources.ResourceWriter"/> with
   a unique file name, call <see cref="System.Resources.ResourceWriter.AddResource"/> at least once, call
<see cref="System.Resources.ResourceWriter.Generate"/> to write the
   resources file to disk, and then call <see cref="System.Resources.ResourceWriter.Close"/> to close the file.
   Calling <see cref="System.Resources.ResourceWriter.Close"/> will implicitly <see cref="System.Resources.ResourceWriter.Generate"/> the file if required.</para>
			<para> The resources will not necessarily be written in the same order they
   were added.</para>
		</remarks>
		<example>
			<para> The following example writes several strings into the
      myResources.resources file.</para>
			<codelink SampleID="Classic ResourceWriter Example" SnippetID="1"/>
		</example>
		<seealso topic="cpcondesigningglobalapplications"/>
		<seealso cref="System.Resources.IResourceWriter"/>
		<seealso cref="System.IDisposable"/>
	</doc>
	<doc for="ResourceWriter.AddResource1">
		<summary>
			<para>Adds a named resource specified as an object to the list
      of resources to be written.</para>
		</summary>
		<param name="name">The name of the resource.</param>
		<param name="value">The value of the resource.</param>
		<exception cref="System.ArgumentException">
			<paramref name="name"/> (or a name that varies only by capitalization) has already been added to this <see cref="System.Resources.ResourceWriter"/> .</exception>
		<exception cref="System.ArgumentNullException">The <paramref name="name"/> or <paramref name="value"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.InvalidOperationException">This <see cref="System.Resources.ResourceWriter"/> has been closed and its <see cref="System.Collections.Hashtable"/> is unavailable.</exception>
		<remarks>
			<para>The resource is not written until <see cref="System.Resources.ResourceWriter.Generate"/> is called. The resource that was
   added must be serializable.</para>
		</remarks>
	</doc>
	<doc for="ResourceWriter.ResourceWriter">
		<overload>
			<para>Initializes a new instance
      of the <see cref="System.Resources.ResourceWriter"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Resources.ResourceWriter"/> class that writes the resources to the
   specified file.</para>
		</summary>
		<param name="fileName">The output file name.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="fileName"/> parameter is <see langword="null"/> .</exception>
		<example>
			<codelink SampleID="Classic ResourceWriter Example" SnippetID="1"/>
		</example>
		<seealso topic="cpcondesigningglobalapplications"/>
	</doc>
	<doc for="ResourceWriter.ResourceWriter1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Resources.ResourceWriter"/> class
   that writes the resources to the provided stream.</para>
		</summary>
		<param name="stream">The output stream.</param>
		<exception cref="System.ArgumentException">The<paramref name=" stream"/> parameter is not writable.</exception>
		<exception cref="System.ArgumentNullException">The<paramref name=" stream"/> parameter is <see langword="null"/>.</exception>
		<example>
			<codelink SampleID="System.Resources.ResourceWriter Cstr1 Example" SnippetID="1"/>
		</example>
		<seealso topic="cpcondesigningglobalapplications"/>
	</doc>
	<doc for="ResourceWriter.AddResource">
		<overload>
			<para> Adds a resource to the
      list of resources to be written.</para>
		</overload>
		<summary>
			<para>Adds a <see cref="System.String"/> resource to the list of
   resources to be written.</para>
		</summary>
		<param name="name">The name of the resource.</param>
		<param name=" value">The value of the resource.</param>
		<exception cref="System.ArgumentException"><paramref name="name"/> (or a name that varies only by capitalization) has already been added to this ResourceWriter.</exception>
		<exception cref="System.ArgumentNullException">The<paramref name=" name"/> or <paramref name="value"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.InvalidOperationException">This <see cref="System.Resources.ResourceWriter"/> has been closed and its <see cref="System.Collections.Hashtable"/> is unavailable.</exception>
		<remarks>
			<para>The resource is not written until <see cref="System.Resources.ResourceWriter.Generate"/> is called.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Resources.ResourceWriter Cstr1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ResourceWriter.Close">
		<summary>
			<para>Saves the resources to the output stream and then closes it.</para>
		</summary>
		<exception cref="System.IO.IOException">An I/O error has occurred.</exception>
		<exception cref="System.Runtime.Serialization.SerializationException">An error has occurred during serialization of the object.</exception>
		<remarks>
			<para><see cref="System.Resources.ResourceWriter.Generate"/> is called implicitly by <see cref="System.Resources.ResourceWriter.Close"/>, if required.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Resources.ResourceWriter Cstr1 Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ResourceWriter.Dispose">
		<summary>
			<para> Allows users to close the resource file or
      stream, explicitly releasing resources.</para>
		</summary>
		<exception cref="System.IO.IOException">An I/O error has occurred.</exception>
		<exception cref="System.Runtime.Serialization.SerializationException">An error has occurred during serialization of the object.</exception>
		<remarks>
			<para>The implementation of this method is the same as <see cref="System.Resources.ResourceWriter.Close"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Resources.ResourceWriter.Dispose Example" SnippetID="1"/>
		</example>
		<seealso cref="System.IDisposable"/>
	</doc>
	<doc for="ResourceWriter.Generate">
		<summary>
			<para>Saves all resources to the output stream in the system default format. </para>
		</summary>
		<exception cref="System.IO.IOException">An I/O error occurred.</exception>
		<exception cref="System.Runtime.Serialization.SerializationException"><para>An error occurred during serialization of the object.</para></exception>
		<exception cref="System.InvalidOperationException">This <see cref="System.Resources.ResourceWriter"/> has been closed and its <see cref="System.Collections.Hashtable"/> is unavailable.</exception>
		<remarks>
			<para><see cref="System.Resources.ResourceWriter.Generate"/> can only be called once, after all calls to
<see cref="System.Resources.ResourceWriter.AddResource"/> have been made. If an exception occurs while
   writing the resources, the output stream is closed since the information written
   is most likely invalid.</para>
			<para><see cref="System.Resources.ResourceWriter.Generate"/> does not close the output
stream in normal cases. Unless you are combining extra data with your .resources
file or need access to the stream afterwards, you should call <see cref="System.Resources.ResourceWriter.Close"/> after calling <see cref="System.Resources.ResourceWriter.Generate"/>, or simply call <see cref="System.Resources.ResourceWriter.Close"/>
.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Resources.ResourceWriter.Generate Example" SnippetID="1"/>
		</example>
		<seealso topic="cpconserialization"/>
	</doc>
</docs>
