<docs>
	<doc for="ISymbolScope.Method">
		<summary>
			<para>
       Gets the method that contains the current lexical scope.
    </para>
		</summary>
		<returns>
			<para>
       The method that contains the current lexical scope.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolScope.Parent">
		<summary>
			<para>
       Gets the parent lexical scope of the current scope.
    </para>
		</summary>
		<returns>
			<para>
       The parent lexical scope of the current scope.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolScope.GetLocals">
		<summary>
			<para> Gets the local variables within the current lexical scope.
      </para>
		</summary>
		<returns>
			<para> The local variables within the current lexical scope.
      </para>
		</returns>
		<remarks>
			<para> The local variables are returned in no particular order.
      If a local variable changes its address within the current scope, that
      variable is returned multiple times, each with a different offset range.
      </para>
		</remarks>
	</doc><doc for="ISymbolScope.GetNamespaces">
		<summary>
			<para> Gets the namespaces that are used within the current scope.
      </para>
		</summary>
		<returns>
			<para> The namespaces that are used within the current scope.
      </para>
		</returns>
	</doc><doc for="ISymbolScope.StartOffset">
		<summary>
			<para> Gets the start offset of the current lexical scope.
      </para>
		</summary>
		<value>
			<para> The start offset of the current lexical scope.
      </para>
		</value>
	</doc><doc for="ISymbolScope.EndOffset">
		<summary>
			<para> Gets the end offset of the current lexical scope.
      </para>
		</summary>
		<value>
			<para> The end offset of the current lexical scope.
      </para>
		</value>
	</doc><doc for="ISymbolScope.GetChildren">
		<summary>
			<para> Gets the child lexical scopes of the current lexical
      scope.
      </para>
		</summary>
		<returns>
			<para> The child lexical scopes that of the current lexical
      scope.
      </para>
		</returns>
	</doc><doc for="ISymbolScope">
		<summary>
			<para> Represents a lexical scope within <see cref="System.Diagnostics.SymbolStore.ISymbolMethod"/> , providing access to the start and end offsets of the
   scope, as well as its child and parent scopes.
   </para>
		</summary>
		<remarks>
			<para> The <see cref="System.Diagnostics.SymbolStore.ISymbolScope"/> interface also provides access to all locals defined
   within the current scope.
   </para>
			<note type="note">
   This interface is the managed
   counterpart of the <see langword="ISymUnmanagedScope"/> interface, defined
   in the Debug Reference (located in the %\Microsoft.NET\Framework SDK\Tool
   Developers Guide\Docs directory). The unmanaged Symbol Store interfaces
   described in the Debug Reference provide an alternative set of unmanaged APIs
   for writing and manipulating symbolic information.
</note>
		</remarks>
		<seealso cref="System.Diagnostics.SymbolStore.ISymbolMethod"/>
		<seealso cref="System.Reflection.Emit.ILGenerator.BeginScope" qualify="true"/>
		<seealso cref="System.Reflection.Emit.ILGenerator.EndScope" qualify="true"/>
	</doc>
</docs>
