<docs>
	<doc for="ISymbolDocument.URL">
		<summary>
			<para>
       Gets the URL of the current document.
    </para>
		</summary>
		<returns>
			<para>
       The URL of the current document.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolDocument.DocumentType">
		<summary>
			<para>
       Gets the type of the current document.
    </para>
		</summary>
		<value>
			<para>
       The type of the current document.
    </para>
		</value>
	</doc>
	<doc for="ISymbolDocument.Language">
		<summary>
			<para>
       Gets the language of the current document.
    </para>
		</summary>
		<value>
			<para>
       The language of the current document.
    </para>
		</value>
	</doc>
	<doc for="ISymbolDocument.LanguageVendor">
		<summary>
			<para>
       Gets the language vendor of the current document.
    </para>
		</summary>
		<value>
			<para>
       The language vendor of the current document.
    </para>
		</value>
	</doc>
	<doc for="ISymbolDocument.GetCheckSum">
		<summary>
			<para>
       Gets the checksum.
    </para>
		</summary>
		<returns>
			<para>
       The checksum.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolDocument.SourceLength">
		<summary>
			<para>
       Gets the length, in bytes, of the embedded source.
    </para>
		</summary>
		<returns>
			<para>
       The source length of the current document.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolDocument.GetSourceRange">
		<summary>
			<para>
       Gets the embedded document source for the specified range.
    </para>
		</summary>
		<param name="startLine">
    The starting line in the current document.
 </param>
		<param name="startColumn">
    The starting column in the current document.
 </param>
		<param name="endLine">
    The ending line in the current document.
 </param>
		<param name="endColumn">
    The ending column in the current document.
 </param>
		<returns>
			<para>
       The document source for the specified range.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolDocument.FindClosestLine">
		<summary>
			<para> Returns the closest line that is a sequence point, given a line
      in the current document that might or might not be a sequence point.
      </para>
		</summary>
		<param name="line">The specified line in the document. </param>
		<returns>
			<para> The closest line that is a sequence point.
      </para>
		</returns>
	</doc><doc for="ISymbolDocument.HasEmbeddedSource">
		<summary>
			<para> Checks whether the current document is stored in the symbol
      store.
      </para>
		</summary>
		<value>
			<para><see langword="true"/> if the current document is stored 
   in the symbol store; otherwise, <see langword="false"/>
   .
   </para>
		</value>
	</doc><doc for="ISymbolDocument.CheckSumAlgorithmId">
		<summary>
			<para> Gets the checksum algorithm identifier.
      </para>
		</summary>
		<value>
			<para> A GUID identifying the checksum algorithm. The value is
      all zeros, if there is no checksum.
      </para>
		</value>
	</doc><doc for="ISymbolDocument">
		<summary>
			<para> Represents a document referenced by a symbol store.
      </para>
		</summary>
		<remarks>
			<para> A document is defined by a URL and a
      document type GUID. Using the document type GUID and the URL, you can locate the
      document. You can optionally store document source in the symbol store.
      </para>
			<para> This interface also provides access to that source, if
      present.
      </para>
			<note type="note">
      This interface is the managed
      counterpart of the <see langword="ISymUnmanagedDocument"/> interface,
      defined in the Debug Reference (located in the %\Microsoft.NET\Framework
      SDK\Tool Developers Guide\Docs directory). The unmanaged Symbol Store interfaces
      described in the Debug Reference provide an alternative set of unmanaged APIs
      for writing and manipulating symbolic information.
   </note>
		</remarks>
		<seealso cref="System.Diagnostics.SymbolStore.ISymbolMethod"/>
		<seealso cref="System.Diagnostics.SymbolStore.ISymbolReader"/>
	</doc>
</docs>
