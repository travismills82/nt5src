<docs>
	<doc for="ISymbolReader.GetGlobalVariables">
		<summary>
			<para>
       Gets all global variables in the module.
    </para>
		</summary>
		<returns>
			<para>
       An array of all variables in the module.
    </para>
		</returns>
	</doc>
	<doc for="ISymbolReader.GetDocument">
		<summary>
			<para> Gets a document specified by the language, vendor, and type.
      </para>
		</summary>
		<param name="url">The URL that identifies the document. </param>
		<param name="language">The document language. You can specify this parameter as <see langword="null"/> . </param>
		<param name="languageVendor">The identity of the vendor for the document language. You can specify this parameter as <see langword="null"/> . </param>
		<param name="documentType">The type of the document. You can specify this parameter as <see langword="null"/> . </param>
		<returns>
			<para> The specified document.
      </para>
		</returns>
	</doc><doc for="ISymbolReader.GetDocuments">
		<summary>
			<para> Gets an array of all documents defined in the symbol store.
      </para>
		</summary>
		<returns>
			<para> An array of all documents defined in the symbol store.
      </para>
		</returns>
	</doc><doc for="ISymbolReader.GetMethod">
		<overload>
			<para> Gets a symbol reader method object.
      </para>
		</overload>
		<summary>
			<para> Gets a symbol reader method object when given the identifier of a method.
      </para>
		</summary>
		<param name="method">The metadata token of the method. </param>
		<returns>
			<para> The symbol reader method object for the specified method identifier.
      </para>
		</returns>
	</doc><doc for="ISymbolReader.GetMethod1">
		<summary>
			<para> Gets a symbol reader method object when given the identifier of a
      method and its edit and continue version.
      </para>
		</summary>
		<param name="method">The metadata token of the method. </param>
		<param name="version">The edit and continue version of the method. </param>
		<returns>
			<para> The symbol reader method object for the specified method
      identifier.
      </para>
		</returns>
	</doc><doc for="ISymbolReader.GetVariables">
		<summary>
			<para> Gets the variables that are not local when given the parent.
      </para>
		</summary>
		<param name="parent">The metadata token for the type for which the variables are requested. </param>
		<returns>
			<para>An array of variables for the parent.</para>
		</returns>
	</doc><doc for="ISymbolReader.GetMethodFromDocumentPosition">
		<summary>
			<para> Gets a symbol reader method object that contains a specified position
      in a document.
      </para>
		</summary>
		<param name="document">The document in which the method is located. </param>
		<param name="line">The position of the line within the document. The lines are numbered, beginning with 1. </param>
		<param name="column">The position of column within the document. The columns are numbered, beginning with 1. </param>
		<returns>
			<para> The reader method object for the specified position in the
      document.
      </para>
		</returns>
	</doc><doc for="ISymbolReader.GetSymAttribute">
		<summary>
			<para> Gets an attribute value when given the attribute name.
      </para>
		</summary>
		<param name="parent">The metadata token for the object for which the attribute is requested. </param>
		<param name="name">The attribute name. </param>
		<returns>
			<para> The value of the attribute.
      </para>
		</returns>
		<remarks>
			<para> This attribute is only associated with symbolic information and
      is not a metadata custom attribute.
      </para>
		</remarks>
	</doc><doc for="ISymbolReader.GetNamespaces">
		<summary>
			<para> Gets the namespaces that are defined in the global scope within the current symbol
      store.
      </para>
		</summary>
		<returns>
			<para> The namespaces defined in the global scope within the current symbol
      store.
      </para>
		</returns>
	</doc><doc for="ISymbolReader.UserEntryPoint">
		<summary>
			<para> Gets the metadata token for the method that was specified as the
      user entry point for the module, if any.
      </para>
		</summary>
		<value>
			<para> The metadata token for the method that is the user entry point
      for the module.
      </para>
		</value>
		<remarks>
			<para>This is normally your main method, rather than compiler-generated stubs 
      before the main method.</para>
		</remarks>
	</doc><doc for="ISymbolReader">
		<summary>
			<para> Represents a symbol reader for managed code.
      </para>
		</summary>
		<remarks>
			<para> The interface provides access to documents, methods, and
      variables.
      </para>
			<note type="note">
      This interface is the managed
      counterpart of the <see langword="ISymUnmanagedReader"/> interface, defined
      in the Debug Reference (located in the %\Microsoft.NET\Framework SDK\Tool
      Developers Guide\Docs directory). The unmanaged Symbol Store interfaces
      described in the Debug Reference provide an alternative set of unmanaged APIs
      for writing and manipulating symbolic information.
   </note>
		</remarks>
		<seealso cref="System.Diagnostics.SymbolStore.ISymbolBinder"/>
	</doc>
</docs>
