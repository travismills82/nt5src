<docs>
	<doc for="ConditionalAttribute.ConditionString">
		<summary>
			<para>Gets the string that contains the pre-processing identifier that makes
      the target method of the current instance callable.</para>
		</summary>
		<value>
			<para>A string that contains the preprocessing identifier that makes
      the target method of the current instance callable.</para>
		</value>
		<remarks>
			<para>This property is read-only.</para>
		</remarks>
	</doc><doc for="ConditionalAttribute.ConditionalAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Diagnostics.ConditionalAttribute"/> class,
   specifying the name of the attribute that enables the calling of the conditional
   method.</para>
		</summary>
		<param name="conditionString">A string that contains the preprocessing identifier that makes the target method of the current instance callable.</param>
		<example>
			<para>The following console application example demonstrates the use of <see cref="System.Diagnostics.ConditionalAttribute"/> with a particular compiler that supports the 
   use of this attribute.</para>
			<codelink SampleID="ConditionalAttributeSample1" SnippetID="8"/>
		</example>
	</doc>
	<doc for="ConditionalAttribute">
		<summary>
			<para> Indicates to compilers that
      a method is callable if a specified preprocessing identifier is applied to the method.</para>
		</summary>
		<remarks>
			<para> The <see cref="System.Diagnostics.ConditionalAttribute"/> supports the conditional methods defined in the <see cref="T:System.Diagnostics.Trace"/> and
<see cref="T:System.Diagnostics.Debug"/> classes.</para>
			<para>Methods decorated with the <see cref="System.Diagnostics.ConditionalAttribute"/> attribute are always compiled
into Microsoft intermediate language (MSIL), but calls to the methods can not be made
at run time. If the method has arguments, they are type-checked at run time, but
not evaluated.</para>
			<note type="note">
   Visual Studio .NET compiles Release builds
   with the TRACE conditional compilation constant defined, and Debug builds with
   both the DEBUG and TRACE constants
   defined, by default. For command-line builds, you must specify all conditional
   compilation constants.
</note>
			<note type="note">
   A <see cref="System.Diagnostics.ConditionalAttribute"/> that has an associated <see cref="System.Diagnostics.ConditionalAttribute.ConditionString"/> can be attached to
   the definition of a method, creating a conditional method. Thereafter, when
   a compiler encounters a call to that method, it can choose to ignore the call
   unless a compilation variable is defined at the site of the call, with a value
   that matches in a case-sensitive manner the <see cref="System.Diagnostics.ConditionalAttribute.ConditionString"/> supplied to the <see cref="System.Diagnostics.ConditionalAttribute"/>.
   
</note>
			<para> Compilers might provide several techniques to define such compilation
   variables, such as:</para>
			<list type="bullet"><item>
					<term>
      
      Compiler command-line switches (for example,
      /define:DEBUG).</term>
				</item>
				<item>
					<term>
      
      Environment variables in the operating system shell
      (for example, SET DEBUG=1).</term>
				</item>
				<item>
					<term>
      
      Pragmas
      
      in the source code (for example, #define DEBUG, to define the
      compilation variable, or #undef DEBUG to undefine it).</term>
				</item>
			</list>
			<para> CLS-compliant compilers are permitted to ignore
   the <see cref="System.Diagnostics.ConditionalAttribute"/>.</para>
			<para>For more information about using attributes, see
<see topic="cpconextendingmetadatausingattributes"/>.</para>
		</remarks>
		<example>
			<para>The following console application example demonstrates
      the use of <see cref="System.Diagnostics.ConditionalAttribute"/> with a particular compiler that supports the
      use of this attribute.</para>
			<codelink SampleID="ConditionalAttributeSample1" SnippetID="7"/>
		</example>
	</doc>
</docs>
