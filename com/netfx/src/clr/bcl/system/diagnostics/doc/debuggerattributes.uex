<docs>
	<doc for="DebuggerStepThroughAttribute.DebuggerStepThroughAttribute">
		<summary>
			<para> Enables the <see cref="System.Diagnostics.DebuggerStepThroughAttribute"/>.</para>
		</summary>
	</doc><doc for="DebuggerHiddenAttribute.DebuggerHiddenAttribute">
		<summary>
			<para> Enables the <see cref="System.Diagnostics.DebuggerHiddenAttribute"/>.</para>
		</summary>
	</doc><doc for="DebuggableAttribute.IsJITOptimizerDisabled">
		<summary>
			<para>Gets a value that indicates whether the runtime optimizer is
 disabled.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the
 runtime optimizer is disabled; otherwise, <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>A value of <see langword="true"/> enhances performance for runtime debugging, which can cause a decline
 in execution performance. A value of <see langword="false"/>
 enhances performance for execution. When <see cref="System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled"/> is set to
<see langword="false"/>, stepping through code might result in a different 
 behavior then when set to <see langword="true"/>
 
 because the compilier might reorder instructions or insert jumps to common
 code.</para>
		</remarks>
	</doc><doc for="DebuggableAttribute">
		<summary>
			<para>Modifies code generation for runtime just-in-time (JIT) debugging. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Diagnostics.DebuggableAttribute"/> controls how the runtime
   treats code within the module. The runtime might track extra information about
   generated code, and it might disable certain optimizations based on the values contained
   within this attribute.</para>
			<para>For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
	</doc><doc for="DebuggableAttribute.DebuggableAttribute">
		<summary>
			<para>Sets the conditions to control code
      generation for runtime just-in-time (JIT) debugging.</para>
		</summary>
		<param name="isJITTrackingEnabled"><see langword="true"/> to enable debugging; otherwise, <see langword="false"/>.</param>
		<param name=" isJITOptimizerDisabled"><see langword="true"/> to disable the optimizer for execution; otherwise, <see langword="false"/>.</param>
		<remarks>
			<para>Sets the properties <see cref="System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled"/> and <see cref="System.Diagnostics.DebuggableAttribute.IsJITOptimizerDisabled"/>.</para>
			<para> A <paramref name="isJITTrackingEnabaled"/> value of
<see langword="true"/> causes the runtime to 
track information important to the
debugger during code generation; a value of <see langword="false"/> results in no
tracking, but does not prevent debugging. </para>
			<para>A <paramref name="isJITOptimizerDisabled"/> value of <see langword="true"/>
optimizes for debugging, a value of <see langword="false"/> optimizes for execution.</para>
		</remarks>
	</doc><doc for="DebuggerStepThroughAttribute">
		<summary>
			<para> Specifies the <see cref="System.Diagnostics.DebuggerStepThroughAttribute"/>. This
   class cannot be inherited.</para>
		</summary>
		<remarks>
			<para> The common language runtime attaches no semantics to
      this attribute. It is provided for use by source code debuggers. For example,
      the Visual Studio .NET debugger does not stop in a method marked with
      this attribute but does allow a breakpoint to be set in the method.</para>
			<para>For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
	</doc><doc for="DebuggerHiddenAttribute">
		<summary>
			<para> Specifies the <see cref="System.Diagnostics.DebuggerHiddenAttribute"/>. This class
   cannot be inherited.</para>
		</summary>
		<remarks>
			<para> The common language runtime attaches no semantics to this
      attribute. It is provided for use by source code debuggers. For example, the
      Visual Studio .NET debugger does not stop in a method marked with this
      attribute and does not allow a breakpoint to be set in the method.</para>
			<para>For more information about using attributes, see <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
	</doc><doc for="DebuggableAttribute.IsJITTrackingEnabled">
		<summary>
			<para>Gets a value that indicates whether the runtime will track information during code generation for the
      debugger.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the
   runtime will track information during code generation for the debugger; otherwise,
<see langword="false"/>.</para>
		</value>
		<remarks>
			<para><see cref="System.Diagnostics.DebuggableAttribute.IsJITTrackingEnabled"/>
controls whether the
runtime tracks information important to the debugger during
code generation. This information helps the debugger provide a rich
debugging experience.</para>
			<note type="note">
   This
   property does not control the
   ability to debug, but tells the just-in-time (JIT) compiler to generate tracking
   info. Specifically, the Microsoft Intermediate Language (MSIL)-offset to
   the native-code offset within a method.
</note>
		</remarks>
	</doc>
</docs>
