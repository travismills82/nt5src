<docs>
    <doc for="HijriCalendar">
        <summary>
            <para>Represents the Hijri calendar.</para>
        </summary>
        <remarks>
            <para>The Hijri calendar recognizes one era: A.H. (Latin "Anno Hegirae",
 which means "the year of the migration," in reference to the migration of Muhammad from Mecca).</para>
            <para>In every 30-year cycle that ends with a year that is evenly divisible by 30,
 the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.
 A common year has 354 days and a leap year has 355 days.</para>
            <para>The Hijri calendar has 12 months with 29 to 30 days each:</para>
<list type="table">
 <listheader>
 <term>GetMonth value</term>
 <description>Month</description>
 <description>Days in common years</description>
 <description>Days in leap years</description>
 </listheader>
 <item>
 <term>1</term>
 <description><htmltext>&amp;#x0645;&amp;#x062d;&amp;#x0631;&amp;#x0645;</htmltext> (Muharram)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>2</term>
 <description><htmltext>&amp;#x0635;&amp;#x0641;&amp;#x0631;</htmltext> (Safar)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>3</term>
 <description><htmltext>&amp;#x200f;&amp;#x0631;&amp;#x0628;&amp;#x064a;&amp;#x0639;&amp;#x0020;&amp;#x0627;&amp;#x0644;&amp;#x0627;&amp;#x0648;&amp;#x0644;</htmltext> (Rabi I)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>4</term>
 <description><htmltext>&amp;#x200f;&amp;#x0631;&amp;#x0628;&amp;#x064a;&amp;#x0639;&amp;#x0020;&amp;#x0627;&amp;#x0644;&amp;#x062b;&amp;#x0627;&amp;#x0646;&amp;#x064a;</htmltext> (Rabi II)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>5</term>
 <description><htmltext>&amp;#x062c;&amp;#x0645;&amp;#x0627;&amp;#x062f;&amp;#x0649;&amp;#x0020;&amp;#x0627;&amp;#x0644;&amp;#x0627;&amp;#x0648;&amp;#x0644;&amp;#x0649;</htmltext> (Jumada I)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>6</term>
 <description><htmltext>&amp;#x062c;&amp;#x0645;&amp;#x0627;&amp;#x062f;&amp;#x0649;&amp;#x0020;&amp;#x0627;&amp;#x0644;&amp;#x062b;&amp;#x0627;&amp;#x0646;&amp;#x064a;&amp;#x0629;</htmltext> (Jumada II)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>7</term>
 <description><htmltext>&amp;#x0631;&amp;#x062c;&amp;#x0628;</htmltext> (Rajab)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>8</term>
 <description><htmltext>&amp;#x0634;&amp;#x0639;&amp;#x0628;&amp;#x0627;&amp;#x0646;</htmltext> (Shaban)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>9</term>
 <description><htmltext>&amp;#x0631;&amp;#x0645;&amp;#x0636;&amp;#x0627;&amp;#x0646;</htmltext> (Ramadan)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>10</term>
 <description><htmltext>&amp;#x0634;&amp;#x0648;&amp;#x0627;&amp;#x0644;</htmltext> (Shawwal)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>11</term>
 <description><htmltext>&amp;#x0630;&amp;#x0648;&amp;#x0020;&amp;#x0627;&amp;#x0644;&amp;#x0642;&amp;#x0639;&amp;#x062f;&amp;#x0629;</htmltext> (Zulkadah)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>12</term>
 <description><htmltext>&amp;#x0630;&amp;#x0648;&amp;#x0020;&amp;#x0627;&amp;#x0644;&amp;#x062d;&amp;#x062c;&amp;#x0629;</htmltext> (Zulhijjah)</description>
 <description>29</description>
 <description>30</description>
 </item>
</list>
            <para>Ramadan, the month of fasting in the Muslim world, officially starts and ends
 according to a decree that is based on the observation of the new moon;
 therefore,the number of days in Shaban and the number of days in Ramadan vary.</para>
            <para>The date January 1, 2001 A.D. in the Gregorian calendar is roughly equivalent to
 the sixth day of Shawwal in the year 1421 A.H. in the Hijri calendar.</para>
            <para>This implementation of the <see cref="System.Globalization.HijriCalendar" /> class adjusts the calendar date
 by adding or subtracting a value from zero to two days
 to accommodate the variances in the start and the end of Ramadan
 and to accommodate the date difference between countries/regions.
 That value is stored in the <see cref="System.Globalization.HijriCalendar.HijriAdjustment" /> property.
 If <see cref="System.Globalization.HijriCalendar.HijriAdjustment" /> is not set explicitly,
 it derives its value from the settings in Regional and Language Options (or Regional Options or Regional Settings) in Control Panel in Windows
 and is stored in the registry value HKEY_CURRENT_USER\Control Panel\International\AddHijriDate.
 However, that information can change during the life of the <see cref="System.AppDomain" />.
 The <see cref="System.Globalization.HijriCalendar" /> class does not detect changes in the system settings automatically.</para>
            <para>Each <see cref="System.Globalization.CultureInfo" /> supports a set of calendars.
 The <see cref="System.Globalization.CultureInfo.Calendar" /> property returns the default calendar for the culture, and
 the <see cref="System.Globalization.CultureInfo.OptionalCalendars" /> property returns an array containing all the calendars supported by the culture.
 To change the calendar used by a <see cref="System.Globalization.CultureInfo" />,
 set the <see cref="System.Globalization.DateTimeFormatInfo.Calendar" /> property of <see cref="System.Globalization.CultureInfo.DateTimeFormat" qualify="true" />
 to a new <see cref="System.Globalization.Calendar" />.</para>
        </remarks>
        <seealso cref="System.Globalization.Calendar" />
        <seealso cref="System.Globalization.CultureInfo.Calendar" />
        <seealso cref="System.Globalization.CultureInfo.OptionalCalendars" />
    </doc><doc for="HijriCalendar.HijriEra">
        <summary>
            <para>Represents the current era. This field is constant.</para>
        </summary>
        <remarks>
            <para>The Hijri calendar recognizes one era: A.H. (Latin "Anno Hegirae", 
      which means "the year of the migration," in reference to the migration of Muhammad from Mecca).</para>
        </remarks>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
    </doc><doc for="HijriCalendar.HijriCalendar">
        <summary>
            <para>Initializes a new instance of the <see cref="System.Globalization.HijriCalendar" /> class.</para>
        </summary>
    </doc><doc for="HijriCalendar.HijriAdjustment">
        <summary>
            <para>Gets or sets the number of days to add or subtract from the calendar
 to accommodate the variances in the start and the end of Ramadan and
 to accommodate the date difference between countries/regions.</para>
        </summary>
        <value>
            <para>An integer from -2 to 2 that represents the number of days to add or subtract from the calendar.</para>
        </value>
        <exception cref="System.ArgumentOutOfRangeException">The property is being set to an invalid value.</exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HijriCalendar" /> class adjusts the calendar date
 by adding or subtracting a value from zero to two days
 to accommodate the variances in the start and the end of Ramadan
 and to accommodate the date difference between countries/regions.
 That value is stored in the <see cref="System.Globalization.HijriCalendar.HijriAdjustment" /> property.
 If <see cref="System.Globalization.HijriCalendar.HijriAdjustment" /> is not set explicitly,
 it derives its value from the settings in Regional and Language Options (or Regional Options or Regional Settings) in Control Panel in Windows
 and is stored in the registry value HKEY_CURRENT_USER\Control Panel\International\AddHijriDate.
 However, that information can change during the life of the <see cref="System.AppDomain" />.
 The <see cref="System.Globalization.HijriCalendar" /> class does not detect changes in the system settings automatically.</para>
        </remarks>
        <example>
            <para>The following code example shows how <see cref="System.Globalization.HijriCalendar.HijriAdjustment" /> affects the date.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.HijriAdjustment" SnippetID="1" />
        </example>
    </doc><doc for="HijriCalendar.AddMonths">
        <summary>
            <para>Returns a <see cref="System.DateTime" /> that is the specified number of months away from the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to which to add months.</param>
        <param name="months">The number of months to add.</param>
        <returns>
            <para>The <see cref="System.DateTime" /> that results from adding the specified number of months to the specified <see cref="System.DateTime" />.</para>
        </returns>
        <exception cref="System.ArgumentException">The resulting <see cref="System.DateTime" /> is outside the supported range.</exception>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="months" /> is less than -120000.</para><para>-or-</para>
            <para><paramref name="months" /> is greater than 120000.</para></exception>
<remarks>
            <para>The day part of the resulting <see cref="System.DateTime" /> is affected if the resulting day is not a valid day in the resulting month of the resulting year;
   it is changed to the last valid day in the resulting month of the resulting year.
   The year part of the resulting <see cref="System.DateTime" /> is affected if the resulting month is outside the year of the specified <see cref="System.DateTime" />.
   This implementation only supports the current era; therefore, <see cref="System.ArgumentException" /> is thrown if the resulting year is outside the era of the specified <see cref="System.DateTime" />.
   The time-of-day part of the resulting <see cref="System.DateTime" /> remains the same as the specified <see cref="System.DateTime" />.</para>
            <para>For example, if the specified month is Zulkadah, which has 30 days,
 the specified day is the 30th day of that month,
 and the value of the <paramref name="months" /> parameter is 3,
 the resulting year is one more than the specified year,
 the resulting month is Safar,
 and the resulting day is the 29th day, which is the last day in Safar.</para>
            <para>If the value of the <paramref name="months" /> parameter is negative,
 the resulting <see cref="System.DateTime" /> is earlier than the specified <see cref="System.DateTime" />.</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.AddYears" />
        <seealso cref="System.Globalization.Calendar.AddWeeks" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddDays" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddHours" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMinutes" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddSeconds" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMilliseconds" qualify="true" />
    </doc><doc for="HijriCalendar.AddYears">
        <summary>
            <para>Returns a <see cref="System.DateTime" /> that is the specified number of years away from the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to which to add years.</param>
        <param name="years">The number of years to add.</param>
        <returns>
            <para>The <see cref="System.DateTime" /> that results from adding the specified number of years to the specified <see cref="System.DateTime" />.</para>
        </returns>
        <exception cref="System.ArgumentException">The resulting <see cref="System.DateTime" /> is outside the supported range. </exception>
        <remarks>
            <para>The day part of the resulting <see cref="System.DateTime" /> is affected if the resulting day is not a valid day in the resulting month of the resulting year;
   it is changed to the last valid day in the resulting month of the resulting year.
   The month part of the resulting <see cref="System.DateTime" /> remains the same as the specified <see cref="System.DateTime" />.
   This implementation only supports the current era; therefore, <see cref="System.ArgumentException" /> is thrown if the resulting year is outside the era of the specified <see cref="System.DateTime" />.
   The time-of-day part of the resulting <see cref="System.DateTime" /> remains the same as the specified <see cref="System.DateTime" />.</para>
            <para> For example, Zulhijjah has 29 days, except during leap years when it has 30 days.
   If the specified date is the 30th day of Zulhijjah in a leap year and the value of <paramref name="years" /> is 1,
   the resulting date will be the 29th day of Zulhijjah in the following year.</para>
            <para>If <paramref name="years" /> is negative, the resulting <see cref="System.DateTime" /> is earlier than the specified <see cref="System.DateTime" />.</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.AddMonths" />
        <seealso cref="System.Globalization.Calendar.AddWeeks" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddDays" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddHours" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMinutes" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddSeconds" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMilliseconds" qualify="true" />
    </doc><doc for="HijriCalendar.GetDayOfMonth">
        <summary>
            <para>Returns the day of the month in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer from 1 to 30 that represents the day of the month in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.Day" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.GetEra" />
        <seealso cref="System.Globalization.HijriCalendar.GetYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
    </doc><doc for="HijriCalendar.GetDayOfWeek">
        <summary>
            <para>Returns the day of the week in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>A <see cref="System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>The <see cref="System.DayOfWeek" /> values are as follows:</para>
<list type="table">
 <listheader>
 <term>DayOfWeek value</term>
 <description>which indicates</description>
 </listheader>
 <item>
 <term>Sunday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x0627;&amp;#x062d;&amp;#x062f;</htmltext> (Al-Ahad)</description>
 </item>
 <item>
 <term>Monday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x0627;&amp;#x062b;&amp;#x0646;&amp;#x064a;&amp;#x0646;</htmltext> (Al-Ithnayn)</description>
 </item>
 <item>
 <term>Tuesday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x062b;&amp;#x0644;&amp;#x0627;&amp;#x062b;&amp;#x0627;&amp;#x0621;</htmltext> (At-Thulaathaa')</description>
 </item>
 <item>
 <term>Wednesday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x0627;&amp;#x0631;&amp;#x0628;&amp;#x0639;&amp;#x0627;&amp;#x0621;</htmltext> (Al-Arbi'aa')</description>
 </item>
 <item>
 <term>Thursday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x062e;&amp;#x0645;&amp;#x064a;&amp;#x0633;</htmltext> (Al-Khamiis)</description>
 </item>
 <item>
 <term>Friday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x062c;&amp;#x0645;&amp;#x0639;&amp;#x0629;</htmltext> (Al-Jumu'ah)</description>
 </item>
 <item>
 <term>Saturday</term>
 <description><htmltext>&amp;#x0627;&amp;#x0644;&amp;#x0633;&amp;#x0628;&amp;#x062a;</htmltext> (As-Sabt)</description>
 </item>
</list>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.DayOfWeek" qualify="true" />
        <seealso cref="System.DayOfWeek" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.GetEra" />
        <seealso cref="System.Globalization.HijriCalendar.GetYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
    </doc><doc for="HijriCalendar.GetDayOfYear">
        <summary>
            <para>Returns the day of the year in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer from 1 to 355 that represents the day of the year in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>The day of the year is defined as the number of days from the first day of the year.
      For example, <see cref="System.Globalization.HijriCalendar.GetDayOfYear" /> for the first day of the first month returns 1,
      and <see cref="System.Globalization.HijriCalendar.GetDayOfYear" /> for the last day of the last month returns the total number of days in that year,
      which is the same value returned by <see cref="System.Globalization.HijriCalendar.GetDaysInYear" />.</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.DayOfYear" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.GetEra" />
        <seealso cref="System.Globalization.HijriCalendar.GetYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
    </doc><doc for="HijriCalendar.GetDaysInMonth">
        <overload>
            <para>Returns the number of days in the specified month.</para>
        </overload>
        <summary>
            <para>Returns the number of days in the specified month in the specified year in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 12 that represents the month.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The number of days in the specified month in the specified year in the specified era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>For example, this method returns 29 or 30 for Zulhijjah (<paramref name="month" /> = 12),
   depending on whether <paramref name="year" /> is a leap year.</para>
        </remarks>
        <example>
            <para>The following code example calls GetDaysInMonth for the twelfth month in each of five years in each era.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.GetDaysInMonth" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDaysInYear" />
    </doc><doc for="HijriCalendar.GetDaysInYear">
        <overload>
            <para>Returns the number of days in the specified year.</para>
        </overload>
        <summary>
            <para>Returns the number of days in the specified year in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The number of days in the specified year in the specified era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>For example, this method returns 354 or 355, depending on whether <paramref name="year" /> is a leap year.</para>
        </remarks>
        <example>
            <para>The following code example calls GetDaysInYear for five years in each era.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.GetDaysInYear" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDaysInMonth" />
    </doc><doc for="HijriCalendar.GetEra">
        <summary>
            <para>Returns the era in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer that represents the era in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>The Hijri calendar recognizes one era: A.H. (Latin "Anno Hegirae", 
      which means "the year of the migration," in reference to the migration of Muhammad from Mecca).</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetHour" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMinute" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetSecond" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMilliseconds" qualify="true" />
    </doc><doc for="HijriCalendar.Eras">
        <summary>
            <para>Gets the list of eras in the <see cref="System.Globalization.HijriCalendar" />.</para>
        </summary>
        <value>
            <para>An array of integers that represents the eras in the <see cref="System.Globalization.HijriCalendar" />.</para>
        </value>
        <remarks>
            <para>The Hijri calendar recognizes one era: A.H. (Latin "Anno Hegirae", 
      which means "the year of the migration," in reference to the migration of Muhammad from Mecca).
      This property always returns an array with only one element.</para>
        </remarks>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
    </doc><doc for="HijriCalendar.GetMonth">
        <summary>
            <para>Returns the month in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer from 1 to 12 that represents the month in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.Month" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.GetEra" />
        <seealso cref="System.Globalization.HijriCalendar.GetYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetHour" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMinute" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetSecond" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMilliseconds" qualify="true" />
    </doc><doc for="HijriCalendar.GetMonthsInYear">
        <overload>
            <para>Returns the number of months in the specified year.</para>
        </overload>
        <summary>
            <para>Returns the number of months in the specified year in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The number of months in the specified year in the specified era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <example>
            <para>The following code example calls GetMonthsInYear for five years in each era.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.GetMonthsInYear" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetDaysInYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDaysInMonth" />
    </doc><doc for="HijriCalendar.GetYear">
        <summary>
            <para>Returns the year in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer that represents the year in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <example>
            <codelink SampleID="System.Globalization.HijriCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.Year" qualify="true" />
        <seealso cref="System.Globalization.HijriCalendar.GetEra" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HijriCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetHour" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMinute" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetSecond" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMilliseconds" qualify="true" />
    </doc><doc for="HijriCalendar.IsLeapDay">
        <overload>
            <para>Determines whether the specified day is a leap day.</para>
        </overload>
        <summary>
            <para>Determines whether the specified date in the specified era is a leap day.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 12 that represents the month.</param>
        <param name="day">An integer from 1 to 30 that represents the day.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="day" /> is outside the range supported by the calendar.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>In every 30-year cycle that ends with a year that is evenly divisible by 30, 
      the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.
 A common year has 354 days and a leap year has 355 days.</para>
            <para>A leap day is a day that occurs only in a leap year.
 In the Hijri calendar, the 30th day of Zulhijjah is the only leap day.</para>
        </remarks>
        <example>
            <para>The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.IsLeapDay" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDaysInMonth" />
        <seealso cref="System.Globalization.HijriCalendar.IsLeapYear" />
        <seealso cref="System.Globalization.HijriCalendar.IsLeapMonth" />
    </doc><doc for="HijriCalendar.IsLeapMonth">
        <overload>
            <para>Determines whether the specified month is a leap month.</para>
        </overload>
        <summary>
            <para>Determines whether the specified month in the specified year in the specified era is a leap month.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 12 that represents the month.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>This method always returns <see langword="false" />, unless overridden by a derived class.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>In every 30-year cycle that ends with a year that is evenly divisible by 30,
 the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.
 A common year has 354 days and a leap year has 355 days.</para>
            <para> A leap month is an entire month that occurs only in a leap year.
 The Hijri calendar does not have any leap months.</para>
        </remarks>
        <example>
            <para>The following code example calls IsLeapMonth for all the months in five years in the current era.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.IsLeapMonth" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HijriCalendar.IsLeapYear" />
        <seealso cref="System.Globalization.HijriCalendar.IsLeapDay" />
    </doc><doc for="HijriCalendar.IsLeapYear">
        <overload>
            <para>Determines whether the specified year is a leap year.</para>
        </overload>
        <summary>
            <para>Determines whether the specified year in the specified era is a leap year.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>In every 30-year cycle that ends with a year that is evenly divisible by 30, 
 the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years.
 A common year has 354 days and a leap year has 355 days.</para>
        </remarks>
        <example>
            <para>The following code example calls IsLeapYear for five years in each of the eras.</para>
            <codelink SampleID="System.Globalization.HijriCalendar.IsLeapYear" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.IsLeapMonth" />
        <seealso cref="System.Globalization.HijriCalendar.IsLeapDay" />
    </doc><doc for="HijriCalendar.ToDateTime">
        <overload>
            <para>Returns a <see cref="System.DateTime" /> that is set to the specified date.</para>
        </overload>
        <summary>
            <para>Returns a <see cref="System.DateTime" /> that is set to the specified date and time in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 12 that represents the month.</param>
        <param name="day">An integer from 1 to 30 that represents the day.</param>
        <param name="hour">An integer from 0 to 23 that represents the hour.</param>
        <param name="minute">An integer from 0 to 59 that represents the minute.</param>
        <param name="second">An integer from 0 to 59 that represents the second.</param>
        <param name="millisecond">An integer from 0 to 999 that represents the millisecond.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The <see cref="System.DateTime" /> that is set to the specified date and time in the current era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="day" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="hour" /> is less than zero or greater than 23.</para><para>-or-</para>
            <para><paramref name="minute" /> is less than zero or greater than 59.</para><para>-or-</para>
            <para><paramref name="second" /> is less than zero or greater than 59.</para><para>-or-</para>
            <para><paramref name="millisecond" /> is less than zero or greater than 999.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HijriCalendar.HijriEra" />
        <seealso cref="System.Globalization.HijriCalendar.Eras" />
        <seealso cref="System.Globalization.HijriCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HijriCalendar.GetDaysInMonth" />
    </doc><doc for="HijriCalendar.TwoDigitYearMax">
        <summary>
            <para>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</para>
        </summary>
        <value>
            <para>The last year of a 100-year range that can be represented by a 2-digit year.</para>
        </value>
        <remarks>
            <para>This property allows a 2-digit year to be properly translated to a 4-digit
      year. For example, if this property is set to 1429, the 100-year range is from
      1330 to 1429; therefore, a 2-digit value of 30 is interpreted as 1330, while a
      2-digit value of 29 is interpreted as 1429.</para>
            <para>The initial value of this property is derived from the settings in Regional and Language Options (or Regional Options or Regional Settings) in Control Panel in Windows.
 However, that information can change during the life of the <see cref="System.AppDomain" />.
 The <see cref="System.Globalization.HijriCalendar" /> class does not detect changes in the system settings automatically.</para>
        </remarks>
        <seealso cref="System.Globalization.HijriCalendar.ToFourDigitYear" />
    </doc><doc for="HijriCalendar.ToFourDigitYear">
        <summary>
            <para>Converts the specified two-digit year to a four-digit year
 by using the <see cref="System.Globalization.HijriCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</para>
        </summary>
        <param name="year">A two-digit integer that represents the year to convert.</param>
        <returns>
            <para>An integer that contains the four-digit representation of <paramref name="year" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para><see cref="System.Globalization.HijriCalendar.TwoDigitYearMax" /> is the last year in the 100-year range that can be represented by a two-digit year.
 The century is determined by finding the sole occurrence of the two-digit <paramref name="year" /> within that 100-year range.
 For example, if <see cref="System.Globalization.HijriCalendar.TwoDigitYearMax" /> is set to 1429, the 100-year range is from 1330 to 1429;
 therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.</para>
        </remarks>
        <seealso cref="System.Globalization.HijriCalendar.TwoDigitYearMax" />
    </doc>
</docs>
