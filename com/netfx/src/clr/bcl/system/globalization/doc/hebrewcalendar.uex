<docs>
    <doc for="HebrewCalendar">
        <summary>
            <para>Represents the Hebrew calendar.</para>
        </summary>
        <remarks>
            <para>The Hebrew calendar recognizes two eras: B.C.E. (before the common era) and A.M. (Latin "Anno Mundi", which means "the year of the world").
 This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes only the current era (A.M.)
 and only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>In every 19-year cycle that ends with a year that is evenly divisible by 19,
 the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.
 A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.
 A leap year can have from 383 to 385 days.</para>
            <para>The Hebrew calendar has 12 months during common years and 13 months during leap years:</para>
<list type="table">
 <listheader>
 <term>GetMonth value (common year)</term>
 <description>GetMonth value (leap year)</description>
 <description>Month</description>
 <description>Days in common years</description>
 <description>Days in leap years</description>
 </listheader>
 <item>
 <term>1</term>
 <description>1</description>
 <description><htmltext>&amp;#x05ea;&amp;#x05e9;&amp;#x05e8;&amp;#x05d9;</htmltext> (Tishrei)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>2</term>
 <description>2</description>
 <description><htmltext>&amp;#x05d7;&amp;#x05e9;&amp;#x05d5;&amp;#x05df;</htmltext> (Cheshvan)</description>
 <description>29/30</description>
 <description>29/30</description>
 </item>
 <item>
 <term>3</term>
 <description>3</description>
 <description><htmltext>&amp;#x05db;&amp;#x05e1;&amp;#x05dc;&amp;#x05d5;</htmltext> (Kislev)</description>
 <description>29/30</description>
 <description>29/30</description>
 </item>
 <item>
 <term>4</term>
 <description>4</description>
 <description><htmltext>&amp;#x05d8;&amp;#x05d1;&amp;#x05ea;</htmltext> (Tevet)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>5</term>
 <description>5</description>
 <description><htmltext>&amp;#x05e9;&amp;#x05d1;&amp;#x05d8;</htmltext> (Shevat)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>6</term>
 <description>-</description>
 <description><htmltext>&amp;#x05d0;&amp;#x05d3;&amp;#x05e8;</htmltext> (Adar)</description>
 <description>29</description>
 <description>-</description>
 </item>
 <item>
 <term>-</term>
 <description>6</description>
 <description><htmltext>&amp;#x05d0;&amp;#x05d3;&amp;#x05e8;&amp;#x0020;&amp;#x05d0;</htmltext> (Adar Alef )</description>
 <description>-</description>
 <description>30</description>
 </item>
 <item>
 <term>-</term>
 <description>7</description>
 <description><htmltext>&amp;#x05d0;&amp;#x05d3;&amp;#x05e8;&amp;#x0020;&amp;#x05d1;</htmltext> (Adar Beit)</description>
 <description>-</description>
 <description>29</description>
 </item>
 <item>
 <term>7</term>
 <description>8</description>
 <description><htmltext>&amp;#x05e0;&amp;#x05d9;&amp;#x05e1;&amp;#x05df;</htmltext> (Nissan)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>8</term>
 <description>9</description>
 <description><htmltext>&amp;#x05d0;&amp;#x05d9;&amp;#x05d9;&amp;#x05e8;</htmltext> (Iyar)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>9</term>
 <description>10</description>
 <description><htmltext>&amp;#x05e1;&amp;#x05d9;&amp;#x05d5;&amp;#x05df;</htmltext> (Sivan)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>10</term>
 <description>11</description>
 <description><htmltext>&amp;#x05ea;&amp;#x05de;&amp;#x05d5;&amp;#x05d6;</htmltext> (Tamuz)</description>
 <description>29</description>
 <description>29</description>
 </item>
 <item>
 <term>11</term>
 <description>12</description>
 <description><htmltext>&amp;#x05d0;&amp;#x05d1;</htmltext> (Av)</description>
 <description>30</description>
 <description>30</description>
 </item>
 <item>
 <term>12</term>
 <description>13</description>
 <description><htmltext>&amp;#x05d0;&amp;#x05dc;&amp;#x05d5;&amp;#x05dc;</htmltext> (Elul)</description>
 <description>29</description>
 <description>29</description>
 </item>
</list>
            <para>The days in Cheshvan and Kislev vary depending on the placement of Jewish holidays.
 During leap years, Adar is replaced by Adar Alef with 30 days and Adar Beit with 29 days.
 Adar Beit is considered the leap month. The last day of Adar Alef and all the days in Adar Beit are considered leap days.</para>
            <para>The date January 1, 2001 A.D. in the Gregorian calendar is equivalent to
 the sixth day of Tevet in the year 5761 A.M. in the Hebrew calendar.</para>
            <para>Each <see cref="System.Globalization.CultureInfo" /> supports a set of calendars.
 The <see cref="System.Globalization.CultureInfo.Calendar" /> property returns the default calendar for the culture, and
 the <see cref="System.Globalization.CultureInfo.OptionalCalendars" /> property returns an array containing all the calendars supported by the culture.
 To change the calendar used by a <see cref="System.Globalization.CultureInfo" />,
 set the <see cref="System.Globalization.DateTimeFormatInfo.Calendar" /> property of <see cref="System.Globalization.CultureInfo.DateTimeFormat" qualify="true" />
 to a new <see cref="System.Globalization.Calendar" />.</para>
        </remarks>
        <seealso cref="System.Globalization.Calendar" />
        <seealso cref="System.Globalization.CultureInfo.Calendar" />
        <seealso cref="System.Globalization.CultureInfo.OptionalCalendars" />
    </doc><doc for="HebrewCalendar.HebrewEra">
        <summary>
            <para>Represents the current era.  This field is constant.</para>
        </summary>
        <remarks>
            <para>The Hebrew calendar recognizes two eras: B.C.E. (before the common era) and A.M. (Latin "Anno Mundi", which means "the year of the world"). 
   This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes only the current era (A.M.).
   This field always returns 1.</para>
        </remarks>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
    </doc><doc for="HebrewCalendar.HebrewCalendar">
        <summary>
            <para>Initializes a new instance of the <see cref="System.Globalization.HebrewCalendar" /> class.</para>
        </summary>
    </doc><doc for="HebrewCalendar.AddMonths">
        <summary>
            <para>Returns a <see cref="System.DateTime" /> that is the specified number of months away from the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to which to add months.</param>
        <param name="months">The number of months to add.</param>
        <returns>
            <para>The <see cref="System.DateTime" /> that results from adding the specified number of months to the specified <see cref="System.DateTime" />.</para>
        </returns>
        <exception cref="System.ArgumentException">The resulting <see cref="System.DateTime" /> is outside the supported range.</exception>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="months" /> is less than -120000.</para><para>-or-</para>
            <para><paramref name="months" /> is greater than 120000.</para></exception>
<remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>The day part of the resulting <see cref="System.DateTime" /> is affected if the resulting day is not a valid day in the resulting month of the resulting year;
   it is changed to the last valid day in the resulting month of the resulting year.
   The year part of the resulting <see cref="System.DateTime" /> is affected if the resulting month is outside the year of the specified <see cref="System.DateTime" />.
   This implementation only supports the current era; therefore, <see cref="System.ArgumentException" /> is thrown if the resulting year is outside the era of the specified <see cref="System.DateTime" />.
   The time-of-day part of the resulting <see cref="System.DateTime" /> remains the same as the specified <see cref="System.DateTime" />.</para>
            <para>For example, if the specified month is Av, which has 30 days,
 the specified day is the 30th day of that month,
 and the value of the <paramref name="months" /> parameter is 5,
 the resulting year is one more than the specified year,
 the resulting month is Tevet,
 and the resulting day is the 29th day, which is the last day in Tevet.</para>
            <para>If the value of the <paramref name="months" /> parameter is negative, the resulting <see cref="System.DateTime" /> is earlier than the specified <see cref="System.DateTime" />.</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.AddYears" />
        <seealso cref="System.Globalization.Calendar.AddWeeks" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddDays" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddHours" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMinutes" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddSeconds" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMilliseconds" qualify="true" />
    </doc><doc for="HebrewCalendar.AddYears">
        <summary>
            <para>Returns a <see cref="System.DateTime" /> that is the specified number of years away from the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to which to add years.</param>
        <param name="years">The number of years to add.</param>
        <returns>
            <para>The <see cref="System.DateTime" /> that results from adding the specified number of years to the specified <see cref="System.DateTime" />.</para>
        </returns>
        <exception cref="System.ArgumentException">The resulting <see cref="System.DateTime" /> is outside the supported range. </exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>The day part of the resulting <see cref="System.DateTime" /> is affected if the resulting day is not a valid day in the resulting month of the resulting year;
   it is changed to the last valid day in the resulting month of the resulting year.
   For example, Cheshvan can have 29 or 30 days, depending on the placement of Jewish holidays.
   Suppose that Cheshvan has 30 days in the current year and 29 in the following year.
   If the specified date is the 30th day of Cheshvan in the current year and the value of <paramref name="years" /> is 1,
   the resulting date will be the 29th day of Cheshvan in the following year.</para>
            <para>The month part of the resulting <see cref="System.DateTime" /> is affected if the resulting month is not a valid month in the resulting year;
   it is changed to the last valid month in the resulting year.
   For example, if the month in the <paramref name="time" /> parameter is the 13th month of a leap year and the value of <paramref name="years" /> is 1,
   the month in the resulting <see cref="System.DateTime" /> is the 12th month of the following year, which is a non-leap year.
   Note that even when the month part does not change, it might still refer to a different month.
   For example, Adar Beit is the 7th month in leap years, but Nissan is the 7th month in common years.</para>
            <para>This implementation only supports the current era; therefore, <see cref="System.ArgumentException" /> is thrown if the resulting year is outside the era of the specified <see cref="System.DateTime" />.</para>
            <para>The time-of-day part of the resulting <see cref="System.DateTime" /> remains the same as the specified <see cref="System.DateTime" />.</para>
            <para>If <paramref name="years" /> is negative, the resulting <see cref="System.DateTime" /> is earlier than the specified <see cref="System.DateTime" />.</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.AddMonths" />
        <seealso cref="System.Globalization.Calendar.AddWeeks" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddDays" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddHours" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMinutes" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddSeconds" qualify="true" />
        <seealso cref="System.Globalization.Calendar.AddMilliseconds" qualify="true" />
    </doc><doc for="HebrewCalendar.GetDayOfMonth">
        <summary>
            <para>Returns the day of the month in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer from 1 to 30 that represents the day of the month in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.Day" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.GetEra" />
        <seealso cref="System.Globalization.HebrewCalendar.GetYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
    </doc><doc for="HebrewCalendar.GetDayOfWeek">
        <summary>
            <para>Returns the day of the week in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>A <see cref="System.DayOfWeek" /> value that represents the day of the week in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>The <see cref="System.DayOfWeek" /> values are as follows:</para>
<list type="table">
 <listheader>
 <term>DayOfWeek value</term>
 <description>which indicates</description>
 </listheader>
 <item>
 <term>Sunday</term>
 <description><htmltext>&amp;#x05d9;&amp;#x05d5;&amp;#x05dd;&amp;#x0020;&amp;#x05e8;&amp;#x05d0;&amp;#x05e9;&amp;#x05d5;&amp;#x05df;</htmltext> (Yom Rishon)</description>
 </item>
 <item>
 <term>Monday</term>
 <description><htmltext>&amp;#x05d9;&amp;#x05d5;&amp;#x05dd;&amp;#x0020;&amp;#x05e9;&amp;#x05e0;&amp;#x05d9;</htmltext> (Yom Sheni)</description>
 </item>
 <item>
 <term>Tuesday</term>
 <description><htmltext>&amp;#x05d9;&amp;#x05d5;&amp;#x05dd;&amp;#x0020;&amp;#x05e9;&amp;#x05dc;&amp;#x05d9;&amp;#x05e9;&amp;#x05d9;</htmltext> (Yom Shlishi)</description>
 </item>
 <item>
 <term>Wednesday</term>
 <description><htmltext>&amp;#x05d9;&amp;#x05d5;&amp;#x05dd;&amp;#x0020;&amp;#x05e8;&amp;#x05d1;&amp;#x05d9;&amp;#x05e2;&amp;#x05d9;</htmltext> (Yom Reviee)</description>
 </item>
 <item>
 <term>Thursday</term>
 <description><htmltext>&amp;#x05d9;&amp;#x05d5;&amp;#x05dd;&amp;#x0020;&amp;#x05d7;&amp;#x05de;&amp;#x05d9;&amp;#x05e9;&amp;#x05d9;</htmltext> (Yom Chamishi)</description>
 </item>
 <item>
 <term>Friday</term>
 <description><htmltext>&amp;#x05d9;&amp;#x05d5;&amp;#x05dd;&amp;#x0020;&amp;#x05e9;&amp;#x05d9;&amp;#x05e9;&amp;#x05d9;</htmltext> (Yom Shishi)</description>
 </item>
 <item>
 <term>Saturday</term>
 <description><htmltext>&amp;#x05e9;&amp;#x05d1;&amp;#x05ea;</htmltext> (Shabat)</description>
 </item>
</list>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.DayOfWeek" qualify="true" />
        <seealso cref="System.DayOfWeek" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.GetEra" />
        <seealso cref="System.Globalization.HebrewCalendar.GetYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
    </doc><doc for="HebrewCalendar.GetDayOfYear">
        <summary>
            <para>Returns the day of the year in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer from 1 to 385 that represents the day of the year in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>The day of the year is defined as the number of days from the first day of the year.
      For example, <see cref="System.Globalization.HebrewCalendar.GetDayOfYear" /> for the first day of the first month returns 1,
      and <see cref="System.Globalization.HebrewCalendar.GetDayOfYear" /> for the last day of the last month returns the total number of days in that year,
      which is the same value returned by <see cref="System.Globalization.HebrewCalendar.GetDaysInYear" />.</para>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.DayOfYear" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.GetEra" />
        <seealso cref="System.Globalization.HebrewCalendar.GetYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
    </doc><doc for="HebrewCalendar.GetDaysInMonth">
        <overload>
            <para>Returns the number of days in the specified month.</para>
        </overload>
        <summary>
            <para>Returns the number of days in the specified month in the specified year in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 13 that represents the month.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The number of days in the specified month in the specified year in the specified era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>For example, this method returns 29 or 30 for Cheshvan, depending on the placement of Jewish holidays.</para>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <example>
            <para>The following code example calls GetDaysInMonth for the second month in each of five years in each era.</para>
            <codelink SampleID="System.Globalization.HebrewCalendar.GetDaysInMonth" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDaysInYear" />
    </doc><doc for="HebrewCalendar.GetDaysInYear">
        <overload>
            <para>Returns the number of days in the specified year.</para>
        </overload>
        <summary>
            <para>Returns the number of days in the specified year in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The number of days in the specified year in the specified era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>For example, this method returns an integer from 353 to 355 or from 383 to 385,
 depending on the placement of Jewish holidays and depending on whether <paramref name="year" /> is a leap year.</para>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <example>
            <para>The following code example calls GetDaysInYear for five years in each era.</para>
            <codelink SampleID="System.Globalization.HebrewCalendar_GetDaysInYear" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDaysInMonth" />
    </doc><doc for="HebrewCalendar.GetEra">
        <summary>
            <para>Returns the era in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer that represents the era in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>The Hebrew calendar recognizes two eras: B.C.E. (before the common era) and A.M. (Latin "Anno Mundi", which means "the year of the world").
 This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes only the current era (A.M.)
 and only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetHour" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMinute" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetSecond" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMilliseconds" qualify="true" />
    </doc><doc for="HebrewCalendar.Eras">
        <summary>
            <para>Gets the list of eras in the <see cref="System.Globalization.HebrewCalendar" />.</para>
        </summary>
        <value>
            <para>An array of integers that represents the eras in the <see cref="System.Globalization.HebrewCalendar" />.</para>
        </value>
        <remarks>
            <para>The Hebrew calendar recognizes two eras: B.C.E. (before the common era) and A.M. (Latin "Anno Mundi", which means "the year of the world"). 
   This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes only the current era (A.M.).
   This property always returns an array with only one element.</para>
        </remarks>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
    </doc><doc for="HebrewCalendar.GetMonth">
        <summary>
            <para>Returns the month in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer from 1 to 13 that represents the month in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.Month" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.GetEra" />
        <seealso cref="System.Globalization.HebrewCalendar.GetYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetHour" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMinute" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetSecond" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMilliseconds" qualify="true" />
    </doc><doc for="HebrewCalendar.GetMonthsInYear">
        <overload>
            <para>Returns the number of months in the specified year.</para>
        </overload>
        <summary>
            <para>Returns the number of months in the specified year in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The number of months in the specified year in the specified era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>For example, this method returns 12 or 13, depending on whether <paramref name="year" /> is a leap year.</para>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <example>
            <para>The following code example calls GetMonthsInYear for five years in each era.</para>
            <codelink SampleID="System.Globalization.HebrewCalendar.GetMonthsInYear" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDaysInYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDaysInMonth" />
    </doc><doc for="HebrewCalendar.GetYear">
        <summary>
            <para>Returns the year in the specified <see cref="System.DateTime" />.</para>
        </summary>
        <param name="time">The <see cref="System.DateTime" /> to read.</param>
        <returns>
            <para>An integer that represents the year in the specified <see cref="System.DateTime" />.</para>
        </returns>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <example>
            <codelink SampleID="System.Globalization.HebrewCalendar_AddGet" SnippetID="1" />
        </example>
        <seealso cref="System.DateTime.Year" qualify="true" />
        <seealso cref="System.Globalization.HebrewCalendar.GetEra" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDayOfWeek" />
        <seealso cref="System.Globalization.Calendar.GetWeekOfYear" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetHour" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMinute" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetSecond" qualify="true" />
        <seealso cref="System.Globalization.Calendar.GetMilliseconds" qualify="true" />
    </doc><doc for="HebrewCalendar.IsLeapDay">
        <overload>
            <para>Determines whether the specified day is a leap day.</para>
        </overload>
        <summary>
            <para>Determines whether the specified date in the specified era is a leap day.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 13 that represents the month.</param>
        <param name="day">An integer from 1 to 30 that represents the day.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para><see langword="true" /> if the specified day is a leap day; otherwise, <see langword="false" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="day" /> is outside the range supported by the calendar.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>In every 19-year cycle that ends with a year that is evenly divisible by 19, 
 the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.
 A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.
 A leap year can have from 383 to 385 days.</para>
            <para> A leap day is a day that occurs only in a leap year.
 In the Hebrew calendar, the last day of Adar Alef and all the days in Adar Beit are considered leap days.</para>
        </remarks>
        <example>
            <para>The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.</para>
            <codelink SampleID="System.Globalization.HebrewCalendar.IsLeapDay" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDaysInMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.IsLeapYear" />
        <seealso cref="System.Globalization.HebrewCalendar.IsLeapMonth" />
    </doc><doc for="HebrewCalendar.IsLeapMonth">
        <overload>
            <para>Determines whether the specified month is a leap month.</para>
        </overload>
        <summary>
            <para>Determines whether the specified month in the specified year in the specified era is a leap month.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 13 that represents the month.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para><see langword="true" /> if the specified month is a leap month; otherwise, <see langword="false" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>In every 19-year cycle that ends with a year that is evenly divisible by 19, 
 the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.
 A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.
 A leap year can have from 383 to 385 days.</para>
            <para> A leap month is an entire month that occurs only in a leap year.
 In the Hebrew calendar, Adar Beit is the only leap month.</para>
        </remarks>
        <example>
            <para>The following code example calls IsLeapMonth for all the months in five years in the current era.</para>
            <codelink SampleID="System.Globalization.HebrewCalendar.IsLeapMonth" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HebrewCalendar.IsLeapYear" />
        <seealso cref="System.Globalization.HebrewCalendar.IsLeapDay" />
    </doc><doc for="HebrewCalendar.IsLeapYear">
        <overload>
            <para>Determines whether the specified year is a leap year.</para>
        </overload>
        <summary>
            <para>Determines whether the specified year in the specified era is a leap year.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para><see langword="true" /> if the specified year is a leap year; otherwise, <see langword="false" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>In every 19-year cycle that ends with a year that is evenly divisible by 19, 
 the 3rd, 6th, 8th, 11th, 14th, 17th, and 19th years are leap years.
 A common year can have from 353 to 355 days, depending on the placement of Jewish holidays.
 A leap year can have from 383 to 385 days.</para>
        </remarks>
        <example>
            <para>The following code example calls IsLeapYear for five years in each of the eras.</para>
            <codelink SampleID="System.Globalization.HebrewCalendar.IsLeapYear" SnippetID="1" />
        </example>
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.IsLeapMonth" />
        <seealso cref="System.Globalization.HebrewCalendar.IsLeapDay" />
    </doc><doc for="HebrewCalendar.ToDateTime">
        <overload>
            <para>Returns a <see cref="System.DateTime" /> that is set to the specified date.</para>
        </overload>
        <summary>
            <para>Returns a <see cref="System.DateTime" /> that is set to the specified date and time in the specified era.</para>
        </summary>
        <param name="year">An integer that represents the year.</param>
        <param name="month">An integer from 1 to 13 that represents the month.</param>
        <param name="day">An integer from 1 to 30 that represents the day.</param>
        <param name="hour">An integer from 0 to 23 that represents the hour.</param>
        <param name="minute">An integer from 0 to 59 that represents the minute.</param>
        <param name="second">An integer from 0 to 59 that represents the second.</param>
        <param name="millisecond">An integer from 0 to 999 that represents the millisecond.</param>
        <param name="era">An integer that represents the era.</param>
        <returns>
            <para>The <see cref="System.DateTime" /> that is set to the specified date and time in the current era.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException">
            <para><paramref name="year" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="month" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="day" /> is outside the range supported by the calendar.</para><para>-or-</para>
            <para><paramref name="hour" /> is less than zero or greater than 23.</para><para>-or-</para>
            <para><paramref name="minute" /> is less than zero or greater than 59.</para><para>-or-</para>
            <para><paramref name="second" /> is less than zero or greater than 59.</para><para>-or-</para>
            <para><paramref name="millisecond" /> is less than zero or greater than 999.</para></exception>
        <exception cref="System.ArgumentException"><paramref name="era" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
        </remarks>
        <seealso cref="System.DateTime" qualify="true" />
        <seealso cref="System.Globalization.Calendar.CurrentEra" />
        <seealso cref="System.Globalization.HebrewCalendar.HebrewEra" />
        <seealso cref="System.Globalization.HebrewCalendar.Eras" />
        <seealso cref="System.Globalization.HebrewCalendar.GetMonthsInYear" />
        <seealso cref="System.Globalization.HebrewCalendar.GetDaysInMonth" />
    </doc><doc for="HebrewCalendar.TwoDigitYearMax">
        <summary>
            <para>Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.</para>
        </summary>
        <value>
            <para>The last year of a 100-year range that can be represented by a 2-digit year.</para>
        </value>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para>This property allows a 2-digit year to be properly translated to a 4-digit year.
 For example, if this property is set to 5729, the 100-year range is from 5630 to 5729;
 therefore, a 2-digit value of 30 is interpreted as 5630, while a 2-digit value of 29 is interpreted as 5729.</para>
            <para>The initial value of this property is derived from the settings in Regional and Language Options (or Regional Options or Regional Settings) in Control Panel in Windows.
 However, that information can change during the life of the <see cref="System.AppDomain" />.
 The <see cref="System.Globalization.HebrewCalendar" /> class does not detect changes in the system settings automatically.</para>
        </remarks>
        <seealso cref="System.Globalization.HebrewCalendar.ToFourDigitYear" />
    </doc><doc for="HebrewCalendar.ToFourDigitYear">
        <summary>
            <para>Converts the specified two-digit year to a four-digit year
 by using the <see cref="System.Globalization.HebrewCalendar.TwoDigitYearMax" /> property to determine the appropriate century.</para>
        </summary>
        <param name="year">A two-digit integer that represents the year to convert.</param>
        <returns>
            <para>An integer that contains the four-digit representation of <paramref name="year" />.</para>
        </returns>
        <exception cref="System.ArgumentOutOfRangeException"><paramref name="year" /> is outside the range supported by the calendar.</exception>
        <remarks>
            <para>This implementation of the <see cref="System.Globalization.HebrewCalendar" /> class recognizes
 only the Hebrew years 5343 to 6000 (1582 to 2240 in the Gregorian calendar).</para>
            <para><see cref="System.Globalization.HebrewCalendar.TwoDigitYearMax" /> is the last year in the 100-year range that can be represented by a two-digit year.
 The century is determined by finding the sole occurrence of the two-digit <paramref name="year" /> within that 100-year range.
 For example, if <see cref="System.Globalization.HebrewCalendar.TwoDigitYearMax" /> is set to 5729, the 100-year range is from 5630 to 5729;
 therefore, a 2-digit value of 30 is interpreted as 5630, while a 2-digit value of 29 is interpreted as 5729.</para>
        </remarks>
        <seealso cref="System.Globalization.HebrewCalendar.TwoDigitYearMax" />
    </doc>
</docs>
