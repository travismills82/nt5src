<docs>
	<doc for="BinaryWriter.Dispose">
		<summary>
			<para>Releases the unmanaged resources used by the <see cref="System.IO.BinaryWriter"/> and optionally
   releases the managed resources.</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.IDisposable.Dispose">
		<internalonly/>
		<summary>
			<para>Releases all resources used by the <see cref="System.IO.BinaryWriter"/> .</para>
		</summary>
		<remarks>
			<para>Calling <see cref="System.IO.BinaryWriter.Dispose"/> allows the resources used by the <see cref="System.IO.BinaryWriter"/> to be
   reallocated for other purposes. For more information about <see cref="System.IO.BinaryWriter.Dispose"/>,
   see <see topic="cpconCleaningUpUnmanagedResources"/>.</para>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Close">
		<summary>
			<para>Closes the current <see cref="System.IO.BinaryWriter"/> and the
   underlying stream.</para>
		</summary>
		<remarks>
			<para>This implementation of <see langword="Close"/> calls the <see cref="System.IO.BinaryWriter.Dispose"/> method passing a <see langword="true"/> value.</para>
			<para>Flushing the stream will not flush its underlying encoder unless you
   explicitly call <see cref="System.IO.BinaryWriter.Flush"/> or <see langword="Close"/>. Setting <see cref="System.IO.StreamWriter.AutoFlush"/> to <see langword="true"/> means that data
   will be flushed from the buffer to the stream, but the encoder state will not be
   flushed. This allows the encoder to keep its state (partial characters) so that
   it can encode the next block of characters correctly. This scenario affects UTF8
   and UTF7 where certain characters can only be encoded after the encoder receives
   the adjacent character or characters.</para>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter">
		<summary>
			<para>Writes primitive types in binary to a stream and supports
      writing strings in a specific encoding.</para>
		</summary>
		<remarks>
			<para>A derived class can override the methods of this class 
      to give unique character encodings.</para>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
		<seealso topic="cpconbasicfileio"/>
		<seealso topic="cpconReadingWritingToNewlyCreatedDataFile"/>
	</doc>
	<doc for="BinaryWriter.Null">
		<summary>
			<para> Specifies a <see cref="System.IO.BinaryWriter"/> with no backing
   store.</para>
		</summary>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.OutStream">
		<summary>
			<para> Holds the underlying stream.
      </para>
		</summary>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.BinaryWriter">
		<overload>
			<para>Initializes a new instance of the <see cref="System.IO.BinaryWriter"/> class that writes to a stream.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.BinaryWriter"/> class that writes to a stream.</para>
		</summary>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.BinaryWriter1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.BinaryWriter"/> class based on the supplied stream and using UTF-8
   as the encoding for strings.</para>
		</summary>
		<param name="output">The output stream.</param>
		<exception cref="System.ArgumentException">The stream does not support writing, or the stream is already closed.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="output "/>is <see langword="null"/> .</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding.UTF8"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.BinaryWriter2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.BinaryWriter"/> class based on the supplied stream
   and a specific character encoding.</para>
		</summary>
		<param name="output">The supplied stream.</param>
		<param name=" encoding">The character encoding.</param>
		<exception cref="System.ArgumentException">The stream does not support writing, or the stream is already closed.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="output "/>or <paramref name="encoding "/>is <see langword="null"/>.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.BaseStream">
		<summary>
			<para> Gets the underlying stream of the <see cref="System.IO.BinaryWriter"/>
.</para>
		</summary>
		<value>
			<para>The underlying stream associated with the
   <see langword="BinaryWriter"/>.</para>
		</value>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Flush">
		<summary>
			<para>Clears all buffers for the current writer and causes any buffered data to be
      written to the underlying device.</para>
		</summary>
		<remarks>
			<para>All derived classes should override <see langword="Flush"/> to ensure that all buffered data is sent to 
   the stream.</para>
			<para>Flushing the stream will not flush its underlying encoder unless you
   explicitly call <see langword="Flush"/> or <see cref="System.IO.BinaryWriter.Close"/>.
   Setting <see cref="System.IO.StreamWriter.AutoFlush"/> to <see langword="true"/> means that data
   will be flushed from the buffer to the stream, but the encoder state will not be
   flushed. This allows the encoder to keep its state (partial characters) so that
   it can encode the next block of characters correctly. This scenario affects UTF8
   and UTF7 where certain characters can only be encoded after the encoder receives
   the adjacent character or characters.</para>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Seek">
		<summary>
			<para> Sets the position within the current stream.
      </para>
		</summary>
		<param name="offset">A byte offset relative to <paramref name="origin"/>. </param>
		<param name=" origin">A field of <see cref="System.IO.SeekOrigin"/> indicating the reference point from which the new position is to be obtained. </param>
		<returns>
			<para> The position with the current stream.
      </para>
		</returns>
		<exception cref="System.IO.IOException">The file pointer was moved to an invalid location.</exception>
		<exception cref="System.ArgumentException">The <see cref="System.IO.SeekOrigin"/> value is invalid.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write">
		<overload>
			<para>Writes a value to the current stream.</para>
		</overload>
		<summary>
			<para>Writes a one-byte <see langword="Boolean"/> value to the current stream, with 0 representing
<see langword="false "/>and 1 representing <see langword="true"/>.</para>
		</summary>
		<param name="value">The <see langword="Boolean"/> value to write (0 or 1).</param>
		<exception cref="System.IO.IOException"> An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write1">
		<summary>
			<para>Writes an unsigned byte to the current stream and advances the stream position by one
      byte.</para>
		</summary>
		<param name="value">The unsigned byte to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write2">
		<summary>
			<para>Writes a signed byte to the current stream and advances the stream position
      by one byte.</para>
		</summary>
		<param name="value">The signed byte to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write3">
		<summary>
			<para>Writes a byte array to the underlying stream.</para>
		</summary>
		<param name="buffer">A byte array containing the data to write.</param>
		<exception cref="System.IO.IOException"> An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null"/>. </exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write4">
		<summary>
			<para>Writes a region of a byte array to the current stream.</para>
		</summary>
		<param name="buffer">A byte array containing the data to write.</param>
		<param name=" index">The starting point in <paramref name="buffer "/>at which to begin writing. </param>
		<param name=" count">The number of bytes to write.</param>
		<exception cref="System.ArgumentException">The buffer length minus <paramref name="index"/> is less than <paramref name="count"/>.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="buffer"/> is <see langword="null"/>. </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="count"/> is negative. </exception>
		<exception cref="System.IO.IOException"> An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write5">
		<summary>
			<para> Writes a Unicode character to the current stream and
      advances the current position of the stream in accordance with the
   <see langword="Encoding"/>
   used and the specific characters being
   written to the stream.</para>
		</summary>
		<param name="ch">The character to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write6">
		<summary>
			<para> Writes a character array to the current stream and
      advances the current position of the stream in accordance with the
   <see langword="Encoding"/>
   used and
   the specific characters being written to the stream.</para>
		</summary>
		<param name="chars">A character array containing the data to write.</param>
		<exception cref="System.ArgumentNullException"><paramref name="chars"/> is <see langword="null"/>. </exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<exception cref="System.IO.IOException"> An I/O error occurs.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write7">
		<summary>
			<para>Writes a section of a character array to the current
      stream, and advances the current position of the stream in accordance with the
   <see langword="Encoding"/>
   used and perhaps the specific characters being written to the stream.</para>
		</summary>
		<param name="chars">A character array containing the data to write.</param>
		<param name="index">The starting point in <paramref name="buffer "/>from which to begin writing.</param>
		<param name="count">The number of characters to write.</param>
		<exception cref="System.ArgumentException">The buffer length minus <paramref name="index"/> is less than <paramref name="count"/>.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="chars"/> is <see langword="null"/>. </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="count"/> is negative. </exception>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write8">
		<summary>
			<para>Writes an eight-byte floating-point value to the current stream and advances
      the stream position by eight bytes.</para>
		</summary>
		<param name="value">The eight-byte floating-point value to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write9">
		<summary>
			<para>Writes a decimal value to the current stream and advances
      the stream position by eight bytes.</para>
		</summary>
		<param name="value">The decimal value to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write10">
		<summary>
			<para>Writes a two-byte signed integer to the current stream and advances the
      stream position by two bytes.</para>
		</summary>
		<param name="value">The two-byte signed integer to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write11">
		<summary>
			<para>Writes a two-byte unsigned integer to the current stream and advances the
      stream position by two bytes.</para>
		</summary>
		<param name="value">The two-byte unsigned integer to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write12">
		<summary>
			<para>Writes a four-byte signed integer to the current stream and advances the
      stream position by four bytes.</para>
		</summary>
		<param name="value">The four-byte signed integer to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write13">
		<summary>
			<para>Writes a four-byte unsigned integer to the current stream and advances the
      stream position by four bytes.</para>
		</summary>
		<param name="value">The four-byte unsigned integer to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write14">
		<summary>
			<para>Writes an eight-byte signed integer to the current stream and advances the
      stream position by eight bytes.</para>
		</summary>
		<param name="value">The eight-byte signed integer to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write15">
		<summary>
			<para>Writes an eight-byte unsigned integer to the current stream and advances the
      stream position by eight bytes.</para>
		</summary>
		<param name="value">The eight-byte unsigned integer to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write16">
		<summary>
			<para>Writes a four-byte floating-point value to the current stream and advances
      the stream position by four bytes.</para>
		</summary>
		<param name="value">The four-byte floating-point value to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para><see langword="BinaryWriter"/> stores this data type in little endian
   format.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write17">
		<summary>
			<para> Writes a length-prefixed string to this stream in the
      current encoding of the <see cref="System.IO.BinaryWriter"/>, and advances the current position of the stream in
      accordance with the encoding
      used and the specific characters being written to the
      stream.</para>
		</summary>
		<param name="value">The value to write.</param>
		<exception cref="System.IO.IOException">An I/O error occurs.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>. </exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<remarks>
			<para>A length-prefixed string represents the string length by prefixing to the
      string a single byte or word that contains the length of that string. </para>
			<para>The following table lists examples of other typical or
      related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Text.Encoding"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="BinaryWriter.Write7BitEncodedInt">
		<summary>
			<para>Writes a 32-bit integer in a compressed format.</para>
		</summary>
		<param name="value">The 32-bit integer to be written.</param>
		<exception cref="System.IO.EndOfStreamException">The end of the stream is reached.</exception>
		<exception cref="System.ObjectDisposedException">The stream is closed.</exception>
		<exception cref="System.IO.IOException">The stream is closed.</exception>
		<remarks>
			<para>The integer of the <paramref name="value"/>
parameter is written out seven bits at a
time, starting with the seven least-significant bits. The high bit of a byte indicates
whether there are more bytes to be written after this one.</para>
			<para>If <paramref name="value"/> will fit in seven bits, it takes only one byte of space.
If <paramref name="value"/> will not fit in seven bits, the high bit is set on the first byte
and written out. <paramref name="value"/> is then shifted by seven bits and the next byte
is written. This process is repeated until the entire integer has been
written.</para>
			<para>The following table lists examples of other typical or
   related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
</docs>
