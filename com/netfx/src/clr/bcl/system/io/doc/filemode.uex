<docs>
	<doc for="FileMode.OpenOrCreate">
		<summary>
			<para>Specifies that the operating system should open a file
      if it exists; otherwise, a new file should be created. If the file is opened
      with <see langword="FileAccess.Read"/>, <see cref="System.Security.Permissions.FileIOPermissionAccess.Read" qualify="true"/> is required. If file access is
   <see langword="FileAccess.ReadWrite"/> and the file exists, <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/><see langword=" "/>is required. If file access is
   <see langword="FileAccess.ReadWrite"/> and the file does not exist,
   <see cref="System.Security.Permissions.FileIOPermissionAccess.Append" qualify="true"/><see langword=" "/>is required in addition to <see langword="Read"/> and
   <see langword="Write"/>
   .</para>
		</summary>
	</doc><doc for="FileMode.Create">
		<summary>
			<para>Specifies that the operating system should create a new
      file. If the file already exists, it will be overwritten. This requires
   <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/> and
   <see cref="System.Security.Permissions.FileIOPermissionAccess.Append" qualify="true"/>. <see langword="System.IO.FileMode.Create"/> 
   is equivalent to requesting that if the file does not exist, use
<see cref="System.IO.FileMode.CreateNew"/>; otherwise, use 
<see cref="System.IO.FileMode.Truncate"/>.</para>
		</summary>
	</doc>
	<doc for="FileMode.Truncate">
		<summary>
			<para>Specifies that the operating system should open an
      existing file. Once opened, the file should be truncated so that its size is
      zero bytes. This requires <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/>. Attempts
      to read from a file opened with <see langword="Truncate"/> cause an exception.
   </para>
		</summary>
	</doc>
	<doc for="FileMode">
		<summary>
			<para>Specifies how the operating system should open a file.</para>
		</summary>
		<remarks>
			<para>For an example of creating a file and writing text to a
      file, see <see topic="cpconwritingtexttofile"/>.
      For an example of reading text from a file, see
   <see topic="cpconreadingtextfromfile"/>. For an
      example of reading from and writing to a binary file, see
   <see topic="cpconReadingWritingToNewlyCreatedDataFile"/>.</para>
			<para>A <see langword="FileMode"/>
parameter is specified in many of the constructors for <see cref="System.IO.FileStream"/>, <see cref="System.IO.IsolatedStorage.IsolatedStorageFileStream"/>, and in the <see langword="Open"/>
methods of <see cref="System.IO.File"/> and <see cref="System.IO.FileInfo"/> to control how a file is opened.</para>
			<para><see langword="FileMode"/>
parameters control whether a file is overwritten, created, or opened, or
some combination thereof. Use <see langword="Open"/> to open an existing file. To
append to a file, use <see langword="Append"/>. To truncate a file or to create it
if it does not exist, use <see langword="Create"/> .</para>
		</remarks>
		<example>
			<para>The following <see langword="FileStream"/> constructor
   opens an existing file (<see langword="FileMode.Open"/>).</para>
			<codelink SampleID="Classic FileAccess Example" SnippetID="1"/>
		</example>
		<seealso cref="System.IO.File.Open" qualify="true"/>
		<seealso cref="System.IO.FileInfo.Open" qualify="true"/>
		<seealso cref="System.IO.FileStream"/>
		<seealso cref="System.IO.IsolatedStorage.IsolatedStorageFileStream"/>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
		<seealso topic="cpconbasicfileio"/>
		<seealso topic="cpconReadingWritingToNewlyCreatedDataFile"/>
	</doc>
	<doc for="FileMode.CreateNew">
		<summary>
			<para>Specifies that the operating system should create a new
      file. This requires <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/>. If
      the file already exists, an <see cref="System.IO.IOException"/> is thrown.</para>
		</summary>
	</doc>
	<doc for="FileMode.Open">
		<summary>
			<para>Specifies that the operating system should open an 
      existing file. The ability to open the file is dependent on the the value
      specified by <see cref="System.IO.FileAccess"/>
      .
      A <see cref="System.IO.FileNotFoundException" qualify="true"/>
      is thrown if the file does not exist.
      </para>
		</summary>
	</doc>
	<doc for="FileMode.Append">
		<summary>
			<para> Opens the file if it exists and seeks to the end of the
      file, or creates a new file. <see langword="FileMode.Append"/> can only be used
      in conjunction with <see langword="FileAccess.Write"/>. Any attempt to read
      fails and throws an <see cref="System.ArgumentException"/>.</para>
		</summary>
	</doc>
</docs>
