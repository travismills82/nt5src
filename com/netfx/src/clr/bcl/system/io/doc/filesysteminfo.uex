<docs>
	<doc for="FileSystemInfo.Refresh">
		<summary>
			<para> Refreshes the state of the object.</para>
		</summary>
		<exception cref="System.ArgumentException">The file is not found.</exception>
		<exception cref="System.IO.IOException">A device such as a disk drive is not ready.</exception>
		<remarks>
			<para><see langword="FileSystemInfo.Refresh"/> takes a snapshot
   of the file from the current file system. <see langword="Refresh"/>
   cannot correct
   the underlying file system even if the file system returns incorrect or
   outdated information. This can happen on platforms such as Windows
   98.</para>
			<para>Calls must be made to <see langword="Refresh "/>before
attempting to get the attribute information, or the information will be
outdated.</para>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.FullPath">
		<summary>
			<para>Represents the fully qualified path of the directory or file.</para>
		</summary>
		<remarks>
			<note type="inheritinfo">
      Classes derived
      from <see cref="System.IO.FileSystemInfo"/> can use the <see langword="FullPath"/> field to
      determine the full path of the object being manipulated.
      
   </note>
			<para>The
      following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Sort files in a directory by size.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> See the subdirectories of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.GetDirectories"/></para>
						<para><see cref="System.IO.DirectoryInfo.GetDirectories"/></para></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term>Determine if a directory exists.</term>
					<description>
						<para><see cref="System.IO.Directory.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Retrieve only the directory name from a path.</term>
					<description><see cref="System.IO.Path.GetDirectoryName"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.FullName">
		<summary>
			<para>Gets the full path of the directory or file.</para>
		</summary>
		<value>
			<para>A string containing the full path.</para>
		</value>
		<exception cref="System.Security.SecurityException">The caller does not have the required permission.</exception>
		<remarks>
			<para>For example, for a file c:\NewFile.txt, this property returns
      "c:\NewFile.txt".</para>
			<para>The
      following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Sort files in a directory by size.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> See the subdirectories of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.GetDirectories"/></para>
						<para><see cref="System.IO.DirectoryInfo.GetDirectories"/></para></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term>Determine if a directory exists.</term>
					<description>
						<para><see cref="System.IO.Directory.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Retrieve only the directory name from a path.</term>
					<description><see cref="System.IO.Path.GetDirectoryName"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension"/></description>
				</item>
			</list>
		</remarks>
		<permission cref="System.Security.Permissions.FileIOPermission">for access to the path. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.Extension">
		<summary>
			<para>Gets the string representing the extension part of
      the file.</para>
		</summary>
		<value>
			<para>A string containing
      the <see cref="System.IO.FileSystemInfo"/> extension.</para>
		</value>
		<remarks>
			<para>The <see langword="Extension"/>
property returns the <see cref="System.IO.FileSystemInfo"/> extension, including the
period (.). For example, for a file c:\NewFile.txt, this property returns
".txt".</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Retrieve the fully qualified path of a file.</term>
					<description><see cref="System.IO.Path.GetFullPath"/></description>
				</item>
				<item>
					<term> Retrieve only the file name a path.</term>
					<description><see cref="System.IO.Path.GetFileNameWithoutExtension"/></description>
				</item>
				<item>
					<term>Retrieve only the directory name from a path.</term>
					<description><see cref="System.IO.Path.GetDirectoryName"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.Name">
		<summary>
			<para>For files, gets the name of the file. For directories, gets
      the name of the last directory in the hierarchy if a hierarchy exists. Otherwise, the
   <see langword="Name "/>property
      gets
      the name of the directory.</para>
		</summary>
		<value>
			<para>A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of
      a file, including the file name extension.</para>
		</value>
		<remarks>
			<para>For a directory, <see langword="Name"/> returns only the name of the parent
   directory, such as Dir, not c:\Dir. For a subdirectory, <see langword="Name"/>
   returns only the name of the subdirectory, such as Sub1, not c:\Dir\Sub1.</para>
			<para>For a file, <see langword="Name"/>
returns only the file name and file name
extension, such as MyFile.txt, not c:\Dir\Myfile.txt.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Retrieve only the directory name from a path.</term>
					<description><see cref="System.IO.Path.GetDirectoryName"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension"/></description>
				</item>
			</list>
			<item>
				<term> Get the attributes of a file.</term>
				<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
			</item>
			<item>
				<term> Set the attributes of a file.</term>
				<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
			</item>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.Attributes">
		<summary>
			<para>Gets or sets the <see cref="System.IO.FileAttributes"/> of the current <see cref="System.IO.FileSystemInfo"/> .</para>
		</summary>
		<value>
			<para><see cref="System.IO.FileAttributes"/> of the current <see cref="System.IO.FileSystemInfo"/> .</para>
		</value>
		<exception cref="System.IO.FileNotFoundException">The specified file does not exist.</exception>
		<exception cref="System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
		<exception cref="System.Security.SecurityException">The caller does not have the required permission.</exception>
		<exception cref="System.ArgumentException">The caller attempts to set an invalid file attribute.</exception>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data.</exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls
<see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on 
   APIs to get attributes and so on. On subsequent calls, you must call
<see langword="Refresh"/> to get the latest 
   copy of the information.</para>
			<para>The value of this property is a combination of the archive, compressed,
   directory, hidden, offline, read-only, system, and temporary file attribute
   flags.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<permission cref="System.Security.Permissions.FileIOPermissionAccess">Write permission required to set the attributes for the specified file.</permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.GetObjectData">
		<summary>
			<para>Sets the <see cref="System.Runtime.Serialization.SerializationInfo"/> object with the
   file name and additional exception information.</para>
		</summary>
		<param name="info">The <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
		<param name=" context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
		<remarks>
			<para>The
      following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.OriginalPath">
		<summary>
			<para>The path originally specified by the user, whether relative or absolute.</para>
		</summary>
		<remarks>
			<para> The
      following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Retrieve a file extension.</term>
					<description><see cref="System.IO.Path.GetExtension"/></description>
				</item>
				<item>
					<term> Retrieve the fully qualified path of a file.</term>
					<description><see cref="System.IO.Path.GetFullPath"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName"/></description>
				</item>
				<item>
					<term> Retrieve only the file name from a path.</term>
					<description><see cref="System.IO.Path.GetFileNameWithoutExtension"/></description>
				</item>
				<item>
					<term> Retrieve only the directory name from a path.</term>
					<description><see cref="System.IO.Path.GetDirectoryName"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description><see cref="System.IO.File.Exists"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.CreationTime">
		<summary>
			<para>Gets or sets the creation time of the current
   <see cref="System.IO.FileSystemInfo"/> object.</para>
		</summary>
		<value>
			<para>The creation date and time of the current
   <see cref="System.IO.FileSystemInfo"/> object.</para>
		</value>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data. </exception>
		<exception cref="System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
		<exception cref="System.IO.FileNotFoundException">The specified file does not exist.</exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls
<see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on 
   APIs to get attributes and so on. On subsequent calls, you must call
<see langword="Refresh"/> to get the latest 
   copy of the information.</para>
			<para>This property value is <see langword="null "/>if the file system containing the <see cref="System.IO.FileSystemInfo"/> object does not
support this information.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
			</list>
		</remarks>
		<platnote platform="Win95, Win98, Win98SE"> These operating systems do not support this property, and <see cref="System.IO.DirectoryInfo"/> implementations of this property are not supported.
</platnote>
		<permission cref="System.Security.Permissions.FileIOPermission">for setting the creation time. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.CreationTimeUtc">
		<summary>
			<para>Gets or sets the creation time, in coordinated universal time (UTC), of the current <see cref="System.IO.FileSystemInfo"/> object.</para>
		</summary>
		<value>
			<para>The creation date and time in UTC format of the current <see cref="System.IO.FileSystemInfo"/> object.</para>
		</value>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data. </exception>
		<exception cref="System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
		<exception cref="System.IO.FileNotFoundException">The specified file does not exist.</exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls <see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on APIs to get attributes and so on. On subsequent calls, you must call <see langword="Refresh"/> to get the latest copy of the information.</para>
			<para>This property value is <see langword="null "/>if the file system containing the <see cref="System.IO.FileSystemInfo"/> object does not support this information.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
			</list>
		</remarks>
		<platnote platform="Win95, Win98, Win98SE">These operating systems do not support this property, and <see cref="System.IO.DirectoryInfo"/> implementations of this property are not supported. 
</platnote>
		<permission cref="System.Security.Permissions.FileIOPermission">for setting the creation time. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.LastAccessTime">
		<summary>
			<para>Gets or sets the time the current file or directory was last
      accessed.</para>
		</summary>
		<value>
			<para> The time that the current file or directory was last
      accessed.</para>
		</value>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data. </exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls
<see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on 
   APIs to get attributes and so on. On subsequent calls, you must call
<see langword="Refresh"/>
to get
the latest copy of the information.</para>
			<para>This property value is <see langword="null "/>if the file
system containing the file does not support this information.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
			</list>
		</remarks>
		<platnote platform="Win95, Win98, Win98SE">These operating systems do not support this property, and <see cref="System.IO.DirectoryInfo"/> implementations of this property are not supported. 
</platnote>
		<permission cref="System.Security.Permissions.FileIOPermission">for setting the last access time. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.LastAccessTimeUtc">
		<summary>
			<para>Gets or sets the time, in coordinated universal time (UTC), that the current file or directory was last accessed.</para>
		</summary>
		<value>
			<para>The UTC time that the current file or directory was last accessed.</para>
		</value>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data. </exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls <see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on APIs to get attributes and so on. On subsequent calls, you must call <see langword="Refresh"/> to get the latest copy of the information.</para>
			<para>This property value is <see langword="null "/>if the file system containing the file does not support this information.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
			</list>
		</remarks>
		<platnote platform="Win95, Win98, Win98SE">These operating systems do not support this property, and <see cref="System.IO.DirectoryInfo"/> implementations of this property are not supported. 
</platnote>
		<permission cref="System.Security.Permissions.FileIOPermission">for setting the last access time. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.LastWriteTime">
		<summary>
			<para>Gets or sets the time when the current file or directory was last
      written to.</para>
		</summary>
		<value>
			<para> The time the current file was last written.</para>
		</value>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data. </exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls
<see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on 
   APIs to get attributes and so on. On subsequent calls, you must call
<see langword="Refresh"/>
to get
the latest copy of the information.</para>
			<para>This property value is <see langword="null "/>if the file
system containing the file does not support this information.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
			</list>
		</remarks>
		<platnote platform="Win95, Win98, Win98SE">These operating systems do not support this property, and <see cref="System.IO.DirectoryInfo"/> implementations of this property are not supported. 
</platnote>
		<permission cref="System.Security.Permissions.FileIOPermission">for setting the last write time. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.LastWriteTimeUtc">
		<summary>
			<para>Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.</para>
		</summary>
		<value>
			<para>The UTC time when the current file was last written to.</para>
		</value>
		<exception cref="System.IO.IOException"><see cref="System.IO.FileSystemInfo.Refresh"/> cannot initialize the data. </exception>
		<remarks>
			<para>When first called, <see langword="FileSystemInfo"/> calls <see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on APIs to get attributes and so on. On subsequent calls, you must call <see langword="Refresh"/> to get the latest copy of the information.</para>
			<para>This property value is <see langword="null "/>if the file system containing the file does not support this information.</para>
			<para>The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
			</list>
		</remarks>
		<platnote platform="Win95, Win98, Win98SE">These operating systems do not support this property, and <see cref="System.IO.DirectoryInfo"/> implementations of this property are not supported. 
</platnote>
		<permission cref="System.Security.Permissions.FileIOPermission">for setting the last write time. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Write" qualify="true"/></permission>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo">
		<summary>
			<para>Provides the base class for both <see cref="System.IO.FileInfo"/> and <see cref="System.IO.DirectoryInfo"/>
objects.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.IO.FileSystemInfo"/> class contains methods that are
   common to file and directory manipulation. A <see cref="System.IO.FileSystemInfo"/> object can represent either a file or a
   directory, thus serving as the basis for <see cref="System.IO.FileInfo"/> or <see cref="System.IO.DirectoryInfo"/> objects. Use this base class when parsing a lot of
   files and directories.</para>
			<para> When first called, <see cref="System.IO.FileSystemInfo"/>
calls <see cref="System.IO.FileSystemInfo.Refresh"/> and returns the cached information on
APIs to get attributes and so on. On subsequent calls, you must call <see cref="System.IO.FileSystemInfo.Refresh"/>
to get the latest copy of the information.</para>
			<para>A derived class can inherit from <see cref="System.IO.FileSystemInfo"/> only if the derived class has the AllAccess
permission from the <see cref="System.Security.Permissions.FileIOPermissionAccess"/> enumeration. </para>
			<para> In members that accept a path, the path can refer to a file or
   just a directory. The specified path can also refer to a relative path or
   a Universal Naming Convention (UNC) path for a server and share name. For example,
   all the following are acceptable paths:</para>
			<list type="bullet"><item>
					<term>
      
      "c:\\MyDir\\MyFile.txt" in C#, or
      "c:\MyDir\MyFile.txt" in Visual Basic.</term>
				</item>
				<item>
					<term>
      
      "c:\\MyDir" in C#, or "c:\MyDir" in Visual Basic.</term>
				</item>
				<item>
					<term>
      
      "MyDir\\MySubdir" in C#, or "MyDir\MySubDir" in
      Visual Basic.</term>
				</item>
				<item>
					<term>
      
      "\\\\MyServer\\MyShare"
      in C#, or "\\MyServer\MyShare" in Visual Basic.</term>
				</item>
			</list>
			<para> The
   following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
         topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a file.</term>
					<description>
						<para><see cref="System.IO.File.Delete" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a file.</term>
					<description>
						<para><see cref="System.IO.File.Copy" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.CopyTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.CreateDirectory" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a subdirectory.</term>
					<description>
						<para><see cref="System.IO.DirectoryInfo.CreateSubdirectory"/></para></description>
				</item>
				<item>
					<term> Rename or move a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Move" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Delete" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a directory.</term>
					<description><see cref="System.IO.Directory"/></description>
				</item>
				<item>
					<term> Sort files in a directory by size.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> See the subdirectories of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.GetDirectories"/></para>
						<para><see cref="System.IO.DirectoryInfo.GetDirectories"/></para></description>
				</item>
				<item>
					<term> See all the files in all subdirectories
      of a directory.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> Find the size of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Retrieve a file extension.</term>
					<description><see cref="System.IO.Path.GetExtension" qualify="true"/></description>
				</item>
				<item>
					<term> Retrieve the fully qualified path of a file.</term>
					<description><see cref="System.IO.Path.GetFullPath" qualify="true"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName" qualify="true"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension" qualify="true"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
		<seealso topic="cpconbasicfileio"/>
		<seealso topic="cpconReadingWritingToNewlyCreatedDataFile"/>
	</doc>
	<doc for="FileSystemInfo.FileSystemInfo">
		<overload>
			<para>Initializes a new instance of the <see cref="System.IO.FileSystemInfo"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.FileSystemInfo"/> class.</para>
		</summary>
		<remarks>
			<para>The
      following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a file.</term>
					<description>
						<para><see cref="System.IO.File.Delete" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a file.</term>
					<description>
						<para><see cref="System.IO.File.Copy" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.CopyTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.CreateDirectory" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a subdirectory.</term>
					<description>
						<para><see cref="System.IO.DirectoryInfo.CreateSubdirectory"/></para></description>
				</item>
				<item>
					<term> Rename or move a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Move" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Delete" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a directory.</term>
					<description><see cref="System.IO.Directory"/></description>
				</item>
				<item>
					<term> Sort files in a directory by size.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> See the subdirectories of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.GetDirectories"/></para>
						<para><see cref="System.IO.DirectoryInfo.GetDirectories"/></para></description>
				</item>
				<item>
					<term> See all the files in all subdirectories
      of a directory.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> Find the size of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Retrieve a file extension.</term>
					<description><see cref="System.IO.Path.GetExtension" qualify="true"/></description>
				</item>
				<item>
					<term> Retrieve the fully qualified path of a file.</term>
					<description><see cref="System.IO.Path.GetFullPath" qualify="true"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName" qualify="true"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension" qualify="true"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.FileSystemInfo1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IO.FileSystemInfo"/> class
   with serialized data.</para>
		</summary>
		<param name="info">The <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
		<param name=" context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
		<remarks>
			<para>The following table lists examples of other typical or related I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a file.</term>
					<description>
						<para><see cref="System.IO.File.Delete" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a file.</term>
					<description>
						<para><see cref="System.IO.File.Copy" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.CopyTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.CreateDirectory" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a subdirectory.</term>
					<description>
						<para><see cref="System.IO.DirectoryInfo.CreateSubdirectory"/></para></description>
				</item>
				<item>
					<term> Rename or move a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Move" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Delete" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a directory.</term>
					<description><see cref="System.IO.Directory"/></description>
				</item>
				<item>
					<term> Sort files in a directory by size.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> See the subdirectories of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.GetDirectories"/></para>
						<para><see cref="System.IO.DirectoryInfo.GetDirectories"/></para></description>
				</item>
				<item>
					<term> See all the files in all subdirectories
      of a directory.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> Find the size of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory"/></para></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Get the attributes of a file.</term>
					<description><see cref="System.IO.File.GetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Retrieve a file extension.</term>
					<description><see cref="System.IO.Path.GetExtension" qualify="true"/></description>
				</item>
				<item>
					<term> Retrieve the fully qualified path of a file.</term>
					<description><see cref="System.IO.Path.GetFullPath" qualify="true"/></description>
				</item>
				<item>
					<term> Retrieve the file name and extension from a path.</term>
					<description><see cref="System.IO.Path.GetFileName" qualify="true"/></description>
				</item>
				<item>
					<term> Change the extension of a file.</term>
					<description><see cref="System.IO.Path.ChangeExtension" qualify="true"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.Exists">
		<summary>
			<para>Gets a value indicating whether the file or directory exists.</para>
		</summary>
		<value>
			<para><see langword="true "/>if the file or directory exists;
   otherwise, <see langword="false"/> .</para>
		</value>
		<remarks>
			<para>For an example of using this method, see the Example
      section below. The following table lists examples of other typical or related
      I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a file.</term>
					<description>
						<para><see cref="System.IO.File.Delete" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a file.</term>
					<description>
						<para><see cref="System.IO.File.Copy" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.CopyTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.CreateDirectory" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a subdirectory.</term>
					<description>
						<para><see cref="System.IO.DirectoryInfo.CreateSubdirectory"/></para></description>
				</item>
				<item>
					<term> Rename or move a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Move" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Delete" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a directory.</term>
					<description><see cref="System.IO.Directory"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> Find the size of a directory.</term>
					<description>
						<para><see cref="System.IO.Directory"/></para></description>
				</item>
				<item>
					<term> Sort files in a directory by size.</term>
					<description><see cref="System.IO.DirectoryInfo.GetFileSystemInfos"/></description>
				</item>
				<item>
					<term> Get the size of a file.</term>
					<description>
						<para><see cref="System.IO.FileInfo.Length" qualify="true"/></para></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
	<doc for="FileSystemInfo.Delete">
		<summary>
			<para> Deletes a file or directory.
      </para>
		</summary>
		<exception cref="System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive.</exception>
		<exception cref="System.IO.FileNotFoundException">The specified file does not exist.</exception>
		<remarks>
			<para>For an example of using this method, see the Example
      section below. The following table lists examples of other typical or related
      I/O tasks.</para>
			<list type="table">
				<listheader>
					<term>To do this...</term>
					<description>See the example in this
            topic...</description>
				</listheader>
				<item>
					<term> Create a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Write to a text file.</term>
					<description><see topic="cpconwritingtexttofile"/></description>
				</item>
				<item>
					<term> Read from a text file.</term>
					<description><see topic="cpconreadingtextfromfile"/></description>
				</item>
				<item>
					<term> Append text to a file.</term>
					<description>
						<para><see topic="cpconopeningappendingtologfile"/></para>
						<para><see cref="System.IO.File.AppendText" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.AppendText" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a file.</term>
					<description>
						<para><see cref="System.IO.File.Delete" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a file.</term>
					<description>
						<para><see cref="System.IO.File.Move" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a file.</term>
					<description>
						<para><see cref="System.IO.File.Copy" qualify="true"/></para>
						<para><see cref="System.IO.FileInfo.CopyTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Create a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.CreateDirectory" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Rename or move a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Move" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.MoveTo" qualify="true"/></para></description>
				</item>
				<item>
					<term> Delete a directory.</term>
					<description>
						<para><see cref="System.IO.Directory.Delete" qualify="true"/></para>
						<para><see cref="System.IO.DirectoryInfo.Delete" qualify="true"/></para></description>
				</item>
				<item>
					<term> Copy a directory.</term>
					<description><see cref="System.IO.Directory"/></description>
				</item>
				<item>
					<term> See the files in a directory.</term>
					<description><see cref="System.IO.FileInfo.Name"/></description>
				</item>
				<item>
					<term> Set the attributes of a file.</term>
					<description><see cref="System.IO.File.SetAttributes" qualify="true"/></description>
				</item>
				<item>
					<term> Determine if a file exists.</term>
					<description>
						<para><see cref="System.IO.File.Exists" qualify="true"/></para></description>
				</item>
				<item>
					<term> Read from a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
				<item>
					<term> Write to a binary file.</term>
					<description><see topic="cpconReadingWritingToNewlyCreatedDataFile"/></description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconworkingwithio"/>
		<seealso topic="cpconreadingtextfromfile"/>
		<seealso topic="cpconwritingtexttofile"/>
	</doc>
</docs>
