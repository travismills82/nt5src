<docs>
	<doc for="StringBuilder.ToString">
		<overload>
			<para> Converts a <see cref="System.Text.StringBuilder"/> to a <see cref="System.String"/>
.</para>
		</overload>
		<summary>
			<para> Converts this instance to a <see cref="System.String"/>.
   </para>
		</summary>
		<returns>
			<para> A string whose value
      is the same as this instance.
      </para>
		</returns>
	</doc><doc for="StringBuilder.StringBuilder1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Text.StringBuilder"/>
class using the specified capacity.</para>
		</summary>
		<param name="capacity">The suggested starting size of this instance. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
		<remarks>
			<para>The string value of this instance is set to <see cref="System.String.Empty" qualify="true"/>. If <paramref name="capacity"/> is zero, 
   the implementation-specific default capacity is used.</para>
		</remarks>
	</doc><doc for="StringBuilder.MaxCapacity">
		<summary>
			<para> Gets the maximum capacity of this instance.
      </para>
		</summary>
		<value>
			<para>The maximum number of characters this instance can
      hold.</para>
		</value>
		<remarks>
			<note type="inotes">
      The maximum capacity
      for this implementation is <see cref="System.Int32.MaxValue" qualify="true"/>. However, this
      value is implementation-specific and might be different in other or
      later implementations.
   </note>
		</remarks>
	</doc><doc for="StringBuilder.StringBuilder">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Text.StringBuilder"/>
class.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of the <see cref="System.Text.StringBuilder"/>
class.</para>
		</summary>
		<remarks>
			<para> The string value of this instance is set to <see cref="System.String.Empty" qualify="true"/>, and
   the capacity is set to the implementation-specific default capacity.</para>
		</remarks>
	</doc><doc for="StringBuilder.ToString1">
		<summary>
			<para> Converts a substring of the current
   <see cref="System.Text.StringBuilder"/> to a
   <see cref="System.String"/>.
      </para>
		</summary>
		<param name="startIndex">The starting position of the substring. </param>
		<param name="length">The length of the substring. </param>
		<returns>
			<para> A string whose value is the same as the specified 
      substring of the value of this instance.
      </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="startIndex"/> or <paramref name="length"/> is less than zero. </para>
			<para> -or- </para>
			<para>The sum of <paramref name="startIndex"/> and <paramref name="length"/> is greater than the length of the current instance. </para></exception>
	</doc><doc for="StringBuilder.StringBuilder2">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Text.StringBuilder"/>
class using the specified string.</para>
		</summary>
		<param name="value">The string used to initialize the value of the instance. If <paramref name="value "/>is <see langword="null"/>, the new <see cref="System.Text.StringBuilder"/> will contain the empty string (that is, it contains <see cref="System.String.Empty"/> ). </param>
		<remarks>
			<para> If
   <paramref name="value"/> is
   <see langword="null"/>, the new StringBuilder will contain the empty string (that
      is, it contains <see cref="System.String.Empty"/>
      ).
      </para>
		</remarks>
	</doc><doc for="StringBuilder.Remove">
		<summary>
			<para> Removes the specified range of characters from this
      instance.
      </para>
		</summary>
		<param name="startIndex">The position where removal begins. </param>
		<param name="length">The number of characters to remove. </param>
		<returns>
			<para> A reference to this instance after the excise operation
      has occurred.
      </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>If <paramref name="startIndex "/>or <paramref name="length "/>is less than zero, or <paramref name="startIndex "/>+ <paramref name="length "/> is greater than the length of this instance. </para></exception>
		<remarks>
			<para> The current method removes the specified range of
      characters from the current instance. The characters at (<paramref name="startIndex"/> +
   <paramref name="length"/>) are moved to <paramref name="startIndex"/>, and the string value of the
      current instance is shortened by <paramref name="length"/>. The
      capacity is unaffected.
      </para>
		</remarks>
		<seealso cref="System.Text.StringBuilder.Replace"/>
	</doc>
	<doc for="StringBuilder.Capacity">
		<summary>
			<para> Gets or sets the maximum number of characters that can be
      contained in the memory allocated by the current instance.
      </para>
		</summary>
		<value>
			<para> The maximum number of characters that can be contained in the memory allocated by the
      current instance.</para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><para>The value specified for a set operation is less than the current length of this instance. </para>
			<para>-or-</para>
			<para>The value specified for a set operation is greater than the maximum capacity.</para></exception>
		<remarks>
			<para><see cref="System.Text.StringBuilder.Capacity"/>
does
not affect the string value of the current instance. <see cref="System.Text.StringBuilder.Capacity"/>
can be decreased as
long as it is not less than <see cref="System.Text.StringBuilder.Length"/>.</para>
			<para> The <see cref="System.Text.StringBuilder"/> dynamically allocates more space
when required and increases <see cref="System.Text.StringBuilder.Capacity"/>
accordingly. For performance reasons, a <see cref="System.Text.StringBuilder"/> might allocate more
memory than
needed.
The amount of memory allocated is
implementation-specific.</para>
		</remarks>
	</doc>
	<doc for="StringBuilder.this">
		<summary>
			<para> Gets or sets the character at the specified character position in this instance.
      </para>
		</summary>
		<param name="index">The position of the character. </param>
		<value>
			<para> The Unicode character at position <paramref name="index"/>.
   </para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> is outside the bounds of this instance while setting a character. </exception>
		<exception cref="System.IndexOutOfRangeException"><paramref name="index"/> is outside the bounds of this instance while getting a character.</exception>
		<remarks>
			<para>The <paramref name="index"/> parameter is the position of a character within the
<see cref="System.Text.StringBuilder"/>. The first character in the string is at index 0. 
   The length of a string is the number of characters it contains. The last
   accessible character of a <see cref="System.Text.StringBuilder"/> instance is at index <see cref="System.Text.StringBuilder.Length"/> - 1.</para>
		</remarks>
		<seealso cref="System.String"/>
	</doc>
	<doc for="StringBuilder.Replace3">
		<summary>
			<para>Replaces all occurrences of a specified character in a
      substring of this instance with another specified character. </para>
		</summary>
		<param name="oldChar">The character to replace. </param>
		<param name="newChar">The character that replaces <paramref name="oldChar"/>. </param>
		<param name="startIndex">The position where the substring begins. </param>
		<param name="count">The length of the substring. </param>
		<returns>
			<para> A reference to this instance with <paramref name="oldChar"/> replaced by <paramref name="newChar"/> 
in the range from <paramref name="startIndex"/>
to <paramref name="startIndex"/> + <paramref name="count"/> -1.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="startIndex"/> + <paramref name="count"/> is greater than the length of the value of this instance. </para>
			<para>-or-</para>
			<para><paramref name="startIndex"/> or <paramref name="count"/> is less than zero.</para></exception>
		<remarks>
			<para> The size of the <see cref="System.Text.StringBuilder"/> is unchanged because characters are only replaced. This method is case-sensitive.</para>
		</remarks>
	</doc>
	<doc for="StringBuilder.StringBuilder4">
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.Text.StringBuilder"/>
   class from the specified substring and capacity.
   </para>
		</summary>
		<param name="value">The string that contains the substring used to initialize the value of the instance. If value is <see langword="null"/>, the new StringBuilder will contain the empty string (that is, it contains <see cref="System.String.Empty"/> ). </param>
		<param name="startIndex">The position where the substring begins. </param>
		<param name="length">The number of characters in the substring. </param>
		<param name="capacity">The suggested starting size of the <see cref="System.Text.StringBuilder"/>. </param>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="capacity"/> is less than zero.</para>
			<para>-or-</para>
			<para><paramref name="startIndex"/> plus <paramref name="length"/> is not a position within <paramref name="value"/>.</para></exception>
		<remarks>
			<para>If <paramref name="capacity"/> is zero, the implementation-specific default capacity is used.</para>
		</remarks>
	</doc>
	<doc for="StringBuilder.Length">
		<summary>
			<para> Gets or sets the length of this instance.
      </para>
		</summary>
		<value>
			<para> The length of this instance.
      </para>
		</value>
		<exception cref="System.ArgumentOutOfRangeException">The value specified for a set operation is less than zero or greater than <see cref="System.Text.StringBuilder.MaxCapacity"/>. </exception>
		<remarks>
			<para> If the specified length is less than the current length,
      this instance is truncated to the specified length. If the specified length is
      greater than the current length, the end of the string value of this instance is
      padded with spaces. If the specified length is greater than the current
      capacity, <see cref="System.Text.StringBuilder.Capacity"/> is set to the specified length.
      </para>
		</remarks>
	</doc>
	<doc for="StringBuilder.Equals">
		<overload>
			<para>Returns a value indicating whether this instance is equal to a specified
      object.</para>
		</overload>
		<summary>
			<para>Returns a value indicating whether this instance is equal to a specified
      object.</para>
		</summary>
		<param name=" sb">An object to compare with this instance or <see langword="null"/>.</param>
		<returns>
			<para><see langword="true"/> if this instance and <paramref name="sb"/> have equal string, <see cref="System.Text.StringBuilder.Capacity"/>, and <see cref="System.Text.StringBuilder.MaxCapacity"/> values; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc>
	<doc for="StringBuilder.StringBuilder3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Text.StringBuilder"/>
class using the specified string and capacity.</para>
		</summary>
		<param name="value">The string used to initialize the value of the instance. If <paramref name="value "/>is <see langword="null"/>, the new <see cref="System.Text.StringBuilder"/> will contain the empty string (that is, it contains <see cref="System.String.Empty"/> ). </param>
		<param name="capacity">The suggested starting size of the <see cref="System.Text.StringBuilder"/>. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="capacity"/> is less than zero.</exception>
		<remarks>
			<para>If <paramref name="capacity"/> is zero, the implementation-specific default capacity is used.</para>
		</remarks>
	</doc>
	<doc for="StringBuilder.StringBuilder5">
		<summary>
			<para> Initializes a new instance of the
      <see cref="System.Text.StringBuilder"/>
   class that starts with a specified capacity and can grow to a specified
   maximum.
   </para>
		</summary>
		<param name="capacity">The suggested starting size of the <see cref="System.Text.StringBuilder"/>. </param>
		<param name="maxCapacity">The maximum number of characters the current string can contain. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="maxCapacity"/> is less than one, <paramref name="capacity "/>is less than zero, or <paramref name="capacity "/>is greater than <paramref name="maxCapacity"/>. </exception>
		<remarks>
			<para>If <paramref name="capacity"/> is zero, the implementation-specific default capacity is
   used.</para>
		</remarks>
	</doc>
	<doc for="StringBuilder">
		<summary>
			<para> Represents a mutable
      string
      of characters. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> This class represents a string-like object whose value
      is a mutable sequence of characters. The value is said to be mutable because it
      can be modified once it has been created by appending, removing, replacing, or
      inserting characters. For comparison, see the <see cref="System.String"/> class.
      </para>
			<para>Most of the methods that modify an instance of this class
      return a reference to that same instance. Since a reference to the instance is returned, you can call a method or
      property on the reference. This can be convenient if you want to write a single
      statement that chains successive operations one after another.</para>
			<para> The capacity of a <see cref="System.Text.StringBuilder"/> is the maximum number of characters the
   instance can store at any given time, and is greater than or equal to the length
   of the string representation of the value of the instance. The capacity can be
   increased or decreased with the <see cref="System.Text.StringBuilder.Capacity"/> property or <see cref="System.Text.StringBuilder.EnsureCapacity"/> method, but it cannot be less than the value of the
<see cref="System.Text.StringBuilder.Length"/> property.
   </para>
			<para>Implementation-specific default values are used if no 
   capacity or maximum capacity is specified when an instance of <see cref="System.Text.StringBuilder"/> is initialized.</para>
			<note type="inotes">
   The default capacity
   for this implementation is 16, and the default maximum capacity is <see cref="System.Int32.MaxValue" qualify="true"/>.
</note>
			<para>A <see cref="System.Text.StringBuilder"/> can allocate more memory as needed to store 
characters when the value of an instance is enlarged, and the capacity is
adjusted accordingly. The amount of memory allocated is implementation-specific,
and <see cref="System.ArgumentOutOfRangeException"/> is thrown if the
amount of memory required is greater than the maximum capacity.</para>
			<para> 
   For example, the <see cref="System.Text.StringBuilder.Append"/>, <see cref="System.Text.StringBuilder.AppendFormat"/>, <see cref="System.Text.StringBuilder.EnsureCapacity"/>, <see cref="System.Text.StringBuilder.Insert"/>, and <see cref="System.Text.StringBuilder.Replace"/> methods can enlarge the value of an
   instance.</para>
			<para>The individual characters in the value of a <see cref="System.Text.StringBuilder"/> can be
accessed with the <see cref="System.Text.StringBuilder.this"/> property. Index positions start from
zero.</para>
		</remarks>
		<seealso cref="System.String"/>
	</doc>
	<doc for="StringBuilder.Append">
		<overload>
			<para> Appends the string representation of a specified object to the end of this instance.
      </para>
		</overload>
		<summary>
			<para> Appends a specified number of copies
      of the string representation of a Unicode character to the
      end of this instance.
      </para>
		</summary>
		<param name="value">The character to append. </param>
		<param name="repeatCount">The number of times to append <paramref name="value"/>.</param>
		<returns>
			<para> A reference to this instance after the append operation has
      occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="repeatCount"/> is less than zero.</para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>The capacity is adjusted as needed. </para>
		</remarks>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="StringBuilder.Append1">
		<summary>
			<para> Appends the string representation of a specified subarray of Unicode characters to the end of
      this instance.
      </para>
		</summary>
		<param name="value">A character array. </param>
		<param name="startIndex">The starting position in <paramref name="value"/>. </param>
		<param name="charCount">The number of characters append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>, and <paramref name="startIndex"/> and <paramref name="charCount"/> are not zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="charCount"/> is less than zero.</para>
			<para>-or-</para>
			<para><paramref name="startIndex "/>is less than zero.</para>
			<para>-or-</para>
			<para>
				<paramref name="startIndex "/>+ <paramref name="charCount "/>is less than the length of <paramref name="value"/>.</para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> This method appends the specified range of characters in
   <paramref name="value"/> to the current instance. If <paramref name="value"/> is <see langword="null"/>
   and <paramref name="startIndex"/> and <paramref name="count"/> are both zero, no changes are made.
   </para>
			<para>The capacity is adjusted as needed. </para>
		</remarks>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="StringBuilder.Append2">
		<summary>
			<para>Appends a copy of the specified string to the end of this instance.</para>
		</summary>
		<param name="value">The <see cref="System.String"/> to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> If <paramref name="value"/> is <see langword="null"/> , no changes are made.
   </para>
			<para>The capacity is adjusted as needed. </para>
		</remarks>
		<seealso cref="System.String"/>
	</doc>
	<doc for="StringBuilder.Append3">
		<summary>
			<para> Appends a copy of a specified substring
      to the end of this instance.
      </para>
		</summary>
		<param name="value">The <see cref="System.String"/> to append. </param>
		<param name="startIndex">The starting position in <paramref name="value"/>. </param>
		<param name="count">The number of characters to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>, and <paramref name="startIndex"/> and <paramref name="count"/> are not zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="count"/> less than zero. </para>
			<para>-or-</para>
			<para><paramref name="startIndex"/> less than zero.</para>
			<para>-or-</para>
			<para><paramref name="startIndex"/> + <paramref name="count"/> is less than the length of <paramref name="value"/>. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>This method appends the specified range of characters in
   <paramref name="value"/> to the current instance. If <paramref name="value"/> is
   <see langword="null"/> and <paramref name="startIndex"/> and <paramref name="count"/> are both zero, no changes are made. </para>
			<para>The capacity is adjusted as needed. </para>
		</remarks>
		<seealso cref="System.String"/>
	</doc>
	<doc for="StringBuilder.Append4">
		<summary>
			<para> Appends the string representation of a specified Boolean value to the end of
      this instance.
      </para>
		</summary>
		<param name="value">The Boolean value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Boolean.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>.
   The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Boolean"/>
	</doc>
	<doc for="StringBuilder.Append5">
		<summary>
			<para> Appends the string representation of a specified 8-bit signed integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.SByte.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.SByte"/>
	</doc>
	<doc for="StringBuilder.Append6">
		<summary>
			<para> Appends the string representation of a specified 8-bit unsigned integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Byte.ToString" qualify="true"/> is used to get a string representation of
<paramref name="value"/> 
. The capacity is adjusted as needed.</para>
		</remarks>
		<seealso cref="System.Byte"/>
	</doc>
	<doc for="StringBuilder.Append7">
		<summary>
			<para> Appends the string representation of a specified Unicode character to the end of this instance.
      </para>
		</summary>
		<param name="value">The Unicode character to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> The capacity is adjusted as needed.
      </para>
		</remarks>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="StringBuilder.Append8">
		<summary>
			<para> Appends the string representation of a specified 16-bit signed integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Int16.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="StringBuilder.Append9">
		<summary>
			<para> Appends the string representation of a specified 32-bit signed integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Int32.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="StringBuilder.Append10">
		<summary>
			<para> Appends the string representation of a specified 64-bit signed integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Int64.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>.
   The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="StringBuilder.Append11">
		<summary>
			<para> Appends the string representation of a specified single-precision floating-point number to the
      end of this instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Single.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Single"/>
	</doc>
	<doc for="StringBuilder.Append12">
		<summary>
			<para> Appends the string representation of a specified double-precision floating-point number to the
      end of this instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Double.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc>
	<doc for="StringBuilder.Append13">
		<summary>
			<para> Appends the string representation of a specified decimal number to the end of this instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Decimal.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Decimal"/>
	</doc>
	<doc for="StringBuilder.Append14">
		<summary>
			<para> Appends the string representation of a specified 16-bit unsigned integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.UInt16.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="StringBuilder.Append15">
		<summary>
			<para> Appends the string representation of a specified 32-bit unsigned integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.UInt32.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.UInt32"/>
	</doc>
	<doc for="StringBuilder.Append16">
		<summary>
			<para> Appends the string representation of a specified 64-bit unsigned integer to the end of this
      instance.
      </para>
		</summary>
		<param name="value">The value to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.UInt64.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.UInt64"/>
	</doc>
	<doc for="StringBuilder.Append17">
		<summary>
			<para> Appends the string representation of a specified object to the end of this instance.
      </para>
		</summary>
		<param name="value">The object to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Object.ToString" qualify="true"/> is used to get a string representation
   of <paramref name="value"/>. If <paramref name="value"/> is
<see langword="null"/>, no changes are made.</para>
			<para>The capacity is adjusted as needed. </para>
		</remarks>
		<seealso cref="System.Object"/>
	</doc>
	<doc for="StringBuilder.Append18">
		<summary>
			<para> Appends the string representation of the Unicode characters in a specified array to the end of
      this instance.
      </para>
		</summary>
		<param name="value">The array of characters to append. </param>
		<returns>
			<para>A reference to this instance after the append operation has occurred.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> This method appends all the characters in the
      specified array to the current instance in the same order as they appear in
   <paramref name="value"/>. If <paramref name="value"/> is <see langword="null"/>, no changes are made.
      </para>
			<para>The capacity is adjusted as needed. </para>
		</remarks>
	</doc>
	<doc for="StringBuilder.EnsureCapacity">
		<summary>
			<para> Ensures that the capacity of this instance of <see cref="System.Text.StringBuilder"/>
is at least the specified value.</para>
		</summary>
		<param name="capacity">The minimum capacity to ensure. </param>
		<returns>
			<para> The new capacity of this instance.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="capacity"/> is less than zero. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>. </para></exception>
		<remarks>
			<para>If the current capacity is less than the
   <paramref name="capacity"/> parameter, memory for this instance is reallocated to hold at
      least <paramref name="capacity"/> number of characters; otherwise, no
      memory is changed.</para>
		</remarks>
	</doc>
	<doc for="StringBuilder.Insert">
		<overload>
			<para> Inserts the string representation of a specified object into this instance at
      a specified character position.
      </para>
		</overload>
		<summary>
			<para> Inserts one or more copies of a specified string into this instance
      at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The string to insert. </param>
		<param name="count">The number of times to insert <paramref name="value"/>. </param>
		<returns>
			<para> A reference to this instance after insertion has
      occurred.
      </para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> and <paramref name="index"/> and <paramref name="count"/> are not zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para><para> -or- </para><para><paramref name="count"/> is less than one. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> Existing characters are shifted to make room for the new
      text. The capacity is adjusted as needed.
      </para>
		</remarks>
		<seealso cref="System.String"/>
	</doc>
	<doc for="StringBuilder.Insert1">
		<summary>
			<para> Inserts a string into this instance at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The string to insert. </param>
		<returns>
			<para> A reference to this instance after the insert operation has occurred.
      </para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> and <paramref name="index"/> is not zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> Existing characters are shifted to make room for the new text. The
      capacity is adjusted as needed.
      </para>
   If <paramref name="value"/> equals
<see cref="System.String.Empty"/>, the <see cref="System.Text.StringBuilder"/> is not changed.
</remarks>
		<seealso cref="System.String"/>
	</doc>
	<doc for="StringBuilder.Insert2">
		<summary>
			<para> Inserts the string representation of a Boolean value into
      this instance at the specified character
      position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Boolean.ToString" qualify="true"/> is used to
   get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The
   capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Boolean"/>
	</doc>
	<doc for="StringBuilder.Insert3">
		<summary>
			<para> Inserts the string representation of a specified 8-bit
      signed integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.SByte.ToString" qualify="true"/> is used to
   get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The
   capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.SByte"/>
	</doc>
	<doc for="StringBuilder.Insert4">
		<summary>
			<para> Inserts the string representation of a specified 8-bit
      unsigned integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Byte.ToString" qualify="true"/> is used to
   get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Byte"/>
	</doc>
	<doc for="StringBuilder.Insert5">
		<summary>
			<para> Inserts the string representation of a specified 16-bit
      signed integer into this instance at
      the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Int16.ToString" qualify="true"/> is used to
   get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="StringBuilder.Insert6">
		<summary>
			<para> Inserts the string representation of a specified Unicode
      character into this instance at the specified character
      position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Char.ToString" qualify="true"/> is used to
   get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="StringBuilder.Insert7">
		<summary>
			<para> Inserts the string representation of a specified array of
      Unicode characters into this instance at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The character array to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
      </para>
			<para> If <paramref name="value"/> is <see langword="null"/>, the <see cref="System.Text.StringBuilder"/> is not changed.
   </para>
		</remarks>
	</doc>
	<doc for="StringBuilder.Insert8">
		<summary>
			<para> Inserts the string representation of a specified subarray
      of Unicode characters into this instance
      at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">A character array. </param>
		<param name="startIndex">The starting index within <paramref name="value"/>. </param>
		<param name="charCount">The number of characters to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>, and <paramref name="startIndex"/> and <paramref name="charCount"/> are not zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/>, <paramref name="startIndex"/>, or <paramref name="charCount"/> is less than zero. </para>
			<para>-or-</para>
			<para><paramref name="index"/> is greater than the length of this instance. </para>
			<para>-or-</para>
			<para><paramref name="startIndex"/> plus <paramref name="charCount"/> is not a position within <paramref name="value"/>. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
      </para>
		</remarks>
	</doc>
	<doc for="StringBuilder.Insert9">
		<summary>
			<para> Inserts the string representation of a specified 32-bit
      signed integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Int32.ToString" qualify="true"/> is used to
   get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="StringBuilder.Insert10">
		<summary>
			<para> Inserts the string representation of a 64-bit signed
      integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para> A reference to this instance after the insert operation has occurred.
      </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Int64.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="StringBuilder.Insert11">
		<summary>
			<para> Inserts the string representation of a single-precision floating point number into
      this instance
      at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Single.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Single"/>
	</doc>
	<doc for="StringBuilder.Insert12">
		<summary>
			<para> Inserts the string representation of a double-precision floating-point number into
      this instance
      at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Double.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc>
	<doc for="StringBuilder.Insert13">
		<summary>
			<para> Inserts the string representation of a decimal number
      into this instance
      at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Decimal.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.Decimal"/>
	</doc>
	<doc for="StringBuilder.Insert14">
		<summary>
			<para> Inserts the string representation of a 16-bit unsigned
      integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.UInt16.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="StringBuilder.Insert15">
		<summary>
			<para> Inserts the string representation of a 32-bit unsigned
      integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.UInt32.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.UInt32"/>
	</doc>
	<doc for="StringBuilder.Insert16">
		<summary>
			<para> Inserts the string representation of a 64-bit unsigned
      integer into this instance at the
      specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The value to insert. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.UInt64.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
		</remarks>
		<seealso cref="System.UInt64"/>
	</doc>
	<doc for="StringBuilder.Insert17">
		<summary>
			<para> Inserts the string representation of an object into this
      instance at the specified character position.
      </para>
		</summary>
		<param name="index">The position at which to insert. </param>
		<param name="value">The object to insert or <see langword="null"/>. </param>
		<returns>
			<para>A reference to this instance after the insert operation has occurred. </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="index"/> is less than zero or greater than the length of this instance. </para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para><see cref="System.Object.ToString" qualify="true"/> is used to get a string representation of <paramref name="value"/>. Existing characters are shifted to make room for the new text. The capacity is adjusted as needed.
   </para>
			<para> If <paramref name="value"/> is <see langword="null"/>, the value of this instance is unchanged.</para>
		</remarks>
		<seealso cref="System.Object"/>
	</doc>
	<doc for="StringBuilder.Replace1">
		<summary>
			<para> Replaces all occurrences of a specified string in a
      substring of this instance with another specified string. </para>
		</summary>
		<param name="oldValue">The string to replace. </param>
		<param name="newValue">The string that replaces <paramref name="oldValue"/> or <see langword="null"/>. </param>
		<param name="startIndex">The position where the substring begins. </param>
		<param name="count">The length of the substring. </param>
		<returns>
			<para> A
      reference to this instance with all
      instances of <paramref name="oldValue"/> replaced by <paramref name="newValue"/> in the range from <paramref name="startIndex"/> to <paramref name="startIndex"/> +
   <paramref name="count"/> - 1.
      </para>
		</returns>
		<exception cref="System.ArgumentNullException"><para>
				<paramref name="oldValue"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The length of <paramref name="oldvalue"/> is zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="startIndex"/> or <paramref name="count"/> is less than zero.</para>
			<para>-or-</para>
			<para><paramref name="startIndex"/> plus <paramref name="count"/> indicates a character position not within <paramref name="oldValue"/>.</para>
			<para>-or-</para>
			<para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>The strings to replace are checked on an ordinal basis; that is, the replacement is not culture-aware. If <paramref name="newValue"/> is <see langword="null"/>, all occurrences of <paramref name="oldValue"/> are removed. This method is case-sensitive. </para>
		</remarks>
		<seealso cref="System.Text.StringBuilder.Remove"/>
	</doc>
	<doc for="StringBuilder.Replace">
		<overload>
			<para> Replaces all occurrences of a specified character or
      string in this instance with another specified character
      or string.
      </para>
		</overload>
		<summary>
			<para>Replaces all occurrences of a specified substring in this instance with
      another specified string. </para>
		</summary>
		<param name="oldValue">The string to replace. </param>
		<param name="newValue">The string that replaces <paramref name="oldValue"/>. </param>
		<returns>
			<para> A
      reference to this instance with all
      instances of <paramref name="oldValue"/> replaced by <paramref name="newValue"/>.
      </para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="oldValue"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The length of <paramref name="oldvalue"/> is zero.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para> The strings to replace are checked on an ordinal basis; that is, the replacement is not culture-aware.
      If <paramref name="newValue"/> is <see langword="null"/>, all occurrences of <paramref name="oldValue"/> are
      removed. This method is case-sensitive.
      </para>
		</remarks>
		<seealso cref="System.Text.StringBuilder.Remove"/>
	</doc>
	<doc for="StringBuilder.AppendFormat">
		<overload>
			<para>Appends a formatted string, which contains zero or more format specifications,
      to this instance. Each format specification is replaced by
      the string representation of a corresponding object argument.</para>
		</overload>
		<summary>
			<para>Appends a formatted string, which contains zero or more format
      specifications, to this instance. Each format specification is replaced by the
      string representation of a corresponding object argument.</para>
		</summary>
		<param name="format">A string containing zero or more format specifications.</param>
		<param name="arg0">An object to format.</param>
		<returns>
			<para>A reference to this instance with <paramref name="format"/> appended. Any format specification in
<paramref name="format"/> is
   replaced by the string representation of the
   corresponding object argument.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="format "/> is <see langword="null"/>.</para></exception>
		<exception cref="System.FormatException"><paramref name="format"/> is invalid.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>This method replaces zero or more format specifications
      with the appropriately formatted value of an object. The format specifications
      are embedded within a string and are of the form {N:FormatString}, where N is a
      zero-based number indicating the argument to format and
      FormatString is a format string. If arg0 implements <see cref="System.IFormattable"/> then
      arg0.Format (format, null) provides the formatting; otherwise <see cref="System.Object.ToString"/>
      provides the formatting. If <paramref name="arg0 "/>is <see langword="null "/>
      then an empty string is used in its place.</para>
			<para>To Pad With Spaces: You can define a region
      within the string argument in which the formatted value can be left or right
      justified. The format specification has an optional integer field: {N[,M]:FormatString}. The magnitude of M
      indicates the minimum number of spaces for the region and the sign of M indicates whether the value should be left (negative
      values) or right (positive values) justified within the region.</para>
			<para><see cref="System.Object.ToString"/> is Used if the Format String is Omitted: The format
   string within a format specification is optional: {N[,M][:FormatString]}. When
   FormatString is omitted, the <see cref="System.Object.ToString"/> method of the argument specified by N is used to replace
   the format specification. If M is given, then the result of
<see cref="System.Object.ToString"/>
is padded with spaces as described above.</para>
			<para> If the string assigned to <paramref name="format"/> is "Thank you for 
your purchase of {0:####} copies of Microsoft® .NET (Core Reference)." and
<paramref name="arg0"/> 
is an <see cref="System.Int16"/> with the value
123, then the return value will be "Thank you for your purchase of 123 copies of
Microsoft® .NET (Core Reference)."</para>
			<para> If the string assigned to <paramref name="format"/> is "Brad's dog has {0,-8:G} fleas." and 
<paramref name="arg0"/> is an <see cref="System.Int16"/> with the value 42, then the 
return value (where underscores represent padding spaces) will be "Brad's
dog has 42______ fleas."</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
	</doc>
	<doc for="StringBuilder.AppendFormat1">
		<summary>
			<para>Appends a formatted string, which contains zero or more format specifications, to this instance. Each format specification is replaced by the string representation of a corresponding object argument.</para>
		</summary>
		<param name="format">A string containing zero or more format specifications.</param>
		<param name="arg0">The first object to format.</param>
		<param name="arg1">The second object to format.</param>
		<returns>
			<para>A reference to this instance with <paramref name="format "/>appended. Any format specification in <paramref name="format"/> is replaced by the string representation of the corresponding object argument.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="format"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.FormatException"><paramref name="format"/> is invalid.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>The format specifications are embedded within a string
      and are of the form {N:FormatString}, where N is a zero-based number indicating
      the argument to format and FormatString is a format string. If
      argN implements <see cref="System.IFormattable"/> then argN.Format (format, null) provides the formatting;
      otherwise <see cref="System.Object.ToString"/> provides the formatting. If arg0 or arg1 is <see langword="null "/>
      then an empty string is used in its place.</para>
			<para>To Pad With Spaces: You can define a region
      within the string argument in which the formatted value can be left or right
      justified. The format specification has an optional integer field: {N[,M]:FormatString}. The magnitude of M
      indicates the minimum number of spaces for the region and the sign of M indicates whether the value should be left (negative
      values) or right (positive values) justified within the region.</para>
			<para><see cref="System.Object.ToString"/> is Used if the Format String is Omitted: The format
   string within a format specification is optional: {N[,M][:FormatString]}. When
   FormatString is omitted, the <see cref="System.Object.ToString"/> method of the argument specified by N is used to replace
   the format specification. If M is given, then the result of
<see cref="System.Object.ToString"/>
is padded with spaces as described above.</para>
			<para>If the string assigned to <paramref name="format"/> is "Thank you for your purchase of {0:####} 
copies of Microsoft® .NET (Core Reference)." and <paramref name="arg0"/>
is an <see cref="System.Int16"/> with the value
123, then the return value will be "Thank you for your purchase of 123 copies of
Microsoft® .NET (Core Reference)."</para>
			<para>If the string assigned to <paramref name="format"/> is "Brad's dog has {0,-8:G} fleas." and 
<paramref name="arg0"/> is an <see cref="System.Int16"/> with the value 42, then the 
return value (where underscores represent padding spaces) will be "Brad's
dog has 42______ fleas."</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
	</doc>
	<doc for="StringBuilder.AppendFormat2">
		<summary>
			<para>Appends a formatted string, which contains zero or more format specifications, to this instance. Each format specification is replaced by the string representation of a corresponding object argument.</para>
		</summary>
		<param name="format">A string containing zero or more format specifications.</param>
		<param name="arg0">The first object to format.</param>
		<param name="arg1">The second object to format.</param>
		<param name="arg2">The third object to format.</param>
		<returns>
			<para>A reference to this instance with <paramref name="format "/>appended. Any format specification in <paramref name="format"/> is replaced by the string representation of the corresponding object argument.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="format"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.FormatException"><paramref name="format"/> is invalid.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>The format specifications are embedded within a string
      and are of the form {N:FormatString}, where N is a zero-based number indicating
      the argument to format and FormatString is a format string. If
      argN implements <see cref="System.IFormattable"/> then argN.Format (format, null) provides the formatting;
      otherwise <see cref="System.Object.ToString"/>
      provides the formatting. If arg0, arg1, or arg2 is <see langword="null "/>
      then an empty string
      is used in its place.</para>
			<para>To Pad With Spaces: You can define a region
      within the string argument in which the formatted value
      can be left or right justified. The format specification has an optional
      integer field: {N[,M]:FormatString}. The magnitude of M indicates the minimum number of spaces for the region and
      the sign of M indicates whether the value should be
      left (negative values) or right (positive values) justified within the region.</para>
			<para><see cref="System.Object.ToString"/> is Used if the Format String is Omitted: The format
   string within a format specification is optional: {N[,M][:FormatString]}. When
   FormatString is omitted, the <see cref="System.Object.ToString"/> method of the argument specified by N is used to replace
   the format specification. If M is given, then the result of
<see cref="System.Object.ToString"/>
is padded with spaces as described above.</para>
			<para>If the string assigned to <paramref name="format"/> is "Thank you for your purchase of {0:####} 
copies of Microsoft® .NET (Core Reference)." and <paramref name="arg0"/>
is an <see cref="System.Int16"/> with the value
123, then the return value will be "Thank you for your purchase of 123 copies of
Microsoft® .NET (Core Reference)."</para>
			<para>If the string assigned to <paramref name="format"/> is "Brad's dog has {0,-8:G} fleas." and 
<paramref name="arg0"/> is an <see cref="System.Int16"/> with the value 42, then the 
return value (where underscores represent padding spaces) will be "Brad's
dog has 42______ fleas."</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
	</doc>
	<doc for="StringBuilder.AppendFormat3">
		<summary>
			<para>Appends a formatted string, which contains zero or more format specifications, to this instance. Each format specification is replaced by the string representation of a corresponding object argument.</para>
		</summary>
		<param name="format">A string containing zero or more format specifications.</param>
		<param name="args">An array of objects to format.</param>
		<returns>
			<para>A reference to this instance with <paramref name="format "/>appended. Any format specification in <paramref name="format"/> is replaced by the string representation of the corresponding object argument.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> or <paramref name="args"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="format "/> is invalid.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>The format specifications are embedded within a string
      and are of the form {N:FormatString}, where N is a zero-based number indicating
      the argument to format and FormatString is a format string. If
      args[N] implements <see cref="System.IFormattable"/> then args[N].Format (format, <see langword="null"/>)
      provides the formatting; otherwise <see cref="System.Object.ToString"/> provides the formatting. If args[N] is
   <see langword="null "/>
   then an empty string is used in its place.</para>
			<para>To Pad With Spaces: You can define a region
   within the string argument in which the formatted value can be left or right
   justified. The format specification has an optional integer field: {N[,M]:FormatString}. The magnitude of M
   indicates the minimum number of spaces for the region and the sign of M indicates whether the value should be left (negative values)
   or right (positive values) justified within the region.</para>
			<para><see cref="System.Object.ToString"/> is Used if the Format String is Omitted: The format
string within a format specification is optional: {N[,M][:FormatString]}. When
FormatString is omitted, the <see cref="System.Object.ToString"/> method of the argument specified by N is used to replace
the format specification. If M is given, then the result of
<see cref="System.Object.ToString"/>
is padded with spaces as described above.</para>
			<para>If the string assigned to <paramref name="format"/> is "Thank you for your purchase of 
{0:####} copies of Microsoft® .NET (Core Reference)." and arg[0] is an <see cref="System.Int16"/> with the value
123, then the return value will be "Thank you for your purchase of 123 copies of
Microsoft® .NET (Core Reference)."</para>
			<para>If the string assigned to <paramref name="format"/> is "Brad's dog has {0,-8:G} fleas." and arg[0] is 
an <see cref="System.Int16"/> with the value 42, then the
return value (where underscores represent padding spaces) will be "Brad's
dog has 42______ fleas."</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
	</doc>
	<doc for="StringBuilder.AppendFormat4">
		<summary>
			<para>Appends a formatted string, which contains zero or more format specifications, to this instance. Each format specification is replaced by the string representation of a corresponding object argument.</para>
		</summary>
		<param name="format">A string containing zero or more format specifications.</param>
		<param name="args">An array of objects to format.</param>
		<param name="provider">The <see cref="System.IFormatProvider"/> used to change the way in which formatting codes are interpreted by a type.</param>
		<returns>
			<para>A reference to this instance with <paramref name="format "/>appended. Any format specification in <paramref name="format"/> is replaced by the string representation of the corresponding object argument.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="format"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.FormatException"><paramref name="format"/> is invalid.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>Enlarging the value of this instance would exceed <see cref="System.Text.StringBuilder.MaxCapacity"/>.</para></exception>
		<remarks>
			<para>The format specifications are embedded within a string
      and are of the form {N:FormatString}, where N is a zero-based number indicating
      the argument to format and FormatString is a format string. If
      args[N] implements <see cref="System.IFormattable"/> then
      args[N].Format (format, <see langword="null"/> ) provides the
      formatting; otherwise args[N].ToString( ) provides the formatting. If args[N] is
   <see langword="null "/>
   then an empty string is used in its place.</para>
			<para>The <paramref name="provider"/> parameter
specifies the format provider that the <see cref="System.Globalization.NumberFormatInfo"/> is obtained from. <see cref="System.Globalization.NumberFormatInfo"/>
supplies information such as the characters to use for
decimal and group separators, and determines the spelling and placement of
currency symbols in monetary values. If provider is <see langword="null"/>
, the numeric format information is obtained from the
current culture.</para>
			<para>To
   Pad With Spaces: You can define a region within the string
   argument in which the formatted value can be left or right justified. The
   format specification has an optional integer field: {N[,M]:FormatString}.
   The magnitude of M indicates the minimum number of
   spaces for the region and the sign of M indicates
   whether the value should be left (negative values) or right (positive values)
   justified within the region.</para>
			<para><see cref="System.Object.ToString"/> is Used if
the Format String is Omitted: The format string within a format specification is
optional: {N[,M][:FormatString]}. When FormatString is omitted, the <see cref="System.Object.ToString"/> method
of the argument specified by N is used to replace the format specification. If M
is given, then the result of <see cref="System.Object.ToString"/>
is padded with spaces as described
above.</para>
			<para>If the string assigned to <paramref name="format"/> is "Thank you for your purchase of
{0:####} copies of Microsoft® .NET (Core Reference)." and arg[0] is an <see cref="System.Int16"/> with the value
123, then the return value will be "Thank you for your purchase of 123 copies of
Microsoft® .NET (Core Reference)."</para>
			<para>If the string assigned to <paramref name="format"/> is "Brad's dog has {0,-8:G} fleas."
and arg[0] is an <see cref="System.Int16"/> with the value 42, then the
return value (where underscores represent padding spaces) will be "Brad's
dog has 42______ fleas."</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
	</doc>
	<doc for="StringBuilder.Replace2">
		<summary>
			<para>Replaces all occurrences of a specified character in
      this instance with
      another specified character. </para>
		</summary>
		<param name="oldChar">The character to replace. </param>
		<param name="newChar">The character that replaces <paramref name="oldChar"/>.</param>
		<returns>
			<para> A reference to this instance with <paramref name="oldChar"/> replaced by <paramref name="newChar"/>.
   </para>
		</returns>
		<remarks>
			<para> A <see cref="System.Text.StringBuilder"/> with
   all instances of <paramref name="oldChar"/> replaced
   with <paramref name="newChar"/>. The size of the <see cref="System.Text.StringBuilder"/> is unchanged because characters are only
   replaced. This method is case-sensitive.
   </para>
		</remarks>
	</doc>
</docs>
