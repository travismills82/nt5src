<docs>
	<doc for="StackBehaviour">
		<summary>
    Describes how values are pushed onto a stack
    or popped off a stack.
 </summary>
	</doc>
	<doc for="StackBehaviour.Pop0">
		<summary>
    No values are popped off the stack.
 </summary>
	</doc>
	<doc for="StackBehaviour.Push0">
		<summary>
			<para>
       No values are pushed onto the stack.
    </para>
		</summary>
	</doc>
	<doc for="StackBehaviour.Popi">
		<summary>
			<para>Pops a 32-bit integer off the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Push1_push1">
		<summary>
			<para>Pushes 1 value onto the stack for the first
      operand, and 1 value onto the stack for the second operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Pushi">
		<summary>
			<para>Pushes a 32-bit integer onto the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Pushi8">
		<summary>
			<para>Pushes a 64-bit integer onto the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Pushr4">
		<summary>
			<para>Pushes a 32-bit floating point number onto the
      stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Pushr8">
		<summary>
			<para>Pushes a 64-bit floating point number onto the
      stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Pushref">
		<summary>
			<para>Pushes a reference onto the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Varpop">
		<summary>
			<para>Pops a variable off the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Varpush">
		<summary>
			<para> Pushes a variable onto the stack.
      </para>
		</summary>
	</doc><doc for="StackBehaviour.Pop1">
		<summary>
			<para>Pops one value off the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Pop1_pop1">
		<summary>
			<para> Pops 1 value off the stack for the first
      operand, and 1 value of the stack for the second operand.
      </para>
		</summary>
	</doc><doc for="StackBehaviour.Popi_pop1">
		<summary>
			<para> Pops
      a 32-bit integer off the stack for
      the first operand, and a value off the stack for the second operand.
      </para>
		</summary>
	</doc><doc for="StackBehaviour.Popi_popi">
		<summary>
			<para> Pops a 32-bit integer off the stack for the
      first operand, and a 32-bit integer off the stack for the second operand.
      </para>
		</summary>
	</doc><doc for="StackBehaviour.Popi_popi8">
		<summary>
			<para>Pops a 32-bit integer off the stack for the
      first operand, and a 64-bit integer off the stack for the second operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popi_popi_popi">
		<summary>
			<para> Pops a 32-bit integer off the stack for the
      first operand, a 32-bit integer off the stack for the second operand, and a
      32-bit integer off the stack for the third operand.
      </para>
		</summary>
	</doc><doc for="StackBehaviour.Popi_popr4">
		<summary>
			<para>Pops a 32-bit integer off the stack for the
      first operand, and a 32-bit floating point number off the stack for the second
      operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popi_popr8">
		<summary>
			<para>Pops a 32-bit integer off the stack for the
      first operand, and a 64-bit floating point number off the stack for the second
      operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref">
		<summary>
			<para>Pops a reference off the stack.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_pop1">
		<summary>
			<para> Pops a reference off the stack for the first
      operand, and a value off the stack for the second operand.
      </para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_popi">
		<summary>
			<para>Pops a reference off the stack for the first
      operand, and a 32-bit integer off the stack for the second operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_popi_popi">
		<summary>
			<para>Pops a reference off the stack for the first
      operand, a value off the stack for the second operand, and a value off the stack
      for the third operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_popi_popi8">
		<summary>
			<para>Pops a reference off the stack for the first
      operand, a value off the stack for the second operand, and a 64-bit integer off
      the stack for the third operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_popi_popr4">
		<summary>
			<para>Pops a reference off the stack for the first
      operand, a value off the stack for the second operand, and a 32-bit integer off
      the stack for the third operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_popi_popr8">
		<summary>
			<para>Pops a reference off the stack for the first
      operand, a value off the stack for the second operand, and a 64-bit floating
      point number off the stack for the third operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Popref_popi_popref">
		<summary>
			<para>Pops a reference off the stack for the first
      operand, a value off the stack for the second operand, and a reference off the
      stack for the third operand.</para>
		</summary>
	</doc><doc for="StackBehaviour.Push1">
		<summary>
			<para>Pushes one value onto the stack.</para>
		</summary>
	</doc></docs>
