// ==++==
// 
//   Copyright (c) Microsoft Corporation.  All rights reserved.
// 
// ==--==
/*============================================================
**
** Class:  StringToken
**
** Author: Jay Roxe (jroxe)
**
** Purpose: Represents a String to the ILGenerator class.
**
** Date:  December 4, 1998
** 
===========================================================*/
namespace System.Reflection.Emit {
    
	using System;
	using System.Reflection;
    /// <include file='doc\StringToken.uex' path='docs/doc[@for="StringToken"]/*' />
	[Serializable()] 
    public struct StringToken {
    
        internal int m_string;
    
        //public StringToken() {
        //    m_string=0;
        //}
        
        internal StringToken(int str) {
            m_string=str;
        }
    
        // Returns the metadata token for this particular string.  
        // Generated by a call to Module.GetStringConstant().
        //
        /// <include file='doc\StringToken.uex' path='docs/doc[@for="StringToken.Token"]/*' />
        public int Token {
            get { return m_string; }
        }
        
    	// Satisfy JVC's value class requirements
    	/// <include file='doc\StringToken.uex' path='docs/doc[@for="StringToken.GetHashCode"]/*' />
    	public override int GetHashCode()
    	{
    		return m_string;
    	}
    	
    	// Satisfy JVC's value class requirements
    	/// <include file='doc\StringToken.uex' path='docs/doc[@for="StringToken.Equals"]/*' />
    	public override bool Equals(Object obj)
    	{
    		if (obj!=null && (obj is StringToken))
    			return ((StringToken)obj).m_string == m_string;
    		else
    			return false;
    	}
    }








}
