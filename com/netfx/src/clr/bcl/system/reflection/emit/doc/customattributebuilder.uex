<docs>
	<doc for="CustomAttributeBuilder.CustomAttributeBuilder">
		<overload>
			<para>Initializes an instances
      of the <see langword="CustomAttributeBuilder"/> class.</para>
		</overload>
		<summary>
			<para> Initializes an instance of the
   <see langword="CustomAttributeBuilder"/> class given the constructor 
      for the custom attribute and the arguments to the
      constructor.
      </para>
		</summary>
		<param name="con">The constructor for the custom attribute. </param>
		<param name="constructorArgs">The arguments to the constructor of the custom attribute. </param>
		<exception cref="System.ArgumentException"><para>
				<paramref name="con"/> is static or private.</para>
			<para>-or-</para>
			<para> The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</para>
			<para>-or-</para>
			<para> The type of supplied argument does not match the type of the parameter declared in the constructor</para></exception>
		<exception cref="System.ArgumentNullException"><paramref name="con"/>, <paramref name="constructorArgs"/>, or any element of the <paramref name="constructorArgs"/> array is <see langword="null"/>.</exception>
		<remarks>
			<para>The elements of the <paramref name="constructorArgs"/> array are restricted to element types.
   They can be <see langword="byte"/>, <see langword="sbyte"/>, <see langword="int"/>,
<see langword="uint"/>, <see langword="long"/>, <see langword="ulong"/>, 
<see langword="float"/>, <see langword="double"/>, <see langword="String"/>, 
<see langword="char"/>, <see langword="bool"/> 
, an enum, a type, any
of the previous types that was cast to an object, or a single
dimension zero-based array of any of the previous types.</para>
		</remarks>
	</doc><doc for="CustomAttributeBuilder.CustomAttributeBuilder1">
		<summary>
			<para> Initializes an instance of the
   <see langword="CustomAttributeBuilder"/> class given the constructor 
      for the custom attribute, the arguments to the constructor, and
      a set of named property or value
      pairs.
      </para>
		</summary>
		<param name="con">The constructor for the custom attribute. </param>
		<param name="constructorArgs">The arguments to the constructor of the custom attribute. </param>
		<param name="namedProperties">Named properties of the custom attribute. </param>
		<param name="propertyValues">Values for the named properties of the custom attribute. </param>
		<exception cref="System.ArgumentException"><para> The lengths of the <paramref name="namedProperties"/> and <paramref name="propertyValues"/> arrays are different.</para>
			<para> -or-</para>
			<para>
				<paramref name="con"/> is static or private.</para>
			<para>-or-</para>
			<para>The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</para>
			<para>-or-</para>
			<para> The type of supplied argument does not match the type of the parameter declared in the constructor.</para>
			<para>-or-</para>
			<para> The types of the property values do not match the types of the named properties.</para>
			<para>-or-</para>
			<para>A property has no setter method.</para>
			<para>-or-</para>
			<para>The property does not belong to the same class or base class as the constructor. </para></exception>
		<exception cref="System.ArgumentNullException">One of the parameters is null or one of the elements of the array parameters is <see langword="null"/> .</exception>
		<remarks>
			<para>The elements of the <paramref name="constructorArgs"/> and <paramref name="propertyValues"/> arrays are restricted to element types.
   They can be <see langword="byte"/>, <see langword="sbyte"/>, <see langword="int"/>,
<see langword="uint"/>, <see langword="long"/>, <see langword="ulong"/>, 
<see langword="float"/>, <see langword="double"/>, <see langword="String"/>, 
<see langword="char"/>, <see langword="bool"/> 
, an enum, a type, any of the previous types that was cast to an object, or a single dimension zero-based array of any of the previous types.</para>
		</remarks>
	</doc><doc for="CustomAttributeBuilder.CustomAttributeBuilder2">
		<summary>
			<para> Initializes an instance of the
   <see langword="CustomAttributeBuilder"/> class given the constructor 
      for the custom attribute, the arguments to the
      constructor, and a set of named field/value
      pairs.
      </para>
		</summary>
		<param name="con">The constructor for the custom attribute. </param>
		<param name="constructorArgs">The arguments to the constructor of the custom attribute. </param>
		<param name="namedFields">Named fields of the custom attribute. </param>
		<param name="fieldValues">Values for the named fields of the custom attribute. </param>
		<exception cref="System.ArgumentException"><para> The lengths of the <paramref name="namedFields"/> and <paramref name="fieldValues"/> arrays are different.</para>
			<para>-or-</para>
			<para>
				<paramref name="con"/> is static or private.</para>
			<para>-or-</para>
			<para> The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</para>
			<para>-or-</para>
			<para> The type of supplied argument does not match the type of the parameter declared in the constructor.</para>
			<para>-or-</para>
			<para> The types of the field values do not match the types of the named fields.</para>
			<para>-or-</para>
			<para> The field does not belong to the same class or base class as the constructor. </para></exception>
		<exception cref="System.ArgumentNullException">One of the parameters or any of the elements of the array parameters is <see langword="null"/> .</exception>
		<remarks>
			<para>The elements of the <paramref name="constructorArgs"/> and <paramref name="fieldValues"/> arrays are restricted to element types.
   They can be <see langword="byte"/>, <see langword="sbyte"/>, <see langword="int"/>,
<see langword="uint"/>, <see langword="long"/>, <see langword="ulong"/>, 
<see langword="float"/>, <see langword="double"/>, <see langword="String"/>, 
<see langword="char"/>, <see langword="bool"/>
, an enum, a type, any of the previous types that was cast to an object, or a single dimension zero-based array of any of the previous types.</para>
		</remarks>
	</doc><doc for="CustomAttributeBuilder.CustomAttributeBuilder3">
		<summary>
			<para> Initializes an instance of the
   <see langword="CustomAttributeBuilder"/> class given the constructor for the custom attribute, the arguments to the constructor, a set of named property or value pairs, and a set of named field or value
      pairs.
      </para>
		</summary>
		<param name="con">The constructor for the custom attribute. </param>
		<param name="constructorArgs">The arguments to the constructor of the custom attribute. </param>
		<param name="namedProperties">Named properties of the custom attribute. </param>
		<param name="propertyValues">Values for the named properties of the custom attribute. </param>
		<param name="namedFields">Named fields of the custom attribute. </param>
		<param name="fieldValues">Values for the named fields of the custom attribute. </param>
		<exception cref="System.ArgumentException"><para> The lengths of the <paramref name="namedProperties"/> and <paramref name="propertyValues"/> arrays are different.</para>
			<para>-or-</para>
			<para> The length of the <paramref name="namedFields"/> and <paramref name="namedValues"/> are different.</para>
			<para>-or-</para>
			<para>
				<paramref name="con"/> is static or private.</para>
			<para>-or-</para>
			<para> The number of supplied arguments does not match the number of parameters of the constructor as required by the calling convention of the constructor.</para>
			<para>-or-</para>
			<para> The type of supplied argument does not match the type of the parameter declared in the constructor.</para>
			<para>-or-</para>
			<para> The types of the property values do not match the types of the named properties.</para>
			<para>-or-</para>
			<para> The types of the field values do not match the types of the corresponding field types.</para>
			<para>-or-</para>
			<para>A property has no setter.</para>
			<para>-or-</para>
			<para> The property or field does not belong to the same class or base class as the constructor. </para></exception>
		<exception cref="System.ArgumentNullException">One of the parameters or any of the elements of the array parameters is <see langword="null"/> .</exception>
		<remarks>
			<para>The elements of the <paramref name="constructorArgs,
      propertyValues,"/> or <paramref name="fieldValues"/> arrays are restricted to element types.
      They can be <see langword="byte"/>, <see langword="sbyte"/>, <see langword="int"/>,
   <see langword="uint"/>, <see langword="long"/>, <see langword="ulong"/>,
   <see langword="float"/>, <see langword="double"/>, <see langword="String"/>,
   <see langword="char"/>, <see langword="bool"/>
   , an enum, a type, any of the previous types that was cast to an object, or a single dimension zero-based array of any of the previous types.</para>
		</remarks>
	</doc><doc for="CustomAttributeBuilder">
		<summary>
			<para> Helps build
      custom attributes.
      </para>
		</summary>
		<threadsafe>
			<para>Reflection Emit is thread-safe when using assemblies that were created with
      the <see cref="System.AppDomain.DefineDynamicAssembly" qualify="true"/> method with the Boolean parameter
   <paramref name="isSynchronized"/> set to <see langword="true"/>.</para>
		</threadsafe>
		<remarks>
			<para> Use the <see langword="CustomAttributeBuilder"/> object returned by the
   constructor to describe the custom attribute. Associate the
<see langword="CustomAttribute"/> to a builder instance by calling the 
<see langword="SetCustomAttribute"/> method on that builder instance. For 
   example, create a <see langword="CustomAttributeBuilder"/> to describe an
   instance of <see langword="AssemblyCultureAttribute"/> by supplying the
   constructor of <see cref="System.Reflection.AssemblyCultureAttribute"/> and its argument. Then call
<see cref="System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute"/> on an 
<see langword="AssemblyBuilder"/> to establish the association.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of 
   <see langword="CustomAttributeBuilder"/>.</para>
			<codelink SampleID="System.Reflection.Emit.CustomAttributeBuilder Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
