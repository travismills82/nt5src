<docs>
	<doc for="SignatureHelper.GetLocalVarSigHelper">
		<summary>
			<para> Returns a signature helper for a local variable.
      </para>
		</summary>
		<param name="mod">The module that contains the local variable for which the <see langword="SignatureHelper"/> is requested. </param>
		<returns>
			<para> The <see langword="SignatureHelper "/> 
object for a local variable.</para>
		</returns>
	</doc><doc for="SignatureHelper.GetFieldSigHelper">
		<summary>
			<para> Returns a signature helper for a field.
      </para>
		</summary>
		<param name="mod">The module that contains the field for which the <see langword="SignatureHelper"/> is requested. </param>
		<returns>
			<para> The <see langword="SignatureHelper "/> 
object for a field.</para>
		</returns>
	</doc><doc for="SignatureHelper.GetPropertySigHelper">
		<summary>
			<para> Returns a signature helper for a property
      given the property's module, return type, and parameter types.
      </para>
		</summary>
		<param name="mod">The module that contains the property for which the <see langword="SignatureHelper"/> is requested. </param>
		<param name=" returnType">The return type of the property. </param>
		<param name=" parameterTypes">The types of the parameters of the property. </param>
		<returns>
			<para>The <see langword="SignatureHelper "/> object for a
   property.</para>
		</returns>
	</doc><doc for="SignatureHelper.ToString">
		<summary>
			<para> Returns a string representing the signature parameters.
      </para>
		</summary>
		<returns>
			<para> Returns a string representing the
      parameters of this signature.
      </para>
		</returns>
	</doc><doc for="SignatureHelper.GetMethodSigHelper">
		<overload>
			<para> Returns a signature helper
      for a method.
      </para>
		</overload>
		<summary>
			<para> Returns a signature helper for a method
      given the method's module, calling convention, and return type.
      </para>
		</summary>
		<param name="mod">The module that contains the method for which the <see langword="SignatureHelper"/> is requested. </param>
		<param name=" callingConvention">The calling convention of the method. </param>
		<param name=" returnType">The return type of the method. </param>
		<returns>
			<para>The <see langword="SignatureHelper "/> object for a
   method.</para>
		</returns>
	</doc><doc for="SignatureHelper.GetMethodSigHelper1">
		<summary>
			<para> Returns a signature helper for a method, given the
      method's module, calling convention, return type, and parameter types.
      </para>
		</summary>
		<param name="mod">The module that contains the method for which the <see langword="SignatureHelper"/> is requested. </param>
		<param name="returnType">The return type of the method. </param>
		<param name="parameterTypes">The types of the parameters of the method. </param>
		<returns>
			<para>The <see langword="SignatureHelper "/> object for a
   method.</para>
		</returns>
	</doc><doc for="SignatureHelper.Equals">
		<summary>
			<para> Checks if this instance is equal to the given object.
      </para>
		</summary>
		<param name="obj">The object with which this instance should be compared. </param>
		<returns>
			<para><see langword="true "/>if the given 
   object is a <see langword="SignatureHelper"/>
   and represents the same signature; otherwise,
<see langword="false"/> 
.</para>
		</returns>
	</doc><doc for="SignatureHelper.GetHashCode">
		<summary>
			<para> Creates and returns a hash code for this instance.
      </para>
		</summary>
		<returns>
			<para> Returns the hash code based on the name.
      </para>
		</returns>
		<remarks>
			<para> The hash code is created from the name of this
      instance, so the return value is the same as if the <see langword="GetHashCode "/>method were called on the value of the <see langword="Name "/>
      
      property.
      </para>
		</remarks>
	</doc><doc for="SignatureHelper.AddArgument">
		<summary>
			<para>Adds an argument to the signature.</para>
		</summary>
		<param name="clsArgument">The type of the argument. </param>
		<exception cref="System.ArgumentException">The signature has already been finished. </exception>
		<remarks>
			<para> Takes a type and determines whether it is one of the primitive types or a general class. In the former case, the method adds the appropriate shortcut encoding; otherwise, the method calculates and adds the proper description for the type.</para>
		</remarks>
	</doc><doc for="SignatureHelper.AddSentinel">
		<summary>
			<para>Marks the end of a vararg fixed part. This is only used
      if the caller is creating a vararg signature call site.</para>
		</summary>
	</doc><doc for="SignatureHelper.GetSignature">
		<summary>
			<para> Adds
      the end token to the signature and marks the signature as finished, so no
      further tokens can be added.
      </para>
		</summary>
		<returns>
			<para> Returns a byte array made up of the full signature.
      </para>
		</returns>
	</doc><doc for="SignatureHelper">
		<summary>
			<para> Provides methods for building signatures.
      </para>
		</summary>
		<threadsafe>
			<para>Reflection Emit is thread-safe when using assemblies that were created with
      the <see cref="System.AppDomain.DefineDynamicAssembly" qualify="true"/> method with the Boolean parameter
   <paramref name="isSynchronized"/> set to <see langword="true"/>.</para>
		</threadsafe>
	</doc><doc for="SignatureHelper.GetMethodSigHelper2">
		<overload>
			<para>Returns a signature helper for a method. </para>
		</overload>
		<summary>
			<para> Returns a signature helper for a method given
      the method's module and an unmanaged calling convention.</para>
		</summary>
		<param name="mod">The module that contains the method for which the <see langword="SignatureHelper"/> is requested. </param>
		<param name="unmanagedCallConv">The unmanaged calling convention of the method. </param>
		<param name="returnType">The return type of the method. </param>
		<returns>
			<para>The <see langword="SignatureHelper"/> object for a method.</para>
		</returns>
	</doc></docs>
