<docs>
	<doc for="EventBuilder.GetEventToken">
		<summary>
			<para> Returns the token for this event.
      </para>
		</summary>
		<returns>
			<para> Returns the <see langword="EventToken"/> for this event.
   </para>
		</returns>
	</doc><doc for="EventBuilder.SetAddOnMethod">
		<summary>
			<para> Sets the method used to subscribe to this event.
      </para>
		</summary>
		<param name="mdBuilder">A <see langword="MethodBuilder"/> object that represents the method used to subscribe to this event. </param>
		<exception cref="System.ArgumentNullException"><paramref name="mdBuilder"/> is <see langword="null"/> .</exception>
		<exception cref="System.InvalidOperationException"><see cref="System.Reflection.Emit.TypeBuilder.CreateType"/> has been called on the enclosing type.</exception>
	</doc><doc for="EventBuilder.SetRemoveOnMethod">
		<summary>
			<para> Sets the method used to unsubscribe to this event.
      </para>
		</summary>
		<param name="mdBuilder">A <see langword="MethodBuilder"/> object that represents the method used to unsubscribe to this event. </param>
		<exception cref="System.ArgumentNullException"><paramref name="mdBuilder"/> is <see langword="null"/> .</exception>
		<exception cref="System.InvalidOperationException"><see cref="System.Reflection.Emit.TypeBuilder.CreateType"/> has been called on the enclosing type.</exception>
	</doc><doc for="EventBuilder.SetRaiseMethod">
		<summary>
			<para> Sets the method used to raise this event.
      </para>
		</summary>
		<param name="mdBuilder">A <see langword="MethodBuilder"/> object that represents the method used to raise this event. </param>
		<exception cref="System.ArgumentNullException"><paramref name="mdBuilder"/> is <see langword="null"/> .</exception>
		<exception cref="System.InvalidOperationException"><see cref="System.Reflection.Emit.TypeBuilder.CreateType"/> has been called on the enclosing type.</exception>
	</doc><doc for="EventBuilder.SetCustomAttribute1">
		<summary>
			<para> Sets a custom attribute using a custom attribute builder.
      </para>
		</summary>
		<param name="customBuilder">An instance of a helper class to describe the custom attribute. </param>
		<exception cref="System.ArgumentNullException"><paramref name="con "/>is <see langword="null"/>. </exception>
		<exception cref="System.InvalidOperationException"><see cref="System.Reflection.Emit.TypeBuilder.CreateType"/> has been called on the enclosing type.</exception>
	</doc><doc for="EventBuilder.AddOtherMethod">
		<summary>
			<para> Adds one of the "other" methods associated with this 
      event. "Other" methods are methods other than the "on" and "raise" methods associated with an event.
      This function can be called many times to add as many "other" methods.
      </para>
		</summary>
		<param name="mdBuilder">A <see langword="MethodBuilder"/> object that represents the other method. </param>
		<exception cref="System.ArgumentNullException"><paramref name="mdBuilder"/> is <see langword="null"/> .</exception>
		<exception cref="System.InvalidOperationException"><see cref="System.Reflection.Emit.TypeBuilder.CreateType"/> has been called on the enclosing type.</exception>
	</doc><doc for="EventBuilder.SetCustomAttribute">
		<overload>
			<para> Sets custom attributes for this EventBuilder.
      </para>
		</overload>
		<summary>
			<para> Set a custom attribute using a specified custom attribute blob.
      </para>
		</summary>
		<param name="con">The constructor for the custom attribute. </param>
		<param name="binaryAttribute">A byte blob representing the attributes. </param>
		<exception cref="System.ArgumentNullException"><paramref name="con "/> or <paramref name="binaryAttribute "/>is <see langword="null"/>.</exception>
		<exception cref="System.InvalidOperationException"><see cref="System.Reflection.Emit.TypeBuilder.CreateType"/> has been called on the enclosing type.</exception>
		<remarks>
			<para> See the metadata specification in the ECMA Partition II 
      documentation for details on how to format <paramref name="binaryAttribute"/>. The Partition
      II documentation is included with the .NET Framework SDK installation, and can
      be found in the %\Microsoft.NET\FrameworkSDK\Tool Developers Guide\docs
      directory.</para>
		</remarks>
	</doc>
	<doc for="EventBuilder">
		<summary>
			<para> Defines events for a class.</para>
		</summary>
		<threadsafe>
			<para>Reflection Emit is thread-safe when using assemblies that were created with
      the <see cref="System.AppDomain.DefineDynamicAssembly" qualify="true"/> method with the Boolean parameter
   <paramref name="isSynchronized"/> set to <see langword="true"/>.</para>
		</threadsafe>
		<remarks>
			<para>An <see langword="EventBuilder"/> is always associated with a
<see langword="TypeBuilder"/>. The TypeBuilder.DefineEvent method will return a 
   new <see langword="EventBuilder"/> to a client.</para>
		</remarks>
		<example>
		</example>
	</doc>
</docs>
