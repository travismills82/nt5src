<docs>
	<doc for="Pointer">
		<summary>
			<para>Provides a wrapper class for pointers.</para>
		</summary>
	</doc>
	<doc for="Pointer.Box">
		<summary>
			<para>Boxes the supplied unmanaged memory pointer and the
      type associated with that pointer into a managed <see cref="System.Reflection.Pointer"/> wrapper object. The value and the type are saved so they can be
      accessed from the native code during an invocation. </para>
		</summary>
		<param name="ptr">The supplied unmanaged memory pointer.</param>
		<param name=" type">The type associated with the <paramref name="ptr "/>parameter.</param>
		<returns>
			<para>A pointer object.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="type"/> is not a pointer.</exception>
		<exception cref="System.ArgumentNullException"><paramref name="type"/> is <see langword="null"/>.</exception>
	</doc><doc for="Pointer.ISerializable.GetObjectData">
		<internalonly/>
		<summary>
			<para>Sets the <see cref="System.Runtime.Serialization.SerializationInfo"/> object with the file name, fusion log, and additional exception information.</para>
		</summary>
		<param name="info">The <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
		<param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
	</doc>
	<doc for="Pointer.Unbox">
		<summary>
			<para>Returns the stored pointer.</para>
		</summary>
		<param name="ptr">The stored pointer.</param>
		<returns>
			<para>This method returns void.</para>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="ptr"/> is not a pointer.</exception>
	</doc>
</docs>
