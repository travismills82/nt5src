<docs>
	<doc for="TypeFilter">
		<summary>
			<para>Filters the classes represented in an array
      of <see cref="System.Type"/>
      objects.</para>
		</summary>
		<param name="m">The <see langword="Type"/> object to which the filter is applied. </param>
		<param name=" filterCriteria">An arbitrary object used to filter the list. </param>
		<remarks>
			<para>The <see langword="TypeFilter"/> delegate is used to filter a list of classes. Specifically,
   you use it to filter the classes represented in an array of <see cref="System.Type"/> objects. The
<see cref="System.Type.FindInterfaces" qualify="true"/> 
method uses this delegate to filter the list of interfaces
that it returns. Every
derived class of <see cref="System.Delegate"/> and <see cref="System.MulticastDelegate"/> has a constructor and a <see langword="DynamicInvoke"/> method. See the Managed Extensions for C++
code example given in the description for <see langword="Delegate"/>
.</para>
		</remarks>
		<seealso cref="System.Type.FindInterfaces"/>
		<seealso cref="System.Object"/>
		<seealso cref="System.Delegate"/>
		<seealso cref="System.MulticastDelegate"/>
	</doc>
</docs>
