<docs>
	<doc for="MethodInfo.MethodInfo">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Reflection.MethodInfo"/> class.</para>
		</summary>
	</doc>
	<doc for="MethodInfo.ReturnTypeCustomAttributes">
		<summary>
			<para> Gets the custom attributes for the
       return type.</para>
		</summary>
		<value>
			<para>An <see langword="ICustomAttributeProvider"/> object representing the custom 
    attributes for the return type.</para>
		</value>
	</doc>
	<doc for="MethodInfo">
		<summary>
			<para>Discovers the attributes of a method and provides access
      to method metadata.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded operations.</para>
		</threadsafe>
		<remarks>
			<para>Instances of <see langword="MethodInfo"/> are obtained
   by calling either the <see cref="System.Type.GetMethods"/> or <see cref="System.Type.GetMethod"/> method of a <see cref="System.Type"/>
   object.</para>
			<note type="inheritinfo">
   When you inherit from
<see cref="System.Reflection.MethodInfo"/> , you must
   override <see cref="System.Reflection.MethodInfo.GetBaseDefinition"/>.
   
</note>
		</remarks>
		<example>
		</example>
	</doc>
	<doc for="MethodInfo.MemberType">
		<summary>
			<para> Gets a value indicating that this member is a method.</para>
		</summary>
		<value>
			<para>A <see langword="MemberTypes"/>
object indicating that this member is a method.</para>
		</value>
		<remarks>
			<para>This is used when this method is being tested as generic member.</para>
			<para>To get the <see langword="MemberType"/> property, first
   get the class <see langword="Type"/>. From the <see langword="Type"/>, get the
<see langword="MethodInfo"/>. From the <see langword="MethodInfo"/>, get the 
<see langword="MemberType"/> 
.</para>
		</remarks>
		<example>
			<para>The following example displays the type of the specified member.</para>
			<codelink SampleID="Classic MethodInfo.MemberType Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="MethodInfo.ReturnType">
		<summary>
			<para>Gets the return type of this method.</para>
		</summary>
		<value>
			<para> The return type of this
      method.</para>
		</value>
		<remarks>
			<para>To get the return type property, first get the class
   <see langword="Type"/>. From the <see langword="Type"/>, get the
   <see langword="MethodInfo"/>. From the <see langword="MethodInfo"/>, get the
   <see langword="ReturnType"/>
   .</para>
		</remarks>
		<example>
			<para>The following example displays the return type of the specified method.</para>
			<codelink SampleID="Classic MethodInfo.ReturnType Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="MethodInfo.GetBaseDefinition">
		<summary>
			<para>When overridden in a derived class, returns the
   <see langword="MethodInfo"/> object for
      the method on the direct or indirect base class in which the method represented
      by this instance was first declared.</para>
		</summary>
		<returns>
			<para>A <see langword="MethodInfo"/> object for the first implementation of this
   method.</para>
		</returns>
		<remarks>
			<para><see langword="GetBaseDefinition "/>
returns the first definition of the specified method
in the class hierarchy.</para>
			<para> If the method is declared on an interface, <see langword="GetBaseDefinition"/>
returns the method. </para>
			<para>If the method is defined in a base class, then
<see langword="GetBaseDefinition"/> works as follows:</para>
			<list type="bullet"><item>
					<term>
      
      If a given method overrides a virtual definition in
      the base class, the virtual definition is returned.</term>
				</item>
				<item>
					<term>
      
      If
      
      a given method is specified with the <see langword="new"/> keyword (as in <see langword="newslot"/> as
      described in <see topic="cpcontypemembers"/>), the given method is returned.</term>
				</item>
				<item>
					<term>
      
      If the method is not defined in the type of the object on which
   <see langword="GetBaseDefinition"/> is called, the method definition highest in
      the class hierarchy is returned.</term>
				</item>
			</list>
			<para>To get the <see langword="GetBaseDefinition "/>method , first get the class
<see cref="System.Type"/>. From the 
<see langword="Type"/>, get the <see cref="System.Reflection.MethodInfo"/>. From the
<see langword="MethodInfo"/>, get the <see langword="GetBaseDefinition"/> .</para>
		</remarks>
		<example>
			<para> This code example demonstrates the behavior of <see cref="System.Reflection.MethodInfo.GetBaseDefinition"/>
.</para>
			<codelink SampleID="Classic MethodInfo.GetBaseDefinition Example" SnippetID="1"/>
		</example>
		<seealso topic="cpcontypemembers"/>
	</doc>
</docs>
