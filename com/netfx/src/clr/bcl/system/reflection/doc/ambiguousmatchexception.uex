<docs>
	<doc for="AmbiguousMatchException.AmbiguousMatchException">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Reflection.AmbiguousMatchException"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Reflection.AmbiguousMatchException"/> class
<see langword=" "/>with an empty message string and the
   root cause exception set to <see langword="null"/>
   .</para>
		</summary>
		<remarks>
			<para>
				<see langword="AmbiguousMatchException "/>
inherits from <see cref="System.Exception"/>. This constructor sets the
properties of the <see langword="Exception "/>object
as shown in
the following table.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Exception.InnerException"/>
					</term>
					<description>
						<see langword="null "/>
					</description>
				</item>
				<item>
					<term>
						<see cref="System.Exception.Message"/>
					</term>
					<description>The
   empty string ("").</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso cref="System.SystemException"/>
	</doc>
	<doc for="AmbiguousMatchException.AmbiguousMatchException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Reflection.AmbiguousMatchException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not <see langword="null"/>, the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/>
   property returns the same value that is passed into the constructor, or
<see langword="null"/> if the <see cref="System.Exception.InnerException"/> 
property does not supply the inner exception value to
the constructor. </para>
			<para>The following table shows the initial property values for an instance of <see cref="System.Reflection.AmbiguousMatchException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example shows two classes, each named
      <c>Mymethod</c>. One
      class takes an integer and
      the other takes a string. If an integer is passed to <c>Mymethod</c>,
   the first class is used. If a string is passed,
   the second class is used. If it cannot be determined which <c>Mymethod</c> to use,
<see langword="AmbiguousMatchException"/>
is thrown.</para>
			<codelink SampleID="Classic AmbiguousMatchException.AmbiguousMatchException2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="AmbiguousMatchException.AmbiguousMatchException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Reflection.AmbiguousMatchException"/> class
<see langword=" "/>with its message string set to the
   given message and the root cause exception set to <see langword="null"/>
   .</para>
		</summary>
		<param name="message">A string indicating the reason this exception was thrown.</param>
		<remarks>
			<para><see langword="AmbiguousMatchException "/>
inherits from <see cref="System.Exception"/>. This constructor
sets the properties of the <see langword="Exception"/>
object as shown in
the following table.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Exception.InnerException"/></term>
					<description><see langword="null "/></description>
				</item>
				<item>
					<term>
						<see cref="System.Exception.Message"/></term>
					<description>The <paramref name="message"/> string.</description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="AmbiguousMatchException">
		<summary>
			<para>The exception that is thrown when binding to a method results in more than one method matching
      the binding criteria. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para><see langword="AmbiguousMatchException"/> uses the HRESULT
   COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</para>
			<para>An <see langword="AmbiguousMatchException "/> is thrown if the application calls upon a class and it
cannot determine which class or overloaded class to utilize. The binding attempts to
locate the proper class to use, determined by the number of parameters and the
type of parameters. If multiple acceptable classes are located,
<see langword="AmbiguousMatchException"/>
is thrown.</para>
			<para>Overload resolution is a mechanism for selecting the best
   function member to invoke given an argument list and a set of candidate function
   members. Overload resolution selects the function member to invoke. If a
   selection cannot be determined, an <see langword="AmbiguousMatchException "/>
   is thrown.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso cref="System.SystemException"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc>
</docs>
