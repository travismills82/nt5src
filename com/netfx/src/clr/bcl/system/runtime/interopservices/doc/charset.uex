<docs>
	<doc for="CharSet.Unicode">
		<summary>
			<para> Marshal strings as Unicode 2-byte characters.</para>
		</summary>
	</doc><doc for="CharSet.None">
		<summary>
			<para> This value is obsolete and has the same
      behavior as <see cref="System.Runtime.InteropServices.CharSet.Ansi" qualify="true"/>.</para>
		</summary>
	</doc>
	<doc for="CharSet">
		<summary>
			<para>Dictates which character set marshaled strings should use.</para>
		</summary>
		<remarks>
			<para>Because there are several unmanaged string types and only one managed string type, you must
      use a character set to specify how managed strings should be marshaled
      to unmanaged code. This enumeration, which provides character set options, is used by <see cref="System.Runtime.InteropServices.DllImportAttribute"/> and <see cref="System.Runtime.InteropServices.StructLayoutAttribute"/>. For
      a detailed description of the string marshaling and name matching behavior
      associated with this enumeration, see <see topic="cpconcharsetobjectfield" title="Specifying a Character Set"/>.</para>
		</remarks>
		<example>
			<para> The following code example shows how to specify
      a <see cref="System.Runtime.InteropServices.CharSet"/> enumeration value when applying
      the <see cref="System.Runtime.InteropServices.StructLayoutAttribute"/> to a managed
      definition.</para>
			<code lang="VB">&lt; StructLayout( LayoutKind.Sequential, CharSet := CharSet.Ansi )&gt; _
Public Structure MyPerson
   Public first As String
   Public last As String
End Structure 'MyPerson
   </code>
			<code lang="C#">[ StructLayout( LayoutKind.Sequential, CharSet=CharSet.Ansi )]
public struct MyPerson 
{
   public String first; 
   public String last;
}
   </code>
		</example>
		<seealso cref="System.Runtime.InteropServices.DllImportAttribute"/>
		<seealso cref="System.Runtime.InteropServices.StructLayoutAttribute"/>
	</doc>
	<doc for="CharSet.Auto">
		<summary>
			<para>Automatically marshal strings appropriately for the target
      operating system. The default is <see cref="System.Runtime.InteropServices.CharSet.Unicode"/> on Windows NT, Windows
      2000, Windows XP, and the
      Windows .NET Server family; the
      default is <see cref="System.Runtime.InteropServices.CharSet.Ansi"/> on Windows 98 and Windows Me.</para>
		</summary>
	</doc>
	<doc for="CharSet.Ansi">
		<summary>
			<para> Marshal strings as multiple-byte character strings.</para>
		</summary>
	</doc>
</docs>
