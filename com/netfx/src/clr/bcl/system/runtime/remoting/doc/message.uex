<docs>
	<doc for="Message.InArgCount">
		<summary>
			<para>
       The number of arguments.
    </para>
		</summary>
		<value>
			<para>
       The number of arguments.
    </para>
		</value>
	</doc>
	<doc for="Message.GetInArgName">
		<summary>
			<para>
       Return the name of a specific argument.
    </para>
		</summary>
		<param name="index">
    0-based index of argument name to get.
 </param>
		<returns>
			<para>
       Return the name of a specific argument. A string representing the
       name of the argument specified or null
       if this method is not implemented. IMessage Dictionary property key "__Args"
       via array object.
    </para>
		</returns>
	</doc>
	<doc for="ConstructorCallMessage.InArgCount">
		<summary>
			<para>
       The number of arguments.
    </para>
		</summary>
		<value>
			<para>
       The number of arguments.
    </para>
		</value>
	</doc>
	<doc for="ConstructorCallMessage.GetInArgName">
		<summary>
			<para>
       Return the name of a specific argument.
    </para>
		</summary>
		<param name="index">
    0-based index of argument name to get.
 </param>
		<returns>
			<para>
       Return the name of a specific argument. A string representing the
       name of the argument specified or null
       if this method is not implemented. IMessage Dictionary property key "__Args"
       via array object.
    </para>
		</returns>
	</doc>
	<doc for="StackBasedReturnMessage.OutArgCount">
		<summary>
			<para>
       The number of out arguments.
    </para>
		</summary>
		<value>
			<para>
       The number of out arguments.
    </para>
		</value>
	</doc>
	<doc for="StackBasedReturnMessage.GetOutArgName">
		<summary>
			<para>
       Return the name of a specific out argument.
    </para>
		</summary>
		<param name="index">
    The 0-based index of the argument to get.
 </param>
		<returns>
			<para>
       Return the name of a specific out argument. A string representing
       the name of the out argument specified or null
       if this method is not implemented. IMessage Dictionary property key "__OutArgs"
       via array object.
    </para>
		</returns>
	</doc>
	<doc for="MethodCall.InternalProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.MethodCall">
		<overload>
			<para>       Initializes a new instance of the MethodCall
      class.
      </para>
		</overload>
		<summary>
			<para>       Initializes a new MethodCall.
      </para>
		</summary>
		<param name="h1">
   the header array
   </param>
	</doc><doc for="MethodCall.MethodCall1">
		<summary>
			<para>       Initializes a new MethodCall.
      </para>
		</summary>
		<param name="msg">
   the message
   </param>
	</doc><doc for="MethodCall.RootSetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.ResolveMethod">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.Init">
		<summary>
			<para>       [To
      be supplied.]
      </para>
		</summary>
		<remarks>
			<para>       [To
      be supplied.]
      </para>
		</remarks>
	</doc><doc for="MethodCall.InArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.MethodName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.TypeName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.MethodSignature">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.MethodBase">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.Uri">
		<summary>
			<para>Get or set the Uniform Resource Identifier (URI) of a specific instance of an
      object.</para>
		</summary>
		<value>
			<para>The Uniform Resource Identifier of a specific instance of
      an object.</para>
		</value>
	</doc><doc for="MethodCall.Properties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.LogicalCallContext">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall">
		<summary>
			<para>Reserved class, for internal use only.</para>
		</summary>
	</doc><doc for="ConstructionCall.ConstructionCall">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.ConstructionCall1">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.CallSiteActivationAttributes">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.ActivationType">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.ActivationTypeName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.ContextProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.Properties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionCall.Activator">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse">
		<summary>
			<para>Reserved class, for internal use only.</para>
		</summary>
	</doc><doc for="MethodResponse.InternalProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.ExternalProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.MethodResponse">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.HeaderHandler">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.RootSetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.GetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.Uri">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.MethodName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.TypeName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.MethodSignature">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.MethodBase">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.HasVarArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.ArgCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.GetArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.GetArgName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.Args">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.OutArgCount">
		<summary>
			<para>       The number of out arguments.
      </para>
		</summary>
		<value>
			<para>       The number of out arguments.
      </para>
		</value>
	</doc><doc for="MethodResponse.GetOutArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.GetOutArgName">
		<summary>
			<para> Return the name of a specific out argument.
      </para>
		</summary>
		<param name="index">The 0-based index of the argument to get. </param>
		<returns>
   A string representing the name of the out argument
   specified or null if this method is not implemented.
</returns>
	</doc><doc for="MethodResponse.OutArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.Exception">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.ReturnValue">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.Properties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodResponse.LogicalCallContext">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ConstructionResponse">
		<summary>
			<para>Reserved class, for internal use only.</para>
		</summary>
	</doc><doc for="ConstructionResponse.ConstructionResponse">
		<param name="h"></param>
		<param name=" mcm"></param>
	</doc><doc for="ConstructionResponse.Properties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="InternalMessageWrapper">
		<summary>
			<para> Reserved class, for internal use
      only.
      </para>
		</summary>
	</doc><doc for="InternalMessageWrapper.WrappedMessage">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="InternalMessageWrapper.InternalMessageWrapper">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper">
		<summary>
			<para> Reserved class, for internal use
      only.
      </para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.MethodCallMessageWrapper">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.Uri">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.MethodName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.TypeName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.MethodSignature">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.LogicalCallContext">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.MethodBase">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.ArgCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.GetArgName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.GetArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.Args">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.HasVarArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.InArgCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.GetInArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.GetInArgName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.InArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCallMessageWrapper.Properties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper">
		<summary>
			<para> Reserved class, for internal use
      only.
      </para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.MethodReturnMessageWrapper">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.Uri">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.MethodName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.TypeName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.MethodSignature">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.LogicalCallContext">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.MethodBase">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.ArgCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.GetArgName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.GetArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.Args">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.HasVarArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.OutArgCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.GetOutArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.GetOutArgName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.OutArgs">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.Exception">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.ReturnValue">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodReturnMessageWrapper.Properties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall">
		<internalonly/>
		<summary>
			<para> Reserved class, for internal use
      only.
      </para>
		</summary>
	</doc><doc for="ReturnMessage.MethodBase">
		<summary>
			<para>Gets the <see cref="System.Reflection.MethodBase"/> of the called method.</para>
		</summary>
		<value>
			<para>The <see cref="System.Reflection.MethodBase"/> of the called method.</para>
		</value>
	</doc><doc for="ReturnMessage.Args">
		<summary>
			<para>Gets a specified argument passed to the method called on
      the remote object.</para>
		</summary>
		<value>
			<para>An argument passed to the method called on the remote object.</para>
		</value>
	</doc><doc for="ReturnMessage.OutArgCount">
		<summary>
			<para> Gets the number of <see langword="out"/> or 
<see langword="ref "/> arguments on the called method.
   </para>
		</summary>
		<value>
			<para> The number of <see langword="out"/> or <see langword="ref "/> arguments on the called method.
   </para>
		</value>
	</doc><doc for="ReturnMessage.ReturnValue">
		<summary>
			<para>Gets the object returned by the called method.</para>
		</summary>
		<value>
			<para>The object returned by the called method.</para>
		</value>
	</doc><doc for="ReturnMessage.OutArgs">
		<summary>
			<para>Gets a specified object passed as an 
   <see langword="out"/> or <see langword="ref"/> parameter to 
      the called method.</para>
		</summary>
		<value>
			<para>An object passed as an <see langword="out"/> or <see langword="ref"/> 
parameter to the called method.</para>
		</value>
	</doc><doc for="MethodCall.ExternalProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.GetObjectData">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.ArgCount">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.GetArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.GetArgName">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.Args">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.InArgCount">
		<summary>
			<para>       The number of arguments.
      </para>
		</summary>
		<value>
			<para>       The number of arguments.
      </para>
		</value>
	</doc><doc for="MethodCall.GetInArg">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.GetInArgName">
		<summary>
			<para> Return the name of a specific argument.
      </para>
		</summary>
		<param name="index">0-based index of argument name to get. </param>
		<returns>
   A string representing the name of the argument specified
   or null if this method is not implemented.
</returns>
	</doc><doc for="MethodCall.HeaderHandler">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ReturnMessage.MethodSignature">
		<summary>
			<para>Gets an array of <see cref="System.Type"/> objects containing the method signature.</para>
		</summary>
		<value>
			<para>An array of <see cref="System.Type"/> objects containing the method signature.</para>
		</value>
	</doc><doc for="ReturnMessage.ArgCount">
		<summary>
			<para>Gets the number of arguments of the called method.</para>
		</summary>
		<value>
			<para>The number of arguments of the called method.</para>
		</value>
	</doc><doc for="MethodCall.HasVarArgs">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.IInternalMessage.ServerIdentityObject">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.IInternalMessage.IdentityObject">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.IInternalMessage.SetURI">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.IInternalMessage.SetCallContext">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="MethodCall.IInternalMessage.HasProperties">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ReturnMessage.ReturnMessage1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> class.</para>
		</summary>
		<param name="e">The exception that was thrown during execution of the remotely called method.</param>
		<param name=" mcm">An <see cref="System.Runtime.Remoting.Messaging.IMethodCallMessage"/> with which to create an instance of the <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> class.</param>
	</doc><doc for="ReturnMessage.GetArg">
		<summary>
			<para>Returns a specified argument passed to the remote method
      during the method call.</para>
		</summary>
		<param name="argNum"> The zero-based index of the requested argument.</param>
		<returns>
			<para>An argument passed to the remote method during the method call.</para>
		</returns>
	</doc><doc for="ReturnMessage.GetArgName">
		<summary>
			<para>Returns the name of a specified method argument.</para>
		</summary>
		<param name="index"> The zero-based index of the requested argument name.</param>
		<returns>
			<para>The name of a specified method argument.</para>
		</returns>
	</doc><doc for="ReturnMessage.GetOutArg">
		<summary>
			<para>Returns the object passed as an
   <see langword="out"/> or <see langword="ref "/>parameter during the remote method call.</para>
		</summary>
		<param name="argNum"> The zero-based index of the requested <see langword="out"/>or <see langword="ref"/> parameter.</param>
		<returns>
			<para>The object passed as an <see langword="out"/> or <see langword="ref "/>parameter during the remote method call.</para>
		</returns>
	</doc><doc for="ReturnMessage.GetOutArgName">
		<summary>
			<para> Returns the name of a specified <see langword="out "/>or
<see langword="ref "/> parameter passed to the remote method.
   </para>
		</summary>
		<param name="index"> The zero-based index of the requested argument. </param>
		<returns>
			<para>A string representing the name of the
      specified <see langword="out"/> or <see langword="ref "/>
      parameter, or <see langword="null"/> if the current method is not implemented.</para>
		</returns>
	</doc><doc for="ReturnMessage.Exception">
		<summary>
			<para> Gets the exception that was thrown during the remote method call.
      </para>
		</summary>
		<value>
			<para> The exception thrown during the method call, or
   <see langword="null"/>
   if an exception did not occur during the call.
   </para>
		</value>
	</doc><doc for="ReturnMessage.TypeName">
		<summary>
			<para> Gets the name of the type on which the remote
      method was called.</para>
		</summary>
		<value>
			<para>The type name of the remote object on which the remote method was called.</para>
		</value>
	</doc><doc for="ReturnMessage.Properties">
		<summary>
			<para>Gets an <see cref="System.Collections.IDictionary"/> of properties contained in
   the current <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> .</para>
		</summary>
		<value>
			<para>An <see cref="System.Collections.IDictionary"/> of properties contained in the current
<see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> .</para>
		</value>
	</doc><doc for="ReturnMessage.ReturnMessage">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> class with all the
   information returning to the caller after the method call.</para>
		</summary>
		<param name="ret">The object returned by the invoked method from which the current <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> instance originated.</param>
		<param name=" outArgs">The objects returned from the invoked method as <see langword="out"/> parameters.</param>
		<param name=" outArgsCount">The number of <see langword="out"/> parameters returned from the invoked method.</param>
		<param name=" callCtx">The <see cref="System.Runtime.Remoting.Messaging.LogicalCallContext"/> of the method call.</param>
		<param name=" mcm">The original method call to the invoked method.</param>
	</doc><doc for="MethodResponse.IInternalMessage.ServerIdentityObject">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="MethodResponse.IInternalMessage.IdentityObject">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="MethodResponse.IInternalMessage.SetURI">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="MethodResponse.IInternalMessage.SetCallContext">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="MethodResponse.IInternalMessage.HasProperties">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc>
	<doc for="ReturnMessage">
		<summary>
			<para> Holds a message returned in response to a method call on
      a remote object.</para>
		</summary>
		<remarks>
			<note type="note">
      This class makes a
      link demand and an inheritance demand at the
      class level. A <see cref="System.Security.SecurityException"/> is thrown when
      either the immediate caller or the derived class does not have infrastructure permission. For details about security demands, see <see topic="cpconLinkDemands"/> and <see topic="cpconInheritanceDemands"/>.
      
   </note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.InheritanceDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<example>
			<codelink SampleID="IMethodReturnMessage_ReturnValue" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ReturnMessage.Uri">
		<summary>
			<para> Gets or sets the URI of the remote object on which the
      remote method was called.</para>
		</summary>
		<value>
			<para> The URI of the remote object on which the remote method was called.</para>
		</value>
		<example>
			<codelink SampleID="IMethodReturnMessage_ReturnValue" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ReturnMessage.MethodName">
		<summary>
			<para>Gets the name of the called method.</para>
		</summary>
		<value>
			<para> The name of the method that the current <see cref="System.Runtime.Remoting.Messaging.ReturnMessage"/> originated from.</para>
		</value>
	</doc>
	<doc for="ReturnMessage.HasVarArgs">
		<summary>
			<para>Gets a value indicating whether the called method accepts
      a variable number of arguments.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the called method accepts
   a variable number of arguments; otherwise, <see langword="false"/>
   .</para>
		</value>
	</doc>
	<doc for="ReturnMessage.LogicalCallContext">
		<summary>
			<para>Gets the <see cref="System.Runtime.Remoting.Messaging.LogicalCallContext"/> of the called method.</para>
		</summary>
		<value>
			<para>The <see cref="System.Runtime.Remoting.Messaging.LogicalCallContext"/> of the called method.</para>
		</value>
	</doc>
</docs>
