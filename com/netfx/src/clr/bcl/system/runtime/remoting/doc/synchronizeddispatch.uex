<docs>
	<doc for="SynchronizationAttribute.SynchronizationAttribute">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/> class with default values.</para>
		</summary>
	</doc><doc for="SynchronizationAttribute.Locked">
		<summary>
			<para>Gets or sets a Boolean value indicating whether the 
   <see cref="System.Runtime.Remoting.Contexts.Context"/> implementing this instance of 
   <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/> is locked.</para>
		</summary>
		<value>
			<para>A Boolean value indicating whether the <see cref="System.Runtime.Remoting.Contexts.Context"/> implementing this instance of 
<see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/> is locked.</para>
		</value>
		<remarks>
			<para>When a synchronized <see cref="System.Runtime.Remoting.Contexts.Context"/> is locked, only the thread 
   currently executing in it has access to objects in the <see cref="System.Runtime.Remoting.Contexts.Context"/>.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.GetClientContextSink">
		<summary>
			<para>Creates a CallOut sink and chains it in front of the provided chain of sinks 
      at the context boundary on the client end of a remoting call.</para>
		</summary>
		<param name="nextSink">The chain of sinks composed so far.</param>
		<returns>
			<para> The composite 
      sink chain with the new CallOut sink.</para>
		</returns>
		<remarks>
			<para>The current method is an implementation of <see cref="System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.NOT_SUPPORTED">
		<summary>
			<para> Indicates that the class to which this attribute is applied cannot be created in a
      context that has synchronization. This field is constant.</para>
		</summary>
	</doc><doc for="SynchronizationAttribute.SUPPORTED">
		<summary>
			<para>Indicates that the class to which this attribute is applied is not dependent on whether the
      context has synchronization. This field is constant.</para>
		</summary>
	</doc><doc for="SynchronizationAttribute.REQUIRED">
		<summary>
			<para>Indicates that the class to which this attribute is applied must be created in a
      context that has synchronization. This field is constant.</para>
		</summary>
	</doc><doc for="SynchronizationAttribute.IsReEntrant">
		<summary>
			<para> Gets or sets a
      Boolean value indicating whether reentry is required.</para>
		</summary>
		<value>
			<para>A Boolean value indicating whether reentry is
      required.</para>
		</value>
		<remarks>
			<para>If reentry is required, callouts out of the <see cref="System.Runtime.Remoting.Contexts.Context"/> to which the current attribute
   is applied must be intercepted and serialized.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.SynchronizationAttribute1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/> class with a Boolean value
   indicating whether reentry is required.</para>
		</summary>
		<param name="reEntrant">A Boolean value indicating whether reentry is required.</param>
		<remarks>
			<para>If reentry is required, callouts out of the <see cref="System.Runtime.Remoting.Contexts.Context"/> to which the current attribute
   is applied must be intercepted and serialized.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.SynchronizationAttribute2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/>
class with a flag indicating the behavior of the object to which this attribute is applied.</para>
		</summary>
		<param name="flag">An integer value indicating the behavior of the object to which this attribute is applied.</param>
		<exception cref="System.ArgumentException">The <paramref name="flag"/> parameter was not one of the defined flags.</exception>
		<remarks>
			<para>The <paramref name="flag"/> parameter must be either <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED"/>, <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED"/>, <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED"/>, or <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW"/>.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.SynchronizationAttribute3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/>
class with a flag indicating the behavior of the object to which this attribute is applied, and a Boolean value indicating whether reentry is required.</para>
		</summary>
		<param name="flag">An integer value indicating the behavior of the object to which this attribute is applied.</param>
		<param name=" reEntrant"><see langword="true"/> if reentry is required, and callouts must be intercepted and serialized; otherwise, <see langword="false"/> .</param>
		<exception cref="System.ArgumentException">The <paramref name="flag"/> parameter was not one of the defined flags.</exception>
		<remarks>
			<para>The <paramref name="flag"/> parameter must be either <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.NOT_SUPPORTED"/>,
<see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.SUPPORTED"/>, 
<see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRED"/>, or 
<see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute.REQUIRES_NEW"/>.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.GetPropertiesForNewContext">
		<summary>
			<para>Adds the <see langword="Synchronized"/> context property to the specified
<see cref="System.Runtime.Remoting.Activation.IConstructionCallMessage"/> .</para>
		</summary>
		<param name="ctorMsg">The <see cref="System.Runtime.Remoting.Activation.IConstructionCallMessage"/> to which to add the property.</param>
	</doc><doc for="SynchronizationAttribute.GetServerContextSink">
		<summary>
			<para>Creates a synchronized dispatch sink and chains it in
      front of the provided chain of sinks at the context boundary on
      the server end of a remoting call.</para>
		</summary>
		<param name="nextSink">The chain of sinks composed so far.</param>
		<returns>
			<para>The composite sink chain with the new synchronized
      dispatch sink.</para>
		</returns>
		<remarks>
			<para>The current method is an implementation of <see cref="System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink" qualify="true"/>.</para>
		</remarks>
	</doc><doc for="SynchronizationAttribute.IsContextOK">
		<summary>
			<para>Returns a Boolean value indicating whether the context
      parameter meets the context attribute's requirements.</para>
		</summary>
		<param name="ctx"><para> The context to check.</para></param>
		<param name=" msg">Information gathered at construction time of the context bound object marked by this attribute. The <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/> can inspect, add to, and remove properties from the context while determining if the context is acceptable to it.</param>
		<returns>
			<para><see langword="true"/> if the passed
   in context is OK; otherwise, <see langword="false"/>
   .</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="ctx"/> or <paramref name="msg"/> parameter is <see langword="null"/>.</exception>
	</doc><doc for="SynchronizationAttribute.REQUIRES_NEW">
		<summary>
			<para> Indicates that the class to which this attribute is
      applied must be created in a context with a new instance of the
      synchronization property each time. This field is constant.</para>
		</summary>
	</doc><doc for="SynchronizationAttribute">
		<summary>
			<para>Enforces a synchronization domain for the current
      context and all contexts that share the same instance.</para>
		</summary>
		<remarks>
			<para> When this attribute is applied to an object,
      only one thread can be executing in all contexts that share an instance
      of this property. This is done by contributing sinks that intercept and
      serialize incoming calls for the respective contexts. If the property is marked
      for reentry, then callouts are intercepted too. The callout interception
      allows other waiting threads to enter the synchronization domain for maximal
      throughput.</para>
			<note type="note">
      There are two classes named
   <see langword="SynchronizationAttribute"/>
   
   : one in the <see cref="System.Runtime.Remoting.Contexts"/>
   namespace, and the other in the <see cref="N:System.EnterpriseServices"/> namespace. The <see cref="T:System.EnterpriseServices.SynchronizationAttribute" qualify="true"/> class
   supports only synchronous calls, and can be used only with serviced components.
   (For more information on serviced components, see <see topic="cpconservicedcomponentoverview"/>
   .) The <see cref="T:System.Runtime.Remoting.Contexts.SynchronizationAttribute" qualify="true"/>
   supports both synchronous and asynchronous calls, and can be used only with
   context bound objects. (For more information on context bound objects, see
   the <see cref="System.ContextBoundObject"/> class.)
   
</note>
			<note type="note">
   This class makes a
   link demand and an inheritance demand at the
   class level. A <see cref="System.Security.SecurityException"/> is thrown when
   either the immediate caller or the derived class does not have infrastructure permission. For details about security
   demands, see <see topic="cpconLinkDemands"/> and <see topic="cpconInheritanceDemands"/>.
</note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.InheritanceDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<example>
			<para>The following code example demonstrates the use of the <see cref="System.Runtime.Remoting.Contexts.SynchronizationAttribute"/>. For the complete example
   code, see the example for the <see cref="System.Runtime.Remoting.Messaging.AsyncResult"/> class.</para>
			<codelink SampleID="AsyncResult.NewExamples" SnippetID="2"/>
		</example>
	</doc>
</docs>
