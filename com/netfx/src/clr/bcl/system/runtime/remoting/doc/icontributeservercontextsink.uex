<docs>
	<doc for="IContributeServerContextSink.GetServerContextSink">
		<summary>
			<para> Takes the
      first sink in the chain of sinks composed so far, chains its message sink in
      front of the chain formed.
      </para>
		</summary>
		<param name="nextSink">The chain of sinks composed so far. </param>
		<returns>
			<para> The composite sink chain.
      </para>
		</returns>
	</doc><doc for="IContributeServerContextSink">
		<summary>
			<para>Contributes an interception sink at the context boundary on the server end of
      a remoting call. </para>
		</summary>
		<remarks>
			<para>The <see cref="System.Runtime.Remoting.Contexts.IContributeServerContextSink"/> interface is implemented by
   context properties in a <see cref="System.Runtime.Remoting.Contexts.Context"/> that want to contribute an
   interception sink at the context boundary on the server end of a remoting call. </para>
			<para>The Server Context Chain is composed from those properties in the server
   context that implement the <see cref="System.Runtime.Remoting.Contexts.IContributeServerContextSink"/> interface and
   which contribute a sink by using the <see cref="System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink"/>
   
   method call. Serialization is an example
   of such a context property, that is in this case the message sink would
   involve taking a synchronization primitive lock before processing a call further. </para>
		</remarks>
	</doc></docs>
