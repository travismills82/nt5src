<docs>
	<doc for="SoapOption.AlwaysIncludeTypes">
		<summary>
			<para>Indicates that type will always be included on SOAP 
      elements. This option is useful when performing SOAP interop with SOAP implementations that require types on all elements.</para>
		</summary>
	</doc><doc for="SoapOption.EmbedAll">
		<summary>
			<para> Indicates that SOAP will be generated without
      references.</para>
		</summary>
	</doc><doc for="SoapTypeAttribute.XmlElementName">
		<summary>
			<para>Gets or sets the XML element name.</para>
		</summary>
		<value>
			<para>The XML element name.</para>
		</value>
	</doc><doc for="SoapMethodAttribute.ResponseXmlElementName">
		<summary>
			<para> Gets or sets the XML element name to use for the method response to the target method.
      </para>
		</summary>
		<value>
			<para>The XML element name to use for the method response to the target method.</para>
		</value>
		<remarks>
			<para>The default value of this property is the string 
      "Response" appended to the name of the method.</para>
		</remarks>
	</doc><doc for="SoapMethodAttribute.ResponseXmlNamespace">
		<summary>
			<para> Gets or sets the XML element namesapce used for method response to the target method.
      </para>
		</summary>
		<value>
			<para>The XML element namesapce used for method response to the target method. </para>
		</value>
	</doc><doc for="SoapOption.None">
		<summary>
   The default option indicating that no extra options are
   selected.
</summary>
	</doc><doc for="SoapAttribute.ProtXmlNamespace">
		<summary>
			<para>Public reserved field, must be internalonly.</para>
		</summary>
	</doc><doc for="SoapAttribute.ReflectInfo">
		<summary>
			<para>Public reserved field, must be internalonly.</para>
		</summary>
	</doc><doc for="SoapOption.Option1">
		<summary>
			<para>Public reserved option for temporary interop conditions, the use will
      change.</para>
		</summary>
	</doc><doc for="SoapOption.Option2">
		<summary>
			<para>Public reserved option for temporary interop conditions, the use will
      change.</para>
		</summary>
	</doc><doc for="XmlFieldOrderOption">
		<summary>
			<para>Public reserved, will be &lt;internalonly/&gt;.</para>
		</summary>
	</doc><doc for="XmlFieldOrderOption.All">
		<summary>
			<para>Public reserved, will be &lt;internalonly/&gt;.</para>
		</summary>
	</doc><doc for="XmlFieldOrderOption.Sequence">
		<summary>
			<para>Public reserved, will be &lt;internalonly/&gt;.</para>
		</summary>
	</doc><doc for="XmlFieldOrderOption.Choice">
		<summary>
			<para>Public reserved, will be &lt;internalonly/&gt;.</para>
		</summary>
	</doc><doc for="SoapFieldAttribute.IsInteropXmlElement">
		<summary>
			<para> Returns a value indicating whether the current attribute contains interop XML element values.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if the current attribute contains interop XML element
   values; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SoapTypeAttribute.XmlNamespace">
		<summary>
			<para> Gets or sets the XML namespace that 
      is used during serialization of the target object type.</para>
		</summary>
		<value>
			<para> The XML namespace that is used during serialization of the 
      target object type.</para>
		</value>
	</doc><doc for="SoapMethodAttribute.XmlNamespace">
		<summary>
			<para>Gets or sets the XML namespace that is used during 
      serialization of remote method calls of the target method.</para>
		</summary>
		<value>
			<para>The XML namespace that is used during serialization of remote method calls of 
      the target method.</para>
		</value>
	</doc><doc for="SoapTypeAttribute.XmlTypeName">
		<summary>
			<para>Gets or sets the XML type name for the target object type.</para>
		</summary>
		<value>
			<para>The XML type name for the target object type.</para>
		</value>
	</doc><doc for="SoapTypeAttribute.XmlTypeNamespace">
		<summary>
			<para>Gets or sets the XML type namespace for the current object type.</para>
		</summary>
		<value>
			<para>The XML type namespace for the current object type.</para>
		</value>
	</doc><doc for="SoapTypeAttribute.XmlFieldOrder">
		<summary>
			<para>Public reserved, soon to be &lt;internalonly/&gt;.</para>
		</summary>
		<value>
			<para>An <see cref="System.Runtime.Remoting.Metadata.XmlFieldOrderOption"/> value indicating </para>
		</value>
	</doc><doc for="SoapFieldAttribute.Order">
		<summary>
			<para>Public reserved, to be &lt;internalonly/&gt;.</para>
		</summary>
	</doc><doc for="SoapFieldAttribute.XmlElementName">
		<summary>
			<para>Gets or sets the XML element name of the field contained 
      in the <see cref="System.Runtime.Remoting.Metadata.SoapFieldAttribute"/>
      attribute.</para>
		</summary>
		<value>
			<para>The XML element name of the field contained in this attribute.</para>
		</value>
	</doc><doc for="SoapAttribute.XmlNamespace">
		<summary>
			<para>Gets or sets the XML namespace name.</para>
		</summary>
		<value>
			<para>The XML namespace name under which the target of the
      current attribute is serialized.</para>
		</value>
		<remarks>
			<para>If the current property returns <see langword="null"/> , then the
   namespace is not qualified.</para>
		</remarks>
	</doc><doc for="SoapAttribute.Embedded">
		<summary>
			<para> Gets or sets a value indicating whether the type
      must be nested during SOAP serialization.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the target object must be nested during SOAP serialization;
   otherwise, <see langword="false "/>.</para>
		</value>
	</doc><doc for="SoapAttribute.UseAttribute">
		<summary>
			<para>Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute
      instead of an XML field.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the target object of the current attribute must be
   serialized as an XML attribute; <see langword="false"/> if the target object must
   be serialized as a subelement.</para>
		</value>
		<remarks>
			<para>For example, if a field <c>FieldA</c> of an object <c>ObjectB</c> is qualified with the
   <c>SoapFieldAttribute(UseAttribute=true)</c> attribute, <c>FieldA</c> will be serialized as
   <c>&lt;ObjectB&gt;&lt;FieldA&gt;5&lt;/FieldA&gt;&lt;/ObjectB&gt;</c>.
   If the <see cref="System.Runtime.Remoting.Metadata.SoapAttribute.UseAttribute"/> property
   is set to <see langword="false"/>, <c>FieldA</c> will be serialized as
<c>&lt;ObjectB FieldA="5"&gt;&lt;/ObjectB&gt;</c>.</para>
		</remarks>
	</doc><doc for="SoapAttribute">
		<summary>
			<para> Provides default functionality for all SOAP attributes.</para>
		</summary>
		<remarks>
			<para>The<see cref="System.Runtime.Remoting.Metadata.SoapAttribute"/> is
   nonfunctional, and can be used only as the base class for SOAP attributes.</para>
		</remarks>
	</doc><doc for="SoapOption">
		<summary>
			<para>Specifies the SOAP configuration options for use with the
   <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/>
   class.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Runtime.Remoting.Metadata.SoapOption"/> enumeration is used to specify
   instructions to the .NET Framework on how it will generate the SOAP. </para>
		</remarks>
	</doc><doc for="SoapTypeAttribute.UseAttribute">
		<summary>
			<para>Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute
      instead of an XML field.</para>
		</summary>
		<value>
			<para>The current implementation always returns 
   <see langword="false"/> 
   .</para>
		</value>
		<exception cref="System.Runtime.Remoting.RemotingException">An attempt was made to set the current property.</exception>
		<remarks>
			<para>The <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute.UseAttribute"/> property cannot be set on the 
<see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/> attribute.</para>
		</remarks>
	</doc><doc for="SoapMethodAttribute.UseAttribute">
		<summary>
			<para>Gets or sets a value indicating whether the target of the current attribute will be serialized as an XML attribute
      instead of an XML field.</para>
		</summary>
		<value>
			<para>The current implementation always returns 
   <see langword="false"/> 
   .</para>
		</value>
		<exception cref="System.Runtime.Remoting.RemotingException">An attempt was made to set the current property.</exception>
		<remarks>
			<para>The <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute.UseAttribute"/> property cannot be set on the 
<see cref="System.Runtime.Remoting.Metadata.SoapMethodAttribute"/> attribute.</para>
		</remarks>
	</doc><doc for="SoapFieldAttribute">
		<summary>
			<para>Customizes SOAP generation and processing for a field. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The target objects for the <see cref="System.Runtime.Remoting.Metadata.SoapFieldAttribute"/>
attribute are object
fields. The <see cref="System.Runtime.Remoting.Metadata.SoapFieldAttribute"/>
attribute is used to specify information
that controls how the .NET Framework generates the SOAP XML wire format for
target fields.</para>
		</remarks>
		<example>
			<para>The following code example demonstrates customization of SOAP generated for a
      field of a class with the <see cref="System.Runtime.Remoting.Metadata.SoapFieldAttribute"/>. The
      SOAP can be produced by the code shown in the <see cref="System.SerializableAttribute"/>
      class example.</para>
			<codelink SampleID="SoapAttributes1" SnippetID="1"/>
		</example>
	</doc><doc for="SoapOption.XsdString">
		<summary>
			<para>Indicates that the output SOAP string type in a SOAP
      Envelope is using the <see langword="XSD"/> prefix, and that
      the resulting XML does not have
      an ID attribute for the string.</para>
			<para>For example, while a class by default might be remoted
      in the SOAP format as </para>
			<code>
&lt;member1&gt;10&lt;/member1&gt;
&lt;member2 id="ref-3"&gt;hello&lt;/member2&gt;
&lt;member3 href="#ref-3"/&gt;
&lt;member4 href="#ref-4"/&gt;
&lt;member4shared href="#ref-4"/&gt;
&lt;member5 href="#ref-5"/&gt;
&lt;member6 id="ref-6" xsi:type="SOAP-ENC:string"&gt;Hello World&lt;/member6&gt;
&lt;str1 id="ref-7"&gt;hello &amp;#60; world&lt;/str1&gt;
&lt;str2 id="ref-8"&gt;&amp;#60;&lt;/str2&gt;
&lt;str3 id="ref-9"&gt;&amp;#60; world&lt;/str3&gt;
&lt;str4 href="#ref-7"/&gt;
   </code>
			<para> remoting serialization with the
   <see langword="XsdString"/> option
      would produce the following XML.</para>
			<code>
&lt;member1 xsi:type="xsd:int"&gt;10&lt;/member1&gt;
&lt;member2 xsi:type="xsd:string"&gt;hello&lt;/member2&gt;
&lt;member3 xsi:type="xsd:string"&gt;hello&lt;/member3&gt;
&lt;member4 href="#ref-3"/&gt;
&lt;member4shared href="#ref-3"/&gt;
&lt;member5 href="#ref-4"/&gt;
&lt;member6 xsi:type="xsd:string"&gt;Hello World&lt;/member6&gt;
&lt;str1 xsi:type="xsd:string"&gt;hello &amp;#60; world&lt;/str1&gt;
&lt;str2 xsi:type="xsd:string"&gt;&amp;#60;&lt;/str2&gt;
&lt;str3 xsi:type="xsd:string"&gt;&amp;#60; world&lt;/str3&gt;
&lt;str4 xsi:type="xsd:string"&gt;hello &amp;#60; world&lt;/str4&gt;
   </code>
			<para> For more information about SOAP envelopes,
      see www.w3.org/tr/soap/#_Toc478383494.</para>
		</summary>
	</doc><doc for="SoapTypeAttribute">
		<summary>
			<para>Customizes SOAP generation and processing for target types. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/>
attribute is a custom attribute that can be
applied to objects, value types, and interface objects. This attribute is used to
specify information on an object type that controls how SOAP will generate the
SOAP XML wire format.</para>
		</remarks>
		<example>
			<para> The following code example demonstrates customization of SOAP generated for a
      class with the <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/>. The SOAP can be
      produced by the code shown in the <see cref="System.SerializableAttribute"/> class example.</para>
			<codelink SampleID="SoapAttributes1" SnippetID="1"/>
		</example>
	</doc><doc for="SoapTypeAttribute.SoapOptions">
		<summary>
			<para>Gets or sets a <see cref="System.Runtime.Remoting.Metadata.SoapOption"/> configuration
   value.</para>
		</summary>
		<value>
			<para>A <see cref="System.Runtime.Remoting.Metadata.SoapOption"/> value.</para>
		</value>
		<remarks>
			<para>A <see cref="System.Runtime.Remoting.Metadata.SoapOption"/> value indicates the SOAP configuration options
   that will be used with a <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/>
   attribute.</para>
			<note type="note">
   The <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute.SoapOptions"/> enumeration has no effect on
   serialization of objects with the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>.
</note>
		</remarks>
	</doc><doc for="SoapMethodAttribute">
		<summary>
			<para> Customizes SOAP generation and processing for a method. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The target objects for the <see cref="System.Runtime.Remoting.Metadata.SoapMethodAttribute"/>
attribute are methods that
can be remotely invoked. Apply the <see cref="System.Runtime.Remoting.Metadata.SoapMethodAttribute"/>
to customize SOAP generation and processing. Properties of this attribute allow
the programmer to customize the SOAPAction HTTP header field to indicate the intent
of the SOAP HTTP request. </para>
		</remarks>
	</doc><doc for="SoapMethodAttribute.SoapAction">
		<summary>
			<para>Gets or sets the SOAPAction header field used with HTTP
      requests sent with this method.</para>
		</summary>
		<value>
			<para>The SOAPAction header field used with HTTP requests sent with this
      method.</para>
		</value>
		<remarks>
			<para> The SOAPAction HTTP request header field indicates
      the intent of the SOAP HTTP request. For more information on the
      SOAPAction field, see
      
      www.w3.org/tr/soap/#_Toc478383528. </para>
		</remarks>
	</doc><doc for="SoapMethodAttribute.ReturnXmlElementName">
		<summary>
			<para>Gets or sets the XML element name used for the return
      value from the target method.</para>
		</summary>
		<value>
			<para>The XML element name used for the return value from the target method.</para>
		</value>
		<remarks>
			<para>The default value of this property is the "__return" 
      string. </para>
		</remarks>
	</doc><doc for="SoapParameterAttribute">
		<summary>
			<para>Customizes SOAP generation and processing for a
      parameter. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The target objects for the <see cref="System.Runtime.Remoting.Metadata.SoapParameterAttribute"/>
attributes are parameters of method calls
that are remotely invoked. The <see cref="System.Runtime.Remoting.Metadata.SoapParameterAttribute"/>
is used to specify information that controls how the .NET Framework generates the
SOAP XML wire format for target parameters.</para>
		</remarks>
	</doc></docs>
