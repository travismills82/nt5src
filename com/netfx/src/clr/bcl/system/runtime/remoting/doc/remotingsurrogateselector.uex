<docs>
	<doc for="RemotingSurrogateSelector.RemotingSurrogateSelector">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector"/> class.
   </para>
		</summary>
	</doc><doc for="RemotingSurrogateSelector.SetRootObject">
		<summary>
			<para>Sets the object at the root of the object graph.</para>
		</summary>
		<param name="obj">The object at the root of the object graph.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="obj"/> parameter is <see langword="null"/>.</exception>
	</doc><doc for="RemotingSurrogateSelector.GetRootObject">
		<summary>
			<para>Returns the object at the root of the object graph.</para>
		</summary>
		<returns>
			<para>The object at the root of the object graph.</para>
		</returns>
	</doc><doc for="RemotingSurrogateSelector.GetNextSelector">
		<summary>
			<para>Returns the next <see cref="System.Runtime.Serialization.ISurrogateSelector"/>in the chain of surrogate selectors.</para>
		</summary>
		<returns>
			<para>The next <see cref="System.Runtime.Serialization.ISurrogateSelector"/> in the chain of surrogate selectors.</para>
		</returns>
	</doc><doc for="RemotingSurrogateSelector.Filter">
		<summary>
			<para>Gets or sets the <see cref="System.Runtime.Remoting.Messaging.MessageSurrogateFilter"/>
delegate for the current instance of the <see cref="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector"/>.</para>
		</summary>
		<value>
			<para>The <see cref="System.Runtime.Remoting.Messaging.MessageSurrogateFilter"/> delegate for the current
   instance of the <see cref="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector"/>.</para>
		</value>
	</doc><doc for="RemotingSurrogateSelector.ChainSelector">
		<summary>
			<para>Adds the specified <see cref="System.Runtime.Serialization.ISurrogateSelector"/> to the surrogate selector chain.</para>
		</summary>
		<param name="selector">The next <see cref="System.Runtime.Serialization.ISurrogateSelector"/> to examine. </param>
		<remarks>
			<para>Remoting surrogates are arranged in chains that are attached to an instance of the <see cref="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector"/> 
. Each chain contains the remoting surrogates that the surrogate selector checks
to find a compatible surrogate for a given object type. The current method
adds a new remoting surrogate selector to the surrogate chain that is examined
for compatible surrogates.</para>
		</remarks>
	</doc><doc for="RemotingSurrogateSelector.GetSurrogate">
		<summary>
			<para> Returns the appropriate surrogate for the given type in the given
      context.
      </para>
		</summary>
		<param name="type">The <see cref="System.Type"/> for which the surrogate is requested. </param>
		<param name="context">The source or destination of serialization. </param>
		<param name="ssout">When this method returns, contains an <see cref="System.Runtime.Serialization.ISurrogateSelector"/> that is appropriate for the specified object type. This parameter is passed uninitialized.</param>
		<returns>
			<para> The appropriate surrogate for the given type in the given
      context.
      </para>
		</returns>
		<remarks>
			<para> A remoting surrogate handles the remoting
      serialization requirements of an object that derives from a <see cref="System.MarshalByRefObject"/>.
      During serialization of an object that derives from <see cref="System.MarshalByRefObject"/> to a
      remote location, the remoting surrogate creates an <see cref="System.Runtime.Remoting.ObjRef"/> that contains all the
      relevant information required to activate and communicate with the remote
      object. The newly created <see cref="System.Runtime.Remoting.ObjRef"/> can then be sent to a remote location
      and used to create a proxy.</para>
		</remarks>
	</doc><doc for="RemotingSurrogateSelector.UseSoapFormat">
		<summary>
   Sets up the current surrogate selector to use the SOAP
   format.
</summary>
		<remarks>
			<para>The current method is used with the SOAP formatter sinks.</para>
		</remarks>
	</doc><doc for="MessageSurrogateFilter">
		<nodoc/>
		<summary>
			<para>Reserved class, for internal use only.</para>
		</summary>
	</doc>
	<doc for="RemotingSurrogateSelector">
		<summary>
			<para> Selects the remoting surrogate that can be used
      to serialize an object that derives from a <see cref="System.MarshalByRefObject"/>.</para>
		</summary>
		<remarks>
			<para> A surrogate is an object that can handle the
      serialization requirements of an object. Remoting
      surrogates handle remoting serialization requirements of objects that derive from <see cref="System.MarshalByRefObject"/>. The <see cref="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector"/> manages registered surrogates
      for use by the <see cref="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/> and <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>.
      </para>
			<para>During serialization for remoting purposes of a <see cref="System.MarshalByRefObject"/>, the
   remoting surrogate creates an <see cref="System.Runtime.Remoting.ObjRef"/>
   that contains all the relevant information required to activate and
   communicate with the remote object. The newly created <see cref="System.Runtime.Remoting.ObjRef"/> can then be
   sent to a remote location and used to create a proxy.</para>
			<note type="note">
   This class makes a
   link demand and an inheritance demand at the
   class level. A <see cref="System.Security.SecurityException"/> is thrown when
   either the immediate caller or the derived class does not have infrastructure permission. For details about security
   demands, see <see topic="cpconLinkDemands"/> and <see topic="cpconInheritanceDemands"/>.
   
</note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.InheritanceDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<seealso cref="T:System.Runtime.Remoting.ObjRef"/>
		<seealso cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>
		<seealso cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/>
	</doc>
</docs>
