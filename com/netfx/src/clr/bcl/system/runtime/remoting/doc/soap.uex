<docs>
	<doc for="SoapServices.RegisterInteropXmlElement">
		<summary>
			<para> Associates the given XML element name and namespace with a run-time type
      that should be used for deserialization.
      </para>
		</summary>
		<param name="xmlElement"> The XML element name to use in deserialization.</param>
		<param name=" xmlNamespace"> The XML namespace to use in deserialization.</param>
		<param name=" type">The run-time <see cref="System.Type"/> to use in deserialization.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<seealso cref="System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement"/>
	</doc>
	<doc for="SoapServices.RegisterInteropXmlType">
		<summary>
			<para> Associates the given XML type name and namespace with the run-time type
      that should be used for deserialization.
      </para>
		</summary>
		<param name="xmlType"> The XML type to use in deserialization.</param>
		<param name=" xmlTypeNamespace"> The XML namespace to use in deserialization.</param>
		<param name=" type">The run-time <see cref="System.Type"/> to use in deserialization.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="SoapServices.PreLoad">
		<overload>
			<para> Preloads specified types based on values set
      in the <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/> applied to the types.</para>
		</overload>
		<summary>
			<para> Preloads the given <see cref="System.Type"/> based on values set in a <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/> on the type.
   </para>
		</summary>
		<param name="type">The <see cref="System.Type"/> to preload.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>When the .NET Framework is parsing an XML stream, it
      needs to know how to convert the XML read from the stream into common language run-time types. The information that specifies how the .NET Framework should
      generate and parse an XML stream is stored in custom attributes that are located
      in the <see cref="System.Runtime.Remoting.Metadata"/> namespace. There are two ways to specify
      this information in a configuration file: either by explicitly specifying the
      mappings, or by specifying which object types to preload. The custom attributes
      are read during the preloading process and the information in them is made
      available to the SOAP parser.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.PreLoad2">
		<summary>
			<para> Preloads every <see cref="System.Type"/> found in the specified <see cref="System.Reflection.Assembly"/> from the information found in the
<see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/> associated with each
   type. </para>
		</summary>
		<param name="assembly">The <see cref="System.Reflection.Assembly"/> for each type of which to call <see cref="System.Runtime.Remoting.SoapServices.PreLoad"/>.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>When the .NET Framework is parsing an XML stream, it needs to know how to
      convert the XML read from the stream into common language run-time
      types. The information that specifies how the .NET Framework should generate
      and parse an XML stream is stored in custom attributes that are located in the
      <see cref="System.Runtime.Remoting.Metadata"/> namespace. There are two ways to specify
      this information in a configuration file: either by explicitly specifying the
      mappings, or by specifying which object types to preload. The custom attributes
      are read during the preloading process and the information in them is made
      available to the SOAP parser.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.GetInteropTypeFromXmlElement">
		<summary>
			<para> Retrieves the <see cref="System.Type"/>
that should be used during deserialization of an unrecognized object type with the
given XML element name and
namespace.</para>
		</summary>
		<param name="xmlElement">The XML element name of the unknown object type.</param>
		<param name=" xmlNamespace">The XML namespace of the unknown object type.</param>
		<returns>
			<para>The <see cref="System.Type"/> of
   object associated with the specified XML element name and namespace.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>The current method returns values set up through <see cref="System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement"/> and <see cref="System.Runtime.Remoting.SoapServices.PreLoad"/>.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.GetInteropTypeFromXmlType">
		<summary>
			<para>Retrieves the object <see cref="System.Type"/> that should used be during deserialization
   of an unrecognized object type with the given XML type name and namespace.</para>
		</summary>
		<param name="xmlType">The XML type of the unknown object type.</param>
		<param name=" xmlTypeNamespace">The XML type namespace of the unknown object type.</param>
		<returns>
			<para>The <see cref="System.Type"/> of
   object associated with the specified XML type name and namespace.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>The current method returns values set up through <see cref="System.Runtime.Remoting.SoapServices.RegisterInteropXmlType"/> and <see cref="System.Runtime.Remoting.SoapServices.PreLoad"/>.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.GetInteropFieldTypeAndNameFromXmlElement">
		<summary>
			<para> Retrieves the <see cref="System.Type"/> and name of a field from the provided XML element name, namespace, and the containing type.
   </para>
		</summary>
		<param name="containingType">The <see cref="System.Type"/> of the object containing the field.</param>
		<param name=" xmlElement">The XML element name of field.</param>
		<param name=" xmlNamespace">The XML namespace of the field type.</param>
		<param name=" type">When this method returns, contains a <see cref="System.Type"/> of the field. This parameter is passed uninitialized.</param>
		<param name=" name">When this method returns, contains a <see cref="System.String"/> that holds the name of the field. This parameter is passed uninitialized.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>Given the type of the containing object and the XML element and XML namespace
      that is read in by the .NET Framework, this method returns the
      actual common language run-time field name and type of the
      field. The .NET Framework then uses this information to populate that
      field with the data read in from the XML stream.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute">
		<summary>
			<para> Retrieves field type from XML attribute name, namespace,
      and the <see cref="System.Type"/> of the containing object.
      </para>
		</summary>
		<param name="containingType">The <see cref="System.Type"/> of the object containing the field.</param>
		<param name="xmlAttribute">The XML attribute name of the field type.</param>
		<param name="xmlNamespace">The XML namespace of the field type.</param>
		<param name="type">When this method returns, contains a <see cref="System.Type"/> of the field. This parameter is passed uninitialized.</param>
		<param name="name">When this method returns, contains a <see cref="System.String"/> that holds the name of the field. This parameter is passed uninitialized.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para> Given the type of the containing object and the XML attribute and
      XML namespace that is read in by the .NET Framework, the current method returns
      the actual common language run-time field name and type of the
      field. The .NET Framework then uses this information to populate that
      field with the data read in from the XML stream.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.GetXmlElementForInteropType">
		<summary>
			<para> Returns
      XML element information that should be used when serializing the given type.
      </para>
		</summary>
		<param name="type">The object <see cref="System.Type"/> for which the XML element and namespace names were requested.</param>
		<param name=" xmlElement">When this method returns, contains a <see cref="System.String"/> that holds the XML element name of the specified object type. This parameter is passed uninitialized.</param>
		<param name=" xmlNamespace">When this method returns, contains a <see cref="System.String"/> that holds the XML namespace name of the specified object type. This parameter is passed uninitialized.</param>
		<returns>
			<para><see langword="true"/> if the requested values have been set flagged with
<see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/>; 
   otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<seealso cref="System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement"/>
	</doc>
	<doc for="SoapServices.GetXmlTypeForInteropType">
		<summary>
			<para>Returns XML type information that should be used when
      serializing the given <see cref="System.Type"/>.
      </para>
		</summary>
		<param name="type">The object <see cref="System.Type"/> for which the XML element and namespace names were requested.</param>
		<param name=" xmlType">The XML type of the specified object <see cref="System.Type"/>.</param>
		<param name=" xmlTypeNamespace">The XML type namespace of the specified object <see cref="System.Type"/>.</param>
		<returns>
			<para><see langword="true"/> if the
   requested values have been set flagged with <see cref="System.Runtime.Remoting.Metadata.SoapTypeAttribute"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<seealso cref="System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement"/>
	</doc>
	<doc for="SoapServices.GetXmlNamespaceForMethodCall">
		<summary>
			<para>Retrieves the XML namespace used during remote calls of
      the method specified in the given <see cref="System.Reflection.MethodBase"/>.</para>
		</summary>
		<param name="mb">The <see cref="System.Reflection.MethodBase"/> of the method for which the XML namespace was requested.</param>
		<returns>
			<para>The XML namespace used during remote calls of the specified method.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="SoapServices.GetXmlNamespaceForMethodResponse">
		<summary>
			<para> Retrieves the XML namespace used during the generation
      of responses to the remote call to the method specified in the given
      <see cref="System.Reflection.MethodBase"/> .
      </para>
		</summary>
		<param name="mb">The <see cref="System.Reflection.MethodBase"/> of the method for which the XML namespace was requested.</param>
		<returns>
			<para>The XML namespace used during the generation of responses to a remote method
      call. </para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="SoapServices.RegisterSoapActionForMethodBase">
		<overload>
			<para> Associates a SOAPAction value with the provided
      <see cref="System.Reflection.MethodBase"/>.
      </para>
		</overload>
		<summary>
			<para>Associates the specified <see cref="System.Reflection.MethodBase"/>
with the SOAPAction cached with it.</para>
		</summary>
		<param name="mb">The <see cref="System.Reflection.MethodBase"/> of the method to associate with the SOAPAction cached with it.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>The SOAPAction of the specified method is contained in the <see cref="System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction" qualify="true"/> property,
   or is read off the wire. The current method associates the SOAPAction with
   the <see cref="System.Reflection.MethodBase"/>
   for use in channel sinks.</para>
			<para> The SOAPAction HTTP request header field indicates the intent
   of the SOAP HTTP request. The value is a URI identifying the intent. SOAP places
   no restrictions on the format or specificity of the URI or that it is
   resolvable. An HTTP client must use this header field when issuing a SOAP HTTP
   Request. </para>
		</remarks>
	</doc>
	<doc for="SoapServices.RegisterSoapActionForMethodBase1">
		<summary>
			<para> Associates the provided SOAPAction value with the
      given <see cref="System.Reflection.MethodBase"/> for use in
      channel sinks.
      </para>
		</summary>
		<param name="mb">The <see cref="System.Reflection.MethodBase"/> to associate with the provided SOAPAction.</param>
		<param name=" soapAction">The SOAPAction value to associate with the given <see cref="System.Reflection.MethodBase"/>.</param>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para> The SOAPAction HTTP request header field
      indicates the intent of the SOAP HTTP request. The value is a URI identifying the
      intent. SOAP places no restrictions on the format or specificity of the URI or that it is
      resolvable. An HTTP client must use this header field
      when issuing a SOAP HTTP Request.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.GetSoapActionFromMethodBase">
		<summary>
			<para> Returns the SOAPAction value associated
      with the method specified in the given <see cref="System.Reflection.MethodBase"/>.</para>
		</summary>
		<param name="mb">The <see cref="System.Reflection.MethodBase"/> containing the method for which a SOAPAction is requested.</param>
		<returns>
			<para> The SOAPAction value associated with the
      method specified in the given <see cref="System.Reflection.MethodBase"/>.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>If the given <see cref="System.Reflection.MethodBase"/> has not been registered with
   any SOAPAction value, the <see cref="System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase"/> method returns the SOAPAction
   automatically cached with the <see cref="System.Reflection.MethodBase"/>
   .</para>
		</remarks>
	</doc>
	<doc for="SoapServices.IsSoapActionValidForMethodBase">
		<summary>
			<para> Determines if the specified SOAPAction is acceptable for
      a given <see cref="System.Reflection.MethodBase"/>.
      </para>
		</summary>
		<param name="soapAction">The SOAPAction to check against the given <see cref="System.Reflection.MethodBase"/>.</param>
		<param name=" mb">The <see cref="System.Reflection.MethodBase"/> the specified SOAPAction is checked against.</param>
		<returns>
			<para><see langword="true "/>if the specified SOAPAction is
   acceptable for a given <see cref="System.Reflection.MethodBase"/>; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="SoapServices.GetTypeAndMethodNameFromSoapAction">
		<summary>
			<para> Determines the type and method name of the method associated with the specified SOAPAction value.
      </para>
		</summary>
		<param name="soapAction">The SOAPAction of the method for which the type and method names were requested.</param>
		<param name=" typeName">When this method returns, contains a <see cref="System.String"/> that holds the type name of the method in question. This parameter is passed uninitialized.</param>
		<param name=" methodName">When this method returns, contains a <see cref="System.String"/> that holds the method name of the method in question. This parameter is passed uninitialized.</param>
		<returns>
			<para><see langword="true "/>if the type and method name were successfully
   recovered; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.Runtime.Remoting.RemotingException">The SOAPAction value does not start and end with quotes.</exception>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para><see langword="true"/> if the type and method name
   lookups were successful; otherwise, <see langword="false"/>.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.XmlNsForClrType">
		<summary>
			<para> Gets the XML namespace prefix for
      common language run-time types.</para>
		</summary>
		<value>
			<para>The XML namespace prefix for common language run-time types.</para>
		</value>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>WSDL and SOAP protocols encode common language run-time classes into XML
      namespaces. The current property specifies the format for the XML
      namespaces. All XML namespaces for a common language run-time class start with the <see cref="System.String"/> that the current
      property returns.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.XmlNsForClrTypeWithAssembly">
		<summary>
			<para>Gets the default XML namespace prefix that should be used for XML encoding of a
      common language run-time class that has an assembly, but no native
      namespace.</para>
		</summary>
		<value>
			<para>The default XML namespace prefix that should be used for
      XML encoding of a common language run-time class that has an assembly, but
      no native namespace.</para>
		</value>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>WSDL and SOAP protocols encode common language run-time classes into XML namespaces. The current property
      specifies the format for the XML namespaces. If a common language run-time class has an assembly but no namespace, the
      current property returns the default XML namespace that is used. </para>
		</remarks>
	</doc>
	<doc for="SoapServices.XmlNsForClrTypeWithNs">
		<summary>
			<para>Gets the XML namespace prefix that should be used for XML encoding of a common
      language run-time class that is part of the mscorlib.dll file.</para>
		</summary>
		<value>
			<para>The XML namespace prefix that should be used for XML encoding of a common
      language run-time class that is part of the mscorlib.dll file.</para>
		</value>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>WSDL and SOAP protocols encode common language run-time classes into XML
      namespaces. The current property specifies the format for the XML namespaces. If a common language run-time class is part of the mscorlib assembly,
      the XML namespace returned by the current property is used. </para>
		</remarks>
	</doc>
	<doc for="SoapServices.XmlNsForClrTypeWithNsAndAssembly">
		<summary>
			<para>Gets the default XML namespace prefix that should be used for XML encoding of a
      common language run-time class that has both a common language run-time namespace and an
      assembly.</para>
		</summary>
		<value>
			<para>The default XML namespace prefix that should be used for XML encoding of a
      common language run-time class that has both a common language run-time namespace and an
      assembly.</para>
		</value>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>WSDL and SOAP protocols encode common language run-time classes into XML namespaces. The current property specifies
      the format for the XML namespaces. If a common language run-time class has an assembly and a common language run-time namespace, the current
      property returns the default XML namespace that is used. </para>
		</remarks>
	</doc>
	<doc for="SoapServices.IsClrTypeNamespace">
		<summary>
			<para>Returns a Boolean value indicating whether the specified
      namespace is native to the common language run-time.</para>
		</summary>
		<param name="namespaceString">The namespace to check in the common language run-time.</param>
		<returns>
			<para><see langword="true"/> if the given
   namespace is native to the
   common language run-time; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>The current method is used by the SoapSuds tool to determine whether
      an XML namespace represents a common language run-time type or a type from a non-common language run-time system. </para>
			<para>For more information on SoapSuds see <see topic="cpgrfsoapsudsutilitysoapsudsexe"/>.</para>
		</remarks>
	</doc>
	<doc for="SoapServices.CodeXmlNamespaceForClrTypeNamespace">
		<summary>
			<para> Returns the common language run-time type
      namespace name from the provided namespace and assembly names.</para>
		</summary>
		<param name="typeNamespace">The namespace that is to be coded.</param>
		<param name=" assemblyName">The name of the assembly that is to be coded.</param>
		<returns>
			<para>The common language run-time type namespace name from the provided namespace
      and assembly names.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="assemblyName"/> and <paramref name="typeNamespace "/>parameters are both either <see langword="null"/> or empty.</exception>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<remarks>
			<para>The current method is used by the .NET Framework and the SoapSuds tool to create
      an XML namespace name for a common language run-time object type.</para>
			<para>For more information on SoapSuds see
      <see topic="cpgrfsoapsudsutilitysoapsudsexe"/>. </para>
		</remarks>
	</doc>
	<doc for="SoapServices.DecodeXmlNamespaceForClrTypeNamespace">
		<summary>
			<para> Decodes the XML namespace and assembly names from
      the provided common language run-time namespace.</para>
		</summary>
		<param name="inNamespace">The common language run-time namespace.</param>
		<param name=" typeNamespace">When this method returns, contains a <see cref="System.String"/> that holds the decoded namespace name. This parameter is passed uninitialized.</param>
		<param name=" assemblyName">When this method returns, contains a <see cref="System.String"/> that holds the decoded assembly name. This parameter is passed uninitialized.</param>
		<returns>
			<para><see langword="true"/> if the namespace and assembly names
   were successfully decoded; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="inNamespace"/> parameter is <see langword="null"/> or empty.</exception>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission.</exception>
		<remarks>
			<para> When the .NET Framework is parsing an XML stream, it needs to know how
      to convert the XML read from the stream into common language run-time types.
      The information that specifies how the .NET Framework should generate and parse an
      XML stream is stored in custom attributes that are located in the <see cref="System.Runtime.Remoting.Metadata"/> namespace. There are two ways to
      specify this information in a configuration file: either by explicitly
      specifying the mappings, or by specifying which object types to preload.
      The current method supports the retrieval of such mappings.</para>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="SoapServices">
		<summary>
			<para> Provides several methods for using
      and publishing remoted objects in SOAP format.</para>
		</summary>
		<remarks>
			<note type="note">
      This class makes a Link demand. A SecurityException is thrown if the immediate caller does not
      have infrastructure permission. See <see topic="cpconLinkDemands"/> for more information.
   </note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
</docs>
