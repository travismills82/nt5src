<docs>
	<doc for="ClientSponsor.ClientSponsor1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/> class with the renewal time of 
   the sponsored object.</para>
		</summary>
		<param name="renewalTime">The <see cref="System.TimeSpan"/> by which to increase the lifetime of the sponsored objects when renewal is requested.</param>
	</doc><doc for="ClientSponsor.ClientSponsor">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/> class with default values.</para>
		</summary>
		<remarks>
			<para>The default time by which the lifetime of a sponsored 
      object is increased when renewal is requested to 2 minutes. For more information
      on the renewal time, see the <see cref="System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" qualify="true"/>
      property.</para>
		</remarks>
	</doc><doc for="ClientSponsor.Finalize">
		<summary>
			<para>Frees the resources of the current <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/> before the garbage
   collector reclaims them.</para>
		</summary>
	</doc><doc for="ClientSponsor">
		<summary>
			<para>Provides a default implementation for a lifetime sponsor class.</para>
		</summary>
		<remarks>
			<para>The current lifetime sponsor implementation can be used to sponsor objects by
      specifying the required renewal <see cref="System.TimeSpan"/>.</para>
			<note type="note">
      This class makes a
      link demand and an inheritance demand at the
      class level. A <see cref="System.Security.SecurityException"/> is thrown when
      either the immediate caller or the derived class does not have infrastructure permission. For details about security
      demands, see <see topic="cpconLinkDemands"/> and <see topic="cpconInheritanceDemands"/>.
      
   </note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.InheritanceDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="1"/>
		</example>
	</doc>
	<doc for="ClientSponsor.RenewalTime">
		<summary>
			<para>Gets or sets the <see cref="System.TimeSpan"/> by which to increase the lifetime of the sponsored
   objects when renewal is requested.</para>
		</summary>
		<value>
			<para>The <see cref="System.TimeSpan"/> by which
   to increase the lifetime of the sponsored objects when renewal is requested.</para>
		</value>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="2"/>
		</example>
	</doc>
	<doc for="ClientSponsor.Register">
		<summary>
			<para>Registers the specified <see cref="System.MarshalByRefObject"/> for sponsorship.</para>
		</summary>
		<param name="obj">The object to register for sponsorship with the <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/>.</param>
		<returns>
			<para><see langword="true"/> if
   registration succeeded; otherwise,
<see langword="false"/> .</para>
		</returns>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="2"/>
		</example>
	</doc>
	<doc for="ClientSponsor.Unregister">
		<summary>
			<para>Unregisters the specified <see cref="System.MarshalByRefObject"/> from
   the list of objects sponsored by the current <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/> .</para>
		</summary>
		<param name="obj">The object to unregister.</param>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="2"/>
		</example>
	</doc>
	<doc for="ClientSponsor.Renewal">
		<summary>
			<para>Requests a sponsoring client to renew the lease for the specified
      object.</para>
		</summary>
		<param name="lease">The lifetime lease of the object that requires lease renewal.</param>
		<returns>
			<para>The additional lease time for the specified object.</para>
		</returns>
		<remarks>
			<para>The <see cref="System.Runtime.Remoting.Lifetime.ISponsor.Renewal"/> method is called by the
   distributed garbage collector to renew the lease
   for the specified object.</para>
		</remarks>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="2"/>
		</example>
	</doc>
	<doc for="ClientSponsor.Close">
		<summary>
			<para>Empties the list objects registered with the current
   <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/> .</para>
		</summary>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="2"/>
		</example>
	</doc>
	<doc for="ClientSponsor.InitializeLifetimeService">
		<summary>
			<para>Initializes a new instance of <see cref="System.Runtime.Remoting.Lifetime.ClientSponsor"/>, providing a lease for the
   current object.</para>
		</summary>
		<returns>
			<para>An <see cref="System.Runtime.Remoting.Lifetime.ILease"/> for the current object.</para>
		</returns>
		<remarks>
			<para>For more information, see <see cref="System.MarshalByRefObject.InitializeLifetimeService" qualify="true"/>.</para>
		</remarks>
		<example>
			<codelink SampleID="ClientSponsor_Register" SnippetID="2"/>
		</example>
		<seealso cref="System.MarshalByRefObject.InitializeLifetimeService"/>
	</doc>
</docs>
