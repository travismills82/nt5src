<docs>
	<doc for="ITrackingHandler.MarshaledObject">
		<summary>
			<para>Notifies the current instance that an object has been marshaled.
      </para>
		</summary>
		<param name=" obj">The object that has been marshaled.</param>
		<param name="or">The <see cref="System.Runtime.Remoting.ObjRef"/> that results from marshaling and represents the specified object.</param>
	</doc><doc for="ITrackingHandler.DisconnectedObject">
		<summary>
			<para>Notifies the current instance that an object has been disconnected from its proxy.
      </para>
		</summary>
		<param name="obj"> The disconnected object. </param>
	</doc><doc for="ITrackingHandler.UnmarshaledObject">
		<summary>
			<para> Notifies the current instance that an object has been unmarshaled.
      </para>
		</summary>
		<param name=" obj"> The unmarshaled object. </param>
		<param name="or">The <see cref="System.Runtime.Remoting.ObjRef"/> that represents the specified object.</param>
	</doc><doc for="TrackingServices.RegisteredHandlers">
		<summary>
			<para>Gets an array of the tracking handlers that are currently registered with <see cref="System.Runtime.Remoting.Services.TrackingServices"/> in the current <see cref="System.AppDomain"/> .
   </para>
		</summary>
		<value>
			<para>An array of the tracking handlers that are currently registered with <see cref="System.Runtime.Remoting.Services.TrackingServices"/> in the current <see cref="System.AppDomain"/>.</para>
		</value>
	</doc><doc for="TrackingServices.RegisterTrackingHandler">
		<summary>
			<para> Registers a new tracking handler with the <see cref="System.Runtime.Remoting.Services.TrackingServices"/> .
   </para>
		</summary>
		<param name="handler">The tracking handler to register. </param>
		<exception cref="System.ArgumentNullException"><paramref name="handler"/> is <see langword="null"/>.</exception>
		<exception cref="System.Runtime.Remoting.RemotingException">The handler indicated in the <paramref name="handler"/> parameter is already registered with <see cref="System.Runtime.Remoting.Services.TrackingServices"/> . </exception>
	</doc><doc for="TrackingServices.UnregisterTrackingHandler">
		<summary>
			<para>Unregisters the specified tracking handler from <see cref="System.Runtime.Remoting.Services.TrackingServices"/> .</para>
		</summary>
		<param name="handler">The handler to unregister.</param>
		<exception cref="System.ArgumentNullException"><paramref name="handler"/> is <see langword="null"/>.</exception>
		<exception cref="System.Runtime.Remoting.RemotingException">The handler indicated in the <paramref name="handler"/> parameter is not registered with <see cref="System.Runtime.Remoting.Services.TrackingServices"/> . </exception>
	</doc><doc for="ITrackingHandler">
		<summary>
			<para> Indicates that the implementing object must be notified
      of marshaling, unmarshaling, and disconnection of objects and proxies
      by the remoting infrastructure.
      </para>
		</summary>
		<remarks>
			<para> Every object registered with <see cref="System.Runtime.Remoting.Services.TrackingServices"/> is called by
   remoting when an object or proxy in the current <see cref="System.AppDomain"/> is marshaled, unmarshaled, or
   disconnected. </para>
			<note type="note">
   Only objects can be disconnected. An
   exception is thrown when disconnect is called on a proxy.
</note>
			<note type="note">
   This interface makes a link demand. A SecurityException is thrown if the immediate caller makes the call through a reference to the interface and does not
   have infrastructure permission. See <see topic="cpconLinkDemands"/> for more information.
</note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="TrackingServices">
		<summary>
			<para> Provides a way to register, unregister, and obtain a list of tracking handlers.
      </para>
		</summary>
		<remarks>
			<para>Tracking handlers are objects that implement the <see cref="System.Runtime.Remoting.Services.ITrackingHandler"/>
interface, indicating that they must be notified whenever the remoting
infrastructure marshals, unmarshals, or disconnects an object or proxy. Every
object registered with <see cref="System.Runtime.Remoting.Services.TrackingServices"/> is called by remoting when an
object or proxy in the current <see cref="System.AppDomain"/> is marshaled, unmarshaled, or disconnected. </para>
			<note type="note">
   All methods in the <see cref="System.Runtime.Remoting.Services.TrackingServices"/> class are static, and operate
   on the tracking handlers in the current <see cref="System.AppDomain"/>.
</note>
			<note type="note">
   This class makes a link demand. A SecurityException is thrown if the immediate caller does not
   have infrastructure permission. See <see topic="cpconLinkDemands"/> for more information.
</note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Demand value: <see cref="System.Security.Permissions.SecurityAction.LinkDemand" qualify="true"/>; Permission Value: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<seealso cref="System.Runtime.Remoting.Services.ITrackingHandler"/>
	</doc>
</docs>
