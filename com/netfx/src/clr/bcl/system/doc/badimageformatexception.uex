<docs>
	<doc for="BadImageFormatException.FusionLog">
		<summary>
			<para> Gets the log file that describes why an assembly load failed.</para>
		</summary>
		<value>
			<para>A <see langword="String"/> containing 
   errors reported by the assembly cache.</para>
		</value>
	</doc>
	<doc for="BadImageFormatException.BadImageFormatException5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.BadImageFormatException"/> class with serialized data.</para>
		</summary>
		<param name="info">The <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
		<param name="context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
		<remarks>
			<para>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream. For more information, see <see topic="cpconSerialization"/>.</para>
		</remarks>
	</doc>
	<doc for="BadImageFormatException.BadImageFormatException">
		<overload>
			<para>Initializes a new instance of the <see cref="System.BadImageFormatException"/>
class.</para>
		</overload>
		<summary>
   Initializes a new instance of the <see cref="System.BadImageFormatException"/> class.
</summary>
		<remarks>
			<para>This constructor initializes the <see cref="System.Exception.Message"/> 
property of the new instance to a system-supplied message that describes the
error, such as "Format of the executable or library is invalid." This message
takes into account the current system culture.</para>
			<para>The following table shows the initial property
   values for an instance of <see cref="System.BadImageFormatException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description> The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="BadImageFormatException.BadImageFormatException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.BadImageFormatException"/>
class with a specified error message.</para>
		</summary>
		<param name="message">The message that describes the error.</param>
		<remarks>
			<para>The content of the <paramref name="message"/> parameter is 
   intended to be understood by humans. The caller of this constructor is required
   to ensure that this string has been localized for the current system
   culture.</para>
			<para>The following table shows the initial property
   values for an instance of <see cref="System.BadImageFormatException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="BadImageFormatException.BadImageFormatException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.BadImageFormatException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not a null reference, the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/>
   property returns the same value that is passed into the constructor, or
<see langword="null"/> if the <see cref="System.Exception.InnerException"/> 
property does not supply the inner exception value to
the constructor. </para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.BadImageFormatException"/>. </para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="BadImageFormatException.BadImageFormatException3">
		<summary>
			<para> Initializes a new instance of the <see cref="System.BadImageFormatException"/> 
class with a specified error message and file name.</para>
		</summary>
		<param name="message">A message that describes the error.</param>
		<param name="fileName">The full name of the file with the invalid image.</param>
		<remarks>
			<para>The content of the <paramref name="message"/> 
parameter is intended to be
understood by humans. The caller of this constructor is required to ensure that
this string has been localized for the current system culture.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.BadImageFormatException.FileName"/></term>
					<description>The full name of the file with the invalid 
      image.</description>
				</item>
				<item>
					<term><see cref="System.BadImageFormatException.Message"/></term>
					<description>The error message 
   string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="BadImageFormatException.BadImageFormatException4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.BadImageFormatException"/>
class with a specified error message and a reference to the inner exception
that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name=" fileName"> The full name of the file with the invalid image.</param>
		<param name=" inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not <see langword="null"/>, the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in the
   <see cref="System.Exception.InnerException"/> property. The <see cref="System.Exception.InnerException"/>
   property returns the same value that is passed into the constructor, or
<see langword="null"/> if the <see cref="System.Exception.InnerException"/> property does not supply the inner exception value to the constructor. </para>
			<para>The following table shows the initial property values for an instance of <see cref="System.BadImageFormatException"/>. </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.BadImageFormatException.FileName"/></term>
					<description>The 
   full
   name of the file with the invalid image.</description>
				</item>
				<item>
					<term><see cref="System.BadImageFormatException.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="BadImageFormatException.Message">
		<summary>
			<para>Gets the error message and the name of the file that
      caused this exception.</para>
		</summary>
		<value>
			<para>A string containing the error message and the name of the file that caused
      this exception.</para>
		</value>
		<remarks>
			<para>If no message was supplied to the constructor for the current exception,
      this property returns a system-supplied error message. If the <see cref="System.BadImageFormatException.FileName"/>
      property is not a null reference (<see langword="Nothing"/> in Visual
      Basic), the message
      includes the file name.</para>
			<para>This property is read-only.</para>
		</remarks>
	</doc><doc for="BadImageFormatException.FileName">
		<summary>
			<para>Gets the name of the file that causes this exception.</para>
		</summary>
		<value>
			<para> The name of the file with the invalid image,
      or a null reference if no file name was passed to the constructor for the current instance.</para>
		</value>
		<remarks>
			<para>This property returns the name of the file supplied to 
      the constructor for the current instance, if any. If the file name was not
      specified or is a null reference (<see langword="Nothing"/>
      in Visual
      Basic), this property returns a null reference. </para>
			<para>This property is read-only. </para>
		</remarks>
	</doc><doc for="BadImageFormatException.ToString">
		<summary>
			<para>Returns the fully qualified name of this exception and
      possibly the error message, the name of the inner exception, and the stack trace.</para>
		</summary>
		<returns>
			<para>A string containing the fully qualified name of this
      exception and possibly the error message, the name of the inner exception, and
      the stack trace.</para>
		</returns>
		<remarks>
			<para>The string representation returned by this
      method includes the name of the exception, the value of the <see cref="System.BadImageFormatException.Message"/> property, the result of calling
      ToString on the inner exception, the value of the <see cref="System.BadImageFormatException.FileName"/> property, and the result of calling <see cref="System.Environment.StackTrace"/> . If any of these
      members is a null reference (<see langword="Nothing"/>
      in
      Visual Basic), its value is not included in the returned string.</para>
		</remarks>
	</doc><doc for="BadImageFormatException.GetObjectData">
		<summary>
			<para>Sets the <see cref="System.Runtime.Serialization.SerializationInfo"/> object with
   the file name, assembly cache log, and additional exception information.</para>
		</summary>
		<param name="info">The <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
		<param name=" context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
		<exception cref="System.Security.SecurityException">The caller does not have the required permission.</exception>
		<permission cref="System.Security.Permissions.SecurityPermission">to provide evidence and view and modify policy. Associated enumerations: <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" qualify="true"/>, <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy" qualify="true"/>.</permission>
	</doc>
	<doc for="BadImageFormatException">
		<summary>
			<para> The exception that is thrown when the file image of a
      DLL or an executable program is invalid.</para>
		</summary>
		<remarks>
			<para>This exception is thrown when the file image of an
      executable program is invalid. For example, this exception is thrown when
      unmanaged code is passed to <see cref="System.Reflection.Assembly.Load"/>
      for loading.</para>
			<para><see cref="System.BadImageFormatException"/> uses the HRESULT COR_E_BADIMAGEFORMAT, which has the
   value 0x8007000B.</para>
			<para>For a list of initial property values for an instance of <see cref="System.BadImageFormatException"/>, see the <see cref="System.BadImageFormatException"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc>
</docs>
