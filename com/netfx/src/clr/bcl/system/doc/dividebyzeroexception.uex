<docs>
	<doc for="DivideByZeroException.DivideByZeroException3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DivideByZeroException"/>
class with serialized data.</para>
		</summary>
		<param name="info">The object that holds the serialized object data.</param>
		<param name="context">The contextual information about the source or destination.</param>
		<remarks>
			<para>This constructor is called during deserialization to
      reconstitute the exception object transmitted over a stream. For more
      information, see <see topic="cpconSerialization"/>.</para>
		</remarks>
		<seealso topic="cpconSerialization"/>
	</doc><doc for="DivideByZeroException.DivideByZeroException">
		<overload>
			<para>Initializes a new instance of the
   <see cref="System.DivideByZeroException"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the
   <see cref="System.DivideByZeroException"/> 
   class. </para>
		</summary>
		<remarks>
			<para>This constructor initializes the <see cref="System.Exception.Message"/> 
property of the new instance to a system-supplied message that describes the
error, such as "Attempted to divide by zero." This message takes into account
the current system culture.</para>
			<para>The following table shows the initial property values for
   an instance of <see cref="System.DivideByZeroException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="DivideByZeroException.DivideByZeroException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DivideByZeroException"/>
class<see langword=" "/>
with a specified error message.</para>
		</summary>
		<param name="message">A <see cref="System.String"/> that describes the error.</param>
		<remarks>
			<para>The content of <paramref name="message"/> is intended to be 
   understood by humans. The caller of this constructor is required to ensure that
   this string has been localized for the current system culture.</para>
			<para>The following table shows the initial property values
   for an instance of <see cref="System.DivideByZeroException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="DivideByZeroException.DivideByZeroException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DivideByZeroException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/>
   property returns the same value that is passed into the constructor, or
<see langword="null"/> if the <see cref="System.Exception.InnerException"/> 
property does not supply the inner exception value to
the constructor. </para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.DivideByZeroException"/>.</para>
			<list type="table"><listheader>
					<term>Property Type</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="DivideByZeroException">
		<summary>
			<para> The exception that is thrown when there is an attempt to divide an integral or decimal
      value by zero.</para>
		</summary>
		<remarks>
			<para>Dividing a floating-point value by zero will result in either positive infinity, negative infinity,
      or Not-a-Number (NaN) according to the rules of IEEE 754 arithmetic. Floating-point
      operations never throw an exception. For more information,
      see <see cref="System.Single"/> and <see cref="System.Double"/>.</para>
			<para>The following Microsoft intermediate language (MSIL) instructions throw <see cref="System.DivideByZeroException"/> :</para>
			<list type="bullet"><item>
					<term>
      div</term>
				</item>
				<item>
					<term>
      div.un</term>
				</item>
				<item>
					<term>
      rem</term>
				</item>
				<item>
					<term>
      rem.un</term>
				</item>
			</list>
			<para><see cref="System.DivideByZeroException"/> uses the HRESULT COR_E_DIVIDEBYZERO, which has the value
0x80020012.</para>
			<para>For a list of initial property values for an instance of <see cref="System.DivideByZeroException"/>,
see the <see cref="System.DivideByZeroException()"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc>
</docs>
