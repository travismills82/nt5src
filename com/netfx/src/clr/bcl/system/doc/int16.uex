<docs>
	<doc for="Int16.GetHashCode">
		<summary>
			<para>Returns the hash code for this instance.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc>
	<doc for="Int16.IConvertible.ToBoolean">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToChar">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToSByte">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToByte">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToInt16">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToUInt16">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToInt32">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToUInt32">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToInt64">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToUInt64">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToSingle">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToDouble">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToDecimal">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToDateTime">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.IConvertible.ToType">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Int16.GetTypeCode">
		<summary>
			<para>Returns the <see cref="System.TypeCode"/> for value type <see cref="System.Int16"/>.</para>
		</summary>
		<returns>
			<para>The enumerated constant, <see cref="System.TypeCode.Int16" qualify="true"/>.</para>
		</returns>
		<seealso cref="System.TypeCode"/>
	</doc>
	<doc for="Int16.MinValue">
		<summary>
			<para>Represents the smallest possible value of <see cref="System.Int16"/>. This field is 
 constant.</para>
		</summary>
		<remarks>
			<para>The value of this constant is -32768; that is, hexadecimal 0x8000.</para>
		</remarks>
		<seealso cref="System.Int16.MaxValue"/>
	</doc>
	<doc for="Int16.MaxValue">
		<summary>
			<para>Represents the largest possible value of an <see cref="System.Int16"/>. This field is
 constant.</para>
		</summary>
		<remarks>
			<para>The value of this constant is 32767; that is, hexadecimal 0x7FFF.</para>
		</remarks>
		<seealso cref="System.Int16.MinValue"/>
	</doc>
	<doc for="Int16.ToString">
		<overload>
			<para>Converts the numeric value of this instance to its 
 equivalent string representation. </para>
		</overload>
		<summary>
			<para>Converts the numeric value of this instance to its 
 equivalent string representation. </para>
		</summary>
		<returns>
			<para>The string representation of the value of this instance,
 consisting of a minus sign if the value is negative, and a sequence of digits
 ranging from 0 to 9 with no leading zeroes.</para>
		</returns>
		<remarks>
			<para>The return value is formatted with the general format specifier ("G") and the
 <see cref="System.Globalization.NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Int16.Parse"/>
		<seealso cref="System.String"/>
	</doc>
	<doc for="Int16.Parse1">
		<summary>
			<para>Converts the string representation of a number in a
 specified style to its 16-bit signed integer equivalent.</para>
		</summary>
		<param name=" s">A string containing a number to convert. </param>
		<param name=" style">The combination of one or more <see cref="System.Globalization.NumberStyles"/>constants that indicates the permitted format of <paramref name="s"/>. </param>
		<returns>
			<para>A 16-bit signed integer equivalent to the number specified in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s "/>is <see langword="null"/>. </exception>
		<exception cref="System.ArgumentException"><paramref name="style"/> is not a valid combination of bit flags from the <see cref="System.Globalization.NumberStyles"/> enumeration. </exception>
		<exception cref="System.FormatException"><paramref name="s "/>is not in a format compliant with <paramref name="style"/>. </exception>
		<exception cref="System.OverflowException"><paramref name="s "/>represents a number less than <see cref="System.Int16.MinValue"/> or greater than <see cref="System.Int16.MaxValue"/>. </exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ([ and ]) are optional; and other items are as
 follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>An 
 optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
 9.</description>
				</item>
			</list>
			<para>The <paramref name="style "/> parameter can be one or more
<see cref="System.Globalization.NumberStyles"/> enumerated
 constants combined using a bitwise OR operation (except <see cref="System.Globalization.NumberStyles.Any"/> and <see cref="System.Globalization.NumberStyles.AllowDecimalPoint"/> , which are invalid for the
 type returned by this method).</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Int16.ToString"/>
	</doc>
	<doc for="Int16.Parse2">
		<summary>
			<para>Converts the string representation of a number in a
 specified culture-specific format to its 16-bit signed integer equivalent.</para>
		</summary>
		<param name=" s">A string containinga number to convert.</param>
		<param name=" provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>.</param>
		<returns>
			<para>A 16-bit signed integer equivalent to the number specified in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s "/>is <see langword="null"/>.</exception>
		<exception cref="System.OverflowException"><paramref name="s "/>represents a number less than <see cref="System.Int16.MinValue"/> or greater than <see cref="System.Int16.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ([ and ]) are optional; and other items are as
 follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>An 
 optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
 9.</description>
				</item>
			</list>
			<para>The <paramref name="provider"/> parameter is an <see cref="System.IFormatProvider"/> that obtains
 a <see cref="System.Globalization.NumberFormatInfo"/>
 object. The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific information
 about the format of <paramref name="s"/>. If <paramref name="provider"/> is <see langword="null"/>,
 the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture is used.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Int16.ToString"/>
	</doc>
	<doc for="Int16.Parse3">
		<summary>
			<para>Converts the string representation of a number in a
 specified style and culture-specific format to its 16-bit signed integer
 equivalent.</para>
		</summary>
		<param name=" s">A string containinga number to convert.</param>
		<param name=" style">The combination of one or more <see cref="System.Globalization.NumberStyles"/>constants that indicate the permitted format of <paramref name="s"/>.</param>
		<param name=" provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>. </param>
		<returns>
			<para>A 16-bit signed integer equivalent to the number specified in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s "/>is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><paramref name="style"/> is not a valid combination of <see cref="System.Globalization.NumberStyles"/> enumerated constants.</exception>
		<exception cref="System.FormatException"><paramref name="s "/>is not in a format compliant with <paramref name="style"/>.</exception>
		<exception cref="System.OverflowException"><paramref name="s "/>represents a number less than <see cref="System.Int16.MinValue"/> or greater than <see cref="System.Int16.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ([ and ]) are optional, and other items are as
 follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>An 
 optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
 9.</description>
				</item>
			</list>
			<para>The <paramref name="style "/> parameter can be one or more
<see cref="System.Globalization.NumberStyles"/> enumerated
 constants combined using a bitwise OR operation (except <see cref="System.Globalization.NumberStyles.Any"/> and <see cref="System.Globalization.NumberStyles.AllowDecimalPoint"/> , which are invalid for the
 type returned by this method).</para>
			<para>The <paramref name="provider"/> parameter is an <see cref="System.IFormatProvider"/> that obtains
a <see cref="System.Globalization.NumberFormatInfo"/> object.
The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific information
about the format of <paramref name="s"/>. If <paramref name="provider"/> is <see langword="null"/> ,
the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture is used.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Int16.ToString"/>
	</doc>
	<doc for="Int16.ToString3">
		<summary>
			<para>Converts the numeric value of this instance to its
 equivalent string representation using the specified culture-specific
 format information. </para>
		</summary>
		<param name=" provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
		<returns>
			<para>The string representation of the value of this instance as
 specified by <paramref name="provider"/>.</para>
		</returns>
		<remarks>
			<para>This instance is formatted with the general format specifier ("G").</para>
			<para>The <paramref name="provider"/> parameter is an <see cref="System.IFormatProvider"/> that obtains a
<see cref="System.Globalization.NumberFormatInfo"/> 
object. The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific format
information about this instance. If <paramref name="provider"/> is <see langword="null"/>, this instance is formatted with the
<see cref="System.Globalization.NumberFormatInfo"/> for the current
culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Int16.Parse"/>
		<seealso cref="System.String"/>
	</doc>
	<doc for="Int16">
		<summary>
			<para>Represents a 16-bit signed integer.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded operations.</para>
		</threadsafe>
		<remarks>
			<para>The <see langword="Int16"/> value type represents signed integers with values
   ranging from negative 32768 through positive 32767.</para>
			<para>This type provides methods to convert the value of an
   instance of this type to its string representation, convert the string
   representation of a number to an instance of this type,
   and compare instances of this type.</para>
			<para>For information about how format specification codes
   control the string representation of value types, see
<see topic="cpConFormattingOverview"/>. </para>
This type implements interfaces <see cref="System.IComparable"/>, <see cref="System.IFormattable"/>, and <see cref="System.IConvertible"/>. Use the <see cref="System.Convert"/> class for conversions instead of this type's explicit
interface member implementation of <see cref="System.IConvertible"/>.
</remarks>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="Int16.CompareTo">
		<summary>
			<para>Compares this instance to a specified object and returns an indication of
      their relative values.</para>
		</summary>
		<param name=" value">An object to compare, or <see langword="null"/>.</param>
		<returns>
			<para>A signed number indicating the relative values of this instance and
      <paramref name="value"/>.</para>
			<list type="table"><listheader>
					<term>Return Value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>This instance is less than
         <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This instance is equal to
         <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description><para>This instance is greater than
         <paramref name="value"/>.</para>
						<para>-or-</para>
						<para><paramref name="value"/> is <see langword="null"/>.</para></description>
				</item>
			</list>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="value"/> is not an <see cref="System.Int16"/>.</exception>
		<remarks>
			<para>An <see cref="System.Int16"/>, regardless of its value, is considered greater
   than a null reference.</para>
			<para>The <paramref name="value"/> parameter must be
<see langword="null"/> or an instance of <see cref="System.Int16"/>; otherwise, an
exception is thrown.</para>
		</remarks>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="Int16.Parse">
		<overload>
			<para>Converts the string representation of a number to its 16-bit
      signed integer equivalent.</para>
		</overload>
		<summary>
			<para>Converts the string representation of a number to its 16-bit
      signed integer equivalent.</para>
		</summary>
		<param name=" s">A string containing a number to convert.</param>
		<returns>
			<para>A 16-bit signed integer equivalent to the number contained in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s "/>is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="s "/>is not of the correct format.</exception>
		<exception cref="System.OverflowException"><paramref name="s "/>represents a number less than <see cref="System.Int16.MinValue"/> or greater than <see cref="System.Int16.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ([ and ]) are optional; and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>An
         optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>The <paramref name="s"/> parameter is parsed using the formatting information in
   a <see cref="System.Globalization.NumberFormatInfo"/> initialized for the current system
   culture. For more information, see <see cref="System.Globalization.NumberFormatInfo.CurrentInfo"/>
   .</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Int16.ToString"/>
	</doc>
	<doc for="Int16.Equals">
		<summary>
			<para>Returns a value indicating whether this instance is equal to a specified
      object.</para>
		</summary>
		<param name=" obj">An object to compare with this instance.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="System.Int16"/>
and equals the value of this instance; otherwise, <see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following code sample illustrates the use of <see langword="Equals"/> in
   the context of <see langword="Int16"/>, comparing two short values and returning
   true if they represent the same number, or false if they do not.</para>
			<codelink SampleID="Int16_Equals" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Int16.ToString1">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent string representation, using the specified format. </para>
		</summary>
		<param name=" format">A format string.</param>
		<returns>
			<para>The string representation of the value of this instance as
      specified by <paramref name="format"/>.</para>
		</returns>
		<remarks>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string, the return
   value of this instance is formatted with the general format specifier ("G").</para>
			<para>The return value of this instance is formatted with the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture. </para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConNumericFormatStrings"/>
		<seealso cref="System.Int16.Parse"/>
		<seealso cref="System.String"/>
	</doc>
	<doc for="Int16.ToString2">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent string representation using the specified format and
      culture-specific format information. </para>
		</summary>
		<param name=" format">A format specification.</param>
		<param name=" provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about this instance.</param>
		<returns>
			<para>The string representation of the value of this instance as
      specified by <paramref name="format"/> and <paramref name="provider"/>.</para>
		</returns>
		<remarks>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string, the return
   value for this instance is formatted with the general format specifier
   ("G").</para>
			<para>The <paramref name="provider"/> parameter is an
<see cref="System.IFormatProvider"/> that obtains a
<see cref="System.Globalization.NumberFormatInfo"/> object. The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific format
information about this instance. If <paramref name="provider"/> is <see langword="null"/>,
the return value for this instance is formatted with the
<see cref="System.Globalization.NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConNumericFormatStrings"/>
		<seealso cref="System.Int16.Parse"/>
		<seealso cref="System.String"/>
	</doc>
</docs>
