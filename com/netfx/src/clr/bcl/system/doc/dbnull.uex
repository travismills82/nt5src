<docs>
	<doc for="DBNull.Value">
		<summary>
			<para> Represents the sole instance of the <see cref="System.DBNull"/> class.</para>
		</summary>
		<remarks>
			<para><see cref="System.DBNull"/> is a singleton class, which means only this instance of this class can exist.</para>
		</remarks>
	</doc><doc for="DBNull.GetObjectData">
		<summary>
			<para>Implements the <see cref="System.Runtime.Serialization.ISerializable"/> interface and returns the data
       needed to serialize the <see cref="System.DBNull"/> object.
    </para>
		</summary>
		<param name="info">
    A <see cref="System.Runtime.Serialization.SerializationInfo"/> object containing information required to serialize the <see cref="System.DBNull"/> object.
 </param>
		<param name="context">
    A <see cref="System.Runtime.Serialization.StreamingContext"/> object containing the source and destination of the serialized stream associated with the <see cref="System.DBNull"/> object.
 </param>
		<exception cref="System.ArgumentNullException"><paramref name="info"/> is <see langword="null"/>. </exception>
		<seealso cref="System.Runtime.Serialization.ISerializable"/>
		<seealso cref="System.Runtime.Serialization.SerializationInfo"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
	</doc><doc for="DBNull.ToString">
		<overload>
			<para>Returns an empty string.</para>
		</overload>
		<summary>
			<para>Returns an empty string (<see cref="System.String.Empty" qualify="true"/>).</para>
		</summary>
		<returns>
			<para>An empty string (<see cref="System.String.Empty" qualify="true"/>).</para>
		</returns>
		<seealso cref="System.String.Empty" qualify="true"/>
	</doc><doc for="DBNull.ToString1">
		<summary>
			<para>Returns an empty string using the specified <see cref="System.IFormatProvider" qualify="true"/>.</para>
		</summary>
		<param name="provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>An empty string (<see cref="System.String.Empty" qualify="true"/>).</para>
		</returns>
		<seealso cref="System.String.Empty" qualify="true"/>
	</doc><doc for="DBNull.GetTypeCode">
		<summary>
    Gets the <see cref="System.TypeCode"/> value for <see cref="System.DBNull"/>.
 </summary>
		<returns>
			<para>The <see cref="System.TypeCode"/> value for <see cref="System.DBNull"/>, which is <see cref="System.TypeCode.DBNull" qualify="true"/>.
    </para>
		</returns>
		<seealso cref="System.TypeCode"/>
	</doc><doc for="DBNull.IConvertible.ToBoolean">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="bool"/> to implement the
<see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DBNull.IConvertible.ToChar">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="char"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a char this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Char"/>
	</doc><doc for="DBNull.IConvertible.ToSByte">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="sbyte"/> to implement the
<see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a sbyte this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.SByte"/>
	</doc><doc for="DBNull.IConvertible.ToByte">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="byte"/> to implement the
<see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a byte this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Byte"/>
	</doc><doc for="DBNull.IConvertible.ToInt16">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="short"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a short this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Int16"/>
	</doc><doc for="DBNull.IConvertible.ToUInt16">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="ushort"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a ushort this method is called. This method throws an
InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.UInt16"/>
	</doc><doc for="DBNull.IConvertible.ToInt32">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="int"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is an int this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Int32"/>
	</doc><doc for="DBNull.IConvertible.ToUInt32">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="uint"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a uint this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.UInt32"/>
	</doc><doc for="DBNull.IConvertible.ToInt64">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="long"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a long this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Int64"/>
	</doc><doc for="DBNull.IConvertible.ToUInt64">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="ulong"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a ulong this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.UInt64"/>
	</doc><doc for="DBNull.IConvertible.ToSingle">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="float"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a float this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Single"/>
	</doc><doc for="DBNull.IConvertible.ToDouble">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="double"/> to implement
   the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a double this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Double"/>
	</doc><doc for="DBNull.IConvertible.ToDecimal">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="decimal"/> to
   implement the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a Decimal this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.Decimal"/>
	</doc><doc for="DBNull.IConvertible.ToDateTime">
		<summary>
			<para>Throws an <see cref="System.InvalidCastException"/>.
   Called by the <see cref="System.IConvertible.ToType"/> method.
   </para>
		</summary>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed <see langword="DateTime"/> to
   implement the <see cref="System.IConvertible"/> interface.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<remarks>
			<para>If the ToType <paramref name="type"/>
is a DateTime this method is called. This method throws an InvalidCastException.</para>
		</remarks>
		<seealso cref="System.IConvertible.ToType"/>
		<seealso cref="System.IConvertible"/>
		<seealso cref="System.Type"/>
		<seealso cref="System.DateTime"/>
	</doc><doc for="DBNull.IConvertible.ToType">
		<summary>
			<para>Calls the appropriate method, depending on the specified type.
      </para>
		</summary>
		<param name="type">The <see cref="System.Type"/> to <see cref="System.DBNull"/> into. </param>
		<param name=" provider">The <see cref="System.IFormatProvider"/> to be used to format the return value. <para>-or-</para><para><see langword="null"/> to obtain the format information from the current locale setting of the operating system.</para></param>
		<returns>
			<para>None, but the return value is typed the same as <paramref name="type"/>.
   </para>
		</returns>
		<exception cref="System.InvalidCastException">(Always thrown.)</exception>
		<seealso cref="System.Type"/>
	</doc>
	<doc for="DBNull">
		<summary>
			<para> Represents a null value.</para>
		</summary>
		<threadsafe>
			<para>Public static (<see langword="Shared"/> in Visual Basic) members of this type are safe for multithreaded operations.
   Instance members are not guaranteed to be thread-safe.</para>
		</threadsafe>
		<remarks>
			<para>This class is used to indicate the absence of a known
      value, typically in a database application. </para>
			<para>In database applications, a null object
      is a valid value for a field. This class differentiates between a null
      value (a null object) and an uninitialized value (the <see cref="System.DBNull.Value" qualify="true"/> instance). For example, a table can
      have records with uninitialized fields. By default, these uninitialized
      fields have the <see cref="System.DBNull"/> value.</para>
			<para> This class is also used in COM interop to distinguish between a VT_NULL
      variant, which is associated with a null object, and a VT_EMPTY variant, which
      is associated with the <see cref="System.DBNull.Value" qualify="true"/> instance.</para>
			<para><see cref="System.DBNull"/> is never equal to anything.</para>
			<para><see cref="System.DBNull"/> is a singleton class, which means only one
instance of this class can exist. That sole instance is <see cref="System.DBNull.Value" qualify="true"/>.</para>
			<para>Data intensive applications accessing SQL databases must use the <see cref="N:System.Data.SqlTypes" qualify="true"/> classes, which have 
inherent support for null values. </para>
		</remarks>
		<seealso cref="System.Convert.DBNull" qualify="true"/>
		<seealso cref="System.Convert.IsDBNull" qualify="true"/>
		<seealso cref="System.Runtime.InteropServices.VarEnum" qualify="true"/>
		<seealso cref="N:System.Data.SqlTypes" qualify="true"/>
	</doc></docs>
