<docs>
	<doc for="BitConverter">
		<summary>
			<para>Converts base data types to an array of bytes, and an array of bytes to base 
       data types.</para>
		</summary>
		<remarks>
			<para>This class facilitates manipulating value types in their fundamental form. A 
       byte is defined as an 8-bit unsigned integer.</para>
		</remarks>
		<seealso cref="System.Byte"/>
	</doc>
	<doc for="BitConverter.IsLittleEndian">
		<summary>
			<para>Indicates the byte order ("endianess") in which data is stored in this 
       computer architecture.</para>
		</summary>
		<remarks>
			<para>This value is <see langword="true "/>if the architecture is little-endian; 
 <see langword="false "/>if it is big-endian.</para>
			<para>Different computer architectures store data using different byte orders. 
    "Big-endian" means the most significant byte is on the left end of a word.
    "Little-endian" means the most significant byte is on the right end of a
    word.</para>
		</remarks>
	</doc>
	<doc for="BitConverter.GetBytes">
		<overload>
			<para>Converts the specified data to an array of bytes.</para>
		</overload>
		<summary>
			<para>Returns the specified Boolean value as an array of bytes.</para>
		</summary>
		<param name=" value">A Boolean value.</param>
		<returns>
			<para>An array of bytes with length 1.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes1">
		<summary>
			<para>Returns the specified Unicode character value as an array of bytes.</para>
		</summary>
		<param name=" value">A character to convert.</param>
		<returns>
			<para>An array of bytes with length 2.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes2">
		<summary>
			<para>Returns the specified 16-bit signed integer value as an array of bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 2.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes3">
		<summary>
			<para>Returns the specified 32-bit signed integer value as an array of bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 4.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes4">
		<summary>
			<para>Returns the specified 64-bit signed integer value as an array of bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 8.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes5">
		<summary>
			<para>Returns the specified 16-bit unsigned integer value as an array of bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 2.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes6">
		<summary>
			<para>Returns the specified 32-bit unsigned integer value as an array of bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 4.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes7">
		<summary>
			<para>Returns the specified 64-bit unsigned integer value as an array of bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 8.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes8">
		<summary>
			<para>Returns the specified single-precision floating point value as an array of 
       bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 4.</para>
		</returns>
	</doc>
	<doc for="BitConverter.GetBytes9">
		<summary>
			<para>Returns the specified double-precision floating point value as an array of 
       bytes.</para>
		</summary>
		<param name=" value">The number to convert.</param>
		<returns>
			<para>An array of bytes with length 8.</para>
		</returns>
	</doc>
	<doc for="BitConverter.ToChar">
		<summary>
			<para>Returns a Unicode character converted from two bytes at a specified position 
       in a byte array.</para>
		</summary>
		<param name=" value">An array.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/> .</param>
		<returns>
			<para>A character formed by two bytes beginning at <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> . </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 2.</exception>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="BitConverter.ToInt16">
		<summary>
			<para>Returns a 16-bit signed integer converted from two bytes at a specified 
       position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A 16-bit signed integer formed by two bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> . </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 2.</exception>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="BitConverter.ToInt32">
		<summary>
			<para>Returns a 32-bit signed integer converted from four bytes at a specified 
       position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A 32-bit signed integer formed by four bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> . </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 4.<paramref name=""/></exception>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="BitConverter.ToInt64">
		<summary>
			<para>Returns a 64-bit signed integer converted from eight bytes at a specified 
       position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A 64-bit signed integer formed by eight bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> . </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 8.</exception>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="BitConverter.ToUInt16">
		<summary>
			<para>Returns a 16-bit unsigned integer converted from two bytes at a specified 
       position in a byte array.</para>
		</summary>
		<param name=" value">The array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A 16-bit unsigned integer formed by two bytes beginning at <paramref name="startIndex"/> 
 .</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> .</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 2.</exception>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="BitConverter.ToUInt32">
		<summary>
			<para>Returns a 32-bit unsigned integer converted from four bytes at a specified 
       position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A 32-bit unsigned integer formed by four bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> .</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 4.</exception>
		<seealso cref="System.UInt32"/>
	</doc>
	<doc for="BitConverter.ToUInt64">
		<summary>
			<para>Returns a 64-bit unsigned integer converted from eight bytes at a specified 
       position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A 64-bit unsigned integer formed by the eight bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> .</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 8.</exception>
		<seealso cref="System.UInt64"/>
	</doc>
	<doc for="BitConverter.ToSingle">
		<summary>
			<para>Returns a single-precision floating point number converted from four bytes at 
       a specified position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A single-precision floating point number formed by four bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> . </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 4.<paramref name=""/></exception>
		<seealso cref="System.Single"/>
	</doc>
	<doc for="BitConverter.ToDouble">
		<summary>
			<para>Returns a double-precision floating point number converted from eight bytes 
       at a specified position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A double precision floating point number formed by eight bytes beginning at 
    <paramref name="startIndex"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> . </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 8.<paramref name=""/></exception>
	</doc>
	<doc for="BitConverter.ToString">
		<overload>
			<para>Returns a <see langword="String"/> converted from the elements of a byte 
    array.</para>
		</overload>
		<summary>
			<para>Returns a <see langword="String"/> converted from a specified number of bytes 
    at a specified position in a byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<param name=" length">The number of bytes to convert.</param>
		<returns>
			<para>A <see cref="System.String"/> of 
    hexadecimal pairs separated by hyphens, where each pair represents the
    corresponding element in <paramref name="value"/>; for example, "7F-2C-4A".</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/> .</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para><paramref name="startIndex"/> or <paramref name="length"/> is less than zero.</para>
			<para>-or-</para>
			<para>The sum of <paramref name="startIndex "/>plus <paramref name="length"/> is greater than the length of <paramref name="value"/>.</para></exception>
		<remarks>
			<para>The <paramref name="length"/> elements from array position <paramref name="startIndex"/> are 
    converted. </para>
		</remarks>
	</doc>
	<doc for="BitConverter.ToString1">
		<summary>
			<para>Returns a <see langword="String"/> converted from the elements of a byte 
    array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<returns>
			<para>A <see cref="System.String"/> of 
    hexadecimal pairs separated by hyphens, where each pair represents the
    corresponding element in <paramref name="value"/>; for example, "7F-2C-4A".</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>. </exception>
		<remarks>
			<para>All the elements of <paramref name="value"/> are converted.</para>
		</remarks>
	</doc>
	<doc for="BitConverter.ToString2">
		<summary>
			<para>Returns a <see langword="String"/> converted from the elements of a byte array 
    starting at a specified array position.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para>A <see cref="System.String"/> of 
    hexadecimal pairs separated by hyphens, where each pair represents the
    corresponding element in <paramref name="value"/>; for example, "7F-2C-4A".</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>. </exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 1.<paramref name=""/></exception>
		<remarks>
			<para>The elements from array position <paramref name="startIndex"/> to the end of the array 
    are converted.</para>
		</remarks>
	</doc>
	<doc for="BitConverter.ToBoolean">
		<summary>
			<para>Returns a Boolean value converted from one byte at a specified position in a 
       byte array.</para>
		</summary>
		<param name=" value">An array of bytes.</param>
		<param name=" startIndex">The starting position within <paramref name="value"/>.</param>
		<returns>
			<para><see langword="true "/>if the byte at <paramref name="startIndex"/> in <paramref name="value"/> is 
    nonzero; otherwise, <see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="value"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="startIndex"/> is less than zero or greater than the length of <paramref name="value"/> minus 1.<paramref name=""/></exception>
	</doc>
	<doc for="BitConverter.DoubleToInt64Bits">
		<summary>
			<para>Converts the specified double-precision floating point 
      number to a 64-bit signed integer.</para>
		</summary>
		<param name="value">The number to convert.</param>
		<returns>
			<para>A 64-bit signed integer whose value is equivalent to <paramref name="value"/>.</para>
		</returns>
	</doc><doc for="BitConverter.Int64BitsToDouble">
		<summary>
			<para>Converts the specified 64-bit signed integer to a 
      double-precision floating point number.</para>
		</summary>
		<param name="value">The number to convert.</param>
		<returns>
			<para>A double-precision floating point number whose value is equivalent to <paramref name="value"/>.</para>
		</returns>
	</doc></docs>
