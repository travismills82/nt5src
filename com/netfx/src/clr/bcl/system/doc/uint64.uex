<docs>
	<doc for="UInt64.GetHashCode">
		<summary>
			<para>Returns the hash code for this instance.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc>
	<doc for="UInt64.GetTypeCode">
		<summary>
			<para>Returns the <see cref="System.TypeCode"/> for value type <see cref="System.UInt64"/>.</para>
		</summary>
		<returns>
			<para>The enumerated constant, <see cref="System.TypeCode.UInt64" qualify="true"/>.</para>
		</returns>
		<seealso cref="System.TypeCode"/>
	</doc>
	<doc for="UInt64.IConvertible.ToBoolean">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToChar">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToSByte">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToByte">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToInt16">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToUInt16">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToInt32">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToUInt32">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToInt64">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToUInt64">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToSingle">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToDouble">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToDecimal">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToDateTime">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.IConvertible.ToType">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="UInt64.ToString">
		<overload>
			<para>Converts the numeric value of this instance to its
      equivalent string representation. </para>
		</overload>
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent string representation. </para>
		</summary>
		<returns>
			<para>The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</para>
		</returns>
		<remarks>
			<para>The return value is formatted with the general format specifier ("G") and the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.UInt64.Parse"/>
		<seealso cref="System.String"/>
	</doc>
	<doc for="UInt64.ToString3">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent string representation using the specified culture-specific
      format information. </para>
		</summary>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
		<returns>
			<para>The string representation of the value of this instance as
      specified by <paramref name="provider"/>.</para>
		</returns>
		<remarks>
			<para>This instance is formatted with the general format specifier ("G").</para>
			<para>The <paramref name="provider"/> parameter is an
<see cref="System.IFormatProvider"/> that obtains a
<see cref="System.Globalization.NumberFormatInfo"/> 
. The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific format
information about this instance. If <paramref name="provider"/> is <see langword="null"/>, this instance is formatted with the
<see cref="System.Globalization.NumberFormatInfo"/> for the current
culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.UInt64.Parse"/>
		<seealso cref="System.String"/>
	</doc>
	<doc for="UInt64.Equals">
		<summary>
			<para>Returns a value indicating whether this instance is equal to a specified object.</para>
		</summary>
		<param name="obj">An object to compare with this instance.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="obj"/> is an instance of <see cref="System.UInt64"/> and equals the value of this instance; otherwise, <see langword="false"/>.</para>
		</returns>
		<example>
			<para>The sample demonstrates the <see cref="System.UInt64.Equals"/> method.</para>
			<codelink SampleID="UInt64_Equals" SnippetID="1"/>
		</example>
		<seealso cref="System.UInt64.CompareTo"/>
	</doc><doc for="UInt64.CompareTo">
		<summary>
			<para>Compares this instance to a specified object and returns an indication of their relative values.</para>
		</summary>
		<param name="value">An object to compare, or <see langword="null"/>.</param>
		<returns>
			<para>A signed number indicating the relative values of this instance and
   <paramref name="value"/>.</para>
			<list type="table"><listheader>
					<term>Return Value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>This instance is less than
      <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This instance is equal to
      <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description><para>This instance is greater than
      <paramref name="value"/>.</para>
						<para>-or-</para>
						<para><paramref name="value"/> is <see langword="null"/>.</para></description>
				</item>
			</list>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="value"/> is not a <see cref="System.UInt64"/>.</exception>
		<remarks>
			<para>Any instance of <see cref="System.UInt64"/>, regardless of its value, is considered greater than <see langword="null"/>.</para>
			<para><paramref name="value"/> must be
<see langword="null"/> or an instance of <see cref="System.UInt64"/>; otherwise, an exception is thrown.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.UInt64.CompareTo"/> method.</para>
			<codelink SampleID="UInt64 Example" SnippetID="3"/>
		</example>
		<seealso cref="System.UInt64.Equals"/>
	</doc>
	<doc for="UInt64.MaxValue">
		<summary>
			<para> Represents the largest possible value of <see cref="System.UInt64"/>. This field is constant.</para>
		</summary>
		<remarks>
			<para>The value of this constant is 18,446,744,073,709,551,615; that is, hexadecimal 0xFFFFFFFFFFFFFFFF.</para>
		</remarks>
		<example>
			<codelink SampleID="UInt64 Example" SnippetID="2"/>
		</example>
		<seealso cref="System.UInt64.MinValue"/>
	</doc>
	<doc for="UInt64.MinValue">
		<summary>
			<para> Represents the smallest possible value of <see cref="System.UInt64"/>. This field is constant.</para>
		</summary>
		<remarks>
			<para>The value of this constant is 0.</para>
		</remarks>
		<example>
			<codelink SampleID="UInt64 Example" SnippetID="2"/>
		</example>
		<seealso cref="System.UInt64.MaxValue"/>
	</doc>
	<doc for="UInt64">
		<summary>
			<para>Represents a 64-bit unsigned integer.</para>
		</summary>
		<remarks>
			<para>The <see cref="System.UInt64"/> value
   type represents unsigned integers with
   values ranging from 0 to 18,446,744,073,709,551,615.</para>
			<para><see cref="System.UInt64"/> provides
methods to compare instances of this type, convert the value of an instance to
its string
representation, and convert the string
representation of a number to an instance of this type.</para>
			<note type="caution">
   Assigning a 64-bit value on a
   32-bit Intel computer is not an atomic operation; that is, the operation is not
   thread safe. This means that if two people simultaneously assign a value to a
   static <see cref="System.UInt64"/>
   field, the final value of the field cannot be predicted.
</note>
			<para>For information about how format specification codes
   control the string representation of value types, see
<see topic="cpConFormattingOverview"/>. </para>
			<para>This type implements interfaces <see cref="System.IComparable"/>, <see cref="System.IFormattable"/>, and <see cref="System.IConvertible"/>. Use the <see cref="System.Convert"/> class for conversions instead of this type's explicit
interface member implementation of <see cref="System.IConvertible"/>.</para>
		</remarks>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="UInt64.Parse">
		<overload>
			<para>Converts the string representation of a number to its 64-bit
      unsigned integer equivalent.</para>
		</overload>
		<summary>
			<para>Converts the string representation of a number to its 64-bit
      unsigned integer equivalent.</para>
		</summary>
		<altcompliant cref="System.Decimal.Parse"/>
		<param name="s">A string representing the number to convert.</param>
		<returns>
			<para>A 64-bit unsigned integer equivalent to the number contained in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="s "/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.FormatException">The <paramref name="s "/> parameter is not of the correct format.</exception>
		<exception cref="System.OverflowException">The <paramref name="s "/>parameter represents a number less than <see cref="System.UInt64.MinValue"/> or greater than <see cref="System.UInt64.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/>parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional positive sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>The <paramref name="s"/> parameter is parsed using the formatting information in a <see cref="System.Globalization.NumberFormatInfo"/> initialized for the current system
   culture. For more information, see <see cref="System.Globalization.NumberFormatInfo.CurrentInfo" qualify="true"/>.</para>
		</remarks>
		<example>
			<para> The following example demonstrates the <see cref="System.UInt64.Parse"/>
method.</para>
			<codelink SampleID="UInt64 Example" SnippetID="5"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.UInt64.ToString"/>
	</doc>
	<doc for="UInt64.Parse1">
		<summary>
			<para>Converts the string representation of a number in a
      specified style to its 64-bit unsigned integer equivalent.</para>
		</summary>
		<altcompliant cref="System.Decimal.Parse"/>
		<param name=" s">A string representing the number to convert. </param>
		<param name=" style">The combination of one or more <see cref="System.Globalization.NumberStyles"/> constants that indicate the permitted format of <paramref name="s"/>. </param>
		<returns>
			<para>A 64-bit unsigned integer equivalent to the number specified in <paramref name="s"/>
.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="s "/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException">The <paramref name="style"/> parameter is not a valid combination of bit flags from the <see cref="System.Globalization.NumberStyles"/> enumeration.</exception>
		<exception cref="System.FormatException">The <paramref name="s "/> parameter is not in a format compliant with <paramref name="style "/>.</exception>
		<exception cref="System.OverflowException">The <paramref name="s "/>parameter represents a number less than <see cref="System.UInt64.MinValue"/> or greater than <see cref="System.UInt64.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional positive sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>The <paramref name="style "/> parameter can be one or more
<see cref="System.Globalization.NumberStyles"/> enumerated
   constants combined using a bitwise OR operation (except <see cref="System.Globalization.NumberStyles.Any"/> and <see cref="System.Globalization.NumberStyles.AllowDecimalPoint"/> , which are invalid for the
   type returned by this method).</para>
		</remarks>
		<example>
			<para> The following example demonstrates the <see cref="System.UInt64.Parse"/>
method.</para>
			<codelink SampleID="UInt64 Example" SnippetID="7"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.UInt64.ToString"/>
	</doc>
	<doc for="UInt64.Parse3">
		<summary>
			<para>Converts the string representation of a number in a
      specified culture-specific format to its 64-bit unsigned integer equivalent.</para>
		</summary>
		<altcompliant cref="System.Decimal.Parse"/>
		<param name=" s">A string representing the number to convert.</param>
		<param name=" provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>.</param>
		<returns>
			<para>A 64-bit unsigned integer equivalent to the number specified in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="s "/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.FormatException">The <paramref name="s"/> parameter is not in the correct style.</exception>
		<exception cref="System.OverflowException">The <paramref name="s "/> parameter represents a number less than <see cref="System.UInt64.MinValue"/> or greater than <see cref="System.UInt64.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional positive sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>The <paramref name="provider"/> parameter is an
<see cref="System.IFormatProvider"/> that obtains
   a <see cref="System.Globalization.NumberFormatInfo"/>
   . The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific information
   about the format of <paramref name="s"/>. If <paramref name="provider"/> is <see langword="null"/>,
   the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture is used.</para>
		</remarks>
		<example>
			<para> The following example demonstrates the <see cref="System.UInt64.Parse"/>
method.</para>
			<codelink SampleID="UInt64 Example" SnippetID="6"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.UInt64.ToString"/>
	</doc>
	<doc for="UInt64.Parse2">
		<summary>
			<para>Converts the string representation of a number in a
      specified style and culture-specific format to its 64-bit unsigned integer
      equivalent.</para>
		</summary>
		<altcompliant cref="System.Decimal.Parse"/>
		<param name=" s">A string representing the number to convert.</param>
		<param name=" style">The combination of one or more <see cref="System.Globalization.NumberStyles"/>constants that indicate the permitted format of <paramref name="s"/>.</param>
		<param name=" provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>.</param>
		<returns>
			<para>A 64-bit unsigned integer equivalent to the number specified in <paramref name="s"/>
.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="s "/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException">The <paramref name="style"/> parameter is not a valid combination of <see cref="System.Globalization.NumberStyles"/> enumerated constants.</exception>
		<exception cref="System.FormatException">The <paramref name="s "/> parameter is not in a format compliant with <paramref name="style"/>.</exception>
		<exception cref="System.OverflowException">The <paramref name="s "/> parameter represents a number less than <see cref="System.UInt64.MinValue"/> or greater than <see cref="System.UInt64.MaxValue"/>.</exception>
		<remarks>
			<para>The <paramref name="s "/> parameter contains a number of the form:</para>
			<para>[ws][sign]digits[ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional positive sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>The <paramref name="style "/> parameter can be one or more
<see cref="System.Globalization.NumberStyles"/> enumerated
   constants combined using a bitwise OR operation (except <see cref="System.Globalization.NumberStyles.Any"/> and <see cref="System.Globalization.NumberStyles.AllowDecimalPoint"/> , which are invalid for the
   type returned by this method).</para>
			<para>The <paramref name="provider"/> parameter is an
<see cref="System.IFormatProvider"/> that obtains
a <see cref="System.Globalization.NumberFormatInfo"/>
. The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific information
about the format of <paramref name="s"/>. If <paramref name="provider"/> is <see langword="null"/>,
the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture is used.</para>
		</remarks>
		<example>
			<para> The following example demonstrates the <see cref="System.UInt64.Parse"/>
method.</para>
			<codelink SampleID="UInt64 Example" SnippetID="8"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.UInt64.ToString"/>
	</doc>
	<doc for="UInt64.ToString1">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent string representation using the specified format. </para>
		</summary>
		<param name="format">A format string.</param>
		<returns>
			<para>The string representation of the value of this instance as specified by <paramref name="format"/>.</para>
		</returns>
		<exception cref="System.FormatException">The <paramref name="format"/> parameter is invalid.</exception>
		<remarks>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string (""), the return value of this instance is formatted with the general format specifier ("G").</para>
			<para>The return value of this instance is formatted with the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture. </para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConNumericFormatStrings"/>
		<seealso cref="System.UInt64.Parse"/>
		<seealso cref="System.String"/>
	</doc>
	<doc for="UInt64.ToString2">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent string representation using the specified format and
      culture-specific format information. </para>
		</summary>
		<param name=" format">A format specification.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about this instance.</param>
		<returns>
			<para>The string representation of the value of this instance as
      specified by <paramref name="format"/> and <paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.FormatException">The <paramref name="format"/> parameter is invalid.</exception>
		<remarks>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string (""), the return
   value for this instance is formatted with the general format specifier ("G").</para>
			<para>The <paramref name="provider"/> parameter is an
<see cref="System.IFormatProvider"/> that obtains a
<see cref="System.Globalization.NumberFormatInfo"/>. The <see cref="System.Globalization.NumberFormatInfo"/> provides culture-specific format
information about this instance. If <paramref name="provider"/> is <see langword="null"/>, the return value for this instance is
formatted with the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<example>
			<para> The following example demonstrates the <see cref="System.UInt64.ToString"/> method.</para>
			<codelink SampleID="UInt64 Example" SnippetID="4"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConNumericFormatStrings"/>
		<seealso cref="System.UInt64.Parse"/>
		<seealso cref="System.String"/>
	</doc>
</docs>
