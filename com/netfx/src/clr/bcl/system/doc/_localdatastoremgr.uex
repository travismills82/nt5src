<docs>
	<doc for="LocalDataStoreSlot.Finalize">
		<summary>
			<para>Releases the memory slot reserved by an object when the object no longer exists.</para>
		</summary>
		<remarks>
			<para><see cref="System.LocalDataStoreSlot.Finalize"/>
locks the data store manager before marking the data slot as unoccupied.</para>
		</remarks>
	</doc><doc for="LocalDataStoreSlot">
		<summary>
			<para>Encapsulates a memory slot to store local data. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para> Threads and contexts use
      a local store memory mechanism to store thread-specific
      and context-specific data, respectively. The common language runtime allocates a multi-slot
      data store array to each process when it is created. The thread or context calls
      various functions to allocate a data slot in the data store, to store and
      retrieve a data value in the slot, and to
      free a data slot for reuse after the thread or context object expires.</para>
			<para> The data slots are unique per thread or context; their
      values are not shared between the thread or context objects. Data slots can be
      allocated by a name or by an index number.</para>
			<para> For more information, see <see cref="System.Threading.Thread"/> or
<see cref="System.Runtime.Remoting.Contexts.Context"/>.</para>
		</remarks>
		<seealso cref="System.Threading.Thread"/>
		<seealso cref="System.Runtime.Remoting.Contexts.Context"/>
	</doc></docs>
