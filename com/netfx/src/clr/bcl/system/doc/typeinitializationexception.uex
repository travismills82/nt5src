<docs>
	<doc for="TypeInitializationException.TypeName">
		<summary>
			<para> Gets the fully qualified name of the type that fails to
      initialize.</para>
		</summary>
		<value>
			<para>The fully qualified name of the type that fails to initialize.</para>
		</value>
	</doc><doc for="TypeInitializationException.GetObjectData">
		<summary>
			<para>Sets the <see cref="System.Runtime.Serialization.SerializationInfo"/> object with the type name and 
 additional exception information.</para>
		</summary>
		<param name="info">The <see cref="System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
		<param name=" context">The <see cref="System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
	</doc>
	<doc for="TypeInitializationException.TypeInitializationException">
		<summary>
			<para>Initializes a new instance of the <see cref="System.TypeInitializationException"/> class with the default error message, the specified type name, and a reference to the
   inner exception that is the root cause of this exception.</para>
		</summary>
		<param name="fullTypeName">The fully qualified name of the type that fails to initialize.</param>
		<param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para> An exception that is thrown as a direct result of
      a previous exception can include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/> property returns 
      the same value that is passed into the constructor, or a null reference
      (<see langword="Nothing"/> in Visual Basic) if the <see cref="System.Exception.InnerException"/>
      property does not supply the inner exception value to
      the constructor. </para>
			<para>The following table shows the initial property values for an instance of
   <see cref="System.TypeInitializationException"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message string.</description>
				</item>
				<item>
					<term><see cref="System.TypeInitializationException.TypeName"/></term>
					<description> The name of the type.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="TypeInitializationException">
		<summary>
			<para>The exception that is thrown as a wrapper around the exception thrown by the class initializer.
      This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para> When a class initializer fails to initialize a type, a
   <see cref="System.TypeInitializationException"/> is created and passed a
      reference to the exception thrown by the type's class initializer.
      The <see cref="System.Exception.InnerException"/>
      property of <see cref="System.TypeInitializationException"/>
      holds the underlying exception.</para>
			<para><see cref="System.TypeInitializationException"/> uses the
   HRESULT COR_E_TYPEINITIALIZATION, that has the value 0x80131534.</para>
			<para>For a list of initial property values for an instance of <see cref="System.TypeInitializationException"/>,
see the <see cref="System.TypeInitializationException()"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc></docs>
