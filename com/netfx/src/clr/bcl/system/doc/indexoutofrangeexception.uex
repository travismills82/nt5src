<docs>
	<doc for="IndexOutOfRangeException.IndexOutOfRangeException">
		<overload>
			<para>Initializes a new instance of the <see cref="System.IndexOutOfRangeException"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.IndexOutOfRangeException"/> 
class.</para>
		</summary>
		<remarks>
			<para>This constructor initializes the <see cref="System.Exception.Message"/> 
property of the new instance to a system-supplied message that describes the
error, such as "An array index is out of range." This message takes into account
the current system culture.</para>
			<para>The following table shows the initial property values
   for an instance of <see cref="System.IndexOutOfRangeException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="IndexOutOfRangeException.IndexOutOfRangeException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IndexOutOfRangeException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see langword="InnerException"/> property returns the same 
      value that is passed into the constructor, or a null reference
      (<see langword="Nothing"/> in Visual Basic) if the <see langword="InnerException"/>
      property does not supply the inner exception value to
      the constructor. </para>
			<para>The following table shows the initial property values for an instance of <see cref="System.IndexOutOfRangeException"/>.</para>
			<list type="table"><listheader>
					<term> Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
	</doc><doc for="IndexOutOfRangeException.IndexOutOfRangeException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.IndexOutOfRangeException"/>
class with a specified error message.</para>
		</summary>
		<param name="message">The message that describes the error.</param>
		<remarks>
			<para>This constructor initializes the <see cref="System.Exception.Message" qualify="true"/> 
property of the new exception using the <paramref name="message "/>parameter. The content of <paramref name="message"/> is intended to be
understood by humans. The caller of this constructor is required to ensure that
this string has been localized for the current system culture.</para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.IndexOutOfRangeException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="IndexOutOfRangeException">
		<summary>
			<para>The exception that is thrown when an attempt is made to
      access an element of an array with an index that is outside
      the bounds of the array. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The following Microsoft intermediate language (MSIL) instructions throw <see cref="System.IndexOutOfRangeException"/>
:</para>
			<list type="bullet"><item>
					<term>
      ldelem.&lt;type&gt;</term>
				</item>
				<item>
					<term>
      ldelema</term>
				</item>
				<item>
					<term>
      stelem.&lt;type&gt;</term>
				</item>
			</list>
			<para><see cref="System.IndexOutOfRangeException"/> uses the HRESULT
COR_E_INDEXOUTOFRANGE, which has the value 0x80131508.</para>
			<para>For a list of initial property values for an instance of <see cref="System.IndexOutOfRangeException"/>, see the <see cref="System.IndexOutOfRangeException"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc>
</docs>
