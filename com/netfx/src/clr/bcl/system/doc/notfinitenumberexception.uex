<docs>
	<doc for="NotFiniteNumberException.GetObjectData">
		<summary>
			<para>Sets the <see cref="System.Runtime.Serialization.SerializationInfo"/>
object with the invalid number and additional exception information.</para>
		</summary>
		<param name="info">The object that holds the serialized object data.</param>
		<param name="context">The contextual information about the source or destination.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="info"/> object is <see langword="null"/>.</exception>
		<remarks>
			<para><see cref="System.TypeLoadException.GetObjectData"/> sets a <see cref="System.Runtime.Serialization.SerializationInfo"/> with all the exception object data 
   targeted for serialization. During deserialization, the exception object is
   reconstituted from the <see cref="System.Runtime.Serialization.SerializationInfo"/> transmitted over the stream.</para>
			<para> 
   For more information, see
<see cref="System.Runtime.Serialization.SerializationInfo"/>.</para>
		</remarks>
		<seealso cref="System.Runtime.Serialization.SerializationInfo"/>
		<seealso cref="System.Runtime.Serialization.StreamingContext"/>
	</doc><doc for="NotFiniteNumberException.NotFiniteNumberException5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.NotFiniteNumberException"/> class with serialized data.</para>
		</summary>
		<param name="info">The object that holds the serialized object data.</param>
		<param name="context">The contextual information about the source or destination.</param>
		<remarks>
			<para>This constructor is called during deserialization to reconstitute the
      exception object transmitted over a stream. For more information, see
   <see topic="cpconSerialization"/>.</para>
		</remarks>
		<seealso topic="cpconSerialization"/>
	</doc><doc for="NotFiniteNumberException.OffendingNumber">
		<summary>
			<para> Gets the invalid number that is a positive infinity, a negative infinity, or Not-a-Number (NaN).</para>
		</summary>
		<value>
			<para>The invalid number.</para>
		</value>
		<remarks>
			<para>The <see cref="System.NotFiniteNumberException.OffendingNumber"/> property returns the same value as was 
   passed into the constructor, or zero if no value was supplied. Override
   the <see cref="System.NotFiniteNumberException.OffendingNumber"/> property to customize the content or
   format of the invalid value.</para>
			<para>This property is read-only.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="NotFiniteNumberException.NotFiniteNumberException">
		<overload>
			<para>Initializes a new instance
      of the <see cref="System.NotFiniteNumberException"/> class.</para>
		</overload>
		<summary>
   Initializes a new instance of the <see cref="System.NotFiniteNumberException"/> class.
</summary>
		<remarks>
			<para>This constructor initializes the <see cref="System.Exception.Message"/> 
property of the new instance to a system-supplied message that describes the
error, such as "The number encountered was not a finite quantity." This message
takes into account the current system culture.</para>
			<para>The following table shows the initial property values for an instance of <see cref="System.NotFiniteNumberException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="NotFiniteNumberException.NotFiniteNumberException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.NotFiniteNumberException"/>
class with the invalid number.</para>
		</summary>
		<param name="offendingNumber">The value of the argument that caused the exception.</param>
		<remarks>
			<para>The <paramref name="offendingNumber"/> parameter must be both a <see cref="System.Double"/>
and an invalid number.</para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.NotFiniteNumberException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.NotFiniteNumberException.OffendingNumber"/></term>
					<description>The invalid number.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="NotFiniteNumberException.NotFiniteNumberException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.NotFiniteNumberException"/> class with a specified error
   message.</para>
		</summary>
		<param name="message">The message that describes the error.</param>
		<remarks>
			<para>The content of the <paramref name="message"/> parameter is 
   should be understandable to the user. The caller of this constructor is required
   to ensure that this string has been localized for the current system
   culture.</para>
			<para>The following table shows the initial property
   values for an instance of <see cref="System.NotFiniteNumberException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="NotFiniteNumberException.NotFiniteNumberException3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.NotFiniteNumberException"/>
class with a specified error message and the invalid number.</para>
		</summary>
		<param name="message">The message that describes the error.</param>
		<param name="offendingNumber">The value of the argument that caused the exception.</param>
		<remarks>
			<para>The content of the <paramref name="message"/> parameter 
   should be understandable to the user. The caller of this constructor is required
   to ensure that this string has been localized for the current system
   culture.</para>
			<para>The following table shows the initial property
   values for an instance of <see cref="System.NotFiniteNumberException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
				<item>
					<term><see cref="System.NotFiniteNumberException.OffendingNumber"/></term>
					<description>The invalid number.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="NotFiniteNumberException.NotFiniteNumberException4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.NotFiniteNumberException"/> class with a specified error message, the invalid
   number, and a reference to the inner exception that is root cause of this
   exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="offendingNumber">The value of the argument that caused the exception.</param>
		<param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para> An exception that is thrown as a direct result of
      a previous exception can include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/>
   property returns the same value that is passed into the constructor, or
<see langword="null"/> if the <see cref="System.Exception.InnerException"/> 
property does not supply the inner exception value to
the constructor. </para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.NotFiniteNumberException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
				<item>
					<term><see cref="System.NotFiniteNumberException.OffendingNumber"/></term>
					<description>The invalid number.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="NotFiniteNumberException">
		<summary>
			<para> The exception that is thrown when a floating-point value is positive infinity,
      negative infinity, or Not-a-Number (NaN).</para>
		</summary>
		<remarks>
			<para>Operations involving <see cref="System.Double"/> or <see cref="System.Single"/> operations throw
   this exception.</para>
			<para>Applications written in C# will not throw this
   exception. <see cref="System.NotFiniteNumberException"/> is available for languages
   that do not support infinity and Not-a-Number constants.</para>
			<para><see cref="System.NotFiniteNumberException"/> uses the HRESULT COR_E_NOTFINITENUMBER, which has the
value 0x80131528.</para>
			<para>For a list of initial property values for an instance of
<see langword="NotFiniteNumberException"/>, see the <see cref="System.NotFiniteNumberException()"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso cref="System.Double"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc></docs>
