<docs>
	<doc for="Decimal.SignMask">
		<summary>
			<para>(This constant is obsolete, and will
       be removed in a future release.)
       </para>
			<para> Representing the constant that is the sign mask for the flags field.</para>
		</summary>
		<remarks>
			<para>The SignMask
       is for the flags field. A value of zero in this bit indicates a positive Decimal value, and a value of one in this bit indicates a
       negative Decimal value</para>
			<para>See the OleAut's DECIMAL_NEG
       constant for negative values in native code.</para>
			<para>The SignMask
       hexadecimal value is unchecked((int)0x80000000).</para>
		</remarks>
	</doc>
	<doc for="Decimal.ScaleMask">
		<summary>
			<para>(This constant is obsolete, and
       will be removed in a future release.)
       </para>
			<para>Representing the constant that is the scale mask for the flags field.</para>
		</summary>
		<remarks>
			<para>The ScaleMask
       is for the flags field. This byte in the flags field contains the power of ten
       with which to divide the Decimal value. The scale byte
       must contain a value between 0 through 28, inconclusive.</para>
			<para>The ScaleMask
       hexadecimal value is 0x00FF0000.</para>
			<para>A value of zero in this bit
       indicates a positive Decimal value, and a value of one
       in this bit indicates a negative Decimal value.</para>
			<para>The number of bits the scale (ScaleShift) is shifted by is 16.</para>
		</remarks>
	</doc>
	<doc for="Decimal.Decimal6">
		<summary>
			<para>
       Initializes a new instance of the Decimal class to a value specified by a <see cref="System.Currency"/>.
    </para>
		</summary>
		<param name="value">
    The value to represent as a Decimal.
 </param>
		<remarks>
			<para>
       This
       constructor initializes a Decimal
       from a parameter in Currency format.
    </para>
		</remarks>
	</doc>
	<doc for="Decimal.Abs">
		<summary>
			<para>
       Returns the absolute value of the specified Decimal.
    </para>
		</summary>
		<param name="d">
    A Decimal value.
 </param>
		<value>
			<list type="table">
				<listheader>
					<term>
             Property Value
          </term>
					<description>
             Condition
          </description>
				</listheader>
				<item>
					<term>
						<paramref name="d"/>
					</term>
					<description>
          The Decimal value.
       </description>
				</item>
				<item>
					<term>
						<paramref name="-d"/>
					</term>
					<description>
       The negative Decimal value.
    </description>
				</item>
			</list>
		</value>
		<returns>
			<para>
       The
       absolute value of the argument.
    </para>
		</returns>
		<remarks>
			<para>
       The
       Abs method returns the absolute value of the specified Decimal.
       For example:
    </para>
			<para>
       If <paramref name="d"/> is
       positive, the result is <paramref name="d"/>.
    </para>
			<para>
       If <paramref name="d"/> is
       negative, the result is <paramref name="-d"/>.
    </para>
		</remarks>
	</doc>
	<doc for="Decimal.Max">
		<summary>
			<para>
       Returns the larger of two Decimal
       values.
    </para>
		</summary>
		<param name="d1">
    The first Decimal.
 </param>
		<param name="d2">
    The second Decimal.
 </param>
		<returns>
			<para>
       The larger
       of the two Decimal arguments.
    </para>
		</returns>
		<remarks>
			<para>
       The Max method compares two Decimal
       values and returns the larger of the two arguments by using the following:
    </para>
			<para>
       Compare(d1, d2) &gt;= 0? d1 : d2;
    </para>
		</remarks>
	</doc>
	<doc for="Decimal.Min">
		<summary>
			<para>
       Returns the
       smaller of two Decimal values.
    </para>
		</summary>
		<param name="d1">
    The first Decimal.
 </param>
		<param name="d2">
    The second Decimal.
 </param>
		<returns>
			<para>
       The smaller
       of the two Decimal arguments.
    </para>
		</returns>
		<remarks>
			<para>
       The Min method compares two Decimal
       values and returns the smaller of the two arguments by using the following:
    </para>
			<para>
       Compare(d1, d2) &lt; 0? d1 : d2;
    </para>
		</remarks>
	</doc>



	<doc for="Decimal.ToCurrency">
		<summary>
			<para>Returns a <see cref="System.Currency"/> object having a value equivalent to the 
    specified <see langword="Decimal"/>.</para>
		</summary>
		<param name="d">A Decimal value to convert.</param>
		<returns>
			<para>A <see langword="Currency"/> object equivalent to <paramref name="d"/> .</para>
		</returns>
		<exception cref="System.OverflowException">is thrown if the Decimal is less than Decimal.MinValue or greater than Decimal.MaxValue.</exception>
		<remarks>
			<para> 
       Since a Currency has fewer
       significant digits than a Decimal, this
       operation may produce round-off errors.</para>
		</remarks>
	</doc>
	<doc for="Decimal.IConvertible.ToBoolean">
		<summary>
			<para>This conversion is not supported. Attempting to do so throws an <see langword="InvalidCastException"/>.</para>
		</summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="Decimal"/>.</exception>
	</doc>
	<doc for="Decimal.IConvertible.ToChar">
		<summary>
 This conversion is not supported. Attempting to do so 
 throws an <see langword="InvalidCastException"/>.
 </summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="Decimal"/>.</exception>
	</doc>
	<doc for="Decimal.IConvertible.ToSByte">
		<summary>
			<para>Converts a Decimal to
       an <see cref="System.SByte"/>
       with the default format.</para>
		</summary>
		<returns>
			<para>The Decimal value
       converted to an SByte.</para>
		</returns>
		<exception cref="System.OverflowException">is thrown if the resulting integer value is less than SByte.MinValue or greater than SByte.MaxValue.</exception>
	</doc>
	<doc for="Decimal.IConvertible.ToDateTime">
		<summary>
			<para>This conversion is not supported.
       Attempting to do so throws an <see langword="InvalidCastException"/>.</para>
		</summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="Decimal"/>.</exception>
	</doc>
	<doc for="Decimal.GetHashCode">
		<summary>
			<para>Returns the hash code for this instance.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer hash code.</para>
		</returns>
	</doc>

<doc for="Decimal.Decimal">
		<overload>
			<para>Initializes a new instance of <see cref="System.Decimal"/>.</para>
		</overload>
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to
 the value of the specified 32-bit signed integer.</para>
		</summary>
		<param name="value">The value to represent as a <see cref="System.Decimal"/>.</param>
	</doc>
	<doc for="Decimal.Decimal2">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to
 the value of the specified 64-bit signed integer.</para>
		</summary>
		<param name="value">The value to represent as a <see cref="System.Decimal"/>.</param>
	</doc>
	<doc for="Decimal.Decimal3">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to
 the value of the specified 64-bit unsigned integer.</para>
		</summary>
		<param name="value">The value to represent as a <see cref="System.Decimal"/>.</param>
	</doc>
	<doc for="Decimal.operatorADD1">
		<summary>
			<para> Returns the value of the <see cref="System.Decimal"/> operand (the
 sign of the operand is unchanged).</para>
		</summary>
		<param name="d">The <see cref="System.Decimal"/> operand.</param>
		<returns>
			<para>The value of the operand, <paramref name="d"/>.</para>
		</returns>
	</doc>
	<doc for="Decimal.operatorDecimal">
		<summary>
			<para>Converts an 8-bit unsigned integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">An 8-bit unsigned integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 8-bit
 unsigned integer.</para>
		</returns>
		<seealso cref="System.Byte"/>
	</doc>
	<doc for="Decimal.operatorDecimal1">
		<summary>
			<para>Converts an 8-bit signed integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">An 8-bit signed integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 8-bit
 signed integer.</para>
		</returns>
		<seealso cref="System.SByte"/>
	</doc>
	<doc for="Decimal.operatorDecimal2">
		<summary>
			<para>Converts a 16-bit signed integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A 16-bit signed integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 16-bit
 signed integer.</para>
		</returns>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="Decimal.operatorDecimal3">
		<summary>
			<para>Converts a 16-bit unsigned integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A 16-bit unsigned integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 16-bit
 unsigned integer.</para>
		</returns>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="Decimal.operatorDecimal4">
		<summary>
			<para>Converts a Unicode character to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A Unicode character.</param>
		<returns>
			<para>A <see cref="System.Decimal"/>
that represents the converted
Unicode character.</para>
		</returns>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="Decimal.operatorDecimal5">
		<summary>
			<para>Converts a 32-bit signed integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A 32-bit signed integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 32-bit
 signed integer.</para>
		</returns>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="Decimal.operatorDecimal6">
		<summary>
			<para>Converts a 32-bit unsigned integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A 32-bit unsigned integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 32-bit
 unsigned integer.</para>
		</returns>
		<seealso cref="System.UInt32"/>
	</doc>
	<doc for="Decimal.operatorDecimal7">
		<summary>
			<para>Converts a 64-bit signed integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A 64-bit signed integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 64-bit
 signed integer.</para>
		</returns>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="Decimal.operatorDecimal8">
		<summary>
			<para>Converts a 64-bit unsigned integer to a <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A 64-bit unsigned integer.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
 represents the converted 64-bit
 unsigned integer.</para>
		</returns>
		<seealso cref="System.UInt64"/>
	</doc>
	<doc for="Decimal.MinValue">
		<summary>
			<para> Represents the smallest possible value of <see cref="System.Decimal"/>. This field is constant
 and read-only.</para>
		</summary>
		<remarks>
			<para> The value of this constant is
 negative 79,228,162,514,264,337,593,543,950,335.</para>
		</remarks>
		<seealso cref="System.Decimal.Zero"/>
		<seealso cref="System.Decimal.One"/>
		<seealso cref="System.Decimal.MinusOne"/>
		<seealso cref="System.Decimal.MaxValue"/>
	</doc>
	<doc for="Decimal.Decimal1">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to
 the value of the specified 32-bit unsigned integer.</para>
		</summary>
		<param name="value">The value to represent as a <see cref="System.Decimal"/>.</param>
	</doc>
	<doc for="Decimal.ToOACurrency">
		<summary>
			<para>Converts the specified <see cref="System.Decimal"/> value to the equivalent OLE Automation Currency
 value, which
 is contained in a 64-bit signed integer.</para>
		</summary>
		<param name="value">A <see cref="System.Decimal"/> value.</param>
		<returns>
			<para>A 64-bit signed integer that contains the OLE Automation equivalent of
 <paramref name="value"/>.</para>
		</returns>
		<seealso cref="System.Decimal.FromOACurrency"/>
	</doc>
	<doc for="Decimal.FromOACurrency">
		<summary>
			<para>Converts the specified 64-bit signed integer, which 
 contains an OLE Automation Currency value, to the equivalent <see cref="System.Decimal"/> value.</para>
		</summary>
		<param name="cy">An OLE Automation Currency value.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that contains the equivalent of <paramref name="cy"/>.</para>
		</returns>
		<seealso cref="System.Decimal.ToOACurrency"/>
	</doc>
	<doc for="Decimal.ToSByte">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the equivalent 8-bit signed integer.</para>
		</summary>
		<altcompliant cref="System.Decimal.ToInt16"/>
		<param name="value">A <see cref="System.Decimal"/> value.</param>
		<returns>
			<para>An 8-bit signed integer equivalent to <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.SByte.MinValue" qualify="true"/> or greater than <see cref="System.SByte.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.SByte"/>
	</doc>
	<doc for="Decimal.ToInt16">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the equivalent 16-bit signed integer.</para>
		</summary>
		<param name="value">A <see cref="System.Decimal"/> value.</param>
		<returns>
			<para>A 16-bit signed integer equivalent to <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Int16.MinValue" qualify="true"/> or greater than <see cref="System.Int16.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="Decimal.ToInt32">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the equivalent 32-bit signed integer.</para>
		</summary>
		<param name="d">The <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para>A 32-bit signed integer equivalent to the value of <paramref name="d"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="d"/> is less than <see cref="System.Int32.MinValue" qualify="true"/> or greater than <see cref="System.Int32.MaxValue" qualify="true"/>.</exception>
		<remarks>
			<para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
		</remarks>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="Decimal.ToInt64">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the equivalent 64-bit signed integer.</para>
		</summary>
		<param name="d">The <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para>A 64-bit signed integer equivalent to the value of <paramref name="d"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="d"/> is less than <see cref="System.Int64.MinValue" qualify="true"/> or greater than <see cref="System.Int64.MaxValue" qualify="true"/>.</exception>
		<remarks>
			<para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
		</remarks>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="Decimal.ToUInt32">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the
 equivalent 32-bit unsigned integer.</para>
		</summary>
		<altcompliant cref="System.Decimal.ToInt64"/>
		<param name="d">A <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para> A 32-bit unsigned integer equivalent to the value of <paramref name="d"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="d"/> is negative or greater than <see cref="System.UInt32.MaxValue" qualify="true"/>.</exception>
		<remarks>
			<para> The return value is the integral part of the decimal
 value; fractional digits are truncated.</para>
		</remarks>
		<seealso cref="System.UInt32"/>
	</doc>
	<doc for="Decimal.operatorbyte">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to an 8-bit unsigned integer.</para>
		</summary>
		<altmember cref="System.Decimal.ToByte"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>An 8-bit unsigned integer that represents the converted 
 <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Byte.MinValue" qualify="true"/> or greater than <see cref="System.Byte.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.Byte"/>
	</doc>
	<doc for="Decimal.operatorsbyte">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to an 8-bit signed integer.</para>
		</summary>
		<altcompliant cref="System.Decimal.ToInt16"/>
		<altmember cref="System.Decimal.ToSByte"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>An 8-bit signed integer that represents the converted 
 <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.SByte.MinValue" qualify="true"/> or greater than <see cref="System.SByte.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.SByte"/>
	</doc>
	<doc for="Decimal.operatorchar">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a Unicode character.</para>
		</summary>
		<altmember cref="System.Decimal.ToInt16"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para> A Unicode character that represents the converted 
 <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Int16.MinValue" qualify="true"/> or greater than <see cref="System.Int16.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="Decimal.operatorshort">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a 16-bit signed integer.</para>
		</summary>
		<altmember cref="System.Decimal.ToInt16"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>A 16-bit signed integer that represents the converted 
 <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Int16.MinValue" qualify="true"/> or greater than <see cref="System.Int16.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="Decimal.operatorushort">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a 16-bit unsigned integer.</para>
		</summary>
		<altmember cref="System.Decimal.ToUInt16"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>A 16-bit unsigned integer that represents the converted 
 <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is greater than <see cref="System.UInt16.MaxValue" qualify="true"/> or less than <see cref="System.UInt16.MinValue" qualify="true"/>.</exception>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="Decimal.operatorEQ">
		<summary>
			<para>Returns a value indicating whether two instances of
 <see cref="System.Decimal"/>
 are equal.</para>
		</summary>
		<altmember cref="System.Decimal.Equals"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> and <paramref name="d2"/> are equal; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
		<seealso cref="System.Decimal.Equals"/>
	</doc>
	<doc for="Decimal.operatorNE">
		<summary>
			<para>Returns a value indicating whether two instances of
 <see cref="System.Decimal"/>
 are not equal.</para>
		</summary>
		<altmember cref="System.Decimal.Compare"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> and <paramref name="d2"/> are not equal; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
		<seealso cref="System.Decimal.Equals"/>
	</doc>
	<doc for="Decimal.operatorLE">
		<summary>
			<para> Returns a value indicating whether a specified <see cref="System.Decimal"/> is less than or 
 equal to another specified <see cref="System.Decimal"/>.</para>
		</summary>
		<altmember cref="System.Decimal.Compare"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> is less than or equal to <paramref name="d2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
	</doc>
	<doc for="Decimal.Equals1">
		<summary>
			<para>Returns a value indicating whether two specified
      instances of <see cref="System.Decimal"/> represent the same value.</para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> and <paramref name="d2"/> are
   equal; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
		<seealso cref="System.Decimal.CompareTo"/>
	</doc><doc for="Decimal.Equals">
		<overload>
			<para>Returns a value indicating whether two instances of
   <see cref="System.Decimal"/> represent the same
      value.</para>
		</overload>
		<summary>
			<para>Returns a value indicating whether this instance and a
      specified <see cref="System.Object"/> represent the same type and value.</para>
		</summary>
		<param name="value">An <see cref="System.Object"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="value"/> is a <see cref="System.Decimal"/> and equal to this instance; otherwise,
<see langword="false"/>.
   </para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
		<seealso cref="System.Decimal.CompareTo"/>
	</doc><doc for="Decimal.Negate">
		<summary>
			<para> Returns the result of multiplying the specified <see cref="System.Decimal"/> value by
   negative one.</para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para> A <see cref="System.Decimal"/> with the value of <paramref name="d"/>,
   but the opposite sign.
   </para>
			<para> -or-
   </para>
			<para> Zero, if <paramref name="d"/>
is zero.</para>
		</returns>
	</doc><doc for="Decimal.operatorSUB1">
		<summary>
			<para>Negates the value of the specified <see cref="System.Decimal"/> operand.</para>
		</summary>
		<altmember cref="System.Decimal.Negate"/>
		<param name="d">The <see cref="System.Decimal"/> operand.</param>
		<returns>
			<para>The result of <paramref name="d"/> multiplied by negative one 
   (-1).</para>
		</returns>
		<seealso cref="System.Decimal.Negate"/>
	</doc><doc for="Decimal.operatorint">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a 32-bit signed integer.</para>
		</summary>
		<altmember cref="System.Decimal.ToInt32"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>A 32-bit signed integer that represents the converted
   <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Int32.MinValue" qualify="true"/> or greater than <see cref="System.Int32.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.Int32"/>
	</doc><doc for="Decimal.operatoruint">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a 32-bit unsigned integer.</para>
		</summary>
		<altcompliant cref="System.Decimal.ToInt64"/>
		<altmember cref="System.Decimal.ToUInt32"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>A 32-bit unsigned integer that represents the converted
   <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is negative or greater than <see cref="System.UInt32.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.UInt32"/>
	</doc><doc for="Decimal.operatorlong">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a 64-bit signed integer.</para>
		</summary>
		<altmember cref="System.Decimal.ToInt64"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>A 64-bit signed integer that represents the converted
      <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Int64.MinValue" qualify="true"/> or greater than <see cref="System.Int64.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.Int64"/>
	</doc><doc for="Decimal.operatorulong">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a 64-bit unsigned integer.</para>
		</summary>
		<altmember cref="System.Decimal.ToUInt64"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para>A 64-bit unsigned integer that represents the converted
      <see cref="System.Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is negative or greater than <see cref="System.UInt64.MaxValue" qualify="true"/>.</exception>
		<seealso cref="System.UInt64"/>
	</doc><doc for="Decimal.Remainder">
		<summary>
			<para>Computes the remainder after dividing two <see cref="System.Decimal"/> values.</para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/> (the dividend). </param>
		<param name="d2">A <see cref="System.Decimal"/> (the divisor). </param>
		<returns>
			<para>The <see cref="System.Decimal"/> that is the remainder after dividing <paramref name="d1"/> by
<paramref name="d2"/>.</para>
		</returns>
		<exception cref="System.DivideByZeroException"><paramref name="d2"/> is zero.</exception>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
	</doc><doc for="Decimal.operatorINC">
		<summary>
			<para>Increments the <see cref="System.Decimal"/> operand by 1.</para>
		</summary>
		<param name="d">The <see cref="System.Decimal"/> operand.</param>
		<returns>
			<para>The value of <paramref name="d"/> incremented by 1.</para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Add"/>
	</doc><doc for="Decimal.operatorDEC">
		<summary>
			<para>Decrements the <see cref="System.Decimal"/> operand by
   one.</para>
		</summary>
		<param name="d">The <see cref="System.Decimal"/> operand.</param>
		<returns>
			<para>The value of <paramref name="d"/> decremented by 1.</para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Subtract"/>
	</doc><doc for="Decimal.operatorADD2">
		<summary>
			<para> Adds two specified <see cref="System.Decimal"/> values.
   </para>
		</summary>
		<altmember cref="System.Decimal.Add"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para>The <see cref="System.Decimal"/> result
   of adding <paramref name="d1"/> and <paramref name="d2"/>.</para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Add"/>
	</doc><doc for="Decimal.operatorSUB2">
		<summary>
			<para> Subtracts two specified <see cref="System.Decimal"/>
values.</para>
		</summary>
		<altmember cref="System.Decimal.Subtract"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para> The <see cref="System.Decimal"/>
result of subtracting <paramref name="d2"/> from <paramref name="d1"/>
.</para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Subtract"/>
	</doc><doc for="Decimal.operatorMUL">
		<summary>
			<para> Multiplies two specified <see cref="System.Decimal"/>
values.</para>
		</summary>
		<altmember cref="System.Decimal.Multiply"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para> The <see cref="System.Decimal"/> result of multiplying
<paramref name="d1"/> by <paramref name="d2"/>.
   </para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Multiply"/>
	</doc><doc for="Decimal.operatorDIV">
		<summary>
			<para> Divides two specified <see cref="System.Decimal"/> values.
   </para>
		</summary>
		<altmember cref="System.Decimal.Divide"/>
		<param name="d1">A <see cref="System.Decimal"/> (the dividend). </param>
		<param name="d2">A <see cref="System.Decimal"/> (the divisor). </param>
		<returns>
			<para> The <see cref="System.Decimal"/> result
   of <paramref name="d1"/> by <paramref name="d2"/>.
   </para>
		</returns>
		<exception cref="System.DivideByZeroException"><paramref name="d2"/> is zero. </exception>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Divide"/>
	</doc><doc for="Decimal.operatorMOD">
		<summary>
			<para> Returns the remainder resulting from dividing two
      specified <see cref="System.Decimal"/>
      values.
      </para>
		</summary>
		<altmember cref="System.Decimal.Remainder"/>
		<param name="d1">A <see cref="System.Decimal"/> (the dividend). </param>
		<param name="d2">A <see cref="System.Decimal"/> (the divisor). </param>
		<returns>
			<para>The <see cref="System.Decimal"/> remainder resulting from
   dividing <paramref name="d1"/> by <paramref name="d2"/>.</para>
		</returns>
		<exception cref="System.DivideByZeroException"><paramref name="d2"/> is <see langword="zero"/>.</exception>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Remainder"/>
	</doc><doc for="Decimal.operatorLT">
		<summary>
			<para> Returns a value indicating whether a specified <see cref="System.Decimal"/> is less than
   another specified <see cref="System.Decimal"/>.</para>
		</summary>
		<altmember cref="System.Decimal.Compare"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> is less than <paramref name="d2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
	</doc><doc for="Decimal.operatorGT">
		<summary>
			<para> Returns a value indicating whether a specified <see cref="System.Decimal"/> is greater than
   another specified <see cref="System.Decimal"/>.</para>
		</summary>
		<altmember cref="System.Decimal.Compare"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> is greater than <paramref name="d2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
	</doc><doc for="Decimal.operatorGE">
		<summary>
			<para> Returns a value indicating whether a specified <see cref="System.Decimal"/> is greater than
   or equal to another specified <see cref="System.Decimal"/>.</para>
		</summary>
		<altmember cref="System.Decimal.Compare"/>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="d1"/> is greater than or equal to <paramref name="d2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Decimal.Compare"/>
	</doc><doc for="Decimal.IConvertible.ToByte">
		<summary>
			<para>Converts a <see langword="Decimal"/> to an 8-bit unsigned
   integer.</para>
		</summary>
		<returns>
			<para>An 8-bit unsigned integer equivalent to the value of
      this instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException">The resulting integer value is less than Byte.MinValue or greater than Byte.MaxValue.</exception>
		<remarks>
			<para>The Decimal value is
      rounded toward zero to the nearest integer value, and the result of this
      operation is returned as a byte.</para>
		</remarks>
	</doc><doc for="Decimal.IConvertible.ToInt16">
		<summary>
			<para>Converts a <see langword="Decimal"/> to a 16-bit signed
   integer.</para>
		</summary>
		<returns>
			<para>A 16-bit signed integer equivalent to the value of
      this instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException">The resulting integer value is less than Int16.MinValue or greater than Int16.MaxValue.</exception>
		<remarks>
			<para>
      The Decimal value is rounded toward zero to the nearest integer
      value.</para>
		</remarks>
	</doc><doc for="Decimal.IConvertible.ToUInt16">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a
   16-bit unsigned integer.</para>
		</summary>
		<returns>
			<para>A 16-bit unsigned integer equivalent to the value of this instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException">The resulting integer value is less than UInt16.MinValue or greater than UInt16.MaxValue.</exception>
		<remarks>
			<para>The ToUInt16 method converts a Decimal
      value into a UInt16 and returns it.</para>
		</remarks>
	</doc><doc for="Decimal.IConvertible.ToInt32">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a 32-bit signed integer.</para>
		</summary>
		<returns>
			<para>A 32-bit signed integer equivalent to the value of this instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException">The resulting integer value is less than Int32.MinValue or greater than Int32.MaxValue.</exception>
		<remarks>
			<para>
      The Decimal value is rounded toward zero
      to the nearest integer value.</para>
		</remarks>
	</doc><doc for="Decimal.IConvertible.ToInt64">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a 64-bit signed integer.</para>
		</summary>
		<returns>
			<para>A 64-bit signed integer equivalent to the value of this
      instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="d"/> is less than Int64.MinValue or greater than Int64.MaxValue.</exception>
	</doc><doc for="Decimal.IConvertible.ToUInt64">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a 64-bit unsigned integer.</para>
		</summary>
		<returns>
			<para>A 64-bit unsigned integer equivalent to the value of this
      instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="d"/> is less than UInt64.MinValue or greater than UInt64.MaxValue.</exception>
		<remarks>
			<para>The Decimal value is rounded toward zero to
      the nearest integer value, and the result of this operation is returned as an
      unsigned, long integer.</para>
		</remarks>
	</doc><doc for="Decimal.IConvertible.ToDecimal">
		<summary>
			<para>Returns this instance of <see langword="Decimal"/>
.</para>
		</summary>
		<returns>
			<para>A <see langword="Decimal"/>.</para>
		</returns>
		<remarks>
		</remarks>
	</doc><doc for="Decimal.IConvertible.ToType">
		<summary>
			<para>Returns an object of the specified <see cref="System.Type"/>, with a value equivalent to the value of this instance of <see langword="Decimal"/>.</para>
		</summary>
		<param name="type">The desired type.</param>
		<returns>
			<para>A <paramref name="type"/> object, with a value equivalent
   to the value of this instance of <see langword="Decimal"/>.
   </para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="type"/> is <see langword="null"/>.</exception>
		<exception cref="System.InvalidCastException">The requested type conversion is not supported.</exception>
	</doc><doc for="Decimal.Divide">
		<summary>
			<para> Divides two specified <see cref="System.Decimal"/>
values.</para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/> (the dividend). </param>
		<param name="d2">A <see cref="System.Decimal"/> (the divisor). </param>
		<returns>
			<para> The <see cref="System.Decimal"/> that is the result of
   dividing <paramref name="d1"/> by <paramref name="d2"/>.
   </para>
		</returns>
		<exception cref="System.DivideByZeroException"><paramref name="d2"/> is zero. </exception>
		<exception cref="System.OverflowException">The return value (that is, the quotient) is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Add"/>
		<seealso cref="System.Decimal.Subtract"/>
		<seealso cref="System.Decimal.Multiply"/>
	</doc><doc for="Decimal.Multiply">
		<summary>
			<para> Multiplies two specified <see cref="System.Decimal"/>
values.</para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/> (the multiplicand). </param>
		<param name="d2">A <see cref="System.Decimal"/> (the multiplier). </param>
		<returns>
			<para> A <see cref="System.Decimal"/> that is the result of
   multiplying <paramref name="d1"/> and <paramref name="d2"/>.
   </para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<seealso cref="System.Decimal.Add"/>
		<seealso cref="System.Decimal.Subtract"/>
		<seealso cref="System.Decimal.Divide"/>
	</doc><doc for="Decimal.ToUInt16">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the
   equivalent 16-bit unsigned integer.</para>
		</summary>
		<altcompliant cref="System.Decimal.ToInt32"/>
		<param name="value">A <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para> A 16-bit unsigned integer equivalent to the value
      of <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is greater than <see cref="System.UInt16.MaxValue" qualify="true"/> or less than <see cref="System.UInt16.MinValue" qualify="true"/>.</exception>
		<remarks>
			<para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
		</remarks>
		<seealso cref="System.UInt16"/>
	</doc><doc for="Decimal.Zero">
		<summary>
			<para>Represents the number zero (0).</para>
		</summary>
		<seealso cref="System.Decimal.One"/>
		<seealso cref="System.Decimal.MinusOne"/>
		<seealso cref="System.Decimal.MaxValue"/>
		<seealso cref="System.Decimal.MinValue"/>
	</doc><doc for="Decimal.One">
		<summary>
   Represents the number one (1).
</summary>
		<seealso cref="System.Decimal.Zero"/>
		<seealso cref="System.Decimal.MinusOne"/>
		<seealso cref="System.Decimal.MaxValue"/>
		<seealso cref="System.Decimal.MinValue"/>
	</doc><doc for="Decimal.MinusOne">
		<summary>
   Represents the number negative one (-1).
</summary>
		<seealso cref="System.Decimal.Zero"/>
		<seealso cref="System.Decimal.One"/>
		<seealso cref="System.Decimal.MaxValue"/>
		<seealso cref="System.Decimal.MinValue"/>
	</doc><doc for="Decimal.Parse">
		<overload>
			<para>Converts the <see cref="System.String"/> representation of a number to its
<see cref="System.Decimal"/> equivalent.</para>
		</overload>
		<summary>
			<para>Converts the <see cref="System.String"/> representation of a number to its
<see cref="System.Decimal"/> equivalent.</para>
		</summary>
		<param name="s">A <see cref="System.String"/> containing a number to convert.</param>
		<returns>
			<para>The <see cref="System.Decimal"/> number equivalent to the
   number contained in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="s "/> is not of the correct format.</exception>
		<exception cref="System.OverflowException"><paramref name="s"/> represents a number less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<remarks>
			<para>Parameter <paramref name="s"/> contains a number of the form:</para>
			<para>[ws][sign]digits[.fractional-digits][ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
				<item>
					<term> '.'</term>
					<description>A culture-specific decimal point
            symbol.</description>
				</item>
				<item>
					<term> fractional-digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>Parameter <paramref name="s"/> is interpreted using the <see cref="System.Globalization.NumberStyles.Number" qualify="true"/> style.</para>
			<para>Parameter <paramref name="s"/> is parsed using the formatting information in a <see cref="System.Globalization.NumberFormatInfo"/> initialized for the current system
culture. For more information, see <see cref="System.Globalization.NumberFormatInfo.CurrentInfo"/>.</para>
			<para>If necessary, the value of <paramref name="s"/> is rounded using rounding to nearest.</para>
			<para>A <see cref="System.Decimal"/> has
29 digits of precision. If <paramref name="s"/> represents a number that has
more than 29 digits, but has a fractional part and is within the range of
<see cref="System.Decimal.MaxValue"/> 
and <see cref="System.Decimal.MinValue"/>, the number is rounded, not truncated, to 29
digits using rounding to nearest.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Decimal.ToString"/>
		<seealso cref="System.Math.Round" qualify="true"/>
	</doc><doc for="Decimal.Parse1">
		<summary>
			<para>Converts the <see cref="System.String"/> representation of a number in a
   specified style to its <see cref="System.Decimal"/> equivalent using the specified
   formatting style.</para>
		</summary>
		<param name="s">A <see cref="System.String"/> containing a number to convert.</param>
		<param name="style">The combination of one or more <see cref="System.Globalization.NumberStyles"/> constants that indicate the permitted format of <paramref name="s"/>.</param>
		<returns>
			<para>The <see cref="System.Decimal"/>
number equivalent to the number contained in <paramref name="s"/> as specified by
<paramref name="style"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="s"/> is <see langword="null"/>.</para>
			<para>-or-</para>
			<para><paramref name="style "/>is not a valid combination of bit flags from the <see cref="System.Globalization.NumberStyles"/> enumeration.</para></exception>
		<exception cref="System.FormatException"><paramref name="s"/> is not of the correct format.</exception>
		<exception cref="System.OverflowException"><paramref name="s"/> represents a number less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/></exception>
		<remarks>
			<para>Parameter <paramref name="s"/> contains a number of the form:</para>
			<para>[ws][sign]digits[.fractional-digits][ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
				<item>
					<term> '.'</term>
					<description>A culture-specific decimal point symbol.</description>
				</item>
				<item>
					<term> fractional-digits</term>
					<description>A sequence of digits ranging from 0 to 9.</description>
				</item>
			</list>
			<para>The
   <paramref name="style"/> parameter
      specifies the permitted style of the numeric string. It must be a combination of
      bit flags from the <see cref="System.Globalization.NumberStyles"/>
      enumeration. If <paramref name="style"/> is null, <paramref name="s"/> is interpreted using the
   <see cref="System.Globalization.NumberStyles.Number" qualify="true"/>
   style.</para>
			<para>Parameter <paramref name="s"/> is parsed using the formatting information in a <see cref="System.Globalization.NumberFormatInfo"/> initialized for the current system
culture. For more information, see <see cref="System.Globalization.NumberFormatInfo.CurrentInfo"/>.</para>
			<para>A <see cref="System.Decimal"/> has
29 digits of precision. If <paramref name="s"/> represents a number that has more than 29
digits, but has a fractional part and is within the range of <see cref="System.Decimal.MaxValue"/> and
<see cref="System.Decimal.MinValue"/>, the number is rounded, not truncated, to 29 
digits using rounding to nearest.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Decimal.ToString"/>
		<seealso cref="System.Math.Round" qualify="true"/>
	</doc><doc for="Decimal.Decimal7">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to a decimal value represented in binary and contained in a specified array.
   </para>
		</summary>
		<param name="bits">An array of 32-bit signed integers containing a representation of a decimal value. </param>
		<exception cref="System.ArgumentNullException"><paramref name="bits"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>The length of the <paramref name="bits"/> is not 4. </para>
			<para>-or-</para>
			<para>The representation of the decimal value in <paramref name="bits"/> is not valid.</para></exception>
		<remarks>
			<para> The binary representation of a <see cref="System.Decimal"/>
number consists of a 1-bit sign, a 96-bit integer number, and a
scaling factor used to divide the integer number and specify what portion of it is
a decimal fraction. The scaling factor is implicitly the number 10, raised
to an exponent ranging from 0 to 28.</para>
			<para><paramref name="bits"/> is a four-element long array of 32-bit signed integers. </para>
			<para><paramref name="bits"/>[0], <paramref name="bits"/>[1], and <paramref name="bits"/>[2] contain the low,
middle, and high 32 bits of the 96-bit integer number. </para>
			<para><paramref name="bits"/>[3] contains the scale factor and sign, and consists of following
parts: </para>
			<para>Bits 0 to 15, the lower word, are unused and must be zero. </para>
			<para>Bits 16 to 23 must contain an exponent between 0 and 28, that indicates the
   power of 10 to divide the integer number. </para>
			<para>Bits 24 to 30 are unused and must be zero. </para>
			<para>Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative. </para>
			<para> A numeric value might have several possible binary
   representations; all are equally valid and numerically equivalent. Note that the
   bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations. </para>
		</remarks>
		<seealso cref="System.Decimal.GetBits"/>
	</doc><doc for="Decimal.Truncate">
		<summary>
			<para>Returns the integral digits of the specified <see cref="System.Decimal"/>; any fractional digits are discarded.</para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/> to truncate.</param>
		<returns>
			<para>The <see cref="System.Decimal"/> result of <paramref name="d"/> 
rounded toward zero, to the nearest whole number.</para>
		</returns>
		<remarks>
			<para> This method rounds <paramref name="d"/>
toward zero, to the nearest whole number, which corresponds to discarding any
digits after the decimal point.</para>
		</remarks>
		<seealso cref="System.Decimal.Round"/>
		<seealso cref="System.Decimal.Floor"/>
	</doc><doc for="Decimal.IConvertible.ToUInt32">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a 32-bit unsigned integer.</para>
		</summary>
		<returns>
			<para>A 32-bit unsigned integer equivalent to the value of this
      instance of <see langword="Decimal"/>.</para>
		</returns>
		<exception cref="System.OverflowException">The resulting integer value is less than UInt32.MinValue or greater than UInt32.MaxValue.</exception>
		<remarks>
			<para>The ToUInt32method converts a Decimal
      value into a UInt32 and returns it.</para>
			<para>The Decimal value is rounded toward zero to the nearest integer
      value, and the result of this operation is returned as an unsigned integer.</para>
		</remarks>
	</doc><doc for="Decimal.ToDouble">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the equivalent double-precision floating-point number.</para>
		</summary>
		<param name="d">The <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para>A double-precision floating-point number equivalent to <paramref name="d"/>.</para>
		</returns>
		<remarks>
			<para>This operation can produce round-off errors because a double-precision
      floating-point number has fewer significant digits than a <see cref="System.Decimal"/>.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="Decimal.ToSingle">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the
   equivalent single-precision floating-point number.</para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para> A single-precision floating-point number
      equivalent to the value of <paramref name="d"/>.</para>
		</returns>
		<remarks>
			<para> This operation can produce round-off errors because a
      single-precision floating-point number has fewer significant digits than a
      <see cref="System.Decimal"/>.</para>
		</remarks>
		<seealso cref="System.Single"/>
	</doc><doc for="Decimal.operatorDecimal9">
		<summary>
			<para>Converts a single-precision floating-point number to a
      <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A single-precision floating-point number.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
   represents
   the converted single-precision floating
   point number.</para>
		</returns>
		<exception cref="System.OverflowException"><para><paramref name="value"/> is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</para>
			<para>-or-</para>
			<para><paramref name="value"/> is <see cref="System.Single.NaN" qualify="true"/>, <see cref="System.Single.PositiveInfinity" qualify="true"/>, or <see cref="System.Single.NegativeInfinity" qualify="true"/>.</para></exception>
		<seealso cref="System.Single"/>
	</doc><doc for="Decimal.operatorDecimal10">
		<summary>
			<para>Converts a double-precision floating-point number to a
      <see cref="System.Decimal"/>.</para>
		</summary>
		<param name="value">A double-precision floating-point number.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> that
   represents
   the converted double-precision floating
   point number.</para>
		</returns>
		<exception cref="System.OverflowException"><para><paramref name="value"/> is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</para>
			<para>-or-</para>
			<para><paramref name="value"/> is <see cref="System.Double.NaN" qualify="true"/>, <see cref="System.Double.PositiveInfinity" qualify="true"/>, or <see cref="System.Double.NegativeInfinity" qualify="true"/>.</para></exception>
		<seealso cref="System.Double"/>
	</doc><doc for="Decimal.operatorfloat">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a single-precision floating-point number.</para>
		</summary>
		<altmember cref="System.Decimal.ToSingle"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para> A single-precision floating-point number that represents
      the converted <see cref="System.Decimal"/>.</para>
		</returns>
		<remarks>
			<para>This operation can produce round-off errors because a
      single-precision floating-point number has fewer significant digits than a
      <see cref="System.Decimal"/>.</para>
		</remarks>
		<seealso cref="System.Single"/>
	</doc><doc for="Decimal.operatordouble">
		<summary>
			<para>Converts a <see cref="System.Decimal"/> to a double-precision floating-point number.</para>
		</summary>
		<altmember cref="System.Decimal.ToDouble"/>
		<param name="value">A <see cref="System.Decimal"/> to convert.</param>
		<returns>
			<para> A double-precision floating-point number that represents
      the converted <see cref="System.Decimal"/>.</para>
		</returns>
		<remarks>
			<para>This operation can produce round-off errors because a double-precision
      floating-point number has fewer significant digits than a <see cref="System.Decimal"/>.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="Decimal.IConvertible.ToSingle">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a
   single-precision floating-point number.</para>
		</summary>
		<returns>
			<para> A single-precision floating-point number equivalent to
      the value of this instance of <see langword="Decimal"/>.</para>
		</returns>
	</doc><doc for="Decimal.IConvertible.ToDouble">
		<summary>
			<para>Converts this instance of <see langword="Decimal"/> to a double-precision floating-point number.</para>
		</summary>
		<returns>
			<para>A double-precision floating-point number equivalent to
      the value of this instance of <see langword="Decimal"/>.</para>
		</returns>
		<remarks>
			<para>Since a Double has fewer significant
      digits than a Decimal, this
      operation may produce round-off errors.</para>
		</remarks>
	</doc><doc for="Decimal.Decimal4">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to
   the value of the specified single-precision floating-point number.</para>
		</summary>
		<param name="value">The value to represent as a <see cref="System.Decimal"/>.</param>
		<exception cref="System.OverflowException"><para><paramref name="value"/> is greater than <see cref="System.Decimal.MaxValue"/> or less than <see cref="System.Decimal.MinValue"/>.</para>
			<para>-or-</para>
			<para><paramref name="value"/> is <see cref="System.Single.NaN" qualify="true"/>, <see cref="System.Single.PositiveInfinity" qualify="true"/>, or <see cref="System.Single.NegativeInfinity" qualify="true"/>.</para></exception>
		<remarks>
			<para>This constructor rounds <paramref name="value"/>
to 7
significant digits using rounding to nearest. This is done even
if the number has more than 7 digits and the less significant digits
are zero.</para>
		</remarks>
	</doc><doc for="Decimal.Decimal5">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> to
   the value of the specified double-precision floating-point number.</para>
		</summary>
		<param name="value">The value to represent as a <see cref="System.Decimal"/>.</param>
		<exception cref="System.OverflowException"><para><paramref name="value"/> is greater than <see cref="System.Decimal.MaxValue"/> or less than <see cref="System.Decimal.MinValue"/>.</para>
			<para>-or-</para>
			<para><paramref name="value"/> is <see cref="System.Double.NaN" qualify="true"/>, <see cref="System.Double.PositiveInfinity" qualify="true"/>, or <see cref="System.Double.NegativeInfinity" qualify="true"/>.</para></exception>
		<remarks>
			<para>This constructor rounds <paramref name="value"/>
to 15 significant digits using rounding to
nearest. This is done even if the number has more than 15 digits and
the less significant digits are zero.</para>
		</remarks>
	</doc><doc for="Decimal.GetTypeCode">
		<summary>
			<para>Returns the <see cref="System.TypeCode"/> for value type <see cref="System.Decimal"/>.</para>
		</summary>
		<returns>
			<para>The enumerated constant <see cref="System.TypeCode.Decimal" qualify="true"/>.</para>
		</returns>
	</doc><doc for="Decimal.Parse2">
		<summary>
			<para>Converts the <see cref="System.String"/> representation of a number to its
<see cref="System.Decimal"/> equivalent
   using the specified culture-specific format information.</para>
		</summary>
		<param name="s">A <see cref="System.String"/> containing a number to convert.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>.</param>
		<returns>
			<para>The <see cref="System.Decimal"/>
number equivalent to the number contained in <paramref name="s"/> as specified by
<paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="s"/> is not of the correct format</exception>
		<exception cref="System.OverflowException"><paramref name="s"/> represents a number less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/></exception>
		<remarks>
			<para>Parameter <paramref name="s"/> contains a number of the form:</para>
			<para>[ws][sign]digits[.fractional-digits][ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description><para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to 9.</description>
				</item>
				<item>
					<term> '.'</term>
					<description>A culture-specific decimal point symbol.</description>
				</item>
				<item>
					<term> fractional-digits</term>
					<description>A sequence of digits ranging from 0 to 9.</description>
				</item>
			</list>
			<para>Parameter <paramref name="s"/> is interpreted using the <see cref="System.Globalization.NumberStyles.Number" qualify="true"/> style.</para>
			<para>Parameter <paramref name="provider"/> is an <see cref="System.IFormatProvider"/> that obtains a <see cref="System.Globalization.NumberFormatInfo"/> . The
<see langword="NumberFormatInfo"/> provides culture-specific information 
about the format of <paramref name="s"/>. If <paramref name="provider"/> is <see langword="null"/>, the
<see langword="NumberFormatInfo"/> for the current culture is used.</para>
			<para>A <see cref="System.Decimal"/> has
29 digits of precision. If <paramref name="s"/> represents a number that has more than 29
digits, but has a fractional part and is within the range of <see cref="System.Decimal.MaxValue"/> and
<see cref="System.Decimal.MinValue"/>, the number is rounded, not truncated, to 29 
digits using rounding to nearest.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Decimal.ToString"/>
		<seealso cref="System.Math.Round" qualify="true"/>
	</doc><doc for="Decimal.Parse3">
		<summary>
			<para>Converts the <see cref="System.String"/> representation of a number to its
<see cref="System.Decimal"/> equivalent using the specified 
   style and culture-specific format.</para>
		</summary>
		<param name="s">A <see cref="System.String"/> containing a number to convert.</param>
		<param name="style">The combination of one or more <see cref="System.Globalization.NumberStyles"/> constants that indicate the permitted format of <paramref name="s"/>.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>.</param>
		<returns>
			<para>The <see cref="System.Decimal"/>
number equivalent to the number contained in <paramref name="s"/> as specified by
<paramref name="style"/> and <paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><para><paramref name="s"/> is <see langword="null"/>.</para><para>-or-</para><para><paramref name="style "/>is not a valid combination of bit flags from the <see cref="System.Globalization.NumberStyles"/> enumeration</para></exception>
		<exception cref="System.FormatException"><paramref name="s"/> is not of the correct format.</exception>
		<exception cref="System.OverflowException"><paramref name="s"/> represents a number less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<remarks>
			<para>Parameter <paramref name="s"/> contains a number of the form:</para>
			<para>[ws][sign]digits[.fractional-digits][ws]</para>
			<para>Items in square brackets ('[' and ']') are optional, and other items are as
   follows.</para>
			<list type="termdef">
				<item>
					<term> ws</term>
					<description>Optional white space.</description>
				</item>
				<item>
					<term> sign</term>
					<description>
						<para>An optional sign.</para></description>
				</item>
				<item>
					<term> digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
				<item>
					<term> '.'</term>
					<description>A culture-specific decimal point
            symbol.</description>
				</item>
				<item>
					<term> fractional-digits</term>
					<description>A sequence of digits ranging from 0 to
            9.</description>
				</item>
			</list>
			<para>The <paramref name="style"/> parameter can be one or more
<see cref="System.Globalization.NumberStyles"/> enumerated
   constants combined using a bitwise OR operation.</para>
			<para>The <paramref name="style"/> parameter specifies
the permitted style of the numeric string. It must be a combination of bit flags
from the <see langword="NumberStyles"/> enumeration. If <paramref name="style"/> is null,
<paramref name="s"/> is interpreted using the <see cref="System.Globalization.NumberStyles.Number" qualify="true"/> style.</para>
			<para>Parameter <paramref name="provider"/> is an <see cref="System.IFormatProvider"/> that obtains a <see cref="System.Globalization.NumberFormatInfo"/> . The
<see langword="NumberFormatInfo"/> provides culture-specific information 
about the format of <paramref name="s"/>. If <paramref name="provider"/> is <see langword="null"/>, the
<see langword="NumberFormatInfo"/> for the current culture is used.</para>
			<para>A <see cref="System.Decimal"/> has
29 digits of precision. If <paramref name="s"/> represents a number that has more than 29
digits, but has a fractional part and is within the range of <see cref="System.Decimal.MaxValue"/> and
<see cref="System.Decimal.MinValue"/>, the number is rounded, not truncated, to 29 
digits using rounding to nearest.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Decimal.ToString"/>
		<seealso cref="System.Math.Round" qualify="true"/>
	</doc><doc for="Decimal.Round">
		<summary>
			<para> Rounds a <see cref="System.Decimal"/> value
   to a specified number of decimal places.
   </para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/> value to round. </param>
		<param name="decimals">A value from 0 to 28 that specifies the number of decimal places to round to. </param>
		<returns>
			<para>The <see cref="System.Decimal"/> number equivalent to <paramref name="d"/> rounded to
<paramref name="decimals"/> 
number of decimal places.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="decimals"/> is not a value from 0 to 28. </exception>
		<remarks>
			<para>When <paramref name="d"/> is exactly halfway between two rounded
   values, the result is the rounded value that has an even digit in the far right
   decimal position. For example, when rounded to two decimals, the value 2.345
   becomes 2.34 and the value 2.355 becomes 2.36. This process is known as rounding
   toward even, or rounding to nearest.</para>
		</remarks>
		<seealso cref="System.Decimal.Floor"/>
		<seealso cref="System.Decimal.Truncate"/>
	</doc><doc for="Decimal.ToByte">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the
   equivalent 8-bit unsigned integer.</para>
		</summary>
		<param name="value">The <see cref="System.Decimal"/> value.</param>
		<returns>
			<para>An 8-bit unsigned integer equivalent to
   <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="value"/> is less than <see cref="System.Byte.MinValue" qualify="true"/> or greater than <see cref="System.Byte.MaxValue" qualify="true"/>.</exception>
		<remarks>
			<para>Parameter <paramref name="value"/>
is rounded to the nearest integer value toward zero, and that result is
returned.</para>
		</remarks>
		<seealso cref="System.Byte"/>
	</doc><doc for="Decimal.ToString3">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent <see cref="System.String"/> representation using the specified culture-specific format
      information.</para>
		</summary>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information. </param>
		<returns>
			<para>The <see cref="System.String"/>
representation of the value of this instance as specified by <paramref name="provider"/>.</para>
		</returns>
		<remarks>
			<para>Parameter <paramref name="provider"/> is an <see cref="System.IFormatProvider"/> that obtains a <see cref="System.Globalization.NumberFormatInfo"/> . The <see langword="NumberFormatInfo"/> provides culture-specific format information about this instance. If <paramref name="provider"/> is <see langword="null"/>, the return value for this instance is formatted with the <see langword="NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Decimal.Parse"/>
	</doc><doc for="Decimal.Decimal8">
		<summary>
			<para> Initializes a new instance of <see cref="System.Decimal"/> from parameters specifying the instance's constituent
   parts.
   </para>
		</summary>
		<param name="lo">The low 32 bits of a 96-bit integer. </param>
		<param name="mid">The middle 32 bits of a 96-bit integer. </param>
		<param name="hi">The high 32 bits of a 96-bit integer. </param>
		<param name="isNegative">The sign of the number; 1 is negative, 0 is positive. </param>
		<param name="scale">A power of 10 ranging from 0 to 28. </param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="scale"/> is greater than 28.</exception>
		<remarks>
			<para>The binary representation of a <see cref="System.Decimal"/> number consists of a
   1-bit sign, a 96-bit integer number, and a scaling factor used to divide the
   integer number and specify what portion of it is a decimal fraction. The scaling
   factor is implicitly the number 10 raised to an exponent ranging from 0 to
   28.</para>
		</remarks>
	</doc><doc for="Decimal">
		<summary>
			<para>Represents a decimal number.</para>
		</summary>
		<remarks>
			<para>The <see langword="Decimal"/> value
   type represents decimal numbers ranging from positive
   79,228,162,514,264,337,593,543,950,335 to negative
   79,228,162,514,264,337,593,543,950,335. The <see langword="Decimal"/>
   value type is appropriate
   for financial
   calculations requiring large numbers of significant integral
   and fractional digits and no round-off
   errors.</para>
			<para> A decimal number is a signed, fixed-point value consisting of
   an integral part and an optional fractional part. The integral and fractional
   parts consist of a series of digits that range from zero to nine (0 to 9), separated
   by a decimal point symbol.</para>
			<para>The binary representation of an instance of <see langword="Decimal"/> consists
of a 1-bit sign, a 96-bit integer number, and a scaling factor used to
divide the 96-bit integer and specify what portion of it is a decimal
fraction. The scaling factor is implicitly the number 10, raised to an exponent
ranging from 0 to 28. </para>
			<para>Therefore, the binary representation of a <see langword="Decimal"/> value is of the form,
((-2<superscript term="96"/> to 2<superscript term="96"/>) / 10<superscript term="(0 to 28)"/>), where
-2<superscript term="96"/>
is equal to <see cref="System.Decimal.MinValue"/>, and 2<superscript term="96"/> is equal to
<see cref="System.Decimal.MaxValue"/>.</para>
			<para>This type provides methods that convert
<see langword="Decimal"/> values to and from type <see cref="System.Char"/>, <see cref="System.SByte"/>, <see cref="System.Int16"/>, <see cref="System.Int32"/>, <see cref="System.Int64"/>, <see cref="System.Byte"/>, <see cref="System.UInt16"/>, <see cref="System.UInt32"/>, and <see cref="System.UInt64"/>. Conversions from other types to 
<see langword="Decimal"/> are widening conversions that never lose 
   information or throw exceptions.</para>
			<para> Conversions from <see langword="Decimal"/> to other types are
narrowing conversions that round the <see langword="Decimal"/> value to the
nearest integer value toward zero. If the result of the conversion is not
representable in the destination type, an <see cref="System.OverflowException"/> is thrown.</para>
			<para>This type provides methods that convert
<see langword="Decimal"/> values to and from <see cref="System.Single"/> and <see cref="System.Double"/>. Conversions from <see langword="Decimal"/> to <see cref="System.Single"/> or <see cref="System.Double"/> are narrowing conversions that might lose precision but not information about 
   the magnitude of the converted value. The conversion will not throw an exception.</para>
			<para> Conversions from <see cref="System.Single"/> or <see cref="System.Double"/> to
<see langword="Decimal"/> throw an <see langword="OverflowException"/> if the result 
of the conversion is not representable as a <see langword="Decimal"/>.</para>
			<para> This type implements interfaces <see cref="System.IComparable"/>, <see cref="System.IFormattable"/>, and
<see cref="System.IConvertible"/>. 
Use the <see cref="System.Convert"/>
class for conversions instead of this type's explicit interface member
implementation of <see cref="System.IConvertible"/>.</para>
		</remarks>
		<example>
			<para>The following code sample demonstrates the use of 
   <see langword="Decimal"/>:</para>
			<codelink SampleID="Decimal Example" SnippetID="1"/>
		</example>
		<seealso cref="System.SByte"/>
		<seealso cref="System.Int16"/>
		<seealso cref="System.Int32"/>
		<seealso cref="System.Int64"/>
		<seealso cref="System.Byte"/>
		<seealso cref="System.UInt16"/>
		<seealso cref="System.UInt32"/>
		<seealso cref="System.UInt64"/>
		<seealso cref="System.Single"/>
		<seealso cref="System.Double"/>
		<seealso cref="System.Char"/>
	</doc>
	<doc for="Decimal.Add">
		<summary>
			<para>Adds two specified <see cref="System.Decimal"/>
values.</para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para>A <see cref="System.Decimal"/> value that is the sum of
<paramref name="d1"/> and <paramref name="d2"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><para>The sum of <paramref name="d1 "/>and <paramref name="d2 "/>is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</para></exception>
		<remarks>
			<para>The following code sample illustrates the use of <see langword="Add"/>:</para>
			<codelink SampleID="Decimal Example" SnippetID="5"/>
		</remarks>
		<seealso cref="System.Decimal.Subtract"/>
		<seealso cref="System.Decimal.Multiply"/>
		<seealso cref="System.Decimal.Divide"/>
	</doc>
	<doc for="Decimal.MaxValue">
		<summary>
			<para>Represents the largest possible value of <see cref="System.Decimal"/>. This field is constant and
   read-only.</para>
		</summary>
		<remarks>
			<para>The value of this constant is positive
      79,228,162,514,264,337,593,543,950,335.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the 
      use of <see langword="MaxValue"/>:</para>
			<codelink SampleID="Decimal Example" SnippetID="2"/>
		</example>
		<seealso cref="System.Decimal.Zero"/>
		<seealso cref="System.Decimal.One"/>
		<seealso cref="System.Decimal.MinusOne"/>
		<seealso cref="System.Decimal.MinValue"/>
	</doc>
	<doc for="Decimal.Compare">
		<summary>
			<para> Compares two specified <see cref="System.Decimal"/> values.
   </para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/>.</param>
		<param name="d2">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para>A signed number indicating the relative values of <paramref name="d1"/> and
<paramref name="d2"/>.</para>
			<list type="table">
				<listheader>
					<term> Return Value</term>
					<description> Meaning</description>
				</listheader>
				<item>
					<term> Less
         than
         zero</term>
					<description><paramref name="d1"/> is less than <paramref name="d2"/>.</description>
				</item>
				<item>
					<term> Zero</term>
					<description><paramref name="d1"/> and <paramref name="d2"/> are equal.</description>
				</item>
				<item>
					<term> Greater than
      zero</term>
					<description><paramref name="d1"/> is greater than <paramref name="d2"/>.</description>
				</item>
			</list>
		</returns>
		<seealso cref="System.Decimal.CompareTo"/>
		<seealso cref="System.Decimal.Equals"/>
	</doc>
	<doc for="Decimal.Floor">
		<summary>
			<para> Rounds a specified <see cref="System.Decimal"/> number to the closest integer toward negative infinity.</para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/>.</param>
		<returns>
			<para> If <paramref name="d"/> has a fractional part,
   the next whole <see cref="System.Decimal"/> number toward negative infinity
   that is less than <paramref name="d"/>.
			</para>
			<para>-or- </para>
			<para>If <paramref name="d"/> doesn't have a fractional part, <paramref name="d"/> is returned
unchanged.</para>
		</returns>
		<example>
			<para>The following code sample illustrates the use of <see langword="Floor"/>.</para>
			<codelink SampleID="Decimal Example" SnippetID="3"/>
		</example>
		<seealso cref="System.Decimal.Round"/>
		<seealso cref="System.Decimal.Truncate"/>
	</doc>
	<doc for="Decimal.ToString">
		<overload>
			<para>Converts the numeric value of this instance to its
      equivalent <see cref="System.String"/> representation.</para>
		</overload>
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent <see cref="System.String"/> representation.</para>
		</summary>
		<returns>
			<para>A <see cref="System.String"/>
representing the value of this instance.</para>
		</returns>
		<remarks>
			<para>The return value is formatted with the general format
      specifier ("G"), and the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="ToString"/> in 
   the context of <see langword="Decimal"/>:</para>
			<codelink SampleID="Decimal Example" SnippetID="5"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Decimal.Parse"/>
	</doc>
	<doc for="Decimal.GetBits">
		<summary>
			<para>Converts the value of a specified instance of <see cref="System.Decimal"/>
to its equivalent binary
representation.</para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/> value. </param>
		<returns>
			<para> A 32-bit signed integer array with four elements that contain
      the binary representation of <paramref name="d"/>.
      </para>
		</returns>
		<remarks>
			<para> The binary representation of a <see cref="System.Decimal"/>
number consists of a 1-bit sign, a 96-bit integer number, and a
scaling factor used to divide the integer number and specify what portion of it is
a decimal fraction. The scaling factor is implicitly the number 10, raised
to an exponent ranging from 0 to 28.</para>
			<para>The return value is a four-element long array of 32-bit signed integers. </para>
			<para>The first, second, and third elements of the returned array contain the low,
   middle, and high 32 bits of the 96-bit integer number. </para>
			<para>The fourth element of the returned array contains the scale factor and sign. It consists of the following
   parts: </para>
			<para>Bits 0 to 15, the lower word, are unused and must be zero. </para>
			<para>Bits 16 to 23 must contain an exponent between 0 and 28, that indicates the
   power of 10 to divide the integer number. </para>
			<para>Bits 24 to 30 are unused and must be zero. </para>
			<para>Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative. </para>
			<para>Note that the bit representation differentiates between negative and positive zero. These
   values are treated as being equal in all operations. </para>
		</remarks>
		<seealso cref="M:System.Decimal.#ctor"/>
	</doc>
	<doc for="Decimal.Subtract">
		<summary>
			<para> Subtracts one specified <see cref="System.Decimal"/> value from
   another.</para>
		</summary>
		<param name="d1">A <see cref="System.Decimal"/> (the minuend). </param>
		<param name="d2">A <see cref="System.Decimal"/> (the subtrahend). </param>
		<returns>
			<para> The <see cref="System.Decimal"/> result of subtracting
<paramref name="d2"/> from <paramref name="d1"/> 
.</para>
		</returns>
		<exception cref="System.OverflowException">The return value is less than <see cref="System.Decimal.MinValue"/> or greater than <see cref="System.Decimal.MaxValue"/>.</exception>
		<example>
			<para>The following code sample illustrates the use of 
   <see langword="Subtract"/>:</para>
			<codelink SampleID="Decimal Example" SnippetID="4"/>
		</example>
		<seealso cref="System.Decimal.Add"/>
		<seealso cref="System.Decimal.Multiply"/>
		<seealso cref="System.Decimal.Divide"/>
	</doc>
	<doc for="Decimal.ToUInt64">
		<summary>
			<para>Converts the value of the specified <see cref="System.Decimal"/> to the
   equivalent 64-bit unsigned integer.</para>
		</summary>
		<param name="d">A <see cref="System.Decimal"/> value to convert.</param>
		<returns>
			<para> A 64-bit unsigned integer equivalent to the value of <paramref name="d"/>.</para>
		</returns>
		<exception cref="System.OverflowException"><paramref name="d"/> is negative or greater than <see cref="System.UInt64.MaxValue" qualify="true"/>.</exception>
		<remarks>
			<para>The return value is the integral part of the decimal value; fractional digits are truncated.</para>
		</remarks>
		<seealso cref="System.UInt64"/>
	</doc>
	<doc for="Decimal.CompareTo">
		<summary>
			<para> Compares this instance to a specified <see cref="System.Object"/>
.</para>
		</summary>
		<param name="value">An <see cref="System.Object"/> or <see langword="null"/>.</param>
		<returns>
			<para>A signed number indicating the relative values of this instance and
   <paramref name="value"/>.</para>
			<list type="table"><listheader>
					<term>Return Value</term>
					<description>Meaning</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>This instance is less than
      <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This instance is equal to
      <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description><para>This instance is greater than
      <paramref name="value"/>.</para>
						<para>-or-</para>
						<para><paramref name="value"/> is <see langword="null"/>.</para></description>
				</item>
			</list>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="value"/> is not a <see cref="System.Decimal"/>.</exception>
		<remarks>
			<para>Any instance of <see cref="System.Decimal"/>, regardless of its value, is considered
   greater than <see langword="null"/>.</para>
			<para>Parameter <paramref name="value"/> must be <see langword="null "/> or an instance of <see cref="System.Decimal"/>; otherwise, an
exception is thrown.</para>
		</remarks>
		<seealso cref="System.Decimal.Compare"/>
		<seealso cref="System.Decimal.Equals"/>
	</doc>
	<doc for="Decimal.ToString1">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent <see cref="System.String"/> representation, using the specified
      format.</para>
		</summary>
		<param name="format">A <see cref="System.String"/> containing a format specification.</param>
		<returns>
			<para>A <see cref="System.String"/>
representation of the value of this instance as specified by
<paramref name="format"/>
.</para>
		</returns>
		<exception cref="System.FormatException"><paramref name="format"/> is invalid.</exception>
		<remarks>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string, the return value of this
   instance is formatted with the general format specifier ("G").</para>
			<para> The return value is formatted with the <see cref="System.Globalization.NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="ToString"/> in
   the context of <see langword="Decimal"/>:</para>
			<codelink SampleID="Decimal Example" SnippetID="5"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConNumericFormatStrings"/>
		<seealso cref="System.Decimal.Parse"/>
	</doc>
	<doc for="Decimal.ToString2">
		<summary>
			<para>Converts the numeric value of this instance to its
      equivalent <see cref="System.String"/> representation using the specified format and culture-specific format
      information.</para>
		</summary>
		<param name="format">A format specification.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information. </param>
		<returns>
			<para>The <see cref="System.String"/> representation of the value of this instance as specified by <paramref name="format"/> and <paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.FormatException"><paramref name="format"/> is invalid.</exception>
		<remarks>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string, the return value for this instance is formatted with the general format specifier ("G").</para>
			<para>Parameter <paramref name="provider"/> is an <see cref="System.IFormatProvider"/> that obtains a <see cref="System.Globalization.NumberFormatInfo"/> . The <see langword="NumberFormatInfo"/> provides culture-specific format information about this instance. If <paramref name="provider"/> is <see langword="null"/>, the return value for this instance is formatted with the <see langword="NumberFormatInfo"/> for the current culture.</para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConNumericFormatStrings"/>
		<seealso cref="System.Decimal.Parse"/>
	</doc>
</docs>
