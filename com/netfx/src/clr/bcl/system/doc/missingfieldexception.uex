<docs>
	<doc for="MissingFieldException.MissingFieldException3">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.MissingFieldException"/>
            
class with serialized data.
         </para>
		</summary>
		<param name="info">The object that holds the serialized object data.</param>
		<param name="context">The contextual information about the source or destination.</param>
		<remarks>
			<para>
            This constructor is called during deserialization to reconstitute the
      exception object transmitted over a stream. For more information, see
   
            <see topic="cpconSerialization"/>
            .
         </para>
		</remarks>
		<seealso topic="cpconSerialization"/>
	</doc>
	<doc for="MissingFieldException.MissingFieldException4">
		<summary>
			<para>
            Initializes a new instance of the 
            <see cref="System.MissingFieldException"/>
             class with the specified 
   class name and field name.
         </para>
		</summary>
		<param name="className">The name of the class in which access to a nonexistent field was attempted.</param>
		<param name=" fieldName">The name of the field that cannot be accessed.</param>
	</doc>
	<doc for="MissingFieldException.Message">
		<summary>
			<para>Gets the text string showing the signature of the missing
      field, the class name, and the field name. This property is read-only.</para>
		</summary>
		<value>
			<para>The error message string.</para>
		</value>
		<remarks>
			<para>
            If the class name is not specified when the object is
      constructed, the default text string inherited from the base class is returned.
      This property overrides 
            <see cref="System.MissingMemberException.Message"/>
            . The error message should be
      localized.
         </para>
		</remarks>
	</doc>
	<doc for="MissingFieldException.MissingFieldException">
		<overload>
			<para> Initializes a new instance of the
   <see cref="System.MissingFieldException"/>
   
   class.
   </para>
		</overload>
		<summary>
			<para>Initializes a new instance of the
   <see cref="System.MissingFieldException"/> class.</para>
		</summary>
		<remarks>
			<para> This constructor initializes <see cref="System.MissingFieldException.Message"/> property of the 
   new instance to a system-supplied message that describes the error, such as
   "Attempted to access a non-existing field." This message takes into account the
   current system
   culture.
   </para>
			<para> The following table shows the initial property values for
   an instance of
<see cref="System.MissingFieldException"/>. </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Exception.InnerException"/></term>
					<description> A 
         null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term>
						<see cref="System.MissingFieldException.Message"/></term>
					<description>The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="MissingFieldException.MissingFieldException1">
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.MissingFieldException"/>
   
   class with a specified error message.
   </para>
		</summary>
		<param name="message">A <see cref="System.String"/> that describes the error.</param>
		<remarks>
			<para> The content of <paramref name="message"/> should be understandable 
   to the user. The caller of this constructor is required to ensure that
   this string has been localized for the current system
   culture.
   </para>
			<para> The following table shows the initial property values
   for an instance of
<see cref="System.MissingFieldException"/>. </para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Exception.InnerException"/></term>
					<description>A 
         null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term>
						<see cref="System.MissingFieldException.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="MissingFieldException.MissingFieldException2">
		<summary>
			<para> Initializes a new instance of the
   <see cref="System.MissingFieldException"/>
   
   class with a specified error message and a reference to the
   inner exception that is the cause of this exception.
   </para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para> An exception that is thrown as a direct result of
      a previous exception can include a reference to the previous exception in
      the
   <see cref="System.Exception.InnerException"/>
   property. The
   
<see cref="System.Exception.InnerException"/> property returns 
   the same value that is passed into the constructor, or a null reference
   (<see langword="Nothing"/> in Visual Basic)
   if the
<see cref="System.Exception.InnerException"/>
property does not supply the inner exception value to
the constructor.</para>
			<para> The following table shows the initial property values for an instance of
<see cref="System.MissingFieldException"/>.</para>
			<list type="table">
				<listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term>
						<see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term>
						<see cref="System.MissingFieldException.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
	</doc><doc for="MissingFieldException">
		<summary>
			<para>The exception that is thrown when there is an attempt to dynamically access a
      field that does not exist.</para>
		</summary>
		<remarks>
			<para> Normally a compilation error is generated if code
      attempts to access a nonexistent member of a class.
   <see cref="System.MissingFieldException"/>
   is
   designed to handle cases where an attempt is made to dynamically access a
   renamed or deleted field of an assembly that is not referenced by its strong
   name. The
<see cref="System.MissingFieldException"/>
is thrown when code in a dependent assembly attempts to
access a missing field in an assembly that
was modified.</para>
			<para><see cref="System.MissingFieldException"/>
uses the HRESULT COR_E_MISSINGFIELD, that has the value
0x80131511.</para>
			<para> For a list of initial property values for an instance of
<see cref="System.MissingFieldException"/>
,
see the
<see cref="System.MissingFieldException()"/>
constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc></docs>
