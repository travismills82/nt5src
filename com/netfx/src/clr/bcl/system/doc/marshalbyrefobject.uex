<docs>
	<doc for="MarshalByRefObject">
		<summary>
			<para> Enables access to objects across application
      domain boundaries
      in applications that
      support remoting.</para>
		</summary>
		<remarks>
			<para> An application domain is a partition in an operating system process where one or
      more applications reside. Objects in the same application domain
      communicate directly. Objects in different application domains communicate either
      by transporting copies of objects across application domain boundaries, or
      by using a proxy to exchange messages. </para>
			<para><see cref="System.MarshalByRefObject"/> is the base class for objects that communicate across
   application domain boundaries by exchanging messages using a proxy. Objects that
   do not inherit from <see cref="System.MarshalByRefObject"/> are implicitly marshal by value. When a remote
   application references a marshal by value object, a copy of the object is passed
   across application domain boundaries. </para>
			<para><see cref="System.MarshalByRefObject"/> objects are accessed directly within the boundaries of
the local application domain. The first time an application in a remote
application domain accesses a <see cref="System.MarshalByRefObject"/> , a proxy is passed to the remote
application. Subsequent calls on the proxy are marshaled back to the object
residing in the local application domain. </para>
			<para>Types must inherit from <see cref="System.MarshalByRefObject"/> when
the type is used across application domain boundaries, and the state of the
object must not be copied because the members of the object are not usable outside the
application domain where they were created.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates a class derived from <see cref="System.MarshalByRefObject"/> that 
   is used later in remoting.</para>
			<codelink SampleID="RemotingServices.SetObjectUriForMarshal" SnippetID="1"/>
		</example>
	</doc><doc for="MarshalByRefObject.CreateObjRef">
		<summary>
			<para>Creates an object that contains all the relevant
      information required to generate a proxy used to communicate with a remote object.</para>
		</summary>
		<param name="requestedType">The <see cref="System.Type"/> of the object that the new <see cref="System.Runtime.Remoting.ObjRef"/> will reference.</param>
		<returns>
			<para>Information required to generate a proxy.</para>
		</returns>
		<exception cref="System.Runtime.Remoting.RemotingException">This instance is not a valid remoting object.</exception>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="MarshalByRefObject.GetLifetimeService">
		<summary>
			<para>Retrieves the current lifetime service object that controls the
      lifetime policy for this instance.</para>
		</summary>
		<returns>
			<para> An object of type <see cref="System.Runtime.Remoting.Lifetime.ILease"/> used to control the lifetime policy for this instance.
   </para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
		<remarks>
			<para>For more information about lifetime services, see the
   <see cref="System.Runtime.Remoting.Lifetime.LifetimeServices"/> class.</para>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
	</doc>
	<doc for="MarshalByRefObject.InitializeLifetimeService">
		<summary>
			<para> Obtains a lifetime service object to control the lifetime policy for this instance.</para>
		</summary>
		<returns>
			<para>An object of type <see cref="System.Runtime.Remoting.Lifetime.ILease"/> used to control the
   lifetime policy for this instance. This is the current lifetime service object for
   this instance if one exists; otherwise, a new lifetime service object initialized to the value
   of the <see cref="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" qualify="true"/> property. </para>
		</returns>
		<exception cref="System.Security.SecurityException">The immediate caller does not have infrastructure permission. </exception>
		<remarks>
			<para>For more information about lifetime services, see the <see cref="System.Runtime.Remoting.Lifetime.LifetimeServices"/> class.</para>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for operating with infrastructure code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.Infrastructure" qualify="true"/></permission>
		<example>
			<para>The following code example demonstrates creating a lease.</para>
			<codelink SampleID="Classic MarshalByRefObject.InitializeLifetimeService Example" SnippetID="1"/>
		</example>
	</doc>
</docs>
