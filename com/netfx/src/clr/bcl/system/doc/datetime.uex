<docs>
	<doc for="DateTime.GetHashCode">
		<summary>
			<para>Returns the hash code for this instance.</para>
		</summary>
		<returns>
			<para>A 32-bit signed
       integer hash code.</para>
		</returns>
	</doc>
	<doc for="DateTime.TimeOfDay">
		<summary>
			<para>Gets
       the time of day for this instance.</para>
		</summary>
		<value>
			<para>A <see cref="System.TimeSpan"/> that represents the fraction 
    of the day elapsed since midnight.</para>
		</value>
		<seealso cref="System.TimeSpan"/>
	</doc>

<doc for="DateTime.IConvertible.ToChar">
		<summary>
       This conversion is not supported.
       Attempting to do so throws an <see langword="InvalidCastException"/>.
 </summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc>
	<doc for="DateTime.IConvertible.ToSByte">
		<summary>
			<para>
       Converts
       this instance to an <see cref="System.SByte"/>.
    </para>
		</summary>
		<returns>
			<para>
       The SByte value for this instance.
    </para>
		</returns>
		<exception cref="System.InvalidCastException">
    If this DateTime is not an SByte value.
 </exception>
		<remarks>
			<para>
       The ToSByte method casts this DateTime instance into an
    <see cref="System.SByte"/>
    value. An exception is
    thrown if this instance cannot be coerced into an unsigned byte (sbyte).
 </para>
		</remarks>
		<seealso cref="System.SByte"/>
		<seealso cref="System.Byte"/>
	</doc>
	<doc for="DateTime.IConvertible.ToInt16">
		<summary>
			<para>
       Converts this
       instance into an <see cref="System.Int16"/>.
    </para>
		</summary>
		<returns>
			<para>
       The Int16 value for this instance.
    </para>
		</returns>
		<exception cref="System.InvalidCastException">
    If this DateTime is not an Int16 value.
 </exception>
		<remarks>
			<para>
       The ToInt16 method casts this DateTime instance into an
    <see cref="System.Int16"/>
    value. An exception is thrown if this instance cannot be
    coerced into a 16-bit signed integer (short).
 </para>
		</remarks>
		<seealso cref="System.Int16"/>
		<seealso cref="System.UInt16"/>
	</doc>
	<doc for="DateTime.IConvertible.ToUInt16">
		<summary>
			<para>
       Converts
       this instance to a <see cref="System.UInt16"/>.
    </para>
		</summary>
		<returns>
			<para>
       The UInt16 value for this instance.
    </para>
		</returns>
		<exception cref="System.InvalidCastException">
    If this DateTime is not a UInt16 value.
 </exception>
		<remarks>
			<para>
       The ToUInt16 method casts this DateTime instance into a
    <see cref="System.UInt16"/>
    value.
    An exception is thrown if this instance cannot be
    coerced into an 16-bit unsigned integer (ushort).
 </para>
		</remarks>
		<seealso cref="System.UInt16"/>
		<seealso cref="System.Int16"/>
	</doc>
	<doc for="DateTime.IConvertible.ToInt32">
		<summary>
			<para>This conversion is not supported.
       Attempting to do so throws an <see langword="InvalidCastException"/>.</para>
		</summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc>
	<doc for="DateTime.IConvertible.ToUInt32">
		<summary>
			<para>
       Converts
       this instance to a <see cref="System.UInt32"/>.
    </para>
		</summary>
		<returns>
			<para>
       The UInt32 value for this instance.
    </para>
		</returns>
		<exception cref="System.InvalidCastException">
    If this DateTime is not a UInt32 value.
 </exception>
		<remarks>
			<para>
       The ToUInt32 method casts this DateTime instance into a
    <see cref="System.UInt32"/>
    value. An exception is thrown if this instance cannot be
    coerced into a 32-bit unsigned integer (uint).
 </para>
		</remarks>
		<seealso cref="System.Int32"/>
		<seealso cref="System.UInt32"/>
	</doc>
	<doc for="DateTime.IConvertible.ToInt64">
		<summary>
       This conversion is not supported.
       Attempting to do so throws an <see langword="InvalidCastException"/>.
 </summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc>
	<doc for="DateTime.IConvertible.ToUInt64">
		<summary>
			<para>
       Converts
       this instance to a <see cref="System.UInt64"/>.
    </para>
		</summary>
		<returns>
			<para>
       The UInt64 value for this instance.
    </para>
		</returns>
		<exception cref="System.InvalidCastException">
    If this DateTime is not a UInt64 value.
 </exception>
		<remarks>
			<para>
       The ToUInt64 method casts this
       DateTime instance into a UInt64 value.
       An exception is thrown if this instance cannot be
       coerced into an 64-bit unsigned integer (ulong).
    </para>
		</remarks>
		<seealso cref="System.UInt64"/>
		<seealso cref="System.Int64"/>
	</doc>
	<doc for="DateTime.IConvertible.ToDouble">
		<summary>
       This conversion is not supported.
       Attempting to do so throws an <see langword="InvalidCastException"/>.
 </summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc>
	<doc for="DateTime.IConvertible.ToDecimal">
		<summary>
       This conversion is not supported.
       Attempting to do so throws an <see langword="InvalidCastException"/>.
 </summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc>
	<doc for="DateTime.IConvertible.ToDateTime">
		<summary>
			<para>
       Converts this instance to a DateTime
       value
    </para>
		</summary>
		<returns>
			<para>
       The DateTime value for
       this instance.
    </para>
		</returns>
		<exception cref="System.InvalidCastException">
    If this DateTime is not a DateTime.
 </exception>
		<remarks>
			<para>
       The ToDateTime method casts
       this DateTime instance into another DateTime value. An exception is
       thrown if the current instance of DateTime cannot be coerced into a DateTime.
    </para>
		</remarks>
	</doc>
	<doc for="DateTime.DayOfWeek">
		<summary>
			<para>Gets the day of the week represented by this instance.</para>
		</summary>
		<value>
			<para>A <see cref="System.DayOfWeek"/> enumerated 
   constant that indicates the day of the
   week. This property value ranges from zero, indicating Sunday, to six, indicating
   Saturday.</para>
		</value>
		<seealso cref="System.DateTime.Ticks"/>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="DateTime.DayOfYear">
		<summary>
			<para>Gets the day of the year represented by this instance.</para>
		</summary>
		<value>
			<para> The day of the year, between 1 and 366.</para>
		</value>
	</doc>
	<doc for="DateTime.IsLeapYear">
		<summary>
			<para>Returns an indication whether the specified year is a leap year.</para>
		</summary>
		<param name="year">A 4-digit year.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="year 
 "/> is a leap year;
 otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para><paramref name="year"/> is specified as a 4-digit base 10
 number; for example, 1996.</para>
		</remarks>
	</doc>
	<doc for="DateTime.GetTypeCode">
		<summary>
			<para>Returns the <see cref="System.TypeCode"/> for value type <see cref="System.DateTime"/>.</para>
		</summary>
		<returns>
			<para>The enumerated constant, <see cref="System.TypeCode.DateTime" qualify="true"/>.</para>
		</returns>
	</doc>
	<doc for="DateTime.Today">
		<summary>
			<para>Gets
      the current date.</para>
		</summary>
		<value>
			<para> A <see cref="System.DateTime"/> set to the date of 
   this instance, with the time part set to
   00:00:00.</para>
		</value>
	</doc><doc for="DateTime.ToLocalTime">
		<summary>
			<para> Converts the current coordinated universal time (UTC) to local time.
      </para>
		</summary>
		<returns>
			<para>The <see cref="System.DateTime"/>
equivalent to the current UTC time,
adjusted to the local time zone and daylight saving time.</para>
			<para>-or-</para>
			<para><see cref="System.DateTime.MaxValue"/> if the
current UTC time is too large to be represented as a <see cref="System.DateTime"/>.</para>
			<para>-or-</para>
			<para><see cref="System.DateTime.MinValue"/> if the
current UTC time is too small to be represented as a <see cref="System.DateTime"/>.</para>
		</returns>
		<remarks>
			<para>This method assumes that the current <see cref="System.DateTime"/> holds the UTC time value, and not a local time.
   Therefore, each time it is run, the current method performs the necessary
   modifications on the <see cref="System.DateTime"/> to derive the local time, whether the current
<see cref="System.DateTime"/> holds the UTC time or
   not.</para>
			<para>This method always uses the local time zone when making calculations.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates <see cref="System.DateTime.ToLocalTime"/>.</para>
			<codelink SampleID="DateTime.ToLocalTime ToUniversalTime" SnippetID="1"/>
		</example>
		<seealso cref="System.TimeZone"/>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
		<seealso cref="System.TimeZone.GetDaylightChanges" qualify="true"/>
		<seealso cref="System.DateTime.ToUniversalTime"/>
	</doc><doc for="DateTime.ToUniversalTime">
		<summary>
			<para> Converts the current local time to coordinated universal time (UTC).
      </para>
		</summary>
		<returns>
			<para>The UTC <see cref="System.DateTime"/> equivalent to the current local
   time.</para>
			<para>-or-</para>
			<para><see cref="System.DateTime.MaxValue"/> if the
current local time is too large to be represented as a <see cref="System.DateTime"/>.</para>
			<para>-or-</para>
			<para><see cref="System.DateTime.MinValue"/> if the
current local time is too small to be represented as a <see cref="System.DateTime"/>.</para>
		</returns>
		<remarks>
			<para> The UTC time is equal to the local time minus the UTC
      offset. For more information about the UTC offset, see <see cref="System.TimeZone.GetUtcOffset" qualify="true"/>.
      </para>
			<para> This method assumes that the current <see cref="System.DateTime"/> holds the local time value, and not a UTC time.
   Therefore, each time it is run, the current method performs the necessary
   modifications on the <see cref="System.DateTime"/> to derive the UTC time, whether the current
<see cref="System.DateTime"/> holds the local time or not.</para>
			<para>This method always uses the local time zone when making calculations.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates <see cref="System.DateTime.ToUniversalTime"/>.</para>
			<codelink SampleID="DateTime.ToLocalTime ToUniversalTime" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.ToLocalTime"/>
	</doc><doc for="DateTime.operatorSUB1">
		<summary>
			<para> Subtracts a specified date and time from another
      specified date and
      time, yielding a time interval.</para>
		</summary>
		<altmember cref="System.DateTime.Subtract"/>
		<param name="d1">A <see cref="System.DateTime"/> (the minuend). </param>
		<param name="d2">A <see cref="System.DateTime"/> (the subtrahend). </param>
		<returns>
			<para>A <see cref="System.TimeSpan"/>
that is the time interval between <paramref name="d1"/> and <paramref name="d2"/>; that is,
<paramref name="d1"/> minus <paramref name="d2"/>.</para>
		</returns>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Subtract"/> method and operator.</para>
			<codelink SampleID="DateTime.Subtraction" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.Ticks"/>
	</doc><doc for="DateTime.Month">
		<summary>
			<para>Gets the month component of the date represented by this instance.</para>
		</summary>
		<value>
			<para>The month, between 1 and 12.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Month"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Year">
		<summary>
			<para>Gets the year component of the date represented by this instance.</para>
		</summary>
		<value>
			<para>The year, between 1 and 9999.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Year"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
		<seealso cref="System.Int32"/>
		<seealso cref="System.Globalization.Calendar"/>
	</doc><doc for="DateTime.Day">
		<summary>
			<para>Gets the day of the month represented by this instance.</para>
		</summary>
		<value>
			<para> The day value, between 1 and 31.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Day"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Hour">
		<summary>
			<para> Gets the hour component of the date represented by this instance.</para>
		</summary>
		<value>
			<para> The hour,
      between 0 and 23.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Hour"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Millisecond">
		<summary>
			<para>Gets the milliseconds component of the date represented by this instance.</para>
		</summary>
		<value>
			<para> The millisecond, between
      0 and 999.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Millisecond"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Minute">
		<summary>
			<para>Gets the minute component of the date represented by this instance.</para>
		</summary>
		<value>
			<para>The minute, between 0 and 59.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Minute"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Second">
		<summary>
			<para>Gets the seconds component of the date represented by this instance.</para>
		</summary>
		<value>
			<para>The seconds, between 0 and 59.</para>
		</value>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Second"/> property.</para>
			<codelink SampleID="System.DateTime.Minute etc" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.GetDateTimeFormats1">
		<summary>
			<para>Converts the value of this instance to all the string
      representations supported by the standard <see cref="System.DateTime"/> format specifiers and the specified culture-specific formatting information.</para>
		</summary>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about this instance.</param>
		<returns>
			<para> A string array where each element is the representation of the
      value of this instance formatted with one of the standard <see cref="System.DateTime"/>
      formatting specifiers.
      </para>
		</returns>
		<remarks>
			<para> Each element of the return value is formatted using culture-specific information
      supplied by <paramref name="provider"/>.
      </para>
			<para> For more information about the standard formatting
      specifiers, see <see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>. </para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.GetDateTimeFormats"/> method.</para>
			<codelink SampleID="DateTime.GetDateTimeFormats" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.GetDateTimeFormats2">
		<summary>
			<para>Converts the value of this instance to all the string
      representations supported by the specified standard <see cref="System.DateTime"/>
      format specifier.</para>
		</summary>
		<param name="format">A Unicode character containing a format specifier.</param>
		<returns>
			<para> A string array
      where each element is the representation of the value of this instance formatted
      with the <paramref name="format"/>
      standard <see cref="System.DateTime"/>
      formatting specifier.
      </para>
		</returns>
		<remarks>
			<para>Each element of the return value is formatted using information from the
      current culture. For more information about culture-specific formatting
      information for the current culture, see <see cref="System.Globalization.CultureInfo.CurrentCulture" qualify="true"/>. </para>
			<para>For more information about the standard formatting specifiers, see <see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>. </para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.GetDateTimeFormats"/> method.</para>
			<codelink SampleID="DateTime.GetDateTimeFormats" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.GetDateTimeFormats3">
		<summary>
			<para>Converts the value of this instance to all the string
      representations supported by the specified standard <see cref="System.DateTime"/>
      
      format specifier and culture-specific formatting information.</para>
		</summary>
		<param name=" format">A Unicode character containing a format specifier.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about this instance.</param>
		<returns>
			<para> A string array where each element is the representation of the
      value of this instance formatted with one of the standard <see cref="System.DateTime"/>
      formatting specifiers.
      </para>
		</returns>
		<remarks>
			<para> Each element of the return value is formatted using culture-specific information
      supplied by <paramref name="provider"/>.
      </para>
			<para> For more information about the standard formatting
      specifiers, see <see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>. </para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.GetDateTimeFormats"/> method.</para>
			<codelink SampleID="DateTime.GetDateTimeFormats" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Equals">
		<overload>
			<para>Returns a value indicating whether an instance of
   <see cref="System.DateTime"/>
   is equal to a specified object.</para>
		</overload>
		<summary>
			<para>Returns a value indicating whether this instance is equal to a specified
      object.</para>
		</summary>
		<param name=" value">An object to compare with this instance.</param>
		<returns>
			<para><see langword="true"/> if <paramref name="value"/> is an instance of <see cref="System.DateTime"/>
and equals the value of this instance; otherwise, <see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Equals"/> method.</para>
			<codelink SampleID="DateTime.Equals" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.Compare"/>
		<seealso cref="System.DateTime.CompareTo"/>
	</doc><doc for="DateTime.DaysInMonth">
		<summary>
			<para> Returns the number of days in the specified month
      of the specified year.</para>
		</summary>
		<param name="year">The year.</param>
		<param name="month">The month (a number ranging from 1 to 12).</param>
		<returns>
			<para>The number of days in <paramref name="month"/>
for the specified <paramref name="year"/>.</para>
			<para>For example, if <paramref name="month"/> equals 2 for
February, the return value is 28 or 29 depending upon whether <paramref name="year"/> is a
leap year.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="month"/> is less than 1 or greater than 12.</exception>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.DaysInMonth"/> 
method.</para>
			<codelink SampleID="DateTime.DaysInMonth" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.CompareTo">
		<summary>
			<para>Compares this instance to a specified object and returns an indication of
      their relative values.</para>
		</summary>
		<param name=" value">An object to compare, or <see langword="null"/>.</param>
		<returns>
			<para>A signed number indicating the relative values of this instance and
   <paramref name="value"/>.</para>
			<list type="table">
				<listheader>
					<term>Value</term>
					<description>Description</description>
				</listheader>
				<item>
					<term> Less than zero</term>
					<description>This instance is less than
         <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Zero</term>
					<description>This instance is equal to
         <paramref name="value"/>.</description>
				</item>
				<item>
					<term> Greater than zero</term>
					<description>This instance is greater than
         <paramref name="value"/>, or <paramref name="value"/> is
         <see langword="null"/>.</description>
				</item>
			</list>
		</returns>
		<exception cref="System.ArgumentException"><paramref name="value"/> is not a <see cref="System.DateTime"/>.</exception>
		<remarks>
			<para>Any instance of <see cref="System.DateTime"/>, regardless of its value, is considered
   greater than <see langword="null"/>.</para>
			<para><paramref name="value"/> must be an instance of <see cref="System.DateTime"/> or
<see langword="null"/>; otherwise, an
exception is thrown.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.CompareTo"/> 
method.</para>
			<codelink SampleID="DateTime.CompareTo" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.Compare"/>
		<seealso cref="System.DateTime.Equals"/>
	</doc><doc for="DateTime.Date">
		<summary>
			<para>Gets the date component of this instance.</para>
		</summary>
		<value>
			<para>A new <see cref="System.DateTime"/> with the same date as this instance, and
   the time value set to 12 A.M. (00:00:00).</para>
		</value>
	</doc><doc for="DateTime.Subtract">
		<overload>
			<para>Subtracts the specified time or duration from this instance.</para>
		</overload>
		<summary>
			<para> Subtracts the specified date
      and time from this instance.</para>
		</summary>
		<param name="value">A instance of <see cref="System.DateTime"/>.</param>
		<returns>
			<para>A <see cref="System.TimeSpan"/> interval equal to
   the date and time represented by this instance minus the date and time
   represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The result is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>.
   Instead, a new <see cref="System.TimeSpan"/> is returned whose value is the result of this operation.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Subtract"/> method
   and operator.</para>
			<codelink SampleID="DateTime.Subtraction" SnippetID="1"/>
		</example>
	</doc><doc for="DateTime.Subtract1">
		<summary>
			<para>Subtracts the specified duration from this instance.</para>
		</summary>
		<param name="value">An instance of <see cref="System.TimeSpan"/>.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> equal to the date
   and time represented by this instance minus the time interval represented
   by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The result is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>.
   Instead, a new <see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Subtract"/> method and operator.</para>
			<codelink SampleID="DateTime.Subtraction" SnippetID="1"/>
		</example>
		<seealso cref="System.TimeSpan"/>
	</doc><doc for="DateTime.operatorSUB">
		<overload>
			<para>Subtracts a specified <see cref="System.DateTime"/> or <see cref="System.TimeSpan"/> from a specified <see cref="System.DateTime"/>.</para>
		</overload>
		<summary>
			<para> Subtracts a specified time interval from a specified
      date and time, yielding a new date and time.
      </para>
		</summary>
		<altmember cref="System.DateTime.Subtract"/>
		<param name="d">A <see cref="System.DateTime"/>. </param>
		<param name="t">A <see cref="System.TimeSpan"/>. </param>
		<returns>
			<para> A <see cref="System.DateTime"/> whose value is the value of
<paramref name="d"/> minus the value of <paramref name="t"/>
.</para>
		</returns>
		<remarks>
			<para> This method subtracts the ticks values of <paramref name="t"/>
from the ticks value of <paramref name="d"/>
.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Subtract"/> method and operator.</para>
			<codelink SampleID="DateTime.Subtraction" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.Ticks"/>
		<seealso cref="System.TimeSpan"/>
	</doc><doc for="DateTime.FromOADate">
		<summary>
			<para>Returns a <see cref="System.DateTime"/>
equivalent to the specified OLE Automation Date.</para>
		</summary>
		<param name="d">An OLE Automation Date value.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> that represents
   the same date and time as <paramref name="d"/>.</para>
		</returns>
		<exception cref="System.ArgumentException">The date is not a valid OLE Automation Date value.</exception>
		<remarks>
			<para><paramref name="d"/>
must
be a value between negative 657435.0
through positive 2958466.0. It is stored as a double-precision floating-point number.</para>
			<para>See <see cref="System.DateTime.ToOADate"/> and the
MSDN Online Library at http://MSDN.Microsoft.com/library/default.asp
for more information on OLE Automation.</para>
		</remarks>
		<seealso cref="System.DateTime.ToOADate"/>
	</doc><doc for="DateTime.ToOADate">
		<summary>
			<para> Converts the
      value of this instance to the equivalent OLE Automation date.</para>
		</summary>
		<returns>
			<para>A double-precision floating-point number that
      contains an OLE Automation date equivalent to
      the value of this instance.</para>
		</returns>
		<exception cref="System.OverflowException">The value of this instance cannot be represented as an OLE Automation Date.</exception>
		<remarks>
			<para>An OLE Automation date is implemented as a floating-point number whose value is the number
      of days from midnight, 30 December 1899. For example, midnight,
      31 December 1899 is represented by 1.0; 6 A.M., 1 January
      1900 is represented by 2.25; midnight, 29 December 1899 represented by -1.0; and 6 A.M., 29 December
      1899 represented by -1.25.</para>
			<para>Only <see cref="System.DateTime"/> objects with a tick value that is greater than or equal
   to positive or negative 31241376000000000 can be represented as an OLE
   Automation Date. An uninitialized <see cref="System.DateTime"/> , that is, an instance with a
   tick value of 0, is converted to the equivalent uninitialized OLE Automation Date, that
   is, a date with a value of 0.0 which represents midnight, 30 December 1899.</para>
			<note type="note">
   The <see cref="System.DateTime.Ticks"/> value of a <see cref="System.DateTime"/> is
   between <see cref="System.DateTime.MinValue"/> and <see cref="System.DateTime.MaxValue"/>.
   
</note>
			<note type="note">
   The maximum value of a <see cref="System.DateTime"/>
   is
   equal to the maximum value of an OLE Automation Date.
</note>
See <see cref="System.DateTime.FromOADate"/> and the MSDN Online Libary at http://msdn.microsoft.com/library/default.asp
for more information about OLE Automation.
</remarks>
		<seealso cref="System.Double"/>
		<seealso cref="System.DateTime.FromOADate"/>
	</doc><doc for="DateTime.IConvertible.ToSingle">
		<summary>
			<para>       Converts this
      instance into a <see cref="System.Single"/>.
      </para>
		</summary>
		<returns>
			<para>       The Single value for this instance.
      </para>
		</returns>
		<exception cref="System.InvalidCastException">
   If this DateTime is not a Single value.
   </exception>
		<remarks>
			<para>       The ToSingle method casts this DateTime instance into a
      single-precision floating-point number (<see cref="System.Single"/>
      ) value. An exception is thrown if this
      instance cannot be coerced into a float.
      </para>
		</remarks>
		<seealso cref="System.Single"/>
	</doc><doc for="DateTime.ToString">
		<overload>
			<para>Converts the value of this instance to its equivalent
      string
      representation.</para>
		</overload>
		<summary>
			<para>Converts the value of this instance to its equivalent string.</para>
		</summary>
		<returns>
			<para>A string
      representation of value of this instance.</para>
		</returns>
		<remarks>
			<para> The value of this instance is formatted using the general format specifier, 'G', as described in the <see topic="cpConFormattingOverview"/> topic. The return value is identical
   to the value returned by <see cref="System.DateTime.ToString"/>("G", null).</para>
			<para>This method uses formatting information derived from the current culture. For
   more information, see <see cref="System.Globalization.CultureInfo.CurrentCulture"/>.</para>
		</remarks>
		<example>
			<para> The following sample demonstrates different ways of
      formatting a <see cref="System.DateTime"/>
      value using the invariant <see cref="System.Globalization.DateTimeFormatInfo"/>
      .</para>
			<codelink SampleID="Classic DateTime.ToString2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.Globalization.CultureInfo"/>
	</doc><doc for="DateTime.IConvertible.ToType">
		<internalonly/>
		<summary>
			<para>Converts this instance of
   <see langword="DateTime"/> to an object of the specified <see cref="System.Type"/>.</para>
		</summary>
		<param name="type">The desired type.</param>
		<returns>
			<para>An object of the specified type, with a value equivalent to the value of this <see langword="DateTime"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="type"/> is <see langword="null"/>.</exception>
		<exception cref="System.InvalidCastException">The requested type conversion is not supported.</exception>
		<seealso cref="System.Convert"/>
	</doc><doc for="DateTime.ToString1">
		<summary>
			<para>Converts the value of this instance to its equivalent
      string representation using the specified
      culture-specific format information.</para>
		</summary>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
		<returns>
			<para>A string
      representation of value of this instance as specified by <paramref name="provider"/>.</para>
		</returns>
		<remarks>
			<para>This instance is formatted with the general format
      specifier, 'G', as described in the <see topic="cpConFormattingOverview"/> topic. The return value is identical
      to the value returned by <see cref="System.DateTime.ToString"/>("G", null).</para>
			<para>The <paramref name="provider "/> parameter is typically
   an instance of <see cref="System.Globalization.DateTimeFormatInfo"/>. If
<paramref name="provider"/> is <see langword="null"/>, the
<see cref="System.Globalization.DateTimeFormatInfo"/> associated 
   with the
   current culture is used. For more information, see <see cref="System.Globalization.CultureInfo.CurrentCulture" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates different ways of formatting a
   <see langword="DateTime"/> value using the invariant
   <see cref="System.Globalization.DateTimeFormatInfo"/>.</para>
			<codelink SampleID="Classic DateTime.ToString2 Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.Globalization.CultureInfo"/>
	</doc><doc for="DateTime.MinValue">
		<summary>
			<para>Represents the smallest possible value of <see cref="System.DateTime"/>. This field is read-only.</para>
		</summary>
		<remarks>
			<para>The value of this constant is equivalent to 00:00:00.0000000, January 1, 0001.</para>
		</remarks>
	</doc><doc for="DateTime.MaxValue">
		<summary>
			<para>Represents the largest possible value of <see cref="System.DateTime"/>. This field is
   read-only.</para>
		</summary>
		<remarks>
			<para>The value of this constant is equivalent to 23:59:59.9999999, December 31, 9999,
      exactly one 100-nanosecond tick before 00:00:00, January 1,
      10000.</para>
		</remarks>
	</doc><doc for="DateTime.Ticks">
		<summary>
			<para>Gets the number of ticks that represent the date and time of this
      instance.</para>
		</summary>
		<value>
			<para>The number of ticks that represent the date and time of this instance. The value is between
   <see cref="System.DateTime.MinValue"/> and <see cref="System.DateTime.MaxValue"/>.</para>
		</value>
		<remarks>
			<para> The value of this property is the
      number of 100-nanosecond intervals that have elapsed since 12:00 A.M.,
      January 1, 0001.</para>
		</remarks>
	</doc><doc for="DateTime.AddHours">
		<summary>
			<para>Adds the specified number of hours to the value of this instance.</para>
		</summary>
		<param name=" value">A number of whole and fractional hours. The <paramref name="value"/> parameter can be negative or positive.</param>
		<returns>
			<para> A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the number of hours represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
			<para>The fractional part of <paramref name="value"/> is the fractional part of an hour. For
example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0
milliseconds, and 0 ticks.</para>
			<para>The <paramref name="value"/> parameter is rounded to the nearest tick.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.AddMilliseconds">
		<summary>
			<para>Adds the specified number of milliseconds to the value of this instance.</para>
		</summary>
		<param name=" value">A number of whole and fractional milliseconds. The <paramref name="value"/> parameter can be negative or positive.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the number of milliseconds represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
			<para>The fractional part of <paramref name="value"/> is the fractional part of a millisecond.
For example, 4.5 is equivalent to 4 milliseconds, and 5000 ticks (where one
millisecond = 10000 ticks).</para>
			<para>The <paramref name="value"/> parameter is rounded to the nearest tick.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.AddMinutes">
		<summary>
			<para>Adds the specified number of minutes to the value of this instance.</para>
		</summary>
		<param name=" value">A number of whole and fractional minutes. The <paramref name="value"/> parameter can be negative or positive.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the number of minutes represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
			<para>The fractional part of <paramref name="value"/> is the fractional part of
a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds,
and 0 ticks.</para>
			<para>The <paramref name="value"/> parameter is rounded to the nearest tick.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.AddMonths">
		<summary>
			<para>Adds the specified number of months to the value of this instance.</para>
		</summary>
		<param name=" months">A number of months. The <paramref name="months"/> parameter can be negative or positive.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> whose value is the
   sum of the date and time represented by this instance and <paramref name="months"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><para>The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</para>
			<para>-or-</para>
			<para><paramref name="months"/> is less than -120,000 or greater than 120,000.</para></exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.AddSeconds">
		<summary>
			<para>Adds the specified number of seconds to the value of this instance.</para>
		</summary>
		<param name=" value">A number of whole and fractional seconds. The <paramref name="value"/> parameter can be negative or positive.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the number of seconds represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
			<para>The fractional part of <paramref name="value"/> is the fractional part of a second. For
example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0
ticks.</para>
			<para>The <paramref name="value"/> parameter is rounded to the nearest tick.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.AddTicks">
		<summary>
			<para> Adds the specified number of ticks to the value of this
      instance.</para>
		</summary>
		<param name="value">A number of 100-nanosecond ticks. The <paramref name="value"/> parameter can be positive or negative.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the time represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
		</remarks>
		<seealso cref="System.Int64"/>
		<seealso cref="System.DateTime.Ticks"/>
	</doc><doc for="DateTime.AddYears">
		<summary>
			<para>Adds the specified number of years to the value of this instance.</para>
		</summary>
		<param name=" value">A number of years. The <paramref name="value"/> parameter can be negative or positive.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the number of years represented by
<paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="value"/> or the resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
		</remarks>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.operatorEQ">
		<summary>
			<para> Determines whether two specified instances of <see cref="System.DateTime"/>
are equal.</para>
		</summary>
		<altmember cref="System.DateTime.Equals"/>
		<param name="d1">A <see cref="System.DateTime"/>. </param>
		<param name="d2">A <see cref="System.DateTime"/>. </param>
		<returns>
			<para><see langword="true"/> if
<paramref name="d1"/> and <paramref name="d2"/> represent
   the same date and time; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<example>
			<para>The following sample demonstrates the equality operator.</para>
			<codelink SampleID="DateTime Operators" SnippetID="2"/>
		</example>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DateTime.operatorNE">
		<summary>
			<para> Determines whether two specified instances of <see cref="System.DateTime"/>
are not equal.</para>
		</summary>
		<altmember cref="System.DateTime.Equals"/>
		<param name="d1">A <see cref="System.DateTime"/>. </param>
		<param name="d2">A <see cref="System.DateTime"/>. </param>
		<returns>
			<para><see langword="true"/> if
<paramref name="d1"/> and <paramref name="d2"/> do not represent
   the same date and time; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DateTime.operatorGE">
		<summary>
			<para> Determines whether one specified <see cref="System.DateTime"/> is greater than or equal to another specified
<see cref="System.DateTime"/>.</para>
		</summary>
		<altmember cref="System.DateTime.Compare"/>
		<param name="t1"><para>A <see cref="System.DateTime"/>. </para></param>
		<param name="t2">A <see cref="System.DateTime"/>.</param>
		<returns>
			<para><see langword="true"/> if
<paramref name="t1"/> is greater than or equal to <paramref name="t2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DateTime.Add">
		<summary>
			<para> Adds the value of the specified <see cref="System.TimeSpan"/>
to the value of this instance.</para>
		</summary>
		<param name="value">A <see cref="System.TimeSpan"/> that contains the interval to add.</param>
		<returns>
			<para> A <see cref="System.DateTime"/> whose value is
   the sum of the date and time represented by this instance and the time
   interval represented by <paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/>
is
returned whose value is the result of this operation.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Add"/> method. It calculates the day of the
   week that is 36 days (864 hours) from this moment. </para>
			<codelink SampleID="DateTime.Add" SnippetID="1"/>
		</example>
		<seealso cref="System.TimeSpan"/>
		<seealso cref="System.TimeSpan.Add" qualify="true"/>
	</doc><doc for="DateTime.AddDays">
		<summary>
			<para>Adds the specified number of days to the value of this instance.</para>
		</summary>
		<param name="value">A number of whole and fractional days. The <paramref name="value"/> parameter can be negative or positive.</param>
		<returns>
			<para> A <see cref="System.DateTime"/> whose value is the sum of the date and time
   represented by this instance and the number of days represented by
<paramref name="value"/>.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>This method does not change the value of this <see cref="System.DateTime"/>. Instead, a new
<see cref="System.DateTime"/> is returned whose value is the result of this operation.</para>
			<para>The fractional part of <paramref name="value"/>
is the fractional part of a day. For
example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds,
and 0 ticks.</para>
			<para>The <paramref name="value"/> parameter is rounded to the nearest tick.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.AddDays"/>
method.</para>
			<codelink SampleID="DateTime.AddDays" SnippetID="1"/>
		</example>
		<seealso cref="System.Double"/>
	</doc><doc for="DateTime.Equals1">
		<summary>
			<para>Returns a value indicating whether two instances of
   <see cref="System.DateTime"/> are equal.</para>
		</summary>
		<param name="t1">The first <see cref="System.DateTime"/>.</param>
		<param name="t2">The second <see cref="System.DateTime"/>.</param>
		<returns>
			<para><see langword="true"/> if the two
<see cref="System.DateTime"/> values are
   equal; otherwise, <see langword="false"/>.</para>
		</returns>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Equals"/> method.</para>
			<codelink SampleID="DateTime.Equals" SnippetID="1"/>
		</example>
		<seealso cref="System.Boolean"/>
		<seealso cref="System.DateTime.Compare"/>
		<seealso cref="System.DateTime.CompareTo"/>
	</doc><doc for="DateTime.operatorADD">
		<summary>
			<para> Adds a specified time interval to a specified date and
      time, yielding a new date and time.
      </para>
		</summary>
		<altmember cref="System.DateTime.Add"/>
		<param name="d">A <see cref="System.DateTime"/>. </param>
		<param name="t">A <see cref="System.TimeSpan"/>. </param>
		<returns>
			<para> A <see cref="System.DateTime"/> that
   is the sum of the values of
<paramref name="d"/> and <paramref name="t"/>.
   </para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting <see cref="System.DateTime"/> is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<example>
			<para>The following sample demonstrates the addition operator.</para>
			<codelink SampleID="DateTime Operators" SnippetID="1"/>
		</example>
		<seealso cref="System.TimeSpan"/>
		<seealso cref="System.DateTime.Ticks"/>
	</doc><doc for="DateTime.operatorLT">
		<summary>
			<para> Determines whether one specified <see cref="System.DateTime"/> is less than another specified <see cref="System.DateTime"/>.</para>
		</summary>
		<altmember cref="System.DateTime.Compare"/>
		<param name="t1">A <see cref="System.DateTime"/>.</param>
		<param name="t2">A <see cref="System.DateTime"/>.</param>
		<returns>
			<para><see langword="true"/> if
<paramref name="t1"/> is less than <paramref name="t2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DateTime.operatorLE">
		<summary>
			<para> Determines whether one specified <see cref="System.DateTime"/> is less than or equal to another specified
<see cref="System.DateTime"/>.</para>
		</summary>
		<altmember cref="System.DateTime.Compare"/>
		<param name="t1">A <see cref="System.DateTime"/>.</param>
		<param name="t2">A <see cref="System.DateTime"/>.</param>
		<returns>
			<para><see langword="true"/> if
<paramref name="t1"/> is less than or equal to <paramref name="t2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DateTime.operatorGT">
		<summary>
			<para> Determines whether one specified <see cref="System.DateTime"/> is greater than another specified <see cref="System.DateTime"/>.</para>
		</summary>
		<altmember cref="System.DateTime.Compare"/>
		<param name="t1"><para>A <see cref="System.DateTime"/>. </para></param>
		<param name="t2"><para>A <see cref="System.DateTime"/>.</para></param>
		<returns>
			<para><see langword="true"/> if
<paramref name="t1"/> is greater than <paramref name="t2"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<seealso cref="System.Boolean"/>
	</doc><doc for="DateTime.IConvertible.ToBoolean">
		<summary>
			<para>This conversion is not supported. Attempting to do so throws an <see langword="InvalidCastException"/>.</para>
		</summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc><doc for="DateTime.IConvertible.ToByte">
		<summary>
   This conversion is not supported. Attempting to do so throws an <see langword="InvalidCastException"/>.
   </summary>
		<exception cref="System.InvalidCastException">Unsupported conversion of <see langword="DateTime"/>.</exception>
	</doc><doc for="DateTime.Compare">
		<summary>
			<para>Compares two instances of <see cref="System.DateTime"/> and returns an
   indication of their relative values.</para>
		</summary>
		<param name="t1">The first <see cref="System.DateTime"/>.</param>
		<param name="t2">The second <see cref="System.DateTime"/>.</param>
		<returns>
			<para>A signed number indicating the relative values of
   <paramref name="t1"/> and <paramref name="t2"/>.</para>
			<list type="table">
				<listheader>
					<term>Value Type</term>
					<description>Condition</description>
				</listheader>
				<item>
					<term> Less than
            zero</term>
					<description><paramref name="t1"/> is less than <paramref name="t2"/>.</description>
				</item>
				<item>
					<term> Zero</term>
					<description><paramref name="t1"/> equals <paramref name="t2"/>.</description>
				</item>
				<item>
					<term> Greater than
      zero</term>
					<description><paramref name="t1"/> is greater than
<paramref name="t2"/>
.</description>
				</item>
			</list>
		</returns>
		<example>
			<para>The following sample demonstrates <see cref="System.DateTime.Compare"/>.</para>
			<codelink SampleID="Classic DateTime.Compare Example" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.CompareTo"/>
		<seealso cref="System.DateTime.Equals"/>
	</doc><doc for="DateTime.ToLongDateString">
		<summary>
			<para>Converts the value of this instance to its equivalent
      long date string representation.</para>
		</summary>
		<returns>
			<para>A string
      containing
      the name of
      the day of the week, the name of the month, the numeric day of the
      month, and the year equivalent to the date value of this
      instance.</para>
		</returns>
		<remarks>
			<para>The value of this instance is formatted using the long
      date format character, 'D'. The return value is identical to the value returned
      by <see cref="System.DateTime.ToString"/>
      ("D", null).</para>
			<para> For more information about format characters, format patterns, and the
      output they produce, see the <see topic="cpConFormattingOverview"/>
      topic. For more information about changing the format pattern
      associated with a format character see the <see cref="System.Globalization.DateTimeFormatInfo"/> class. </para>
			<para> This method uses formatting information derived from the current culture. For more information
      about the current culture, see the <see cref="System.Globalization.CultureInfo.CurrentCulture"/> class. You can use the <see cref="System.Globalization.CultureInfo.DateTimeFormat" qualify="true"/>
      property to obtain the <see cref="System.Globalization.DateTimeFormatInfo"/> for the current culture. </para>
		</remarks>
		<example>
			<para>The following sample demonstrates <see cref="System.DateTime.ToLongDateString"/>.</para>
			<codelink SampleID="System.DateTime.ToLongFormats" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.CultureInfo.DateTimeFormat"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.DateTime.ToString"/>
	</doc>
	<doc for="DateTime.ToShortDateString">
		<summary>
			<para> Converts the value of this instance to its equivalent
      short date string representation.</para>
		</summary>
		<returns>
			<para>A string
      containing the numeric month, the numeric day of the
      month, and the year equivalent to the date value of this
      instance.</para>
		</returns>
		<remarks>
			<para>The value of this instance is formatted using the short
      date format character, 'd'. The return value is identical to the value returned
      by <see cref="System.DateTime.ToString"/> ("d", null).</para>
			<para>For more information about format characters, format patterns, and the output they produce, see the <see topic="cpConFormattingOverview"/> topic. For more information about changing the format pattern associated with a format character see the <see cref="System.Globalization.DateTimeFormatInfo"/> class. </para>
			<para>This method uses formatting information derived from the current culture. For
   more information about the current culture, see the <see cref="System.Globalization.CultureInfo.CurrentCulture"/> class. You can use the <see cref="System.Globalization.CultureInfo.DateTimeFormat" qualify="true"/> property to obtain the <see cref="System.Globalization.DateTimeFormatInfo"/> for the current culture. </para>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.CultureInfo.DateTimeFormat"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.DateTime.ToString"/>
	</doc>
	<doc for="DateTime.ToShortTimeString">
		<summary>
			<para>Converts the value of this instance to its equivalent
      short time string representation.</para>
		</summary>
		<returns>
			<para>A string containing the name of the day of the week, the
      name of the month, the numeric day of the hours, minutes, and seconds
      equivalent to the time value of this instance.</para>
		</returns>
		<remarks>
			<para>The value of this instance is formatted using the short
      time format character, 't'. The return value is identical to the value returned
      by <see cref="System.DateTime.ToString"/>("t", null).</para>
			<para>For more information about format characters, format patterns, and the output they produce, see the <see topic="cpConFormattingOverview"/> topic. For more information about changing the format pattern associated with a format character see the <see cref="System.Globalization.DateTimeFormatInfo"/> class. </para>
			<para>This method uses formatting information derived from the current culture. For
   more information about the current culture, see the <see cref="System.Globalization.CultureInfo.CurrentCulture"/> class. You can use the <see cref="System.Globalization.CultureInfo.DateTimeFormat" qualify="true"/> property to obtain the <see cref="System.Globalization.DateTimeFormatInfo"/> for the current culture. </para>
		</remarks>
		<seealso cref="System.String"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.CultureInfo.DateTimeFormat"/>
		<seealso cref="System.Globalization.Calendar"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.DateTime.ToString"/>
	</doc>
	<doc for="DateTime.DateTime">
		<overload>
			<para>Initializes a new instance of the <see cref="System.DateTime"/>
structure.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to a specified number of ticks.</para>
		</summary>
		<param name="ticks">A date and time expressed in 100-nanosecond units.</param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="ticks "/>is less than <see cref="System.DateTime.MinValue"/> or greater than <see cref="System.DateTime.MaxValue"/>.</exception>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/>
constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DateTime.DateTime1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to the specified year, month, and day.</para>
		</summary>
		<param name="year">The year (1 through 9999).</param>
		<param name="month">The month (1 through 12).</param>
		<param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
		<exception cref="System.ArgumentOutOfRangeException"><para>
				<paramref name="year"/> is less than 1 or greater than 9999.</para>
			<para>-or-</para>
			<para>
				<paramref name="month"/> is less than 1 or greater than 12.</para>
			<para>-or-</para>
			<para>
				<paramref name="day"/> is less than 1 or greater than the number of days in <paramref name="month"/>.</para></exception>
		<exception cref="System.ArgumentException">The specified parameters evaluate to less than <see cref="System.DateTime.MinValue"/> or more than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para> The time of day for the resulting <see cref="System.DateTime"/> is midnight (00:00:00).</para>
		</remarks>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/> constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DateTime.DateTime2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to the specified year, month, and day for the
   specified <see cref="System.Globalization.Calendar"/>
   .</para>
		</summary>
		<param name="year">The year (1 through 9999).</param>
		<param name="month">The month (1 through the number of months in <paramref name="calendar"/>).</param>
		<param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
		<param name="calendar">The <see cref="System.Globalization.Calendar"/> that applies to this <see cref="System.DateTime"/>.</param>
		<exception cref="System.ArgumentNullException"><paramref name="calendar"/> is <see langword="null"/></exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>
				<paramref name="year"/> is less than 1 or greater than 9999.</para>
			<para>-or-</para>
			<para>
				<paramref name="month"/> is less than 1 or greater than the number of months in <paramref name="calendar"/>.</para>
			<para>-or-</para>
			<para>
				<paramref name="day"/> is less than 1 or greater than the number of days in <paramref name="month"/>.</para></exception>
		<exception cref="System.ArgumentException">Specified parameters evaluate to less than <see cref="System.DateTime.MinValue"/> or more than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para> The time of day for the resulting <see cref="System.DateTime"/> is midnight (00:00:00).</para>
			<para>The allowable values for <paramref name="year"/>, <paramref name="month"/>,
and <paramref name="day"/> depend on
the specified <see cref="System.Globalization.Calendar"/>. An exception is thrown
if the specified date and time cannot be expressed using
<paramref name="calendar"/>.</para>
			<para> The
<see cref="System.Globalization"/> namespace provides several calendars including <see cref="System.Globalization.GregorianCalendar"/> and <see cref="System.Globalization.JulianCalendar"/>
.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/> constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
		<seealso cref="System.Int32"/>
		<seealso cref="System.Globalization.Calendar"/>
	</doc>
	<doc for="DateTime.DateTime3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to the
   specified year, month, day, hour, minute, and second.</para>
		</summary>
		<param name="year">The year (1 through 9999).</param>
		<param name="month">The month (1 through 12)</param>
		<param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
		<param name="hour">The hours (0 through 23).</param>
		<param name="minute">The minutes (0 through 59).</param>
		<param name="second">The seconds (0 through 59).</param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="year "/>is less than 1 or greater than 9999 <para>-or-</para><para><paramref name="month"/> is less than 1 or greater than 12</para><para>-or-</para><para><paramref name="day"/> is less than 1 or greater than the number of days in <paramref name="month"/></para><para>-or-</para><para><paramref name="hour "/> is less than 0 or greater than 23</para><para>-or-</para><para><paramref name="minute "/> is less than 0 or greater than 59</para><para>-or-</para><para><paramref name="second "/> is less than 0 or greater than 59</para></exception>
		<exception cref="System.ArgumentException">Specified parameters evaluate to less than <see cref="System.DateTime.MinValue"/> or more than <see cref="System.DateTime.MaxValue"/>.</exception>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/> constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DateTime.DateTime4">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to the specified year, month, day, hour,
   minute, and second for the specified <see cref="System.Globalization.Calendar"/>
   .</para>
		</summary>
		<param name="year">The year (1 through 9999).</param>
		<param name="month">The month (1 through the number of months in <paramref name="calendar"/>).</param>
		<param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
		<param name="hour">The hours (0 through 23).</param>
		<param name="minute">The minutes (0 through 59).</param>
		<param name="second">The seconds (0 through 59).</param>
		<param name="calendar">The <see cref="System.Globalization.Calendar"/> that applies to this <see cref="System.DateTime"/>.</param>
		<exception cref="System.ArgumentNullException"><paramref name="calendar "/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="year "/>is less than 1 or greater than 9999. <para>-or-</para><para><paramref name="month"/> is less than 1 or greater than the number of months in <paramref name="calendar"/>.</para><para>-or-</para><para><paramref name="day"/> is less than 1 or greater than the number of days in <paramref name="month"/>.</para><para>-or-</para><para><paramref name="hour "/>is less than 0 or greater than 23</para><para>-or-</para><para><paramref name="minute "/>is less than 0 or greater than 59</para><para>-or-</para><para><paramref name="second "/>is less than 0 or greater than 59</para></exception>
		<exception cref="System.ArgumentException">Specified parameters evaluate to less than <see cref="System.DateTime.MinValue"/> or more than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>The allowable values for <paramref name="year"/>, <paramref name="month"/>, and <paramref name="day"/> depend on
   the specified <see cref="System.Globalization.Calendar"/>. An exception is thrown if the specified date and time cannot be expressed using <paramref name="calendar"/>.</para>
			<para>The <see cref="System.Globalization"/> namespace provides several calendars including <see cref="System.Globalization.GregorianCalendar"/> and <see cref="System.Globalization.JulianCalendar"/>.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/> constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
		<seealso cref="System.Int32"/>
		<seealso cref="System.Globalization.Calendar"/>
	</doc>
	<doc for="DateTime.DateTime5">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to the
   specified year, month, day, hour, minute, second, and millisecond.</para>
		</summary>
		<param name="year">The year (1 through 9999).</param>
		<param name="month">The month (1 through 12).</param>
		<param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
		<param name="hour">The hours (0 through 23).</param>
		<param name="minute">The minutes (0 through 59).</param>
		<param name="second">The seconds (0 through 59).</param>
		<param name="millisecond">The milliseconds (0 through 999).</param>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="year "/>is less than 1 or greater than 9999. <para>-or-</para><para><paramref name="month"/> is less than 1 or greater than 12.</para><para>-or-</para><para><paramref name="day"/> is less than 1 or greater than the number of days in <paramref name="month"/>.</para><para>-or-</para><para><paramref name="hour "/>is less than 0 or greater than 23.</para><para>-or-</para><para><paramref name="minute "/>is less than 0 or greater than 59.</para><para>-or-</para><para><paramref name="second "/>is less than 0 or greater than 59.</para>
			<para>-or-</para>
			<para><paramref name="millisecond"/> is less than 0 or greater than 999.</para></exception>
		<exception cref="System.ArgumentException">Specified parameters evaluate to less than <see cref="System.DateTime.MinValue"/> or more than <see cref="System.DateTime.MaxValue"/>.</exception>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/> constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
		<seealso cref="System.Int32"/>
	</doc>
	<doc for="DateTime.DateTime6">
		<summary>
			<para>Initializes a new instance of the <see cref="System.DateTime"/> structure to the specified year, month, day, hour,
   minute, second, and millisecond for the specified <see cref="System.Globalization.Calendar"/>
   .</para>
		</summary>
		<param name="year">The year (1 through 9999).</param>
		<param name="month">The month (1 through the number of months in <paramref name="calendar"/>).</param>
		<param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
		<param name="hour">The hours (0 through 23).</param>
		<param name="minute">The minutes (0 through 59).</param>
		<param name="second">The seconds (0 through 59).</param>
		<param name="millisecond">The milliseconds (0 through 999).</param>
		<param name="calendar">The <see cref="System.Globalization.Calendar"/> that applies to this <see cref="System.DateTime"/>.</param>
		<exception cref="System.ArgumentNullException"><paramref name="calendar "/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="year "/>is less than 1 or greater than 9999. <para>-or-</para><para><paramref name="month"/> is less than 1 or greater than the number of months in <paramref name="calendar"/>.</para><para>-or-</para><para><paramref name="day"/> is less than 1 or greater than the number of days in <paramref name="month"/>.</para><para>-or-</para><para><paramref name="hour "/>is less than 0 or greater than 23.</para><para>-or-</para><para><paramref name="minute "/>is less than 0 or greater than 59.</para><para>-or-</para><para><paramref name="second "/>is less than 0 or greater than 59.</para>
			<para>-or-</para>
			<para><paramref name="millisecond"/> is less than 0 or greater than 999.</para></exception>
		<exception cref="System.ArgumentException">Specified parameters evaluate to less than <see cref="System.DateTime.MinValue"/> or more than <see cref="System.DateTime.MaxValue"/>.</exception>
		<remarks>
			<para>The allowable values for <paramref name="year"/>, <paramref name="month"/>, and <paramref name="day"/> depend on
   the specified <see cref="System.Globalization.Calendar"/>. An exception is thrown if the specified date and time cannot be expressed using <paramref name="calendar"/>.</para>
			<para>The <see cref="System.Globalization"/> namespace provides several calendars including <see cref="System.Globalization.GregorianCalendar"/> and <see cref="System.Globalization.JulianCalendar"/>.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates one of the <see cref="System.DateTime"/> constructors.</para>
			<codelink SampleID="DateTime Constructor" SnippetID="1"/>
		</example>
		<seealso cref="System.Int32"/>
		<seealso cref="System.Globalization.Calendar"/>
	</doc>
	<doc for="DateTime.Now">
		<summary>
			<para>Gets a <see cref="System.DateTime"/>
that is the current local date and time on this computer.</para>
		</summary>
		<value>
			<para>A <see cref="System.DateTime"/> whose value is the current date and time.</para>
		</value>
		<remarks>
			<para>The resolution of this property depends on the system timer.</para>
			<list type="table">
				<listheader>
					<term>System</term>
					<description>Approximate Resolution</description>
				</listheader>
				<item>
					<term> Windows NT 3.5 and
            later</term>
					<description>10 milliseconds </description>
				</item>
				<item>
					<term> Windows 98</term>
					<description>55 milliseconds </description>
				</item>
			</list>
		</remarks>
	</doc>
	<doc for="DateTime.UtcNow">
		<summary>
			<para>Gets a <see cref="System.DateTime"/>
that is the
current local date and time
on this computer
expressed as the coordinated
universal time (UTC).</para>
		</summary>
		<value>
			<para>A <see cref="System.DateTime"/> whose
   value is the current UTC date and time. </para>
		</value>
		<remarks>
			<para>The resolution of this property depends on the system timer.</para>
			<list type="table">
				<listheader>
					<term>System</term>
					<description>Approximate Resolution</description>
				</listheader>
				<item>
					<term> Windows NT 3.5 and
            later</term>
					<description>10 milliseconds </description>
				</item>
				<item>
					<term> Windows 98</term>
					<description>55 milliseconds </description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
	</doc>
	<doc for="DateTime.FromFileTime">
		<summary>
			<para>Returns a <see cref="System.DateTime"/> equivalent
   to the specified operating system file timestamp.</para>
		</summary>
		<param name="fileTime">A Windows file time.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> value representing the date
   and time of <paramref name="fileTime"/>, adjusted to local time.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="fileTime"/> is not valid.</exception>
		<remarks>
			<para><paramref name="fileTime"/> is a 64-bit signed integer value representing a Windows file timestamp. The timestamp
   is the number of
   100-nanosecond intervals that have elapsed since January 1, 1601 A.D. (C.E.) 12:00 A.M. coordinated
   universal time (UTC).</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.FromFileTime"/>
method.</para>
			<codelink SampleID="DateTime.FromFileTime" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.ToUniversalTime"/>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
	</doc>
	<doc for="DateTime.GetDateTimeFormats">
		<overload>
			<para>Converts the value of this instance to all the string
      representations supported by the standard <see cref="System.DateTime"/> format
      specifiers. </para>
		</overload>
		<summary>
			<para>Converts the value of this instance to all the string
      representations supported by the standard <see cref="System.DateTime"/>
      format specifiers.</para>
		</summary>
		<returns>
			<para> A string array where each element is the representation of the
      value of this instance formatted with one of the standard <see cref="System.DateTime"/>
      formatting specifiers.
      </para>
		</returns>
		<remarks>
			<para> Each element of the return value is formatted using
      information from the current culture. For more information about
      culture-specific formatting information for the current culture, see <see cref="System.Globalization.CultureInfo.CurrentCulture" qualify="true"/>.
      </para>
			<para>For more information about the standard formatting specifiers, see <see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>. </para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.GetDateTimeFormats"/> method.</para>
			<codelink SampleID="DateTime.GetDateTimeFormats" SnippetID="1"/>
		</example>
	</doc>
	<doc for="DateTime.ToFileTime">
		<summary>
			<para> Converts the value of this instance to
      the format of a local operating system file time.
      </para>
		</summary>
		<returns>
			<para> The value of this <see cref="System.DateTime"/> in the format of
   a local operating system file time.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The value of this instance cannot be converted to a system file time. </exception>
		<remarks>
			<para> A system file time is
      a 64-bit unsigned value representing the date and time as the number of 100-nanosecond
      intervals that have elapsed since January 1, 1601 12:00 A.M.
      </para>
			<para> An exception is thrown if
      you attempt to convert a date earlier than
      January 1, 1601 12:00:00 A.M. coordinated universal time (UTC).
      </para>
		</remarks>
		<example>
			<para>The following sample demonstrates <see cref="System.DateTime.ToFileTime"/>.</para>
			<codelink SampleID="DateTime.ToFileTime" SnippetID="1"/>
		</example>
		<seealso cref="System.DateTime.ToFileTimeUtc"/>
		<seealso cref="System.Int64"/>
		<seealso cref="System.DateTime.ToUniversalTime"/>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
	</doc>
	<doc for="DateTime.ToFileTimeUtc">
		<summary>
			<para> Converts the value of this instance to the format of operating system file time, ignoring the local 
      time zone. </para>
		</summary>
		<returns>
			<para>The value of this <see cref="System.DateTime"/> in the format of an operating system file time. The file 
   time is not offset to account for the local time zone.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException">The resulting file time would be less than 0.</exception>
		<remarks>
			<para>The file time is a 64-bit signed integer value 
      representing a Windows file timestamp. The timestamp is the number of
      100-nanosecond intervals that have elapsed since January 1, 1601 A.D. (C.E.)
      12:00 A.M. coordinated universal time (UTC). The <see cref="System.DateTime.ToFileTimeUtc"/>
      method returns the value of this <see cref="System.DateTime"/> relative to January 1, 1601
      A.D. (C.E.) 12:00 A.M., but does not adjust the
      
      file time to account for the
      local time zone.</para>
		</remarks>
		<seealso cref="System.DateTime.ToFileTime"/>
		<seealso cref="System.Int64"/>
		<seealso cref="System.DateTime.ToUniversalTime"/>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
	</doc>
	<doc for="DateTime">
		<summary>
			<para>Represents an instant in time, typically expressed as a date and time of day.</para>
		</summary>
		<remarks>
			<para>The <see langword="DateTime"/> value
   type represents dates and times with values
   ranging from 12:00:00 midnight, January 1, 0001 Anno Domini (Common Era) to 11:59:59 P.M., December
   31, 9999 A.D. (C.E.)</para>
			<para>Time values are measured in 100-nanosecond units called ticks, and a particular date is
   the number of ticks since 12:00 midnight, January 1, 1 A.D. (C.E.) in the <see cref="System.Globalization.GregorianCalendar"/> calendar. For
   example, a ticks value of 31241376000000000L represents the date, Friday,
   January 01, 0100 12:00:00 midnight. A <see langword="DateTime"/> value is
   always expressed in the context of an explicit or default calendar.</para>
			<para>The <see langword="DateTime"/> and <see cref="System.TimeSpan"/> value types
differ in that a <see langword="DateTime"/> represents an instant in time,
whereas a <see cref="System.TimeSpan"/> represents a time interval. This means,
for example, that you can subtract one instance of <see langword="DateTime"/> from another to
obtain the time interval between them. Or you could add a positive
<see cref="System.TimeSpan"/> to the
current <see langword="DateTime"/> to calculate a future date.</para>
			<para>Time values can be added to, or subtracted from, an instance of
<see langword="DateTime"/>. Time values can be 
   negative or positive, and expressed in units such as ticks, seconds, or
   instances of <see cref="System.TimeSpan"/>. Methods and properties in this value type take into
   account details such as leap years and the number of days in a month.</para>
			<para>Descriptions of time values in this type are often expressed using the coordinated universal time (UTC)
   standard, which was previously known as Greenwich mean time (GMT).</para>
			<para>Calculations and comparisons of <see langword="DateTime"/>
instances are only meaningful when the instances are created in the same time
zone. For that reason, it is assumed that the developer has some external
mechanism, such as an explicit variable or policy, to know in which time zone a
<see langword="DateTime"/> was created. Methods and properties in this 
structure always use the local time zone when making calculations or
comparisons.</para>
			<para>A calculation on an instance of <see langword="DateTime"/>, such as
<see cref="System.DateTime.Add"/> or 
<see cref="System.DateTime.Subtract"/>, does not modify the value of the instance. Instead, the calculation 
returns a new instance of <see langword="DateTime"/>
whose value is the result of the calculation.</para>
			<para>Each <see cref="System.DateTime"/> member implicitly uses the Gregorian calendar to perform 
its operation, with the exception of constructors that specify a calendar and
methods that implicitly specify a calendar with a parameter derived from <see cref="System.IFormatProvider"/> , such as
<see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>. Use the <see cref="System.Globalization.Calendar" qualify="true"/> class to perform date and time operations 
with a different calendar.</para>
			<para>This type inherits from <see cref="System.IComparable"/>, <see cref="System.IFormattable"/>, and <see cref="System.IConvertible"/>. Use the <see cref="System.Convert"/> class for conversions instead of this type's explicit
interface member implementation of <see cref="System.IConvertible"/>.</para>
		</remarks>
		<example>
			<para>The following example demonstrates how to compare roughly equivalent
   <see langword="DateTime"/> values, accepting a small margin of difference when
      declaring them "equal".</para>
			<codelink SampleID="DateTime Equivalency Example" SnippetID="1"/>
		</example>
		<seealso cref="System.TimeSpan"/>
		<seealso cref="System.Globalization.Calendar"/>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
	</doc>
	<doc for="DateTime.FromFileTimeUtc">
		<summary>
			<para>Returns a <see cref="System.DateTime"/> equivalent to the specified operating system file
   timestamp, adjusted to coordinated universal time (UTC).</para>
		</summary>
		<param name="fileTime">A Windows file time expressed in ticks.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> value representing the date
   and time of <paramref name="fileTime"/>, adjusted to coordinated
   universal time (UTC).</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="fileTime"/> is less than 0.</exception>
		<remarks>
			<para><paramref name="fileTime"/> is a 64-bit signed
   integer value representing a Windows file timestamp. The timestamp is the number
   of 100-nanosecond intervals that have elapsed since January 1, 1601 A.D. (C.E.)
   12:00 A.M. coordinated universal time (UTC). The <see cref="System.DateTime.FromFileTimeUtc"/>
   method returns <paramref name="fileTime"/>
   
   relative to January 1, 1 A.D.
   (C.E.) 12:00 A.M.</para>
		</remarks>
		<seealso cref="System.DateTime.ToUniversalTime"/>
		<seealso cref="System.TimeZone.GetUtcOffset"/>
		<seealso cref="System.DateTime.FromFileTime"/>
	</doc>
	<doc for="DateTime.Parse1">
		<summary>
			<para>Converts the specified string representation of a date and time to
      its <see cref="System.DateTime"/> equivalent using the specified culture-specific format
      information.</para>
		</summary>
		<param name="s">A string containing a date and time to convert.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific format information about <paramref name="s"/>.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> equivalent to the date and time contained in <paramref name="s"/> as
   specified by <paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="s"/> does not contain a valid string representation of a date and time.</exception>
		<remarks>
			<para>The string <paramref name="s"/> is parsed using the formatting
   information in a <see cref="System.Globalization.DateTimeFormatInfo"/> supplied by <paramref name="provider"/>
   .</para>
			<para>This method attempts to parse <paramref name="s"/> completely and avoid throwing <see cref="System.FormatException"/>. It ignores unrecognized data if possible and fills in
missing month, day, and year information with the current time. If <paramref name="s"/> contains only a date and no time, this method assumes
12 A.M. Any leading, inner, or trailing white space character in <paramref name="s"/>
is ignored.</para>
			<para>Parameter <paramref name="s"/> must contain the
representation of a date and time in one of the formats described in the <see cref="System.Globalization.DateTimeFormatInfo"/> topic.</para>
			<para>Parameter <paramref name="provider"/> supplies
culture-specific date and time formatting information. For example, the names of
the days of the week in a particular language, or the preferred presentation
order of the month, day, and year. If <paramref name="provider"/>
is <see langword="null"/>, the current
culture is used.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Parse"/> method.</para>
			<codelink SampleID="DateTime.Parse" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.String"/>
		<seealso cref="System.DateTime.ParseExact"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo.CurrentInfo"/>
	</doc>
	<doc for="DateTime.Parse2">
		<summary>
			<para>Converts the specified string representation of a date and time to
      its <see cref="System.DateTime"/> equivalent using the specified culture-specific format information and formatting
      style.</para>
		</summary>
		<param name="s">A string containing a date and time to convert.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>.</param>
		<param name=" styles">The combination of one or more <see cref="System.Globalization.DateTimeStyles"/> constants that indicate the permitted format of <paramref name="s"/>.</param>
		<returns>
			<para>A <see cref="System.DateTime"/> equivalent to the date and time contained in <paramref name="s"/> as
   specified by <paramref name="provider"/> and <paramref name="styles"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="s"/> does not contain a valid string representation of a date and time.</exception>
		<remarks>
			<para>The string <paramref name="s"/> is parsed using the formatting information in a <see cref="System.Globalization.DateTimeFormatInfo"/> supplied by <paramref name="provider"/>.</para>
			<para>This method attempts to ignore unrecognized data and parse <paramref name="s"/>
completely. If <paramref name="s"/> contains a time but no date, the <paramref name="style"/>
parameter determines whether the current date or a default date is used. If
<paramref name="s"/> contains a date but no time, 12 A.M. is used. Any 
leading, inner, or trailing white space character in <paramref name="s"/> is ignored.</para>
			<para>Parameter <paramref name="s"/> must contain the
representation of a date and time in one of the formats described in the <see cref="System.Globalization.DateTimeFormatInfo"/> topic.</para>
			<para>Parameter <paramref name="provider"/> supplies
culture-specific date and time formatting information. For example, the names of
the days of the week in a particular language, or the preferred presentation
order of the month, day, and year. If <paramref name="provider"/>
is <see langword="null"/>, the current culture is used.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Parse"/> method.</para>
			<codelink SampleID="DateTime.Parse" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.String"/>
		<seealso cref="System.DateTime.ParseExact"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo.CurrentInfo"/>
	</doc>
	<doc for="DateTime.Parse">
		<overload>
			<para>Converts the specified string representation of a date and time to its <see cref="System.DateTime"/> equivalent.</para>
		</overload>
		<summary>
			<para>Converts the specified string representation of a date and time to
      its <see cref="System.DateTime"/> equivalent.</para>
		</summary>
		<param name="s">A string containing a date and time to convert.</param>
		<returns>
			<para> A <see cref="System.DateTime"/>
equivalent to the date and time contained in <paramref name="s"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><paramref name="s"/> does not contain a valid string representation of a date and time.</exception>
		<remarks>
			<para>The string <paramref name="s"/> is parsed using the formatting
   information in a <see cref="System.Globalization.DateTimeFormatInfo"/>
   initialized for the
   current culture.</para>
			<para>This method attempts to parse <paramref name="s"/> completely and avoid throwing <see cref="System.FormatException"/>. It ignores unrecognized data if possible and fills in
missing month, day, and year information with the current time. If <paramref name="s"/> contains
only a date and no time, this method assumes 12 A.M. Any
leading, inner, or trailing white space character in <paramref name="s"/>
is ignored.</para>
			<para>Parameter <paramref name="s"/> must contain the
representation of a date and time in one of the formats described in the <see cref="System.Globalization.DateTimeFormatInfo"/> topic.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.Parse"/> method.</para>
			<codelink SampleID="DateTime.Parse" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.String"/>
		<seealso cref="System.DateTime.ParseExact"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo.CurrentInfo"/>
	</doc>
	<doc for="DateTime.ToString3">
		<summary>
			<para>Converts the value of this instance to its equivalent
      string representation using
      the specified format.</para>
		</summary>
		<param name="format">A format string.</param>
		<returns>
			<para>A string
      representation of value of this instance as specified by <paramref name="format"/>.</para>
		</returns>
		<exception cref="System.FormatException"><para>The length of <paramref name="format"/> is 1, and it is not one of the format specifier characters defined for <see cref="System.Globalization.DateTimeFormatInfo"/>.</para>
			<para>-or-</para>
			<para><paramref name="format"/> does not contain a valid custom format pattern.</para></exception>
		<remarks>
			<para>The <paramref name="format"/> parameter should contain either a format
   specifier character or a custom format pattern. For more information, see the
   summary page for <see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>.</para>
			<para>If <paramref name="format"/> is <see langword="null"/>
or an empty string, the general
format specifier, 'G', is used.</para>
			<para>This method uses formatting information derived from the current culture. For
   more information, see <see cref="System.Globalization.CultureInfo.CurrentCulture"/>.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates different ways of
      formatting a <see cref="System.DateTime"/> value using the invariant
   <see cref="System.Globalization.DateTimeFormatInfo"/>.</para>
			<codelink SampleID="Classic DateTime.ToString2 Example" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConDateTimeFormatStrings"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.Globalization.CultureInfo"/>
	</doc>
	<doc for="DateTime.ToString2">
		<summary>
			<para>Converts the value of this instance to its equivalent
      string representation using the specified format and
      culture-specific format information.</para>
		</summary>
		<param name="format">A format string.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information.</param>
		<returns>
			<para>A string
      representation of value of this instance as specified by <paramref name="format"/> and
   <paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.FormatException"><para>The length of <paramref name="format"/> is 1, and it is not one of the format specifier characters defined for <see cref="System.Globalization.DateTimeFormatInfo"/>.</para>
			<para>-or-</para>
			<para><paramref name="format"/> does not contain a valid custom format pattern.</para></exception>
		<remarks>
			<para>The <paramref name="format"/> parameter can contain either a format
   specifier character or a custom format pattern. For more information, see the
   summary page for <see cref="System.Globalization.DateTimeFormatInfo" qualify="true"/>.</para>
			<para>If <paramref name="format"/> is <see langword="null"/> or an empty string (""), the standard
format specifier, 'G', is used.</para>
			<para>The <paramref name="provider "/> parameter is typically
an instance of <see cref="System.Globalization.DateTimeFormatInfo"/>. If
<paramref name="provider"/> is <see langword="null"/>, the
<see cref="System.Globalization.DateTimeFormatInfo"/> associated 
with the
current culture is used. For more information, see <see cref="System.Globalization.CultureInfo.CurrentCulture" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates different ways of
      formatting a <see cref="System.DateTime"/> value using the invariant
   <see cref="System.Globalization.DateTimeFormatInfo"/>.</para>
			<codelink SampleID="Classic DateTime.ToString2 Example" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConDateTimeFormatStrings"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.Globalization.CultureInfo"/>
	</doc>
	<doc for="DateTime.ToLongTimeString">
		<summary>
			<para>Converts the value of this instance to its equivalent
      long time string representation.</para>
		</summary>
		<returns>
			<para>A string containing the name of the day of the week, the
      name of the month, the numeric day of the hours, minutes, and seconds
      equivalent to the time value of this instance.</para>
		</returns>
		<remarks>
			<para>The value of this instance is formatted using the long
      time format character, 'T'. The return value is identical to the value returned
      by <see cref="System.DateTime.ToString"/>("T", null).</para>
			<para>For more information about format characters, format patterns, and the output they produce, see the <see topic="cpConFormattingOverview"/> topic. For more information about changing the format pattern associated with a format character see the <see cref="System.Globalization.DateTimeFormatInfo"/> class. </para>
			<para>This method uses formatting information derived from the current culture. For
   more information about the current culture, see the <see cref="System.Globalization.CultureInfo.CurrentCulture"/> class. You can use the <see cref="System.Globalization.CultureInfo.DateTimeFormat" qualify="true"/> property to obtain the <see cref="System.Globalization.DateTimeFormatInfo"/> for the current culture. </para>
		</remarks>
		<example>
			<para>The following sample demonstrates <see cref="System.DateTime.ToLongTimeString"/>.</para>
			<codelink SampleID="System.DateTime.ToLongFormats" SnippetID="1"/>
		</example>
		<seealso cref="System.String"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.CultureInfo.DateTimeFormat"/>
		<seealso cref="System.Globalization.Calendar"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo"/>
		<seealso cref="System.DateTime.ToString"/>
	</doc>
	<doc for="DateTime.ParseExact">
		<overload>
			<para>Converts the specified string representation of a date and time to
      its <see cref="System.DateTime"/> equivalent. The format of the
      string representation must match a specified format
      exactly.</para>
		</overload>
		<summary>
			<para>Converts the specified string representation of a date and time to
      its <see cref="System.DateTime"/> equivalent using the
      specified format and culture-specific format information. The format of the
      string representation must match the specified format
      exactly.</para>
		</summary>
		<param name="s">A string containing a date and time to convert. </param>
		<param name="format">The expected format of <paramref name="s"/>.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific format information about <paramref name="s"/>. </param>
		<returns>
			<para>A <see cref="System.DateTime"/> equivalent to the date and time contained in <paramref name="s"/> as
   specified by <paramref name="format"/> and <paramref name="provider"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s "/>or <paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>
				<paramref name="s "/>or <paramref name="format"/> is an empty string</para><para> -or-</para><para>
				<paramref name="s "/>does not contain a date and time that corresponds to the pattern specified in <paramref name="format"/>.</para></exception>
		<remarks>
			<para>This method throws <see cref="System.FormatException"/> if
   the format of <paramref name="s"/> is not exactly as specified by the format pattern in <paramref name="format"/>. If <paramref name="format"/> consists of a single
   standard format character, the format pattern that character represents is used.
   For more information, see the <see cref="System.Globalization.DateTimeFormatInfo"/>
   topic.</para>
			<para>If <paramref name="s"/> contains only a time, and no date, then the
current date is used. If <paramref name="s "/>contains only a date and no time, midnight (00:00:00) is
used.</para>
			<para>Parameter <paramref name="s"/> cannot contain leading, inner, or trailing white space
characters.</para>
			<para>Parameter <paramref name="provider"/> supplies
culture-specific date and time formatting information. For example, the names of
the days of the week in a particular language, or the preferred presentation
order of the month, day, and year. If <paramref name="provider"/>
is <see langword="null"/>, the current culture is used.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.ParseExact"/>
method.</para>
			<codelink SampleID="DateTime.Parse" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConDateTimeFormatStrings"/>
		<seealso cref="System.DateTime.Parse"/>
		<seealso cref="System.String"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo.CurrentInfo"/>
	</doc>
	<doc for="DateTime.ParseExact1">
		<summary>
			<para>Converts the specified string representation of a date and time to
      its <see cref="System.DateTime"/> equivalent using the
      specified format, culture-specific format information, and style. The format of
      the string representation must match the
      specified format exactly.</para>
		</summary>
		<param name="s">A string containing a date and time to convert. </param>
		<param name="format">The expected format of <paramref name="s"/>.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific formatting information about <paramref name="s"/>. </param>
		<param name="style"><para>The combination of one or more <see cref="System.Globalization.DateTimeStyles"/>constants that indicate the permitted format of <paramref name="s"/>.</para></param>
		<returns>
			<para>A <see cref="System.DateTime"/> equivalent to the date and time contained in <paramref name="s"/> as
   specified by <paramref name="format"/>, <paramref name="provider"/>, and <paramref name="style"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s "/>or <paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>
				<paramref name="s "/>or <paramref name="format"/> is an empty string</para>
			<para>-or-</para>
			<para>
				<paramref name="s "/>does not contain a date and time that corresponds to the pattern specified in <paramref name="format"/>.</para></exception>
		<remarks>
			<para>This method throws <see cref="System.FormatException"/> if the format of <paramref name="s"/> is not exactly as specified by the format pattern in <paramref name="format"/>. If <paramref name="format"/> consists of a single standard format character, the format pattern that character represents is used. For more information, see the <see cref="System.Globalization.DateTimeFormatInfo"/> topic.</para>
			<para>If <paramref name="s"/> contains a time but no date, the <paramref name="style"/> parameter
determines whether the current date or a default date is used. If <paramref name="s"/>
contains a date but no time, 12 A.M. is used. The <paramref name="style"/> parameter
also determines whether leading, inner, or trailing white space characters are
ignored.</para>
			<para>Parameter <paramref name="provider"/> supplies culture-specific date and time formatting information. For example, the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. If <paramref name="provider"/> is <see langword="null"/>, the current culture is used.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.ParseExact"/> method.</para>
			<codelink SampleID="DateTime.Parse" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConDateTimeFormatStrings"/>
		<seealso cref="System.DateTime.Parse"/>
		<seealso cref="System.String"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo.CurrentInfo"/>
	</doc>
	<doc for="DateTime.ParseExact2">
		<summary>
			<para>Converts the specified string representation of a date and time to its <see cref="System.DateTime"/> equivalent using the
   specified array of formats, culture-specific format information, and style. The
   format of the string representation must match at
   least one of the specified formats exactly.</para>
		</summary>
		<param name="s">A string containing one or more dates and times to convert. </param>
		<param name="formats">An array of expected formats of <paramref name="s"/>.</param>
		<param name="provider">An <see cref="System.IFormatProvider"/> that supplies culture-specific format information about <paramref name="s"/>. </param>
		<param name="style"><para>The combination of one or more <see cref="System.Globalization.DateTimeStyles"/>constants that indicate the permitted format of <paramref name="s"/>.</para></param>
		<returns>
			<para>A <see cref="System.DateTime"/> equivalent to the date and time contained in <paramref name="s"/> as
   specified by <paramref name="formats"/>, <paramref name="provider"/>, and <paramref name="style"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException"><paramref name="s"/> or <paramref name="formats"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>
				<paramref name="s"/> is an empty string</para><para> -or-</para><para> an element of <paramref name="formats"/> is an empty string</para><para> -or-</para><para><paramref name="s"/> does not contain a date and time that corresponds to any element of <paramref name="formats"/>.</para></exception>
		<remarks>
			<para>This method throws <see cref="System.FormatException"/> if the format of <paramref name="s"/> is not exactly as specified by at least one of the format patterns in <paramref name="formats"/>. If an element of <paramref name="formats"/> consists of a single standard format character, the format pattern that character represents is used. For more information, see the <see cref="System.Globalization.DateTimeFormatInfo"/> topic.</para>
			<para>If <paramref name="s"/> contains a time but no date, the <paramref name="style"/> parameter
determines whether the current date or a default date is used. If <paramref name="s"/>
contains a date but no time, 12 A.M. is used. The <paramref name="style"/> parameter also
determines whether leading, inner, or trailing white space characters are
ignored.</para>
			<para>Parameter <paramref name="provider"/> supplies culture-specific date and time formatting information. For example, the names of the days of the week in a particular language, or the preferred presentation order of the month, day, and year. If <paramref name="provider"/> is <see langword="null"/>, the current culture is used.</para>
		</remarks>
		<example>
			<para>The following sample demonstrates the <see cref="System.DateTime.ParseExact"/> method.</para>
			<codelink SampleID="DateTime.Parse" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso topic="cpConDateTimeFormatStrings"/>
		<seealso cref="System.DateTime.Parse"/>
		<seealso cref="System.String"/>
		<seealso cref="System.Globalization.CultureInfo"/>
		<seealso cref="System.Globalization.DateTimeFormatInfo.CurrentInfo"/>
	</doc>
</docs>
