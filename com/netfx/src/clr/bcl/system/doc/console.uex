<docs>
	<doc for="Console.WriteLine3">
		<summary>
			<para> Writes the specified array of Unicode characters, followed by the current line terminator, to the standard output stream. </para>
		</summary>
		<param name="buffer">A Unicode character array. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>For more information about the line terminator, see the Remarks section of
 the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine4">
		<summary>
			<para>Writes the specified subarray of Unicode characters, followed by the current line terminator, to the standard output stream. </para>
		</summary>
		<param name="buffer">An array of Unicode characters. </param>
		<param name="index">The starting position in <paramref name="buffer"/>. </param>
		<param name="count">The number of characters to write. </param>
		<exception cref="System.ArgumentNullException"><para><paramref name="buffer"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="count"/> is less than zero.</exception>
		<exception cref="System.ArgumentException"><para><paramref name="index"/> plus <paramref name="count"/> specify a position that is not within <paramref name="buffer"/>.</para></exception>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para> This
 method writes <paramref name="count"/>
 characters starting at position <paramref name="index"/> of <paramref name="buffer"/> to the
 standard output stream.
 </para>
			<para>For more information about the line terminator, see the Remarks section of
 the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.Write8">
		<summary>
			<para>Writes the specified subarray of Unicode characters to the standard output stream. </para>
		</summary>
		<param name="buffer">An array of Unicode characters. </param>
		<param name="index">The starting position in <paramref name="buffer"/>. </param>
		<param name="count">The number of characters to write. </param>
		<exception cref="System.ArgumentNullException"><para><paramref name="buffer"/> is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="count"/> is less than zero.</exception>
		<exception cref="System.ArgumentException"><para><paramref name="index"/> plus <paramref name="count"/> specify a position that is not within <paramref name="buffer"/>.</para></exception>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para> This
 method writes <paramref name="count"/>
 characters starting at position <paramref name="index"/> of <paramref name="buffer"/> to the
 standard output stream.
 </para>
		</remarks>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.OpenStandardError">
		<overload>
			<para> Acquires the standard error stream.</para>
		</overload>
		<summary>
			<para>Acquires the standard error stream.</para>
		</summary>
		<returns>
			<para> The standard error stream.</para>
		</returns>
		<remarks>
			<para>This method can be used to reacquire the standard error stream after it has
      been changed by the <see cref="System.Console.SetError"/> method.</para>
		</remarks>
		<seealso cref="System.Console.Error"/>
		<seealso cref="System.Console.SetError"/>
	</doc><doc for="Console.OpenStandardError1">
		<summary>
			<para>Acquires the standard error stream, set to a specified buffer size.</para>
		</summary>
		<param name=" bufferSize">The internal stream buffer size.</param>
		<returns>
			<para>The standard error stream.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="bufferSize"/> is less than or equal to zero.</exception>
		<remarks>
			<para>This method can be used to reacquire the standard error stream after it has
      been changed by the <see cref="System.Console.SetError"/> method.</para>
		</remarks>
		<seealso cref="System.Console.Error"/>
		<seealso cref="System.Console.SetError"/>
	</doc><doc for="Console.Read">
		<summary>
			<para> Reads the next character from the standard input
      stream.</para>
		</summary>
		<returns>
			<para>The next character
      from the input stream, or negative one (-1) if no more characters are
      available.</para>
		</returns>
		<exception cref="System.IO.IOException">An I/O error occurred.</exception>
		<remarks>
			<para> This method will not return
      until the read operation is terminated; for example, by the user pressing the enter key. If data is available, the input stream
      contains what the user entered, suffixed with the environment dependent newline
      character.</para>
		</remarks>
		<example>
			<codelink SampleID="Classic Console.Read Example" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc><doc for="Console">
		<summary>
			<para> Represents the standard input, output, and error streams for console
      applications. This class cannot be inherited.</para>
		</summary>
		<threadsafe>
			<para>This type is safe for multithreaded operations.</para>
		</threadsafe>
		<remarks>
			<para>The <see cref="System.Console"/> class provides basic support for applications that read characters from, and
   write characters to, the console. If the console does not exist, as in a Windows-based
   application, writes to the console are not displayed and no exception is raised. </para>
			<para>Data from the console is read from the standard input
   stream; normal data to the console is written to the standard output stream;
   and error data to the console is written to the standard error output stream.
   These streams are automatically associated with the console when your
   application starts, and are presented to you as the <see cref="System.Console.In"/>, <see cref="System.Console.Out"/>, and <see cref="System.Console.Error"/>
   
   properties. </para>
			<para>By default, the value of the <see cref="System.Console.In"/> property is a <see cref="System.IO.TextReader" qualify="true"/> , while
the values of the <see cref="System.Console.Out"/> and <see cref="System.Console.Error"/> properties are
<see cref="System.IO.TextWriter" qualify="true"/> objects. However, you can associate these properties 
with streams that do not represent the console; for example, you can associate
them with
streams that represent
files. You can also associate these properties with different streams at the
same time. </para>
			<para>This class uses synchronized <see cref="System.IO.TextReader"/> and <see cref="System.IO.TextWriter"/> instances. Multiple threads can
concurrently read from or write to an instance of this type. </para>
			<para> This class contains methods that read individual characters
   or entire lines from the console. This class also contains several write methods
   that automatically convert individual instances of value types, arrays of
   characters, or sets of objects to a formatted or unformatted string, then writes
   that string to the console, optionally followed by a line termination string. </para>
			<para> You
   can also explicitly invoke the method and property members of the stream objects represented by
   the <see cref="System.Console.In"/>,
<see cref="System.Console.Out"/>, and 
<see cref="System.Console.Error"/> 
properties. For example, the <see cref="System.Console.WriteLine"/>method
writes data to the standard output stream followed by a line termination string;
that is, data followed by a carriage return and line feed ("\r\n"). However,
there is no convenient method to write data to the standard error output
stream. Instead, use an explicit invocation like the C# statement, <c>Console.Error.WriteLine();</c>. </para>
			<para>To continue the previous example, the default value of the line termination
   string is a carriage return followed by a line feed. Change the line termination
   character sequence by setting the <see cref="System.IO.TextWriter.NewLine" qualify="true"/> property of the <see cref="System.Console.Out"/> or <see cref="System.Console.Error"/> property
   to another string. For example, the C# statement, <c>Console.Error.NewLine = "\r\n\r\n";</c>, sets the line
termination character sequence for the Console.Error.WriteLine method to two
carriage return and line feed sequences. </para>
		</remarks>
		<example>
			<para> This code sample demonstrates
      how to read from and write to the standard input and output streams. Note that
      these streams can be redirected using the <see cref="System.Console.SetIn"/> and <see cref="System.Console.SetOut"/>
      methods.</para>
			<codelink SampleID="Classic Console Example" SnippetID="1"/>
		</example>
	</doc><doc for="Console.In">
		<summary>
			<para>Gets the standard input stream.</para>
		</summary>
		<value>
			<para>A <see cref="System.IO.TextReader"/> that represents the standard input stream.</para>
		</value>
		<remarks>
			<para>This property is set to the standard input stream by default. This property
      can be set to another stream with the <see cref="System.Console.SetIn"/> method. </para>
		</remarks>
		<example>
			<para>The following sample illustrates the use of <see langword="In"/>:</para>
			<codelink SampleID="consolein" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Error"/>
		<seealso cref="System.Console.Out"/>
		<seealso cref="System.Console.SetIn"/>
	</doc>
	<doc for="Console.Error">
		<summary>
			<para>Gets the standard error output stream.</para>
		</summary>
		<value>
			<para>A <see cref="System.IO.TextWriter"/> that represents the standard
   error output stream.</para>
		</value>
		<remarks>
			<para>This property is set to the standard error stream by default. This property
      can be set to another stream with the <see cref="System.Console.SetError"/> method.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="Error"/>:</para>
			<codelink SampleID="Console-EXPANDTABSEX" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.In"/>
		<seealso cref="System.Console.Out"/>
		<seealso cref="System.Console.SetError"/>
	</doc>
	<doc for="Console.OpenStandardInput">
		<overload>
			<para>Acquires the standard input stream.</para>
		</overload>
		<summary>
			<para>Acquires the standard input stream.</para>
		</summary>
		<returns>
			<para> The standard input stream.</para>
		</returns>
		<remarks>
			<para>This method can be used to reacquire the standard
      input stream after it has been changed by the <see cref="System.Console.SetIn"/> method.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of 
   <see langword="OpenStandardInput"/>:</para>
			<codelink SampleID="System.Console.OpenStandartInput" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.In"/>
		<seealso cref="System.Console.SetIn"/>
	</doc>
	<doc for="Console.OpenStandardInput1">
		<summary>
			<para>Acquires the standard input stream, set to a specified buffer size.</para>
		</summary>
		<param name=" bufferSize">The internal stream buffer size.</param>
		<returns>
			<para>The standard input stream.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="bufferSize"/> is less than or equal to zero.</exception>
		<remarks>
			<para>This method can be used to reacquire the standard
      output stream after it has been changed by the <see cref="System.Console.SetIn"/> method.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of 
   <see langword="OpenStandardInput"/>:</para>
			<codelink SampleID="System.Console.OpenStandartInput" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.In"/>
		<seealso cref="System.Console.SetIn"/>
	</doc>
	<doc for="Console.OpenStandardOutput">
		<overload>
			<para>Acquires the standard output stream.</para>
		</overload>
		<summary>
			<para>Acquires the standard output stream.</para>
		</summary>
		<returns>
			<para> The standard output stream.</para>
		</returns>
		<remarks>
			<para>This method can be used to reacquire the standard
      output stream after it has been changed by the <see cref="System.Console.SetOut"/> method.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of 
   <see langword="OpenStandardOutput"/>:</para>
			<codelink SampleID="System.Console-INSERTTABS" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Out"/>
		<seealso cref="System.Console.SetOut"/>
	</doc>
	<doc for="Console.Out">
		<summary>
			<para>Gets the standard output stream.</para>
		</summary>
		<value>
			<para>A <see cref="System.IO.TextWriter"/> that
   represents the standard output stream.</para>
		</value>
		<remarks>
			<para>This property is set to the standard output stream by default. This property
      can be set to another stream with the <see cref="System.Console.SetOut"/> method. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="Out"/>:</para>
			<codelink SampleID="System.Console-INSERTTABS" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Error"/>
		<seealso cref="System.Console.In"/>
		<seealso cref="System.Console.SetOut"/>
	</doc>
	<doc for="Console.OpenStandardOutput1">
		<summary>
			<para>Acquires the standard output stream, set to a specified buffer size.</para>
		</summary>
		<param name=" bufferSize">The internal stream buffer size.</param>
		<returns>
			<para>The standard output stream.</para>
		</returns>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="bufferSize"/> is less than or equal to zero.</exception>
		<remarks>
			<para>This method can be used to reacquire the standard
      output stream after it has been changed by the <see cref="System.Console.SetOut"/> method.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="OpenStandardOutput"/>:</para>
			<codelink SampleID="System.Console-INSERTTABS" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Out"/>
		<seealso cref="System.Console.SetOut"/>
	</doc>
	<doc for="Console.ReadLine">
		<summary>
			<para> Reads
      the next line of characters from the standard input stream.
      </para>
		</summary>
		<returns>
			<para> The next line from the input stream, or
   <see langword="null"/>
   if no more characters are available.
   </para>
		</returns>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.OutOfMemoryException">There is insufficient memory to allocate a buffer for the returned string. </exception>
		<remarks>
			<para> A line is defined as a sequence of characters followed
      by a carriage return (hexadecimal 0x000d), a line feed (hexadecimal 0x000a), or
   <see cref="System.Environment.NewLine" qualify="true"/>. The returned string
      does not contain the terminating character(s).
      </para>
			<para> If this method throws <see cref="System.OutOfMemoryException"/>,
   the reader's position in the underlying <see cref="System.IO.Stream"/> is advanced by the number of
   characters the method was able to read, but the characters already read into the
   internal <see cref="System.Console.ReadLine"/> buffer are discarded. Since the position of the reader
   in the stream cannot be changed, the characters already read are unrecoverable,
   and can be accessed only by reinitializing the <see cref="System.IO.TextReader"/>. If the initial position within the
   stream is unknown or the stream does not support seeking, the underlying
<see cref="System.IO.Stream"/> 
also needs to be reinitialized.</para>
			<para> To avoid such a situation and produce robust code you
   should use the <see cref="System.Console.Read"/>
   method and store the
   read characters in a preallocated buffer.
   </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the usage of 
   <see langword="ReadLine"/>:</para>
			<codelink SampleID="System.Console-INSERTTABS" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.Write"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write5">
		<summary>
			<para> Writes the text representation of
      the specified Boolean value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Boolean.ToString" qualify="true"/>, which outputs either <see cref="System.Boolean.TrueString " qualify="true"/>
or <see cref="System.Boolean.FalseString" qualify="true"/> . </para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write6">
		<summary>
			<para> Writes the
      specified Unicode character value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write7">
		<summary>
			<para> Writes the specified array of Unicode characters to the standard output stream. </para>
		</summary>
		<param name="buffer">A Unicode character array. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write9">
		<summary>
			<para>Writes the text representation of the specified
      double-precision floating-point value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/>
is produced by calling <see cref="System.Double.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="Write"/>: </para>
			<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write10">
		<summary>
			<para> Writes the text representation of the
      specified <see cref="System.Decimal"/> value
      to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Decimal.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write11">
		<summary>
			<para>Writes the text representation of the specified
      single-precision floating-point value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Single.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write12">
		<summary>
			<para>Writes the text representation of the specified
      32-bit signed integer value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Int32.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write13">
		<summary>
			<para>Writes the text representation of the specified
      32-bit unsigned integer value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.UInt32.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write14">
		<summary>
			<para>Writes the text representation of the specified
      64-bit signed integer value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Int64.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write15">
		<summary>
			<para>Writes the text representation of the specified
      64-bit unsigned integer value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.UInt64.ToString" qualify="true"/>.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write16">
		<summary>
			<para> Writes the text representation
      of the specified object to the standard output stream.</para>
		</summary>
		<param name="value">The value to write, or <see langword="null"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>If <paramref name="value"/> is <see langword="null"/>, nothing is written and no exception is thrown. Otherwise, the
<see langword="ToString"/> method of 
<paramref name="value"/> is called to produce its string representation, 
and the resulting string is written to the standard output stream.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of
   <see langword="Write"/>:</para>
			<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write17">
		<summary>
			<para> Writes the specified string value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para> If value is <see langword="null"/>, nothing is written to the standard output
   stream.
   </para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.WriteLine">
		<overload>
			<para> Writes the specified data, followed by the current line terminator, to the standard output stream.
      </para>
		</overload>
		<summary>
			<para> Writes the current line terminator to the standard output stream.
      </para>
		</summary>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para> The default line terminator is a string whose value is a
      carriage return followed by a line feed ("\r\n"). Change the line terminator by setting the <see cref="System.IO.TextWriter.NewLine" qualify="true"/> property of the <see cref="System.Console.Out"/>
      property to another string.
      </para>
			<para> For example, in C#, set the line terminator to two
      carriage return and line feed sequences with the statement, <c>Console.Out.NewLine =
      "\r\n\r\n";</c>.
   </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
		<seealso cref="System.IO.TextWriter.NewLine" qualify="true"/>
		<seealso cref="System.Console.Out"/>
	</doc>
	<doc for="Console.WriteLine1">
		<summary>
			<para> Writes the text representation of the specified Boolean value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Boolean.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the
   Remarks section of the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine2">
		<summary>
			<para> Writes the specified Unicode character, followed by the
      current line terminator, value to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>For more information about the line terminator, see the Remarks section of
      the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine5">
		<summary>
			<para> Writes the text representation of the
      specified <see cref="System.Decimal"/> value, followed by the
      current line terminator,
      to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Decimal.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine6">
		<summary>
			<para>Writes the text representation of the specified double-precision floating-point value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/>
is produced by calling <see cref="System.Double.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine7">
		<summary>
			<para>Writes the text representation of the specified single-precision floating-point value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Single.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine8">
		<summary>
			<para>Writes the text representation of the specified 32-bit signed integer value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Int32.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine9">
		<summary>
			<para>Writes the text representation of the specified 32-bit unsigned integer value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.UInt32.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine10">
		<summary>
			<para>Writes the text representation of the specified 64-bit signed integer value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.Int64.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine11">
		<summary>
			<para>Writes the text representation of the specified 64-bit unsigned integer value, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>The text representation of <paramref name="value"/> is produced by calling <see cref="System.UInt64.ToString" qualify="true"/>.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.SetIn">
		<summary>
			<para> Sets the <see cref="System.Console.In"/> property
   to the specified <see cref="System.IO.TextReader"/> .</para>
		</summary>
		<param name="newIn">A <see cref="System.IO.TextReader"/> stream that is the new standard input. </param>
		<exception cref="System.ArgumentNullException"><paramref name="newIn"/> is <see langword="null"/>. </exception>
		<exception cref="System.Security.SecurityException">The caller does not have the required permission.</exception>
		<remarks>
			<para> By
      default, the <see cref="System.Console.In"/>
      property is
      set to the standard input stream.
      </para>
			<para>A <see cref="System.IO.StreamReader"/> that encapsulates a <see cref="System.IO.FileStream"/> can be used to receive input from a
   file. </para>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermissionFlag">for calling unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
		<example>
			<para>The following code sample illustrates the use of <see langword="SetIn"/>:</para>
			<codelink SampleID="System.Console-INSERTTABS" SnippetID="1"/>
		</example>
		<seealso cref="System.IO.TextReader"/>
		<seealso cref="System.Console.In"/>
	</doc>
	<doc for="Console.SetOut">
		<summary>
			<para> Sets the <see cref="System.Console.Out"/> property
   to the specified <see cref="System.IO.TextWriter"/>
   
   .</para>
		</summary>
		<param name="newOut">A <see cref="System.IO.TextWriter"/> stream that is the new standard output.</param>
		<exception cref="System.ArgumentNullException"><paramref name="newOut"/> is <see langword="null"/>.</exception>
		<exception cref="System.Security.SecurityException">The caller does not have the required permission.</exception>
		<remarks>
			<para>By default, the <see cref="System.Console.Out"/> property is set
   to the standard output stream.</para>
			<para>A <see cref="System.IO.StreamWriter"/> that encapsulates a <see cref="System.IO.FileStream"/> can be used to send output to a file. For
example:</para>
			<code lang="C#">Console.WriteLine("Hello World");
 FileStream fs1 = new FileStream("Test.txt", FileMode.Create);
 // First, save the standard output.
 TextWriter tmp = Console.Out;
 
 StreamWriter sw1 = new StreamWriter(fs1);
 Console.SetOut(sw1);
 Console.WriteLine("Hello file");
 
 Console.SetOut(tmp);
 Console.WriteLine("Hello World");
 
 sw1.Close();
</code>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermissionFlag">for calling unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
		<example>
			<para>The following code sample illustrates the use of <see langword="SetOut"/>:</para>
			<codelink SampleID="System.Console-INSERTTABS" SnippetID="1"/>
		</example>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Console.Out"/>
	</doc>
	<doc for="Console.SetError">
		<summary>
			<para> Sets the <see cref="System.Console.Error"/> property to the specified <see cref="System.IO.TextWriter"/>.</para>
		</summary>
		<param name="newError">A <see cref="System.IO.TextWriter"/> stream that is the new standard error output. </param>
		<exception cref="System.ArgumentNullException"><paramref name="newError"/> is <see langword="null"/>. </exception>
		<exception cref="System.Security.SecurityException">The caller does not have the required permission.</exception>
		<remarks>
			<para> By default, the <see cref="System.Console.Error"/> property is set
   to the standard error output stream.</para>
			<para> A <see cref="System.IO.StreamWriter"/> that encapsulates a <see cref="System.IO.FileStream"/>
can be used to
send error messages to a file.</para>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermissionFlag">for calling unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
		<seealso cref="System.IO.TextWriter"/>
		<seealso cref="System.Console.Error"/>
	</doc>
	<doc for="Console.WriteLine12">
		<summary>
			<para> Writes the text representation of the specified object, followed by
      the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para>If <paramref name="value"/> is <see langword="null"/>, only the line terminator is written. Otherwise, the
<see langword="ToString"/> method of 
<paramref name="value"/> is called to produce its string representation, 
   and the resulting string is written to the standard output stream.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine13">
		<summary>
			<para> Writes the specified string value, followed by the current line terminator, to the standard output stream.</para>
		</summary>
		<param name="value">The value to write. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<remarks>
			<para> If value is <see langword="null"/>, 
   only the line terminator is written to the standard output
   stream.
   </para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine14">
		<summary>
			<para>Writes the specified object, followed by the current line terminator, to the standard output stream using the specified format
      information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">Object to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para> This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>.
   </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
			<para>For more information about the line terminator, see the Remarks section of
   the <see cref="System.Console.WriteLine"/> method that takes no
   parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine15">
		<summary>
			<para>Writes the specified objects, followed by the current line terminator, to the standard output stream using the specified format
      information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">The first object to write using <paramref name="format"/>. </param>
		<param name="arg1">The second object to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
			<para>For more information about the line terminator, see the Remarks section of the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</remarks>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine16">
		<summary>
			<para>Writes the specified objects, followed by the current line terminator, to the standard output stream using the specified format information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">The first object to write using <paramref name="format"/>. </param>
		<param name="arg1">The second object to write using <paramref name="format"/>. </param>
		<param name="arg2">The third object to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
			<para>For more information about the line terminator, see the Remarks section of the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.WriteLine17">
		<summary>
			<para>Writes the specified objects and variable length parameter list, followed by the current line terminator, to the standard output stream using the specified format information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">The first object to write using <paramref name="format"/>. </param>
		<param name="arg1">The second object to write using <paramref name="format"/>. </param>
		<param name="arg2">The third object to write using <paramref name="format"/>. </param>
		<param name=" arg3">The fourth object to write using <paramref name="format"/>.</param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
			<para>For more information about the line terminator, see the Remarks section of the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.Write">
		<overload>
			<para> Writes the specified information to the standard output stream.
      </para>
		</overload>
		<summary>
			<para>Writes the specified object to the standard output stream using the specified format
      information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">Object to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para> This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>.
   </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is
ignored.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of
   <see langword="Write"/>:</para>
			<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write1">
		<summary>
			<para>Writes the specified objects to the standard output stream using the specified format
      information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">The first object to write using <paramref name="format"/>. </param>
		<param name="arg1">The second object to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of
   <see langword="Write"/>:</para>
			<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write2">
		<summary>
			<para>Writes the specified objects to the standard output stream using the specified format information. </para>
		</summary>
		<param name="format">The format string.</param>
		<param name="arg0">The first object to write using <paramref name="format"/>. </param>
		<param name="arg1">The second object to write using <paramref name="format"/>. </param>
		<param name="arg2">The third object to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
		</remarks>
		<example>
   The following code sample illustrates the use of
<see langword="Write"/>:
<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.Write3">
		<summary>
			<para>Writes the specified objects and variable length parameter list to the standard output stream using the specified format information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg0">The first object to write using <paramref name="format"/>. </param>
		<param name="arg1">The second object to write using <paramref name="format"/>. </param>
		<param name="arg2">The third object to write using <paramref name="format"/>. </param>
		<param name=" arg3">The fourth object to write using <paramref name="format"/>.</param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of
   <see langword="Write"/>:</para>
			<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
	<doc for="Console.WriteLine18">
		<summary>
			<para>Writes the specified array of objects, followed by the current line terminator, to the standard output stream using the specified format information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg">An array of objects to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> or <paramref name="arg"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
			<para>For more information about the line terminator, see the Remarks section of the <see cref="System.Console.WriteLine"/> method that takes no parameters. </para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of <see langword="WriteLine"/>: </para>
			<codelink SampleID="System.Console.WriteLine" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.Write"/>
	</doc>
	<doc for="Console.Write4">
		<summary>
			<para>Writes the specified array of objects to the standard output stream using the specified format information. </para>
		</summary>
		<param name="format">The format string. </param>
		<param name="arg">An array of objects to write using <paramref name="format"/>. </param>
		<exception cref="System.IO.IOException">An I/O error occurred. </exception>
		<exception cref="System.ArgumentNullException"><paramref name="format"/> or <paramref name="arg"/> is <see langword="null"/>.</exception>
		<exception cref="System.FormatException"><para>The format specification in <paramref name="format"/> is invalid.</para></exception>
		<remarks>
			<para>This method uses the same semantics as <see cref="System.String.Format" qualify="true"/>. </para>
			<para>If a parameter object is not referenced in <paramref name="format"/>, it is ignored.</para>
		</remarks>
		<example>
			<para>The following code sample illustrates the use of
   <see langword="Write"/>:</para>
			<codelink SampleID="System.Console-REFORMAT" SnippetID="1"/>
		</example>
		<seealso topic="cpConFormattingOverview"/>
		<seealso cref="System.Console.Read"/>
		<seealso cref="System.Console.ReadLine"/>
		<seealso cref="System.Console.WriteLine"/>
	</doc>
</docs>
