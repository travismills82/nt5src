<docs>
	<doc for="OverflowException.OverflowException3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.OverflowException"/> 
class with serialized data.</para>
		</summary>
		<param name="info">The object that holds the serialized object data.</param>
		<param name="context">The contextual information about the source or destination.</param>
		<remarks>
			<para>This constructor is called during deserialization to reconstitute the
      exception object transmitted over a stream. For more information, see
   <see topic="cpconSerialization"/>.</para>
		</remarks>
		<seealso topic="cpconSerialization"/>
	</doc><doc for="OverflowException.OverflowException">
		<overload>
			<para>Initializes a new instance of the
   <see cref="System.OverflowException"/> class.</para>
		</overload>
		<summary>
   Initializes a new instance of the
<see cref="System.OverflowException"/> class.
</summary>
		<remarks>
			<para>This constructor</para>
			<para>The following table shows the initial property
      values for an instance of <see cref="System.OverflowException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
      null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="OverflowException.OverflowException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.OverflowException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para> An exception that is thrown as a direct result of
      a previous exception can include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/> property returns 
      the same value that is passed into the constructor, or a null reference
      (<see langword="Nothing"/> in Visual Basic) if the <see cref="System.Exception.InnerException"/>
      property does not supply the inner exception value to
      the constructor. </para>
			<para>The following table shows the initial property values for an instance of
   <see cref="System.OverflowException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="OverflowException.OverflowException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.OverflowException"/>
class with a specified error message.</para>
		</summary>
		<param name="message">The message that describes the error.</param>
		<remarks>
			<para>The content of the <paramref name="message"/> 
should be understandable to the user. The caller of this constructor is required
to ensure that this string has been localized for the current system
culture.</para>
			<para>The following table shows the initial property
   values for an instance of <see cref="System.OverflowException"/>.</para>
			<list type="table"><listheader>
					<term>Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="OverflowException">
		<summary>
			<para>The exception that is thrown when an arithmetic, casting, or conversion operation in a checked
      context results in an overflow.</para>
		</summary>
		<remarks>
			<para>In languages that detect overflow, <see cref="System.OverflowException"/> is the
   exception that gets thrown. For example, in C#, the checked keyword is used to
   detect overflow conditions. An <see cref="System.OverflowException"/>
   exception occurs only in a checked context.</para>
			<para>The following Microsoft intermediate language (MSIL) instructions throw <see cref="System.OverflowException"/>: </para>
			<list type="bullet"><item>
					<term>
      add.ovf.&lt;signed&gt;</term>
				</item>
				<item>
					<term>
      conv.ovf.&lt;to type&gt;</term>
				</item>
				<item>
					<term>conv.ovf.&lt;to type&gt;.un</term>
				</item>
				<item>
					<term>
      mul.ovf.&lt;type&gt;</term>
				</item>
				<item>
					<term>
      sub.ovf.&lt;type&gt;</term>
				</item>
				<item>
					<term>newarr</term>
				</item>
			</list>
			<para>For a result from an integral or decimal-type arithmetic operation or
   conversion that is outside the range of the destination type:</para>
			<list type="bullet"><item>
					<term>
      
      In a checked context, a compile-time error occurs if
      the operation is a constant expression. Otherwise, an <see cref="System.OverflowException"/>
      is thrown if the operation is performed at run-time.</term>
				</item>
			</list>
			<list type="bullet"><item>
					<term>
      
      In an unchecked context, the result is truncated by discarding any high-order bits that do not
      fit in the destination type.</term>
				</item>
			</list>
			<para><see cref="System.OverflowException"/> uses the HRESULT COR_E_OVERFLOW, that has the value
0x80131516.</para>
			<para>For a list of initial property values for an instance of <see cref="System.OverflowException"/>, see
the <see cref="System.OverflowException()"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc>
</docs>
