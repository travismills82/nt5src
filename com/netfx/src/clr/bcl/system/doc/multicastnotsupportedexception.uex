<docs>
	<doc for="MulticastNotSupportedException.MulticastNotSupportedException">
		<overload>
			<para>Initializes a new instance of the <see cref="System.MulticastNotSupportedException"/> class.</para>
		</overload>
		<summary>
   Initializes a new instance of the <see cref="System.MulticastNotSupportedException"/> class.
</summary>
		<remarks>
			<para>This constructor initializes the <see cref="System.Exception.Message"/> 
property of the new instance to a system-supplied message that describes the
error, such as "This operation cannot be performed with the specified
delegates." This message takes into account the current system culture.</para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.MulticastNotSupportedException"/>.</para>
			<list type="table"><listheader>
					<term> Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The localized error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="MulticastNotSupportedException.MulticastNotSupportedException1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.MulticastNotSupportedException"/> class with
   a specified error message.</para>
		</summary>
		<param name="message">The message that describes the error.</param>
		<remarks>
			<para>The content of the <paramref name="message"/> parameter should be understandable to 
   the user. The caller of this constructor is required to ensure that this string
   has been localized for the current system culture.</para>
			<para>The following table shows the initial property values for an instance of
<see cref="System.MulticastNotSupportedException"/>.</para>
			<list type="table"><listheader>
					<term> Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>A 
   null reference (<see langword="Nothing"/> in Visual Basic).</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The
   error message string.</description>
				</item>
			</list>
		</remarks>
	</doc><doc for="MulticastNotSupportedException.MulticastNotSupportedException2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.MulticastNotSupportedException"/>
class with a specified error message and a reference to the
inner exception that is the cause of this exception.</para>
		</summary>
		<param name="message">The error message that explains the reason for the exception.</param>
		<param name="inner">The exception that is the cause of the current exception. If the <paramref name="inner"/> parameter is not a null reference (<see langword="Nothing"/> in Visual Basic), the current exception is raised in a <see langword="catch"/> block that handles the inner exception.</param>
		<remarks>
			<para>An exception that is thrown as a direct result of a
      previous exception should include a reference to the previous exception in
      the <see cref="System.Exception.InnerException"/> property. The
   <see cref="System.Exception.InnerException"/> property returns 
      the same value that is passed into the constructor, or a null reference
      (<see langword="Nothing"/> in Visual Basic) if the <see cref="System.Exception.InnerException"/>
      property does not supply the inner exception value to
      the constructor. </para>
			<para> The following table shows the initial property values for an instance of
   <see cref="System.MulticastNotSupportedException"/>. </para>
			<list type="table"><listheader>
					<term> Property</term>
					<description>Value</description>
				</listheader>
				<item>
					<term><see cref="System.Exception.InnerException"/></term>
					<description>The inner exception reference.</description>
				</item>
				<item>
					<term><see cref="System.Exception.Message"/></term>
					<description>The error message string.</description>
				</item>
			</list>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc><doc for="MulticastNotSupportedException">
		<summary>
			<para>The exception that is thrown when there is an attempt to
      combine two instances of a non-combinable delegate type unless one of the
      operands is a null reference (<see langword="Nothing"/> in Visual Basic). This class cannot be
      inherited.</para>
		</summary>
		<remarks>
			<para>A valid delegate combination is made when one or both
      operands is a combinable delegate type. If both operands are non-combinable
      delegate type, then one operand must be a null reference
      (<see langword="Nothing"/> in Visual Basic). A combinable delegate type must satisfy the
      following conditions:</para>
			<list type="bullet"><item>
					<term>
         
         The declared return type of the delegate must be void.</term>
				</item>
			</list>
			<list type="bullet"><item>
					<term>
      
      None of the parameters of the delegate type can be declared as output
      parameters.</term>
				</item>
			</list>
			<para>A multicast delegate instance is created by combining
   two or more delegate instances that are not a null reference. For more information, see <see cref="System.MulticastDelegate"/>.</para>
			<para><see cref="System.MulticastNotSupportedException"/> uses the HRESULT COR_E_MULTICASTNOTSUPPORTED, that has
the value 0x80131514.</para>
			<para>For a list of initial property values for an instance of
<see langword="MulticastNotSupportedException"/>, see the <see cref="System.MulticastNotSupportedException()"/> constructors.</para>
		</remarks>
		<seealso cref="System.Exception"/>
		<seealso cref="System.MulticastDelegate"/>
		<seealso topic="cpconHandlingThrowingExceptions"/>
	</doc></docs>
