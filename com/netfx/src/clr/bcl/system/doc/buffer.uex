<docs>
	<doc for="Buffer.GetByte">
		<summary>
			<para>Retrieves the byte at a specified location in a specified array.</para>
		</summary>
		<param name="array">An array.</param>
		<param name="index">A location in the array.</param>
		<returns>
			<para>Returns
       the <paramref name="index"/> byte in the array.</para>
		</returns>
		<exception cref="System.ArgumentException">
			<paramref name="array"/> is not a primitive.</exception>
		<exception cref="System.ArgumentNullException">
			<paramref name="array"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException">
			<paramref name="index"/> is negative or greater than the length of <paramref name="array"/>.</exception>
		<remarks>
			<para>The <see langword="GetByte"/> method gets a particular
    byte out of the array. The array must be an array of primitives.</para>
		</remarks>
	</doc>
	<doc for="Buffer.SetByte">
		<summary>
			<para>Assigns a specified value to a byte at a particular location in a specified array.</para>
		</summary>
		<param name="array">An array.</param>
		<param name="index">A location in the array.</param>
		<param name="value">A value to assign.</param>
		<exception cref="System.ArgumentException">
			<paramref name="array"/> is not a primitive.</exception>
		<exception cref="System.ArgumentNullException">
			<paramref name="array"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentOutOfRangeException">
			<paramref name="index"/> is negative or greater than the length of <paramref name="array"/> .</exception>
		<remarks>
			<para>
				<paramref name="array"/>
 must be an array of primitives.</para>
		</remarks>
	</doc>
	<doc for="Buffer.ByteLength">
		<summary>
			<para>Returns
       the number of bytes in the specified array.</para>
		</summary>
		<param name="array">An array.</param>
		<returns>
			<para>The
       number of bytes in the array.</para>
		</returns>
		<exception cref="System.ArgumentNullException">
			<paramref name="array"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException">
			<paramref name="array"/> is not a primitive.</exception>
		<example>
			<codelink SampleID="Classic Buffer.ByteLength Example" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Buffer.BlockCopy">
		<summary>
			<para> Copies a specified number of bytes from a source array starting at a
      particular offset to a destination array starting at a particular offset.</para>
		</summary>
		<param name="src">The source buffer.</param>
		<param name="srcOffset">The byte offset into <paramref name="src"/>.</param>
		<param name="dst">The destination buffer.</param>
		<param name="dstOffset">The byte offset into <paramref name="dst"/>.</param>
		<param name="count">The number of bytes to copy.</param>
		<exception cref="System.ArgumentNullException"><paramref name="src"/> or <paramref name="dst"/> is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para><paramref name="src"/> or <paramref name="dst"/> is an object array, not a value type array.</para>
			<para>-or-</para>
			<para>The length of <paramref name="src"/> is less than <paramref name="srcOffset"/> plus <paramref name="count"/>.</para>
			<para>-or-</para>
			<para>The length of <paramref name="dst"/> is less than <paramref name="dstOffset"/> plus <paramref name="count"/>.</para></exception>
		<exception cref="System.ArgumentOutOfRangeException"><paramref name="srcOffset"/>, <paramref name="dstOffset"/>, or <paramref name="count"/> is less than 0.</exception>
		<remarks>
			<para>Copies <paramref name="count"/> bytes from <paramref name="src"/>,
beginning at <paramref name="srcOffset"/>, to <paramref name="dst"/>,
beginning at <paramref name="dstOffset"/>.</para>
		</remarks>
	</doc>
	<doc for="Buffer">
		<summary>
			<para>Manipulates arrays of primitive types.</para>
		</summary>
		<remarks>
			<para><see cref="System.Buffer"/> 
only affects arrays of primitive types; this
class does not apply to objects. Each primitive type is
treated as a series of bytes without regard to any behavior
or limitation associated with the primitive type.</para>
			<para><see cref="System.Buffer"/> 
provides methods to copy bytes from one array of primitive types to another
array of primitive types, get a byte from an array, set a byte in an array, and
obtain the length of an array. This class provides better performance for
manipulating primitive types than similar methods in the <see cref="System.Array" qualify="true"/> class.</para>
			<para><see cref="System.Buffer"/> is applicable to the following primitive types: <see cref="System.Boolean"/>, <see cref="System.Char"/>, <see cref="System.SByte"/>, <see cref="System.Byte"/>, <see cref="System.Int16"/>, <see cref="System.UInt16"/>, <see cref="System.Int32"/>, <see cref="System.UInt32"/>, <see cref="System.Int64"/>, <see cref="System.UInt64"/>, <see cref="System.IntPtr"/>, <see cref="System.UIntPtr"/>, <see cref="System.Single"/>, and <see cref="System.Double"/>.</para>
		</remarks>
	</doc>
</docs>
