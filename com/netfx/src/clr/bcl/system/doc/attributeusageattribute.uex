<docs>
	<doc for="AttributeUsageAttribute.AttributeUsageAttribute">
		<summary>
			<para>Initializes a new instance of the <see cref="System.AttributeUsageAttribute"/> class with the specified
   list of <see cref="System.AttributeTargets"/>, the <see cref="System.AttributeUsageAttribute.AllowMultiple"/> value, and the <see cref="System.AttributeUsageAttribute.Inherited"/>
   value.</para>
		</summary>
		<param name="validOn">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</param>
		<remarks>
			<para>You can combine several <see cref="System.AttributeTargets"/> values using a bitwise OR operation to 
   get the desired combination of valid program elements.</para>
			<para>For default property values, see the <see cref="System.AttributeUsageAttribute.ValidOn"/>, <see cref="System.AttributeUsageAttribute.AllowMultiple"/>, and <see cref="System.AttributeUsageAttribute.Inherited"/> properties.</para>
		</remarks>
		<example>
			<para>The definition of the DispId attribute illustrates the
      use of a bitwise OR operation to combine several <see cref="System.AttributeTargets"/>
      values.
      </para>
			<codelink SampleID="Classic AttributeUsageAttribute.AttributeUsageAttribute Example" SnippetID="1"/>
		</example>
		<seealso cref="System.AttributeTargets"/>
	</doc>
	<doc for="AttributeUsageAttribute.ValidOn">
		<summary>
			<para>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</para>
		</summary>
		<value>
			<para> One or several <see cref="System.AttributeTargets"/>
values. The default is <see langword="All"/>.</para>
		</value>
		<seealso cref="System.AttributeTargets"/>
	</doc>
	<doc for="AttributeUsageAttribute">
		<summary>
			<para> Specifies the usage of
      another attribute class. This class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>When you are defining your own attribute class, you can
      control the manner in which it is used by placing an <see cref="System.AttributeUsageAttribute"/> on your attribute class. The
      indicated attribute class must derive from <see cref="System.Attribute"/>,
      either directly or indirectly.</para>
			<para>Attribute classes have positional and named parameters. Each
      public constructor for an attribute class defines a valid sequence of
      positional parameters for that class. Named parameters are defined by the
      non-static, public, and read-write fields or properties of the
      attribute class. </para>
			<para>The three properties of
   <see cref="System.AttributeUsageAttribute"/> are set by defining the
      following parameters: </para>
			<list type="bullet"><item>
					<term>
						<see cref="System.AttributeUsageAttribute.ValidOn"/></term>
				</item>
			</list>
This positional
parameter specifies the program elements that the indicated attribute can be placed
on. The set of all possible elements that you can place an attribute on is
listed in the <see cref="System.AttributeTargets"/> enumerator. You
can combine several <see cref="System.AttributeTargets"/> values using a bitwise OR operation to get the desired
combination of valid program elements.
<list type="bullet"><item>
					<term><see cref="System.AttributeUsageAttribute.AllowMultiple"/></term>
				</item>
			</list>
			<para>This named parameter specifies whether the
   indicated attribute can be specified more than once for a given program
   element. </para>
			<list type="bullet"><item>
					<term><see cref="System.AttributeUsageAttribute.Inherited"/></term>
				</item>
			</list>
			<para> This named parameter specifies whether the indicated attribute can be inherited by derived
   classes and overriding members. </para>
			<para>For more information about using attributes, see <see cref="System.Attribute"/>
and <see topic="cpconExtendingMetadataUsingAttributes"/>.</para>
		</remarks>
		<seealso cref="System.Attribute"/>
		<seealso cref="System.AttributeTargets"/>
		<seealso topic="cpconExtendingMetadataUsingAttributes"/>
	</doc>
	<doc for="AttributeUsageAttribute.AllowMultiple">
		<summary>
			<para> Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified
      for a single program element.</para>
		</summary>
		<value>
			<para><see langword="true"/> if more than
   one instance is allowed to be specified; otherwise,
<see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<remarks>
			<para> An attribute that can be specified more
      than once for a program element is called a multi-use attribute. An attribute that
      can be specified only once is called a single-use attribute.</para>
		</remarks>
		<seealso cref="System.Attribute"/>
	</doc>
	<doc for="AttributeUsageAttribute.Inherited">
		<summary>
			<para> Gets or sets a Boolean value indicating whether the indicated
      attribute can be inherited by derived classes and overriding members.</para>
		</summary>
		<value>
			<para><see langword="true"/> if 
   the attribute
   can be inherited by derived classes and overriding members; otherwise,
<see langword="false"/>. The default is <see langword="true"/>.</para>
		</value>
		<seealso cref="System.Attribute"/>
	</doc>
</docs>
