<docs>
	<doc for="CryptoStreamMode.Read">
		<summary>
			<para>Read access to a cryptographic stream.</para>
		</summary>
	</doc>
	<doc for="CryptoStreamMode.Write">
		<summary>
			<para>Write access to a cryptographic stream.</para>
		</summary>
	</doc>
	<doc for="CryptoStreamMode">
		<summary>
			<para>Specifies the mode of a cryptographic stream.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream">
		<summary>
			<para>Defines a stream that links data streams to cryptographic transformations.</para>
		</summary>
		<remarks>
			<para>The common language runtime uses a stream-oriented design for cryptography.
      The core of this design is <see cref="System.Security.Cryptography.CryptoStream"/>. Any cryptographic objects that
      implement <see cref="System.Security.Cryptography.CryptoStream"/> can be
      chained together with any objects that implement <see cref="System.IO.Stream"/>, so the streamed output from one object can be fed into the input
      of another object. The intermediate result (the output from the first object) does
      not need to be stored separately. </para>
		</remarks>
		<example>
			<para>The following example demonstrates how to use
      a <see cref="System.Security.Cryptography.CryptoStream"/> to encrypt a byte array. This method uses <see cref="System.Security.Cryptography.RijndaelManaged"/> with the specified <see cref="System.Security.Cryptography.SymmetricAlgorithm.Key"/> and
      initialization vector (<see cref="System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to encrypt a file specified by <c>inName</c>,
   and outputs the encrypted
   result to the file specified by <c>outName</c>. The <c>rijnKey</c> and <c>rijnIV</c> parameters to the method are 16-byte arrays. You must
have the high encryption pack installed to run this sample.</para>
			<codelink SampleID="Classic CryptoStream Example" SnippetID="1"/>
		</example>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.CryptoStream">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.CryptoStream"/> class with a target data stream,
   the transformation to use, and the mode of the stream.</para>
		</summary>
		<param name="stream">The stream on which to perform the cryptographic transformation.</param>
		<param name=" transform">The cryptographic transformation that is to be performed on the stream.</param>
		<param name=" mode">One of the <see cref="System.Security.Cryptography.CryptoStreamMode"/> values.</param>
		<remarks>
			<para> Any object that derives from
   <see cref="System.IO.Stream"/> can be passed into the <paramref name="stream"/> parameter. Any object that implements <see cref="System.Security.Cryptography.ICryptoTransform"/> (such as <see cref="System.Security.Cryptography.HashAlgorithm"/>) can be passed into the
   <paramref name="transform"/> parameter.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Finalize">
		<summary>
			<para>Releases the unmanaged resources used by the <see cref="System.Security.Cryptography.CryptoStream"/>.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.CanRead">
		<summary>
			<para>Gets a value indicating whether the current <see cref="System.Security.Cryptography.CryptoStream"/> is readable.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the current
   stream is readable; otherwise, <see langword="false"/>.</para>
		</value>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.CanSeek">
		<summary>
			<para>Gets a value indicating whether you can seek within the current <see cref="System.Security.Cryptography.CryptoStream"/>.</para>
		</summary>
		<value>
			<para>Always <see langword="false"/>.</para>
		</value>
		<remarks>
			<para>Seeking is not enabled in a <see cref="System.Security.Cryptography.CryptoStream"/>, so this method
   always returns <see langword="false"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.CanWrite">
		<summary>
			<para>Gets a value indicating whether the current <see cref="System.Security.Cryptography.CryptoStream"/> is writable.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the current
   stream is writable; otherwise, <see langword="false"/>.</para>
		</value>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Length">
		<summary>
			<para>Gets the length in bytes of the stream.</para>
		</summary>
		<value>
			<para>This property is not supported.</para>
		</value>
		<exception cref="System.NotSupportedException">This property is not supported.</exception>
		<remarks>
			<para>This property exists only to support inheritance from
   <see cref="System.IO.Stream"/>, and
      cannot be used. </para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Position">
		<summary>
			<para>Gets or sets the position within the current stream.</para>
		</summary>
		<value>
			<para>This property is not supported.</para>
		</value>
		<exception cref="System.NotSupportedException">This property is not supported.</exception>
		<remarks>
			<para>This property exists only to support inheritance from <see cref="System.IO.Stream"/>, and cannot be
   used. </para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.FlushFinalBlock">
		<summary>
			<para> Updates the underlying data source or repository with
      the current state of the buffer, then clears the buffer.</para>
		</summary>
		<exception cref="System.NotSupportedException"><para>The current stream is not writable.</para>
			<para>-or-</para>
			<para>The final block has already been transformed.</para></exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Close">
		<summary>
			<para>Closes the current stream and releases any resources (such as sockets and
      file handles) associated with the current stream.</para>
		</summary>
		<exception cref="System.NotSupportedException">The current stream is not writable.</exception>
		<remarks>
			<para>Flushing the stream will not flush its underlying encoder unless you
      explicitly call <see cref="System.Security.Cryptography.CryptoStream.Flush"/> or <see cref="System.Security.Cryptography.CryptoStream.Close"/>. Setting <see cref="System.IO.StreamWriter.AutoFlush"/> to <see langword="true"/> means that data
      will be flushed from the buffer to the stream, but the encoder state will not be
      flushed. This allows the encoder to keep its state (partial characters) so that
      it can encode the next block of characters correctly. This scenario affects UTF8
      and UTF7 where certain characters can only be encoded after the encoder receives
      the adjacent character or characters.</para>
			<para>A call to <see cref="System.Security.Cryptography.CryptoStream.Close"/> is required for
   proper operation of a stream. Following a call to
<see cref="System.Security.Cryptography.CryptoStream.Close"/>, other operations on the stream 
   could throw exceptions. If the stream is already closed, a call to
<see cref="System.Security.Cryptography.CryptoStream.Close"/> 
throws no
exceptions.</para>
			<para>Attempts to manipulate the stream could throw an <see cref="System.ObjectDisposedException"/>
after the stream has been closed.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Flush">
		<summary>
			<para>Clears all buffers for this stream and causes any buffered data to be written
      to the underlying device.</para>
		</summary>
		<exception cref="System.NotSupportedException">The current stream is not writable.</exception>
		<remarks>
			<para>Flushing the stream will not flush its underlying encoder
      unless you explicitly call <see cref="System.Security.Cryptography.CryptoStream.Flush"/>
      or <see cref="System.Security.Cryptography.CryptoStream.Close"/>. Setting
   <see cref="System.IO.StreamWriter.AutoFlush"/> to <see langword="true"/> means that data
      will be flushed from the buffer to the stream, but the encoder state will not be
      flushed. This allows the encoder to keep its state (partial characters) so that
      it can encode the next block of characters correctly. This scenario affects UTF8
      and UTF7 where certain characters can only be encoded after the encoder receives
      the adjacent character or characters.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Seek">
		<summary>
			<para>Sets the position within the current stream.</para>
		</summary>
		<param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
		<param name=" origin">A <see cref="System.IO.SeekOrigin"/> object indicating the reference point used to obtain the new position. </param>
		<returns>
			<para>This method is not supported.</para>
		</returns>
		<exception cref="System.NotSupportedException">This method is not supported.</exception>
		<remarks>
			<para>This method exists only to support inheritance from <see cref="System.IO.Stream"/>, and cannot be
   used. </para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.SetLength">
		<summary>
			<para>Sets the length of the current stream.</para>
		</summary>
		<param name="value">The desired length of the current stream in bytes.</param>
		<remarks>
			<para>This property exists only to support inheritance from <see cref="System.IO.Stream"/>, and cannot be
   used. </para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Read">
		<summary>
			<para>Reads a sequence of bytes from the current <see cref="System.Security.Cryptography.CryptoStream"/> and advances the position within
   the stream by the number of bytes read.</para>
		</summary>
		<param name="buffer">An array of bytes. A maximum of <paramref name="count"/> bytes are read from the current stream and stored in <paramref name="buffer"/>.</param>
		<param name="offset">The byte offset in <paramref name="buffer "/> at which to begin storing the data read from the current stream.</param>
		<param name="count">The maximum number of bytes to be read from the current stream.</param>
		<returns>
			<para>The total number of bytes read into the buffer. This can
      be less than the number of bytes requested if that many bytes are not currently
      available, or zero if the end of the stream has been reached.</para>
		</returns>
		<exception cref="System.NotSupportedException">The current stream is not readable.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>The <paramref name="offset"/> parameter is less than zero.</para>
			<para>-or-</para>
			<para>The <paramref name="count"/> parameter is less than zero.</para></exception>
		<exception cref="System.ArgumentException">The<paramref name=" "/>sum of the <paramref name="count"/> and <paramref name="offset"/> parameters is longer than the length of the buffer.</exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Write">
		<summary>
			<para>Writes a sequence of bytes to the current <see cref="System.Security.Cryptography.CryptoStream"/> and advances the current position
   within this stream by the number of bytes written.</para>
		</summary>
		<param name="buffer">An array of bytes. This method copies <paramref name="count "/>bytes from <paramref name="buffer "/> to the current stream.</param>
		<param name="offset">The byte offset in <paramref name="buffer "/> at which to begin copying bytes to the current stream.</param>
		<param name="count">The number of bytes to be written to the current stream.</param>
		<exception cref="System.NotSupportedException">The current stream is not writable.</exception>
		<exception cref="System.ArgumentOutOfRangeException"><para>The <paramref name="offset"/> parameter is less than zero.</para>
			<para>-or-</para>
			<para>The <paramref name="count"/> parameter is less than zero.</para></exception>
		<exception cref="System.ArgumentException">The<paramref name=" "/>sum of the <paramref name="count"/> and <paramref name="offset"/> parameters is longer than the length of the buffer.</exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.IDisposable.Dispose">
		<internalonly/>
		<summary>
			<para>[To be supplied.]</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Clear">
		<summary>
			<para> Releases all resources used by
      the <see cref="System.Security.Cryptography.CryptoStream"/>.</para>
		</summary>
		<remarks>
			<para>This method is a simple call to <see cref="System.IDisposable.Dispose" qualify="true"/>.</para>
			<para>Calling <see langword="Dispose"/> allows the resources
used by the <see cref="System.Security.Cryptography.CryptoStream"/> to be reallocated for other
purposes. For more information about <see langword="Dispose"/>, see <see topic="cpconCleaningUpUnmanagedResources"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="CryptoStream.Dispose">
		<summary>
			<para> Releases the unmanaged resources used by
      the <see cref="System.Security.Cryptography.CryptoStream"/> and optionally releases the
      managed resources.</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<remarks>
			<para>This method is called by the
      public <see langword="Dispose()"/> method and the <see langword="Finalize"/>
      method. <see langword="Dispose()"/> invokes the protected
   <see langword="Dispose(Boolean)"/> method with the disposing parameter set to
   <see langword="true"/>. <see langword="Finalize"/> invokes
   <see langword="Dispose"/> with disposing set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is
<see langword="true"/>, this method releases all resources held by any managed 
   objects that this <see cref="System.Security.Cryptography.CryptoStream"/> references. This
   method invokes the <see langword="Dispose()"/> method of each referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called multiple times by other objects. When
   overriding <see langword="Dispose(Boolean)"/>, be careful not to reference
   objects that have been previously disposed in an earlier call to
<see langword="Dispose"/>. For more information about how to implement 
<see langword="Dispose(Boolean)"/>, see <see topic="cpconImplementingDisposeMethod"/>. 
</note>
			<para>For more information about <see langword="Dispose"/> and
<see langword="Finalize"/>, see <see topic="cpconCleaningUpUnmanagedResources"/> and <see topic="cpconOverridingFinalizeMethod"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
</docs>
