<docs>
	<doc for="AsymmetricSignatureFormatter">
		<summary>
			<para>Represents the base class from which all implementations
      of asymmetric signature formatters derive.</para>
		</summary>
		<remarks>
			<para>Asymmetric signature formatters create digital
      signatures that are verified using implementations of <see cref="System.Security.Cryptography.AsymmetricSignatureDeformatter"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="AsymmetricSignatureFormatter.AsymmetricSignatureFormatter">
		<summary>
			<para> Initializes a new instance of <see cref="System.Security.Cryptography.AsymmetricSignatureFormatter"/>.
   </para>
		</summary>
		<remarks>
			<para>You cannot create an instance of an abstract class. Application code will create
      a new instance of a derived class. </para>
			<para>Use implementations of <see cref="System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey"/> and
<see cref="System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm"/> to 
   set the key and hash algorithm before calling an implementation of
<see cref="System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="AsymmetricSignatureFormatter.SetKey">
		<summary>
			<para> When overridden in a derived class, sets the asymmetric algorithm to use to create the signature.
      </para>
		</summary>
		<param name="key">The instance of the implementation of <see cref="System.Security.Cryptography.AsymmetricAlgorithm"/> to use to create the signature. </param>
		<remarks>
			<para>You must set a key before calling an implementation
      of <see cref="System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="AsymmetricSignatureFormatter.SetHashAlgorithm">
		<summary>
			<para> When overridden in a derived class, sets the hash algorithm to use for creating the signature.
      </para>
		</summary>
		<param name="strName">The name of the hash algorithm to use for creating the signature. </param>
		<remarks>
			<para>You must set a hash algorithm before calling an
      implementation of <see cref="System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="AsymmetricSignatureFormatter.CreateSignature">
		<overload>
			<para> Creates the
      signature.</para>
		</overload>
		<summary>
			<para> Creates the signature from the specified hash value.
      </para>
		</summary>
		<param name="hash">The hash algorithm to use to create the signature. </param>
		<returns>
			<para> The signature for the specified hash value.
      </para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="hash"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>This method sets the hash algorithm to be used, then returns the signature of
      the input hash algorithm value.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="AsymmetricSignatureFormatter.CreateSignature1">
		<summary>
			<para> When overridden in a derived class, creates the signature for the specified data.
      </para>
		</summary>
		<param name="rgbHash">The data to be signed. </param>
		<returns>
			<para> The digital signature for the <paramref name="rgbHash"/> parameter.
   </para>
		</returns>
		<remarks>
			<para> You must specify a key and a hash algorithm before calling
      this method.
      </para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
</docs>
