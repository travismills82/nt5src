<docs>
	<doc for="PasswordDeriveBytes">
		<summary>
			<para>Derives a key from a password.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.PasswordDeriveBytes">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.PasswordDeriveBytes"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.PasswordDeriveBytes"/> class with the password and key
   salt to use to derive the key.</para>
		</summary>
		<param name="strPassword">The password for which to derive the key.</param>
		<param name=" rgbSalt">The key salt to use to derive the key.</param>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.PasswordDeriveBytes1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.PasswordDeriveBytes"/> class
   with the
   password, key salt, hash name, and number
   of iterations to use to derive the key.</para>
		</summary>
		<param name="strPassword">The password for which to derive the key.</param>
		<param name=" rgbSalt">The key salt to use to derive the key.</param>
		<param name=" strHashName">The name of the hash algorithm for the operation.</param>
		<param name=" iterations">The number of iterations for the operation.</param>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.PasswordDeriveBytes2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.PasswordDeriveBytes"/> class
   with the password, key salt, and cryptographic service provider
   (CSP) parameters to use to derive the key.</para>
		</summary>
		<param name="strPassword">The password for which to derive the key.</param>
		<param name=" rgbSalt">The key salt to use to derive the key.</param>
		<param name=" cspParams">The CSP parameters for the operation.</param>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.PasswordDeriveBytes3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.PasswordDeriveBytes"/> class
   with the password, key salt, hash name, number of iterations, and cryptographic service provider
   (CSP) parameters to use to derive the key. </para>
		</summary>
		<param name="strPassword">The password for which to derive the key.</param>
		<param name=" rgbSalt">The key salt to use to derive the key.</param>
		<param name=" strHashName">The name of the hash algorithm for the operation.</param>
		<param name=" iterations">The number of iterations for the operation.</param>
		<param name=" cspParams">The CSP parameters for the operation.</param>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.Finalize">
		<summary>
			<para>Releases any acquired cryptographic service provider
      (CSP) before the object is destroyed.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.HashName">
		<summary>
			<para>Gets or sets the name of the hash algorithm for the operation.</para>
		</summary>
		<value>
			<para>The name of the hash algorithm for the operation.</para>
		</value>
		<exception cref="System.Security.Cryptography.CryptographicException">The name of the hash value is fixed and an attempt is made to change this value.</exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.IterationCount">
		<summary>
			<para>Gets or sets the number of iterations for the operation.</para>
		</summary>
		<value>
			<para>The number of iterations for the operation.</para>
		</value>
		<exception cref="System.Security.Cryptography.CryptographicException">The number of iterations is fixed and an attempt is made to change this value.</exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.Salt">
		<summary>
			<para>Gets or sets the key salt value for the operation.</para>
		</summary>
		<value>
			<para>The key salt value for the operation.</para>
		</value>
		<exception cref="System.Security.Cryptography.CryptographicException">The key salt value is fixed and an attempt is made to change this value.</exception>
		<remarks>
			<para>A dictionary attack is an attack in which the attacker attempts
      to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys. This attack
      is made much more difficult by the introduction of random bytes at the
      end of the password before the key derivation. These random bytes are known
      as salt. </para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.GetBytes">
		<summary>
			<para>Returns pseudo-random key bytes.</para>
		</summary>
		<param name="cb">The number of pseudo-random key bytes to generate.</param>
		<returns>
			<para>A byte array filled with pseudo-random key bytes.</para>
		</returns>
		<remarks>
			<para>This method can create any number of pseudo-random bytes.
      However, the strength of the byte sequence is limited by the number of bytes in the hash
      output.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.Reset">
		<summary>
			<para>Resets the state of the operation.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="PasswordDeriveBytes.CryptDeriveKey">
		<summary>
			<para>Derives a cryptographic key from the <see cref="System.Security.Cryptography.PasswordDeriveBytes"/> object.</para>
		</summary>
		<param name="algname">The algorithm name for which to derive the key.</param>
		<param name=" alghashname">The hash algorithm name to use to derive the key.</param>
		<param name=" keySize">The size of the key to derive.</param>
		<param name=" rgbIV">The initialization vector (IV) to use to derive the key.</param>
		<returns>
			<para>The derived key.</para>
		</returns>
		<exception cref="System.Security.Cryptography.CryptographicException"><para>The <paramref name="keySize"/> parameter is greater than 128.</para>
			<para>-or-</para>
			<para>The cryptographic service provider (CSP) cannot be acquired.</para>
			<para>-or-</para>
			<para>The <paramref name="algname"/> parameter is not a valid algorithm name.</para>
			<para>-or-</para>
			<para>The <paramref name="alghashname"/> parameter is not a valid hash algorithm name.</para></exception>
		<remarks>
			<para>This function is a wrapper for the Crypto API function CryptDeriveKey(), and
      is intended to offer interoperability with applications using the Crypto
      API.</para>
			<para>If the <paramref name="keySize"/> parameter is set to 0, the default key size for the
   specified algorithm is used.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
</docs>
