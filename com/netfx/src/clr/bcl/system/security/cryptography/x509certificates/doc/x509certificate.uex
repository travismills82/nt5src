<docs>
	<doc for="X509Certificate.X509Certificate1">
		<overload>
			<para>Initializes a new instance
      of the <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> class defined
   from a sequence of
   bytes representing an X.509v3 certificate. </para>
		</summary>
		<param name="data">The byte array from which to initialize the state of the new instance. </param>
		<remarks>
			<para>ASN.1 DER is the only certificate format supported by this class.</para>
		</remarks>
	</doc>
	<doc for="X509Certificate.X509Certificate2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> class from
   a handle.</para>
		</summary>
		<param name="handle">The handle from which to initialize the state of the new instance.</param>
		<remarks>
			<para>ASN.1 DER is the only certificate format supported by this class.</para>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for the ability to call unmanaged code. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" qualify="true"/></permission>
	</doc>
	<doc for="X509Certificate.X509Certificate3">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> class from an existing instance.</para>
		</summary>
		<param name="cert">An <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> object with which to initialize the state of the new instance.</param>
		<exception cref="System.ArgumentException">The <paramref name="cert"/> parameter is not of the correct <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> type.</exception>
		<remarks>
			<para>ASN.1 DER is the only certificate format supported by this class.</para>
		</remarks>
	</doc>
	<doc for="X509Certificate.CreateFromSignedFile">
		<summary>
			<para>Creates an X.509v3 certificate from the specified
      signed file.</para>
		</summary>
		<param name="filename">The path of the signed file from which to create the X.509 certificate.</param>
		<returns>
			<para>The newly created X.509 certificate.</para>
		</returns>
		<remarks>
			<para>ASN.1 DER is the only certificate format supported by this class.</para>
		</remarks>
		<permission cref="System.Security.Permissions.FileIOPermission">for the ability to read the file specified by the <paramref name="filename"/> parameter. Associated enumeration: <see cref="System.Security.Permissions.FileIOPermissionAccess.Read"/></permission>
	</doc>
	<doc for="X509Certificate.CreateFromCertFile">
		<summary>
			<para>Creates an X.509v3 certificate from the specified
      certification file.</para>
		</summary>
		<param name="filename">The path of the certification file from which to create the X.509 certificate.</param>
		<returns>
			<para>The newly created X.509 certificate.</para>
		</returns>
		<exception cref="System.ArgumentException">The file specified by the <paramref name="filename"/> parameter cannot be found. </exception>
		<remarks>
			<para>ASN.1 DER is the only certificate format supported by this class.</para>
		</remarks>
		<example>
			<codelink SampleID="X509Certificate.ToString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetName">
		<summary>
			<para> Returns the name of the principal to
      which the certificate was issued.
      </para>
		</summary>
		<returns>
			<para> The name of the principal to which the certificate
      was issued.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetName Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.ToString">
		<overload>
			<para> Returns a string representation of the
      current <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> object.
      </para>
		</overload>
		<summary>
			<para>Returns a string representation of the current <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> object. </para>
		</summary>
		<returns>
			<para>A string representation of the current <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/>
object. </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.ToString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetFormat">
		<summary>
			<para> Returns the name of
      the format of this X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The format of this
      X.509 certificate.
      </para>
		</returns>
		<remarks>
			<para>The format X.509 is always returned in this implementation. </para>
		</remarks>
		<example>
			<codelink SampleID="X509Certificate.GetFormat Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetIssuerName">
		<summary>
			<para> Returns the name of
      the certification authority that issued the X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The name of the certification authority that issued
      the X.509 certificate.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetIssuerName Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetSerialNumber">
		<summary>
			<para> Returns the serial
      number of the
      X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The serial number of the X.509 certificate as an array of bytes.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetSerialNumber Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetSerialNumberString">
		<summary>
			<para> Returns the serial
      number of the X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The serial number of the X.509
      certificate as a hexadecimal string.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetSerialNumberString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetKeyAlgorithm">
		<summary>
			<para> Returns the key algorithm information for this X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The key algorithm information for this X.509 certificate as a
      string.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetKeyAlgorithm Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetKeyAlgorithmParameters">
		<summary>
			<para> Returns the key algorithm parameters for
      the X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The key algorithm parameters for the X.509 certificate as an array of bytes.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetKeyAlgorithmParameters Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetKeyAlgorithmParametersString">
		<summary>
			<para>Returns the key algorithm parameters for the X.509v3
      certificate.</para>
		</summary>
		<returns>
			<para> The key algorithm parameters
      for the X.509 certificate as a hexadecimal string.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetKeyAlgorithmParametersString" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetPublicKey">
		<summary>
			<para> Returns the public key for the
      X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The public key for the X.509 certificate as an array of bytes.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetPublicKey Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetPublicKeyString">
		<summary>
			<para> Returns the public key for the
      X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The public key for the X.509 certificate
      as a hexadecimal string.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetPublicKeyString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetRawCertData">
		<summary>
			<para> Returns the raw data
      for the entire X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> A byte array containing the X.509 certificate data.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetRawCertData Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetRawCertDataString">
		<summary>
			<para> Returns the raw
      data for the entire X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The X.509 certificate data as a hexadecimal string.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetRawCertDataString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetCertHash">
		<summary>
			<para> Returns the hash value
      for the X.509v3 certificate as an array of bytes.
      </para>
		</summary>
		<returns>
			<para> The hash value for the X.509 certificate.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetCertHash Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetCertHashString">
		<summary>
			<para> Returns the hash value
      for the X.509v3 certificate as a hexadecimal string.
      </para>
		</summary>
		<returns>
			<para> The hexadecimal
      string representation of the X.509 certificate hash value.
      </para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.GetCertHashString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetEffectiveDateString">
		<summary>
			<para> Returns the effective date
      of this X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The effective
      date for this X.509 certificate.
      </para>
		</returns>
		<remarks>
			<para> The effective
      date is the date after which the X.509 certificate is considered valid.
      </para>
		</remarks>
		<example>
			<codelink SampleID="X509Certificate.GetEffectiveDateString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetExpirationDateString">
		<summary>
			<para> Returns the expiration date
      of this X.509v3 certificate.
      </para>
		</summary>
		<returns>
			<para> The expiration
      date for this X.509 certificate.
      </para>
		</returns>
		<remarks>
			<para> The expiration date is the date after which the X.509 certificate is no longer
      considered valid.
      </para>
		</remarks>
		<example>
			<codelink SampleID="X509Certificate.GetExpirationDateString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.GetHashCode">
		<summary>
			<para>Returns the hash code for the X.509v3 certificate as an integer.</para>
		</summary>
		<returns>
			<para>The hash code for the X.509 certificate as an integer.</para>
		</returns>
		<remarks>
			<para> If the X.509 certificate hash is an array of more than 4 bytes, any
      byte after the fourth byte is not seen in this integer representation.</para>
		</remarks>
		<example>
			<codelink SampleID="X509Certificate.GetHashCode Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.ToString1">
		<summary>
			<para> Returns a string representation of the
      current <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/>
      object, with extra information, if specified.
      </para>
		</summary>
		<param name="fVerbose"><see langword="true"/> to produce the verbose form of the string representation; otherwise, <see langword="false"/>.</param>
		<returns>
			<para> A string representation of the current <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/>
object.</para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.ToString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate">
		<summary>
			<para> Defines the common language runtime implementation of an X.509
      v.3 certificate.</para>
		</summary>
		<remarks>
			<para>ASN.1 DER is the only certificate format supported by this class.</para>
		</remarks>
		<example>
			<codelink SampleID="X509Certificate.ToString Method" SnippetID="1"/>
		</example>
	</doc>
	<doc for="X509Certificate.Equals">
		<overload>
			<para>Compares two objects for equality.</para>
		</overload>
		<summary>
			<para>Compares two <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/>
objects for equality.</para>
		</summary>
		<param name="other">An <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> object to compare to the current object.</param>
		<returns>
			<para><see langword="true"/> if the current <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> object is
   equal to the object specified by the <paramref name="other"/> parameter; otherwise,
<see langword="false"/>.</para>
		</returns>
		<example>
			<codelink SampleID="X509Certificate.Equals Method" SnippetID="1"/>
		</example>
	</doc>
</docs>
