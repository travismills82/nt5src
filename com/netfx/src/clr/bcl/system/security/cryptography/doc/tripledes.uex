<docs>
	<doc for="TripleDES">
		<summary>
			<para>Represents the base class for Triple Data Encryption
      Standard algorithms from which all <see cref="System.Security.Cryptography.TripleDES"/>
      implementations must derive.</para>
		</summary>
		<remarks>
			<para><see cref="System.Security.Cryptography.TripleDES"/> uses three successive iterations of
   the <see cref="System.Security.Cryptography.DES"/>
   algorithm. It
   can use either two or three 56-bit
   keys.</para>
		</remarks>
		<example>
			<para>The following example method uses <see cref="System.Security.Cryptography.TripleDESCryptoServiceProvider"/> with the specified <see cref="System.Security.Cryptography.SymmetricAlgorithm.Key"/> and
   initialization vector (<see cref="System.Security.Cryptography.SymmetricAlgorithm.IV"/>) to encrypt a file specified by <c>inName</c>,
and outputs the encrypted
result to the file specified by <c>outName</c>.</para>
			<codelink SampleID="Classic TripleDESCryptoServiceProvider Example" SnippetID="1"/>
			<para>Decryption can be handled in the same way; use <see cref="System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor"/> instead of <see cref="System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor"/>. The same
<see cref="System.Security.Cryptography.SymmetricAlgorithm.Key"/> and <see cref="System.Security.Cryptography.SymmetricAlgorithm.IV"/> used to encrypt
the file must be used to decrypt.</para>
		</example>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="TripleDES.TripleDES">
		<summary>
			<para>Initializes a new instance of <see cref="System.Security.Cryptography.TripleDES"/>.</para>
		</summary>
		<remarks>
			<para>You cannot create an instance of an abstract class. Application code will create
      a new instance of a derived class.</para>
			<para> This method initializes the protected fields
      of <see cref="System.Security.Cryptography.SymmetricAlgorithm"/> to the
      default values
      listed in
      the following table.</para>
			<list type="table"><listheader>
					<term>Field</term>
					<description>Default Value</description>
				</listheader>
				<item>
					<term><see cref="System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue"/></term>
					<description>192</description>
				</item>
				<item>
					<term><see cref="System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue"/></term>
					<description>64</description>
				</item>
				<item>
					<term><see cref="System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue"/></term>
					<description>64</description>
				</item>
			</list>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="TripleDES.Key">
		<summary>
			<para>Gets or sets the secret key for the <see cref="System.Security.Cryptography.TripleDES"/> algorithm.</para>
		</summary>
		<value>
			<para>The secret key for the <see cref="System.Security.Cryptography.TripleDES"/> algorithm.</para>
		</value>
		<exception cref="System.ArgumentNullException">An attempt is made to set the key to <see langword="null"/>.</exception>
		<exception cref="System.Security.Cryptography.CryptographicException"><para>An attempt is made to set a key whose length is invalid.</para>
			<para>-or-</para>
			<para>An attempt is made to set a weak key (see <see cref="System.Security.Cryptography.TripleDES.IsWeakKey"/>).</para></exception>
		<remarks>
			<para>The length of the key must be either 128 or 192 bits.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="TripleDES.Create">
		<overload>
			<para>Creates an instance of a cryptographic object to perform the <see cref="System.Security.Cryptography.TripleDES"/> algorithm.</para>
		</overload>
		<summary>
			<para> Creates an instance of a cryptographic object to perform
      the <see cref="System.Security.Cryptography.TripleDES"/> algorithm.
      </para>
		</summary>
		<returns>
			<para> An instance of a cryptographic object.
      </para>
		</returns>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="TripleDES.Create1">
		<summary>
			<para> Creates an instance of a cryptographic object to perform
      the specified implementation of the <see cref="System.Security.Cryptography.TripleDES"/>
      algorithm.
      </para>
		</summary>
		<param name="str">The name of the specific implementation of <see cref="System.Security.Cryptography.TripleDES"/> to use.</param>
		<returns>
			<para> An instance of a cryptographic object.
      </para>
		</returns>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="TripleDES.IsWeakKey">
		<summary>
			<para>Determines whether the specified key is weak.</para>
		</summary>
		<param name="rgbKey">The secret key to be tested for weakness.</param>
		<returns>
			<para><see langword="true"/> if the key is weak; otherwise,
<see langword="false"/>.</para>
		</returns>
		<exception cref="System.Security.Cryptography.CryptographicException">The size of the <paramref name="rgbKey"/> parameter is not valid.</exception>
		<remarks>
			<para> Weak keys are keys that result in ciphers that
      are easy to break. If text is encrypted with a weak key, encrypting the
      resulting cipher again with the same weak key returns the original text. In 128-bit mode
      if the first 64 bits are the same as the last 64 bits, the key is weak. In 192-bit mode if the first 64 bits
      are the same as the second 64 bits, or if the second 64 bits are
      the same as the last 64 bits, the key is weak.</para>
			<para>An attempt to set a weak key will result in a <see cref="System.Security.Cryptography.CryptographicException"/>. When <see cref="System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey"/> is called to create a random key,
   a weak key will never be returned.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
</docs>
