<docs>
	<doc for="HMACSHA1">
		<summary>
			<para> Computes a Hash-based Message Authentication Code
      (HMAC) using the <see cref="System.Security.Cryptography.SHA1"/> hash
      function.</para>
		</summary>
		<remarks>
			<para>An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with,
      provided that the sender and receiver share a secret key. The sender computes
      the HMAC for the original data and sends both the original data and HMAC
      as a single message. The receiver recomputes the HMAC on the received message
      and checks that the computed HMAC matches the transmitted HMAC.</para>
			<para>Any change to the data or the HMAC will result in a mismatch, because knowledge
      of the secret key is required to change the message and reproduce the correct
      HMAC. Therefore, if the codes match, the message is authenticated.</para>
			<para><see cref="System.Security.Cryptography.HMACSHA1"/> accepts keys of any size, and
   produces a hash sequence of length 20 bytes.</para>
		</remarks>
		<example>
			<para>The following example computes the HMAC for <c>data</c> using the <see cref="System.Security.Cryptography.SHA1"/> hash algorithm and stores it in
<c>result</c>. This
example assumes that there are predefined constants <c>DATA_SIZE</c> and <c>KEY_SIZE</c>.</para>
			<codelink SampleID="Classic HMACSHA1 Example" SnippetID="1"/>
		</example>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.HMACSHA1">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.HMACSHA1"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.HMACSHA1"/> class
   with a randomly generated key.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.HMACSHA11">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Cryptography.HMACSHA1"/>
class with the specified key data.</para>
		</summary>
		<param name="rgbKey">The secret key for <see cref="System.Security.Cryptography.HMACSHA1"/> encryption.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="rgbKey"/> parameter is <see langword="null"/>.</exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.Finalize">
		<summary>
			<para>Releases the unmanaged resources used by the <see cref="System.Security.Cryptography.HMACSHA1"/>.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.Key">
		<summary>
			<para>Gets or sets the key to be used in the hash algorithm.</para>
		</summary>
		<value>
			<para>The key to be used in the hash algorithm.</para>
		</value>
		<exception cref="System.Security.Cryptography.CryptographicException">An attempt is made to change the key after hashing has begun.</exception>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.HashName">
		<summary>
			<para>Gets or sets the name of the <see cref="System.Security.Cryptography.SHA1"/> implementation to use for the Hash-based Message Authentication Code (HMAC)
   computation.</para>
		</summary>
		<value>
			<para>The name of the <see cref="System.Security.Cryptography.SHA1"/> implementation to use to compute the HMAC.</para>
		</value>
		<remarks>
			<para>This property allows users to use their own <see cref="System.Security.Cryptography.SHA1"/> implementations to compute the
   HMAC.</para>
			<note type="note">
   Setting this property is only effective if
   done before the
   first data bytes are written.
   If it is not set, the default implementation is used.
</note>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.Initialize">
		<summary>
			<para>Initializes an instance of <see cref="System.Security.Cryptography.HMACSHA1"/>.</para>
		</summary>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.HashCore">
		<summary>
			<para>Routes data written to the object into the <see cref="System.Security.Cryptography.SHA1"/> hash algorithm for computing the
   Hash-based Message Authentication Code
   (HMAC).</para>
		</summary>
		<param name="rgb">The input data.</param>
		<param name="ib">The offset into the byte array from which to begin using data.</param>
		<param name="cb">The number of bytes in the array to use as data</param>
		<seealso cref="System.Security.Cryptography.HashAlgorithm"/>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.HashFinal">
		<summary>
			<para> Returns the computed Hash-based Message Authentication Code (HMAC) after all data has
      been written to the object.</para>
		</summary>
		<returns>
			<para> The computed HMAC.</para>
		</returns>
		<remarks>
			<para>You can only read this value after all data has been
      written, and you cannot write more data afterward. Create a new instance
      of <see cref="System.Security.Cryptography.HMACSHA1"/>
      for each
      separate segment of data to compute the HMAC for that data.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
	<doc for="HMACSHA1.Dispose">
		<summary>
			<para> Releases the unmanaged resources used by
      the <see cref="System.Security.Cryptography.HMACSHA1"/> and optionally releases the
      managed resources.</para>
		</summary>
		<param name="disposing"><see langword="true"/> to release both managed and unmanaged resources; <see langword="false"/> to release only unmanaged resources.</param>
		<remarks>
			<para>This method is called by the
      public <see langword="Dispose()"/> method and the <see langword="Finalize"/>
      method. <see langword="Dispose()"/> invokes the protected
   <see langword="Dispose(Boolean)"/> method with the disposing parameter set to
   <see langword="true"/>. <see langword="Finalize"/> invokes
   <see langword="Dispose"/> with disposing set to <see langword="false"/>.</para>
			<para>When the <paramref name="disposing"/> parameter is
<see langword="true"/>, this method releases all resources held by any managed 
   objects that this <see cref="System.Security.Cryptography.HMACSHA1"/> references. This
   method invokes the <see langword="Dispose()"/> method of each referenced object.</para>
			<note type="inheritinfo">
				<see langword="Dispose"/> can be called multiple times by other objects. When
   overriding <see langword="Dispose(Boolean)"/>, be careful not to reference
   objects that have been previously disposed in an earlier call to
<see langword="Dispose"/>. For more information about how to implement 
<see langword="Dispose(Boolean)"/>, see <see topic="cpconImplementingDisposeMethod"/>. 
</note>
			<para>For more information about <see langword="Dispose"/> and
<see langword="Finalize"/>, see <see topic="cpconCleaningUpUnmanagedResources"/> and <see topic="cpconOverridingFinalizeMethod"/>.</para>
		</remarks>
		<seealso topic="cpconcryptographicservices"/>
	</doc>
</docs>
