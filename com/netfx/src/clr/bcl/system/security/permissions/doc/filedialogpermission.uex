<docs>
	<doc for="FileDialogPermissionAccess.None">
		<summary>
			<para>No access to files through the file dialog.</para>
		</summary>
	</doc><doc for="FileDialogPermissionAccess.Open">
		<summary>
   Ability to open files through the file dialog.
</summary>
	</doc><doc for="FileDialogPermissionAccess.OpenSave">
		<summary>
			<para>Ability to open and save files through the file dialog.</para>
		</summary>
	</doc><doc for="FileDialogPermissionAccess.Save">
		<summary>
			<para>Ability to save files through the file dialog.</para>
		</summary>
	</doc><doc for="FileDialogPermission.IBuiltInPermission.GetTokenIndex">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="FileDialogPermission.IsUnrestricted">
		<summary>
			<para> Returns a value indicating
      whether the current permission is unrestricted.</para>
		</summary>
		<returns>
			<para><see langword="true"/> if
   the current permission is unrestricted;
   otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para> An unrestricted permission represents access to
      all resources protected by the permission.</para>
		</remarks>
	</doc><doc for="FileDialogPermission">
		<summary>
			<para>Controls the ability to access files or folders through a file dialog. This
      class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>This permission is typically used to provide limited access to user-specified
      files when <see cref="System.Security.Permissions.FileIOPermission"/> is not granted.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="1"/>
		</example>
		<seealso topic="cpconpermissions"/>
		<seealso topic="cpconrequestingpermissions"/>
		<seealso cref="System.Security.Permissions.FileDialogPermissionAttribute"/>
		<seealso cref="System.Security.Permissions.FileDialogPermissionAccess"/>
	</doc>
	<doc for="FileDialogPermission.FileDialogPermission">
		<overload>
			<para>Initializes a new instance of the <see cref="System.Security.Permissions.FileDialogPermission"/> class.</para>
		</overload>
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Permissions.FileDialogPermission"/> class
   with either restricted or unrestricted permission as specified.</para>
		</summary>
		<param name="state">One of the <see cref="System.Security.Permissions.PermissionState"/>values.</param>
		<exception cref="System.ArgumentException">The <paramref name="state"/> parameter is not a valid value of <see cref="System.Security.Permissions.PermissionState"/>.</exception>
		<remarks>
			<para> Creates either fully restricted
      (<see langword="None"/>) or <see langword="Unrestricted"/> access to file
      dialogs.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="8"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.FileDialogPermission1">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Permissions.FileDialogPermission"/> class with the specified access.</para>
		</summary>
		<param name="access">A bitwise combination of the <see cref="System.Security.Permissions.FileDialogPermissionAccess"/> values.</param>
		<exception cref="System.ArgumentException">The <paramref name="access"/> parameter is not a valid combination of the <see cref="System.Security.Permissions.FileDialogPermissionAccess"/> values.</exception>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="8"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.Access">
		<summary>
			<para>Gets or sets the permitted access to files.</para>
		</summary>
		<value>
			<para>The permitted access to files.</para>
		</value>
		<exception cref="System.ArgumentException">An attempt is made to set the <paramref name="access"/> parameter to a value that is not a valid combination of the <see cref="System.Security.Permissions.FileDialogPermissionAccess"/> values.</exception>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="2"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.Copy">
		<summary>
			<para> Creates and returns an identical copy of the current
      permission.</para>
		</summary>
		<returns>
			<para> A copy of the current permission.</para>
		</returns>
		<remarks>
			<para> A copy of the permission represents the same access to resources
      as the original permission.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="5"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.FromXml">
		<summary>
			<para> Reconstructs a permission with a specified state from an XML
      encoding.</para>
		</summary>
		<param name="esd">The XML encoding used to reconstruct the permission.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="esd"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>The <paramref name="esd"/> parameter is not a valid permission element.</para>
			<para>-or-</para>
			<para>The version number of the <paramref name="esd"/> parameter is not supported.</para></exception>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="6"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.Intersect">
		<summary>
			<para> Creates and returns a permission that is the intersection
      of the current permission and the specified permission.</para>
		</summary>
		<param name="target"> A permission to intersect with the current permission. It must be the same type as the current permission.</param>
		<returns>
			<para> A new permission that
      represents the intersection of the current permission and the specified permission. This
      new permission is <see langword="null"/>
      if the intersection is empty.</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="target"/> parameter is not <see langword="null"/> and is not of the same type as the current permission.</exception>
		<remarks>
			<para> The intersection
      of two permissions is a permission that describes the set of operations they both describe in common. Only a
      demand that passes both original permissions will pass the intersection.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="4"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.IsSubsetOf">
		<summary>
			<para> Determines whether the current permission is a subset of
      the specified permission.</para>
		</summary>
		<param name="target">A permission that is to be tested for the subset relationship. This permission must be the same type as the current permission.</param>
		<returns>
			<para><see langword="true"/> if the current permission
   is a subset of the specified permission; otherwise,<see langword=" false"/>.</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="target"/> parameter is not <see langword="null"/> and is not of the same type as the current permission.</exception>
		<remarks>
			<para> The current permission is a
      subset of the specified permission if the current permission specifies a set
      of operations that is wholly contained by the specified permission. For
      example, a permission for <see cref="System.Security.Permissions.FileDialogPermissionAccess.Open"/> access is a subset of a permission
      for <see cref="System.Security.Permissions.FileDialogPermissionAccess.OpenSave"/>
      access.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="2"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.ToString">
		<summary>
			<para> Creates a string representation of the current permission.</para>
		</summary>
		<returns>
			<para> A string representation of the
      current permission.</para>
		</returns>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="6"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.ToXml">
		<summary>
			<para> Creates an XML encoding of the permission and its current
      state.</para>
		</summary>
		<returns>
			<para> An XML encoding of the permission, including state
      information.</para>
		</returns>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="6"/>
		</example>
	</doc>
	<doc for="FileDialogPermission.Union">
		<summary>
			<para> Creates a permission that is the union of the
      current permission and the specified permission.</para>
		</summary>
		<param name="target">A permission to combine with the current permission. It must be of the same type as the current permission.</param>
		<returns>
			<para> A new permission that represents the union of the
      current permission and the specified permission.</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="target "/>parameter is not <see langword="null"/> and is not of the same type as the current permission.</exception>
		<remarks>
			<para>The result of a call to <see cref="System.Security.Permissions.FileDialogPermission.Union"/>
is a
permission that represents all operations represented by both the current permission
and the specified permission. Any demand that passes either permission passes
their union.</para>
		</remarks>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermission" SnippetID="3"/>
		</example>
	</doc>
	<doc for="FileDialogPermissionAccess">
		<summary>
			<para>Specifies the type of access to files allowed through the file
      dialog.</para>
		</summary>
		<example>
			<codelink SampleID="System.Security.Permissions.FileDialogPermissionAccess" SnippetID="1"/>
		</example>
		<seealso cref="System.Security.Permissions.FileDialogPermission"/>
		<seealso cref="System.Security.Permissions.FileDialogPermissionAttribute"/>
	</doc>
</docs>
