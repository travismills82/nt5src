<docs>
	<doc for="PermissionState.Unrestricted">
		<summary>
			<para> Full access to the resource protected by the permission.</para>
		</summary>
	</doc><doc for="PermissionState.None">
		<summary>
			<para> No access to
      the resource protected by the permission.</para>
		</summary>
	</doc><doc for="PermissionState">
		<summary>
			<para> Specifies whether a permission should have
      all or no access to resources at creation.</para>
		</summary>
		<remarks>
			<para> Permissions can
      be created in either a totally restrictive or totally unrestrictive state. A totally
      restrictive state allows no access to resources; a totally unrestricted state allows all
      access to a particular resource. For example, the file permission
      constructor could create an object representing either no access to any
      files or all access to all files.</para>
			<para> Each type
      of permission clearly defines extreme states representing either all or none of
      the permissions expressible within the type. Thus, it is possible to create a
      generic permission in a completely restricted or unrestricted state without
      knowledge of the particular permission; however, intermediate states can only be
      set according to the specific permission semantics.</para>
			<para>All code access permissions implemented in the .NET Framework can take a <see cref="System.Security.Permissions.PermissionState"/> value as an
   argument to their constructor.</para>
		</remarks>
	</doc></docs>
