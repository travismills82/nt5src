<docs>
	<doc for="SiteMembershipCondition.ToXml">
		<overload>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</overload>
		<summary>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</summary>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="SiteMembershipCondition.FromXml">
		<overload>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</overload>
		<summary>
			<para> Reconstructs a security object with a specified state from an XML encoding.
      </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
	</doc><doc for="SiteMembershipCondition.GetHashCode">
		<summary>
			<para>Gets the hash code for the current membership condition.</para>
		</summary>
		<returns>
			<para>The hash code for the current membership condition.</para>
		</returns>
	</doc><doc for="SiteMembershipCondition.Equals">
		<summary>
			<para> Determines whether the site from the specified 
 <see cref="System.Security.Policy.SiteMembershipCondition"/> 
 object is equivalent to the site contained in the
 current <see cref="System.Security.Policy.SiteMembershipCondition"/>.</para>
		</summary>
		<param name="o">The <see cref="System.Security.Policy.SiteMembershipCondition"/> object to compare to the current <see cref="System.Security.Policy.SiteMembershipCondition"/>.</param>
		<returns>
			<para><see langword="true"/> if the site 
 from the specified <see cref="System.Security.Policy.SiteMembershipCondition"/>
 object is equivalent
 to the site contained in the current <see cref="System.Security.Policy.SiteMembershipCondition"/>; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SiteMembershipCondition.Site">
		<summary>
			<para> Gets or sets the site for which the membership condition tests.
 </para>
		</summary>
		<value>
			<para> The site for which the membership condition tests.
 </para>
		</value>
		<exception cref="System.ArgumentNullException">An attempt is made to set <see cref="System.Security.Policy.SiteMembershipCondition.Site"/> to <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException">An attempt is made to set <see cref="System.Security.Policy.SiteMembershipCondition.Site"/> to an invalid <see cref="System.Security.Policy.Site"/>.</exception>
		<remarks>
			<para>This property is matched against the site from which a code assembly
 originates to test the membership condition.</para>
		</remarks>
	</doc><doc for="SiteMembershipCondition.SiteMembershipCondition">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.SiteMembershipCondition"/> class with 
 name of the site that determines
 membership.
 </para>
		</summary>
		<param name="site">The site name or wildcard expression. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="site"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException">The <paramref name="site"/> parameter is not a valid <see cref="System.Security.Policy.Site"/>.</exception>
		<remarks>
			<para>Code satisfies this membership condition if it is
 downloaded from a site whose DNS name matches the site specified by <see cref="System.Security.Policy.SiteMembershipCondition.Site"/>.</para>
		</remarks>
	</doc><doc for="SiteMembershipCondition.FromXml1">
		<summary>
			<para> Reconstructs a security object with a specified state from an XML
 encoding.
 </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
		<param name="level">The <see cref="System.Security.Policy.PolicyLevel"/> context, used to resolve <see cref="System.Security.NamedPermissionSet"/> references. </param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="e"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The <paramref name="e"/> parameter is not a valid membership condition element.</exception>
	</doc><doc for="SiteMembershipCondition.ToXml1">
		<summary>
			<para> Creates an XML encoding of the security object and its
 current state with the specified <see cref="System.Security.Policy.PolicyLevel"/>.
 </para>
		</summary>
		<param name="level">The <see cref="System.Security.Policy.PolicyLevel"/> context, used to resolve <see cref="System.Security.NamedPermissionSet"/> references. </param>
		<returns>
			<para> An XML encoding of the security object, including any state
 information.
 </para>
		</returns>
	</doc><doc for="SiteMembershipCondition.ToString">
		<summary>
			<para> Creates and returns a string representation of the membership condition.
 </para>
		</summary>
		<returns>
			<para> A string representation of the
 membership condition.
 </para>
		</returns>
	</doc><doc for="SiteMembershipCondition">
		<summary>
			<para> Determines whether an assembly belongs to a code group
      by testing the site from which it originated. This class
      cannot be
      inherited.
      </para>
		</summary>
		<remarks>
			<para> A code assembly satisfies a site membership condition if
      that code originates from the Web site specified by <see cref="System.Security.Policy.SiteMembershipCondition.Site"/> . Site identity
      is
      defined for code from URLs with any protocol except FILE. A site is the string
      between the "//" after the protocol of a URL and the following "/", if present. For
      example, www.fourthcoffee.com is the site identity in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If
      a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not
      www.fourthcoffee.com:8000.
      </para>
			<para> Sites can be matched exactly, or by a wildcard ("*") prefix at
      the dot delimiter. For example, the site name *.fourthcoffee.com
      matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the
      site name must be a precise match. The site name * will match any site, but
      will not match code that has no site evidence. </para>
		</remarks>
	</doc><doc for="SiteMembershipCondition.Check">
		<summary>
			<para> Determines whether the
      specified evidence satisfies the membership condition.
      </para>
		</summary>
		<param name="evidence">The <see cref="System.Security.Policy.Evidence"/> against which to make the test. </param>
		<returns>
			<para><see langword="true"/> if the specified evidence
   satisfies the membership condition; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<remarks>
			<para> This membership condition tests only <see cref="System.Security.Policy.Site"/>
evidence.</para>
		</remarks>
	</doc><doc for="SiteMembershipCondition.Copy">
		<summary>
			<para> Creates an equivalent copy of the membership condition.
      </para>
		</summary>
		<returns>
			<para> A new, identical copy of the current membership condition.
      </para>
		</returns>
	</doc></docs>
