<docs>
	<doc for="FirstMatchCodeGroup.Copy">
		<summary>
			<para> Makes a deep copy of the code group.
      </para>
		</summary>
		<returns>
			<para> An equivalent copy of the code group, including its membership conditions and
      child code groups.
      </para>
		</returns>
		<remarks>
			<para> This method makes a deep copy of the code group, meaning that copies of all objects it
      contains are made, as well.
      </para>
		</remarks>
	</doc><doc for="FirstMatchCodeGroup.FirstMatchCodeGroup">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.FirstMatchCodeGroup"/> class.
   </para>
		</summary>
		<param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies policy. </param>
		<param name=" policy">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition. </param>
		<exception cref="System.ArgumentException">The type of the <paramref name="membershipCondition"/> parameter is not valid. <para>-or-</para>
			<para>The type of the <paramref name="policy"/> parameter is not valid.</para></exception>
		<remarks>
			<para> This constructor creates a basic code group and should be
      called from the constructors of custom code groups. Child code groups can be
      added using the <see cref="System.Security.Policy.CodeGroup.AddChild"/>
      method.
      </para>
		</remarks>
	</doc><doc for="FirstMatchCodeGroup.MergeLogic">
		<summary>
			<para>Gets the merge logic.</para>
		</summary>
		<value>
			<para> The string "First Match".</para>
		</value>
	</doc><doc for="FirstMatchCodeGroup">
		<summary>
			<para> Allows security policy to be defined by the union
 of the policy statement of a code group and that of the first child code
 group that matches. This class cannot be
 inherited.
 </para>
		</summary>
		<remarks>
			<para> Code groups are the building blocks of code access
 security policy. Each policy level consists of a root code group that can have child code groups. Each child
 code group can have their own child code groups; this behavior extends to any number
 of levels, forming a tree. Each code group has a membership condition that determines
 if a given assembly belongs to it based on the evidence for that assembly. Only
 code groups whose membership conditions match a given assembly and their
 child code groups apply policy.
 </para>
			<para> Like any code group, <see cref="System.Security.Policy.FirstMatchCodeGroup"/> only applies
 when its membership condition matches evidence for an assembly. If there is a
 match, it tests the membership condition of each child in order, stopping when
 the first match occurs. The result of <see cref="System.Security.Policy.FirstMatchCodeGroup"/> is the union of the policy statement of
 the root code group and the policy statement of the first child group of
 
 that code group that matches.
 </para>
			<para><see cref="System.Security.Policy.FirstMatchCodeGroup"/>
is intended for programmatic use by application domain hosts to
set domain policy.</para>
		</remarks>
		<seealso topic="cpconcodegroups"/>
	</doc><doc for="FirstMatchCodeGroup.Resolve">
		<summary>
			<para>Resolves policy for the code group and its descendants
      for a set of evidence.</para>
		</summary>
		<param name="evidence">The evidence for the assembly. </param>
		<returns>
			<para> A policy statement consisting of the permissions granted
      by the code group with optional attributes, or <see langword="null"/>
      if the code group does not apply (the membership condition
      does not match the specified evidence).
      </para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="evidence"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.Security.Policy.PolicyException">More than one code group (including the parent code group and any child code groups) is marked <see cref="System.Security.Policy.PolicyStatementAttribute.Exclusive"/>.</exception>
		<remarks>
			<para>Given evidence for an assembly to be loaded, this method evaluates the code
      group by first checking the membership condition against the specified evidence.
      If there is a match, this method returns a policy statement for the code group,
      including evaluation of child code groups. </para>
			<para>For first-match code groups, each child code group's membership condition is tested against the evidence in the
      order in which they were added; only the first match is resolved with
      the evidence set. If there are no matches, the policy statement of the parent
      first-match code group applies. The matching child code group type determines
      how all child groups under it are applied, depending on how the <see cref="System.Security.Policy.CodeGroup.Resolve"/>
      methods of these child groups work. </para>
			<para> The .NET Framework security system uses <see cref="System.Security.Policy.CodeGroup.Resolve"/> on the policy levels to
   determine which permissions to grant to loaded code from the resulting policy
   statements and the code request on the assembly. </para>
			<para>This operation of this method is as follows: </para>
			<para> If the membership condition does not match the specified 
   evidence, return <see langword="null"/>; otherwise, set the
   permission set to be returned (P)
   equal to the code group's policy statement and continue. For each child
   code group, resolve the code group with the same evidence; if the result is
   not <see langword="null"/>,
   return that policy statement. If no child code group matched, return P (the
   parent's policy statement).
   </para>
		</remarks>
	</doc><doc for="FirstMatchCodeGroup.ResolveMatchingCodeGroups">
		<summary>
			<para>Resolves matching code groups.</para>
		</summary>
		<param name="evidence">The evidence for the assembly.</param>
		<returns>
			<para>A <see cref="System.Security.Policy.CodeGroup"/> that is the root of the tree of matching
   code groups.</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="evidence"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para> Given evidence for an assembly to be
      loaded, this method evaluates the code group by first checking the membership
      condition against the specified evidence. If there is a match, this method returns a root code group. The code group
      that is returned contains child code groups, which in turn can
      have child code groups as necessary to reflect the complete set of code groups that
      were matched by the evidence provided. </para>
			<para>For first-match code groups, each child code group's membership condition is
      tested against the evidence in the order in which they were added; only the
      first match is resolved with the evidence set. If there are no matches, the
      policy statement of the parent first-match code group applies. The matching
      child code group type determines how all child groups under it are applied,
      depending on how the <see cref="System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups"/> methods of
      these child groups work. </para>
		</remarks>
	</doc></docs>
