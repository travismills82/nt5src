<docs>
	<doc for="UnionCodeGroup.Copy">
		<summary>
			<para> Makes a deep copy of the current code group.
      </para>
		</summary>
		<returns>
			<para> An equivalent copy of the current code group, including its membership
      conditions and child code groups.
      </para>
		</returns>
		<remarks>
			<para> This method makes a deep copy of the code group, so that copies of all
      objects the code group contains are also made.
      </para>
		</remarks>
	</doc><doc for="UnionCodeGroup.UnionCodeGroup">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.UnionCodeGroup"/>
class.</para>
		</summary>
		<param name="membershipCondition">A membership condition that tests evidence to determine whether this code group applies policy. </param>
		<param name="policy">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition. </param>
		<exception cref="System.ArgumentException">The type of the <paramref name="membershipCondition"/> parameter is not valid. <para>-or-</para>
			<para>The type of the <paramref name="policy"/> parameter is not valid.</para></exception>
		<remarks>
			<para> This constructor creates a basic code group and should
 be called from the constructors of custom code groups. You can add child code
 groups using the <see cref="System.Security.Policy.CodeGroup.AddChild"/>
 method.
 </para>
		</remarks>
	</doc><doc for="UnionCodeGroup.MergeLogic">
		<summary>
			<para>Gets the merge logic.</para>
		</summary>
		<value>
			<para> Always the string "Union".</para>
		</value>
	</doc><doc for="UnionCodeGroup.ResolveMatchingCodeGroups">
		<summary>
			<para>Resolves matching code groups.</para>
		</summary>
		<param name="evidence">The evidence for the assembly.</param>
		<returns>
			<para>A <see cref="System.Security.Policy.CodeGroup"/>.</para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="evidence"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para> Given evidence for an assembly to be
      loaded, this method evaluates the code group by first checking the membership
      condition against the specified evidence. If there is a match, this method returns a root code group. The code group
      that is returned contains child code groups, which in turn can
      have child code groups as necessary to reflect the complete set of code groups that
      were matched by the evidence provided. </para>
		</remarks>
	</doc><doc for="UnionCodeGroup.Resolve">
		<summary>
			<para> Resolves policy
      for the code group and its descendants for a set of evidence.
      </para>
		</summary>
		<param name="evidence">The evidence for the assembly. </param>
		<returns>
			<para> A policy statement consisting of the permissions granted
      by the code group with optional attributes, or <see langword="null"/>
      if
      the code group does not apply (the membership condition does not match the
      specified evidence).
      </para>
		</returns>
		<exception cref="System.ArgumentNullException">The <paramref name="evidence"/> parameter is <see langword="null"/>.</exception>
		<exception cref="System.ArgumentException"><para>More than one code group (including the parent code group and any child code groups) is marked <see cref="System.Security.Policy.PolicyStatementAttribute.Exclusive"/>.</para></exception>
		<remarks>
			<para> Given evidence for an assembly to be loaded, this method
      evaluates the code group by first checking the membership condition against the
      specified evidence. If there is a match, this method returns a policy statement
      for the code group, including evaluation of child code groups.
      </para>
			<para> For union code groups, all child code groups
      whose membership condition match the evidence are also resolved and all
      resulting policy statements form a union with the policy statement of the parent
      union code group. Each child code group type determines how its child groups
      are applied, depending on how their respective <see cref="System.Security.Policy.UnionCodeGroup.Resolve"/> methods work.
      </para>
			<para> The .NET Framework security system uses <see cref="System.Security.Policy.UnionCodeGroup.Resolve"/> on the policy levels to
   determine which permissions to grant to loaded code from the resulting policy
   statements and the code request on the assembly.</para>
			<para>The operation of this method is as follows. </para>
			<para>If the membership condition does not match the specified evidence, return
<see langword="null"/>; otherwise set the 
   permission set to be returned (P) equal to the code group's policy statement
   and continue. For each child code group, resolve the code group with the
   same evidence; if the result is not <see langword="null"/>, set P = the union of
   P and the child code group's policy statement. Return P, which is now the union of
   the current code group's policy statement and all child resolves. </para>
		</remarks>
	</doc><doc for="UnionCodeGroup">
		<summary>
			<para> Represents a code group whose policy statement is the union of the current code group's policy
      statement and the policy statement of all its matching child code groups. This
      class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>Code groups are the building blocks of code access security policy. Each
      policy level consists of a root code group that can have child code groups (and
      so on), forming a tree. Each code group has a membership condition that determines
      if a given assembly belongs to it or not, based on the evidence for that
      assembly. Only code groups whose membership conditions match a given assembly
      and their child code groups apply policy. </para>
			<para><see cref="System.Security.Policy.UnionCodeGroup"/> is the most common type of
   code group; the policy statement of all matching child code groups (and by
   extension their child code groups) are combined with the permission set of the
   matching parent code group. Thus, if its membership condition matches, this code group
   forms the union of its policy statement and those of all its child code
   groups that also match the evidence. </para>
			<para><see cref="System.Security.Policy.UnionCodeGroup"/> code groups are the code groups created
by the CASPOL utility (see <see topic="cpgrfcodeaccesssecuritypolicyutilitycaspolexe"/> ) and the .NET Framework Configuration tool (see <see topic="cpconNETFrameworkAdministrationToolMscorcfgmsc"/>).</para>
		</remarks>
		<seealso topic="cpconcodegroups"/>
	</doc></docs>
