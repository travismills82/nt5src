<docs>
	<doc for="UrlMembershipCondition.ToXml">
		<overload>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</overload>
		<summary>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</summary>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="UrlMembershipCondition.FromXml">
		<overload>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</overload>
		<summary>
			<para> Reconstructs a security object with a specified state from an XML encoding.
      </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
	</doc><doc for="UrlMembershipCondition.ToXml1">
		<summary>
			<para> Creates an XML encoding of the security object and its
      current state with the specified <see cref="System.Security.Policy.PolicyLevel"/>.
      </para>
		</summary>
		<param name="level">The policy level context for resolving named permission set references. </param>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="UrlMembershipCondition.FromXml1">
		<summary>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
		<param name="level">The policy level context, used to resolve named permission set references. </param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="e"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The <paramref name="e"/> parameter is not a valid membership condition element.</exception>
	</doc><doc for="UrlMembershipCondition.ToString">
		<summary>
			<para> Creates and returns a string representation of the membership condition.
      </para>
		</summary>
		<returns>
			<para> A string representation of the state of the
      membership condition.
      </para>
		</returns>
	</doc><doc for="UrlMembershipCondition.GetHashCode">
		<summary>
			<para>Gets the hash code for the current membership condition.</para>
		</summary>
		<returns>
			<para>The hash code for the current membership condition.</para>
		</returns>
	</doc><doc for="UrlMembershipCondition.Equals">
		<summary>
			<para> Determines whether the URL from 
      the specified object is equivalent to the URL contained in the
      current <see cref="System.Security.Policy.UrlMembershipCondition"/>.</para>
		</summary>
		<param name="o">The object to compare to the current <see cref="System.Security.Policy.UrlMembershipCondition"/>.</param>
		<returns>
			<para><see langword="true"/> if 
   the URL from the specified object is equivalent
   to the URL contained in the current <see cref="System.Security.Policy.UrlMembershipCondition"/>; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="UrlMembershipCondition">
		<summary>
			<para>Determines whether an assembly belongs to a code group by testing its URL. This
      class cannot be inherited.</para>
		</summary>
		<remarks>
			<para>The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and
      the file. For example, http://www.fourthcoffee.com/process/grind.htm is a
      complete URL.</para>
			<para>URLs can be matched exactly or by a wildcard in the final position. For
      example, http://www.fourthcoffee.com/process/* is a wildcard URL.</para>
		</remarks>
	</doc><doc for="UrlMembershipCondition.UrlMembershipCondition">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.UrlMembershipCondition"/> class with the URL that determines membership.
   </para>
		</summary>
		<param name="url">The URL for which to test. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="url"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para>The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and
      the file, for example: http://www.fourthcoffee.com/process/grind.htm.</para>
			<para>URLs can be matched exactly or by a wildcard in the final position, for
      example: http://www.fourthcoffee.com/process/*.</para>
		</remarks>
	</doc><doc for="UrlMembershipCondition.Url">
		<summary>
			<para> Gets or sets the URL for which the membership condition tests.
      </para>
		</summary>
		<value>
			<para> The URL for which the membership condition tests.
      </para>
		</value>
		<remarks>
			<para>The complete URL is considered, including the protocol (HTTP, HTTPS, FTP) and
      the file. For example, http://www.fourthcoffee.com/process/grind.htm is a
      complete URL.</para>
			<para>URLs can be matched exactly or by a wildcard in the final position. For
      example, http://www.fourthcoffee.com/process/* is a wildcard URL.</para>
		</remarks>
	</doc><doc for="UrlMembershipCondition.Check">
		<summary>
			<para> Determines whether the specified evidence satisfies the membership condition.
      </para>
		</summary>
		<param name="evidence">The evidence set against which to make the test. </param>
		<returns>
			<para><see langword="true"/> if the specified evidence satisfies
   the membership condition; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<remarks>
			<para> This membership condition tests only the <see cref="System.Security.Policy.Url"/> evidence
   object.
   </para>
		</remarks>
	</doc><doc for="UrlMembershipCondition.Copy">
		<summary>
			<para> Creates an equivalent copy of the membership condition.
      </para>
		</summary>
		<returns>
			<para> A new, identical copy of the current membership condition.
      </para>
		</returns>
	</doc></docs>
