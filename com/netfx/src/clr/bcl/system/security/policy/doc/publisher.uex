<docs>
	<doc for="Publisher.ToXml">
		<summary>
			<para>
       Creates an XML encoding, of the security object and its current
       state.
    </para>
		</summary>
		<returns>
			<para>
       An XML encoding of the security object, including any state
       information.
    </para>
		</returns>
		<remarks>
			<para>
       Custom code that extends
       security objects will need to implement the ToXML and FromXML methods to make
       the objects security-encodable.
    </para>
		</remarks>
	</doc>
	<doc for="Publisher.Equals">
		<summary>
			<para>Compares the current <see cref="System.Security.Policy.Publisher"/> to the specified object for equivalence.</para>
		</summary>
		<param name="o">The <see cref="System.Security.Policy.Publisher"/> to test for equivalence with the current object. </param>
		<returns>
			<para><see langword="true"/> if the two 
 instances of the <see cref="System.Security.Policy.Publisher"/> class are equal; otherwise,
<see langword="false"/>.</para>
		</returns>
		<exception cref="System.ArgumentException">The <paramref name="o"/> parameter is not a <see cref="System.Security.Policy.Publisher"/> object.</exception>
		<remarks>
			<para><see cref="System.Security.Policy.Publisher"/>
objects are equal if they designate the same software publisher certificate.</para>
		</remarks>
	</doc><doc for="Publisher.ToString">
		<summary>
			<para> Returns a string representation of the current <see cref="System.Security.Policy.Publisher"/>.
 </para>
		</summary>
		<returns>
			<para> A representation of the current <see cref="System.Security.Policy.Publisher"/>.
 </para>
		</returns>
	</doc><doc for="Publisher.IBuiltInEvidence.OutputToBuffer">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Publisher.IBuiltInEvidence.GetRequiredSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Publisher.IBuiltInEvidence.InitFromBuffer">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Publisher.CreateIdentityPermission">
		<summary>
			<para> Creates an identity permission that corresponds to the
      current instance of the <see cref="System.Security.Policy.Publisher"/>
      class.
      </para>
		</summary>
		<param name="evidence">The <see cref="System.Security.Policy.Evidence"/> from which to construct the identity permission.</param>
		<returns>
			<para> A <see cref="System.Security.Permissions.PublisherIdentityPermission"/> for the specified
<see cref="System.Security.Policy.Publisher"/>.
   </para>
		</returns>
	</doc><doc for="Publisher.Copy">
		<summary>
			<para> Creates an equivalent copy of the <see cref="System.Security.Policy.Publisher"/>.
   </para>
		</summary>
		<returns>
			<para> A new, identical copy of the <see cref="System.Security.Policy.Publisher"/>.
   </para>
		</returns>
	</doc><doc for="Publisher.char">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Publisher.char1">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="Publisher">
		<summary>
			<para> Provides the Authenticode X.509v3 digital signature
      of a code assembly as evidence for policy evaluation. This class cannot
      be inherited.
      </para>
		</summary>
		<remarks>
			<para>The presence of <see cref="System.Security.Policy.Publisher"/> evidence produces a <see cref="System.Security.Permissions.PublisherIdentityPermission"/> in the grant set. If there is
   a <see cref="System.Security.CodeAccessPermission.Demand"/> for <see cref="System.Security.Permissions.PublisherIdentityPermission"/>, the <see cref="System.Security.Permissions.PublisherIdentityPermission"/> that corresponds to the <see cref="System.Security.Policy.Publisher"/> evidence will be compared with the
   demanded permission.</para>
			<para> Publisher evidence is based on Authenticode
   X.509v3 signatures.</para>
		</remarks>
		<seealso cref="System.Security.Cryptography.X509Certificates.X509Certificate"/>
	</doc><doc for="Publisher.Publisher">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.Publisher"/> class with the Authenticode X.509v3 certificate containing the publisher's public
   key.
   </para>
		</summary>
		<param name="cert">An <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> that contains the software publisher's public key. </param>
		<exception cref="System.ArgumentNullException">The <paramref name="cert"/> parameter is <see langword="null"/>.</exception>
	</doc><doc for="Publisher.Certificate">
		<summary>
			<para> Gets the publisher's Authenticode X.509v3
      certificate.
      </para>
		</summary>
		<value>
			<para> The publisher's <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/>.</para>
		</value>
	</doc><doc for="Publisher.GetHashCode">
		<summary>
			<para>Gets the hash code of the current <see cref="System.Security.Policy.Publisher.Certificate"/>.</para>
		</summary>
		<returns>
			<para>The hash code of the current <see cref="System.Security.Policy.Publisher.Certificate"/>.</para>
		</returns>
	</doc></docs>
