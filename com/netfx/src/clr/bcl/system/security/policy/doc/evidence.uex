<docs>
	<doc for="Evidence.Evidence">
		<overload>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.Evidence"/> 
class.
</para>
		</overload>
		<summary>
			<para> Initializes a new empty instance of the <see cref="System.Security.Policy.Evidence"/> class.
   </para>
		</summary>
	</doc><doc for="Evidence.CopyTo">
		<summary>
			<para> Copies evidence objects to an <see cref="System.Array"/>.
   </para>
		</summary>
		<param name="array">The target array to which to copy evidence objects. </param>
		<param name="index">The zero-based position in the array to which to begin copying evidence objects. </param>
	</doc><doc for="Evidence.Count">
		<summary>
			<para> Gets the number of evidence objects in the evidence set.
      </para>
		</summary>
		<value>
			<para> The number of evidence objects in the evidence set.
      </para>
		</value>
	</doc><doc for="Evidence.SyncRoot">
		<summary>
			<para> Gets the synchronization root.
      </para>
		</summary>
		<value>
			<para> Always <see langword="this"/> because synchronization of evidence sets is not
   supported.
   </para>
		</value>
		<remarks>
			<para> This property is not normally used by application code.
      </para>
		</remarks>
	</doc><doc for="Evidence.Evidence2">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Policy.Evidence"/>
class from multiple sets of host and assembly evidence.</para>
		</summary>
		<param name="hostEvidence">The host evidence from which to create the new instance.</param>
		<param name=" assemblyEvidence">The assembly evidence from which to create the new instance.</param>
	</doc><doc for="Evidence.IsReadOnly">
		<summary>
			<para> Gets a value indicating whether the evidence set is read-only.
      </para>
		</summary>
		<value>
			<para> Always <see langword="false"/> because read-only evidence sets are not supported.
   </para>
		</value>
		<remarks>
			<para> Application code does not normally use this property. </para>
		</remarks>
	</doc><doc for="Evidence.AddAssembly">
		<summary>
			<para> Adds the specified assembly evidence to the evidence set.
      </para>
		</summary>
		<param name="id">Any evidence object. </param>
		<remarks>
			<para> Use this method for evidence derived from the assembly.
      </para>
			<note type="note">
      This method does not perform a
      check to prevent adding duplicate types of evidence. Many assembly
      evidence objects can exist at the same time.
      
   </note>
		</remarks>
	</doc><doc for="Evidence.Evidence1">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.Evidence"/> class from a shallow copy of an existing one.
 </para>
		</summary>
		<param name="evidence">The <see cref="System.Security.Policy.Evidence"/> instance from which to create the new instance. This instance is not deep copied. </param>
		<exception cref="System.ArgumentException">The <paramref name="evidence"/> parameter is not a valid instance of <see cref="System.Security.Policy.Evidence"/>.</exception>
	</doc><doc for="Evidence.Merge">
		<summary>
			<para> Merges the specified evidence set into the current evidence set.
 </para>
		</summary>
		<param name="evidence">The evidence set to be merged into the current evidence set. </param>
		<exception cref="System.ArgumentException">The <paramref name="evidence"/> parameter is not a valid instance of <see cref="System.Security.Policy.Evidence"/>.</exception>
		<exception cref="System.Security.SecurityException"><see cref="System.Security.Policy.Evidence.Locked"/> is <see langword="true"/>, the code that calls this method does not have <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" qualify="true"/>, and the <paramref name="evidence"/> parameter has a host list that is not empty. </exception>
		<remarks>
			<para> Each evidence object in the specified evidence set
 is added to the assembly and host sets of the current
 evidence set, according to the sets from which it came.
 </para>
			<note type="note">
 This method
 does not perform a check to
 prevent adding duplicate types of evidence. Many assembly and host
 evidence objects can exist at the same time.
 
 </note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission"> for the ability to manipulate evidence when <see cref="System.Security.Policy.Evidence.Locked"/> is <see langword="true"/> and the <paramref name="evidence"/> parameter has a host list that is not empty. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" qualify="true"/></permission>
	</doc><doc for="Evidence.AddHost">
		<summary>
			<para> Adds the specified evidence supplied by the host to the evidence set.
 </para>
		</summary>
		<param name="id">Any evidence object. </param>
		<exception cref="System.Security.SecurityException"><see cref="System.Security.Policy.Evidence.Locked"/> is <see langword="true"/> and the code that calls this method does not have <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" qualify="true"/> .</exception>
		<remarks>
			<para>Use this method for evidence supplied by the host.</para>
			<note type="note">
 This method does not perform a
 check to prevent adding duplicate types of evidence. Many host
 evidence objects can exist at the same time.
 
 </note>
		</remarks>
		<permission cref="System.Security.Permissions.SecurityPermission">for the ability to manipulate evidence when <see cref="System.Security.Policy.Evidence.Locked"/> is <see langword="true"/>. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" qualify="true"/></permission>
	</doc><doc for="Evidence.IsSynchronized">
		<summary>
			<para> Gets a value indicating whether the evidence set is thread-safe.
 </para>
		</summary>
		<value>
			<para> Always <see langword="false"/> because thread-safe evidence sets are not supported.
 </para>
		</value>
		<remarks>
			<para> Application code does not normally use this
 property.
 </para>
		</remarks>
	</doc><doc for="Evidence.GetEnumerator">
		<summary>
			<para> Enumerates all evidence in the set, both that
 provided by the host and that provided by the
 assembly.
 </para>
		</summary>
		<returns>
			<para> An enumerator for evidence added by both
 the <see cref="System.Security.Policy.Evidence.AddHost"/> method and the <see cref="System.Security.Policy.Evidence.AddAssembly"/>
 method.
 </para>
		</returns>
	</doc><doc for="Evidence.Locked">
		<summary>
			<para>Gets or sets a value indicating whether the evidence is locked.</para>
		</summary>
		<value>
			<para><see langword="true"/> if the evidence is locked;
   otherwise, <see langword="false"/>. The default is <see langword="false"/>.</para>
		</value>
		<permission cref="System.Security.Permissions.SecurityPermission">for the ability to set this property. Associated enumeration: <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" qualify="true"/></permission>
	</doc><doc for="Evidence">
		<summary>
			<para> Defines the set of information
      that constitutes input to security policy decisions. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> Common forms of evidence include signatures and location
      of origin of code, but can potentially be anything. Objects of any type that are recognized by security policy represent
      evidence.
      </para>
			<para> Security policy is composed of code groups; a
      particular assembly (the basic unit of code for granting security permissions) is a
      member of a code group if it satisfies the code group's membership
      condition. Evidence is the set of inputs to policy that membership conditions use to determine to which code groups an assembly
      belongs.
      </para>
			<para>The <see cref="System.Security.Policy.Evidence"/> class is a collection (see <see cref="System.Collections.ICollection"/>) that
   holds a set of objects that represent evidence. This class holds two sets that
   correspond to the source of the evidence: host evidence and assembly
   evidence. </para>
			<para>Policy can get evidence from two different sources when evaluating permissions
   for code. </para>
			<list type="bullet"><item>
					<term>
						<paramref name="Host evidence"/> is provided
      by the host,
      and can only be provided by hosts that have been granted the <see cref="System.Security.Permissions.SecurityPermissionFlag.ControlEvidence"/>
      permission. Typically, this is evidence of the origin of the code and digital
      signatures on the assembly. Evidence about origin typically includes <see cref="System.Security.Policy.Url"/>,
   <see cref="System.Security.Policy.Site"/>, and <see cref="System.Security.Policy.Zone"/> evidence. Signatures refer to software 
      publisher (AuthentiCode X.509v3 signature) and strong name identities. Both
      kinds of digital signature-based identity are built into the assembly, but
      must be validated and passed to policy by the host; when loaded, the security
      system verifies the signature. The system then creates the appropriate
      evidence and passes it to policy only if the corresponding signature is valid.</term>
				</item>
				<item>
					<term>
						<paramref name="Assembly evidence"/> is part
      of the assembly itself. Developers or administrators can attach custom
      evidence to the assembly to extend the
      set of evidence for policy. Assembly evidence can only be added at the time of assembly generation, which occurs before
      the assembly is signed. The default
      policy of the security system ignores assembly-provided evidence, but policy can be extended to
      accept it.</term>
				</item>
			</list>
		</remarks>
		<example>
			<para>The following example demonstrates how to create new 
   <see cref="System.Security.Policy.Evidence"/> classes with both host evidence and 
      assembly evidence.</para>
			<codelink SampleID="Evidence_Evidence" SnippetID="1"/>
		</example>
	</doc>
	<doc for="Evidence.GetHostEnumerator">
		<summary>
			<para> Enumerates evidence supplied by the host.
      </para>
		</summary>
		<returns>
			<para> An enumerator for evidence added by the <see cref="System.Security.Policy.Evidence.AddHost"/> method.
   </para>
		</returns>
		<example>
			<para>The following example demonstrates the use of <see cref="System.Security.Policy.Evidence.GetHostEnumerator"/>.</para>
			<codelink SampleID="Evidence_Evidence" SnippetID="2"/>
		</example>
	</doc>
	<doc for="Evidence.GetAssemblyEnumerator">
		<summary>
			<para> Enumerates evidence provided by the assembly.
      </para>
		</summary>
		<returns>
			<para> An enumerator for evidence added by the <see cref="System.Security.Policy.Evidence.AddAssembly"/> method.
   </para>
		</returns>
		<example>
			<para>The following example demonstrates the use of <see cref="System.Security.Policy.Evidence.GetAssemblyEnumerator"/>.</para>
			<codelink SampleID="Evidence_Evidence" SnippetID="3"/>
		</example>
	</doc>
</docs>
