<docs>
	<doc for="ApplicationDirectoryMembershipCondition.ToXml1">
		<summary>
			<para>Creates an XML encoding of the security object and its 
       current state with the specified <see cref="System.Security.Policy.PolicyLevel"/>.</para>
		</summary>
		<param name="level">The policy level context for resolving named permission set references.</param>
		<returns>
			<para>An XML encoding of the security object, including any state
       information.</para>
		</returns>
	</doc>
	<doc for="ApplicationDirectoryMembershipCondition.ToString">
		<summary>
			<para>Creates and returns a string representation of the membership condition.</para>
		</summary>
		<returns>
			<para> A string representation of the state of the membership condition.</para>
		</returns>
	</doc><doc for="ApplicationDirectoryMembershipCondition.ToXml">
		<overload>
			<para>Creates an XML encoding of the security object and its current
      state.</para>
		</overload>
		<summary>
			<para>Creates an XML encoding of the security object and its current
      state.</para>
		</summary>
		<returns>
			<para>An XML encoding of the security object, including any state
      information.</para>
		</returns>
	</doc><doc for="ApplicationDirectoryMembershipCondition.GetHashCode">
		<summary>
			<para>Gets the hash code for the current membership condition.</para>
		</summary>
		<returns>
			<para>The hash code for the current membership condition.</para>
		</returns>
	</doc><doc for="ApplicationDirectoryMembershipCondition.Equals">
		<summary>
			<para>Determines whether the specified membership condition is
      an <see cref="System.Security.Policy.ApplicationDirectoryMembershipCondition"/>.</para>
		</summary>
		<param name="o"> The object to compare to <see cref="System.Security.Policy.ApplicationDirectoryMembershipCondition"/>.</param>
		<returns>
			<para><see langword="true"/> if the specified membership condition is an <see cref="System.Security.Policy.ApplicationDirectoryMembershipCondition"/>; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="ApplicationDirectoryMembershipCondition.ApplicationDirectoryMembershipCondition">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Policy.ApplicationDirectoryMembershipCondition"/>
class.</para>
		</summary>
		<remarks>
			<para> The membership condition tests whether the assembly
      URL evidence is a path within the directory specified by <see cref="System.Security.Policy.ApplicationDirectory"/>.</para>
		</remarks>
	</doc><doc for="ApplicationDirectoryMembershipCondition.FromXml">
		<overload>
			<para>Reconstructs a security object with a specified state from an XML
 encoding.</para>
		</overload>
		<summary>
			<para>Reconstructs a security object with a specified state from an XML
 encoding.</para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object.</param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="e"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The <paramref name="e"/> parameter is not a valid application directory membership condition element.</exception>
	</doc><doc for="ApplicationDirectoryMembershipCondition.FromXml1">
		<summary>
			<para>Reconstructs a security object with a specified state from an XML
 encoding.</para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object.</param>
		<param name="level">The policy level context, used to resolve named permission set references.</param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="e"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The <paramref name="e"/> parameter is not a valid application directory membership condition element.</exception>
	</doc><doc for="ApplicationDirectoryMembershipCondition.Check">
		<summary>
			<para>Determines whether the membership condition is satisfied by the specified evidence.</para>
		</summary>
		<param name="evidence">The evidence set against which to make the test.</param>
		<returns>
			<para><see langword="true"/> if the specified evidence
 satisfies the membership condition; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para>The <paramref name="evidence"/> parameter must contain 
 both <see cref="System.Security.Policy.ApplicationDirectory"/> evidence that specifies the application
 directory of the running application and <see cref="System.Security.Policy.Url"/> evidence that specifies
 the code base of the assembly. The code base specified by the <see cref="System.Security.Policy.Url"/>
 evidence must represent a path in the directory tree of the application
 directory specified by the <see cref="System.Security.Policy.ApplicationDirectory"/> evidence for this
 method to return <see langword="true"/>.</para>
		</remarks>
	</doc><doc for="ApplicationDirectoryMembershipCondition">
		<summary>
			<para> Determines whether an assembly belongs to a code group by testing its
      application directory. This class cannot be
      inherited.</para>
		</summary>
		<remarks>
			<para><see cref="System.Security.Policy.ApplicationDirectoryMembershipCondition"/>determines whether an <see cref="System.Security.Policy.ApplicationDirectory"/>
				<see cref="System.Security.Policy.ApplicationDirectory.Directory"/> property contains
the assembly URL evidence path. For example, if the <see cref="System.Security.Policy.ApplicationDirectory"/> is
C:\app1, then assemblies with URL evidence such as C:\app1,
C:\app1\main.aspx, C:\app1\folder1, or C:\app1\folder1\main1.aspx match this membership condition. Code not in the C:\app1 directory, or one of its subdirectories, fails this
membership condition test.</para>
			<para>Code without either <see cref="System.Security.Policy.ApplicationDirectory"/> or <see cref="System.Security.Policy.Url"/>
evidence always fails this membership condition test.</para>
		</remarks>
	</doc><doc for="ApplicationDirectoryMembershipCondition.Copy">
		<summary>
			<para>Creates an equivalent copy of the membership condition.</para>
		</summary>
		<returns>
			<para>A new, identical copy of the current membership condition.</para>
		</returns>
	</doc></docs>
