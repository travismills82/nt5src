<docs>
	<doc for="PublisherMembershipCondition.ToXml">
		<overload>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</overload>
		<summary>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</summary>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="PublisherMembershipCondition.FromXml">
		<overload>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</overload>
		<summary>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
	</doc><doc for="PublisherMembershipCondition.GetHashCode">
		<summary>
			<para>Gets the hash code for the current membership condition.</para>
		</summary>
		<returns>
			<para>The hash code for the current membership condition.</para>
		</returns>
	</doc><doc for="PublisherMembershipCondition.Equals">
		<summary>
			<para>Determines whether the publisher certificate from the specified
 object is equivalent to the publisher certificate contained in the
 current <see cref="System.Security.Policy.PublisherMembershipCondition"/>.</para>
		</summary>
		<param name="o">The object to compare to the current <see cref="System.Security.Policy.PublisherMembershipCondition"/>.</param>
		<returns>
			<para><see langword="true"/> if the 
 publisher
 certificate from the specified object is equivalent to
 the publisher certificate contained in the current <see cref="System.Security.Policy.PublisherMembershipCondition"/>; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para> If the two publisher certificates are equal, they represent the same <see cref="System.Security.Policy.Publisher"/>.</para>
		</remarks>
	</doc><doc for="PublisherMembershipCondition.ToString">
		<summary>
			<para> Creates and returns a string representation of the 
 <see cref="System.Security.Policy.PublisherMembershipCondition"/>.
 </para>
		</summary>
		<returns>
			<para> A representation of the 
 <see cref="System.Security.Policy.PublisherMembershipCondition"/>.
 </para>
		</returns>
	</doc><doc for="PublisherMembershipCondition.FromXml1">
		<summary>
			<para> Reconstructs a security object with a specified state from an XML
 encoding.
 </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
		<param name="level">The <see cref="System.Security.Policy.PolicyLevel"/> context, used to resolve <see cref="System.Security.NamedPermissionSet"/> references. </param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="e"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The <paramref name="e"/> parameter is not a valid membership condition element.</exception>
	</doc><doc for="PublisherMembershipCondition.Check">
		<summary>
			<para> Determines whether the
      specified evidence satisfies the membership condition.
      </para>
		</summary>
		<param name="evidence">The <see cref="System.Security.Policy.Evidence"/> against which to make the test. </param>
		<returns>
			<para><see langword="true"/> if the specified evidence satisfies
   the membership condition; otherwise, <see langword="false"/>.
   </para>
		</returns>
		<remarks>
			<para> This membership condition tests only <see cref="System.Security.Policy.Publisher"/> evidence.
   </para>
		</remarks>
	</doc><doc for="PublisherMembershipCondition.ToXml1">
		<summary>
			<para> Creates an XML encoding of the security object and its
      current state with the specified <see cref="System.Security.Policy.PolicyLevel"/>.
      </para>
		</summary>
		<param name="level">The <see cref="System.Security.Policy.PolicyLevel"/> context, which is used to resolve <see cref="System.Security.NamedPermissionSet"/> references. </param>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="PublisherMembershipCondition.Copy">
		<summary>
			<para> Creates an equivalent copy of the membership condition.
      </para>
		</summary>
		<returns>
			<para> A new, identical copy of the current membership condition.
      </para>
		</returns>
	</doc><doc for="PublisherMembershipCondition">
		<summary>
			<para> Determines whether an assembly belongs to a code group by
      testing its software publisher's Authenticode X.509v3 certificate. This class cannot be inherited.
      </para>
		</summary>
		<remarks>
			<para> A code assembly satisfies a publisher membership condition if that
      code is signed by the specified software publisher.
      </para>
		</remarks>
	</doc><doc for="PublisherMembershipCondition.PublisherMembershipCondition">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.PublisherMembershipCondition"/> class
   with the Authenticode X.509v3 certificate that determines
   membership.</para>
		</summary>
		<param name="certificate">An <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> that contains the software publisher's public key. </param>
		<remarks>
			<para> Code satisfies
      the membership condition if it is signed by the software publisher
      with the private key that corresponds to the specified public key
      certificate.
      </para>
		</remarks>
	</doc><doc for="PublisherMembershipCondition.Certificate">
		<summary>
			<para> Gets or sets the Authenticode X.509v3 certificate for which the membership condition tests.
      </para>
		</summary>
		<value>
			<para> The <see cref="System.Security.Cryptography.X509Certificates.X509Certificate"/> for which the membership condition tests.
   </para>
		</value>
	</doc></docs>
