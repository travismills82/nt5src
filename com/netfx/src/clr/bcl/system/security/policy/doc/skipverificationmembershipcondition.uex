<docs>
	<doc for="SkipVerificationMembershipCondition">
		<summary>
			<para>Determines whether an assembly can skip verification 
      based on evidence. This class cannot be inherited.</para>
		</summary>
	</doc><doc for="SkipVerificationMembershipCondition.SkipVerificationMembershipCondition">
		<summary>
			<para> Initializes a new instance of the <see cref="System.Security.Policy.SkipVerificationMembershipCondition"/> 
class.
</para>
		</summary>
	</doc><doc for="SkipVerificationMembershipCondition.ToString">
		<summary>
			<para>Creates and returns a string representation of the 
      membership condition.</para>
		</summary>
		<returns>
			<para>A string representation of the state of the membership condition.</para>
		</returns>
	</doc><doc for="SkipVerificationMembershipCondition.Copy">
		<summary>
			<para>Creates an equivalent instance of the membership condition.</para>
		</summary>
		<returns>
			<para>A new identical instance of the current membership condition.</para>
		</returns>
	</doc><doc for="SkipVerificationMembershipCondition.ToXml">
		<overload>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</overload>
		<summary>
			<para> Creates an XML encoding of the security object and its current
      state.
      </para>
		</summary>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="SkipVerificationMembershipCondition.FromXml">
		<overload>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</overload>
		<summary>
			<para> Reconstructs a security object with a specified state from an XML encoding.
      </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
	</doc><doc for="SkipVerificationMembershipCondition.ToXml1">
		<summary>
			<para> Creates an XML encoding of the security object and its
      current state with the specified <see cref="System.Security.Policy.PolicyLevel"/>.
      </para>
		</summary>
		<param name="level">The policy level context for resolving named permission set references. </param>
		<returns>
			<para> An XML encoding of the security object, including any state
      information.
      </para>
		</returns>
	</doc><doc for="SkipVerificationMembershipCondition.FromXml1">
		<summary>
			<para> Reconstructs a security object with a specified state from an XML
      encoding.
      </para>
		</summary>
		<param name="e">The XML encoding to use to reconstruct the security object. </param>
		<param name="level">The policy level context, used to resolve named permission set references. </param>
		<exception cref="System.ArgumentNullException"><para>The <paramref name="e"/> parameter is <see langword="null"/>.</para></exception>
		<exception cref="System.ArgumentException">The <paramref name="e"/> parameter is not a valid membership condition element.</exception>
	</doc><doc for="SkipVerificationMembershipCondition.GetHashCode">
		<summary>
			<para>Gets the hash code for the current membership condition.</para>
		</summary>
		<returns>
			<para>The hash code for the current membership condition.</para>
		</returns>
	</doc><doc for="SkipVerificationMembershipCondition.Equals">
		<summary>
			<para>Determines whether the specified membership condition is 
      a <see cref="System.Security.Policy.SkipVerificationMembershipCondition"/>.</para>
		</summary>
		<param name="o">The evidence object to compare to <see cref="System.Security.Policy.SkipVerificationMembershipCondition"/>.</param>
		<returns>
			<para><see langword="true"/> if the specified membership condition is a <see cref="System.Security.Policy.SkipVerificationMembershipCondition"/>; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc><doc for="SkipVerificationMembershipCondition.Check">
		<summary>
			<para>Determines whether the membership condition is satisfied
 by the specified evidence.</para>
		</summary>
		<param name="evidence">The evidence set against which to make the test.</param>
		<returns>
			<para><see langword="true"/> if the 
 specified evidence contains a
 request to skip verification; otherwise, <see langword="false"/>.</para>
		</returns>
	</doc></docs>
