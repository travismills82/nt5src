<docs>
	<doc for="ApplicationDirectory.GetHashCode">
		<summary>
			<para>Gets the hash code of the current application directory.</para>
		</summary>
		<returns>
			<para>The hash code of the current application directory.</para>
		</returns>
	</doc>
	<doc for="ApplicationDirectory.Directory">
		<summary>
			<para> Gets the path of the application directory.</para>
		</summary>
		<value>
			<para>The path of the application directory.</para>
		</value>
	</doc><doc for="ApplicationDirectory.ToString">
		<summary>
			<para>Gets a string representation of the state of
      the <see cref="System.Security.Policy.ApplicationDirectory"/> evidence
      object.</para>
		</summary>
		<returns>
			<para>A representation of the state of the <see cref="System.Security.Policy.ApplicationDirectory"/> evidence
   object.</para>
		</returns>
		<remarks>
			<para> This method is useful during debugging to get an easy-to-read representation
      of the object.</para>
		</remarks>
	</doc><doc for="ApplicationDirectory.IBuiltInEvidence.OutputToBuffer">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationDirectory.IBuiltInEvidence.InitFromBuffer">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationDirectory.IBuiltInEvidence.GetRequiredSize">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationDirectory.ApplicationDirectory">
		<summary>
			<para>Initializes a new instance of the <see cref="System.Security.Policy.ApplicationDirectory"/>
class.</para>
		</summary>
		<param name="name">The path of the application directory.</param>
		<exception cref="System.ArgumentNullException">The <paramref name="name"/> parameter is <see langword="null"/>.</exception>
		<remarks>
			<para> Application code does not need to create instances of this
      class.</para>
		</remarks>
	</doc><doc for="ApplicationDirectory.Copy">
		<summary>
			<para> Creates a new copy of the <see cref="System.Security.Policy.ApplicationDirectory"/>.
   </para>
		</summary>
		<returns>
			<para> A new, identical copy of the <see cref="System.Security.Policy.ApplicationDirectory"/>.
   </para>
		</returns>
	</doc><doc for="ApplicationDirectory.char">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationDirectory.char1">
		<summary>
			<para>[To be supplied.]</para>
		</summary>
	</doc><doc for="ApplicationDirectory">
		<summary>
			<para> Provides the application directory as evidence for policy evaluation. This class cannot
      be inherited.</para>
		</summary>
		<remarks>
			<para> The domain host can associate a file directory with an application domain. For an ASP.NET-based server application,
      this is typically set to the directory that contains the base page of the application.
      Microsoft Internet Explorer Web applications do not have an application directory. The evidence for policy
      evaluation is only provided when the application domain is associated with a file
      directory.</para>
		</remarks>
	</doc><doc for="ApplicationDirectory.Equals">
		<summary>
			<para>Determines whether instances of the same type of an evidence object are equivalent.</para>
		</summary>
		<param name="o">An object of same type as the current evidence object.</param>
		<returns>
			<para><see langword="true"/> if the two instances are
   equivalent; otherwise, <see langword="false"/>.</para>
		</returns>
		<remarks>
			<para> The directory values of the two instances must match exactly. Equivalent
      noncanonical paths are not resolved. For example, C:\app and C:\temp\...\app
      are not equal directory values.</para>
		</remarks>
	</doc></docs>
