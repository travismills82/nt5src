// CerClient.idl : IDL source for CerClient.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (CerClient.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"
	

	[
		object,
		uuid(54F6D251-AD78-4B78-A6E7-863E362A1F0C),
		dual,
		helpstring("ICerUpload Interface"),
		pointer_default(unique)
	]
	interface ICerUpload : IDispatch
	{
		[id(1), helpstring("method Upload")] HRESULT Upload([in]BSTR *Path, [in]BSTR *TransID, [in]BSTR *FileName, [in]BSTR *IncidentID, [in]BSTR *RedirParam, [out,retval]VARIANT *RetCode);
		[id(2), helpstring("method Browse")] HRESULT Browse([in]BSTR *WindowTitle, [out,retval]VARIANT *Path);
		[id(3), helpstring("method GetFileCount")] HRESULT GetFileCount([in]BSTR *bstrSharePath, [in]BSTR *bstrTransactID, [in]VARIANT *iMaxCount, [out,retval]VARIANT *RetVal);
		[id(4), helpstring("method GetFileNames")] HRESULT GetFileNames([in]BSTR *Path, [in]BSTR *TransID, [in]VARIANT *Count, [out,retval]VARIANT *FileList);
	};

[
	uuid(012B3B9C-FB7D-4793-A624-8C5CBFCE6B8D),
	version(1.0),
	helpstring("CerClient 1.0 Type Library")
]
library CERCLIENTLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(C3397F18-DAC9-42C3-BC3B-7853A84A8CB9),
		helpstring("CerUpload Class")
	]
	coclass CerUpload
	{
		[default] interface ICerUpload;
	};
};
