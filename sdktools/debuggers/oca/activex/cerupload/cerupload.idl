// CERUpload.idl : IDL source for CERUpload.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (CERUpload.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"
	

	[
		object,
		uuid(26D7830B-20F6-4462-A4EA-573A60791F0E),
		dual,
		helpstring("ICerClient Interface"),
		pointer_default(unique)
	]
	interface ICerClient : IDispatch
	{
		[id(1), helpstring("method GetFileCount")] HRESULT GetFileCount([in] BSTR *bstrSharePath, [in] BSTR *bstrTransactID, [in] VARIANT *iMaxCount, [out,retval] VARIANT *RetVal);
		[id(3), helpstring("method Upload")] HRESULT Upload([in] BSTR *Path, [in] BSTR *TransID, [in]BSTR *FileName, [in] BSTR*IncidentID, [in] BSTR *RedirParam, [out,retval] VARIANT *RetCode);
		[id(4), helpstring("method RetryTransaction")] HRESULT RetryTransaction([in] BSTR *Path, [in]BSTR *TransID, [in] BSTR *FileName, [out,retval] VARIANT * RetVal);
		[id(5), helpstring("method RetryFile")] HRESULT RetryFile([in] BSTR *Path, [in] BSTR *TransID, [in] BSTR FileName, [out,retval] VARIANT * RetCode);
		[id(6), helpstring("method GetFileNames")] HRESULT GetFileNames([in]BSTR *Path, [in]BSTR *TransID, [in] VARIANT *Count, [out,retval] VARIANT *FileList);
		[id(7), helpstring("method Browse")] HRESULT Browse([in]BSTR *WindowTitle, [out,retval] VARIANT *Path);
		[id(8), helpstring("method GetCompuerNames")] HRESULT GetCompuerNames([in]BSTR *Path, [in]BSTR *TransID,[in]BSTR *FileList,[out,retval]VARIANT *RetFileList);
		[id(9), helpstring("method GetAllComputerNames")] HRESULT GetAllComputerNames([in]BSTR *Path, [in]BSTR *TransID, [in] BSTR* FileList, [out,retval] VARIANT *ReturnList);
		[id(10), helpstring("method RetryFile1")] HRESULT RetryFile1([in]BSTR *Path,[in]BSTR *TransID,[in]BSTR *FileName,[in]BSTR *IncidentID, [in]BSTR *RedirParam,[out,retval] VARIANT *RetCode);
		[id(11), helpstring("method EndTransaction")] HRESULT EndTransaction([in]BSTR *SharePath,[in]BSTR *TransID, [out,retval] VARIANT *RetCode);
		[id(12), helpstring("method Upload1")] HRESULT Upload1([in]BSTR *Path, [in]BSTR *TransID, [in]BSTR *FileName, [in]BSTR *IncidentID, [in]BSTR *RedirParam, [in]BSTR *Type, [out,retval] VARIANT *RetCode);
		[id(13), helpstring("method GetSuccessCount")] HRESULT GetSuccessCount([in]BSTR *Path, [in]BSTR *TransID, [out,retval] VARIANT *RetVal);
		
	};

[
	uuid(A3800A93-4BC1-4E96-A3F9-740EF8623B23),
	version(1.0),
	helpstring("CERUpload 1.0 Type Library")
]
library CERUPLOADLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(35D339D5-756E-4948-860E-30B6C3B4494A),
		helpstring("CerClient Class")
	]
	coclass CerClient
	{
		[default] interface ICerClient;
	};
};
