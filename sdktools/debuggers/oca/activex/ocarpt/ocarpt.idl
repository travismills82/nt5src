// Ocarpt.idl : IDL source for Ocarpt.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (Ocarpt.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
#include "olectl.h"


   [
      object,
      uuid(53E2D7B5-EC6C-4FF7-80F2-1CE5FD6544CE),
      dual,
      helpstring("IOcarptMain Interface"),
      pointer_default(unique)
   ]
   interface IOcarptMain : IDispatch
   {
      [id(1), helpstring("method Upload")] HRESULT Upload([in] BSTR *SourceFile, [in]BSTR *DestFile, [in]BSTR *Langage, [in] BSTR *OptionCode, [in] int ConvetToMini, [out,retval] VARIANT *ReturnCode);
      [id(4), helpstring("method Search")] HRESULT Search([out,retval] VARIANT *pvFileList);
      [id(6), helpstring("method Browse")] HRESULT Browse([in] BSTR *pbstrTitle, [in]BSTR *Lang, [out,retval] VARIANT *Path);
      [id(7), helpstring("method ValidateDump")] HRESULT ValidateDump( [in] BSTR *FileName, [out,retval]VARIANT *Result);
      [id(8), helpstring("method RetrieveFileContents")] HRESULT RetrieveFileContents([in]BSTR *FileName,  [out,retval] VARIANT *pvContents);
      [id(9), helpstring("method GetUploadStatus")]  HRESULT GetUploadStatus([out,retval] VARIANT *PercentDone);
      [id(10), helpstring("method GetUploadResult")] HRESULT GetUploadResult([out,retval] VARIANT *UploadResult);
      [id(11), helpstring("method CancelUpload")] HRESULT CancelUpload([out,retval] VARIANT *ReturnCode);

   };


[
   uuid(44550461-B572-48D9-96A0-0AE2A10F45D6),
   version(1.0),
   helpstring("Ocarpt 1.0 Type Library")
]
library OCARPTLib
{
   importlib("stdole32.tlb");
   importlib("stdole2.tlb");

   [
      uuid(D68DAEED-C2A6-4C6F-9365-4676B173D8EF),
      helpstring("OcarptMain Class")
   ]
   coclass OcarptMain
   {
      [default] interface IOcarptMain;
   };
};
